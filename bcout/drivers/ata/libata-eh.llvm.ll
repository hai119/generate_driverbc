; ModuleID = '../bcout/drivers/ata/libata-eh.llvm.bc'
source_filename = "drivers/ata/libata-eh.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.ata_eh_cmd_timeout_ent = type { i8*, i64* }
%struct.anon.85 = type { i8, i8* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.67, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon, [0 x i64] }
%struct.anon = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.0, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.0 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.page = type { i64, %union.anon.1, %union.anon.49, %struct.atomic_t, [8 x i8] }
%union.anon.1 = type { %struct.anon.2 }
%struct.anon.2 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.80, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.81, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.82, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.83, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.23, %struct.list_head, %struct.list_head, %union.anon.24 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.4, i8* }
%union.anon.4 = type { i64 }
%struct.lockref = type { %union.anon.6 }
%union.anon.6 = type { %struct.anon.7 }
%struct.anon.7 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.vfsmount = type opaque
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%union.anon.23 = type { %struct.list_head }
%union.anon.24 = type { %struct.hlist_node }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.8, i32 }
%union.anon.8 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.9, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.9 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.poll_table_struct = type opaque
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type opaque
%struct.irq_domain_chip_generic = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.block_device_operations = type { i32 (%struct.bio*)*, i32 (%struct.block_device*, i32)*, void (%struct.gendisk*, i32)*, i32 (%struct.block_device*, i64, %struct.page*, i32)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.gendisk*, i32)*, void (%struct.gendisk*)*, i32 (%struct.gendisk*)*, i32 (%struct.block_device*, %struct.hd_geometry*)*, void (%struct.block_device*, i64)*, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)*, i8* (%struct.gendisk*, i16*)*, %struct.module*, %struct.pr_ops* }
%struct.bio = type { %struct.bio*, %struct.gendisk*, i32, i16, i16, i16, i8, i8, %struct.atomic_t, %struct.bvec_iter, void (%struct.bio*)*, i8*, %union.anon.10, i16, i16, %struct.atomic_t, %struct.bio_vec*, %struct.bio_set*, [0 x %struct.bio_vec] }
%struct.bvec_iter = type { i64, i32, i32, i32 }
%union.anon.10 = type { %struct.bio_integrity_payload* }
%struct.bio_integrity_payload = type { %struct.bio*, %struct.bvec_iter, i16, i16, i16, i16, %struct.bvec_iter, %struct.work_struct, %struct.bio_vec*, [0 x %struct.bio_vec] }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.bio_set = type { %struct.kmem_cache*, i32, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.spinlock, %struct.bio_list, %struct.work_struct, %struct.workqueue_struct* }
%struct.kmem_cache = type opaque
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }
%struct.bio_list = type { %struct.bio*, %struct.bio* }
%struct.hd_geometry = type opaque
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.pr_ops = type opaque
%struct.request_queue = type { %struct.request*, %struct.elevator_queue*, %struct.percpu_ref, %struct.blk_queue_stats*, %struct.rq_qos*, %struct.blk_mq_ops*, %struct.blk_mq_ctx*, i32, %struct.blk_mq_hw_ctx**, i32, %struct.backing_dev_info*, i8*, i64, %struct.atomic_t, i32, i32, %struct.spinlock, %struct.kobject, %struct.kobject*, %struct.blk_integrity, %struct.device*, i32, i32, i64, i32, i32, i32, i32, %struct.blk_stat_callback*, [16 x %struct.blk_rq_stat], %struct.timer_list, %struct.work_struct, %struct.atomic_t, %struct.list_head, %struct.queue_limits, i32, i32, i32, i32, %struct.mutex, %struct.blk_flush_queue*, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.bsg_class_device, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, %struct.blk_mq_tag_set*, %struct.list_head, %struct.bio_set, %struct.dentry*, i8, i64, [5 x i64] }
%struct.request = type { %struct.request_queue*, %struct.blk_mq_ctx*, %struct.blk_mq_hw_ctx*, i32, i32, i32, i32, i32, i64, %struct.bio*, %struct.bio*, %struct.list_head, %union.anon.12, %union.anon.13, %union.anon.14, %struct.gendisk*, %struct.hd_struct*, i64, i64, i16, i16, i16, i16, i16, i32, %struct.refcount_struct, i32, i64, %union.anon.19, void (%struct.request*, i8)*, i8* }
%struct.blk_mq_hw_ctx = type { %struct.anon.11, %struct.delayed_work, [1 x %struct.cpumask], i32, i32, i64, i8*, %struct.request_queue*, %struct.blk_flush_queue*, i8*, %struct.sbitmap, %struct.blk_mq_ctx*, i32, i16, i16, %struct.blk_mq_ctx**, %struct.spinlock, %struct.wait_queue_entry, %struct.atomic_t, %struct.blk_mq_tags*, %struct.blk_mq_tags*, i64, i64, [7 x i64], i32, i32, %struct.atomic_t, %struct.atomic_t, %struct.hlist_node, %struct.hlist_node, %struct.kobject, i64, i64, i64, %struct.list_head, [0 x %struct.srcu_struct] }
%struct.anon.11 = type { %struct.spinlock, %struct.list_head, i64 }
%struct.sbitmap = type { i32, i32, i32, %struct.sbitmap_word* }
%struct.sbitmap_word = type { i64, i64, i64, %struct.spinlock }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.blk_mq_tags = type opaque
%struct.srcu_struct = type { [2 x i16], i16, i8, i8, %struct.swait_queue_head, %struct.callback_head*, %struct.callback_head**, %struct.work_struct }
%union.anon.12 = type { %struct.hlist_node }
%union.anon.13 = type { %struct.rb_node }
%union.anon.14 = type { %struct.anon.18 }
%struct.anon.18 = type { i32, %struct.list_head, void (%struct.request*, i8)* }
%union.anon.19 = type { %struct.__call_single_data }
%struct.__call_single_data = type { %union.anon.20, void (i8*)*, i8* }
%union.anon.20 = type { %struct.__call_single_node }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.21, i16, i16 }
%struct.llist_node = type { %struct.llist_node* }
%union.anon.21 = type { i32 }
%struct.elevator_queue = type { %struct.elevator_type*, i8*, %struct.kobject, %struct.mutex, i8, [64 x %struct.hlist_head] }
%struct.elevator_type = type { %struct.kmem_cache*, %struct.elevator_mq_ops, i64, i64, %struct.elv_fs_entry*, i8*, i8*, i32, %struct.module*, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { i32 (%struct.request_queue*, %struct.elevator_type*)*, void (%struct.elevator_queue*)*, i32 (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*, %struct.request*, %struct.bio*)*, i1 (%struct.blk_mq_hw_ctx*, %struct.bio*, i32)*, i32 (%struct.request_queue*, %struct.request**, %struct.bio*)*, void (%struct.request_queue*, %struct.request*, i32)*, void (%struct.request_queue*, %struct.request*, %struct.request*)*, void (i32, %struct.blk_mq_alloc_data*)*, void (%struct.request*)*, void (%struct.request*)*, void (%struct.blk_mq_hw_ctx*, %struct.list_head*, i1)*, %struct.request* (%struct.blk_mq_hw_ctx*)*, i1 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*, i64)*, void (%struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, void (%struct.io_cq*)*, void (%struct.io_cq*)* }
%struct.blk_mq_alloc_data = type opaque
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.16, %union.anon.17, i32 }
%union.anon.16 = type { %struct.list_head }
%union.anon.17 = type { %struct.hlist_node }
%struct.elv_fs_entry = type { %struct.attribute, i64 (%struct.elevator_queue*, i8*)*, i64 (%struct.elevator_queue*, i8*, i64)* }
%struct.blk_queue_stats = type opaque
%struct.rq_qos = type opaque
%struct.blk_mq_ops = type { i8 (%struct.blk_mq_hw_ctx*, %struct.blk_mq_queue_data*)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*)*, void (%struct.request_queue*)*, i32 (%struct.request*, i1)*, i32 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*)*, i32 (%struct.blk_mq_hw_ctx*, i8*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, i32 (%struct.blk_mq_tag_set*, %struct.request*, i32, i32)*, void (%struct.blk_mq_tag_set*, %struct.request*, i32)*, void (%struct.request*)*, void (%struct.request*)*, i1 (%struct.request_queue*)*, i32 (%struct.blk_mq_tag_set*)* }
%struct.blk_mq_queue_data = type { %struct.request*, i8 }
%struct.blk_mq_ctx = type opaque
%struct.blk_integrity = type { %struct.blk_integrity_profile*, i8, i8, i8, i8 }
%struct.blk_integrity_profile = type { i8 (%struct.blk_integrity_iter*)*, i8 (%struct.blk_integrity_iter*)*, void (%struct.request*)*, void (%struct.request*, i32)*, i8* }
%struct.blk_integrity_iter = type { i8*, i8*, i64, i32, i16, i8* }
%struct.blk_stat_callback = type opaque
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.queue_limits = type { i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.blk_flush_queue = type opaque
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.bsg_class_device = type { %struct.device*, i32, %struct.request_queue*, %struct.bsg_ops* }
%struct.bsg_ops = type { i32 (%struct.sg_io_v4*)*, i32 (%struct.request*, %struct.sg_io_v4*, i32)*, i32 (%struct.request*, %struct.sg_io_v4*)*, void (%struct.request*)* }
%struct.sg_io_v4 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.blk_mq_tag_set = type { [3 x %struct.blk_mq_queue_map], i32, %struct.blk_mq_ops*, i32, i32, i32, i32, i32, i32, i32, i8*, %struct.atomic_t, %struct.sbitmap_queue, %struct.sbitmap_queue, %struct.blk_mq_tags**, %struct.mutex, %struct.list_head }
%struct.blk_mq_queue_map = type { i32*, i32, i32 }
%struct.sbitmap_queue = type { %struct.sbitmap, i32*, i32, %struct.atomic_t, %struct.sbq_wait_state*, %struct.atomic_t, i8, i32 }
%struct.sbq_wait_state = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.timer_rand_state = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.lockdep_map = type {}
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.80 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%union.anon.81 = type { %struct.callback_head }
%union.anon.82 = type { %struct.file_operations* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.25 }
%union.anon.25 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.iov_iter = type opaque
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.26 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.26 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%union.anon.83 = type { %struct.pipe_inode_info* }
%struct.fsnotify_mark_connector = type opaque
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.swap_info_struct = type opaque
%union.anon.49 = type { %struct.atomic_t }
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.atomic64_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.kioctx_table = type opaque
%struct.user_namespace = type opaque
%struct.file = type { %union.anon.3, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.3 = type { %struct.callback_head }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.mmu_notifier_subscriptions = type opaque
%struct.atomic_t = type { i32 }
%struct.uprobes_state = type {}
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.50 }
%union.anon.50 = type { %struct.anon.51 }
%struct.anon.51 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.36 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.36 = type { %struct.callback_head }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.28, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.29, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.30, %union.anon.34, %struct.key_restriction* }
%union.anon.28 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.29 = type { i64 }
%union.anon.30 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.31, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.31 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.34 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.spinlock = type { %union.anon }
%union.anon = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.blk_plug = type { %struct.list_head, %struct.list_head, i16, i8, i8 }
%struct.reclaim_state = type opaque
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i64, i64, %struct.kref, i32, i32, i32, i32, %struct.atomic64_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, %struct.device*, [64 x i8], %struct.device*, %struct.timer_list }
%struct.bdi_writeback = type { %struct.backing_dev_info*, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, [4 x %struct.percpu_counter], i64, i64, i64, i64, i64, i64, i64, i64, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, i64, %struct.list_head }
%struct.percpu_counter = type { i64 }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.55 }
%struct.anon.55 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.59 }
%struct.anon.59 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.rseq = type { i32, i32, %union.anon.66, i32, [12 x i8] }
%union.anon.66 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.67 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.68, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.71 }
%union.anon.68 = type { %struct.anon.69 }
%struct.anon.69 = type { i64, i64 }
%union.anon.71 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.ata_eh_info = type { %struct.ata_device*, i32, i32, i32, [2 x i32], i32, i32, [80 x i8], i32 }
%struct.ata_device = type { %struct.ata_link*, i32, i32, i64, %struct.scsi_device*, i8*, %union.acpi_object*, i32, %struct.device, i64, i64, i32, i64, i8, i8, i8, i32, i32, i32, i32, i64, i64, i64, i16, i16, i16, [58 x i8], %union.anon.79, [8 x i8], [20 x i8], [64 x i8], i32, i32, i32, i32, i32, %struct.ata_ering, [8 x i8] }
%struct.ata_link = type { %struct.ata_port*, i32, %struct.device, i32, i32, i32, i32, i32, i32, i32, i32, %struct.ata_eh_info, %struct.ata_eh_context, [16 x i8], [2 x %struct.ata_device], i64, [56 x i8] }
%struct.ata_port = type { %struct.Scsi_Host*, %struct.ata_port_operations*, %struct.spinlock*, i64, i32, i32, i32, i32, %struct.ata_ioports, i8, i8, %struct.ata_link*, %struct.delayed_work, %struct.ata_bmdma_prd*, i64, i32, i32, i32, i32, [33 x %struct.ata_queued_cmd], i64, i64, i32, i32, [8 x i8], %struct.ata_link, %struct.ata_link*, i32, %struct.ata_link*, %struct.ata_link*, %struct.ata_port_stats, %struct.ata_host*, %struct.device*, %struct.device, %struct.mutex, %struct.delayed_work, %struct.work_struct, i32, i32, %struct.list_head, %struct.wait_queue_head, i32, %struct.completion, %struct.pm_message, i32, %struct.timer_list, i64, i64, i32, i8*, %struct.ata_acpi_gtm, [4 x i8], [512 x i8] }
%struct.Scsi_Host = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, %struct.spinlock*, %struct.mutex, %struct.list_head, %struct.task_struct*, %struct.completion*, %struct.wait_queue_head, %struct.scsi_host_template*, %struct.scsi_transport_template*, %struct.blk_mq_tag_set, %struct.atomic_t, i32, i32, i32, i32, i64, i32, i32, i64, i32, i16, i32, i32, i16, i16, i16, i32, i32, i64, i64, i32, i16, [20 x i8], %struct.workqueue_struct*, %struct.workqueue_struct*, i32, i32, i8, i64, i64, i8, i8, i32, i32, %struct.device, %struct.device, i8*, %struct.device*, [0 x i64] }
%struct.scsi_host_template = type { %struct.module*, i8*, i8* (%struct.Scsi_Host*)*, i32 (%struct.scsi_device*, i32, i8*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, %struct.scsi_cmnd*)*, void (%struct.Scsi_Host*, i16)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.scsi_device*)*, i32 (%struct.scsi_device*)*, void (%struct.scsi_device*)*, i32 (%struct.scsi_target*)*, void (%struct.scsi_target*)*, i32 (%struct.Scsi_Host*, i64)*, void (%struct.Scsi_Host*)*, i32 (%struct.scsi_device*, i32)*, i32 (%struct.Scsi_Host*)*, i1 (%struct.request*)*, i32 (%struct.scsi_device*, %struct.block_device*, i64, i32*)*, void (%struct.scsi_device*)*, i32 (%struct.seq_file*, %struct.Scsi_Host*)*, i32 (%struct.Scsi_Host*, i8*, i32)*, i32 (%struct.scsi_cmnd*)*, i32 (%struct.Scsi_Host*, i32)*, i8*, %struct.proc_dir_entry*, i32, i32, i16, i16, i32, i32, i64, i64, i16, i8, i32, i8, i32, %struct.device_attribute**, %struct.device_attribute**, %struct.attribute_group**, i64, i32, %struct.scsi_host_cmd_pool*, i32 }
%struct.scsi_cmnd = type { %struct.scsi_request, %struct.scsi_device*, %struct.list_head, %struct.delayed_work, %struct.callback_head, i32, i64, i32, i32, i8, i8, i8, i16, i32, i8*, %struct.scsi_data_buffer, %struct.scsi_data_buffer*, i32, i32, %struct.request*, i8*, void (%struct.scsi_cmnd*)*, %struct.scsi_pointer, i8*, i32, i32, i64, i8, i32 }
%struct.scsi_request = type { [16 x i8], i8*, i16, i32, i32, i32, i32, i8* }
%struct.scsi_data_buffer = type { %struct.sg_table, i32 }
%struct.sg_table = type { %struct.scatterlist*, i32, i32 }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.scsi_pointer = type { i8*, i32, %struct.scatterlist*, i32, i64, i32, i32, i32, i32, i32 }
%struct.scsi_target = type { %struct.scsi_device*, %struct.list_head, %struct.list_head, %struct.device, %struct.kref, i32, i32, i8, %struct.atomic_t, %struct.atomic_t, i32, i32, i8, i32, i8*, [0 x i64] }
%struct.proc_dir_entry = type opaque
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.scsi_host_cmd_pool = type opaque
%struct.scsi_transport_template = type opaque
%struct.ata_port_operations = type { i32 (%struct.ata_queued_cmd*)*, i32 (%struct.ata_queued_cmd*)*, i32 (%struct.ata_queued_cmd*)*, i32 (%struct.ata_queued_cmd*)*, i1 (%struct.ata_queued_cmd*)*, i32 (%struct.ata_port*)*, i64 (%struct.ata_device*, i64)*, void (%struct.ata_port*, %struct.ata_device*)*, void (%struct.ata_port*, %struct.ata_device*)*, i32 (%struct.ata_link*, %struct.ata_device**)*, i32 (%struct.ata_device*, %struct.ata_taskfile*, i16*)*, void (%struct.ata_device*)*, void (%struct.ata_port*)*, void (%struct.ata_port*)*, i32 (%struct.ata_link*, i64)*, i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)*, void (%struct.ata_link*, i32*)*, i32 (%struct.ata_link*, i64)*, i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)*, void (%struct.ata_link*, i32*)*, void (%struct.ata_port*)*, void (%struct.ata_port*)*, void (%struct.ata_queued_cmd*)*, void (%struct.ata_port*)*, void (%struct.ata_port*)*, i32 (%struct.ata_link*, i32, i32*)*, i32 (%struct.ata_link*, i32, i32)*, void (%struct.ata_port*)*, void (%struct.ata_port*)*, i32 (%struct.ata_link*, i32, i32)*, i32 (%struct.ata_port*, i32)*, i32 (%struct.ata_port*)*, i32 (%struct.ata_port*)*, void (%struct.ata_port*)*, void (%struct.ata_host*)*, void (%struct.ata_port*, i32)*, void (%struct.ata_port*, i8)*, i8 (%struct.ata_port*)*, i8 (%struct.ata_port*)*, void (%struct.ata_port*, %struct.ata_taskfile*)*, void (%struct.ata_port*, %struct.ata_taskfile*)*, void (%struct.ata_port*, %struct.ata_taskfile*)*, i32 (%struct.ata_queued_cmd*, i8*, i32, i32)*, void (%struct.ata_port*)*, i1 (%struct.ata_port*)*, void (%struct.ata_port*)*, void (%struct.ata_queued_cmd*)*, void (%struct.ata_queued_cmd*)*, void (%struct.ata_queued_cmd*)*, void (%struct.ata_queued_cmd*)*, i8 (%struct.ata_port*)*, i64 (%struct.ata_port*, i8*)*, i64 (%struct.ata_port*, i8*, i64)*, i64 (%struct.ata_device*, i8*)*, i64 (%struct.ata_device*, i32)*, i64 (%struct.ata_port*, i32, i64)*, void (%struct.ata_port*)*, void (%struct.ata_port*)*, %struct.ata_port_operations* }
%struct.ata_queued_cmd = type { %struct.ata_port*, %struct.ata_device*, %struct.scsi_cmnd*, void (%struct.scsi_cmnd*)*, %struct.ata_taskfile, [16 x i8], i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.scatterlist, %struct.scatterlist*, %struct.scatterlist*, i32, i32, %struct.ata_taskfile, void (%struct.ata_queued_cmd*)*, i8*, i8* }
%struct.ata_taskfile = type { i64, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32 }
%struct.ata_ioports = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.ata_bmdma_prd = type { i32, i32 }
%struct.ata_port_stats = type { i64, i64, i64 }
%struct.ata_host = type { %struct.spinlock, %struct.device*, i8**, i32, i32, i8*, %struct.ata_port_operations*, i64, %struct.kref, %struct.mutex, %struct.task_struct*, %struct.ata_port*, [0 x %struct.ata_port*] }
%struct.ata_acpi_gtm = type { [2 x %struct.ata_acpi_drive], i32 }
%struct.ata_acpi_drive = type { i32, i32 }
%struct.ata_eh_context = type { %struct.ata_eh_info, [2 x i32], [2 x [6 x i32]], [2 x i32], i32, i32, i32, [2 x i8], i64 }
%struct.scsi_device = type { %struct.Scsi_Host*, %struct.request_queue*, %struct.list_head, %struct.list_head, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, %struct.list_head, i16, i16, i16, i16, i64, i64, i64, i32, i32, i64, i32, i32, i8*, i8, i8, i8, %struct.mutex, i8, i8*, i8*, i8*, i8*, %struct.scsi_vpd*, %struct.scsi_vpd*, %struct.scsi_vpd*, %struct.scsi_vpd*, i8, %struct.scsi_target*, i64, i32, [6 x i8], i8, %struct.atomic_t, [1 x i64], [1 x i64], %struct.list_head, %struct.work_struct, i32, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.device, %struct.device, %struct.execute_work, %struct.work_struct, %struct.scsi_device_handler*, i8*, i64, i8*, i8, %struct.mutex, i32, %struct.task_struct*, [0 x i64] }
%struct.scsi_vpd = type { %struct.callback_head, i32, [0 x i8] }
%struct.execute_work = type { %struct.work_struct }
%struct.scsi_device_handler = type opaque
%union.acpi_object = type { %struct.anon.77 }
%struct.anon.77 = type { i32, i32, i64, i32 }
%union.anon.79 = type { [128 x i32] }
%struct.ata_ering = type { i32, [32 x %struct.ata_ering_entry] }
%struct.ata_ering_entry = type { i32, i32, i64 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.84, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.pcie_link_state = type opaque
%struct.pci_vpd = type opaque
%union.anon.84 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.speed_down_verdict_arg = type { i64, i32, [8 x i32] }

@.str = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.1 = private unnamed_addr constant [24 x i8] c"drivers/ata/libata-eh.c\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"m\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"i\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"%s %s%llu@0x%llx\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"%s 0x%llx\00", align 1
@ata_eh_cmd_timeout_table = internal constant [6 x %struct.ata_eh_cmd_timeout_ent] [%struct.ata_eh_cmd_timeout_ent { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.compoundliteral, i32 0, i32 0), i64* getelementptr inbounds ([4 x i64], [4 x i64]* @ata_eh_identify_timeouts, i32 0, i32 0) }, %struct.ata_eh_cmd_timeout_ent { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.compoundliteral.121, i32 0, i32 0), i64* getelementptr inbounds ([3 x i64], [3 x i64]* @ata_eh_other_timeouts, i32 0, i32 0) }, %struct.ata_eh_cmd_timeout_ent { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.compoundliteral.122, i32 0, i32 0), i64* getelementptr inbounds ([3 x i64], [3 x i64]* @ata_eh_other_timeouts, i32 0, i32 0) }, %struct.ata_eh_cmd_timeout_ent { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.compoundliteral.123, i32 0, i32 0), i64* getelementptr inbounds ([3 x i64], [3 x i64]* @ata_eh_other_timeouts, i32 0, i32 0) }, %struct.ata_eh_cmd_timeout_ent { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.compoundliteral.124, i32 0, i32 0), i64* getelementptr inbounds ([3 x i64], [3 x i64]* @ata_eh_other_timeouts, i32 0, i32 0) }, %struct.ata_eh_cmd_timeout_ent { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.compoundliteral.125, i32 0, i32 0), i64* getelementptr inbounds ([4 x i64], [4 x i64]* @ata_eh_flush_timeouts, i32 0, i32 0) }], align 16, !dbg !0
@.str.8 = private unnamed_addr constant [3 x i8] c"\013\00", align 1
@.str.9 = private unnamed_addr constant [38 x i8] c"EH pending after %d tries, giving up\0A\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c"\016\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"EH complete\0A\00", align 1
@jiffies = external dso_local global i64, align 8
@.str.12 = private unnamed_addr constant [3 x i8] c"\014\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"disabled\0A\00", align 1
@__const.atapi_eh_request_sense.cdb = private unnamed_addr constant <{ i8, i8, i8, i8, i8, [11 x i8] }> <{ i8 3, i8 0, i8 0, i8 0, i8 96, [11 x i8] zeroinitializer }>, align 16
@ata_get_cmd_descript.cmd_descr = internal constant [92 x %struct.anon.85] [%struct.anon.85 { i8 8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i32 0, i32 0) }, %struct.anon.85 { i8 -27, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i32 0, i32 0) }, %struct.anon.85 { i8 -30, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i32 0, i32 0) }, %struct.anon.85 { i8 -29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i32 0, i32 0) }, %struct.anon.85 { i8 -112, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.18, i32 0, i32 0) }, %struct.anon.85 { i8 -110, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.19, i32 0, i32 0) }, %struct.anon.85 { i8 -109, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i32 0, i32 0) }, %struct.anon.85 { i8 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i32 0) }, %struct.anon.85 { i8 -25, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.22, i32 0, i32 0) }, %struct.anon.85 { i8 -22, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.23, i32 0, i32 0) }, %struct.anon.85 { i8 -20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.24, i32 0, i32 0) }, %struct.anon.85 { i8 -95, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.25, i32 0, i32 0) }, %struct.anon.85 { i8 -94, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0) }, %struct.anon.85 { i8 -56, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i32 0, i32 0) }, %struct.anon.85 { i8 37, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28, i32 0, i32 0) }, %struct.anon.85 { i8 38, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.29, i32 0, i32 0) }, %struct.anon.85 { i8 43, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i32 0, i32 0) }, %struct.anon.85 { i8 42, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.31, i32 0, i32 0) }, %struct.anon.85 { i8 -54, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0) }, %struct.anon.85 { i8 53, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.33, i32 0, i32 0) }, %struct.anon.85 { i8 54, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.34, i32 0, i32 0) }, %struct.anon.85 { i8 59, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.35, i32 0, i32 0) }, %struct.anon.85 { i8 58, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.36, i32 0, i32 0) }, %struct.anon.85 { i8 61, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.37, i32 0, i32 0) }, %struct.anon.85 { i8 62, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0) }, %struct.anon.85 { i8 96, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.39, i32 0, i32 0) }, %struct.anon.85 { i8 97, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.40, i32 0, i32 0) }, %struct.anon.85 { i8 100, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.41, i32 0, i32 0) }, %struct.anon.85 { i8 101, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.42, i32 0, i32 0) }, %struct.anon.85 { i8 32, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.43, i32 0, i32 0) }, %struct.anon.85 { i8 36, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.44, i32 0, i32 0) }, %struct.anon.85 { i8 48, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.45, i32 0, i32 0) }, %struct.anon.85 { i8 52, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.46, i32 0, i32 0) }, %struct.anon.85 { i8 -60, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.47, i32 0, i32 0) }, %struct.anon.85 { i8 41, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.48, i32 0, i32 0) }, %struct.anon.85 { i8 -59, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.49, i32 0, i32 0) }, %struct.anon.85 { i8 57, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.50, i32 0, i32 0) }, %struct.anon.85 { i8 -50, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.51, i32 0, i32 0) }, %struct.anon.85 { i8 -17, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.52, i32 0, i32 0) }, %struct.anon.85 { i8 -58, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.53, i32 0, i32 0) }, %struct.anon.85 { i8 64, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.54, i32 0, i32 0) }, %struct.anon.85 { i8 66, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.55, i32 0, i32 0) }, %struct.anon.85 { i8 69, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.56, i32 0, i32 0) }, %struct.anon.85 { i8 -32, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.57, i32 0, i32 0) }, %struct.anon.85 { i8 -31, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.58, i32 0, i32 0) }, %struct.anon.85 { i8 -26, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i32 0, i32 0) }, %struct.anon.85 { i8 -111, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.60, i32 0, i32 0) }, %struct.anon.85 { i8 -8, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.61, i32 0, i32 0) }, %struct.anon.85 { i8 39, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.62, i32 0, i32 0) }, %struct.anon.85 { i8 -7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.63, i32 0, i32 0) }, %struct.anon.85 { i8 55, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.64, i32 0, i32 0) }, %struct.anon.85 { i8 47, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65, i32 0, i32 0) }, %struct.anon.85 { i8 63, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.66, i32 0, i32 0) }, %struct.anon.85 { i8 71, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.67, i32 0, i32 0) }, %struct.anon.85 { i8 87, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i32 0, i32 0) }, %struct.anon.85 { i8 91, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.69, i32 0, i32 0) }, %struct.anon.85 { i8 92, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.70, i32 0, i32 0) }, %struct.anon.85 { i8 93, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.71, i32 0, i32 0) }, %struct.anon.85 { i8 94, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.72, i32 0, i32 0) }, %struct.anon.85 { i8 95, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.73, i32 0, i32 0) }, %struct.anon.85 { i8 -28, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.74, i32 0, i32 0) }, %struct.anon.85 { i8 -23, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.75, i32 0, i32 0) }, %struct.anon.85 { i8 -24, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.76, i32 0, i32 0) }, %struct.anon.85 { i8 -21, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.77, i32 0, i32 0) }, %struct.anon.85 { i8 -79, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.78, i32 0, i32 0) }, %struct.anon.85 { i8 -15, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.79, i32 0, i32 0) }, %struct.anon.85 { i8 -14, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.80, i32 0, i32 0) }, %struct.anon.85 { i8 -13, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.81, i32 0, i32 0) }, %struct.anon.85 { i8 -12, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.82, i32 0, i32 0) }, %struct.anon.85 { i8 -11, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.83, i32 0, i32 0) }, %struct.anon.85 { i8 -10, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.84, i32 0, i32 0) }, %struct.anon.85 { i8 81, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.85, i32 0, i32 0) }, %struct.anon.85 { i8 -80, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.86, i32 0, i32 0) }, %struct.anon.85 { i8 -34, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.87, i32 0, i32 0) }, %struct.anon.85 { i8 -33, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.88, i32 0, i32 0) }, %struct.anon.85 { i8 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.89, i32 0, i32 0) }, %struct.anon.85 { i8 -47, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.90, i32 0, i32 0) }, %struct.anon.85 { i8 3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.91, i32 0, i32 0) }, %struct.anon.85 { i8 56, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.92, i32 0, i32 0) }, %struct.anon.85 { i8 -121, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.93, i32 0, i32 0) }, %struct.anon.85 { i8 -64, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.94, i32 0, i32 0) }, %struct.anon.85 { i8 -51, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.95, i32 0, i32 0) }, %struct.anon.85 { i8 11, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.96, i32 0, i32 0) }, %struct.anon.85 { i8 -76, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.97, i32 0, i32 0) }, %struct.anon.85 { i8 74, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.98, i32 0, i32 0) }, %struct.anon.85 { i8 -97, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.99, i32 0, i32 0) }, %struct.anon.85 { i8 34, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.100, i32 0, i32 0) }, %struct.anon.85 { i8 35, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.101, i32 0, i32 0) }, %struct.anon.85 { i8 50, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.102, i32 0, i32 0) }, %struct.anon.85 { i8 51, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.103, i32 0, i32 0) }, %struct.anon.85 { i8 16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.104, i32 0, i32 0) }, %struct.anon.85 zeroinitializer], align 16, !dbg !6877
@.str.14 = private unnamed_addr constant [13 x i8] c"DEVICE RESET\00", align 1
@.str.15 = private unnamed_addr constant [17 x i8] c"CHECK POWER MODE\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"STANDBY\00", align 1
@.str.17 = private unnamed_addr constant [5 x i8] c"IDLE\00", align 1
@.str.18 = private unnamed_addr constant [26 x i8] c"EXECUTE DEVICE DIAGNOSTIC\00", align 1
@.str.19 = private unnamed_addr constant [19 x i8] c"DOWNLOAD MICROCODE\00", align 1
@.str.20 = private unnamed_addr constant [23 x i8] c"DOWNLOAD MICROCODE DMA\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"NOP\00", align 1
@.str.22 = private unnamed_addr constant [12 x i8] c"FLUSH CACHE\00", align 1
@.str.23 = private unnamed_addr constant [16 x i8] c"FLUSH CACHE EXT\00", align 1
@.str.24 = private unnamed_addr constant [16 x i8] c"IDENTIFY DEVICE\00", align 1
@.str.25 = private unnamed_addr constant [23 x i8] c"IDENTIFY PACKET DEVICE\00", align 1
@.str.26 = private unnamed_addr constant [8 x i8] c"SERVICE\00", align 1
@.str.27 = private unnamed_addr constant [9 x i8] c"READ DMA\00", align 1
@.str.28 = private unnamed_addr constant [13 x i8] c"READ DMA EXT\00", align 1
@.str.29 = private unnamed_addr constant [16 x i8] c"READ DMA QUEUED\00", align 1
@.str.30 = private unnamed_addr constant [16 x i8] c"READ STREAM EXT\00", align 1
@.str.31 = private unnamed_addr constant [20 x i8] c"READ STREAM DMA EXT\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"WRITE DMA\00", align 1
@.str.33 = private unnamed_addr constant [14 x i8] c"WRITE DMA EXT\00", align 1
@.str.34 = private unnamed_addr constant [21 x i8] c"WRITE DMA QUEUED EXT\00", align 1
@.str.35 = private unnamed_addr constant [17 x i8] c"WRITE STREAM EXT\00", align 1
@.str.36 = private unnamed_addr constant [21 x i8] c"WRITE STREAM DMA EXT\00", align 1
@.str.37 = private unnamed_addr constant [18 x i8] c"WRITE DMA FUA EXT\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"WRITE DMA QUEUED FUA EXT\00", align 1
@.str.39 = private unnamed_addr constant [18 x i8] c"READ FPDMA QUEUED\00", align 1
@.str.40 = private unnamed_addr constant [19 x i8] c"WRITE FPDMA QUEUED\00", align 1
@.str.41 = private unnamed_addr constant [18 x i8] c"SEND FPDMA QUEUED\00", align 1
@.str.42 = private unnamed_addr constant [21 x i8] c"RECEIVE FPDMA QUEUED\00", align 1
@.str.43 = private unnamed_addr constant [15 x i8] c"READ SECTOR(S)\00", align 1
@.str.44 = private unnamed_addr constant [19 x i8] c"READ SECTOR(S) EXT\00", align 1
@.str.45 = private unnamed_addr constant [16 x i8] c"WRITE SECTOR(S)\00", align 1
@.str.46 = private unnamed_addr constant [20 x i8] c"WRITE SECTOR(S) EXT\00", align 1
@.str.47 = private unnamed_addr constant [14 x i8] c"READ MULTIPLE\00", align 1
@.str.48 = private unnamed_addr constant [18 x i8] c"READ MULTIPLE EXT\00", align 1
@.str.49 = private unnamed_addr constant [15 x i8] c"WRITE MULTIPLE\00", align 1
@.str.50 = private unnamed_addr constant [19 x i8] c"WRITE MULTIPLE EXT\00", align 1
@.str.51 = private unnamed_addr constant [23 x i8] c"WRITE MULTIPLE FUA EXT\00", align 1
@.str.52 = private unnamed_addr constant [13 x i8] c"SET FEATURES\00", align 1
@.str.53 = private unnamed_addr constant [18 x i8] c"SET MULTIPLE MODE\00", align 1
@.str.54 = private unnamed_addr constant [22 x i8] c"READ VERIFY SECTOR(S)\00", align 1
@.str.55 = private unnamed_addr constant [26 x i8] c"READ VERIFY SECTOR(S) EXT\00", align 1
@.str.56 = private unnamed_addr constant [24 x i8] c"WRITE UNCORRECTABLE EXT\00", align 1
@.str.57 = private unnamed_addr constant [18 x i8] c"STANDBY IMMEDIATE\00", align 1
@.str.58 = private unnamed_addr constant [15 x i8] c"IDLE IMMEDIATE\00", align 1
@.str.59 = private unnamed_addr constant [6 x i8] c"SLEEP\00", align 1
@.str.60 = private unnamed_addr constant [29 x i8] c"INITIALIZE DEVICE PARAMETERS\00", align 1
@.str.61 = private unnamed_addr constant [24 x i8] c"READ NATIVE MAX ADDRESS\00", align 1
@.str.62 = private unnamed_addr constant [28 x i8] c"READ NATIVE MAX ADDRESS EXT\00", align 1
@.str.63 = private unnamed_addr constant [16 x i8] c"SET MAX ADDRESS\00", align 1
@.str.64 = private unnamed_addr constant [20 x i8] c"SET MAX ADDRESS EXT\00", align 1
@.str.65 = private unnamed_addr constant [13 x i8] c"READ LOG EXT\00", align 1
@.str.66 = private unnamed_addr constant [14 x i8] c"WRITE LOG EXT\00", align 1
@.str.67 = private unnamed_addr constant [17 x i8] c"READ LOG DMA EXT\00", align 1
@.str.68 = private unnamed_addr constant [18 x i8] c"WRITE LOG DMA EXT\00", align 1
@.str.69 = private unnamed_addr constant [17 x i8] c"TRUSTED NON-DATA\00", align 1
@.str.70 = private unnamed_addr constant [16 x i8] c"TRUSTED RECEIVE\00", align 1
@.str.71 = private unnamed_addr constant [20 x i8] c"TRUSTED RECEIVE DMA\00", align 1
@.str.72 = private unnamed_addr constant [13 x i8] c"TRUSTED SEND\00", align 1
@.str.73 = private unnamed_addr constant [17 x i8] c"TRUSTED SEND DMA\00", align 1
@.str.74 = private unnamed_addr constant [12 x i8] c"READ BUFFER\00", align 1
@.str.75 = private unnamed_addr constant [16 x i8] c"READ BUFFER DMA\00", align 1
@.str.76 = private unnamed_addr constant [13 x i8] c"WRITE BUFFER\00", align 1
@.str.77 = private unnamed_addr constant [17 x i8] c"WRITE BUFFER DMA\00", align 1
@.str.78 = private unnamed_addr constant [29 x i8] c"DEVICE CONFIGURATION OVERLAY\00", align 1
@.str.79 = private unnamed_addr constant [22 x i8] c"SECURITY SET PASSWORD\00", align 1
@.str.80 = private unnamed_addr constant [16 x i8] c"SECURITY UNLOCK\00", align 1
@.str.81 = private unnamed_addr constant [23 x i8] c"SECURITY ERASE PREPARE\00", align 1
@.str.82 = private unnamed_addr constant [20 x i8] c"SECURITY ERASE UNIT\00", align 1
@.str.83 = private unnamed_addr constant [21 x i8] c"SECURITY FREEZE LOCK\00", align 1
@.str.84 = private unnamed_addr constant [26 x i8] c"SECURITY DISABLE PASSWORD\00", align 1
@.str.85 = private unnamed_addr constant [17 x i8] c"CONFIGURE STREAM\00", align 1
@.str.86 = private unnamed_addr constant [6 x i8] c"SMART\00", align 1
@.str.87 = private unnamed_addr constant [10 x i8] c"DOOR LOCK\00", align 1
@.str.88 = private unnamed_addr constant [12 x i8] c"DOOR UNLOCK\00", align 1
@.str.89 = private unnamed_addr constant [20 x i8] c"DATA SET MANAGEMENT\00", align 1
@.str.90 = private unnamed_addr constant [22 x i8] c"CHECK MEDIA CARD TYPE\00", align 1
@.str.91 = private unnamed_addr constant [27 x i8] c"CFA REQUEST EXTENDED ERROR\00", align 1
@.str.92 = private unnamed_addr constant [32 x i8] c"CFA WRITE SECTORS WITHOUT ERASE\00", align 1
@.str.93 = private unnamed_addr constant [21 x i8] c"CFA TRANSLATE SECTOR\00", align 1
@.str.94 = private unnamed_addr constant [18 x i8] c"CFA ERASE SECTORS\00", align 1
@.str.95 = private unnamed_addr constant [33 x i8] c"CFA WRITE MULTIPLE WITHOUT ERASE\00", align 1
@.str.96 = private unnamed_addr constant [23 x i8] c"REQUEST SENSE DATA EXT\00", align 1
@.str.97 = private unnamed_addr constant [16 x i8] c"SANITIZE DEVICE\00", align 1
@.str.98 = private unnamed_addr constant [18 x i8] c"ZAC MANAGEMENT IN\00", align 1
@.str.99 = private unnamed_addr constant [19 x i8] c"ZAC MANAGEMENT OUT\00", align 1
@.str.100 = private unnamed_addr constant [25 x i8] c"READ LONG (with retries)\00", align 1
@.str.101 = private unnamed_addr constant [28 x i8] c"READ LONG (without retries)\00", align 1
@.str.102 = private unnamed_addr constant [26 x i8] c"WRITE LONG (with retries)\00", align 1
@.str.103 = private unnamed_addr constant [29 x i8] c"WRITE LONG (without retries)\00", align 1
@.str.104 = private unnamed_addr constant [12 x i8] c"RECALIBRATE\00", align 1
@ata_eh_reset_timeouts = internal constant [5 x i64] [i64 10000, i64 10000, i64 35000, i64 5000, i64 -1], align 16, !dbg !6913
@.str.105 = private unnamed_addr constant [3 x i8] c"\017\00", align 1
@.str.106 = private unnamed_addr constant [25 x i8] c"port disabled--ignoring\0A\00", align 1
@.str.107 = private unnamed_addr constant [28 x i8] c"prereset failed (errno=%d)\0A\00", align 1
@.str.108 = private unnamed_addr constant [19 x i8] c"%s resetting link\0A\00", align 1
@.str.109 = private unnamed_addr constant [5 x i8] c"soft\00", align 1
@.str.110 = private unnamed_addr constant [5 x i8] c"hard\00", align 1
@.str.111 = private unnamed_addr constant [21 x i8] c"hard resetting link\0A\00", align 1
@.str.112 = private unnamed_addr constant [57 x i8] c"follow-up softreset required but no softreset available\0A\00", align 1
@.str.113 = private unnamed_addr constant [43 x i8] c"no reset method available, skipping reset\0A\00", align 1
@.str.114 = private unnamed_addr constant [38 x i8] c"link online but device misclassified\0A\00", align 1
@.str.115 = private unnamed_addr constant [41 x i8] c"link offline, clearing class %d to NONE\0A\00", align 1
@.str.116 = private unnamed_addr constant [47 x i8] c"link status unknown, clearing UNKNOWN to NONE\0A\00", align 1
@.str.117 = private unnamed_addr constant [52 x i8] c"link online but %d devices misclassified, retrying\0A\00", align 1
@.str.118 = private unnamed_addr constant [71 x i8] c"link online but %d devices misclassified, device detection might fail\0A\00", align 1
@.str.119 = private unnamed_addr constant [46 x i8] c"reset failed (errno=%d), retrying in %u secs\0A\00", align 1
@.str.120 = private unnamed_addr constant [25 x i8] c"reset failed, giving up\0A\00", align 1
@.compoundliteral = internal constant [3 x i8] c"\EC\A1\00", align 1
@ata_eh_identify_timeouts = internal constant [4 x i64] [i64 5000, i64 10000, i64 30000, i64 -1], align 16, !dbg !6890
@.compoundliteral.121 = internal constant [3 x i8] c"\F8'\00", align 1
@ata_eh_other_timeouts = internal constant [3 x i64] [i64 5000, i64 10000, i64 -1], align 16, !dbg !6893
@.compoundliteral.122 = internal constant [3 x i8] c"\F97\00", align 1
@.compoundliteral.123 = internal constant [2 x i8] c"\EF\00", align 1
@.compoundliteral.124 = internal constant [2 x i8] c"\91\00", align 1
@.compoundliteral.125 = internal constant [3 x i8] c"\E7\EA\00", align 1
@ata_eh_flush_timeouts = internal constant [4 x i64] [i64 15000, i64 15000, i64 30000, i64 -1], align 16, !dbg !6896
@current_task = external dso_local global %struct.task_struct*, section ".data", align 8
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@system_wq = external dso_local global %struct.workqueue_struct*, align 8
@.str.126 = private unnamed_addr constant [38 x i8] c"sense data available but port frozen\0A\00", align 1
@.str.127 = private unnamed_addr constant [31 x i8] c"sense data reporting disabled\0A\00", align 1
@.str.128 = private unnamed_addr constant [41 x i8] c"request sense failed stat %02x emask %x\0A\00", align 1
@.str.129 = private unnamed_addr constant [38 x i8] c"NCQ disabled due to excessive errors\0A\00", align 1
@ata_eh_speed_down.dma_dnxfer_sel = internal constant [2 x i32] [i32 1, i32 2], align 4, !dbg !6898
@ata_eh_speed_down.pio_dnxfer_sel = internal constant [2 x i32] [i32 0, i32 4], align 4, !dbg !6905
@.str.130 = private unnamed_addr constant [8 x i8] c" frozen\00", align 1
@.str.131 = private unnamed_addr constant [5 x i8] c" t%d\00", align 1
@.str.132 = private unnamed_addr constant [58 x i8] c"exception Emask 0x%x SAct 0x%x SErr 0x%x action 0x%x%s%s\0A\00", align 1
@.str.133 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.134 = private unnamed_addr constant [47 x i8] c"SError: { %s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s}\0A\00", align 1
@.str.135 = private unnamed_addr constant [11 x i8] c"RecovData \00", align 1
@.str.136 = private unnamed_addr constant [11 x i8] c"RecovComm \00", align 1
@.str.137 = private unnamed_addr constant [13 x i8] c"UnrecovData \00", align 1
@.str.138 = private unnamed_addr constant [9 x i8] c"Persist \00", align 1
@.str.139 = private unnamed_addr constant [7 x i8] c"Proto \00", align 1
@.str.140 = private unnamed_addr constant [9 x i8] c"HostInt \00", align 1
@.str.141 = private unnamed_addr constant [11 x i8] c"PHYRdyChg \00", align 1
@.str.142 = private unnamed_addr constant [8 x i8] c"PHYInt \00", align 1
@.str.143 = private unnamed_addr constant [10 x i8] c"CommWake \00", align 1
@.str.144 = private unnamed_addr constant [7 x i8] c"10B8B \00", align 1
@.str.145 = private unnamed_addr constant [8 x i8] c"Dispar \00", align 1
@.str.146 = private unnamed_addr constant [8 x i8] c"BadCRC \00", align 1
@.str.147 = private unnamed_addr constant [9 x i8] c"Handshk \00", align 1
@.str.148 = private unnamed_addr constant [9 x i8] c"LinkSeq \00", align 1
@.str.149 = private unnamed_addr constant [11 x i8] c"TrStaTrns \00", align 1
@.str.150 = private unnamed_addr constant [10 x i8] c"UnrecFIS \00", align 1
@.str.151 = private unnamed_addr constant [9 x i8] c"DevExch \00", align 1
@ata_eh_link_report.dma_str = internal global [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.152, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.154, i32 0, i32 0)], align 16, !dbg !6907
@.str.152 = private unnamed_addr constant [5 x i8] c"bidi\00", align 1
@.str.153 = private unnamed_addr constant [4 x i8] c"out\00", align 1
@.str.154 = private unnamed_addr constant [3 x i8] c"in\00", align 1
@.str.155 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.156 = private unnamed_addr constant [7 x i8] c"nodata\00", align 1
@.str.157 = private unnamed_addr constant [4 x i8] c"pio\00", align 1
@.str.158 = private unnamed_addr constant [4 x i8] c"dma\00", align 1
@.str.159 = private unnamed_addr constant [8 x i8] c"ncq dma\00", align 1
@.str.160 = private unnamed_addr constant [11 x i8] c"ncq nodata\00", align 1
@.str.161 = private unnamed_addr constant [10 x i8] c" %s %u %s\00", align 1
@.str.162 = private unnamed_addr constant [20 x i8] c"failed command: %s\0A\00", align 1
@.str.163 = private unnamed_addr constant [167 x i8] c"cmd %02x/%02x:%02x:%02x:%02x:%02x/%02x:%02x:%02x:%02x:%02x/%02x tag %d%s\0A         %sres %02x/%02x:%02x:%02x:%02x:%02x/%02x:%02x:%02x:%02x:%02x/%02x Emask 0x%x (%s)%s\0A\00", align 1
@.str.164 = private unnamed_addr constant [5 x i8] c" <F>\00", align 1
@.str.165 = private unnamed_addr constant [18 x i8] c"status: { Busy }\0A\00", align 1
@.str.166 = private unnamed_addr constant [23 x i8] c"status: { %s%s%s%s%s}\0A\00", align 1
@.str.167 = private unnamed_addr constant [6 x i8] c"DRDY \00", align 1
@.str.168 = private unnamed_addr constant [4 x i8] c"DF \00", align 1
@.str.169 = private unnamed_addr constant [5 x i8] c"DRQ \00", align 1
@.str.170 = private unnamed_addr constant [7 x i8] c"SENSE \00", align 1
@.str.171 = private unnamed_addr constant [5 x i8] c"ERR \00", align 1
@.str.172 = private unnamed_addr constant [22 x i8] c"error: { %s%s%s%s%s}\0A\00", align 1
@.str.173 = private unnamed_addr constant [6 x i8] c"ICRC \00", align 1
@.str.174 = private unnamed_addr constant [5 x i8] c"UNC \00", align 1
@.str.175 = private unnamed_addr constant [6 x i8] c"AMNF \00", align 1
@.str.176 = private unnamed_addr constant [6 x i8] c"IDNF \00", align 1
@.str.177 = private unnamed_addr constant [6 x i8] c"ABRT \00", align 1
@.str.178 = private unnamed_addr constant [15 x i8] c"host bus error\00", align 1
@.str.179 = private unnamed_addr constant [14 x i8] c"ATA bus error\00", align 1
@.str.180 = private unnamed_addr constant [8 x i8] c"timeout\00", align 1
@.str.181 = private unnamed_addr constant [14 x i8] c"HSM violation\00", align 1
@.str.182 = private unnamed_addr constant [15 x i8] c"internal error\00", align 1
@.str.183 = private unnamed_addr constant [12 x i8] c"media error\00", align 1
@.str.184 = private unnamed_addr constant [17 x i8] c"invalid argument\00", align 1
@.str.185 = private unnamed_addr constant [13 x i8] c"device error\00", align 1
@.str.186 = private unnamed_addr constant [10 x i8] c"NCQ error\00", align 1
@.str.187 = private unnamed_addr constant [24 x i8] c"Polling detection error\00", align 1
@.str.188 = private unnamed_addr constant [14 x i8] c"unknown error\00", align 1
@.str.189 = private unnamed_addr constant [21 x i8] c"head unload failed!\0A\00", align 1
@.str.190 = private unnamed_addr constant [40 x i8] c"TEST_UNIT_READY failed (err_mask=0x%x)\0A\00", align 1
@.str.191 = private unnamed_addr constant [48 x i8] c"failed to clear UNIT ATTENTION (err_mask=0x%x)\0A\00", align 1
@.str.192 = private unnamed_addr constant [40 x i8] c"UNIT ATTENTION persists after %d tries\0A\00", align 1
@.str.193 = private unnamed_addr constant [32 x i8] c"retrying FLUSH 0x%x Emask 0x%x\0A\00", align 1
@.str.194 = private unnamed_addr constant [25 x i8] c"FLUSH failed Emask 0x%x\0A\00", align 1
@.str.195 = private unnamed_addr constant [36 x i8] c"failed to disable DIPM, Emask 0x%x\0A\00", align 1
@.str.196 = private unnamed_addr constant [35 x i8] c"failed to enable DIPM, Emask 0x%x\0A\00", align 1
@.str.197 = private unnamed_addr constant [27 x i8] c"disabling LPM on the link\0A\00", align 1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @__ata_ehi_push_desc(%struct.ata_eh_info* %ehi, i8* %fmt, ...) #0 !dbg !6931 {
entry:
  %ehi.addr = alloca %struct.ata_eh_info*, align 8
  %fmt.addr = alloca i8*, align 8
  %args = alloca [1 x %struct.__va_list_tag], align 16
  store %struct.ata_eh_info* %ehi, %struct.ata_eh_info** %ehi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_eh_info** %ehi.addr, metadata !6935, metadata !DIExpression()), !dbg !6936
  store i8* %fmt, i8** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !6937, metadata !DIExpression()), !dbg !6938
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %args, metadata !6939, metadata !DIExpression()), !dbg !6951
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !6952
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !6952
  call void @llvm.va_start(i8* %arraydecay1), !dbg !6952
  %0 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi.addr, align 8, !dbg !6953
  %1 = load i8*, i8** %fmt.addr, align 8, !dbg !6954
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !6955
  call void @__ata_ehi_pushv_desc(%struct.ata_eh_info* %0, i8* %1, %struct.__va_list_tag* %arraydecay2) #7, !dbg !6956
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !6957
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !6957
  call void @llvm.va_end(i8* %arraydecay34), !dbg !6957
  ret void, !dbg !6958
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__ata_ehi_pushv_desc(%struct.ata_eh_info* %ehi, i8* %fmt, %struct.__va_list_tag* %args) #0 !dbg !6959 {
entry:
  %ehi.addr = alloca %struct.ata_eh_info*, align 8
  %fmt.addr = alloca i8*, align 8
  %args.addr = alloca %struct.__va_list_tag*, align 8
  store %struct.ata_eh_info* %ehi, %struct.ata_eh_info** %ehi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_eh_info** %ehi.addr, metadata !6963, metadata !DIExpression()), !dbg !6964
  store i8* %fmt, i8** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !6965, metadata !DIExpression()), !dbg !6966
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %args.addr, metadata !6967, metadata !DIExpression()), !dbg !6968
  %0 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi.addr, align 8, !dbg !6969
  %desc = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %0, i32 0, i32 7, !dbg !6970
  %arraydecay = getelementptr inbounds [80 x i8], [80 x i8]* %desc, i64 0, i64 0, !dbg !6969
  %1 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi.addr, align 8, !dbg !6971
  %desc_len = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %1, i32 0, i32 8, !dbg !6972
  %2 = load i32, i32* %desc_len, align 4, !dbg !6972
  %idx.ext = sext i32 %2 to i64, !dbg !6973
  %add.ptr = getelementptr i8, i8* %arraydecay, i64 %idx.ext, !dbg !6973
  %3 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi.addr, align 8, !dbg !6974
  %desc_len1 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %3, i32 0, i32 8, !dbg !6975
  %4 = load i32, i32* %desc_len1, align 4, !dbg !6975
  %sub = sub i32 80, %4, !dbg !6976
  %conv = sext i32 %sub to i64, !dbg !6977
  %5 = load i8*, i8** %fmt.addr, align 8, !dbg !6978
  %6 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !6979
  %call = call i32 @vscnprintf(i8* %add.ptr, i64 %conv, i8* %5, %struct.__va_list_tag* %6) #7, !dbg !6980
  %7 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi.addr, align 8, !dbg !6981
  %desc_len2 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %7, i32 0, i32 8, !dbg !6982
  %8 = load i32, i32* %desc_len2, align 4, !dbg !6983
  %add = add i32 %8, %call, !dbg !6983
  store i32 %add, i32* %desc_len2, align 4, !dbg !6983
  ret void, !dbg !6984
}

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_ehi_push_desc(%struct.ata_eh_info* %ehi, i8* %fmt, ...) #0 !dbg !6985 {
entry:
  %ehi.addr = alloca %struct.ata_eh_info*, align 8
  %fmt.addr = alloca i8*, align 8
  %args = alloca [1 x %struct.__va_list_tag], align 16
  store %struct.ata_eh_info* %ehi, %struct.ata_eh_info** %ehi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_eh_info** %ehi.addr, metadata !6986, metadata !DIExpression()), !dbg !6987
  store i8* %fmt, i8** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !6988, metadata !DIExpression()), !dbg !6989
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %args, metadata !6990, metadata !DIExpression()), !dbg !6991
  %0 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi.addr, align 8, !dbg !6992
  %desc_len = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %0, i32 0, i32 8, !dbg !6994
  %1 = load i32, i32* %desc_len, align 4, !dbg !6994
  %tobool = icmp ne i32 %1, 0, !dbg !6992
  br i1 %tobool, label %if.then, label %if.end, !dbg !6995

if.then:                                          ; preds = %entry
  %2 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi.addr, align 8, !dbg !6996
  call void (%struct.ata_eh_info*, i8*, ...) @__ata_ehi_push_desc(%struct.ata_eh_info* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0)) #7, !dbg !6997
  br label %if.end, !dbg !6997

if.end:                                           ; preds = %if.then, %entry
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !6998
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !6998
  call void @llvm.va_start(i8* %arraydecay1), !dbg !6998
  %3 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi.addr, align 8, !dbg !6999
  %4 = load i8*, i8** %fmt.addr, align 8, !dbg !7000
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !7001
  call void @__ata_ehi_pushv_desc(%struct.ata_eh_info* %3, i8* %4, %struct.__va_list_tag* %arraydecay2) #7, !dbg !7002
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !7003
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !7003
  call void @llvm.va_end(i8* %arraydecay34), !dbg !7003
  ret void, !dbg !7004
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_ehi_clear_desc(%struct.ata_eh_info* %ehi) #0 !dbg !7005 {
entry:
  %ehi.addr = alloca %struct.ata_eh_info*, align 8
  store %struct.ata_eh_info* %ehi, %struct.ata_eh_info** %ehi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_eh_info** %ehi.addr, metadata !7008, metadata !DIExpression()), !dbg !7009
  %0 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi.addr, align 8, !dbg !7010
  %desc = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %0, i32 0, i32 7, !dbg !7011
  %arrayidx = getelementptr [80 x i8], [80 x i8]* %desc, i64 0, i64 0, !dbg !7010
  store i8 0, i8* %arrayidx, align 4, !dbg !7012
  %1 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi.addr, align 8, !dbg !7013
  %desc_len = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %1, i32 0, i32 8, !dbg !7014
  store i32 0, i32* %desc_len, align 4, !dbg !7015
  ret void, !dbg !7016
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_port_desc(%struct.ata_port* %ap, i8* %fmt, ...) #0 !dbg !7017 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %fmt.addr = alloca i8*, align 8
  %args = alloca [1 x %struct.__va_list_tag], align 16
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !7020, metadata !DIExpression()), !dbg !7021
  store i8* %fmt, i8** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !7022, metadata !DIExpression()), !dbg !7023
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %args, metadata !7024, metadata !DIExpression()), !dbg !7025
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7026, metadata !DIExpression()), !dbg !7028
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7028
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 4, !dbg !7028
  %1 = load i32, i32* %pflags, align 32, !dbg !7028
  %and = and i32 %1, 128, !dbg !7028
  %tobool = icmp ne i32 %and, 0, !dbg !7028
  %lnot = xor i1 %tobool, true, !dbg !7028
  %lnot1 = xor i1 %lnot, true, !dbg !7028
  %lnot2 = xor i1 %lnot1, true, !dbg !7028
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !7028
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7028
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !7029
  %tobool3 = icmp ne i32 %2, 0, !dbg !7029
  %lnot4 = xor i1 %tobool3, true, !dbg !7029
  %lnot6 = xor i1 %lnot4, true, !dbg !7029
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !7029
  %conv = sext i32 %lnot.ext7 to i64, !dbg !7029
  %tobool8 = icmp ne i64 %conv, 0, !dbg !7029
  br i1 %tobool8, label %if.then, label %if.end, !dbg !7028

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !7029

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !7031

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !7033

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !7031

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), i32 242, i32 2305, i64 12) #2, !dbg !7035, !srcloc !7037
  br label %do.end11, !dbg !7035

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 307) #2, !dbg !7038, !srcloc !7040
  br label %do.body12, !dbg !7031

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !7041

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !7031

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !7031

if.end:                                           ; preds = %do.end14, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !7028
  %tobool15 = icmp ne i32 %3, 0, !dbg !7028
  %lnot16 = xor i1 %tobool15, true, !dbg !7028
  %lnot18 = xor i1 %lnot16, true, !dbg !7028
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !7028
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !7028
  store i64 %conv20, i64* %tmp, align 8, !dbg !7029
  %4 = load i64, i64* %tmp, align 8, !dbg !7028
  %5 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7043
  %link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %5, i32 0, i32 25, !dbg !7045
  %eh_info = getelementptr inbounds %struct.ata_link, %struct.ata_link* %link, i32 0, i32 11, !dbg !7046
  %desc_len = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %eh_info, i32 0, i32 8, !dbg !7047
  %6 = load i32, i32* %desc_len, align 4, !dbg !7047
  %tobool21 = icmp ne i32 %6, 0, !dbg !7043
  br i1 %tobool21, label %if.then22, label %if.end25, !dbg !7048

if.then22:                                        ; preds = %if.end
  %7 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7049
  %link23 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %7, i32 0, i32 25, !dbg !7050
  %eh_info24 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %link23, i32 0, i32 11, !dbg !7051
  call void (%struct.ata_eh_info*, i8*, ...) @__ata_ehi_push_desc(%struct.ata_eh_info* %eh_info24, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #7, !dbg !7052
  br label %if.end25, !dbg !7052

if.end25:                                         ; preds = %if.then22, %if.end
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !7053
  %arraydecay26 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !7053
  call void @llvm.va_start(i8* %arraydecay26), !dbg !7053
  %8 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7054
  %link27 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %8, i32 0, i32 25, !dbg !7055
  %eh_info28 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %link27, i32 0, i32 11, !dbg !7056
  %9 = load i8*, i8** %fmt.addr, align 8, !dbg !7057
  %arraydecay29 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !7058
  call void @__ata_ehi_pushv_desc(%struct.ata_eh_info* %eh_info28, i8* %9, %struct.__va_list_tag* %arraydecay29) #7, !dbg !7059
  %arraydecay30 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !7060
  %arraydecay3031 = bitcast %struct.__va_list_tag* %arraydecay30 to i8*, !dbg !7060
  call void @llvm.va_end(i8* %arraydecay3031), !dbg !7060
  ret void, !dbg !7061
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_port_pbar_desc(%struct.ata_port* %ap, i32 %bar, i64 %offset, i8* %name) #0 !dbg !7062 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %bar.addr = alloca i32, align 4
  %offset.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %type = alloca i8*, align 8
  %start = alloca i64, align 8
  %len = alloca i64, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !7065, metadata !DIExpression()), !dbg !7066
  store i32 %bar, i32* %bar.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bar.addr, metadata !7067, metadata !DIExpression()), !dbg !7068
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !7069, metadata !DIExpression()), !dbg !7070
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7071, metadata !DIExpression()), !dbg !7072
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !7073, metadata !DIExpression()), !dbg !7074
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7075, metadata !DIExpression()), !dbg !7077
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7077
  %host = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 31, !dbg !7077
  %1 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !7077
  %dev = getelementptr inbounds %struct.ata_host, %struct.ata_host* %1, i32 0, i32 1, !dbg !7077
  %2 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7077
  %3 = bitcast %struct.device* %2 to i8*, !dbg !7077
  store i8* %3, i8** %__mptr, align 8, !dbg !7077
  br label %do.body, !dbg !7077

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7078

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !7077
  %add.ptr = getelementptr i8, i8* %4, i64 -176, !dbg !7077
  %5 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !7077
  store %struct.pci_dev* %5, %struct.pci_dev** %tmp, align 8, !dbg !7078
  %6 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !7077
  store %struct.pci_dev* %6, %struct.pci_dev** %pdev, align 8, !dbg !7074
  call void @llvm.dbg.declare(metadata i8** %type, metadata !7080, metadata !DIExpression()), !dbg !7081
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i8** %type, align 8, !dbg !7081
  call void @llvm.dbg.declare(metadata i64* %start, metadata !7082, metadata !DIExpression()), !dbg !7083
  call void @llvm.dbg.declare(metadata i64* %len, metadata !7084, metadata !DIExpression()), !dbg !7085
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7086
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 44, !dbg !7086
  %8 = load i32, i32* %bar.addr, align 4, !dbg !7086
  %idxprom = sext i32 %8 to i64, !dbg !7086
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 %idxprom, !dbg !7086
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 3, !dbg !7086
  %9 = load i64, i64* %flags, align 8, !dbg !7086
  %and = and i64 %9, 512, !dbg !7088
  %tobool = icmp ne i64 %and, 0, !dbg !7088
  br i1 %tobool, label %if.then, label %if.else, !dbg !7089

if.then:                                          ; preds = %do.end
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i8** %type, align 8, !dbg !7090
  br label %if.end8, !dbg !7091

if.else:                                          ; preds = %do.end
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7092
  %resource1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 44, !dbg !7092
  %11 = load i32, i32* %bar.addr, align 4, !dbg !7092
  %idxprom2 = sext i32 %11 to i64, !dbg !7092
  %arrayidx3 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource1, i64 0, i64 %idxprom2, !dbg !7092
  %flags4 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx3, i32 0, i32 3, !dbg !7092
  %12 = load i64, i64* %flags4, align 8, !dbg !7092
  %and5 = and i64 %12, 256, !dbg !7094
  %tobool6 = icmp ne i64 %and5, 0, !dbg !7094
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !7095

if.then7:                                         ; preds = %if.else
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i8** %type, align 8, !dbg !7096
  br label %if.end, !dbg !7097

if.end:                                           ; preds = %if.then7, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7098
  %resource9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 44, !dbg !7098
  %14 = load i32, i32* %bar.addr, align 4, !dbg !7098
  %idxprom10 = sext i32 %14 to i64, !dbg !7098
  %arrayidx11 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource9, i64 0, i64 %idxprom10, !dbg !7098
  %start12 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx11, i32 0, i32 0, !dbg !7098
  %15 = load i64, i64* %start12, align 8, !dbg !7098
  store i64 %15, i64* %start, align 8, !dbg !7099
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7100
  %resource13 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 44, !dbg !7100
  %17 = load i32, i32* %bar.addr, align 4, !dbg !7100
  %idxprom14 = sext i32 %17 to i64, !dbg !7100
  %arrayidx15 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource13, i64 0, i64 %idxprom14, !dbg !7100
  %start16 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx15, i32 0, i32 0, !dbg !7100
  %18 = load i64, i64* %start16, align 8, !dbg !7100
  %cmp = icmp eq i64 %18, 0, !dbg !7100
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !7100

land.lhs.true:                                    ; preds = %if.end8
  %19 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7100
  %resource17 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %19, i32 0, i32 44, !dbg !7100
  %20 = load i32, i32* %bar.addr, align 4, !dbg !7100
  %idxprom18 = sext i32 %20 to i64, !dbg !7100
  %arrayidx19 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource17, i64 0, i64 %idxprom18, !dbg !7100
  %end = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx19, i32 0, i32 1, !dbg !7100
  %21 = load i64, i64* %end, align 8, !dbg !7100
  %22 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7100
  %resource20 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %22, i32 0, i32 44, !dbg !7100
  %23 = load i32, i32* %bar.addr, align 4, !dbg !7100
  %idxprom21 = sext i32 %23 to i64, !dbg !7100
  %arrayidx22 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource20, i64 0, i64 %idxprom21, !dbg !7100
  %start23 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx22, i32 0, i32 0, !dbg !7100
  %24 = load i64, i64* %start23, align 8, !dbg !7100
  %cmp24 = icmp eq i64 %21, %24, !dbg !7100
  br i1 %cmp24, label %cond.true, label %cond.false, !dbg !7100

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !7100

cond.false:                                       ; preds = %land.lhs.true, %if.end8
  %25 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7100
  %resource25 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 44, !dbg !7100
  %26 = load i32, i32* %bar.addr, align 4, !dbg !7100
  %idxprom26 = sext i32 %26 to i64, !dbg !7100
  %arrayidx27 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource25, i64 0, i64 %idxprom26, !dbg !7100
  %end28 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx27, i32 0, i32 1, !dbg !7100
  %27 = load i64, i64* %end28, align 8, !dbg !7100
  %28 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7100
  %resource29 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %28, i32 0, i32 44, !dbg !7100
  %29 = load i32, i32* %bar.addr, align 4, !dbg !7100
  %idxprom30 = sext i32 %29 to i64, !dbg !7100
  %arrayidx31 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource29, i64 0, i64 %idxprom30, !dbg !7100
  %start32 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx31, i32 0, i32 0, !dbg !7100
  %30 = load i64, i64* %start32, align 8, !dbg !7100
  %sub = sub i64 %27, %30, !dbg !7100
  %add = add i64 %sub, 1, !dbg !7100
  br label %cond.end, !dbg !7100

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %add, %cond.false ], !dbg !7100
  store i64 %cond, i64* %len, align 8, !dbg !7101
  %31 = load i64, i64* %offset.addr, align 8, !dbg !7102
  %cmp33 = icmp slt i64 %31, 0, !dbg !7104
  br i1 %cmp33, label %if.then34, label %if.else35, !dbg !7105

if.then34:                                        ; preds = %cond.end
  %32 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7106
  %33 = load i8*, i8** %name.addr, align 8, !dbg !7107
  %34 = load i8*, i8** %type, align 8, !dbg !7108
  %35 = load i64, i64* %len, align 8, !dbg !7109
  %36 = load i64, i64* %start, align 8, !dbg !7110
  call void (%struct.ata_port*, i8*, ...) @ata_port_desc(%struct.ata_port* %32, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i8* %33, i8* %34, i64 %35, i64 %36) #7, !dbg !7111
  br label %if.end37, !dbg !7111

if.else35:                                        ; preds = %cond.end
  %37 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7112
  %38 = load i8*, i8** %name.addr, align 8, !dbg !7113
  %39 = load i64, i64* %start, align 8, !dbg !7114
  %40 = load i64, i64* %offset.addr, align 8, !dbg !7115
  %add36 = add i64 %39, %40, !dbg !7116
  call void (%struct.ata_port*, i8*, ...) @ata_port_desc(%struct.ata_port* %37, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0), i8* %38, i64 %add36) #7, !dbg !7117
  br label %if.end37

if.end37:                                         ; preds = %if.else35, %if.then34
  ret void, !dbg !7118
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @ata_internal_cmd_timeout(%struct.ata_device* %dev, i8 zeroext %cmd) #0 !dbg !7119 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.ata_device*, align 8
  %cmd.addr = alloca i8, align 1
  %ehc = alloca %struct.ata_eh_context*, align 8
  %ent = alloca i32, align 4
  %idx = alloca i32, align 4
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !7122, metadata !DIExpression()), !dbg !7123
  store i8 %cmd, i8* %cmd.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %cmd.addr, metadata !7124, metadata !DIExpression()), !dbg !7125
  call void @llvm.dbg.declare(metadata %struct.ata_eh_context** %ehc, metadata !7126, metadata !DIExpression()), !dbg !7128
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !7129
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 0, !dbg !7130
  %1 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !7130
  %eh_context = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 12, !dbg !7131
  store %struct.ata_eh_context* %eh_context, %struct.ata_eh_context** %ehc, align 8, !dbg !7128
  call void @llvm.dbg.declare(metadata i32* %ent, metadata !7132, metadata !DIExpression()), !dbg !7133
  %2 = load i8, i8* %cmd.addr, align 1, !dbg !7134
  %call = call i32 @ata_lookup_timeout_table(i8 zeroext %2) #7, !dbg !7135
  store i32 %call, i32* %ent, align 4, !dbg !7133
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !7136, metadata !DIExpression()), !dbg !7137
  %3 = load i32, i32* %ent, align 4, !dbg !7138
  %cmp = icmp slt i32 %3, 0, !dbg !7140
  br i1 %cmp, label %if.then, label %if.end, !dbg !7141

if.then:                                          ; preds = %entry
  store i64 5000, i64* %retval, align 8, !dbg !7142
  br label %return, !dbg !7142

if.end:                                           ; preds = %entry
  %4 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !7143
  %cmd_timeout_idx = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %4, i32 0, i32 2, !dbg !7144
  %5 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !7145
  %devno = getelementptr inbounds %struct.ata_device, %struct.ata_device* %5, i32 0, i32 1, !dbg !7146
  %6 = load i32, i32* %devno, align 8, !dbg !7146
  %idxprom = zext i32 %6 to i64, !dbg !7143
  %arrayidx = getelementptr [2 x [6 x i32]], [2 x [6 x i32]]* %cmd_timeout_idx, i64 0, i64 %idxprom, !dbg !7143
  %7 = load i32, i32* %ent, align 4, !dbg !7147
  %idxprom1 = sext i32 %7 to i64, !dbg !7143
  %arrayidx2 = getelementptr [6 x i32], [6 x i32]* %arrayidx, i64 0, i64 %idxprom1, !dbg !7143
  %8 = load i32, i32* %arrayidx2, align 4, !dbg !7143
  store i32 %8, i32* %idx, align 4, !dbg !7148
  %9 = load i32, i32* %ent, align 4, !dbg !7149
  %idxprom3 = sext i32 %9 to i64, !dbg !7150
  %arrayidx4 = getelementptr [6 x %struct.ata_eh_cmd_timeout_ent], [6 x %struct.ata_eh_cmd_timeout_ent]* @ata_eh_cmd_timeout_table, i64 0, i64 %idxprom3, !dbg !7150
  %timeouts = getelementptr inbounds %struct.ata_eh_cmd_timeout_ent, %struct.ata_eh_cmd_timeout_ent* %arrayidx4, i32 0, i32 1, !dbg !7151
  %10 = load i64*, i64** %timeouts, align 8, !dbg !7151
  %11 = load i32, i32* %idx, align 4, !dbg !7152
  %idxprom5 = sext i32 %11 to i64, !dbg !7150
  %arrayidx6 = getelementptr i64, i64* %10, i64 %idxprom5, !dbg !7150
  %12 = load i64, i64* %arrayidx6, align 8, !dbg !7150
  store i64 %12, i64* %retval, align 8, !dbg !7153
  br label %return, !dbg !7153

return:                                           ; preds = %if.end, %if.then
  %13 = load i64, i64* %retval, align 8, !dbg !7154
  ret i64 %13, !dbg !7154
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_lookup_timeout_table(i8 zeroext %cmd) #0 !dbg !7155 {
entry:
  %retval = alloca i32, align 4
  %cmd.addr = alloca i8, align 1
  %i = alloca i32, align 4
  %cur = alloca i8*, align 8
  store i8 %cmd, i8* %cmd.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %cmd.addr, metadata !7158, metadata !DIExpression()), !dbg !7159
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7160, metadata !DIExpression()), !dbg !7161
  store i32 0, i32* %i, align 4, !dbg !7162
  br label %for.cond, !dbg !7164

for.cond:                                         ; preds = %for.inc6, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7165
  %cmp = icmp slt i32 %0, 6, !dbg !7167
  br i1 %cmp, label %for.body, label %for.end7, !dbg !7168

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %cur, metadata !7169, metadata !DIExpression()), !dbg !7171
  %1 = load i32, i32* %i, align 4, !dbg !7172
  %idxprom = sext i32 %1 to i64, !dbg !7174
  %arrayidx = getelementptr [6 x %struct.ata_eh_cmd_timeout_ent], [6 x %struct.ata_eh_cmd_timeout_ent]* @ata_eh_cmd_timeout_table, i64 0, i64 %idxprom, !dbg !7174
  %commands = getelementptr inbounds %struct.ata_eh_cmd_timeout_ent, %struct.ata_eh_cmd_timeout_ent* %arrayidx, i32 0, i32 0, !dbg !7175
  %2 = load i8*, i8** %commands, align 16, !dbg !7175
  store i8* %2, i8** %cur, align 8, !dbg !7176
  br label %for.cond1, !dbg !7177

for.cond1:                                        ; preds = %for.inc, %for.body
  %3 = load i8*, i8** %cur, align 8, !dbg !7178
  %4 = load i8, i8* %3, align 1, !dbg !7180
  %tobool = icmp ne i8 %4, 0, !dbg !7181
  br i1 %tobool, label %for.body2, label %for.end, !dbg !7181

for.body2:                                        ; preds = %for.cond1
  %5 = load i8*, i8** %cur, align 8, !dbg !7182
  %6 = load i8, i8* %5, align 1, !dbg !7184
  %conv = zext i8 %6 to i32, !dbg !7184
  %7 = load i8, i8* %cmd.addr, align 1, !dbg !7185
  %conv3 = zext i8 %7 to i32, !dbg !7185
  %cmp4 = icmp eq i32 %conv, %conv3, !dbg !7186
  br i1 %cmp4, label %if.then, label %if.end, !dbg !7187

if.then:                                          ; preds = %for.body2
  %8 = load i32, i32* %i, align 4, !dbg !7188
  store i32 %8, i32* %retval, align 4, !dbg !7189
  br label %return, !dbg !7189

if.end:                                           ; preds = %for.body2
  br label %for.inc, !dbg !7185

for.inc:                                          ; preds = %if.end
  %9 = load i8*, i8** %cur, align 8, !dbg !7190
  %incdec.ptr = getelementptr i8, i8* %9, i32 1, !dbg !7190
  store i8* %incdec.ptr, i8** %cur, align 8, !dbg !7190
  br label %for.cond1, !dbg !7191, !llvm.loop !7192

for.end:                                          ; preds = %for.cond1
  br label %for.inc6, !dbg !7194

for.inc6:                                         ; preds = %for.end
  %10 = load i32, i32* %i, align 4, !dbg !7195
  %inc = add i32 %10, 1, !dbg !7195
  store i32 %inc, i32* %i, align 4, !dbg !7195
  br label %for.cond, !dbg !7196, !llvm.loop !7197

for.end7:                                         ; preds = %for.cond
  store i32 -1, i32* %retval, align 4, !dbg !7199
  br label %return, !dbg !7199

return:                                           ; preds = %for.end7, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !7200
  ret i32 %11, !dbg !7200
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_internal_cmd_timed_out(%struct.ata_device* %dev, i8 zeroext %cmd) #0 !dbg !7201 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  %cmd.addr = alloca i8, align 1
  %ehc = alloca %struct.ata_eh_context*, align 8
  %ent = alloca i32, align 4
  %idx = alloca i32, align 4
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !7204, metadata !DIExpression()), !dbg !7205
  store i8 %cmd, i8* %cmd.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %cmd.addr, metadata !7206, metadata !DIExpression()), !dbg !7207
  call void @llvm.dbg.declare(metadata %struct.ata_eh_context** %ehc, metadata !7208, metadata !DIExpression()), !dbg !7209
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !7210
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 0, !dbg !7211
  %1 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !7211
  %eh_context = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 12, !dbg !7212
  store %struct.ata_eh_context* %eh_context, %struct.ata_eh_context** %ehc, align 8, !dbg !7209
  call void @llvm.dbg.declare(metadata i32* %ent, metadata !7213, metadata !DIExpression()), !dbg !7214
  %2 = load i8, i8* %cmd.addr, align 1, !dbg !7215
  %call = call i32 @ata_lookup_timeout_table(i8 zeroext %2) #7, !dbg !7216
  store i32 %call, i32* %ent, align 4, !dbg !7214
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !7217, metadata !DIExpression()), !dbg !7218
  %3 = load i32, i32* %ent, align 4, !dbg !7219
  %cmp = icmp slt i32 %3, 0, !dbg !7221
  br i1 %cmp, label %if.then, label %if.end, !dbg !7222

if.then:                                          ; preds = %entry
  br label %if.end15, !dbg !7223

if.end:                                           ; preds = %entry
  %4 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !7224
  %cmd_timeout_idx = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %4, i32 0, i32 2, !dbg !7225
  %5 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !7226
  %devno = getelementptr inbounds %struct.ata_device, %struct.ata_device* %5, i32 0, i32 1, !dbg !7227
  %6 = load i32, i32* %devno, align 8, !dbg !7227
  %idxprom = zext i32 %6 to i64, !dbg !7224
  %arrayidx = getelementptr [2 x [6 x i32]], [2 x [6 x i32]]* %cmd_timeout_idx, i64 0, i64 %idxprom, !dbg !7224
  %7 = load i32, i32* %ent, align 4, !dbg !7228
  %idxprom1 = sext i32 %7 to i64, !dbg !7224
  %arrayidx2 = getelementptr [6 x i32], [6 x i32]* %arrayidx, i64 0, i64 %idxprom1, !dbg !7224
  %8 = load i32, i32* %arrayidx2, align 4, !dbg !7224
  store i32 %8, i32* %idx, align 4, !dbg !7229
  %9 = load i32, i32* %ent, align 4, !dbg !7230
  %idxprom3 = sext i32 %9 to i64, !dbg !7232
  %arrayidx4 = getelementptr [6 x %struct.ata_eh_cmd_timeout_ent], [6 x %struct.ata_eh_cmd_timeout_ent]* @ata_eh_cmd_timeout_table, i64 0, i64 %idxprom3, !dbg !7232
  %timeouts = getelementptr inbounds %struct.ata_eh_cmd_timeout_ent, %struct.ata_eh_cmd_timeout_ent* %arrayidx4, i32 0, i32 1, !dbg !7233
  %10 = load i64*, i64** %timeouts, align 8, !dbg !7233
  %11 = load i32, i32* %idx, align 4, !dbg !7234
  %add = add i32 %11, 1, !dbg !7235
  %idxprom5 = sext i32 %add to i64, !dbg !7232
  %arrayidx6 = getelementptr i64, i64* %10, i64 %idxprom5, !dbg !7232
  %12 = load i64, i64* %arrayidx6, align 8, !dbg !7232
  %cmp7 = icmp ne i64 %12, -1, !dbg !7236
  br i1 %cmp7, label %if.then8, label %if.end15, !dbg !7237

if.then8:                                         ; preds = %if.end
  %13 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !7238
  %cmd_timeout_idx9 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %13, i32 0, i32 2, !dbg !7239
  %14 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !7240
  %devno10 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %14, i32 0, i32 1, !dbg !7241
  %15 = load i32, i32* %devno10, align 8, !dbg !7241
  %idxprom11 = zext i32 %15 to i64, !dbg !7238
  %arrayidx12 = getelementptr [2 x [6 x i32]], [2 x [6 x i32]]* %cmd_timeout_idx9, i64 0, i64 %idxprom11, !dbg !7238
  %16 = load i32, i32* %ent, align 4, !dbg !7242
  %idxprom13 = sext i32 %16 to i64, !dbg !7238
  %arrayidx14 = getelementptr [6 x i32], [6 x i32]* %arrayidx12, i64 0, i64 %idxprom13, !dbg !7238
  %17 = load i32, i32* %arrayidx14, align 4, !dbg !7243
  %inc = add i32 %17, 1, !dbg !7243
  store i32 %inc, i32* %arrayidx14, align 4, !dbg !7243
  br label %if.end15, !dbg !7238

if.end15:                                         ; preds = %if.then, %if.then8, %if.end
  ret void, !dbg !7244
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_ering_map(%struct.ata_ering* %ering, i32 (%struct.ata_ering_entry*, i8*)* %map_fn, i8* %arg) #0 !dbg !7245 {
entry:
  %ering.addr = alloca %struct.ata_ering*, align 8
  %map_fn.addr = alloca i32 (%struct.ata_ering_entry*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %idx = alloca i32, align 4
  %rc = alloca i32, align 4
  %ent = alloca %struct.ata_ering_entry*, align 8
  store %struct.ata_ering* %ering, %struct.ata_ering** %ering.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_ering** %ering.addr, metadata !7253, metadata !DIExpression()), !dbg !7254
  store i32 (%struct.ata_ering_entry*, i8*)* %map_fn, i32 (%struct.ata_ering_entry*, i8*)** %map_fn.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.ata_ering_entry*, i8*)** %map_fn.addr, metadata !7255, metadata !DIExpression()), !dbg !7256
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7257, metadata !DIExpression()), !dbg !7258
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !7259, metadata !DIExpression()), !dbg !7260
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !7261, metadata !DIExpression()), !dbg !7262
  store i32 0, i32* %rc, align 4, !dbg !7262
  call void @llvm.dbg.declare(metadata %struct.ata_ering_entry** %ent, metadata !7263, metadata !DIExpression()), !dbg !7264
  %0 = load %struct.ata_ering*, %struct.ata_ering** %ering.addr, align 8, !dbg !7265
  %cursor = getelementptr inbounds %struct.ata_ering, %struct.ata_ering* %0, i32 0, i32 0, !dbg !7266
  %1 = load i32, i32* %cursor, align 8, !dbg !7266
  store i32 %1, i32* %idx, align 4, !dbg !7267
  br label %do.body, !dbg !7268

do.body:                                          ; preds = %do.cond, %entry
  %2 = load %struct.ata_ering*, %struct.ata_ering** %ering.addr, align 8, !dbg !7269
  %ring = getelementptr inbounds %struct.ata_ering, %struct.ata_ering* %2, i32 0, i32 1, !dbg !7271
  %3 = load i32, i32* %idx, align 4, !dbg !7272
  %idxprom = sext i32 %3 to i64, !dbg !7269
  %arrayidx = getelementptr [32 x %struct.ata_ering_entry], [32 x %struct.ata_ering_entry]* %ring, i64 0, i64 %idxprom, !dbg !7269
  store %struct.ata_ering_entry* %arrayidx, %struct.ata_ering_entry** %ent, align 8, !dbg !7273
  %4 = load %struct.ata_ering_entry*, %struct.ata_ering_entry** %ent, align 8, !dbg !7274
  %err_mask = getelementptr inbounds %struct.ata_ering_entry, %struct.ata_ering_entry* %4, i32 0, i32 1, !dbg !7276
  %5 = load i32, i32* %err_mask, align 4, !dbg !7276
  %tobool = icmp ne i32 %5, 0, !dbg !7274
  br i1 %tobool, label %if.end, label %if.then, !dbg !7277

if.then:                                          ; preds = %do.body
  br label %do.end, !dbg !7278

if.end:                                           ; preds = %do.body
  %6 = load i32 (%struct.ata_ering_entry*, i8*)*, i32 (%struct.ata_ering_entry*, i8*)** %map_fn.addr, align 8, !dbg !7279
  %7 = load %struct.ata_ering_entry*, %struct.ata_ering_entry** %ent, align 8, !dbg !7280
  %8 = load i8*, i8** %arg.addr, align 8, !dbg !7281
  %call = call i32 %6(%struct.ata_ering_entry* %7, i8* %8) #7, !dbg !7279
  store i32 %call, i32* %rc, align 4, !dbg !7282
  %9 = load i32, i32* %rc, align 4, !dbg !7283
  %tobool1 = icmp ne i32 %9, 0, !dbg !7283
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !7285

if.then2:                                         ; preds = %if.end
  br label %do.end, !dbg !7286

if.end3:                                          ; preds = %if.end
  %10 = load i32, i32* %idx, align 4, !dbg !7287
  %sub = sub i32 %10, 1, !dbg !7288
  %add = add i32 %sub, 32, !dbg !7289
  %rem = srem i32 %add, 32, !dbg !7290
  store i32 %rem, i32* %idx, align 4, !dbg !7291
  br label %do.cond, !dbg !7292

do.cond:                                          ; preds = %if.end3
  %11 = load i32, i32* %idx, align 4, !dbg !7293
  %12 = load %struct.ata_ering*, %struct.ata_ering** %ering.addr, align 8, !dbg !7294
  %cursor4 = getelementptr inbounds %struct.ata_ering, %struct.ata_ering* %12, i32 0, i32 0, !dbg !7295
  %13 = load i32, i32* %cursor4, align 8, !dbg !7295
  %cmp = icmp ne i32 %11, %13, !dbg !7296
  br i1 %cmp, label %do.body, label %do.end, !dbg !7292, !llvm.loop !7297

do.end:                                           ; preds = %do.cond, %if.then2, %if.then
  %14 = load i32, i32* %rc, align 4, !dbg !7299
  ret i32 %14, !dbg !7300
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_eh_acquire(%struct.ata_port* %ap) #0 !dbg !7301 {
entry:
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !7302, metadata !DIExpression()), !dbg !7308
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !7310, metadata !DIExpression()), !dbg !7312
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !7313, metadata !DIExpression()), !dbg !7315
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %ap.addr = alloca %struct.ata_port*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !7316, metadata !DIExpression()), !dbg !7317
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7318
  %host = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 31, !dbg !7319
  %1 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !7319
  %eh_mutex = getelementptr inbounds %struct.ata_host, %struct.ata_host* %1, i32 0, i32 9, !dbg !7320
  call void @mutex_lock(%struct.mutex* %eh_mutex) #7, !dbg !7321
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7322, metadata !DIExpression()), !dbg !7324
  %2 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7324
  %host1 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 31, !dbg !7324
  %3 = load %struct.ata_host*, %struct.ata_host** %host1, align 8, !dbg !7324
  %eh_owner = getelementptr inbounds %struct.ata_host, %struct.ata_host* %3, i32 0, i32 10, !dbg !7324
  %4 = load %struct.task_struct*, %struct.task_struct** %eh_owner, align 8, !dbg !7324
  %tobool = icmp ne %struct.task_struct* %4, null, !dbg !7324
  %lnot = xor i1 %tobool, true, !dbg !7324
  %lnot2 = xor i1 %lnot, true, !dbg !7324
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !7324
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7324
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !7325
  %tobool3 = icmp ne i32 %5, 0, !dbg !7325
  %lnot4 = xor i1 %tobool3, true, !dbg !7325
  %lnot6 = xor i1 %lnot4, true, !dbg !7325
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !7325
  %conv = sext i32 %lnot.ext7 to i64, !dbg !7325
  %tobool8 = icmp ne i64 %conv, 0, !dbg !7325
  br i1 %tobool8, label %if.then, label %if.end, !dbg !7324

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !7325

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !7327

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !7329

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !7327

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), i32 464, i32 2307, i64 12) #2, !dbg !7331, !srcloc !7333
  br label %do.end11, !dbg !7331

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 311) #2, !dbg !7334, !srcloc !7336
  br label %do.body12, !dbg !7327

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !7337

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !7327

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !7327

if.end:                                           ; preds = %do.end14, %entry
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !7324
  %tobool15 = icmp ne i32 %6, 0, !dbg !7324
  %lnot16 = xor i1 %tobool15, true, !dbg !7324
  %lnot18 = xor i1 %lnot16, true, !dbg !7324
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !7324
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !7324
  store i64 %conv20, i64* %tmp, align 8, !dbg !7325
  %7 = load i64, i64* %tmp, align 8, !dbg !7324
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !7312
  %8 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !7312
  %9 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #8, !dbg !7315, !srcloc !7339
  store i64 %9, i64* %pfo_val__.i, align 8, !dbg !7315
  %10 = load i64, i64* %pfo_val__.i, align 8, !dbg !7315
  %11 = inttoptr i64 %10 to %struct.task_struct*, !dbg !7315
  store %struct.task_struct* %11, %struct.task_struct** %tmp.i, align 8, !dbg !7315
  %12 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !7315
  store %struct.task_struct* %12, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !7308
  %13 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !7308
  store %struct.task_struct* %13, %struct.task_struct** %tmp1.i, align 8, !dbg !7308
  %14 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !7308
  %15 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7340
  %host21 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %15, i32 0, i32 31, !dbg !7341
  %16 = load %struct.ata_host*, %struct.ata_host** %host21, align 8, !dbg !7341
  %eh_owner22 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %16, i32 0, i32 10, !dbg !7342
  store %struct.task_struct* %14, %struct.task_struct** %eh_owner22, align 8, !dbg !7343
  ret void, !dbg !7344
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_eh_release(%struct.ata_port* %ap) #0 !dbg !7345 {
entry:
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !7302, metadata !DIExpression()), !dbg !7346
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !7310, metadata !DIExpression()), !dbg !7349
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !7313, metadata !DIExpression()), !dbg !7350
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %ap.addr = alloca %struct.ata_port*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !7351, metadata !DIExpression()), !dbg !7352
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7353, metadata !DIExpression()), !dbg !7354
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7354
  %host = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 31, !dbg !7354
  %1 = load %struct.ata_host*, %struct.ata_host** %host, align 8, !dbg !7354
  %eh_owner = getelementptr inbounds %struct.ata_host, %struct.ata_host* %1, i32 0, i32 10, !dbg !7354
  %2 = load %struct.task_struct*, %struct.task_struct** %eh_owner, align 8, !dbg !7354
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !7349
  %3 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !7349
  %4 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #8, !dbg !7350, !srcloc !7339
  store i64 %4, i64* %pfo_val__.i, align 8, !dbg !7350
  %5 = load i64, i64* %pfo_val__.i, align 8, !dbg !7350
  %6 = inttoptr i64 %5 to %struct.task_struct*, !dbg !7350
  store %struct.task_struct* %6, %struct.task_struct** %tmp.i, align 8, !dbg !7350
  %7 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !7350
  store %struct.task_struct* %7, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !7346
  %8 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !7346
  store %struct.task_struct* %8, %struct.task_struct** %tmp1.i, align 8, !dbg !7346
  %9 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !7346
  %cmp = icmp ne %struct.task_struct* %2, %9, !dbg !7354
  %lnot = xor i1 %cmp, true, !dbg !7354
  %lnot1 = xor i1 %lnot, true, !dbg !7354
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7354
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7354
  %10 = load i32, i32* %__ret_warn_on, align 4, !dbg !7355
  %tobool = icmp ne i32 %10, 0, !dbg !7355
  %lnot2 = xor i1 %tobool, true, !dbg !7355
  %lnot4 = xor i1 %lnot2, true, !dbg !7355
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !7355
  %conv = sext i32 %lnot.ext5 to i64, !dbg !7355
  %tobool6 = icmp ne i64 %conv, 0, !dbg !7355
  br i1 %tobool6, label %if.then, label %if.end, !dbg !7354

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !7355

do.body:                                          ; preds = %if.then
  br label %do.body7, !dbg !7357

do.body7:                                         ; preds = %do.body
  br label %do.end, !dbg !7359

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !7357

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), i32 480, i32 2307, i64 12) #2, !dbg !7361, !srcloc !7363
  br label %do.end9, !dbg !7361

do.end9:                                          ; preds = %do.body8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 312) #2, !dbg !7364, !srcloc !7366
  br label %do.body10, !dbg !7357

do.body10:                                        ; preds = %do.end9
  br label %do.end11, !dbg !7367

do.end11:                                         ; preds = %do.body10
  br label %do.end12, !dbg !7357

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !7357

if.end:                                           ; preds = %do.end12, %entry
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !7354
  %tobool13 = icmp ne i32 %11, 0, !dbg !7354
  %lnot14 = xor i1 %tobool13, true, !dbg !7354
  %lnot16 = xor i1 %lnot14, true, !dbg !7354
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !7354
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !7354
  store i64 %conv18, i64* %tmp, align 8, !dbg !7355
  %12 = load i64, i64* %tmp, align 8, !dbg !7354
  %13 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7369
  %host19 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %13, i32 0, i32 31, !dbg !7370
  %14 = load %struct.ata_host*, %struct.ata_host** %host19, align 8, !dbg !7370
  %eh_owner20 = getelementptr inbounds %struct.ata_host, %struct.ata_host* %14, i32 0, i32 10, !dbg !7371
  store %struct.task_struct* null, %struct.task_struct** %eh_owner20, align 8, !dbg !7372
  %15 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7373
  %host21 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %15, i32 0, i32 31, !dbg !7374
  %16 = load %struct.ata_host*, %struct.ata_host** %host21, align 8, !dbg !7374
  %eh_mutex = getelementptr inbounds %struct.ata_host, %struct.ata_host* %16, i32 0, i32 9, !dbg !7375
  call void @mutex_unlock(%struct.mutex* %eh_mutex) #7, !dbg !7376
  ret void, !dbg !7377
}

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_scsi_error(%struct.Scsi_Host* %host) #0 !dbg !7378 {
entry:
  %lock.addr.i46 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i46, metadata !7379, metadata !DIExpression()), !dbg !7384
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7386, metadata !DIExpression()), !dbg !7387
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7388, metadata !DIExpression()), !dbg !7393
  %host.addr = alloca %struct.Scsi_Host*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %flags = alloca i64, align 8
  %eh_work_q = alloca %struct.list_head, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp39 = alloca i64, align 8
  store %struct.Scsi_Host* %host, %struct.Scsi_Host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %host.addr, metadata !7400, metadata !DIExpression()), !dbg !7401
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !7402, metadata !DIExpression()), !dbg !7403
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !7404
  %call = call %struct.ata_port* @ata_shost_to_port(%struct.Scsi_Host* %0) #7, !dbg !7405
  store %struct.ata_port* %call, %struct.ata_port** %ap, align 8, !dbg !7403
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7406, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.declare(metadata %struct.list_head* %eh_work_q, metadata !7408, metadata !DIExpression()), !dbg !7409
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %eh_work_q, i32 0, i32 0, !dbg !7409
  store %struct.list_head* %eh_work_q, %struct.list_head** %next, align 8, !dbg !7409
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %eh_work_q, i32 0, i32 1, !dbg !7409
  store %struct.list_head* %eh_work_q, %struct.list_head** %prev, align 8, !dbg !7409
  br label %do.body, !dbg !7410

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7411

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7412, metadata !DIExpression()), !dbg !7414
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7415, metadata !DIExpression()), !dbg !7414
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7414
  %conv = zext i1 %cmp to i32, !dbg !7414
  store i32 1, i32* %tmp, align 4, !dbg !7414
  %1 = load i32, i32* %tmp, align 4, !dbg !7414
  br label %do.body2, !dbg !7416

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !7417

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !7418

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !7420, metadata !DIExpression()), !dbg !7423
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !7424, metadata !DIExpression()), !dbg !7423
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !7423
  %conv8 = zext i1 %cmp7 to i32, !dbg !7423
  store i32 1, i32* %tmp9, align 4, !dbg !7423
  %2 = load i32, i32* %tmp9, align 4, !dbg !7423
  %call10 = call i64 @arch_local_irq_save() #7, !dbg !7425
  store i64 %call10, i64* %flags, align 8, !dbg !7425
  br label %do.end, !dbg !7425

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !7418

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !7417

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !7426, !srcloc !7427
  br label %do.body13, !dbg !7426

do.body13:                                        ; preds = %do.body12
  %3 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !7428
  %host_lock = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %3, i32 0, i32 4, !dbg !7428
  %4 = load %struct.spinlock*, %struct.spinlock** %host_lock, align 8, !dbg !7428
  store %struct.spinlock* %4, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7429
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !7430
  %rlock.i = bitcast %union.anon* %6 to %struct.raw_spinlock*, !dbg !7430
  br label %do.end15, !dbg !7428

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !7426

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !7417

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !7416

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !7411

do.end19:                                         ; preds = %do.end18
  %7 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !7431
  %eh_cmd_q = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %7, i32 0, i32 6, !dbg !7432
  call void @list_splice_init(%struct.list_head* %eh_cmd_q, %struct.list_head* %eh_work_q) #7, !dbg !7433
  %8 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !7434
  %host_lock20 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %8, i32 0, i32 4, !dbg !7435
  %9 = load %struct.spinlock*, %struct.spinlock** %host_lock20, align 8, !dbg !7435
  %10 = load i64, i64* %flags, align 8, !dbg !7436
  store %struct.spinlock* %9, %struct.spinlock** %lock.addr.i46, align 8
  store i64 %10, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1101, metadata !7437, metadata !DIExpression()) #2, !dbg !7440
  call void @llvm.dbg.declare(metadata !1101, metadata !7441, metadata !DIExpression()) #2, !dbg !7440
  store i32 1, i32* %tmp.i, align 4, !dbg !7440
  %11 = load i32, i32* %tmp.i, align 4, !dbg !7440
  call void @llvm.dbg.declare(metadata !1101, metadata !7442, metadata !DIExpression()) #2, !dbg !7447
  call void @llvm.dbg.declare(metadata !1101, metadata !7448, metadata !DIExpression()) #2, !dbg !7447
  store i32 1, i32* %tmp8.i, align 4, !dbg !7447
  %12 = load i32, i32* %tmp8.i, align 4, !dbg !7447
  %13 = load i64, i64* %flags.addr.i, align 8, !dbg !7449
  call void @arch_local_irq_restore(i64 %13) #9, !dbg !7449
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !7450, !srcloc !7452
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i46, align 8, !dbg !7453
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !7453
  %rlock.i47 = bitcast %union.anon* %15 to %struct.raw_spinlock*, !dbg !7453
  %16 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !7455
  %17 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !7456
  call void @ata_scsi_cmd_error_handler(%struct.Scsi_Host* %16, %struct.ata_port* %17, %struct.list_head* %eh_work_q) #7, !dbg !7457
  %18 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !7458
  %19 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !7459
  call void @ata_scsi_port_error_handler(%struct.Scsi_Host* %18, %struct.ata_port* %19) #7, !dbg !7460
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7461, metadata !DIExpression()), !dbg !7463
  %call21 = call i32 @list_empty(%struct.list_head* %eh_work_q) #7, !dbg !7463
  %tobool = icmp ne i32 %call21, 0, !dbg !7463
  %lnot = xor i1 %tobool, true, !dbg !7463
  %lnot22 = xor i1 %lnot, true, !dbg !7463
  %lnot23 = xor i1 %lnot22, true, !dbg !7463
  %lnot.ext = zext i1 %lnot23 to i32, !dbg !7463
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7463
  %20 = load i32, i32* %__ret_warn_on, align 4, !dbg !7464
  %tobool24 = icmp ne i32 %20, 0, !dbg !7464
  %lnot25 = xor i1 %tobool24, true, !dbg !7464
  %lnot27 = xor i1 %lnot25, true, !dbg !7464
  %lnot.ext28 = zext i1 %lnot27 to i32, !dbg !7464
  %conv29 = sext i32 %lnot.ext28 to i64, !dbg !7464
  %tobool30 = icmp ne i64 %conv29, 0, !dbg !7464
  br i1 %tobool30, label %if.then, label %if.end, !dbg !7463

if.then:                                          ; preds = %do.end19
  br label %do.body31, !dbg !7464

do.body31:                                        ; preds = %if.then
  br label %do.body32, !dbg !7466

do.body32:                                        ; preds = %do.body31
  br label %do.end33, !dbg !7468

do.end33:                                         ; preds = %do.body32
  br label %do.body34, !dbg !7466

do.body34:                                        ; preds = %do.end33
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), i32 541, i32 2305, i64 12) #2, !dbg !7470, !srcloc !7472
  br label %do.end35, !dbg !7470

do.end35:                                         ; preds = %do.body34
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 313) #2, !dbg !7473, !srcloc !7475
  br label %do.body36, !dbg !7466

do.body36:                                        ; preds = %do.end35
  br label %do.end37, !dbg !7476

do.end37:                                         ; preds = %do.body36
  br label %do.end38, !dbg !7466

do.end38:                                         ; preds = %do.end37
  br label %if.end, !dbg !7466

if.end:                                           ; preds = %do.end38, %do.end19
  %21 = load i32, i32* %__ret_warn_on, align 4, !dbg !7463
  %tobool40 = icmp ne i32 %21, 0, !dbg !7463
  %lnot41 = xor i1 %tobool40, true, !dbg !7463
  %lnot43 = xor i1 %lnot41, true, !dbg !7463
  %lnot.ext44 = zext i1 %lnot43 to i32, !dbg !7463
  %conv45 = sext i32 %lnot.ext44 to i64, !dbg !7463
  store i64 %conv45, i64* %tmp39, align 8, !dbg !7464
  %22 = load i64, i64* %tmp39, align 8, !dbg !7463
  ret void, !dbg !7478
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.ata_port* @ata_shost_to_port(%struct.Scsi_Host* %host) #0 !dbg !7479 {
entry:
  %host.addr = alloca %struct.Scsi_Host*, align 8
  store %struct.Scsi_Host* %host, %struct.Scsi_Host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %host.addr, metadata !7482, metadata !DIExpression()), !dbg !7483
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host.addr, align 8, !dbg !7484
  %hostdata = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %0, i32 0, i32 51, !dbg !7485
  %arrayidx = getelementptr [0 x i64], [0 x i64]* %hostdata, i64 0, i64 0, !dbg !7484
  %1 = bitcast i64* %arrayidx to %struct.ata_port**, !dbg !7486
  %2 = load %struct.ata_port*, %struct.ata_port** %1, align 8, !dbg !7486
  ret %struct.ata_port* %2, !dbg !7487
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !7488 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !7492, metadata !DIExpression()), !dbg !7493
  %call = call i64 @arch_local_save_flags() #7, !dbg !7494
  store i64 %call, i64* %f, align 8, !dbg !7495
  call void @arch_local_irq_disable() #7, !dbg !7496
  %0 = load i64, i64* %f, align 8, !dbg !7497
  ret i64 %0, !dbg !7498
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_splice_init(%struct.list_head* %list, %struct.list_head* %head) #0 !dbg !7499 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !7503, metadata !DIExpression()), !dbg !7504
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !7505, metadata !DIExpression()), !dbg !7506
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7507
  %call = call i32 @list_empty(%struct.list_head* %0) #7, !dbg !7509
  %tobool = icmp ne i32 %call, 0, !dbg !7509
  br i1 %tobool, label %if.end, label %if.then, !dbg !7510

if.then:                                          ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7511
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7513
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7514
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !7515
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7515
  call void @__list_splice(%struct.list_head* %1, %struct.list_head* %2, %struct.list_head* %4) #7, !dbg !7516
  %5 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7517
  call void @INIT_LIST_HEAD(%struct.list_head* %5) #7, !dbg !7518
  br label %if.end, !dbg !7519

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7520
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_scsi_cmd_error_handler(%struct.Scsi_Host* %host, %struct.ata_port* %ap, %struct.list_head* %eh_work_q) #0 !dbg !7521 {
entry:
  %lock.addr.i76 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i76, metadata !7379, metadata !DIExpression()), !dbg !7524
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7386, metadata !DIExpression()), !dbg !7526
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7388, metadata !DIExpression()), !dbg !7527
  %host.addr = alloca %struct.Scsi_Host*, align 8
  %ap.addr = alloca %struct.ata_port*, align 8
  %eh_work_q.addr = alloca %struct.list_head*, align 8
  %i = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %scmd = alloca %struct.scsi_cmnd*, align 8
  %tmp19 = alloca %struct.scsi_cmnd*, align 8
  %nr_timedout = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp27 = alloca %struct.scsi_cmnd*, align 8
  %__mptr28 = alloca i8*, align 8
  %tmp32 = alloca %struct.scsi_cmnd*, align 8
  %qc = alloca %struct.ata_queued_cmd*, align 8
  %tmp41 = alloca i32, align 4
  %__mptr63 = alloca i8*, align 8
  %tmp68 = alloca %struct.scsi_cmnd*, align 8
  store %struct.Scsi_Host* %host, %struct.Scsi_Host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %host.addr, metadata !7534, metadata !DIExpression()), !dbg !7535
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !7536, metadata !DIExpression()), !dbg !7537
  store %struct.list_head* %eh_work_q, %struct.list_head** %eh_work_q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %eh_work_q.addr, metadata !7538, metadata !DIExpression()), !dbg !7539
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7540, metadata !DIExpression()), !dbg !7541
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7542, metadata !DIExpression()), !dbg !7543
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7544
  call void @ata_sff_flush_pio_task(%struct.ata_port* %0) #7, !dbg !7545
  br label %do.body, !dbg !7546

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7547

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7548, metadata !DIExpression()), !dbg !7550
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7551, metadata !DIExpression()), !dbg !7550
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7550
  %conv = zext i1 %cmp to i32, !dbg !7550
  store i32 1, i32* %tmp, align 4, !dbg !7550
  %1 = load i32, i32* %tmp, align 4, !dbg !7550
  br label %do.body2, !dbg !7552

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !7553

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !7554

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !7556, metadata !DIExpression()), !dbg !7559
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !7560, metadata !DIExpression()), !dbg !7559
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !7559
  %conv8 = zext i1 %cmp7 to i32, !dbg !7559
  store i32 1, i32* %tmp9, align 4, !dbg !7559
  %2 = load i32, i32* %tmp9, align 4, !dbg !7559
  %call = call i64 @arch_local_irq_save() #7, !dbg !7561
  store i64 %call, i64* %flags, align 8, !dbg !7561
  br label %do.end, !dbg !7561

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !7554

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !7553

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !7562, !srcloc !7563
  br label %do.body12, !dbg !7562

do.body12:                                        ; preds = %do.body11
  %3 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7564
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %3, i32 0, i32 2, !dbg !7564
  %4 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !7564
  store %struct.spinlock* %4, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7565
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !7566
  %rlock.i = bitcast %union.anon* %6 to %struct.raw_spinlock*, !dbg !7566
  br label %do.end14, !dbg !7564

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !7562

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !7553

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !7552

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !7547

do.end18:                                         ; preds = %do.end17
  %7 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7567
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %7, i32 0, i32 1, !dbg !7569
  %8 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !7569
  %error_handler = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %8, i32 0, i32 22, !dbg !7570
  %9 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %error_handler, align 8, !dbg !7570
  %tobool = icmp ne void (%struct.ata_port*)* %9, null, !dbg !7567
  br i1 %tobool, label %if.then, label %if.end74, !dbg !7571

if.then:                                          ; preds = %do.end18
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd, metadata !7572, metadata !DIExpression()), !dbg !7574
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %tmp19, metadata !7575, metadata !DIExpression()), !dbg !7576
  call void @llvm.dbg.declare(metadata i32* %nr_timedout, metadata !7577, metadata !DIExpression()), !dbg !7578
  store i32 0, i32* %nr_timedout, align 4, !dbg !7578
  %10 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7579
  %ops20 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %10, i32 0, i32 1, !dbg !7581
  %11 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops20, align 8, !dbg !7581
  %lost_interrupt = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %11, i32 0, i32 23, !dbg !7582
  %12 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %lost_interrupt, align 8, !dbg !7582
  %tobool21 = icmp ne void (%struct.ata_port*)* %12, null, !dbg !7579
  br i1 %tobool21, label %if.then22, label %if.end, !dbg !7583

if.then22:                                        ; preds = %if.then
  %13 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7584
  %ops23 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %13, i32 0, i32 1, !dbg !7585
  %14 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops23, align 8, !dbg !7585
  %lost_interrupt24 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %14, i32 0, i32 23, !dbg !7586
  %15 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %lost_interrupt24, align 8, !dbg !7586
  %16 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7587
  call void %15(%struct.ata_port* %16) #7, !dbg !7584
  br label %if.end, !dbg !7584

if.end:                                           ; preds = %if.then22, %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7588, metadata !DIExpression()), !dbg !7591
  %17 = load %struct.list_head*, %struct.list_head** %eh_work_q.addr, align 8, !dbg !7591
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %17, i32 0, i32 0, !dbg !7591
  %18 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7591
  %19 = bitcast %struct.list_head* %18 to i8*, !dbg !7591
  store i8* %19, i8** %__mptr, align 8, !dbg !7591
  br label %do.body25, !dbg !7591

do.body25:                                        ; preds = %if.end
  br label %do.end26, !dbg !7592

do.end26:                                         ; preds = %do.body25
  %20 = load i8*, i8** %__mptr, align 8, !dbg !7591
  %add.ptr = getelementptr i8, i8* %20, i64 -64, !dbg !7591
  %21 = bitcast i8* %add.ptr to %struct.scsi_cmnd*, !dbg !7591
  store %struct.scsi_cmnd* %21, %struct.scsi_cmnd** %tmp27, align 8, !dbg !7592
  %22 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %tmp27, align 8, !dbg !7591
  store %struct.scsi_cmnd* %22, %struct.scsi_cmnd** %scmd, align 8, !dbg !7594
  call void @llvm.dbg.declare(metadata i8** %__mptr28, metadata !7595, metadata !DIExpression()), !dbg !7597
  %23 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !7597
  %eh_entry = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %23, i32 0, i32 2, !dbg !7597
  %next29 = getelementptr inbounds %struct.list_head, %struct.list_head* %eh_entry, i32 0, i32 0, !dbg !7597
  %24 = load %struct.list_head*, %struct.list_head** %next29, align 8, !dbg !7597
  %25 = bitcast %struct.list_head* %24 to i8*, !dbg !7597
  store i8* %25, i8** %__mptr28, align 8, !dbg !7597
  br label %do.body30, !dbg !7597

do.body30:                                        ; preds = %do.end26
  br label %do.end31, !dbg !7598

do.end31:                                         ; preds = %do.body30
  %26 = load i8*, i8** %__mptr28, align 8, !dbg !7597
  %add.ptr33 = getelementptr i8, i8* %26, i64 -64, !dbg !7597
  %27 = bitcast i8* %add.ptr33 to %struct.scsi_cmnd*, !dbg !7597
  store %struct.scsi_cmnd* %27, %struct.scsi_cmnd** %tmp32, align 8, !dbg !7598
  %28 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %tmp32, align 8, !dbg !7597
  store %struct.scsi_cmnd* %28, %struct.scsi_cmnd** %tmp19, align 8, !dbg !7594
  br label %for.cond, !dbg !7594

for.cond:                                         ; preds = %do.end67, %do.end31
  %29 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !7600
  %eh_entry34 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %29, i32 0, i32 2, !dbg !7600
  %30 = load %struct.list_head*, %struct.list_head** %eh_work_q.addr, align 8, !dbg !7600
  %cmp35 = icmp eq %struct.list_head* %eh_entry34, %30, !dbg !7600
  %lnot = xor i1 %cmp35, true, !dbg !7600
  br i1 %lnot, label %for.body, label %for.end70, !dbg !7594

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc, metadata !7602, metadata !DIExpression()), !dbg !7604
  store i32 0, i32* %i, align 4, !dbg !7605
  br label %for.cond37, !dbg !7605

for.cond37:                                       ; preds = %for.inc, %for.body
  %31 = load i32, i32* %i, align 4, !dbg !7607
  %cmp38 = icmp slt i32 %31, 32, !dbg !7607
  br i1 %cmp38, label %land.rhs, label %land.end, !dbg !7607

land.rhs:                                         ; preds = %for.cond37
  %32 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7609
  %33 = load i32, i32* %i, align 4, !dbg !7609
  %call40 = call %struct.ata_queued_cmd* @__ata_qc_from_tag(%struct.ata_port* %32, i32 %33) #7, !dbg !7609
  store %struct.ata_queued_cmd* %call40, %struct.ata_queued_cmd** %qc, align 8, !dbg !7609
  store i32 1, i32* %tmp41, align 4, !dbg !7609
  %34 = load i32, i32* %tmp41, align 4, !dbg !7609
  %tobool42 = icmp ne i32 %34, 0, !dbg !7607
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond37
  %35 = phi i1 [ false, %for.cond37 ], [ %tobool42, %land.rhs ], !dbg !7611
  br i1 %35, label %for.body43, label %for.end, !dbg !7605

for.body43:                                       ; preds = %land.end
  %36 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !7612
  %flags44 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %36, i32 0, i32 6, !dbg !7615
  %37 = load i64, i64* %flags44, align 8, !dbg !7615
  %and = and i64 %37, 1, !dbg !7616
  %tobool45 = icmp ne i64 %and, 0, !dbg !7616
  br i1 %tobool45, label %land.lhs.true, label %if.end49, !dbg !7617

land.lhs.true:                                    ; preds = %for.body43
  %38 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !7618
  %scsicmd = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %38, i32 0, i32 2, !dbg !7619
  %39 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd, align 8, !dbg !7619
  %40 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !7620
  %cmp46 = icmp eq %struct.scsi_cmnd* %39, %40, !dbg !7621
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !7622

if.then48:                                        ; preds = %land.lhs.true
  br label %for.end, !dbg !7623

if.end49:                                         ; preds = %land.lhs.true, %for.body43
  br label %for.inc, !dbg !7624

for.inc:                                          ; preds = %if.end49
  %41 = load i32, i32* %i, align 4, !dbg !7607
  %inc = add i32 %41, 1, !dbg !7607
  store i32 %inc, i32* %i, align 4, !dbg !7607
  br label %for.cond37, !dbg !7607, !llvm.loop !7625

for.end:                                          ; preds = %if.then48, %land.end
  %42 = load i32, i32* %i, align 4, !dbg !7627
  %cmp50 = icmp slt i32 %42, 32, !dbg !7629
  br i1 %cmp50, label %if.then52, label %if.else, !dbg !7630

if.then52:                                        ; preds = %for.end
  %43 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !7631
  %flags53 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %43, i32 0, i32 6, !dbg !7634
  %44 = load i64, i64* %flags53, align 8, !dbg !7634
  %and54 = and i64 %44, 65536, !dbg !7635
  %tobool55 = icmp ne i64 %and54, 0, !dbg !7635
  br i1 %tobool55, label %if.end60, label %if.then56, !dbg !7636

if.then56:                                        ; preds = %if.then52
  %45 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !7637
  %err_mask = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %45, i32 0, i32 20, !dbg !7639
  %46 = load i32, i32* %err_mask, align 4, !dbg !7640
  %or = or i32 %46, 4, !dbg !7640
  store i32 %or, i32* %err_mask, align 4, !dbg !7640
  %47 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !7641
  %flags57 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %47, i32 0, i32 6, !dbg !7642
  %48 = load i64, i64* %flags57, align 8, !dbg !7643
  %or58 = or i64 %48, 65536, !dbg !7643
  store i64 %or58, i64* %flags57, align 8, !dbg !7643
  %49 = load i32, i32* %nr_timedout, align 4, !dbg !7644
  %inc59 = add i32 %49, 1, !dbg !7644
  store i32 %inc59, i32* %nr_timedout, align 4, !dbg !7644
  br label %if.end60, !dbg !7645

if.end60:                                         ; preds = %if.then56, %if.then52
  br label %if.end61, !dbg !7646

if.else:                                          ; preds = %for.end
  %50 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !7647
  %allowed = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %50, i32 0, i32 8, !dbg !7649
  %51 = load i32, i32* %allowed, align 4, !dbg !7649
  %52 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !7650
  %retries = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %52, i32 0, i32 7, !dbg !7651
  store i32 %51, i32* %retries, align 8, !dbg !7652
  %53 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !7653
  %54 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7654
  %eh_done_q = getelementptr inbounds %struct.ata_port, %struct.ata_port* %54, i32 0, i32 39, !dbg !7655
  call void @scsi_eh_finish_cmd(%struct.scsi_cmnd* %53, %struct.list_head* %eh_done_q) #7, !dbg !7656
  br label %if.end61

if.end61:                                         ; preds = %if.else, %if.end60
  br label %for.inc62, !dbg !7657

for.inc62:                                        ; preds = %if.end61
  %55 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %tmp19, align 8, !dbg !7600
  store %struct.scsi_cmnd* %55, %struct.scsi_cmnd** %scmd, align 8, !dbg !7600
  call void @llvm.dbg.declare(metadata i8** %__mptr63, metadata !7658, metadata !DIExpression()), !dbg !7660
  %56 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %tmp19, align 8, !dbg !7660
  %eh_entry64 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %56, i32 0, i32 2, !dbg !7660
  %next65 = getelementptr inbounds %struct.list_head, %struct.list_head* %eh_entry64, i32 0, i32 0, !dbg !7660
  %57 = load %struct.list_head*, %struct.list_head** %next65, align 8, !dbg !7660
  %58 = bitcast %struct.list_head* %57 to i8*, !dbg !7660
  store i8* %58, i8** %__mptr63, align 8, !dbg !7660
  br label %do.body66, !dbg !7660

do.body66:                                        ; preds = %for.inc62
  br label %do.end67, !dbg !7661

do.end67:                                         ; preds = %do.body66
  %59 = load i8*, i8** %__mptr63, align 8, !dbg !7660
  %add.ptr69 = getelementptr i8, i8* %59, i64 -64, !dbg !7660
  %60 = bitcast i8* %add.ptr69 to %struct.scsi_cmnd*, !dbg !7660
  store %struct.scsi_cmnd* %60, %struct.scsi_cmnd** %tmp68, align 8, !dbg !7661
  %61 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %tmp68, align 8, !dbg !7660
  store %struct.scsi_cmnd* %61, %struct.scsi_cmnd** %tmp19, align 8, !dbg !7600
  br label %for.cond, !dbg !7600, !llvm.loop !7663

for.end70:                                        ; preds = %for.cond
  %62 = load i32, i32* %nr_timedout, align 4, !dbg !7665
  %tobool71 = icmp ne i32 %62, 0, !dbg !7665
  br i1 %tobool71, label %if.then72, label %if.end73, !dbg !7667

if.then72:                                        ; preds = %for.end70
  %63 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7668
  call void @__ata_port_freeze(%struct.ata_port* %63) #7, !dbg !7669
  br label %if.end73, !dbg !7669

if.end73:                                         ; preds = %if.then72, %for.end70
  %64 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7670
  %eh_tries = getelementptr inbounds %struct.ata_port, %struct.ata_port* %64, i32 0, i32 41, !dbg !7671
  store i32 5, i32* %eh_tries, align 8, !dbg !7672
  br label %if.end74, !dbg !7673

if.end74:                                         ; preds = %if.end73, %do.end18
  %65 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7674
  %lock75 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %65, i32 0, i32 2, !dbg !7675
  %66 = load %struct.spinlock*, %struct.spinlock** %lock75, align 16, !dbg !7675
  %67 = load i64, i64* %flags, align 8, !dbg !7676
  store %struct.spinlock* %66, %struct.spinlock** %lock.addr.i76, align 8
  store i64 %67, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1101, metadata !7437, metadata !DIExpression()) #2, !dbg !7677
  call void @llvm.dbg.declare(metadata !1101, metadata !7441, metadata !DIExpression()) #2, !dbg !7677
  store i32 1, i32* %tmp.i, align 4, !dbg !7677
  %68 = load i32, i32* %tmp.i, align 4, !dbg !7677
  call void @llvm.dbg.declare(metadata !1101, metadata !7442, metadata !DIExpression()) #2, !dbg !7678
  call void @llvm.dbg.declare(metadata !1101, metadata !7448, metadata !DIExpression()) #2, !dbg !7678
  store i32 1, i32* %tmp8.i, align 4, !dbg !7678
  %69 = load i32, i32* %tmp8.i, align 4, !dbg !7678
  %70 = load i64, i64* %flags.addr.i, align 8, !dbg !7679
  call void @arch_local_irq_restore(i64 %70) #9, !dbg !7679
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !7680, !srcloc !7452
  %71 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i76, align 8, !dbg !7681
  %72 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %71, i32 0, i32 0, !dbg !7681
  %rlock.i77 = bitcast %union.anon* %72 to %struct.raw_spinlock*, !dbg !7681
  ret void, !dbg !7682
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_scsi_port_error_handler(%struct.Scsi_Host* %host, %struct.ata_port* %ap) #0 !dbg !7683 {
entry:
  %lock.addr.i209 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i209, metadata !7388, metadata !DIExpression()), !dbg !7686
  %lock.addr.i204 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i204, metadata !7379, metadata !DIExpression()), !dbg !7693
  %flags.addr.i205 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i205, metadata !7386, metadata !DIExpression()), !dbg !7697
  %tmp.i206 = alloca i32, align 4
  %tmp8.i207 = alloca i32, align 4
  %lock.addr.i199 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i199, metadata !7379, metadata !DIExpression()), !dbg !7698
  %flags.addr.i200 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i200, metadata !7386, metadata !DIExpression()), !dbg !7704
  %tmp.i201 = alloca i32, align 4
  %tmp8.i202 = alloca i32, align 4
  %lock.addr.i197 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i197, metadata !7388, metadata !DIExpression()), !dbg !7705
  %lock.addr.i192 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i192, metadata !7379, metadata !DIExpression()), !dbg !7712
  %flags.addr.i193 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i193, metadata !7386, metadata !DIExpression()), !dbg !7714
  %tmp.i194 = alloca i32, align 4
  %tmp8.i195 = alloca i32, align 4
  %lock.addr.i190 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i190, metadata !7379, metadata !DIExpression()), !dbg !7715
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7386, metadata !DIExpression()), !dbg !7717
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7388, metadata !DIExpression()), !dbg !7718
  %host.addr = alloca %struct.Scsi_Host*, align 8
  %ap.addr = alloca %struct.ata_port*, align 8
  %flags = alloca i64, align 8
  %link = alloca %struct.ata_link*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %ehc = alloca %struct.ata_eh_context*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %devno = alloca i32, align 4
  %__dummy57 = alloca i64, align 8
  %__dummy258 = alloca i64, align 8
  %tmp61 = alloca i32, align 4
  %__dummy65 = alloca i64, align 8
  %__dummy266 = alloca i64, align 8
  %tmp69 = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp126 = alloca i64, align 8
  %__dummy137 = alloca i64, align 8
  %__dummy2138 = alloca i64, align 8
  %tmp141 = alloca i32, align 4
  %__dummy145 = alloca i64, align 8
  %__dummy2146 = alloca i64, align 8
  %tmp149 = alloca i32, align 4
  store %struct.Scsi_Host* %host, %struct.Scsi_Host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %host.addr, metadata !7725, metadata !DIExpression()), !dbg !7726
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !7727, metadata !DIExpression()), !dbg !7728
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7729, metadata !DIExpression()), !dbg !7730
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7731
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 1, !dbg !7732
  %1 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !7732
  %error_handler = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %1, i32 0, i32 22, !dbg !7733
  %2 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %error_handler, align 8, !dbg !7733
  %tobool = icmp ne void (%struct.ata_port*)* %2, null, !dbg !7731
  br i1 %tobool, label %if.then, label %if.else103, !dbg !7734

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link, metadata !7735, metadata !DIExpression()), !dbg !7736
  %3 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7737
  call void @ata_eh_acquire(%struct.ata_port* %3) #7, !dbg !7738
  br label %repeat, !dbg !7738

repeat:                                           ; preds = %if.then87, %if.then
  call void @llvm.dbg.label(metadata !7739), !dbg !7740
  %4 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7741
  %fastdrain_timer = getelementptr inbounds %struct.ata_port, %struct.ata_port* %4, i32 0, i32 45, !dbg !7741
  %call = call i32 @del_timer(%struct.timer_list* %fastdrain_timer) #7, !dbg !7741
  %5 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7742
  call void @ata_eh_handle_port_resume(%struct.ata_port* %5) #7, !dbg !7743
  br label %do.body, !dbg !7744

do.body:                                          ; preds = %repeat
  br label %do.body1, !dbg !7745

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7746, metadata !DIExpression()), !dbg !7748
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7749, metadata !DIExpression()), !dbg !7748
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7748
  %conv = zext i1 %cmp to i32, !dbg !7748
  store i32 1, i32* %tmp, align 4, !dbg !7748
  %6 = load i32, i32* %tmp, align 4, !dbg !7748
  br label %do.body2, !dbg !7750

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !7751

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !7752

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !7754, metadata !DIExpression()), !dbg !7757
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !7758, metadata !DIExpression()), !dbg !7757
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !7757
  %conv8 = zext i1 %cmp7 to i32, !dbg !7757
  store i32 1, i32* %tmp9, align 4, !dbg !7757
  %7 = load i32, i32* %tmp9, align 4, !dbg !7757
  %call10 = call i64 @arch_local_irq_save() #7, !dbg !7759
  store i64 %call10, i64* %flags, align 8, !dbg !7759
  br label %do.end, !dbg !7759

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !7752

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !7751

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !7760, !srcloc !7761
  br label %do.body13, !dbg !7760

do.body13:                                        ; preds = %do.body12
  %8 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7762
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %8, i32 0, i32 2, !dbg !7762
  %9 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !7762
  store %struct.spinlock* %9, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7763
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !7764
  %rlock.i = bitcast %union.anon* %11 to %struct.raw_spinlock*, !dbg !7764
  br label %do.end15, !dbg !7762

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !7760

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !7751

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !7750

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !7745

do.end19:                                         ; preds = %do.end18
  %12 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7765
  %call20 = call %struct.ata_link* @ata_link_next(%struct.ata_link* null, %struct.ata_port* %12, i32 1) #7, !dbg !7765
  store %struct.ata_link* %call20, %struct.ata_link** %link, align 8, !dbg !7765
  br label %for.cond, !dbg !7765

for.cond:                                         ; preds = %for.inc34, %do.end19
  %13 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !7767
  %tobool21 = icmp ne %struct.ata_link* %13, null, !dbg !7765
  br i1 %tobool21, label %for.body, label %for.end36, !dbg !7765

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ata_eh_context** %ehc, metadata !7769, metadata !DIExpression()), !dbg !7771
  %14 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !7772
  %eh_context = getelementptr inbounds %struct.ata_link, %struct.ata_link* %14, i32 0, i32 12, !dbg !7773
  store %struct.ata_eh_context* %eh_context, %struct.ata_eh_context** %ehc, align 8, !dbg !7771
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !7774, metadata !DIExpression()), !dbg !7775
  %15 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !7776
  %eh_context22 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %15, i32 0, i32 12, !dbg !7777
  %16 = bitcast %struct.ata_eh_context* %eh_context22 to i8*, !dbg !7778
  call void @llvm.memset.p0i8.i64(i8* align 32 %16, i8 0, i64 208, i1 false), !dbg !7778
  %17 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !7779
  %eh_context23 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %17, i32 0, i32 12, !dbg !7780
  %i = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %eh_context23, i32 0, i32 0, !dbg !7781
  %18 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !7782
  %eh_info = getelementptr inbounds %struct.ata_link, %struct.ata_link* %18, i32 0, i32 11, !dbg !7783
  %19 = bitcast %struct.ata_eh_info* %i to i8*, !dbg !7783
  %20 = bitcast %struct.ata_eh_info* %eh_info to i8*, !dbg !7783
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 32 %19, i8* align 8 %20, i64 120, i1 false), !dbg !7783
  %21 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !7784
  %eh_info24 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %21, i32 0, i32 11, !dbg !7785
  %22 = bitcast %struct.ata_eh_info* %eh_info24 to i8*, !dbg !7786
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 120, i1 false), !dbg !7786
  %23 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !7787
  %call25 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %23, i32 0) #7, !dbg !7787
  store %struct.ata_device* %call25, %struct.ata_device** %dev, align 8, !dbg !7787
  br label %for.cond26, !dbg !7787

for.cond26:                                       ; preds = %for.inc, %for.body
  %24 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !7789
  %tobool27 = icmp ne %struct.ata_device* %24, null, !dbg !7787
  br i1 %tobool27, label %for.body28, label %for.end, !dbg !7787

for.body28:                                       ; preds = %for.cond26
  call void @llvm.dbg.declare(metadata i32* %devno, metadata !7791, metadata !DIExpression()), !dbg !7793
  %25 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !7794
  %devno29 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %25, i32 0, i32 1, !dbg !7795
  %26 = load i32, i32* %devno29, align 8, !dbg !7795
  store i32 %26, i32* %devno, align 4, !dbg !7793
  %27 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !7796
  %xfer_mode = getelementptr inbounds %struct.ata_device, %struct.ata_device* %27, i32 0, i32 15, !dbg !7797
  %28 = load i8, i8* %xfer_mode, align 2, !dbg !7797
  %29 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !7798
  %saved_xfer_mode = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %29, i32 0, i32 7, !dbg !7799
  %30 = load i32, i32* %devno, align 4, !dbg !7800
  %idxprom = sext i32 %30 to i64, !dbg !7798
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %saved_xfer_mode, i64 0, i64 %idxprom, !dbg !7798
  store i8 %28, i8* %arrayidx, align 1, !dbg !7801
  %31 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !7802
  %call30 = call i32 @ata_ncq_enabled(%struct.ata_device* %31) #7, !dbg !7804
  %tobool31 = icmp ne i32 %call30, 0, !dbg !7804
  br i1 %tobool31, label %if.then32, label %if.end, !dbg !7805

if.then32:                                        ; preds = %for.body28
  %32 = load i32, i32* %devno, align 4, !dbg !7806
  %shl = shl i32 1, %32, !dbg !7807
  %33 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !7808
  %saved_ncq_enabled = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %33, i32 0, i32 6, !dbg !7809
  %34 = load i32, i32* %saved_ncq_enabled, align 8, !dbg !7810
  %or = or i32 %34, %shl, !dbg !7810
  store i32 %or, i32* %saved_ncq_enabled, align 8, !dbg !7810
  br label %if.end, !dbg !7808

if.end:                                           ; preds = %if.then32, %for.body28
  br label %for.inc, !dbg !7811

for.inc:                                          ; preds = %if.end
  %35 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !7789
  %36 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !7789
  %call33 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %35, %struct.ata_link* %36, i32 0) #7, !dbg !7789
  store %struct.ata_device* %call33, %struct.ata_device** %dev, align 8, !dbg !7789
  br label %for.cond26, !dbg !7789, !llvm.loop !7812

for.end:                                          ; preds = %for.cond26
  br label %for.inc34, !dbg !7814

for.inc34:                                        ; preds = %for.end
  %37 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !7767
  %38 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7767
  %call35 = call %struct.ata_link* @ata_link_next(%struct.ata_link* %37, %struct.ata_port* %38, i32 1) #7, !dbg !7767
  store %struct.ata_link* %call35, %struct.ata_link** %link, align 8, !dbg !7767
  br label %for.cond, !dbg !7767, !llvm.loop !7815

for.end36:                                        ; preds = %for.cond
  %39 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7817
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %39, i32 0, i32 4, !dbg !7818
  %40 = load i32, i32* %pflags, align 32, !dbg !7819
  %or37 = or i32 %40, 2, !dbg !7819
  store i32 %or37, i32* %pflags, align 32, !dbg !7819
  %41 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7820
  %pflags38 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %41, i32 0, i32 4, !dbg !7821
  %42 = load i32, i32* %pflags38, align 32, !dbg !7822
  %and = and i32 %42, -2, !dbg !7822
  store i32 %and, i32* %pflags38, align 32, !dbg !7822
  %43 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7823
  %excl_link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %43, i32 0, i32 29, !dbg !7824
  store %struct.ata_link* null, %struct.ata_link** %excl_link, align 8, !dbg !7825
  %44 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7826
  %lock39 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %44, i32 0, i32 2, !dbg !7827
  %45 = load %struct.spinlock*, %struct.spinlock** %lock39, align 16, !dbg !7827
  %46 = load i64, i64* %flags, align 8, !dbg !7828
  store %struct.spinlock* %45, %struct.spinlock** %lock.addr.i192, align 8
  store i64 %46, i64* %flags.addr.i193, align 8
  call void @llvm.dbg.declare(metadata !1101, metadata !7437, metadata !DIExpression()) #2, !dbg !7829
  call void @llvm.dbg.declare(metadata !1101, metadata !7441, metadata !DIExpression()) #2, !dbg !7829
  store i32 1, i32* %tmp.i194, align 4, !dbg !7829
  %47 = load i32, i32* %tmp.i194, align 4, !dbg !7829
  call void @llvm.dbg.declare(metadata !1101, metadata !7442, metadata !DIExpression()) #2, !dbg !7830
  call void @llvm.dbg.declare(metadata !1101, metadata !7448, metadata !DIExpression()) #2, !dbg !7830
  store i32 1, i32* %tmp8.i195, align 4, !dbg !7830
  %48 = load i32, i32* %tmp8.i195, align 4, !dbg !7830
  %49 = load i64, i64* %flags.addr.i193, align 8, !dbg !7831
  call void @arch_local_irq_restore(i64 %49) #9, !dbg !7831
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !7832, !srcloc !7452
  %50 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i192, align 8, !dbg !7833
  %51 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %50, i32 0, i32 0, !dbg !7833
  %rlock.i196 = bitcast %union.anon* %51 to %struct.raw_spinlock*, !dbg !7833
  %52 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7834
  %pflags40 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %52, i32 0, i32 4, !dbg !7836
  %53 = load i32, i32* %pflags40, align 32, !dbg !7836
  %and41 = and i32 %53, 131584, !dbg !7837
  %tobool42 = icmp ne i32 %and41, 0, !dbg !7837
  br i1 %tobool42, label %if.else, label %if.then43, !dbg !7838

if.then43:                                        ; preds = %for.end36
  %54 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7839
  %ops44 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %54, i32 0, i32 1, !dbg !7840
  %55 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops44, align 8, !dbg !7840
  %error_handler45 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %55, i32 0, i32 22, !dbg !7841
  %56 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %error_handler45, align 8, !dbg !7841
  %57 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7842
  call void %56(%struct.ata_port* %57) #7, !dbg !7839
  br label %if.end54, !dbg !7839

if.else:                                          ; preds = %for.end36
  %58 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7843
  %pflags46 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %58, i32 0, i32 4, !dbg !7846
  %59 = load i32, i32* %pflags46, align 32, !dbg !7846
  %and47 = and i32 %59, 512, !dbg !7847
  %tobool48 = icmp ne i32 %and47, 0, !dbg !7847
  br i1 %tobool48, label %land.lhs.true, label %if.end53, !dbg !7848

land.lhs.true:                                    ; preds = %if.else
  %60 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7849
  %pflags49 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %60, i32 0, i32 4, !dbg !7850
  %61 = load i32, i32* %pflags49, align 32, !dbg !7850
  %and50 = and i32 %61, 1024, !dbg !7851
  %tobool51 = icmp ne i32 %and50, 0, !dbg !7851
  br i1 %tobool51, label %if.end53, label %if.then52, !dbg !7852

if.then52:                                        ; preds = %land.lhs.true
  %62 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7853
  call void @ata_eh_unload(%struct.ata_port* %62) #7, !dbg !7854
  br label %if.end53, !dbg !7854

if.end53:                                         ; preds = %if.then52, %land.lhs.true, %if.else
  %63 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7855
  call void @ata_eh_finish(%struct.ata_port* %63) #7, !dbg !7856
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then43
  %64 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7857
  call void @ata_eh_handle_port_suspend(%struct.ata_port* %64) #7, !dbg !7858
  br label %do.body55, !dbg !7859

do.body55:                                        ; preds = %if.end54
  br label %do.body56, !dbg !7860

do.body56:                                        ; preds = %do.body55
  call void @llvm.dbg.declare(metadata i64* %__dummy57, metadata !7861, metadata !DIExpression()), !dbg !7863
  call void @llvm.dbg.declare(metadata i64* %__dummy258, metadata !7864, metadata !DIExpression()), !dbg !7863
  %cmp59 = icmp eq i64* %__dummy57, %__dummy258, !dbg !7863
  %conv60 = zext i1 %cmp59 to i32, !dbg !7863
  store i32 1, i32* %tmp61, align 4, !dbg !7863
  %65 = load i32, i32* %tmp61, align 4, !dbg !7863
  br label %do.body62, !dbg !7865

do.body62:                                        ; preds = %do.body56
  br label %do.body63, !dbg !7866

do.body63:                                        ; preds = %do.body62
  br label %do.body64, !dbg !7867

do.body64:                                        ; preds = %do.body63
  call void @llvm.dbg.declare(metadata i64* %__dummy65, metadata !7869, metadata !DIExpression()), !dbg !7872
  call void @llvm.dbg.declare(metadata i64* %__dummy266, metadata !7873, metadata !DIExpression()), !dbg !7872
  %cmp67 = icmp eq i64* %__dummy65, %__dummy266, !dbg !7872
  %conv68 = zext i1 %cmp67 to i32, !dbg !7872
  store i32 1, i32* %tmp69, align 4, !dbg !7872
  %66 = load i32, i32* %tmp69, align 4, !dbg !7872
  %call70 = call i64 @arch_local_irq_save() #7, !dbg !7874
  store i64 %call70, i64* %flags, align 8, !dbg !7874
  br label %do.end71, !dbg !7874

do.end71:                                         ; preds = %do.body64
  br label %do.end72, !dbg !7867

do.end72:                                         ; preds = %do.end71
  br label %do.body73, !dbg !7866

do.body73:                                        ; preds = %do.end72
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !7875, !srcloc !7876
  br label %do.body74, !dbg !7875

do.body74:                                        ; preds = %do.body73
  %67 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7877
  %lock75 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %67, i32 0, i32 2, !dbg !7877
  %68 = load %struct.spinlock*, %struct.spinlock** %lock75, align 16, !dbg !7877
  store %struct.spinlock* %68, %struct.spinlock** %lock.addr.i197, align 8
  %69 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i197, align 8, !dbg !7878
  %70 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %69, i32 0, i32 0, !dbg !7879
  %rlock.i198 = bitcast %union.anon* %70 to %struct.raw_spinlock*, !dbg !7879
  br label %do.end77, !dbg !7877

do.end77:                                         ; preds = %do.body74
  br label %do.end78, !dbg !7875

do.end78:                                         ; preds = %do.end77
  br label %do.end79, !dbg !7866

do.end79:                                         ; preds = %do.end78
  br label %do.end80, !dbg !7865

do.end80:                                         ; preds = %do.end79
  br label %do.end81, !dbg !7860

do.end81:                                         ; preds = %do.end80
  %71 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7880
  %pflags82 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %71, i32 0, i32 4, !dbg !7881
  %72 = load i32, i32* %pflags82, align 32, !dbg !7881
  %and83 = and i32 %72, 1, !dbg !7882
  %tobool84 = icmp ne i32 %and83, 0, !dbg !7882
  br i1 %tobool84, label %if.then85, label %if.end92, !dbg !7883

if.then85:                                        ; preds = %do.end81
  %73 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7884
  %eh_tries = getelementptr inbounds %struct.ata_port, %struct.ata_port* %73, i32 0, i32 41, !dbg !7885
  %74 = load i32, i32* %eh_tries, align 8, !dbg !7886
  %dec = add i32 %74, -1, !dbg !7886
  store i32 %dec, i32* %eh_tries, align 8, !dbg !7886
  %tobool86 = icmp ne i32 %dec, 0, !dbg !7886
  br i1 %tobool86, label %if.then87, label %if.end89, !dbg !7887

if.then87:                                        ; preds = %if.then85
  %75 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7888
  %lock88 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %75, i32 0, i32 2, !dbg !7889
  %76 = load %struct.spinlock*, %struct.spinlock** %lock88, align 16, !dbg !7889
  %77 = load i64, i64* %flags, align 8, !dbg !7890
  store %struct.spinlock* %76, %struct.spinlock** %lock.addr.i199, align 8
  store i64 %77, i64* %flags.addr.i200, align 8
  call void @llvm.dbg.declare(metadata !1101, metadata !7437, metadata !DIExpression()) #2, !dbg !7891
  call void @llvm.dbg.declare(metadata !1101, metadata !7441, metadata !DIExpression()) #2, !dbg !7891
  store i32 1, i32* %tmp.i201, align 4, !dbg !7891
  %78 = load i32, i32* %tmp.i201, align 4, !dbg !7891
  call void @llvm.dbg.declare(metadata !1101, metadata !7442, metadata !DIExpression()) #2, !dbg !7892
  call void @llvm.dbg.declare(metadata !1101, metadata !7448, metadata !DIExpression()) #2, !dbg !7892
  store i32 1, i32* %tmp8.i202, align 4, !dbg !7892
  %79 = load i32, i32* %tmp8.i202, align 4, !dbg !7892
  %80 = load i64, i64* %flags.addr.i200, align 8, !dbg !7893
  call void @arch_local_irq_restore(i64 %80) #9, !dbg !7893
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !7894, !srcloc !7452
  %81 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i199, align 8, !dbg !7895
  %82 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %81, i32 0, i32 0, !dbg !7895
  %rlock.i203 = bitcast %union.anon* %82 to %struct.raw_spinlock*, !dbg !7895
  br label %repeat, !dbg !7896

if.end89:                                         ; preds = %if.then85
  %83 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7897
  call void (%struct.ata_port*, i8*, i8*, ...) @ata_port_printk(%struct.ata_port* %83, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0), i32 5) #7, !dbg !7897
  %84 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7898
  %pflags90 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %84, i32 0, i32 4, !dbg !7899
  %85 = load i32, i32* %pflags90, align 32, !dbg !7900
  %and91 = and i32 %85, -2, !dbg !7900
  store i32 %and91, i32* %pflags90, align 32, !dbg !7900
  br label %if.end92, !dbg !7901

if.end92:                                         ; preds = %if.end89, %do.end81
  %86 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7902
  %call93 = call %struct.ata_link* @ata_link_next(%struct.ata_link* null, %struct.ata_port* %86, i32 1) #7, !dbg !7902
  store %struct.ata_link* %call93, %struct.ata_link** %link, align 8, !dbg !7902
  br label %for.cond94, !dbg !7902

for.cond94:                                       ; preds = %for.inc98, %if.end92
  %87 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !7904
  %tobool95 = icmp ne %struct.ata_link* %87, null, !dbg !7902
  br i1 %tobool95, label %for.body96, label %for.end100, !dbg !7902

for.body96:                                       ; preds = %for.cond94
  %88 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !7906
  %eh_info97 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %88, i32 0, i32 11, !dbg !7907
  %89 = bitcast %struct.ata_eh_info* %eh_info97 to i8*, !dbg !7908
  call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 120, i1 false), !dbg !7908
  br label %for.inc98, !dbg !7908

for.inc98:                                        ; preds = %for.body96
  %90 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !7904
  %91 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7904
  %call99 = call %struct.ata_link* @ata_link_next(%struct.ata_link* %90, %struct.ata_port* %91, i32 1) #7, !dbg !7904
  store %struct.ata_link* %call99, %struct.ata_link** %link, align 8, !dbg !7904
  br label %for.cond94, !dbg !7904, !llvm.loop !7909

for.end100:                                       ; preds = %for.cond94
  %92 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7911
  %ops101 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %92, i32 0, i32 1, !dbg !7912
  %93 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops101, align 8, !dbg !7912
  %end_eh = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %93, i32 0, i32 26, !dbg !7913
  %94 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %end_eh, align 8, !dbg !7913
  %95 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7914
  call void %94(%struct.ata_port* %95) #7, !dbg !7911
  %96 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7915
  %lock102 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %96, i32 0, i32 2, !dbg !7916
  %97 = load %struct.spinlock*, %struct.spinlock** %lock102, align 16, !dbg !7916
  %98 = load i64, i64* %flags, align 8, !dbg !7917
  store %struct.spinlock* %97, %struct.spinlock** %lock.addr.i204, align 8
  store i64 %98, i64* %flags.addr.i205, align 8
  call void @llvm.dbg.declare(metadata !1101, metadata !7437, metadata !DIExpression()) #2, !dbg !7918
  call void @llvm.dbg.declare(metadata !1101, metadata !7441, metadata !DIExpression()) #2, !dbg !7918
  store i32 1, i32* %tmp.i206, align 4, !dbg !7918
  %99 = load i32, i32* %tmp.i206, align 4, !dbg !7918
  call void @llvm.dbg.declare(metadata !1101, metadata !7442, metadata !DIExpression()) #2, !dbg !7919
  call void @llvm.dbg.declare(metadata !1101, metadata !7448, metadata !DIExpression()) #2, !dbg !7919
  store i32 1, i32* %tmp8.i207, align 4, !dbg !7919
  %100 = load i32, i32* %tmp8.i207, align 4, !dbg !7919
  %101 = load i64, i64* %flags.addr.i205, align 8, !dbg !7920
  call void @arch_local_irq_restore(i64 %101) #9, !dbg !7920
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !7921, !srcloc !7452
  %102 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i204, align 8, !dbg !7922
  %103 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %102, i32 0, i32 0, !dbg !7922
  %rlock.i208 = bitcast %union.anon* %103 to %struct.raw_spinlock*, !dbg !7922
  %104 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7923
  call void @ata_eh_release(%struct.ata_port* %104) #7, !dbg !7924
  br label %if.end134, !dbg !7925

if.else103:                                       ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7926, metadata !DIExpression()), !dbg !7929
  %105 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7929
  %106 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7929
  %link104 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %106, i32 0, i32 25, !dbg !7929
  %active_tag = getelementptr inbounds %struct.ata_link, %struct.ata_link* %link104, i32 0, i32 3, !dbg !7929
  %107 = load i32, i32* %active_tag, align 8, !dbg !7929
  %call105 = call %struct.ata_queued_cmd* @ata_qc_from_tag(%struct.ata_port* %105, i32 %107) #7, !dbg !7929
  %cmp106 = icmp eq %struct.ata_queued_cmd* %call105, null, !dbg !7929
  %lnot = xor i1 %cmp106, true, !dbg !7929
  %lnot108 = xor i1 %lnot, true, !dbg !7929
  %lnot.ext = zext i1 %lnot108 to i32, !dbg !7929
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7929
  %108 = load i32, i32* %__ret_warn_on, align 4, !dbg !7930
  %tobool109 = icmp ne i32 %108, 0, !dbg !7930
  %lnot110 = xor i1 %tobool109, true, !dbg !7930
  %lnot112 = xor i1 %lnot110, true, !dbg !7930
  %lnot.ext113 = zext i1 %lnot112 to i32, !dbg !7930
  %conv114 = sext i32 %lnot.ext113 to i64, !dbg !7930
  %tobool115 = icmp ne i64 %conv114, 0, !dbg !7930
  br i1 %tobool115, label %if.then116, label %if.end125, !dbg !7929

if.then116:                                       ; preds = %if.else103
  br label %do.body117, !dbg !7930

do.body117:                                       ; preds = %if.then116
  br label %do.body118, !dbg !7932

do.body118:                                       ; preds = %do.body117
  br label %do.end119, !dbg !7934

do.end119:                                        ; preds = %do.body118
  br label %do.body120, !dbg !7932

do.body120:                                       ; preds = %do.end119
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), i32 737, i32 2305, i64 12) #2, !dbg !7936, !srcloc !7938
  br label %do.end121, !dbg !7936

do.end121:                                        ; preds = %do.body120
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 317) #2, !dbg !7939, !srcloc !7941
  br label %do.body122, !dbg !7932

do.body122:                                       ; preds = %do.end121
  br label %do.end123, !dbg !7942

do.end123:                                        ; preds = %do.body122
  br label %do.end124, !dbg !7932

do.end124:                                        ; preds = %do.end123
  br label %if.end125, !dbg !7932

if.end125:                                        ; preds = %do.end124, %if.else103
  %109 = load i32, i32* %__ret_warn_on, align 4, !dbg !7929
  %tobool127 = icmp ne i32 %109, 0, !dbg !7929
  %lnot128 = xor i1 %tobool127, true, !dbg !7929
  %lnot130 = xor i1 %lnot128, true, !dbg !7929
  %lnot.ext131 = zext i1 %lnot130 to i32, !dbg !7929
  %conv132 = sext i32 %lnot.ext131 to i64, !dbg !7929
  store i64 %conv132, i64* %tmp126, align 8, !dbg !7930
  %110 = load i64, i64* %tmp126, align 8, !dbg !7929
  %111 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7944
  %ops133 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %111, i32 0, i32 1, !dbg !7945
  %112 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops133, align 8, !dbg !7945
  %eng_timeout = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %112, i32 0, i32 59, !dbg !7946
  %113 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %eng_timeout, align 8, !dbg !7946
  %114 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7947
  call void %113(%struct.ata_port* %114) #7, !dbg !7944
  br label %if.end134

if.end134:                                        ; preds = %if.end125, %for.end100
  %115 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7948
  %eh_done_q = getelementptr inbounds %struct.ata_port, %struct.ata_port* %115, i32 0, i32 39, !dbg !7949
  call void @scsi_eh_flush_done_q(%struct.list_head* %eh_done_q) #7, !dbg !7950
  br label %do.body135, !dbg !7951

do.body135:                                       ; preds = %if.end134
  br label %do.body136, !dbg !7952

do.body136:                                       ; preds = %do.body135
  call void @llvm.dbg.declare(metadata i64* %__dummy137, metadata !7953, metadata !DIExpression()), !dbg !7955
  call void @llvm.dbg.declare(metadata i64* %__dummy2138, metadata !7956, metadata !DIExpression()), !dbg !7955
  %cmp139 = icmp eq i64* %__dummy137, %__dummy2138, !dbg !7955
  %conv140 = zext i1 %cmp139 to i32, !dbg !7955
  store i32 1, i32* %tmp141, align 4, !dbg !7955
  %116 = load i32, i32* %tmp141, align 4, !dbg !7955
  br label %do.body142, !dbg !7957

do.body142:                                       ; preds = %do.body136
  br label %do.body143, !dbg !7958

do.body143:                                       ; preds = %do.body142
  br label %do.body144, !dbg !7959

do.body144:                                       ; preds = %do.body143
  call void @llvm.dbg.declare(metadata i64* %__dummy145, metadata !7961, metadata !DIExpression()), !dbg !7964
  call void @llvm.dbg.declare(metadata i64* %__dummy2146, metadata !7965, metadata !DIExpression()), !dbg !7964
  %cmp147 = icmp eq i64* %__dummy145, %__dummy2146, !dbg !7964
  %conv148 = zext i1 %cmp147 to i32, !dbg !7964
  store i32 1, i32* %tmp149, align 4, !dbg !7964
  %117 = load i32, i32* %tmp149, align 4, !dbg !7964
  %call150 = call i64 @arch_local_irq_save() #7, !dbg !7966
  store i64 %call150, i64* %flags, align 8, !dbg !7966
  br label %do.end151, !dbg !7966

do.end151:                                        ; preds = %do.body144
  br label %do.end152, !dbg !7959

do.end152:                                        ; preds = %do.end151
  br label %do.body153, !dbg !7958

do.body153:                                       ; preds = %do.end152
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !7967, !srcloc !7968
  br label %do.body154, !dbg !7967

do.body154:                                       ; preds = %do.body153
  %118 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7969
  %lock155 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %118, i32 0, i32 2, !dbg !7969
  %119 = load %struct.spinlock*, %struct.spinlock** %lock155, align 16, !dbg !7969
  store %struct.spinlock* %119, %struct.spinlock** %lock.addr.i209, align 8
  %120 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i209, align 8, !dbg !7970
  %121 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %120, i32 0, i32 0, !dbg !7971
  %rlock.i210 = bitcast %union.anon* %121 to %struct.raw_spinlock*, !dbg !7971
  br label %do.end157, !dbg !7969

do.end157:                                        ; preds = %do.body154
  br label %do.end158, !dbg !7967

do.end158:                                        ; preds = %do.end157
  br label %do.end159, !dbg !7958

do.end159:                                        ; preds = %do.end158
  br label %do.end160, !dbg !7957

do.end160:                                        ; preds = %do.end159
  br label %do.end161, !dbg !7952

do.end161:                                        ; preds = %do.end160
  %122 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7972
  %pflags162 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %122, i32 0, i32 4, !dbg !7974
  %123 = load i32, i32* %pflags162, align 32, !dbg !7974
  %and163 = and i32 %123, 16, !dbg !7975
  %tobool164 = icmp ne i32 %and163, 0, !dbg !7975
  br i1 %tobool164, label %if.then165, label %if.else168, !dbg !7976

if.then165:                                       ; preds = %do.end161
  %124 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7977
  %pflags166 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %124, i32 0, i32 4, !dbg !7978
  %125 = load i32, i32* %pflags166, align 32, !dbg !7979
  %and167 = and i32 %125, -17, !dbg !7979
  store i32 %and167, i32* %pflags166, align 32, !dbg !7979
  br label %if.end179, !dbg !7977

if.else168:                                       ; preds = %do.end161
  %126 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7980
  %pflags169 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %126, i32 0, i32 4, !dbg !7982
  %127 = load i32, i32* %pflags169, align 32, !dbg !7982
  %and170 = and i32 %127, 64, !dbg !7983
  %tobool171 = icmp ne i32 %and170, 0, !dbg !7983
  br i1 %tobool171, label %land.lhs.true172, label %if.end178, !dbg !7984

land.lhs.true172:                                 ; preds = %if.else168
  %128 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7985
  %flags173 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %128, i32 0, i32 3, !dbg !7986
  %129 = load i64, i64* %flags173, align 8, !dbg !7986
  %and174 = and i64 %129, 16777216, !dbg !7987
  %tobool175 = icmp ne i64 %and174, 0, !dbg !7987
  br i1 %tobool175, label %if.end178, label %if.then176, !dbg !7988

if.then176:                                       ; preds = %land.lhs.true172
  %130 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7989
  %hotplug_task = getelementptr inbounds %struct.ata_port, %struct.ata_port* %130, i32 0, i32 35, !dbg !7990
  %call177 = call zeroext i1 @schedule_delayed_work(%struct.delayed_work* %hotplug_task, i64 0) #7, !dbg !7991
  br label %if.end178, !dbg !7991

if.end178:                                        ; preds = %if.then176, %land.lhs.true172, %if.else168
  br label %if.end179

if.end179:                                        ; preds = %if.end178, %if.then165
  %131 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7992
  %pflags180 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %131, i32 0, i32 4, !dbg !7994
  %132 = load i32, i32* %pflags180, align 32, !dbg !7994
  %and181 = and i32 %132, 8, !dbg !7995
  %tobool182 = icmp ne i32 %and181, 0, !dbg !7995
  br i1 %tobool182, label %if.then183, label %if.end184, !dbg !7996

if.then183:                                       ; preds = %if.end179
  %133 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7997
  call void (%struct.ata_port*, i8*, i8*, ...) @ata_port_printk(%struct.ata_port* %133, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0)) #7, !dbg !7997
  br label %if.end184, !dbg !7997

if.end184:                                        ; preds = %if.then183, %if.end179
  %134 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !7998
  %pflags185 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %134, i32 0, i32 4, !dbg !7999
  %135 = load i32, i32* %pflags185, align 32, !dbg !8000
  %and186 = and i32 %135, -73, !dbg !8000
  store i32 %and186, i32* %pflags185, align 32, !dbg !8000
  %136 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8001
  %pflags187 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %136, i32 0, i32 4, !dbg !8002
  %137 = load i32, i32* %pflags187, align 32, !dbg !8003
  %and188 = and i32 %137, -3, !dbg !8003
  store i32 %and188, i32* %pflags187, align 32, !dbg !8003
  %138 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8004
  %eh_wait_q = getelementptr inbounds %struct.ata_port, %struct.ata_port* %138, i32 0, i32 40, !dbg !8004
  call void @__wake_up(%struct.wait_queue_head* %eh_wait_q, i32 3, i32 0, i8* null) #7, !dbg !8004
  %139 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8005
  %lock189 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %139, i32 0, i32 2, !dbg !8006
  %140 = load %struct.spinlock*, %struct.spinlock** %lock189, align 16, !dbg !8006
  %141 = load i64, i64* %flags, align 8, !dbg !8007
  store %struct.spinlock* %140, %struct.spinlock** %lock.addr.i190, align 8
  store i64 %141, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1101, metadata !7437, metadata !DIExpression()) #2, !dbg !8008
  call void @llvm.dbg.declare(metadata !1101, metadata !7441, metadata !DIExpression()) #2, !dbg !8008
  store i32 1, i32* %tmp.i, align 4, !dbg !8008
  %142 = load i32, i32* %tmp.i, align 4, !dbg !8008
  call void @llvm.dbg.declare(metadata !1101, metadata !7442, metadata !DIExpression()) #2, !dbg !8009
  call void @llvm.dbg.declare(metadata !1101, metadata !7448, metadata !DIExpression()) #2, !dbg !8009
  store i32 1, i32* %tmp8.i, align 4, !dbg !8009
  %143 = load i32, i32* %tmp8.i, align 4, !dbg !8009
  %144 = load i64, i64* %flags.addr.i, align 8, !dbg !8010
  call void @arch_local_irq_restore(i64 %144) #9, !dbg !8010
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !8011, !srcloc !7452
  %145 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i190, align 8, !dbg !8012
  %146 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %145, i32 0, i32 0, !dbg !8012
  %rlock.i191 = bitcast %union.anon* %146 to %struct.raw_spinlock*, !dbg !8012
  ret void, !dbg !8013
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #0 !dbg !8014 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !8019, metadata !DIExpression()), !dbg !8020
  br label %do.body, !dbg !8021

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8023

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8021
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !8021
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8021
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !8023
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !8021
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8025
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !8026
  %conv = zext i1 %cmp to i32, !dbg !8026
  ret i32 %conv, !dbg !8027
}

; Function Attrs: noredzone
declare dso_local void @ata_sff_flush_pio_task(%struct.ata_port*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.ata_queued_cmd* @__ata_qc_from_tag(%struct.ata_port* %ap, i32 %tag) #0 !dbg !8028 {
entry:
  %retval = alloca %struct.ata_queued_cmd*, align 8
  %ap.addr = alloca %struct.ata_port*, align 8
  %tag.addr = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !8031, metadata !DIExpression()), !dbg !8032
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !8033, metadata !DIExpression()), !dbg !8034
  %0 = load i32, i32* %tag.addr, align 4, !dbg !8035
  %call = call zeroext i1 @ata_tag_valid(i32 %0) #7, !dbg !8037
  br i1 %call, label %if.then, label %if.end, !dbg !8038

if.then:                                          ; preds = %entry
  %1 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8039
  %qcmd = getelementptr inbounds %struct.ata_port, %struct.ata_port* %1, i32 0, i32 19, !dbg !8040
  %2 = load i32, i32* %tag.addr, align 4, !dbg !8041
  %idxprom = zext i32 %2 to i64, !dbg !8039
  %arrayidx = getelementptr [33 x %struct.ata_queued_cmd], [33 x %struct.ata_queued_cmd]* %qcmd, i64 0, i64 %idxprom, !dbg !8039
  store %struct.ata_queued_cmd* %arrayidx, %struct.ata_queued_cmd** %retval, align 8, !dbg !8042
  br label %return, !dbg !8042

if.end:                                           ; preds = %entry
  store %struct.ata_queued_cmd* null, %struct.ata_queued_cmd** %retval, align 8, !dbg !8043
  br label %return, !dbg !8043

return:                                           ; preds = %if.end, %if.then
  %3 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %retval, align 8, !dbg !8044
  ret %struct.ata_queued_cmd* %3, !dbg !8044
}

; Function Attrs: noredzone
declare dso_local void @scsi_eh_finish_cmd(%struct.scsi_cmnd*, %struct.list_head*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__ata_port_freeze(%struct.ata_port* %ap) #0 !dbg !8045 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !8046, metadata !DIExpression()), !dbg !8047
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8048, metadata !DIExpression()), !dbg !8050
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8050
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 1, !dbg !8050
  %1 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !8050
  %error_handler = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %1, i32 0, i32 22, !dbg !8050
  %2 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %error_handler, align 8, !dbg !8050
  %tobool = icmp ne void (%struct.ata_port*)* %2, null, !dbg !8050
  %lnot = xor i1 %tobool, true, !dbg !8050
  %lnot1 = xor i1 %lnot, true, !dbg !8050
  %lnot2 = xor i1 %lnot1, true, !dbg !8050
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !8050
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8050
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !8051
  %tobool3 = icmp ne i32 %3, 0, !dbg !8051
  %lnot4 = xor i1 %tobool3, true, !dbg !8051
  %lnot6 = xor i1 %lnot4, true, !dbg !8051
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !8051
  %conv = sext i32 %lnot.ext7 to i64, !dbg !8051
  %tobool8 = icmp ne i64 %conv, 0, !dbg !8051
  br i1 %tobool8, label %if.then, label %if.end, !dbg !8050

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !8051

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !8053

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !8055

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !8053

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), i32 1058, i32 2305, i64 12) #2, !dbg !8057, !srcloc !8059
  br label %do.end11, !dbg !8057

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 322) #2, !dbg !8060, !srcloc !8062
  br label %do.body12, !dbg !8053

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !8063

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !8053

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !8053

if.end:                                           ; preds = %do.end14, %entry
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !8050
  %tobool15 = icmp ne i32 %4, 0, !dbg !8050
  %lnot16 = xor i1 %tobool15, true, !dbg !8050
  %lnot18 = xor i1 %lnot16, true, !dbg !8050
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !8050
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !8050
  store i64 %conv20, i64* %tmp, align 8, !dbg !8051
  %5 = load i64, i64* %tmp, align 8, !dbg !8050
  %6 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8065
  %ops21 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %6, i32 0, i32 1, !dbg !8067
  %7 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops21, align 8, !dbg !8067
  %freeze = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %7, i32 0, i32 12, !dbg !8068
  %8 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %freeze, align 8, !dbg !8068
  %tobool22 = icmp ne void (%struct.ata_port*)* %8, null, !dbg !8065
  br i1 %tobool22, label %if.then23, label %if.end26, !dbg !8069

if.then23:                                        ; preds = %if.end
  %9 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8070
  %ops24 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %9, i32 0, i32 1, !dbg !8071
  %10 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops24, align 8, !dbg !8071
  %freeze25 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %10, i32 0, i32 12, !dbg !8072
  %11 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %freeze25, align 8, !dbg !8072
  %12 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8073
  call void %11(%struct.ata_port* %12) #7, !dbg !8070
  br label %if.end26, !dbg !8070

if.end26:                                         ; preds = %if.then23, %if.end
  %13 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8074
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %13, i32 0, i32 4, !dbg !8075
  %14 = load i32, i32* %pflags, align 32, !dbg !8076
  %or = or i32 %14, 4, !dbg !8076
  store i32 %or, i32* %pflags, align 32, !dbg !8076
  ret void, !dbg !8077
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noredzone
declare dso_local i32 @del_timer(%struct.timer_list*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_eh_handle_port_resume(%struct.ata_port* %ap) #0 !dbg !8078 {
entry:
  %lock.addr.i111 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i111, metadata !7388, metadata !DIExpression()), !dbg !8079
  %lock.addr.i106 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i106, metadata !7379, metadata !DIExpression()), !dbg !8086
  %flags.addr.i107 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i107, metadata !7386, metadata !DIExpression()), !dbg !8088
  %tmp.i108 = alloca i32, align 4
  %tmp8.i109 = alloca i32, align 4
  %lock.addr.i101 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i101, metadata !7379, metadata !DIExpression()), !dbg !8089
  %flags.addr.i102 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i102, metadata !7386, metadata !DIExpression()), !dbg !8093
  %tmp.i103 = alloca i32, align 4
  %tmp8.i104 = alloca i32, align 4
  %lock.addr.i99 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i99, metadata !7379, metadata !DIExpression()), !dbg !8094
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7386, metadata !DIExpression()), !dbg !8096
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7388, metadata !DIExpression()), !dbg !8097
  %ap.addr = alloca %struct.ata_port*, align 8
  %link = alloca %struct.ata_link*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp45 = alloca i64, align 8
  %__dummy71 = alloca i64, align 8
  %__dummy272 = alloca i64, align 8
  %tmp75 = alloca i32, align 4
  %__dummy79 = alloca i64, align 8
  %__dummy280 = alloca i64, align 8
  %tmp83 = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !8104, metadata !DIExpression()), !dbg !8105
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link, metadata !8106, metadata !DIExpression()), !dbg !8107
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !8108, metadata !DIExpression()), !dbg !8109
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8110, metadata !DIExpression()), !dbg !8111
  br label %do.body, !dbg !8112

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !8113

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8114, metadata !DIExpression()), !dbg !8116
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8117, metadata !DIExpression()), !dbg !8116
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8116
  %conv = zext i1 %cmp to i32, !dbg !8116
  store i32 1, i32* %tmp, align 4, !dbg !8116
  %0 = load i32, i32* %tmp, align 4, !dbg !8116
  br label %do.body2, !dbg !8118

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !8119

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !8120

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !8122, metadata !DIExpression()), !dbg !8125
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !8126, metadata !DIExpression()), !dbg !8125
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !8125
  %conv8 = zext i1 %cmp7 to i32, !dbg !8125
  store i32 1, i32* %tmp9, align 4, !dbg !8125
  %1 = load i32, i32* %tmp9, align 4, !dbg !8125
  %call = call i64 @arch_local_irq_save() #7, !dbg !8127
  store i64 %call, i64* %flags, align 8, !dbg !8127
  br label %do.end, !dbg !8127

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !8120

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !8119

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !8128, !srcloc !8129
  br label %do.body12, !dbg !8128

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8130
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 2, !dbg !8130
  %3 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !8130
  store %struct.spinlock* %3, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8131
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !8132
  %rlock.i = bitcast %union.anon* %5 to %struct.raw_spinlock*, !dbg !8132
  br label %do.end14, !dbg !8130

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !8128

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !8119

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !8118

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !8113

do.end18:                                         ; preds = %do.end17
  %6 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8133
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %6, i32 0, i32 4, !dbg !8134
  %7 = load i32, i32* %pflags, align 32, !dbg !8134
  %and = and i32 %7, 262144, !dbg !8135
  %tobool = icmp ne i32 %and, 0, !dbg !8135
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !8136

lor.lhs.false:                                    ; preds = %do.end18
  %8 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8137
  %pm_mesg = getelementptr inbounds %struct.ata_port, %struct.ata_port* %8, i32 0, i32 43, !dbg !8138
  %event = getelementptr inbounds %struct.pm_message, %struct.pm_message* %pm_mesg, i32 0, i32 0, !dbg !8139
  %9 = load i32, i32* %event, align 8, !dbg !8139
  %and19 = and i32 %9, 16, !dbg !8140
  %tobool20 = icmp ne i32 %and19, 0, !dbg !8140
  br i1 %tobool20, label %if.end, label %if.then, !dbg !8141

if.then:                                          ; preds = %lor.lhs.false, %do.end18
  %10 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8142
  %lock21 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %10, i32 0, i32 2, !dbg !8143
  %11 = load %struct.spinlock*, %struct.spinlock** %lock21, align 16, !dbg !8143
  %12 = load i64, i64* %flags, align 8, !dbg !8144
  store %struct.spinlock* %11, %struct.spinlock** %lock.addr.i101, align 8
  store i64 %12, i64* %flags.addr.i102, align 8
  call void @llvm.dbg.declare(metadata !1101, metadata !7437, metadata !DIExpression()) #2, !dbg !8145
  call void @llvm.dbg.declare(metadata !1101, metadata !7441, metadata !DIExpression()) #2, !dbg !8145
  store i32 1, i32* %tmp.i103, align 4, !dbg !8145
  %13 = load i32, i32* %tmp.i103, align 4, !dbg !8145
  call void @llvm.dbg.declare(metadata !1101, metadata !7442, metadata !DIExpression()) #2, !dbg !8146
  call void @llvm.dbg.declare(metadata !1101, metadata !7448, metadata !DIExpression()) #2, !dbg !8146
  store i32 1, i32* %tmp8.i104, align 4, !dbg !8146
  %14 = load i32, i32* %tmp8.i104, align 4, !dbg !8146
  %15 = load i64, i64* %flags.addr.i102, align 8, !dbg !8147
  call void @arch_local_irq_restore(i64 %15) #9, !dbg !8147
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !8148, !srcloc !7452
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i101, align 8, !dbg !8149
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !8149
  %rlock.i105 = bitcast %union.anon* %17 to %struct.raw_spinlock*, !dbg !8149
  br label %return, !dbg !8150

if.end:                                           ; preds = %lor.lhs.false
  %18 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8151
  %lock22 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %18, i32 0, i32 2, !dbg !8152
  %19 = load %struct.spinlock*, %struct.spinlock** %lock22, align 16, !dbg !8152
  %20 = load i64, i64* %flags, align 8, !dbg !8153
  store %struct.spinlock* %19, %struct.spinlock** %lock.addr.i106, align 8
  store i64 %20, i64* %flags.addr.i107, align 8
  call void @llvm.dbg.declare(metadata !1101, metadata !7437, metadata !DIExpression()) #2, !dbg !8154
  call void @llvm.dbg.declare(metadata !1101, metadata !7441, metadata !DIExpression()) #2, !dbg !8154
  store i32 1, i32* %tmp.i108, align 4, !dbg !8154
  %21 = load i32, i32* %tmp.i108, align 4, !dbg !8154
  call void @llvm.dbg.declare(metadata !1101, metadata !7442, metadata !DIExpression()) #2, !dbg !8155
  call void @llvm.dbg.declare(metadata !1101, metadata !7448, metadata !DIExpression()) #2, !dbg !8155
  store i32 1, i32* %tmp8.i109, align 4, !dbg !8155
  %22 = load i32, i32* %tmp8.i109, align 4, !dbg !8155
  %23 = load i64, i64* %flags.addr.i107, align 8, !dbg !8156
  call void @arch_local_irq_restore(i64 %23) #9, !dbg !8156
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !8157, !srcloc !7452
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i106, align 8, !dbg !8158
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !8158
  %rlock.i110 = bitcast %union.anon* %25 to %struct.raw_spinlock*, !dbg !8158
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8159, metadata !DIExpression()), !dbg !8161
  %26 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8161
  %pflags23 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %26, i32 0, i32 4, !dbg !8161
  %27 = load i32, i32* %pflags23, align 32, !dbg !8161
  %and24 = and i32 %27, 131072, !dbg !8161
  %tobool25 = icmp ne i32 %and24, 0, !dbg !8161
  %lnot = xor i1 %tobool25, true, !dbg !8161
  %lnot26 = xor i1 %lnot, true, !dbg !8161
  %lnot27 = xor i1 %lnot26, true, !dbg !8161
  %lnot.ext = zext i1 %lnot27 to i32, !dbg !8161
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8161
  %28 = load i32, i32* %__ret_warn_on, align 4, !dbg !8162
  %tobool28 = icmp ne i32 %28, 0, !dbg !8162
  %lnot29 = xor i1 %tobool28, true, !dbg !8162
  %lnot31 = xor i1 %lnot29, true, !dbg !8162
  %lnot.ext32 = zext i1 %lnot31 to i32, !dbg !8162
  %conv33 = sext i32 %lnot.ext32 to i64, !dbg !8162
  %tobool34 = icmp ne i64 %conv33, 0, !dbg !8162
  br i1 %tobool34, label %if.then35, label %if.end44, !dbg !8161

if.then35:                                        ; preds = %if.end
  br label %do.body36, !dbg !8162

do.body36:                                        ; preds = %if.then35
  br label %do.body37, !dbg !8164

do.body37:                                        ; preds = %do.body36
  br label %do.end38, !dbg !8166

do.end38:                                         ; preds = %do.body37
  br label %do.body39, !dbg !8164

do.body39:                                        ; preds = %do.end38
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), i32 3950, i32 2305, i64 12) #2, !dbg !8168, !srcloc !8170
  br label %do.end40, !dbg !8168

do.end40:                                         ; preds = %do.body39
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 339) #2, !dbg !8171, !srcloc !8173
  br label %do.body41, !dbg !8164

do.body41:                                        ; preds = %do.end40
  br label %do.end42, !dbg !8174

do.end42:                                         ; preds = %do.body41
  br label %do.end43, !dbg !8164

do.end43:                                         ; preds = %do.end42
  br label %if.end44, !dbg !8164

if.end44:                                         ; preds = %do.end43, %if.end
  %29 = load i32, i32* %__ret_warn_on, align 4, !dbg !8161
  %tobool46 = icmp ne i32 %29, 0, !dbg !8161
  %lnot47 = xor i1 %tobool46, true, !dbg !8161
  %lnot49 = xor i1 %lnot47, true, !dbg !8161
  %lnot.ext50 = zext i1 %lnot49 to i32, !dbg !8161
  %conv51 = sext i32 %lnot.ext50 to i64, !dbg !8161
  store i64 %conv51, i64* %tmp45, align 8, !dbg !8162
  %30 = load i64, i64* %tmp45, align 8, !dbg !8161
  %31 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8176
  %call52 = call %struct.ata_link* @ata_link_next(%struct.ata_link* null, %struct.ata_port* %31, i32 1) #7, !dbg !8176
  store %struct.ata_link* %call52, %struct.ata_link** %link, align 8, !dbg !8176
  br label %for.cond, !dbg !8176

for.cond:                                         ; preds = %for.inc59, %if.end44
  %32 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !8178
  %tobool53 = icmp ne %struct.ata_link* %32, null, !dbg !8176
  br i1 %tobool53, label %for.body, label %for.end61, !dbg !8176

for.body:                                         ; preds = %for.cond
  %33 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !8180
  %call54 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %33, i32 2) #7, !dbg !8180
  store %struct.ata_device* %call54, %struct.ata_device** %dev, align 8, !dbg !8180
  br label %for.cond55, !dbg !8180

for.cond55:                                       ; preds = %for.inc, %for.body
  %34 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !8182
  %tobool56 = icmp ne %struct.ata_device* %34, null, !dbg !8180
  br i1 %tobool56, label %for.body57, label %for.end, !dbg !8180

for.body57:                                       ; preds = %for.cond55
  %35 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !8184
  %ering = getelementptr inbounds %struct.ata_device, %struct.ata_device* %35, i32 0, i32 36, !dbg !8185
  call void @ata_ering_clear(%struct.ata_ering* %ering) #7, !dbg !8186
  br label %for.inc, !dbg !8186

for.inc:                                          ; preds = %for.body57
  %36 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !8182
  %37 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !8182
  %call58 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %36, %struct.ata_link* %37, i32 2) #7, !dbg !8182
  store %struct.ata_device* %call58, %struct.ata_device** %dev, align 8, !dbg !8182
  br label %for.cond55, !dbg !8182, !llvm.loop !8187

for.end:                                          ; preds = %for.cond55
  br label %for.inc59, !dbg !8188

for.inc59:                                        ; preds = %for.end
  %38 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !8178
  %39 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8178
  %call60 = call %struct.ata_link* @ata_link_next(%struct.ata_link* %38, %struct.ata_port* %39, i32 1) #7, !dbg !8178
  store %struct.ata_link* %call60, %struct.ata_link** %link, align 8, !dbg !8178
  br label %for.cond, !dbg !8178, !llvm.loop !8189

for.end61:                                        ; preds = %for.cond
  %40 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8191
  %41 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8192
  %pm_mesg62 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %41, i32 0, i32 43, !dbg !8193
  %coerce.dive = getelementptr inbounds %struct.pm_message, %struct.pm_message* %pm_mesg62, i32 0, i32 0, !dbg !8194
  %42 = load i32, i32* %coerce.dive, align 8, !dbg !8194
  call void @ata_acpi_set_state(%struct.ata_port* %40, i32 %42) #7, !dbg !8194
  %43 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8195
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %43, i32 0, i32 1, !dbg !8197
  %44 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !8197
  %port_resume = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %44, i32 0, i32 33, !dbg !8198
  %45 = load i32 (%struct.ata_port*)*, i32 (%struct.ata_port*)** %port_resume, align 8, !dbg !8198
  %tobool63 = icmp ne i32 (%struct.ata_port*)* %45, null, !dbg !8195
  br i1 %tobool63, label %if.then64, label %if.end68, !dbg !8199

if.then64:                                        ; preds = %for.end61
  %46 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8200
  %ops65 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %46, i32 0, i32 1, !dbg !8201
  %47 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops65, align 8, !dbg !8201
  %port_resume66 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %47, i32 0, i32 33, !dbg !8202
  %48 = load i32 (%struct.ata_port*)*, i32 (%struct.ata_port*)** %port_resume66, align 8, !dbg !8202
  %49 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8203
  %call67 = call i32 %48(%struct.ata_port* %49) #7, !dbg !8200
  br label %if.end68, !dbg !8200

if.end68:                                         ; preds = %if.then64, %for.end61
  %50 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8204
  call void @ata_acpi_on_resume(%struct.ata_port* %50) #7, !dbg !8205
  br label %do.body69, !dbg !8206

do.body69:                                        ; preds = %if.end68
  br label %do.body70, !dbg !8207

do.body70:                                        ; preds = %do.body69
  call void @llvm.dbg.declare(metadata i64* %__dummy71, metadata !8208, metadata !DIExpression()), !dbg !8210
  call void @llvm.dbg.declare(metadata i64* %__dummy272, metadata !8211, metadata !DIExpression()), !dbg !8210
  %cmp73 = icmp eq i64* %__dummy71, %__dummy272, !dbg !8210
  %conv74 = zext i1 %cmp73 to i32, !dbg !8210
  store i32 1, i32* %tmp75, align 4, !dbg !8210
  %51 = load i32, i32* %tmp75, align 4, !dbg !8210
  br label %do.body76, !dbg !8212

do.body76:                                        ; preds = %do.body70
  br label %do.body77, !dbg !8213

do.body77:                                        ; preds = %do.body76
  br label %do.body78, !dbg !8214

do.body78:                                        ; preds = %do.body77
  call void @llvm.dbg.declare(metadata i64* %__dummy79, metadata !8216, metadata !DIExpression()), !dbg !8219
  call void @llvm.dbg.declare(metadata i64* %__dummy280, metadata !8220, metadata !DIExpression()), !dbg !8219
  %cmp81 = icmp eq i64* %__dummy79, %__dummy280, !dbg !8219
  %conv82 = zext i1 %cmp81 to i32, !dbg !8219
  store i32 1, i32* %tmp83, align 4, !dbg !8219
  %52 = load i32, i32* %tmp83, align 4, !dbg !8219
  %call84 = call i64 @arch_local_irq_save() #7, !dbg !8221
  store i64 %call84, i64* %flags, align 8, !dbg !8221
  br label %do.end85, !dbg !8221

do.end85:                                         ; preds = %do.body78
  br label %do.end86, !dbg !8214

do.end86:                                         ; preds = %do.end85
  br label %do.body87, !dbg !8213

do.body87:                                        ; preds = %do.end86
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !8222, !srcloc !8223
  br label %do.body88, !dbg !8222

do.body88:                                        ; preds = %do.body87
  %53 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8224
  %lock89 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %53, i32 0, i32 2, !dbg !8224
  %54 = load %struct.spinlock*, %struct.spinlock** %lock89, align 16, !dbg !8224
  store %struct.spinlock* %54, %struct.spinlock** %lock.addr.i111, align 8
  %55 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i111, align 8, !dbg !8225
  %56 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %55, i32 0, i32 0, !dbg !8226
  %rlock.i112 = bitcast %union.anon* %56 to %struct.raw_spinlock*, !dbg !8226
  br label %do.end91, !dbg !8224

do.end91:                                         ; preds = %do.body88
  br label %do.end92, !dbg !8222

do.end92:                                         ; preds = %do.end91
  br label %do.end93, !dbg !8213

do.end93:                                         ; preds = %do.end92
  br label %do.end94, !dbg !8212

do.end94:                                         ; preds = %do.end93
  br label %do.end95, !dbg !8207

do.end95:                                         ; preds = %do.end94
  %57 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8227
  %pflags96 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %57, i32 0, i32 4, !dbg !8228
  %58 = load i32, i32* %pflags96, align 32, !dbg !8229
  %and97 = and i32 %58, -393217, !dbg !8229
  store i32 %and97, i32* %pflags96, align 32, !dbg !8229
  %59 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8230
  %lock98 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %59, i32 0, i32 2, !dbg !8231
  %60 = load %struct.spinlock*, %struct.spinlock** %lock98, align 16, !dbg !8231
  %61 = load i64, i64* %flags, align 8, !dbg !8232
  store %struct.spinlock* %60, %struct.spinlock** %lock.addr.i99, align 8
  store i64 %61, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1101, metadata !7437, metadata !DIExpression()) #2, !dbg !8233
  call void @llvm.dbg.declare(metadata !1101, metadata !7441, metadata !DIExpression()) #2, !dbg !8233
  store i32 1, i32* %tmp.i, align 4, !dbg !8233
  %62 = load i32, i32* %tmp.i, align 4, !dbg !8233
  call void @llvm.dbg.declare(metadata !1101, metadata !7442, metadata !DIExpression()) #2, !dbg !8234
  call void @llvm.dbg.declare(metadata !1101, metadata !7448, metadata !DIExpression()) #2, !dbg !8234
  store i32 1, i32* %tmp8.i, align 4, !dbg !8234
  %63 = load i32, i32* %tmp8.i, align 4, !dbg !8234
  %64 = load i64, i64* %flags.addr.i, align 8, !dbg !8235
  call void @arch_local_irq_restore(i64 %64) #9, !dbg !8235
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !8236, !srcloc !7452
  %65 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i99, align 8, !dbg !8237
  %66 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %65, i32 0, i32 0, !dbg !8237
  %rlock.i100 = bitcast %union.anon* %66 to %struct.raw_spinlock*, !dbg !8237
  br label %return, !dbg !8238

return:                                           ; preds = %do.end95, %if.then
  ret void, !dbg !8238
}

; Function Attrs: noredzone
declare dso_local %struct.ata_link* @ata_link_next(%struct.ata_link*, %struct.ata_port*, i32) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noredzone
declare dso_local %struct.ata_device* @ata_dev_next(%struct.ata_device*, %struct.ata_link*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_ncq_enabled(%struct.ata_device* %dev) #0 !dbg !8239 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !8242, metadata !DIExpression()), !dbg !8243
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !8244
  %flags = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 3, !dbg !8245
  %1 = load i64, i64* %flags, align 16, !dbg !8245
  %and = and i64 %1, 12296, !dbg !8246
  %cmp = icmp eq i64 %and, 8, !dbg !8247
  %conv = zext i1 %cmp to i32, !dbg !8247
  ret i32 %conv, !dbg !8248
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_eh_unload(%struct.ata_port* %ap) #0 !dbg !8249 {
entry:
  %lock.addr.i33 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i33, metadata !7379, metadata !DIExpression()), !dbg !8250
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7386, metadata !DIExpression()), !dbg !8252
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7388, metadata !DIExpression()), !dbg !8253
  %ap.addr = alloca %struct.ata_port*, align 8
  %link = alloca %struct.ata_link*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy14 = alloca i64, align 8
  %__dummy215 = alloca i64, align 8
  %tmp18 = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !8260, metadata !DIExpression()), !dbg !8261
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link, metadata !8262, metadata !DIExpression()), !dbg !8263
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !8264, metadata !DIExpression()), !dbg !8265
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8266, metadata !DIExpression()), !dbg !8267
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8268
  %call = call %struct.ata_link* @ata_link_next(%struct.ata_link* null, %struct.ata_port* %0, i32 2) #7, !dbg !8268
  store %struct.ata_link* %call, %struct.ata_link** %link, align 8, !dbg !8268
  br label %for.cond, !dbg !8268

for.cond:                                         ; preds = %for.inc7, %entry
  %1 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !8270
  %tobool = icmp ne %struct.ata_link* %1, null, !dbg !8268
  br i1 %tobool, label %for.body, label %for.end9, !dbg !8268

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !8272
  %3 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !8274
  %saved_scontrol = getelementptr inbounds %struct.ata_link, %struct.ata_link* %3, i32 0, i32 6, !dbg !8275
  %4 = load i32, i32* %saved_scontrol, align 4, !dbg !8275
  %and = and i32 %4, 4080, !dbg !8276
  %call1 = call i32 @sata_scr_write(%struct.ata_link* %2, i32 2, i32 %and) #7, !dbg !8277
  %5 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !8278
  %call2 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %5, i32 2) #7, !dbg !8278
  store %struct.ata_device* %call2, %struct.ata_device** %dev, align 8, !dbg !8278
  br label %for.cond3, !dbg !8278

for.cond3:                                        ; preds = %for.inc, %for.body
  %6 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !8280
  %tobool4 = icmp ne %struct.ata_device* %6, null, !dbg !8278
  br i1 %tobool4, label %for.body5, label %for.end, !dbg !8278

for.body5:                                        ; preds = %for.cond3
  %7 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !8282
  call void @ata_dev_disable(%struct.ata_device* %7) #7, !dbg !8283
  br label %for.inc, !dbg !8283

for.inc:                                          ; preds = %for.body5
  %8 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !8280
  %9 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !8280
  %call6 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %8, %struct.ata_link* %9, i32 2) #7, !dbg !8280
  store %struct.ata_device* %call6, %struct.ata_device** %dev, align 8, !dbg !8280
  br label %for.cond3, !dbg !8280, !llvm.loop !8284

for.end:                                          ; preds = %for.cond3
  br label %for.inc7, !dbg !8286

for.inc7:                                         ; preds = %for.end
  %10 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !8270
  %11 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8270
  %call8 = call %struct.ata_link* @ata_link_next(%struct.ata_link* %10, %struct.ata_port* %11, i32 2) #7, !dbg !8270
  store %struct.ata_link* %call8, %struct.ata_link** %link, align 8, !dbg !8270
  br label %for.cond, !dbg !8270, !llvm.loop !8287

for.end9:                                         ; preds = %for.cond
  br label %do.body, !dbg !8289

do.body:                                          ; preds = %for.end9
  br label %do.body10, !dbg !8290

do.body10:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8291, metadata !DIExpression()), !dbg !8293
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8294, metadata !DIExpression()), !dbg !8293
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8293
  %conv = zext i1 %cmp to i32, !dbg !8293
  store i32 1, i32* %tmp, align 4, !dbg !8293
  %12 = load i32, i32* %tmp, align 4, !dbg !8293
  br label %do.body11, !dbg !8295

do.body11:                                        ; preds = %do.body10
  br label %do.body12, !dbg !8296

do.body12:                                        ; preds = %do.body11
  br label %do.body13, !dbg !8297

do.body13:                                        ; preds = %do.body12
  call void @llvm.dbg.declare(metadata i64* %__dummy14, metadata !8299, metadata !DIExpression()), !dbg !8302
  call void @llvm.dbg.declare(metadata i64* %__dummy215, metadata !8303, metadata !DIExpression()), !dbg !8302
  %cmp16 = icmp eq i64* %__dummy14, %__dummy215, !dbg !8302
  %conv17 = zext i1 %cmp16 to i32, !dbg !8302
  store i32 1, i32* %tmp18, align 4, !dbg !8302
  %13 = load i32, i32* %tmp18, align 4, !dbg !8302
  %call19 = call i64 @arch_local_irq_save() #7, !dbg !8304
  store i64 %call19, i64* %flags, align 8, !dbg !8304
  br label %do.end, !dbg !8304

do.end:                                           ; preds = %do.body13
  br label %do.end20, !dbg !8297

do.end20:                                         ; preds = %do.end
  br label %do.body21, !dbg !8296

do.body21:                                        ; preds = %do.end20
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !8305, !srcloc !8306
  br label %do.body22, !dbg !8305

do.body22:                                        ; preds = %do.body21
  %14 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8307
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %14, i32 0, i32 2, !dbg !8307
  %15 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !8307
  store %struct.spinlock* %15, %struct.spinlock** %lock.addr.i, align 8
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8308
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !8309
  %rlock.i = bitcast %union.anon* %17 to %struct.raw_spinlock*, !dbg !8309
  br label %do.end24, !dbg !8307

do.end24:                                         ; preds = %do.body22
  br label %do.end25, !dbg !8305

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !8296

do.end26:                                         ; preds = %do.end25
  br label %do.end27, !dbg !8295

do.end27:                                         ; preds = %do.end26
  br label %do.end28, !dbg !8290

do.end28:                                         ; preds = %do.end27
  %18 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8310
  %call29 = call i32 @ata_port_freeze(%struct.ata_port* %18) #7, !dbg !8311
  %19 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8312
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %19, i32 0, i32 4, !dbg !8313
  %20 = load i32, i32* %pflags, align 32, !dbg !8314
  %and30 = and i32 %20, -2, !dbg !8314
  store i32 %and30, i32* %pflags, align 32, !dbg !8314
  %21 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8315
  %pflags31 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %21, i32 0, i32 4, !dbg !8316
  %22 = load i32, i32* %pflags31, align 32, !dbg !8317
  %or = or i32 %22, 1024, !dbg !8317
  store i32 %or, i32* %pflags31, align 32, !dbg !8317
  %23 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8318
  %lock32 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %23, i32 0, i32 2, !dbg !8319
  %24 = load %struct.spinlock*, %struct.spinlock** %lock32, align 16, !dbg !8319
  %25 = load i64, i64* %flags, align 8, !dbg !8320
  store %struct.spinlock* %24, %struct.spinlock** %lock.addr.i33, align 8
  store i64 %25, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1101, metadata !7437, metadata !DIExpression()) #2, !dbg !8321
  call void @llvm.dbg.declare(metadata !1101, metadata !7441, metadata !DIExpression()) #2, !dbg !8321
  store i32 1, i32* %tmp.i, align 4, !dbg !8321
  %26 = load i32, i32* %tmp.i, align 4, !dbg !8321
  call void @llvm.dbg.declare(metadata !1101, metadata !7442, metadata !DIExpression()) #2, !dbg !8322
  call void @llvm.dbg.declare(metadata !1101, metadata !7448, metadata !DIExpression()) #2, !dbg !8322
  store i32 1, i32* %tmp8.i, align 4, !dbg !8322
  %27 = load i32, i32* %tmp8.i, align 4, !dbg !8322
  %28 = load i64, i64* %flags.addr.i, align 8, !dbg !8323
  call void @arch_local_irq_restore(i64 %28) #9, !dbg !8323
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !8324, !srcloc !7452
  %29 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i33, align 8, !dbg !8325
  %30 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %29, i32 0, i32 0, !dbg !8325
  %rlock.i34 = bitcast %union.anon* %30 to %struct.raw_spinlock*, !dbg !8325
  ret void, !dbg !8326
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_eh_finish(%struct.ata_port* %ap) #0 !dbg !8327 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %qc = alloca %struct.ata_queued_cmd*, align 8
  %tag = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp33 = alloca i64, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !8328, metadata !DIExpression()), !dbg !8329
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc, metadata !8330, metadata !DIExpression()), !dbg !8331
  call void @llvm.dbg.declare(metadata i32* %tag, metadata !8332, metadata !DIExpression()), !dbg !8333
  store i32 0, i32* %tag, align 4, !dbg !8334
  br label %for.cond, !dbg !8334

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %tag, align 4, !dbg !8336
  %cmp = icmp slt i32 %0, 32, !dbg !8336
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8336

land.rhs:                                         ; preds = %for.cond
  %1 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8338
  %2 = load i32, i32* %tag, align 4, !dbg !8338
  %call = call %struct.ata_queued_cmd* @__ata_qc_from_tag(%struct.ata_port* %1, i32 %2) #7, !dbg !8338
  store %struct.ata_queued_cmd* %call, %struct.ata_queued_cmd** %qc, align 8, !dbg !8338
  store i32 1, i32* %tmp, align 4, !dbg !8338
  %3 = load i32, i32* %tmp, align 4, !dbg !8338
  %tobool = icmp ne i32 %3, 0, !dbg !8336
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %4 = phi i1 [ false, %for.cond ], [ %tobool, %land.rhs ], !dbg !8340
  br i1 %4, label %for.body, label %for.end, !dbg !8334

for.body:                                         ; preds = %land.end
  %5 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !8341
  %flags = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %5, i32 0, i32 6, !dbg !8344
  %6 = load i64, i64* %flags, align 8, !dbg !8344
  %and = and i64 %6, 65536, !dbg !8345
  %tobool1 = icmp ne i64 %and, 0, !dbg !8345
  br i1 %tobool1, label %if.end, label %if.then, !dbg !8346

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !8347

if.end:                                           ; preds = %for.body
  %7 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !8348
  %err_mask = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %7, i32 0, i32 20, !dbg !8350
  %8 = load i32, i32* %err_mask, align 4, !dbg !8350
  %tobool2 = icmp ne i32 %8, 0, !dbg !8348
  br i1 %tobool2, label %if.then3, label %if.else9, !dbg !8351

if.then3:                                         ; preds = %if.end
  %9 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !8352
  %flags4 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %9, i32 0, i32 6, !dbg !8355
  %10 = load i64, i64* %flags4, align 8, !dbg !8355
  %and5 = and i64 %10, 128, !dbg !8356
  %tobool6 = icmp ne i64 %and5, 0, !dbg !8356
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !8357

if.then7:                                         ; preds = %if.then3
  %11 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !8358
  call void @ata_eh_qc_retry(%struct.ata_queued_cmd* %11) #7, !dbg !8359
  br label %if.end8, !dbg !8359

if.else:                                          ; preds = %if.then3
  %12 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !8360
  call void @ata_eh_qc_complete(%struct.ata_queued_cmd* %12) #7, !dbg !8361
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then7
  br label %if.end16, !dbg !8362

if.else9:                                         ; preds = %if.end
  %13 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !8363
  %flags10 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %13, i32 0, i32 6, !dbg !8366
  %14 = load i64, i64* %flags10, align 8, !dbg !8366
  %and11 = and i64 %14, 131072, !dbg !8367
  %tobool12 = icmp ne i64 %and11, 0, !dbg !8367
  br i1 %tobool12, label %if.then13, label %if.else14, !dbg !8368

if.then13:                                        ; preds = %if.else9
  %15 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !8369
  call void @ata_eh_qc_complete(%struct.ata_queued_cmd* %15) #7, !dbg !8371
  br label %if.end15, !dbg !8372

if.else14:                                        ; preds = %if.else9
  %16 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !8373
  %result_tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %16, i32 0, i32 21, !dbg !8375
  %17 = bitcast %struct.ata_taskfile* %result_tf to i8*, !dbg !8376
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 32, i1 false), !dbg !8376
  %18 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !8377
  call void @ata_eh_qc_retry(%struct.ata_queued_cmd* %18) #7, !dbg !8378
  br label %if.end15

if.end15:                                         ; preds = %if.else14, %if.then13
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.end8
  br label %for.inc, !dbg !8379

for.inc:                                          ; preds = %if.end16, %if.then
  %19 = load i32, i32* %tag, align 4, !dbg !8336
  %inc = add i32 %19, 1, !dbg !8336
  store i32 %inc, i32* %tag, align 4, !dbg !8336
  br label %for.cond, !dbg !8336, !llvm.loop !8380

for.end:                                          ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8382, metadata !DIExpression()), !dbg !8384
  %20 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8384
  %nr_active_links = getelementptr inbounds %struct.ata_port, %struct.ata_port* %20, i32 0, i32 22, !dbg !8384
  %21 = load i32, i32* %nr_active_links, align 16, !dbg !8384
  %tobool17 = icmp ne i32 %21, 0, !dbg !8384
  %lnot = xor i1 %tobool17, true, !dbg !8384
  %lnot18 = xor i1 %lnot, true, !dbg !8384
  %lnot.ext = zext i1 %lnot18 to i32, !dbg !8384
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8384
  %22 = load i32, i32* %__ret_warn_on, align 4, !dbg !8385
  %tobool19 = icmp ne i32 %22, 0, !dbg !8385
  %lnot20 = xor i1 %tobool19, true, !dbg !8385
  %lnot22 = xor i1 %lnot20, true, !dbg !8385
  %lnot.ext23 = zext i1 %lnot22 to i32, !dbg !8385
  %conv = sext i32 %lnot.ext23 to i64, !dbg !8385
  %tobool24 = icmp ne i64 %conv, 0, !dbg !8385
  br i1 %tobool24, label %if.then25, label %if.end32, !dbg !8384

if.then25:                                        ; preds = %for.end
  br label %do.body, !dbg !8385

do.body:                                          ; preds = %if.then25
  br label %do.body26, !dbg !8387

do.body26:                                        ; preds = %do.body
  br label %do.end, !dbg !8389

do.end:                                           ; preds = %do.body26
  br label %do.body27, !dbg !8387

do.body27:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), i32 3800, i32 2305, i64 12) #2, !dbg !8391, !srcloc !8393
  br label %do.end28, !dbg !8391

do.end28:                                         ; preds = %do.body27
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 337) #2, !dbg !8394, !srcloc !8396
  br label %do.body29, !dbg !8387

do.body29:                                        ; preds = %do.end28
  br label %do.end30, !dbg !8397

do.end30:                                         ; preds = %do.body29
  br label %do.end31, !dbg !8387

do.end31:                                         ; preds = %do.end30
  br label %if.end32, !dbg !8387

if.end32:                                         ; preds = %do.end31, %for.end
  %23 = load i32, i32* %__ret_warn_on, align 4, !dbg !8384
  %tobool34 = icmp ne i32 %23, 0, !dbg !8384
  %lnot35 = xor i1 %tobool34, true, !dbg !8384
  %lnot37 = xor i1 %lnot35, true, !dbg !8384
  %lnot.ext38 = zext i1 %lnot37 to i32, !dbg !8384
  %conv39 = sext i32 %lnot.ext38 to i64, !dbg !8384
  store i64 %conv39, i64* %tmp33, align 8, !dbg !8385
  %24 = load i64, i64* %tmp33, align 8, !dbg !8384
  %25 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8399
  %nr_active_links40 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %25, i32 0, i32 22, !dbg !8400
  store i32 0, i32* %nr_active_links40, align 16, !dbg !8401
  ret void, !dbg !8402
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_eh_handle_port_suspend(%struct.ata_port* %ap) #0 !dbg !8403 {
entry:
  %lock.addr.i130 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i130, metadata !7388, metadata !DIExpression()), !dbg !8404
  %lock.addr.i125 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i125, metadata !7379, metadata !DIExpression()), !dbg !8411
  %flags.addr.i126 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i126, metadata !7386, metadata !DIExpression()), !dbg !8413
  %tmp.i127 = alloca i32, align 4
  %tmp8.i128 = alloca i32, align 4
  %lock.addr.i120 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i120, metadata !7379, metadata !DIExpression()), !dbg !8414
  %flags.addr.i121 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i121, metadata !7386, metadata !DIExpression()), !dbg !8418
  %tmp.i122 = alloca i32, align 4
  %tmp8.i123 = alloca i32, align 4
  %lock.addr.i118 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i118, metadata !7379, metadata !DIExpression()), !dbg !8419
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7386, metadata !DIExpression()), !dbg !8421
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7388, metadata !DIExpression()), !dbg !8422
  %ap.addr = alloca %struct.ata_port*, align 8
  %flags = alloca i64, align 8
  %rc = alloca i32, align 4
  %dev = alloca %struct.ata_device*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp44 = alloca i64, align 8
  %__dummy80 = alloca i64, align 8
  %__dummy281 = alloca i64, align 8
  %tmp84 = alloca i32, align 4
  %__dummy88 = alloca i64, align 8
  %__dummy289 = alloca i64, align 8
  %tmp92 = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !8429, metadata !DIExpression()), !dbg !8430
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8431, metadata !DIExpression()), !dbg !8432
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !8433, metadata !DIExpression()), !dbg !8434
  store i32 0, i32* %rc, align 4, !dbg !8434
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !8435, metadata !DIExpression()), !dbg !8436
  br label %do.body, !dbg !8437

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !8438

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8439, metadata !DIExpression()), !dbg !8441
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8442, metadata !DIExpression()), !dbg !8441
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8441
  %conv = zext i1 %cmp to i32, !dbg !8441
  store i32 1, i32* %tmp, align 4, !dbg !8441
  %0 = load i32, i32* %tmp, align 4, !dbg !8441
  br label %do.body2, !dbg !8443

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !8444

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !8445

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !8447, metadata !DIExpression()), !dbg !8450
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !8451, metadata !DIExpression()), !dbg !8450
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !8450
  %conv8 = zext i1 %cmp7 to i32, !dbg !8450
  store i32 1, i32* %tmp9, align 4, !dbg !8450
  %1 = load i32, i32* %tmp9, align 4, !dbg !8450
  %call = call i64 @arch_local_irq_save() #7, !dbg !8452
  store i64 %call, i64* %flags, align 8, !dbg !8452
  br label %do.end, !dbg !8452

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !8445

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !8444

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !8453, !srcloc !8454
  br label %do.body12, !dbg !8453

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8455
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 2, !dbg !8455
  %3 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !8455
  store %struct.spinlock* %3, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8456
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !8457
  %rlock.i = bitcast %union.anon* %5 to %struct.raw_spinlock*, !dbg !8457
  br label %do.end14, !dbg !8455

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !8453

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !8444

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !8443

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !8438

do.end18:                                         ; preds = %do.end17
  %6 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8458
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %6, i32 0, i32 4, !dbg !8459
  %7 = load i32, i32* %pflags, align 32, !dbg !8459
  %and = and i32 %7, 262144, !dbg !8460
  %tobool = icmp ne i32 %and, 0, !dbg !8460
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !8461

lor.lhs.false:                                    ; preds = %do.end18
  %8 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8462
  %pm_mesg = getelementptr inbounds %struct.ata_port, %struct.ata_port* %8, i32 0, i32 43, !dbg !8463
  %event = getelementptr inbounds %struct.pm_message, %struct.pm_message* %pm_mesg, i32 0, i32 0, !dbg !8464
  %9 = load i32, i32* %event, align 8, !dbg !8464
  %and19 = and i32 %9, 16, !dbg !8465
  %tobool20 = icmp ne i32 %and19, 0, !dbg !8465
  br i1 %tobool20, label %if.then, label %if.end, !dbg !8466

if.then:                                          ; preds = %lor.lhs.false, %do.end18
  %10 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8467
  %lock21 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %10, i32 0, i32 2, !dbg !8468
  %11 = load %struct.spinlock*, %struct.spinlock** %lock21, align 16, !dbg !8468
  %12 = load i64, i64* %flags, align 8, !dbg !8469
  store %struct.spinlock* %11, %struct.spinlock** %lock.addr.i120, align 8
  store i64 %12, i64* %flags.addr.i121, align 8
  call void @llvm.dbg.declare(metadata !1101, metadata !7437, metadata !DIExpression()) #2, !dbg !8470
  call void @llvm.dbg.declare(metadata !1101, metadata !7441, metadata !DIExpression()) #2, !dbg !8470
  store i32 1, i32* %tmp.i122, align 4, !dbg !8470
  %13 = load i32, i32* %tmp.i122, align 4, !dbg !8470
  call void @llvm.dbg.declare(metadata !1101, metadata !7442, metadata !DIExpression()) #2, !dbg !8471
  call void @llvm.dbg.declare(metadata !1101, metadata !7448, metadata !DIExpression()) #2, !dbg !8471
  store i32 1, i32* %tmp8.i123, align 4, !dbg !8471
  %14 = load i32, i32* %tmp8.i123, align 4, !dbg !8471
  %15 = load i64, i64* %flags.addr.i121, align 8, !dbg !8472
  call void @arch_local_irq_restore(i64 %15) #9, !dbg !8472
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !8473, !srcloc !7452
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i120, align 8, !dbg !8474
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !8474
  %rlock.i124 = bitcast %union.anon* %17 to %struct.raw_spinlock*, !dbg !8474
  br label %return, !dbg !8475

if.end:                                           ; preds = %lor.lhs.false
  %18 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8476
  %lock22 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %18, i32 0, i32 2, !dbg !8477
  %19 = load %struct.spinlock*, %struct.spinlock** %lock22, align 16, !dbg !8477
  %20 = load i64, i64* %flags, align 8, !dbg !8478
  store %struct.spinlock* %19, %struct.spinlock** %lock.addr.i125, align 8
  store i64 %20, i64* %flags.addr.i126, align 8
  call void @llvm.dbg.declare(metadata !1101, metadata !7437, metadata !DIExpression()) #2, !dbg !8479
  call void @llvm.dbg.declare(metadata !1101, metadata !7441, metadata !DIExpression()) #2, !dbg !8479
  store i32 1, i32* %tmp.i127, align 4, !dbg !8479
  %21 = load i32, i32* %tmp.i127, align 4, !dbg !8479
  call void @llvm.dbg.declare(metadata !1101, metadata !7442, metadata !DIExpression()) #2, !dbg !8480
  call void @llvm.dbg.declare(metadata !1101, metadata !7448, metadata !DIExpression()) #2, !dbg !8480
  store i32 1, i32* %tmp8.i128, align 4, !dbg !8480
  %22 = load i32, i32* %tmp8.i128, align 4, !dbg !8480
  %23 = load i64, i64* %flags.addr.i126, align 8, !dbg !8481
  call void @arch_local_irq_restore(i64 %23) #9, !dbg !8481
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !8482, !srcloc !7452
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i125, align 8, !dbg !8483
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !8483
  %rlock.i129 = bitcast %union.anon* %25 to %struct.raw_spinlock*, !dbg !8483
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8484, metadata !DIExpression()), !dbg !8486
  %26 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8486
  %pflags23 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %26, i32 0, i32 4, !dbg !8486
  %27 = load i32, i32* %pflags23, align 32, !dbg !8486
  %and24 = and i32 %27, 131072, !dbg !8486
  %tobool25 = icmp ne i32 %and24, 0, !dbg !8486
  %lnot = xor i1 %tobool25, true, !dbg !8486
  %lnot26 = xor i1 %lnot, true, !dbg !8486
  %lnot.ext = zext i1 %lnot26 to i32, !dbg !8486
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8486
  %28 = load i32, i32* %__ret_warn_on, align 4, !dbg !8487
  %tobool27 = icmp ne i32 %28, 0, !dbg !8487
  %lnot28 = xor i1 %tobool27, true, !dbg !8487
  %lnot30 = xor i1 %lnot28, true, !dbg !8487
  %lnot.ext31 = zext i1 %lnot30 to i32, !dbg !8487
  %conv32 = sext i32 %lnot.ext31 to i64, !dbg !8487
  %tobool33 = icmp ne i64 %conv32, 0, !dbg !8487
  br i1 %tobool33, label %if.then34, label %if.end43, !dbg !8486

if.then34:                                        ; preds = %if.end
  br label %do.body35, !dbg !8487

do.body35:                                        ; preds = %if.then34
  br label %do.body36, !dbg !8489

do.body36:                                        ; preds = %do.body35
  br label %do.end37, !dbg !8491

do.end37:                                         ; preds = %do.body36
  br label %do.body38, !dbg !8489

do.body38:                                        ; preds = %do.end37
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), i32 3885, i32 2305, i64 12) #2, !dbg !8493, !srcloc !8495
  br label %do.end39, !dbg !8493

do.end39:                                         ; preds = %do.body38
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 338) #2, !dbg !8496, !srcloc !8498
  br label %do.body40, !dbg !8489

do.body40:                                        ; preds = %do.end39
  br label %do.end41, !dbg !8499

do.end41:                                         ; preds = %do.body40
  br label %do.end42, !dbg !8489

do.end42:                                         ; preds = %do.end41
  br label %if.end43, !dbg !8489

if.end43:                                         ; preds = %do.end42, %if.end
  %29 = load i32, i32* %__ret_warn_on, align 4, !dbg !8486
  %tobool45 = icmp ne i32 %29, 0, !dbg !8486
  %lnot46 = xor i1 %tobool45, true, !dbg !8486
  %lnot48 = xor i1 %lnot46, true, !dbg !8486
  %lnot.ext49 = zext i1 %lnot48 to i32, !dbg !8486
  %conv50 = sext i32 %lnot.ext49 to i64, !dbg !8486
  store i64 %conv50, i64* %tmp44, align 8, !dbg !8487
  %30 = load i64, i64* %tmp44, align 8, !dbg !8486
  %31 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8501
  %pm_mesg51 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %31, i32 0, i32 43, !dbg !8501
  %event52 = getelementptr inbounds %struct.pm_message, %struct.pm_message* %pm_mesg51, i32 0, i32 0, !dbg !8501
  %32 = load i32, i32* %event52, align 8, !dbg !8501
  %and53 = and i32 %32, 1024, !dbg !8501
  %cmp54 = icmp ne i32 %and53, 0, !dbg !8501
  br i1 %cmp54, label %if.then56, label %if.end64, !dbg !8503

if.then56:                                        ; preds = %if.end43
  %33 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8504
  %link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %33, i32 0, i32 25, !dbg !8504
  %call57 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %link, i32 0) #7, !dbg !8504
  store %struct.ata_device* %call57, %struct.ata_device** %dev, align 8, !dbg !8504
  br label %for.cond, !dbg !8504

for.cond:                                         ; preds = %for.inc, %if.then56
  %34 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !8507
  %tobool58 = icmp ne %struct.ata_device* %34, null, !dbg !8504
  br i1 %tobool58, label %for.body, label %for.end, !dbg !8504

for.body:                                         ; preds = %for.cond
  %35 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !8509
  %call59 = call zeroext i1 @zpodd_dev_enabled(%struct.ata_device* %35) #7, !dbg !8512
  br i1 %call59, label %if.then60, label %if.end61, !dbg !8513

if.then60:                                        ; preds = %for.body
  %36 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !8514
  call void @zpodd_on_suspend(%struct.ata_device* %36) #7, !dbg !8515
  br label %if.end61, !dbg !8515

if.end61:                                         ; preds = %if.then60, %for.body
  br label %for.inc, !dbg !8516

for.inc:                                          ; preds = %if.end61
  %37 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !8507
  %38 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8507
  %link62 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %38, i32 0, i32 25, !dbg !8507
  %call63 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %37, %struct.ata_link* %link62, i32 0) #7, !dbg !8507
  store %struct.ata_device* %call63, %struct.ata_device** %dev, align 8, !dbg !8507
  br label %for.cond, !dbg !8507, !llvm.loop !8517

for.end:                                          ; preds = %for.cond
  br label %if.end64, !dbg !8519

if.end64:                                         ; preds = %for.end, %if.end43
  %39 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8520
  %call65 = call i32 @ata_acpi_on_suspend(%struct.ata_port* %39) #7, !dbg !8521
  store i32 %call65, i32* %rc, align 4, !dbg !8522
  %40 = load i32, i32* %rc, align 4, !dbg !8523
  %tobool66 = icmp ne i32 %40, 0, !dbg !8523
  br i1 %tobool66, label %if.then67, label %if.end68, !dbg !8525

if.then67:                                        ; preds = %if.end64
  br label %out, !dbg !8526

if.end68:                                         ; preds = %if.end64
  %41 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8527
  call void @ata_eh_freeze_port(%struct.ata_port* %41) #7, !dbg !8528
  %42 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8529
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %42, i32 0, i32 1, !dbg !8531
  %43 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !8531
  %port_suspend = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %43, i32 0, i32 32, !dbg !8532
  %44 = load i32 (%struct.ata_port*, i32)*, i32 (%struct.ata_port*, i32)** %port_suspend, align 8, !dbg !8532
  %tobool69 = icmp ne i32 (%struct.ata_port*, i32)* %44, null, !dbg !8529
  br i1 %tobool69, label %if.then70, label %if.end75, !dbg !8533

if.then70:                                        ; preds = %if.end68
  %45 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8534
  %ops71 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %45, i32 0, i32 1, !dbg !8535
  %46 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops71, align 8, !dbg !8535
  %port_suspend72 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %46, i32 0, i32 32, !dbg !8536
  %47 = load i32 (%struct.ata_port*, i32)*, i32 (%struct.ata_port*, i32)** %port_suspend72, align 8, !dbg !8536
  %48 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8537
  %49 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8538
  %pm_mesg73 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %49, i32 0, i32 43, !dbg !8539
  %coerce.dive = getelementptr inbounds %struct.pm_message, %struct.pm_message* %pm_mesg73, i32 0, i32 0, !dbg !8534
  %50 = load i32, i32* %coerce.dive, align 8, !dbg !8534
  %call74 = call i32 %47(%struct.ata_port* %48, i32 %50) #7, !dbg !8534
  store i32 %call74, i32* %rc, align 4, !dbg !8540
  br label %if.end75, !dbg !8541

if.end75:                                         ; preds = %if.then70, %if.end68
  %51 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8542
  %52 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8543
  %pm_mesg76 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %52, i32 0, i32 43, !dbg !8544
  %coerce.dive77 = getelementptr inbounds %struct.pm_message, %struct.pm_message* %pm_mesg76, i32 0, i32 0, !dbg !8545
  %53 = load i32, i32* %coerce.dive77, align 8, !dbg !8545
  call void @ata_acpi_set_state(%struct.ata_port* %51, i32 %53) #7, !dbg !8545
  br label %out, !dbg !8545

out:                                              ; preds = %if.end75, %if.then67
  call void @llvm.dbg.label(metadata !8546), !dbg !8547
  br label %do.body78, !dbg !8548

do.body78:                                        ; preds = %out
  br label %do.body79, !dbg !8549

do.body79:                                        ; preds = %do.body78
  call void @llvm.dbg.declare(metadata i64* %__dummy80, metadata !8550, metadata !DIExpression()), !dbg !8552
  call void @llvm.dbg.declare(metadata i64* %__dummy281, metadata !8553, metadata !DIExpression()), !dbg !8552
  %cmp82 = icmp eq i64* %__dummy80, %__dummy281, !dbg !8552
  %conv83 = zext i1 %cmp82 to i32, !dbg !8552
  store i32 1, i32* %tmp84, align 4, !dbg !8552
  %54 = load i32, i32* %tmp84, align 4, !dbg !8552
  br label %do.body85, !dbg !8554

do.body85:                                        ; preds = %do.body79
  br label %do.body86, !dbg !8555

do.body86:                                        ; preds = %do.body85
  br label %do.body87, !dbg !8556

do.body87:                                        ; preds = %do.body86
  call void @llvm.dbg.declare(metadata i64* %__dummy88, metadata !8558, metadata !DIExpression()), !dbg !8561
  call void @llvm.dbg.declare(metadata i64* %__dummy289, metadata !8562, metadata !DIExpression()), !dbg !8561
  %cmp90 = icmp eq i64* %__dummy88, %__dummy289, !dbg !8561
  %conv91 = zext i1 %cmp90 to i32, !dbg !8561
  store i32 1, i32* %tmp92, align 4, !dbg !8561
  %55 = load i32, i32* %tmp92, align 4, !dbg !8561
  %call93 = call i64 @arch_local_irq_save() #7, !dbg !8563
  store i64 %call93, i64* %flags, align 8, !dbg !8563
  br label %do.end94, !dbg !8563

do.end94:                                         ; preds = %do.body87
  br label %do.end95, !dbg !8556

do.end95:                                         ; preds = %do.end94
  br label %do.body96, !dbg !8555

do.body96:                                        ; preds = %do.end95
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !8564, !srcloc !8565
  br label %do.body97, !dbg !8564

do.body97:                                        ; preds = %do.body96
  %56 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8566
  %lock98 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %56, i32 0, i32 2, !dbg !8566
  %57 = load %struct.spinlock*, %struct.spinlock** %lock98, align 16, !dbg !8566
  store %struct.spinlock* %57, %struct.spinlock** %lock.addr.i130, align 8
  %58 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i130, align 8, !dbg !8567
  %59 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %58, i32 0, i32 0, !dbg !8568
  %rlock.i131 = bitcast %union.anon* %59 to %struct.raw_spinlock*, !dbg !8568
  br label %do.end100, !dbg !8566

do.end100:                                        ; preds = %do.body97
  br label %do.end101, !dbg !8564

do.end101:                                        ; preds = %do.end100
  br label %do.end102, !dbg !8555

do.end102:                                        ; preds = %do.end101
  br label %do.end103, !dbg !8554

do.end103:                                        ; preds = %do.end102
  br label %do.end104, !dbg !8549

do.end104:                                        ; preds = %do.end103
  %60 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8569
  %pflags105 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %60, i32 0, i32 4, !dbg !8570
  %61 = load i32, i32* %pflags105, align 32, !dbg !8571
  %and106 = and i32 %61, -262145, !dbg !8571
  store i32 %and106, i32* %pflags105, align 32, !dbg !8571
  %62 = load i32, i32* %rc, align 4, !dbg !8572
  %cmp107 = icmp eq i32 %62, 0, !dbg !8574
  br i1 %cmp107, label %if.then109, label %if.else, !dbg !8575

if.then109:                                       ; preds = %do.end104
  %63 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8576
  %pflags110 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %63, i32 0, i32 4, !dbg !8577
  %64 = load i32, i32* %pflags110, align 32, !dbg !8578
  %or = or i32 %64, 131072, !dbg !8578
  store i32 %or, i32* %pflags110, align 32, !dbg !8578
  br label %if.end116, !dbg !8576

if.else:                                          ; preds = %do.end104
  %65 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8579
  %pflags111 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %65, i32 0, i32 4, !dbg !8581
  %66 = load i32, i32* %pflags111, align 32, !dbg !8581
  %and112 = and i32 %66, 4, !dbg !8582
  %tobool113 = icmp ne i32 %and112, 0, !dbg !8582
  br i1 %tobool113, label %if.then114, label %if.end115, !dbg !8583

if.then114:                                       ; preds = %if.else
  %67 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8584
  call void @ata_port_schedule_eh(%struct.ata_port* %67) #7, !dbg !8585
  br label %if.end115, !dbg !8585

if.end115:                                        ; preds = %if.then114, %if.else
  br label %if.end116

if.end116:                                        ; preds = %if.end115, %if.then109
  %68 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8586
  %lock117 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %68, i32 0, i32 2, !dbg !8587
  %69 = load %struct.spinlock*, %struct.spinlock** %lock117, align 16, !dbg !8587
  %70 = load i64, i64* %flags, align 8, !dbg !8588
  store %struct.spinlock* %69, %struct.spinlock** %lock.addr.i118, align 8
  store i64 %70, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1101, metadata !7437, metadata !DIExpression()) #2, !dbg !8589
  call void @llvm.dbg.declare(metadata !1101, metadata !7441, metadata !DIExpression()) #2, !dbg !8589
  store i32 1, i32* %tmp.i, align 4, !dbg !8589
  %71 = load i32, i32* %tmp.i, align 4, !dbg !8589
  call void @llvm.dbg.declare(metadata !1101, metadata !7442, metadata !DIExpression()) #2, !dbg !8590
  call void @llvm.dbg.declare(metadata !1101, metadata !7448, metadata !DIExpression()) #2, !dbg !8590
  store i32 1, i32* %tmp8.i, align 4, !dbg !8590
  %72 = load i32, i32* %tmp8.i, align 4, !dbg !8590
  %73 = load i64, i64* %flags.addr.i, align 8, !dbg !8591
  call void @arch_local_irq_restore(i64 %73) #9, !dbg !8591
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !8592, !srcloc !7452
  %74 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i118, align 8, !dbg !8593
  %75 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %74, i32 0, i32 0, !dbg !8593
  %rlock.i119 = bitcast %union.anon* %75 to %struct.raw_spinlock*, !dbg !8593
  br label %return, !dbg !8594

return:                                           ; preds = %if.end116, %if.then
  ret void, !dbg !8595
}

; Function Attrs: noredzone
declare dso_local void @ata_port_printk(%struct.ata_port*, i8*, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.ata_queued_cmd* @ata_qc_from_tag(%struct.ata_port* %ap, i32 %tag) #0 !dbg !8596 {
entry:
  %retval = alloca %struct.ata_queued_cmd*, align 8
  %ap.addr = alloca %struct.ata_port*, align 8
  %tag.addr = alloca i32, align 4
  %qc = alloca %struct.ata_queued_cmd*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !8597, metadata !DIExpression()), !dbg !8598
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !8599, metadata !DIExpression()), !dbg !8600
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc, metadata !8601, metadata !DIExpression()), !dbg !8602
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8603
  %1 = load i32, i32* %tag.addr, align 4, !dbg !8604
  %call = call %struct.ata_queued_cmd* @__ata_qc_from_tag(%struct.ata_port* %0, i32 %1) #7, !dbg !8605
  store %struct.ata_queued_cmd* %call, %struct.ata_queued_cmd** %qc, align 8, !dbg !8602
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !8606
  %tobool = icmp ne %struct.ata_queued_cmd* %2, null, !dbg !8606
  %lnot = xor i1 %tobool, true, !dbg !8606
  %lnot1 = xor i1 %lnot, true, !dbg !8606
  %lnot2 = xor i1 %lnot1, true, !dbg !8606
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !8606
  %conv = sext i32 %lnot.ext to i64, !dbg !8606
  %tobool3 = icmp ne i64 %conv, 0, !dbg !8606
  br i1 %tobool3, label %if.then, label %lor.lhs.false, !dbg !8608

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8609
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %3, i32 0, i32 1, !dbg !8610
  %4 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !8610
  %error_handler = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %4, i32 0, i32 22, !dbg !8611
  %5 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %error_handler, align 8, !dbg !8611
  %tobool4 = icmp ne void (%struct.ata_port*)* %5, null, !dbg !8609
  br i1 %tobool4, label %if.end, label %if.then, !dbg !8612

if.then:                                          ; preds = %lor.lhs.false, %entry
  %6 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !8613
  store %struct.ata_queued_cmd* %6, %struct.ata_queued_cmd** %retval, align 8, !dbg !8614
  br label %return, !dbg !8614

if.end:                                           ; preds = %lor.lhs.false
  %7 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !8615
  %flags = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %7, i32 0, i32 6, !dbg !8617
  %8 = load i64, i64* %flags, align 8, !dbg !8617
  %and = and i64 %8, 65537, !dbg !8618
  %cmp = icmp eq i64 %and, 1, !dbg !8619
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !8620

if.then6:                                         ; preds = %if.end
  %9 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !8621
  store %struct.ata_queued_cmd* %9, %struct.ata_queued_cmd** %retval, align 8, !dbg !8622
  br label %return, !dbg !8622

if.end7:                                          ; preds = %if.end
  store %struct.ata_queued_cmd* null, %struct.ata_queued_cmd** %retval, align 8, !dbg !8623
  br label %return, !dbg !8623

return:                                           ; preds = %if.end7, %if.then6, %if.then
  %10 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %retval, align 8, !dbg !8624
  ret %struct.ata_queued_cmd* %10, !dbg !8624
}

; Function Attrs: noredzone
declare dso_local void @scsi_eh_flush_done_q(%struct.list_head*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @schedule_delayed_work(%struct.delayed_work* %dwork, i64 %delay) #0 !dbg !8625 {
entry:
  %dwork.addr = alloca %struct.delayed_work*, align 8
  %delay.addr = alloca i64, align 8
  store %struct.delayed_work* %dwork, %struct.delayed_work** %dwork.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.delayed_work** %dwork.addr, metadata !8629, metadata !DIExpression()), !dbg !8630
  store i64 %delay, i64* %delay.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %delay.addr, metadata !8631, metadata !DIExpression()), !dbg !8632
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_wq, align 8, !dbg !8633
  %1 = load %struct.delayed_work*, %struct.delayed_work** %dwork.addr, align 8, !dbg !8634
  %2 = load i64, i64* %delay.addr, align 8, !dbg !8635
  %call = call zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %0, %struct.delayed_work* %1, i64 %2) #7, !dbg !8636
  ret i1 %call, !dbg !8637
}

; Function Attrs: noredzone
declare dso_local void @__wake_up(%struct.wait_queue_head*, i32, i32, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_port_wait_eh(%struct.ata_port* %ap) #0 !dbg !8638 {
entry:
  %lock.addr.i61 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i61, metadata !7379, metadata !DIExpression()), !dbg !8639
  %flags.addr.i62 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i62, metadata !7386, metadata !DIExpression()), !dbg !8641
  %tmp.i63 = alloca i32, align 4
  %tmp8.i64 = alloca i32, align 4
  %lock.addr.i59 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i59, metadata !7388, metadata !DIExpression()), !dbg !8642
  %lock.addr.i56 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i56, metadata !7379, metadata !DIExpression()), !dbg !8650
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7386, metadata !DIExpression()), !dbg !8652
  %tmp.i57 = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7388, metadata !DIExpression()), !dbg !8653
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !7302, metadata !DIExpression()), !dbg !8660
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !7310, metadata !DIExpression()), !dbg !8662
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !7313, metadata !DIExpression()), !dbg !8663
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %ap.addr = alloca %struct.ata_port*, align 8
  %flags = alloca i64, align 8
  %wait = alloca %struct.wait_queue_entry, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy9 = alloca i64, align 8
  %__dummy210 = alloca i64, align 8
  %tmp13 = alloca i32, align 4
  %__dummy27 = alloca i64, align 8
  %__dummy228 = alloca i64, align 8
  %tmp31 = alloca i32, align 4
  %__dummy35 = alloca i64, align 8
  %__dummy236 = alloca i64, align 8
  %tmp39 = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !8664, metadata !DIExpression()), !dbg !8665
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8666, metadata !DIExpression()), !dbg !8667
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %wait, metadata !8668, metadata !DIExpression()), !dbg !8669
  %flags1 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 0, !dbg !8669
  store i32 0, i32* %flags1, align 8, !dbg !8669
  %private = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 1, !dbg !8669
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !8662
  %0 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !8662
  %1 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #8, !dbg !8663, !srcloc !7339
  store i64 %1, i64* %pfo_val__.i, align 8, !dbg !8663
  %2 = load i64, i64* %pfo_val__.i, align 8, !dbg !8663
  %3 = inttoptr i64 %2 to %struct.task_struct*, !dbg !8663
  store %struct.task_struct* %3, %struct.task_struct** %tmp.i, align 8, !dbg !8663
  %4 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !8663
  store %struct.task_struct* %4, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !8660
  %5 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !8660
  store %struct.task_struct* %5, %struct.task_struct** %tmp1.i, align 8, !dbg !8660
  %6 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !8660
  %7 = bitcast %struct.task_struct* %6 to i8*, !dbg !8669
  store i8* %7, i8** %private, align 8, !dbg !8669
  %func = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 2, !dbg !8669
  store i32 (%struct.wait_queue_entry*, i32, i32, i8*)* @autoremove_wake_function, i32 (%struct.wait_queue_entry*, i32, i32, i8*)** %func, align 8, !dbg !8669
  %entry2 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 3, !dbg !8669
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %entry2, i32 0, i32 0, !dbg !8669
  %entry3 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 3, !dbg !8669
  store %struct.list_head* %entry3, %struct.list_head** %next, align 8, !dbg !8669
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %entry2, i32 0, i32 1, !dbg !8669
  %entry4 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 3, !dbg !8669
  store %struct.list_head* %entry4, %struct.list_head** %prev, align 8, !dbg !8669
  br label %retry, !dbg !8669

retry:                                            ; preds = %if.then, %entry
  call void @llvm.dbg.label(metadata !8670), !dbg !8671
  br label %do.body, !dbg !8672

do.body:                                          ; preds = %retry
  br label %do.body5, !dbg !8673

do.body5:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8674, metadata !DIExpression()), !dbg !8676
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8677, metadata !DIExpression()), !dbg !8676
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8676
  %conv = zext i1 %cmp to i32, !dbg !8676
  store i32 1, i32* %tmp, align 4, !dbg !8676
  %8 = load i32, i32* %tmp, align 4, !dbg !8676
  br label %do.body6, !dbg !8678

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !8679

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !8680

do.body8:                                         ; preds = %do.body7
  call void @llvm.dbg.declare(metadata i64* %__dummy9, metadata !8682, metadata !DIExpression()), !dbg !8685
  call void @llvm.dbg.declare(metadata i64* %__dummy210, metadata !8686, metadata !DIExpression()), !dbg !8685
  %cmp11 = icmp eq i64* %__dummy9, %__dummy210, !dbg !8685
  %conv12 = zext i1 %cmp11 to i32, !dbg !8685
  store i32 1, i32* %tmp13, align 4, !dbg !8685
  %9 = load i32, i32* %tmp13, align 4, !dbg !8685
  %call14 = call i64 @arch_local_irq_save() #7, !dbg !8687
  store i64 %call14, i64* %flags, align 8, !dbg !8687
  br label %do.end, !dbg !8687

do.end:                                           ; preds = %do.body8
  br label %do.end15, !dbg !8680

do.end15:                                         ; preds = %do.end
  br label %do.body16, !dbg !8679

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !8688, !srcloc !8689
  br label %do.body17, !dbg !8688

do.body17:                                        ; preds = %do.body16
  %10 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8690
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %10, i32 0, i32 2, !dbg !8690
  %11 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !8690
  store %struct.spinlock* %11, %struct.spinlock** %lock.addr.i, align 8
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8691
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !8692
  %rlock.i = bitcast %union.anon* %13 to %struct.raw_spinlock*, !dbg !8692
  br label %do.end19, !dbg !8690

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !8688

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !8679

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !8678

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !8673

do.end23:                                         ; preds = %do.end22
  br label %while.cond, !dbg !8693

while.cond:                                       ; preds = %do.end51, %do.end23
  %14 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8694
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %14, i32 0, i32 4, !dbg !8695
  %15 = load i32, i32* %pflags, align 32, !dbg !8695
  %and = and i32 %15, 3, !dbg !8696
  %tobool = icmp ne i32 %and, 0, !dbg !8693
  br i1 %tobool, label %while.body, label %while.end, !dbg !8693

while.body:                                       ; preds = %while.cond
  %16 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8697
  %eh_wait_q = getelementptr inbounds %struct.ata_port, %struct.ata_port* %16, i32 0, i32 40, !dbg !8698
  call void @prepare_to_wait(%struct.wait_queue_head* %eh_wait_q, %struct.wait_queue_entry* %wait, i32 2) #7, !dbg !8699
  %17 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8700
  %lock24 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %17, i32 0, i32 2, !dbg !8701
  %18 = load %struct.spinlock*, %struct.spinlock** %lock24, align 16, !dbg !8701
  %19 = load i64, i64* %flags, align 8, !dbg !8702
  store %struct.spinlock* %18, %struct.spinlock** %lock.addr.i56, align 8
  store i64 %19, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1101, metadata !7437, metadata !DIExpression()) #2, !dbg !8703
  call void @llvm.dbg.declare(metadata !1101, metadata !7441, metadata !DIExpression()) #2, !dbg !8703
  store i32 1, i32* %tmp.i57, align 4, !dbg !8703
  %20 = load i32, i32* %tmp.i57, align 4, !dbg !8703
  call void @llvm.dbg.declare(metadata !1101, metadata !7442, metadata !DIExpression()) #2, !dbg !8704
  call void @llvm.dbg.declare(metadata !1101, metadata !7448, metadata !DIExpression()) #2, !dbg !8704
  store i32 1, i32* %tmp8.i, align 4, !dbg !8704
  %21 = load i32, i32* %tmp8.i, align 4, !dbg !8704
  %22 = load i64, i64* %flags.addr.i, align 8, !dbg !8705
  call void @arch_local_irq_restore(i64 %22) #9, !dbg !8705
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !8706, !srcloc !7452
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i56, align 8, !dbg !8707
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !8707
  %rlock.i58 = bitcast %union.anon* %24 to %struct.raw_spinlock*, !dbg !8707
  call void @schedule() #7, !dbg !8708
  br label %do.body25, !dbg !8709

do.body25:                                        ; preds = %while.body
  br label %do.body26, !dbg !8710

do.body26:                                        ; preds = %do.body25
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !8711, metadata !DIExpression()), !dbg !8713
  call void @llvm.dbg.declare(metadata i64* %__dummy228, metadata !8714, metadata !DIExpression()), !dbg !8713
  %cmp29 = icmp eq i64* %__dummy27, %__dummy228, !dbg !8713
  %conv30 = zext i1 %cmp29 to i32, !dbg !8713
  store i32 1, i32* %tmp31, align 4, !dbg !8713
  %25 = load i32, i32* %tmp31, align 4, !dbg !8713
  br label %do.body32, !dbg !8715

do.body32:                                        ; preds = %do.body26
  br label %do.body33, !dbg !8716

do.body33:                                        ; preds = %do.body32
  br label %do.body34, !dbg !8717

do.body34:                                        ; preds = %do.body33
  call void @llvm.dbg.declare(metadata i64* %__dummy35, metadata !8719, metadata !DIExpression()), !dbg !8722
  call void @llvm.dbg.declare(metadata i64* %__dummy236, metadata !8723, metadata !DIExpression()), !dbg !8722
  %cmp37 = icmp eq i64* %__dummy35, %__dummy236, !dbg !8722
  %conv38 = zext i1 %cmp37 to i32, !dbg !8722
  store i32 1, i32* %tmp39, align 4, !dbg !8722
  %26 = load i32, i32* %tmp39, align 4, !dbg !8722
  %call40 = call i64 @arch_local_irq_save() #7, !dbg !8724
  store i64 %call40, i64* %flags, align 8, !dbg !8724
  br label %do.end41, !dbg !8724

do.end41:                                         ; preds = %do.body34
  br label %do.end42, !dbg !8717

do.end42:                                         ; preds = %do.end41
  br label %do.body43, !dbg !8716

do.body43:                                        ; preds = %do.end42
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !8725, !srcloc !8726
  br label %do.body44, !dbg !8725

do.body44:                                        ; preds = %do.body43
  %27 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8727
  %lock45 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %27, i32 0, i32 2, !dbg !8727
  %28 = load %struct.spinlock*, %struct.spinlock** %lock45, align 16, !dbg !8727
  store %struct.spinlock* %28, %struct.spinlock** %lock.addr.i59, align 8
  %29 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i59, align 8, !dbg !8728
  %30 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %29, i32 0, i32 0, !dbg !8729
  %rlock.i60 = bitcast %union.anon* %30 to %struct.raw_spinlock*, !dbg !8729
  br label %do.end47, !dbg !8727

do.end47:                                         ; preds = %do.body44
  br label %do.end48, !dbg !8725

do.end48:                                         ; preds = %do.end47
  br label %do.end49, !dbg !8716

do.end49:                                         ; preds = %do.end48
  br label %do.end50, !dbg !8715

do.end50:                                         ; preds = %do.end49
  br label %do.end51, !dbg !8710

do.end51:                                         ; preds = %do.end50
  br label %while.cond, !dbg !8693, !llvm.loop !8730

while.end:                                        ; preds = %while.cond
  %31 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8732
  %eh_wait_q52 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %31, i32 0, i32 40, !dbg !8733
  call void @finish_wait(%struct.wait_queue_head* %eh_wait_q52, %struct.wait_queue_entry* %wait) #7, !dbg !8734
  %32 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8735
  %lock53 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %32, i32 0, i32 2, !dbg !8736
  %33 = load %struct.spinlock*, %struct.spinlock** %lock53, align 16, !dbg !8736
  %34 = load i64, i64* %flags, align 8, !dbg !8737
  store %struct.spinlock* %33, %struct.spinlock** %lock.addr.i61, align 8
  store i64 %34, i64* %flags.addr.i62, align 8
  call void @llvm.dbg.declare(metadata !1101, metadata !7437, metadata !DIExpression()) #2, !dbg !8738
  call void @llvm.dbg.declare(metadata !1101, metadata !7441, metadata !DIExpression()) #2, !dbg !8738
  store i32 1, i32* %tmp.i63, align 4, !dbg !8738
  %35 = load i32, i32* %tmp.i63, align 4, !dbg !8738
  call void @llvm.dbg.declare(metadata !1101, metadata !7442, metadata !DIExpression()) #2, !dbg !8739
  call void @llvm.dbg.declare(metadata !1101, metadata !7448, metadata !DIExpression()) #2, !dbg !8739
  store i32 1, i32* %tmp8.i64, align 4, !dbg !8739
  %36 = load i32, i32* %tmp8.i64, align 4, !dbg !8739
  %37 = load i64, i64* %flags.addr.i62, align 8, !dbg !8740
  call void @arch_local_irq_restore(i64 %37) #9, !dbg !8740
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !8741, !srcloc !7452
  %38 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i61, align 8, !dbg !8742
  %39 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %38, i32 0, i32 0, !dbg !8742
  %rlock.i65 = bitcast %union.anon* %39 to %struct.raw_spinlock*, !dbg !8742
  %40 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8743
  %scsi_host = getelementptr inbounds %struct.ata_port, %struct.ata_port* %40, i32 0, i32 0, !dbg !8745
  %41 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host, align 64, !dbg !8745
  %call54 = call i32 @scsi_host_in_recovery(%struct.Scsi_Host* %41) #7, !dbg !8746
  %tobool55 = icmp ne i32 %call54, 0, !dbg !8746
  br i1 %tobool55, label %if.then, label %if.end, !dbg !8747

if.then:                                          ; preds = %while.end
  %42 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8748
  call void @ata_msleep(%struct.ata_port* %42, i32 10) #7, !dbg !8750
  br label %retry, !dbg !8751

if.end:                                           ; preds = %while.end
  ret void, !dbg !8752
}

; Function Attrs: noredzone
declare dso_local i32 @autoremove_wake_function(%struct.wait_queue_entry*, i32, i32, i8*) #3

; Function Attrs: noredzone
declare dso_local void @prepare_to_wait(%struct.wait_queue_head*, %struct.wait_queue_entry*, i32) #3

; Function Attrs: noredzone
declare dso_local void @schedule() #3

; Function Attrs: noredzone
declare dso_local void @finish_wait(%struct.wait_queue_head*, %struct.wait_queue_entry*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scsi_host_in_recovery(%struct.Scsi_Host* %shost) #0 !dbg !8753 {
entry:
  %shost.addr = alloca %struct.Scsi_Host*, align 8
  store %struct.Scsi_Host* %shost, %struct.Scsi_Host** %shost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %shost.addr, metadata !8754, metadata !DIExpression()), !dbg !8755
  %0 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8756
  %shost_state = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %0, i32 0, i32 46, !dbg !8757
  %1 = load i32, i32* %shost_state, align 8, !dbg !8757
  %cmp = icmp eq i32 %1, 5, !dbg !8758
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !8759

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8760
  %shost_state1 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 46, !dbg !8761
  %3 = load i32, i32* %shost_state1, align 8, !dbg !8761
  %cmp2 = icmp eq i32 %3, 6, !dbg !8762
  br i1 %cmp2, label %lor.end, label %lor.lhs.false3, !dbg !8763

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %4 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8764
  %shost_state4 = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %4, i32 0, i32 46, !dbg !8765
  %5 = load i32, i32* %shost_state4, align 8, !dbg !8765
  %cmp5 = icmp eq i32 %5, 7, !dbg !8766
  br i1 %cmp5, label %lor.end, label %lor.rhs, !dbg !8767

lor.rhs:                                          ; preds = %lor.lhs.false3
  %6 = load %struct.Scsi_Host*, %struct.Scsi_Host** %shost.addr, align 8, !dbg !8768
  %tmf_in_progress = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %6, i32 0, i32 34, !dbg !8769
  %bf.load = load i16, i16* %tmf_in_progress, align 4, !dbg !8769
  %bf.lshr = lshr i16 %bf.load, 5, !dbg !8769
  %bf.clear = and i16 %bf.lshr, 1, !dbg !8769
  %bf.cast = zext i16 %bf.clear to i32, !dbg !8769
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !8767
  br label %lor.end, !dbg !8767

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false3, %lor.lhs.false, %entry
  %7 = phi i1 [ true, %lor.lhs.false3 ], [ true, %lor.lhs.false ], [ true, %entry ], [ %tobool, %lor.rhs ]
  %lor.ext = zext i1 %7 to i32, !dbg !8767
  ret i32 %lor.ext, !dbg !8770
}

; Function Attrs: noredzone
declare dso_local void @ata_msleep(%struct.ata_port*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_eh_fastdrain_timerfn(%struct.timer_list* %t) #0 !dbg !8771 {
entry:
  %lock.addr.i42 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i42, metadata !7379, metadata !DIExpression()), !dbg !8772
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7386, metadata !DIExpression()), !dbg !8774
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7388, metadata !DIExpression()), !dbg !8775
  %t.addr = alloca %struct.timer_list*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.ata_port*, align 8
  %flags = alloca i64, align 8
  %cnt = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp3 = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  %qc = alloca %struct.ata_queued_cmd*, align 8
  %tag = alloca i32, align 4
  %tmp30 = alloca i32, align 4
  store %struct.timer_list* %t, %struct.timer_list** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %t.addr, metadata !8782, metadata !DIExpression()), !dbg !8783
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !8784, metadata !DIExpression()), !dbg !8785
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8786, metadata !DIExpression()), !dbg !8788
  %0 = load %struct.timer_list*, %struct.timer_list** %t.addr, align 8, !dbg !8788
  %1 = bitcast %struct.timer_list* %0 to i8*, !dbg !8788
  store i8* %1, i8** %__mptr, align 8, !dbg !8788
  br label %do.body, !dbg !8788

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8789

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8788
  %add.ptr = getelementptr i8, i8* %2, i64 -14496, !dbg !8788
  %3 = bitcast i8* %add.ptr to %struct.ata_port*, !dbg !8788
  store %struct.ata_port* %3, %struct.ata_port** %tmp, align 8, !dbg !8789
  %4 = load %struct.ata_port*, %struct.ata_port** %tmp, align 8, !dbg !8788
  store %struct.ata_port* %4, %struct.ata_port** %ap, align 8, !dbg !8785
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8791, metadata !DIExpression()), !dbg !8792
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !8793, metadata !DIExpression()), !dbg !8794
  br label %do.body1, !dbg !8795

do.body1:                                         ; preds = %do.end
  br label %do.body2, !dbg !8796

do.body2:                                         ; preds = %do.body1
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8797, metadata !DIExpression()), !dbg !8799
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8800, metadata !DIExpression()), !dbg !8799
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8799
  %conv = zext i1 %cmp to i32, !dbg !8799
  store i32 1, i32* %tmp3, align 4, !dbg !8799
  %5 = load i32, i32* %tmp3, align 4, !dbg !8799
  br label %do.body4, !dbg !8801

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !8802

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !8803

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !8805, metadata !DIExpression()), !dbg !8808
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !8809, metadata !DIExpression()), !dbg !8808
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !8808
  %conv10 = zext i1 %cmp9 to i32, !dbg !8808
  store i32 1, i32* %tmp11, align 4, !dbg !8808
  %6 = load i32, i32* %tmp11, align 4, !dbg !8808
  %call = call i64 @arch_local_irq_save() #7, !dbg !8810
  store i64 %call, i64* %flags, align 8, !dbg !8810
  br label %do.end12, !dbg !8810

do.end12:                                         ; preds = %do.body6
  br label %do.end13, !dbg !8803

do.end13:                                         ; preds = %do.end12
  br label %do.body14, !dbg !8802

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !8811, !srcloc !8812
  br label %do.body15, !dbg !8811

do.body15:                                        ; preds = %do.body14
  %7 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8813
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %7, i32 0, i32 2, !dbg !8813
  %8 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !8813
  store %struct.spinlock* %8, %struct.spinlock** %lock.addr.i, align 8
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8814
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !8815
  %rlock.i = bitcast %union.anon* %10 to %struct.raw_spinlock*, !dbg !8815
  br label %do.end17, !dbg !8813

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !8811

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !8802

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !8801

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !8796

do.end21:                                         ; preds = %do.end20
  %11 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8816
  %call22 = call i32 @ata_eh_nr_in_flight(%struct.ata_port* %11) #7, !dbg !8817
  store i32 %call22, i32* %cnt, align 4, !dbg !8818
  %12 = load i32, i32* %cnt, align 4, !dbg !8819
  %tobool = icmp ne i32 %12, 0, !dbg !8819
  br i1 %tobool, label %if.end, label %if.then, !dbg !8821

if.then:                                          ; preds = %do.end21
  br label %out_unlock, !dbg !8822

if.end:                                           ; preds = %do.end21
  %13 = load i32, i32* %cnt, align 4, !dbg !8823
  %conv23 = sext i32 %13 to i64, !dbg !8823
  %14 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8825
  %fastdrain_cnt = getelementptr inbounds %struct.ata_port, %struct.ata_port* %14, i32 0, i32 46, !dbg !8826
  %15 = load i64, i64* %fastdrain_cnt, align 8, !dbg !8826
  %cmp24 = icmp eq i64 %conv23, %15, !dbg !8827
  br i1 %cmp24, label %if.then26, label %if.else, !dbg !8828

if.then26:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc, metadata !8829, metadata !DIExpression()), !dbg !8831
  call void @llvm.dbg.declare(metadata i32* %tag, metadata !8832, metadata !DIExpression()), !dbg !8833
  store i32 0, i32* %tag, align 4, !dbg !8834
  br label %for.cond, !dbg !8834

for.cond:                                         ; preds = %for.inc, %if.then26
  %16 = load i32, i32* %tag, align 4, !dbg !8836
  %cmp27 = icmp ult i32 %16, 32, !dbg !8836
  br i1 %cmp27, label %land.rhs, label %land.end, !dbg !8836

land.rhs:                                         ; preds = %for.cond
  %17 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8838
  %18 = load i32, i32* %tag, align 4, !dbg !8838
  %call29 = call %struct.ata_queued_cmd* @ata_qc_from_tag(%struct.ata_port* %17, i32 %18) #7, !dbg !8838
  store %struct.ata_queued_cmd* %call29, %struct.ata_queued_cmd** %qc, align 8, !dbg !8838
  store i32 1, i32* %tmp30, align 4, !dbg !8838
  %19 = load i32, i32* %tmp30, align 4, !dbg !8838
  %tobool31 = icmp ne i32 %19, 0, !dbg !8836
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %20 = phi i1 [ false, %for.cond ], [ %tobool31, %land.rhs ], !dbg !8840
  br i1 %20, label %for.body, label %for.end, !dbg !8834

for.body:                                         ; preds = %land.end
  %21 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !8841
  %tobool32 = icmp ne %struct.ata_queued_cmd* %21, null, !dbg !8841
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !8844

if.then33:                                        ; preds = %for.body
  %22 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !8845
  %err_mask = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %22, i32 0, i32 20, !dbg !8846
  %23 = load i32, i32* %err_mask, align 4, !dbg !8847
  %or = or i32 %23, 4, !dbg !8847
  store i32 %or, i32* %err_mask, align 4, !dbg !8847
  br label %if.end34, !dbg !8845

if.end34:                                         ; preds = %if.then33, %for.body
  br label %for.inc, !dbg !8848

for.inc:                                          ; preds = %if.end34
  %24 = load i32, i32* %tag, align 4, !dbg !8836
  %inc = add i32 %24, 1, !dbg !8836
  store i32 %inc, i32* %tag, align 4, !dbg !8836
  br label %for.cond, !dbg !8836, !llvm.loop !8849

for.end:                                          ; preds = %land.end
  %25 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8851
  %call35 = call i32 @ata_port_freeze(%struct.ata_port* %25) #7, !dbg !8852
  br label %if.end40, !dbg !8853

if.else:                                          ; preds = %if.end
  %26 = load i32, i32* %cnt, align 4, !dbg !8854
  %conv36 = sext i32 %26 to i64, !dbg !8854
  %27 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8856
  %fastdrain_cnt37 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %27, i32 0, i32 46, !dbg !8857
  store i64 %conv36, i64* %fastdrain_cnt37, align 8, !dbg !8858
  %28 = load volatile i64, i64* @jiffies, align 8, !dbg !8859
  %call38 = call i64 @ata_deadline(i64 %28, i64 3000) #7, !dbg !8860
  %29 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8861
  %fastdrain_timer = getelementptr inbounds %struct.ata_port, %struct.ata_port* %29, i32 0, i32 45, !dbg !8862
  %expires = getelementptr inbounds %struct.timer_list, %struct.timer_list* %fastdrain_timer, i32 0, i32 1, !dbg !8863
  store i64 %call38, i64* %expires, align 16, !dbg !8864
  %30 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8865
  %fastdrain_timer39 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %30, i32 0, i32 45, !dbg !8866
  call void @add_timer(%struct.timer_list* %fastdrain_timer39) #7, !dbg !8867
  br label %if.end40

if.end40:                                         ; preds = %if.else, %for.end
  br label %out_unlock, !dbg !8826

out_unlock:                                       ; preds = %if.end40, %if.then
  call void @llvm.dbg.label(metadata !8868), !dbg !8869
  %31 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8870
  %lock41 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %31, i32 0, i32 2, !dbg !8871
  %32 = load %struct.spinlock*, %struct.spinlock** %lock41, align 16, !dbg !8871
  %33 = load i64, i64* %flags, align 8, !dbg !8872
  store %struct.spinlock* %32, %struct.spinlock** %lock.addr.i42, align 8
  store i64 %33, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1101, metadata !7437, metadata !DIExpression()) #2, !dbg !8873
  call void @llvm.dbg.declare(metadata !1101, metadata !7441, metadata !DIExpression()) #2, !dbg !8873
  store i32 1, i32* %tmp.i, align 4, !dbg !8873
  %34 = load i32, i32* %tmp.i, align 4, !dbg !8873
  call void @llvm.dbg.declare(metadata !1101, metadata !7442, metadata !DIExpression()) #2, !dbg !8874
  call void @llvm.dbg.declare(metadata !1101, metadata !7448, metadata !DIExpression()) #2, !dbg !8874
  store i32 1, i32* %tmp8.i, align 4, !dbg !8874
  %35 = load i32, i32* %tmp8.i, align 4, !dbg !8874
  %36 = load i64, i64* %flags.addr.i, align 8, !dbg !8875
  call void @arch_local_irq_restore(i64 %36) #9, !dbg !8875
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !8876, !srcloc !7452
  %37 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i42, align 8, !dbg !8877
  %38 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %37, i32 0, i32 0, !dbg !8877
  %rlock.i43 = bitcast %union.anon* %38 to %struct.raw_spinlock*, !dbg !8877
  ret void, !dbg !8878
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_eh_nr_in_flight(%struct.ata_port* %ap) #0 !dbg !8879 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %qc = alloca %struct.ata_queued_cmd*, align 8
  %tag = alloca i32, align 4
  %nr = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !8880, metadata !DIExpression()), !dbg !8881
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc, metadata !8882, metadata !DIExpression()), !dbg !8883
  call void @llvm.dbg.declare(metadata i32* %tag, metadata !8884, metadata !DIExpression()), !dbg !8885
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !8886, metadata !DIExpression()), !dbg !8887
  store i32 0, i32* %nr, align 4, !dbg !8887
  store i32 0, i32* %tag, align 4, !dbg !8888
  br label %for.cond, !dbg !8888

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %tag, align 4, !dbg !8890
  %cmp = icmp ult i32 %0, 32, !dbg !8890
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8890

land.rhs:                                         ; preds = %for.cond
  %1 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8892
  %2 = load i32, i32* %tag, align 4, !dbg !8892
  %call = call %struct.ata_queued_cmd* @ata_qc_from_tag(%struct.ata_port* %1, i32 %2) #7, !dbg !8892
  store %struct.ata_queued_cmd* %call, %struct.ata_queued_cmd** %qc, align 8, !dbg !8892
  store i32 1, i32* %tmp, align 4, !dbg !8892
  %3 = load i32, i32* %tmp, align 4, !dbg !8892
  %tobool = icmp ne i32 %3, 0, !dbg !8890
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %4 = phi i1 [ false, %for.cond ], [ %tobool, %land.rhs ], !dbg !8894
  br i1 %4, label %for.body, label %for.end, !dbg !8888

for.body:                                         ; preds = %land.end
  %5 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !8895
  %tobool1 = icmp ne %struct.ata_queued_cmd* %5, null, !dbg !8895
  br i1 %tobool1, label %if.then, label %if.end, !dbg !8898

if.then:                                          ; preds = %for.body
  %6 = load i32, i32* %nr, align 4, !dbg !8899
  %inc = add i32 %6, 1, !dbg !8899
  store i32 %inc, i32* %nr, align 4, !dbg !8899
  br label %if.end, !dbg !8900

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !8901

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %tag, align 4, !dbg !8890
  %inc2 = add i32 %7, 1, !dbg !8890
  store i32 %inc2, i32* %tag, align 4, !dbg !8890
  br label %for.cond, !dbg !8890, !llvm.loop !8902

for.end:                                          ; preds = %land.end
  %8 = load i32, i32* %nr, align 4, !dbg !8904
  ret i32 %8, !dbg !8905
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_port_freeze(%struct.ata_port* %ap) #0 !dbg !8906 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %nr_aborted = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !8907, metadata !DIExpression()), !dbg !8908
  call void @llvm.dbg.declare(metadata i32* %nr_aborted, metadata !8909, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8911, metadata !DIExpression()), !dbg !8913
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8913
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 1, !dbg !8913
  %1 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !8913
  %error_handler = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %1, i32 0, i32 22, !dbg !8913
  %2 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %error_handler, align 8, !dbg !8913
  %tobool = icmp ne void (%struct.ata_port*)* %2, null, !dbg !8913
  %lnot = xor i1 %tobool, true, !dbg !8913
  %lnot1 = xor i1 %lnot, true, !dbg !8913
  %lnot2 = xor i1 %lnot1, true, !dbg !8913
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !8913
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8913
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !8914
  %tobool3 = icmp ne i32 %3, 0, !dbg !8914
  %lnot4 = xor i1 %tobool3, true, !dbg !8914
  %lnot6 = xor i1 %lnot4, true, !dbg !8914
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !8914
  %conv = sext i32 %lnot.ext7 to i64, !dbg !8914
  %tobool8 = icmp ne i64 %conv, 0, !dbg !8914
  br i1 %tobool8, label %if.then, label %if.end, !dbg !8913

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !8914

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !8916

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !8918

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !8916

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), i32 1086, i32 2305, i64 12) #2, !dbg !8920, !srcloc !8922
  br label %do.end11, !dbg !8920

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 323) #2, !dbg !8923, !srcloc !8925
  br label %do.body12, !dbg !8916

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !8926

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !8916

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !8916

if.end:                                           ; preds = %do.end14, %entry
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !8913
  %tobool15 = icmp ne i32 %4, 0, !dbg !8913
  %lnot16 = xor i1 %tobool15, true, !dbg !8913
  %lnot18 = xor i1 %lnot16, true, !dbg !8913
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !8913
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !8913
  store i64 %conv20, i64* %tmp, align 8, !dbg !8914
  %5 = load i64, i64* %tmp, align 8, !dbg !8913
  %6 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8928
  call void @__ata_port_freeze(%struct.ata_port* %6) #7, !dbg !8929
  %7 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !8930
  %call = call i32 @ata_port_abort(%struct.ata_port* %7) #7, !dbg !8931
  store i32 %call, i32* %nr_aborted, align 4, !dbg !8932
  %8 = load i32, i32* %nr_aborted, align 4, !dbg !8933
  ret i32 %8, !dbg !8934
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @ata_deadline(i64 %from_jiffies, i64 %timeout_msecs) #0 !dbg !8935 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !8938, metadata !DIExpression()), !dbg !8943
  %from_jiffies.addr = alloca i64, align 8
  %timeout_msecs.addr = alloca i64, align 8
  store i64 %from_jiffies, i64* %from_jiffies.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %from_jiffies.addr, metadata !8945, metadata !DIExpression()), !dbg !8946
  store i64 %timeout_msecs, i64* %timeout_msecs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %timeout_msecs.addr, metadata !8947, metadata !DIExpression()), !dbg !8948
  %0 = load i64, i64* %from_jiffies.addr, align 8, !dbg !8949
  %1 = load i64, i64* %timeout_msecs.addr, align 8, !dbg !8950
  %conv = trunc i64 %1 to i32, !dbg !8950
  store i32 %conv, i32* %m.addr.i, align 4
  %2 = load i32, i32* %m.addr.i, align 4, !dbg !8951
  %3 = call i1 @llvm.is.constant.i32(i32 %2) #2, !dbg !8953
  br i1 %3, label %if.then.i, label %if.else.i, !dbg !8954

if.then.i:                                        ; preds = %entry
  %4 = load i32, i32* %m.addr.i, align 4, !dbg !8955
  %cmp.i = icmp slt i32 %4, 0, !dbg !8958
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !8959

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !8960
  br label %msecs_to_jiffies.exit, !dbg !8960

if.end.i:                                         ; preds = %if.then.i
  %5 = load i32, i32* %m.addr.i, align 4, !dbg !8961
  %call.i = call i64 @_msecs_to_jiffies(i32 %5) #9, !dbg !8962
  store i64 %call.i, i64* %retval.i, align 8, !dbg !8963
  br label %msecs_to_jiffies.exit, !dbg !8963

if.else.i:                                        ; preds = %entry
  %6 = load i32, i32* %m.addr.i, align 4, !dbg !8964
  %call2.i = call i64 @__msecs_to_jiffies(i32 %6) #9, !dbg !8966
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !8967
  br label %msecs_to_jiffies.exit, !dbg !8967

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %7 = load i64, i64* %retval.i, align 8, !dbg !8968
  %add = add i64 %0, %7, !dbg !8969
  ret i64 %add, !dbg !8970
}

; Function Attrs: noredzone
declare dso_local void @add_timer(%struct.timer_list*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_qc_schedule_eh(%struct.ata_queued_cmd* %qc) #0 !dbg !8971 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !8972, metadata !DIExpression()), !dbg !8973
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !8974, metadata !DIExpression()), !dbg !8975
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8976
  %ap1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 0, !dbg !8977
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 8, !dbg !8977
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !8975
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8978, metadata !DIExpression()), !dbg !8980
  %2 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8980
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 1, !dbg !8980
  %3 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !8980
  %error_handler = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %3, i32 0, i32 22, !dbg !8980
  %4 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %error_handler, align 8, !dbg !8980
  %tobool = icmp ne void (%struct.ata_port*)* %4, null, !dbg !8980
  %lnot = xor i1 %tobool, true, !dbg !8980
  %lnot2 = xor i1 %lnot, true, !dbg !8980
  %lnot3 = xor i1 %lnot2, true, !dbg !8980
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !8980
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8980
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !8981
  %tobool4 = icmp ne i32 %5, 0, !dbg !8981
  %lnot5 = xor i1 %tobool4, true, !dbg !8981
  %lnot7 = xor i1 %lnot5, true, !dbg !8981
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !8981
  %conv = sext i32 %lnot.ext8 to i64, !dbg !8981
  %tobool9 = icmp ne i64 %conv, 0, !dbg !8981
  br i1 %tobool9, label %if.then, label %if.end, !dbg !8980

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !8981

do.body:                                          ; preds = %if.then
  br label %do.body10, !dbg !8983

do.body10:                                        ; preds = %do.body
  br label %do.end, !dbg !8985

do.end:                                           ; preds = %do.body10
  br label %do.body11, !dbg !8983

do.body11:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), i32 905, i32 2305, i64 12) #2, !dbg !8987, !srcloc !8989
  br label %do.end12, !dbg !8987

do.end12:                                         ; preds = %do.body11
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 319) #2, !dbg !8990, !srcloc !8992
  br label %do.body13, !dbg !8983

do.body13:                                        ; preds = %do.end12
  br label %do.end14, !dbg !8993

do.end14:                                         ; preds = %do.body13
  br label %do.end15, !dbg !8983

do.end15:                                         ; preds = %do.end14
  br label %if.end, !dbg !8983

if.end:                                           ; preds = %do.end15, %entry
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !8980
  %tobool16 = icmp ne i32 %6, 0, !dbg !8980
  %lnot17 = xor i1 %tobool16, true, !dbg !8980
  %lnot19 = xor i1 %lnot17, true, !dbg !8980
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !8980
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !8980
  store i64 %conv21, i64* %tmp, align 8, !dbg !8981
  %7 = load i64, i64* %tmp, align 8, !dbg !8980
  %8 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !8995
  %flags = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %8, i32 0, i32 6, !dbg !8996
  %9 = load i64, i64* %flags, align 8, !dbg !8997
  %or = or i64 %9, 65536, !dbg !8997
  store i64 %or, i64* %flags, align 8, !dbg !8997
  %10 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !8998
  call void @ata_eh_set_pending(%struct.ata_port* %10, i32 1) #7, !dbg !8999
  %11 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9000
  %scsicmd = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %11, i32 0, i32 2, !dbg !9001
  %12 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd, align 8, !dbg !9001
  %request = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %12, i32 0, i32 19, !dbg !9002
  %13 = load %struct.request*, %struct.request** %request, align 8, !dbg !9002
  call void @blk_abort_request(%struct.request* %13) #7, !dbg !9003
  ret void, !dbg !9004
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_eh_set_pending(%struct.ata_port* %ap, i32 %fastdrain) #0 !dbg !9005 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %fastdrain.addr = alloca i32, align 4
  %cnt = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !9008, metadata !DIExpression()), !dbg !9009
  store i32 %fastdrain, i32* %fastdrain.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fastdrain.addr, metadata !9010, metadata !DIExpression()), !dbg !9011
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !9012, metadata !DIExpression()), !dbg !9013
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9014
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 4, !dbg !9016
  %1 = load i32, i32* %pflags, align 32, !dbg !9016
  %and = and i32 %1, 1, !dbg !9017
  %tobool = icmp ne i32 %and, 0, !dbg !9017
  br i1 %tobool, label %if.then, label %if.end, !dbg !9018

if.then:                                          ; preds = %entry
  br label %return, !dbg !9019

if.end:                                           ; preds = %entry
  %2 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9020
  %pflags1 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 4, !dbg !9021
  %3 = load i32, i32* %pflags1, align 32, !dbg !9022
  %or = or i32 %3, 1, !dbg !9022
  store i32 %or, i32* %pflags1, align 32, !dbg !9022
  %4 = load i32, i32* %fastdrain.addr, align 4, !dbg !9023
  %tobool2 = icmp ne i32 %4, 0, !dbg !9023
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !9025

if.then3:                                         ; preds = %if.end
  br label %return, !dbg !9026

if.end4:                                          ; preds = %if.end
  %5 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9027
  %call = call i32 @ata_eh_nr_in_flight(%struct.ata_port* %5) #7, !dbg !9028
  store i32 %call, i32* %cnt, align 4, !dbg !9029
  %6 = load i32, i32* %cnt, align 4, !dbg !9030
  %tobool5 = icmp ne i32 %6, 0, !dbg !9030
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !9032

if.then6:                                         ; preds = %if.end4
  br label %return, !dbg !9033

if.end7:                                          ; preds = %if.end4
  %7 = load i32, i32* %cnt, align 4, !dbg !9034
  %conv = sext i32 %7 to i64, !dbg !9034
  %8 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9035
  %fastdrain_cnt = getelementptr inbounds %struct.ata_port, %struct.ata_port* %8, i32 0, i32 46, !dbg !9036
  store i64 %conv, i64* %fastdrain_cnt, align 8, !dbg !9037
  %9 = load volatile i64, i64* @jiffies, align 8, !dbg !9038
  %call8 = call i64 @ata_deadline(i64 %9, i64 3000) #7, !dbg !9039
  %10 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9040
  %fastdrain_timer = getelementptr inbounds %struct.ata_port, %struct.ata_port* %10, i32 0, i32 45, !dbg !9041
  %expires = getelementptr inbounds %struct.timer_list, %struct.timer_list* %fastdrain_timer, i32 0, i32 1, !dbg !9042
  store i64 %call8, i64* %expires, align 16, !dbg !9043
  %11 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9044
  %fastdrain_timer9 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %11, i32 0, i32 45, !dbg !9045
  call void @add_timer(%struct.timer_list* %fastdrain_timer9) #7, !dbg !9046
  br label %return, !dbg !9047

return:                                           ; preds = %if.end7, %if.then6, %if.then3, %if.then
  ret void, !dbg !9047
}

; Function Attrs: noredzone
declare dso_local void @blk_abort_request(%struct.request*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_std_sched_eh(%struct.ata_port* %ap) #0 !dbg !9048 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !9049, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9051, metadata !DIExpression()), !dbg !9053
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9053
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 1, !dbg !9053
  %1 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !9053
  %error_handler = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %1, i32 0, i32 22, !dbg !9053
  %2 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %error_handler, align 8, !dbg !9053
  %tobool = icmp ne void (%struct.ata_port*)* %2, null, !dbg !9053
  %lnot = xor i1 %tobool, true, !dbg !9053
  %lnot1 = xor i1 %lnot, true, !dbg !9053
  %lnot2 = xor i1 %lnot1, true, !dbg !9053
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !9053
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !9053
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !9054
  %tobool3 = icmp ne i32 %3, 0, !dbg !9054
  %lnot4 = xor i1 %tobool3, true, !dbg !9054
  %lnot6 = xor i1 %lnot4, true, !dbg !9054
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !9054
  %conv = sext i32 %lnot.ext7 to i64, !dbg !9054
  %tobool8 = icmp ne i64 %conv, 0, !dbg !9054
  br i1 %tobool8, label %if.then, label %if.end, !dbg !9053

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !9054

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !9056

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !9058

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !9056

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), i32 927, i32 2305, i64 12) #2, !dbg !9060, !srcloc !9062
  br label %do.end11, !dbg !9060

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 320) #2, !dbg !9063, !srcloc !9065
  br label %do.body12, !dbg !9056

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !9066

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !9056

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !9056

if.end:                                           ; preds = %do.end14, %entry
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !9053
  %tobool15 = icmp ne i32 %4, 0, !dbg !9053
  %lnot16 = xor i1 %tobool15, true, !dbg !9053
  %lnot18 = xor i1 %lnot16, true, !dbg !9053
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !9053
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !9053
  store i64 %conv20, i64* %tmp, align 8, !dbg !9054
  %5 = load i64, i64* %tmp, align 8, !dbg !9053
  %6 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9068
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %6, i32 0, i32 4, !dbg !9070
  %7 = load i32, i32* %pflags, align 32, !dbg !9070
  %and = and i32 %7, 128, !dbg !9071
  %tobool21 = icmp ne i32 %and, 0, !dbg !9071
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !9072

if.then22:                                        ; preds = %if.end
  br label %return, !dbg !9073

if.end23:                                         ; preds = %if.end
  %8 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9074
  call void @ata_eh_set_pending(%struct.ata_port* %8, i32 1) #7, !dbg !9075
  %9 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9076
  %scsi_host = getelementptr inbounds %struct.ata_port, %struct.ata_port* %9, i32 0, i32 0, !dbg !9077
  %10 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host, align 64, !dbg !9077
  call void @scsi_schedule_eh(%struct.Scsi_Host* %10) #7, !dbg !9078
  br label %return, !dbg !9079

return:                                           ; preds = %if.end23, %if.then22
  ret void, !dbg !9079
}

; Function Attrs: noredzone
declare dso_local void @scsi_schedule_eh(%struct.Scsi_Host*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_std_end_eh(%struct.ata_port* %ap) #0 !dbg !9080 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %host = alloca %struct.Scsi_Host*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !9081, metadata !DIExpression()), !dbg !9082
  call void @llvm.dbg.declare(metadata %struct.Scsi_Host** %host, metadata !9083, metadata !DIExpression()), !dbg !9084
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9085
  %scsi_host = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 0, !dbg !9086
  %1 = load %struct.Scsi_Host*, %struct.Scsi_Host** %scsi_host, align 64, !dbg !9086
  store %struct.Scsi_Host* %1, %struct.Scsi_Host** %host, align 8, !dbg !9084
  %2 = load %struct.Scsi_Host*, %struct.Scsi_Host** %host, align 8, !dbg !9087
  %host_eh_scheduled = getelementptr inbounds %struct.Scsi_Host, %struct.Scsi_Host* %2, i32 0, i32 15, !dbg !9088
  store i32 0, i32* %host_eh_scheduled, align 8, !dbg !9089
  ret void, !dbg !9090
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_port_schedule_eh(%struct.ata_port* %ap) #0 !dbg !9091 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !9092, metadata !DIExpression()), !dbg !9093
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9094
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 1, !dbg !9095
  %1 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !9095
  %sched_eh = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %1, i32 0, i32 25, !dbg !9096
  %2 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %sched_eh, align 8, !dbg !9096
  %3 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9097
  call void %2(%struct.ata_port* %3) #7, !dbg !9094
  ret void, !dbg !9098
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_link_abort(%struct.ata_link* %link) #0 !dbg !9099 {
entry:
  %link.addr = alloca %struct.ata_link*, align 8
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !9102, metadata !DIExpression()), !dbg !9103
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !9104
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %0, i32 0, i32 0, !dbg !9105
  %1 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !9105
  %2 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !9106
  %call = call i32 @ata_do_link_abort(%struct.ata_port* %1, %struct.ata_link* %2) #7, !dbg !9107
  ret i32 %call, !dbg !9108
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_do_link_abort(%struct.ata_port* %ap, %struct.ata_link* %link) #0 !dbg !9109 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %link.addr = alloca %struct.ata_link*, align 8
  %qc = alloca %struct.ata_queued_cmd*, align 8
  %tag = alloca i32, align 4
  %nr_aborted = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp22 = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !9112, metadata !DIExpression()), !dbg !9113
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !9114, metadata !DIExpression()), !dbg !9115
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc, metadata !9116, metadata !DIExpression()), !dbg !9117
  call void @llvm.dbg.declare(metadata i32* %tag, metadata !9118, metadata !DIExpression()), !dbg !9119
  call void @llvm.dbg.declare(metadata i32* %nr_aborted, metadata !9120, metadata !DIExpression()), !dbg !9121
  store i32 0, i32* %nr_aborted, align 4, !dbg !9121
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9122, metadata !DIExpression()), !dbg !9124
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9124
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 1, !dbg !9124
  %1 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !9124
  %error_handler = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %1, i32 0, i32 22, !dbg !9124
  %2 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %error_handler, align 8, !dbg !9124
  %tobool = icmp ne void (%struct.ata_port*)* %2, null, !dbg !9124
  %lnot = xor i1 %tobool, true, !dbg !9124
  %lnot1 = xor i1 %lnot, true, !dbg !9124
  %lnot2 = xor i1 %lnot1, true, !dbg !9124
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !9124
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !9124
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !9125
  %tobool3 = icmp ne i32 %3, 0, !dbg !9125
  %lnot4 = xor i1 %tobool3, true, !dbg !9125
  %lnot6 = xor i1 %lnot4, true, !dbg !9125
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !9125
  %conv = sext i32 %lnot.ext7 to i64, !dbg !9125
  %tobool8 = icmp ne i64 %conv, 0, !dbg !9125
  br i1 %tobool8, label %if.then, label %if.end, !dbg !9124

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !9125

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !9127

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !9129

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !9127

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), i32 982, i32 2305, i64 12) #2, !dbg !9131, !srcloc !9133
  br label %do.end11, !dbg !9131

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 321) #2, !dbg !9134, !srcloc !9136
  br label %do.body12, !dbg !9127

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !9137

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !9127

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !9127

if.end:                                           ; preds = %do.end14, %entry
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !9124
  %tobool15 = icmp ne i32 %4, 0, !dbg !9124
  %lnot16 = xor i1 %tobool15, true, !dbg !9124
  %lnot18 = xor i1 %lnot16, true, !dbg !9124
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !9124
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !9124
  store i64 %conv20, i64* %tmp, align 8, !dbg !9125
  %5 = load i64, i64* %tmp, align 8, !dbg !9124
  %6 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9139
  call void @ata_eh_set_pending(%struct.ata_port* %6, i32 0) #7, !dbg !9140
  store i32 0, i32* %tag, align 4, !dbg !9141
  br label %for.cond, !dbg !9141

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load i32, i32* %tag, align 4, !dbg !9143
  %cmp = icmp slt i32 %7, 33, !dbg !9143
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !9143

land.rhs:                                         ; preds = %for.cond
  %8 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9145
  %9 = load i32, i32* %tag, align 4, !dbg !9145
  %call = call %struct.ata_queued_cmd* @ata_qc_from_tag(%struct.ata_port* %8, i32 %9) #7, !dbg !9145
  store %struct.ata_queued_cmd* %call, %struct.ata_queued_cmd** %qc, align 8, !dbg !9145
  store i32 1, i32* %tmp22, align 4, !dbg !9145
  %10 = load i32, i32* %tmp22, align 4, !dbg !9145
  %tobool23 = icmp ne i32 %10, 0, !dbg !9143
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %11 = phi i1 [ false, %for.cond ], [ %tobool23, %land.rhs ], !dbg !9147
  br i1 %11, label %for.body, label %for.end, !dbg !9141

for.body:                                         ; preds = %land.end
  %12 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9148
  %tobool24 = icmp ne %struct.ata_queued_cmd* %12, null, !dbg !9148
  br i1 %tobool24, label %land.lhs.true, label %if.end30, !dbg !9151

land.lhs.true:                                    ; preds = %for.body
  %13 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !9152
  %tobool25 = icmp ne %struct.ata_link* %13, null, !dbg !9152
  br i1 %tobool25, label %lor.lhs.false, label %if.then29, !dbg !9153

lor.lhs.false:                                    ; preds = %land.lhs.true
  %14 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9154
  %dev = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %14, i32 0, i32 1, !dbg !9155
  %15 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !9155
  %link26 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %15, i32 0, i32 0, !dbg !9156
  %16 = load %struct.ata_link*, %struct.ata_link** %link26, align 64, !dbg !9156
  %17 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !9157
  %cmp27 = icmp eq %struct.ata_link* %16, %17, !dbg !9158
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !9159

if.then29:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %18 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9160
  %flags = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %18, i32 0, i32 6, !dbg !9162
  %19 = load i64, i64* %flags, align 8, !dbg !9163
  %or = or i64 %19, 65536, !dbg !9163
  store i64 %or, i64* %flags, align 8, !dbg !9163
  %20 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !9164
  call void @ata_qc_complete(%struct.ata_queued_cmd* %20) #7, !dbg !9165
  %21 = load i32, i32* %nr_aborted, align 4, !dbg !9166
  %inc = add i32 %21, 1, !dbg !9166
  store i32 %inc, i32* %nr_aborted, align 4, !dbg !9166
  br label %if.end30, !dbg !9167

if.end30:                                         ; preds = %if.then29, %lor.lhs.false, %for.body
  br label %for.inc, !dbg !9168

for.inc:                                          ; preds = %if.end30
  %22 = load i32, i32* %tag, align 4, !dbg !9143
  %inc31 = add i32 %22, 1, !dbg !9143
  store i32 %inc31, i32* %tag, align 4, !dbg !9143
  br label %for.cond, !dbg !9143, !llvm.loop !9169

for.end:                                          ; preds = %land.end
  %23 = load i32, i32* %nr_aborted, align 4, !dbg !9171
  %tobool32 = icmp ne i32 %23, 0, !dbg !9171
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !9173

if.then33:                                        ; preds = %for.end
  %24 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9174
  call void @ata_port_schedule_eh(%struct.ata_port* %24) #7, !dbg !9175
  br label %if.end34, !dbg !9175

if.end34:                                         ; preds = %if.then33, %for.end
  %25 = load i32, i32* %nr_aborted, align 4, !dbg !9176
  ret i32 %25, !dbg !9177
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_port_abort(%struct.ata_port* %ap) #0 !dbg !9178 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !9179, metadata !DIExpression()), !dbg !9180
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9181
  %call = call i32 @ata_do_link_abort(%struct.ata_port* %0, %struct.ata_link* null) #7, !dbg !9182
  ret i32 %call, !dbg !9183
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_eh_freeze_port(%struct.ata_port* %ap) #0 !dbg !9184 {
entry:
  %lock.addr.i20 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i20, metadata !7379, metadata !DIExpression()), !dbg !9185
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7386, metadata !DIExpression()), !dbg !9187
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7388, metadata !DIExpression()), !dbg !9188
  %ap.addr = alloca %struct.ata_port*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !9195, metadata !DIExpression()), !dbg !9196
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9197, metadata !DIExpression()), !dbg !9198
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9199
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 1, !dbg !9201
  %1 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !9201
  %error_handler = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %1, i32 0, i32 22, !dbg !9202
  %2 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %error_handler, align 8, !dbg !9202
  %tobool = icmp ne void (%struct.ata_port*)* %2, null, !dbg !9199
  br i1 %tobool, label %if.end, label %if.then, !dbg !9203

if.then:                                          ; preds = %entry
  br label %return, !dbg !9204

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !9205

do.body:                                          ; preds = %if.end
  br label %do.body1, !dbg !9206

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9207, metadata !DIExpression()), !dbg !9209
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9210, metadata !DIExpression()), !dbg !9209
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9209
  %conv = zext i1 %cmp to i32, !dbg !9209
  store i32 1, i32* %tmp, align 4, !dbg !9209
  %3 = load i32, i32* %tmp, align 4, !dbg !9209
  br label %do.body2, !dbg !9211

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !9212

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !9213

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !9215, metadata !DIExpression()), !dbg !9218
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !9219, metadata !DIExpression()), !dbg !9218
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !9218
  %conv8 = zext i1 %cmp7 to i32, !dbg !9218
  store i32 1, i32* %tmp9, align 4, !dbg !9218
  %4 = load i32, i32* %tmp9, align 4, !dbg !9218
  %call = call i64 @arch_local_irq_save() #7, !dbg !9220
  store i64 %call, i64* %flags, align 8, !dbg !9220
  br label %do.end, !dbg !9220

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !9213

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !9212

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !9221, !srcloc !9222
  br label %do.body12, !dbg !9221

do.body12:                                        ; preds = %do.body11
  %5 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9223
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %5, i32 0, i32 2, !dbg !9223
  %6 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !9223
  store %struct.spinlock* %6, %struct.spinlock** %lock.addr.i, align 8
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9224
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !9225
  %rlock.i = bitcast %union.anon* %8 to %struct.raw_spinlock*, !dbg !9225
  br label %do.end14, !dbg !9223

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !9221

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !9212

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !9211

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !9206

do.end18:                                         ; preds = %do.end17
  %9 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9226
  call void @__ata_port_freeze(%struct.ata_port* %9) #7, !dbg !9227
  %10 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9228
  %lock19 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %10, i32 0, i32 2, !dbg !9229
  %11 = load %struct.spinlock*, %struct.spinlock** %lock19, align 16, !dbg !9229
  %12 = load i64, i64* %flags, align 8, !dbg !9230
  store %struct.spinlock* %11, %struct.spinlock** %lock.addr.i20, align 8
  store i64 %12, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1101, metadata !7437, metadata !DIExpression()) #2, !dbg !9231
  call void @llvm.dbg.declare(metadata !1101, metadata !7441, metadata !DIExpression()) #2, !dbg !9231
  store i32 1, i32* %tmp.i, align 4, !dbg !9231
  %13 = load i32, i32* %tmp.i, align 4, !dbg !9231
  call void @llvm.dbg.declare(metadata !1101, metadata !7442, metadata !DIExpression()) #2, !dbg !9232
  call void @llvm.dbg.declare(metadata !1101, metadata !7448, metadata !DIExpression()) #2, !dbg !9232
  store i32 1, i32* %tmp8.i, align 4, !dbg !9232
  %14 = load i32, i32* %tmp8.i, align 4, !dbg !9232
  %15 = load i64, i64* %flags.addr.i, align 8, !dbg !9233
  call void @arch_local_irq_restore(i64 %15) #9, !dbg !9233
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !9234, !srcloc !7452
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i20, align 8, !dbg !9235
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !9235
  %rlock.i21 = bitcast %union.anon* %17 to %struct.raw_spinlock*, !dbg !9235
  br label %return, !dbg !9236

return:                                           ; preds = %do.end18, %if.then
  ret void, !dbg !9236
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_eh_thaw_port(%struct.ata_port* %ap) #0 !dbg !9237 {
entry:
  %lock.addr.i26 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i26, metadata !7379, metadata !DIExpression()), !dbg !9238
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7386, metadata !DIExpression()), !dbg !9240
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7388, metadata !DIExpression()), !dbg !9241
  %ap.addr = alloca %struct.ata_port*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !9248, metadata !DIExpression()), !dbg !9249
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9250, metadata !DIExpression()), !dbg !9251
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9252
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 1, !dbg !9254
  %1 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !9254
  %error_handler = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %1, i32 0, i32 22, !dbg !9255
  %2 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %error_handler, align 8, !dbg !9255
  %tobool = icmp ne void (%struct.ata_port*)* %2, null, !dbg !9252
  br i1 %tobool, label %if.end, label %if.then, !dbg !9256

if.then:                                          ; preds = %entry
  br label %return, !dbg !9257

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !9258

do.body:                                          ; preds = %if.end
  br label %do.body1, !dbg !9259

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9260, metadata !DIExpression()), !dbg !9262
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9263, metadata !DIExpression()), !dbg !9262
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9262
  %conv = zext i1 %cmp to i32, !dbg !9262
  store i32 1, i32* %tmp, align 4, !dbg !9262
  %3 = load i32, i32* %tmp, align 4, !dbg !9262
  br label %do.body2, !dbg !9264

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !9265

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !9266

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !9268, metadata !DIExpression()), !dbg !9271
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !9272, metadata !DIExpression()), !dbg !9271
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !9271
  %conv8 = zext i1 %cmp7 to i32, !dbg !9271
  store i32 1, i32* %tmp9, align 4, !dbg !9271
  %4 = load i32, i32* %tmp9, align 4, !dbg !9271
  %call = call i64 @arch_local_irq_save() #7, !dbg !9273
  store i64 %call, i64* %flags, align 8, !dbg !9273
  br label %do.end, !dbg !9273

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !9266

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !9265

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !9274, !srcloc !9275
  br label %do.body12, !dbg !9274

do.body12:                                        ; preds = %do.body11
  %5 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9276
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %5, i32 0, i32 2, !dbg !9276
  %6 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !9276
  store %struct.spinlock* %6, %struct.spinlock** %lock.addr.i, align 8
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9277
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !9278
  %rlock.i = bitcast %union.anon* %8 to %struct.raw_spinlock*, !dbg !9278
  br label %do.end14, !dbg !9276

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !9274

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !9265

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !9264

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !9259

do.end18:                                         ; preds = %do.end17
  %9 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9279
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %9, i32 0, i32 4, !dbg !9280
  %10 = load i32, i32* %pflags, align 32, !dbg !9281
  %and = and i32 %10, -5, !dbg !9281
  store i32 %and, i32* %pflags, align 32, !dbg !9281
  %11 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9282
  %ops19 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %11, i32 0, i32 1, !dbg !9284
  %12 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops19, align 8, !dbg !9284
  %thaw = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %12, i32 0, i32 13, !dbg !9285
  %13 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %thaw, align 8, !dbg !9285
  %tobool20 = icmp ne void (%struct.ata_port*)* %13, null, !dbg !9282
  br i1 %tobool20, label %if.then21, label %if.end24, !dbg !9286

if.then21:                                        ; preds = %do.end18
  %14 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9287
  %ops22 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %14, i32 0, i32 1, !dbg !9288
  %15 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops22, align 8, !dbg !9288
  %thaw23 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %15, i32 0, i32 13, !dbg !9289
  %16 = load void (%struct.ata_port*)*, void (%struct.ata_port*)** %thaw23, align 8, !dbg !9289
  %17 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9290
  call void %16(%struct.ata_port* %17) #7, !dbg !9287
  br label %if.end24, !dbg !9287

if.end24:                                         ; preds = %if.then21, %do.end18
  %18 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9291
  %lock25 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %18, i32 0, i32 2, !dbg !9292
  %19 = load %struct.spinlock*, %struct.spinlock** %lock25, align 16, !dbg !9292
  %20 = load i64, i64* %flags, align 8, !dbg !9293
  store %struct.spinlock* %19, %struct.spinlock** %lock.addr.i26, align 8
  store i64 %20, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1101, metadata !7437, metadata !DIExpression()) #2, !dbg !9294
  call void @llvm.dbg.declare(metadata !1101, metadata !7441, metadata !DIExpression()) #2, !dbg !9294
  store i32 1, i32* %tmp.i, align 4, !dbg !9294
  %21 = load i32, i32* %tmp.i, align 4, !dbg !9294
  call void @llvm.dbg.declare(metadata !1101, metadata !7442, metadata !DIExpression()) #2, !dbg !9295
  call void @llvm.dbg.declare(metadata !1101, metadata !7448, metadata !DIExpression()) #2, !dbg !9295
  store i32 1, i32* %tmp8.i, align 4, !dbg !9295
  %22 = load i32, i32* %tmp8.i, align 4, !dbg !9295
  %23 = load i64, i64* %flags.addr.i, align 8, !dbg !9296
  call void @arch_local_irq_restore(i64 %23) #9, !dbg !9296
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !9297, !srcloc !7452
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i26, align 8, !dbg !9298
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !9298
  %rlock.i27 = bitcast %union.anon* %25 to %struct.raw_spinlock*, !dbg !9298
  br label %return, !dbg !9299

return:                                           ; preds = %if.end24, %if.then
  ret void, !dbg !9299
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_eh_qc_complete(%struct.ata_queued_cmd* %qc) #0 !dbg !9300 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %scmd = alloca %struct.scsi_cmnd*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !9301, metadata !DIExpression()), !dbg !9302
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd, metadata !9303, metadata !DIExpression()), !dbg !9304
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9305
  %scsicmd = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 2, !dbg !9306
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd, align 8, !dbg !9306
  store %struct.scsi_cmnd* %1, %struct.scsi_cmnd** %scmd, align 8, !dbg !9304
  %2 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !9307
  %allowed = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %2, i32 0, i32 8, !dbg !9308
  %3 = load i32, i32* %allowed, align 4, !dbg !9308
  %4 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !9309
  %retries = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %4, i32 0, i32 7, !dbg !9310
  store i32 %3, i32* %retries, align 8, !dbg !9311
  %5 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9312
  call void @__ata_eh_qc_complete(%struct.ata_queued_cmd* %5) #7, !dbg !9313
  ret void, !dbg !9314
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__ata_eh_qc_complete(%struct.ata_queued_cmd* %qc) #0 !dbg !9315 {
entry:
  %lock.addr.i44 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i44, metadata !7379, metadata !DIExpression()), !dbg !9316
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7386, metadata !DIExpression()), !dbg !9318
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7388, metadata !DIExpression()), !dbg !9319
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %scmd = alloca %struct.scsi_cmnd*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp36 = alloca i64, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !9326, metadata !DIExpression()), !dbg !9327
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !9328, metadata !DIExpression()), !dbg !9329
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9330
  %ap1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 0, !dbg !9331
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 8, !dbg !9331
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !9329
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd, metadata !9332, metadata !DIExpression()), !dbg !9333
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9334
  %scsicmd = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %2, i32 0, i32 2, !dbg !9335
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd, align 8, !dbg !9335
  store %struct.scsi_cmnd* %3, %struct.scsi_cmnd** %scmd, align 8, !dbg !9333
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9336, metadata !DIExpression()), !dbg !9337
  br label %do.body, !dbg !9338

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !9339

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9340, metadata !DIExpression()), !dbg !9342
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9343, metadata !DIExpression()), !dbg !9342
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9342
  %conv = zext i1 %cmp to i32, !dbg !9342
  store i32 1, i32* %tmp, align 4, !dbg !9342
  %4 = load i32, i32* %tmp, align 4, !dbg !9342
  br label %do.body3, !dbg !9344

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !9345

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !9346

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !9348, metadata !DIExpression()), !dbg !9351
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !9352, metadata !DIExpression()), !dbg !9351
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !9351
  %conv9 = zext i1 %cmp8 to i32, !dbg !9351
  store i32 1, i32* %tmp10, align 4, !dbg !9351
  %5 = load i32, i32* %tmp10, align 4, !dbg !9351
  %call = call i64 @arch_local_irq_save() #7, !dbg !9353
  store i64 %call, i64* %flags, align 8, !dbg !9353
  br label %do.end, !dbg !9353

do.end:                                           ; preds = %do.body5
  br label %do.end11, !dbg !9346

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !9345

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !9354, !srcloc !9355
  br label %do.body13, !dbg !9354

do.body13:                                        ; preds = %do.body12
  %6 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9356
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %6, i32 0, i32 2, !dbg !9356
  %7 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !9356
  store %struct.spinlock* %7, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9357
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !9358
  %rlock.i = bitcast %union.anon* %9 to %struct.raw_spinlock*, !dbg !9358
  br label %do.end15, !dbg !9356

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !9354

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !9345

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !9344

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !9339

do.end19:                                         ; preds = %do.end18
  %10 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9359
  %scsidone = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %10, i32 0, i32 3, !dbg !9360
  store void (%struct.scsi_cmnd*)* @ata_eh_scsidone, void (%struct.scsi_cmnd*)** %scsidone, align 8, !dbg !9361
  %11 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9362
  call void @__ata_qc_complete(%struct.ata_queued_cmd* %11) #7, !dbg !9363
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9364, metadata !DIExpression()), !dbg !9366
  %12 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9366
  %tag = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %12, i32 0, i32 7, !dbg !9366
  %13 = load i32, i32* %tag, align 8, !dbg !9366
  %call20 = call zeroext i1 @ata_tag_valid(i32 %13) #7, !dbg !9366
  %lnot = xor i1 %call20, true, !dbg !9366
  %lnot21 = xor i1 %lnot, true, !dbg !9366
  %lnot.ext = zext i1 %lnot21 to i32, !dbg !9366
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !9366
  %14 = load i32, i32* %__ret_warn_on, align 4, !dbg !9367
  %tobool = icmp ne i32 %14, 0, !dbg !9367
  %lnot22 = xor i1 %tobool, true, !dbg !9367
  %lnot24 = xor i1 %lnot22, true, !dbg !9367
  %lnot.ext25 = zext i1 %lnot24 to i32, !dbg !9367
  %conv26 = sext i32 %lnot.ext25 to i64, !dbg !9367
  %tobool27 = icmp ne i64 %conv26, 0, !dbg !9367
  br i1 %tobool27, label %if.then, label %if.end, !dbg !9366

if.then:                                          ; preds = %do.end19
  br label %do.body28, !dbg !9367

do.body28:                                        ; preds = %if.then
  br label %do.body29, !dbg !9369

do.body29:                                        ; preds = %do.body28
  br label %do.end30, !dbg !9371

do.end30:                                         ; preds = %do.body29
  br label %do.body31, !dbg !9369

do.body31:                                        ; preds = %do.end30
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), i32 1159, i32 2305, i64 12) #2, !dbg !9373, !srcloc !9375
  br label %do.end32, !dbg !9373

do.end32:                                         ; preds = %do.body31
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 324) #2, !dbg !9376, !srcloc !9378
  br label %do.body33, !dbg !9369

do.body33:                                        ; preds = %do.end32
  br label %do.end34, !dbg !9379

do.end34:                                         ; preds = %do.body33
  br label %do.end35, !dbg !9369

do.end35:                                         ; preds = %do.end34
  br label %if.end, !dbg !9369

if.end:                                           ; preds = %do.end35, %do.end19
  %15 = load i32, i32* %__ret_warn_on, align 4, !dbg !9366
  %tobool37 = icmp ne i32 %15, 0, !dbg !9366
  %lnot38 = xor i1 %tobool37, true, !dbg !9366
  %lnot40 = xor i1 %lnot38, true, !dbg !9366
  %lnot.ext41 = zext i1 %lnot40 to i32, !dbg !9366
  %conv42 = sext i32 %lnot.ext41 to i64, !dbg !9366
  store i64 %conv42, i64* %tmp36, align 8, !dbg !9367
  %16 = load i64, i64* %tmp36, align 8, !dbg !9366
  %17 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9381
  %lock43 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %17, i32 0, i32 2, !dbg !9382
  %18 = load %struct.spinlock*, %struct.spinlock** %lock43, align 16, !dbg !9382
  %19 = load i64, i64* %flags, align 8, !dbg !9383
  store %struct.spinlock* %18, %struct.spinlock** %lock.addr.i44, align 8
  store i64 %19, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1101, metadata !7437, metadata !DIExpression()) #2, !dbg !9384
  call void @llvm.dbg.declare(metadata !1101, metadata !7441, metadata !DIExpression()) #2, !dbg !9384
  store i32 1, i32* %tmp.i, align 4, !dbg !9384
  %20 = load i32, i32* %tmp.i, align 4, !dbg !9384
  call void @llvm.dbg.declare(metadata !1101, metadata !7442, metadata !DIExpression()) #2, !dbg !9385
  call void @llvm.dbg.declare(metadata !1101, metadata !7448, metadata !DIExpression()) #2, !dbg !9385
  store i32 1, i32* %tmp8.i, align 4, !dbg !9385
  %21 = load i32, i32* %tmp8.i, align 4, !dbg !9385
  %22 = load i64, i64* %flags.addr.i, align 8, !dbg !9386
  call void @arch_local_irq_restore(i64 %22) #9, !dbg !9386
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !9387, !srcloc !7452
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i44, align 8, !dbg !9388
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !9388
  %rlock.i45 = bitcast %union.anon* %24 to %struct.raw_spinlock*, !dbg !9388
  %25 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !9389
  %26 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9390
  %eh_done_q = getelementptr inbounds %struct.ata_port, %struct.ata_port* %26, i32 0, i32 39, !dbg !9391
  call void @scsi_eh_finish_cmd(%struct.scsi_cmnd* %25, %struct.list_head* %eh_done_q) #7, !dbg !9392
  ret void, !dbg !9393
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_eh_qc_retry(%struct.ata_queued_cmd* %qc) #0 !dbg !9394 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %scmd = alloca %struct.scsi_cmnd*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !9395, metadata !DIExpression()), !dbg !9396
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd, metadata !9397, metadata !DIExpression()), !dbg !9398
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9399
  %scsicmd = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 2, !dbg !9400
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd, align 8, !dbg !9400
  store %struct.scsi_cmnd* %1, %struct.scsi_cmnd** %scmd, align 8, !dbg !9398
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9401
  %err_mask = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %2, i32 0, i32 20, !dbg !9403
  %3 = load i32, i32* %err_mask, align 4, !dbg !9403
  %tobool = icmp ne i32 %3, 0, !dbg !9401
  br i1 %tobool, label %if.end, label %if.then, !dbg !9404

if.then:                                          ; preds = %entry
  %4 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scmd, align 8, !dbg !9405
  %allowed = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %4, i32 0, i32 8, !dbg !9406
  %5 = load i32, i32* %allowed, align 4, !dbg !9407
  %inc = add i32 %5, 1, !dbg !9407
  store i32 %inc, i32* %allowed, align 4, !dbg !9407
  br label %if.end, !dbg !9405

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !9408
  call void @__ata_eh_qc_complete(%struct.ata_queued_cmd* %6) #7, !dbg !9409
  ret void, !dbg !9410
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_dev_disable(%struct.ata_device* %dev) #0 !dbg !9411 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !9412, metadata !DIExpression()), !dbg !9413
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9414
  %call = call i32 @ata_dev_enabled(%struct.ata_device* %0) #7, !dbg !9416
  %tobool = icmp ne i32 %call, 0, !dbg !9416
  br i1 %tobool, label %if.end, label %if.then, !dbg !9417

if.then:                                          ; preds = %entry
  br label %return, !dbg !9418

if.end:                                           ; preds = %entry
  %1 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9419
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %1, i32 0, i32 0, !dbg !9419
  %2 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !9419
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %2, i32 0, i32 0, !dbg !9419
  %3 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !9419
  %msg_enable = getelementptr inbounds %struct.ata_port, %struct.ata_port* %3, i32 0, i32 38, !dbg !9419
  %4 = load i32, i32* %msg_enable, align 4, !dbg !9419
  %and = and i32 %4, 1, !dbg !9419
  %tobool1 = icmp ne i32 %and, 0, !dbg !9419
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !9421

if.then2:                                         ; preds = %if.end
  %5 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9422
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0)) #7, !dbg !9422
  br label %if.end3, !dbg !9422

if.end3:                                          ; preds = %if.then2, %if.end
  %6 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9423
  call void @ata_acpi_on_disable(%struct.ata_device* %6) #7, !dbg !9424
  %7 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9425
  %call4 = call i32 @ata_down_xfermask_limit(%struct.ata_device* %7, i32 -2147483644) #7, !dbg !9426
  %8 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9427
  %class = getelementptr inbounds %struct.ata_device, %struct.ata_device* %8, i32 0, i32 11, !dbg !9428
  %9 = load i32, i32* %class, align 64, !dbg !9429
  %inc = add i32 %9, 1, !dbg !9429
  store i32 %inc, i32* %class, align 64, !dbg !9429
  %10 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9430
  %ering = getelementptr inbounds %struct.ata_device, %struct.ata_device* %10, i32 0, i32 36, !dbg !9431
  call void @ata_ering_clear(%struct.ata_ering* %ering) #7, !dbg !9432
  br label %return, !dbg !9433

return:                                           ; preds = %if.end3, %if.then
  ret void, !dbg !9433
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_dev_enabled(%struct.ata_device* %dev) #0 !dbg !9434 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !9439, metadata !DIExpression()), !dbg !9440
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9441
  %class = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 11, !dbg !9442
  %1 = load i32, i32* %class, align 64, !dbg !9442
  %call = call i32 @ata_class_enabled(i32 %1) #7, !dbg !9443
  ret i32 %call, !dbg !9444
}

; Function Attrs: noredzone
declare dso_local void @ata_dev_printk(%struct.ata_device*, i8*, i8*, ...) #3

; Function Attrs: noredzone
declare dso_local void @ata_acpi_on_disable(%struct.ata_device*) #3

; Function Attrs: noredzone
declare dso_local i32 @ata_down_xfermask_limit(%struct.ata_device*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_ering_clear(%struct.ata_ering* %ering) #0 !dbg !9445 {
entry:
  %ering.addr = alloca %struct.ata_ering*, align 8
  store %struct.ata_ering* %ering, %struct.ata_ering** %ering.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_ering** %ering.addr, metadata !9448, metadata !DIExpression()), !dbg !9449
  %0 = load %struct.ata_ering*, %struct.ata_ering** %ering.addr, align 8, !dbg !9450
  %call = call i32 @ata_ering_map(%struct.ata_ering* %0, i32 (%struct.ata_ering_entry*, i8*)* @ata_ering_clear_cb, i8* null) #7, !dbg !9451
  ret void, !dbg !9452
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_eh_detach_dev(%struct.ata_device* %dev) #0 !dbg !9453 {
entry:
  %lock.addr.i29 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i29, metadata !7379, metadata !DIExpression()), !dbg !9454
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7386, metadata !DIExpression()), !dbg !9456
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7388, metadata !DIExpression()), !dbg !9457
  %dev.addr = alloca %struct.ata_device*, align 8
  %link = alloca %struct.ata_link*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %ehc = alloca %struct.ata_eh_context*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !9464, metadata !DIExpression()), !dbg !9465
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link, metadata !9466, metadata !DIExpression()), !dbg !9467
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9468
  %link1 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 0, !dbg !9469
  %1 = load %struct.ata_link*, %struct.ata_link** %link1, align 64, !dbg !9469
  store %struct.ata_link* %1, %struct.ata_link** %link, align 8, !dbg !9467
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !9470, metadata !DIExpression()), !dbg !9471
  %2 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !9472
  %ap2 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %2, i32 0, i32 0, !dbg !9473
  %3 = load %struct.ata_port*, %struct.ata_port** %ap2, align 64, !dbg !9473
  store %struct.ata_port* %3, %struct.ata_port** %ap, align 8, !dbg !9471
  call void @llvm.dbg.declare(metadata %struct.ata_eh_context** %ehc, metadata !9474, metadata !DIExpression()), !dbg !9475
  %4 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !9476
  %eh_context = getelementptr inbounds %struct.ata_link, %struct.ata_link* %4, i32 0, i32 12, !dbg !9477
  store %struct.ata_eh_context* %eh_context, %struct.ata_eh_context** %ehc, align 8, !dbg !9475
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9478, metadata !DIExpression()), !dbg !9479
  %5 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9480
  call void @ata_dev_disable(%struct.ata_device* %5) #7, !dbg !9481
  br label %do.body, !dbg !9482

do.body:                                          ; preds = %entry
  br label %do.body3, !dbg !9483

do.body3:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9484, metadata !DIExpression()), !dbg !9486
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9487, metadata !DIExpression()), !dbg !9486
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9486
  %conv = zext i1 %cmp to i32, !dbg !9486
  store i32 1, i32* %tmp, align 4, !dbg !9486
  %6 = load i32, i32* %tmp, align 4, !dbg !9486
  br label %do.body4, !dbg !9488

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !9489

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !9490

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !9492, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !9496, metadata !DIExpression()), !dbg !9495
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !9495
  %conv10 = zext i1 %cmp9 to i32, !dbg !9495
  store i32 1, i32* %tmp11, align 4, !dbg !9495
  %7 = load i32, i32* %tmp11, align 4, !dbg !9495
  %call = call i64 @arch_local_irq_save() #7, !dbg !9497
  store i64 %call, i64* %flags, align 8, !dbg !9497
  br label %do.end, !dbg !9497

do.end:                                           ; preds = %do.body6
  br label %do.end12, !dbg !9490

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !9489

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !9498, !srcloc !9499
  br label %do.body14, !dbg !9498

do.body14:                                        ; preds = %do.body13
  %8 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9500
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %8, i32 0, i32 2, !dbg !9500
  %9 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !9500
  store %struct.spinlock* %9, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9501
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !9502
  %rlock.i = bitcast %union.anon* %11 to %struct.raw_spinlock*, !dbg !9502
  br label %do.end16, !dbg !9500

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !9498

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !9489

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !9488

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !9483

do.end20:                                         ; preds = %do.end19
  %12 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9503
  %flags21 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %12, i32 0, i32 3, !dbg !9504
  %13 = load i64, i64* %flags21, align 16, !dbg !9505
  %and = and i64 %13, -16777217, !dbg !9505
  store i64 %and, i64* %flags21, align 16, !dbg !9505
  %14 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9506
  %call22 = call i32 @ata_scsi_offline_dev(%struct.ata_device* %14) #7, !dbg !9508
  %tobool = icmp ne i32 %call22, 0, !dbg !9508
  br i1 %tobool, label %if.then, label %if.end, !dbg !9509

if.then:                                          ; preds = %do.end20
  %15 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9510
  %flags23 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %15, i32 0, i32 3, !dbg !9512
  %16 = load i64, i64* %flags23, align 16, !dbg !9513
  %or = or i64 %16, 33554432, !dbg !9513
  store i64 %or, i64* %flags23, align 16, !dbg !9513
  %17 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9514
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %17, i32 0, i32 4, !dbg !9515
  %18 = load i32, i32* %pflags, align 32, !dbg !9516
  %or24 = or i32 %18, 64, !dbg !9516
  store i32 %or24, i32* %pflags, align 32, !dbg !9516
  br label %if.end, !dbg !9517

if.end:                                           ; preds = %if.then, %do.end20
  %19 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !9518
  %20 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9519
  %21 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !9520
  %eh_info = getelementptr inbounds %struct.ata_link, %struct.ata_link* %21, i32 0, i32 11, !dbg !9521
  call void @ata_eh_clear_action(%struct.ata_link* %19, %struct.ata_device* %20, %struct.ata_eh_info* %eh_info, i32 33) #7, !dbg !9522
  %22 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !9523
  %23 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9524
  %24 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !9525
  %eh_context25 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %24, i32 0, i32 12, !dbg !9526
  %i = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %eh_context25, i32 0, i32 0, !dbg !9527
  call void @ata_eh_clear_action(%struct.ata_link* %22, %struct.ata_device* %23, %struct.ata_eh_info* %i, i32 33) #7, !dbg !9528
  %25 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !9529
  %saved_xfer_mode = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %25, i32 0, i32 7, !dbg !9530
  %26 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9531
  %devno = getelementptr inbounds %struct.ata_device, %struct.ata_device* %26, i32 0, i32 1, !dbg !9532
  %27 = load i32, i32* %devno, align 8, !dbg !9532
  %idxprom = zext i32 %27 to i64, !dbg !9529
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %saved_xfer_mode, i64 0, i64 %idxprom, !dbg !9529
  store i8 0, i8* %arrayidx, align 1, !dbg !9533
  %28 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9534
  %devno26 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %28, i32 0, i32 1, !dbg !9535
  %29 = load i32, i32* %devno26, align 8, !dbg !9535
  %shl = shl i32 1, %29, !dbg !9536
  %neg = xor i32 %shl, -1, !dbg !9537
  %30 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !9538
  %saved_ncq_enabled = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %30, i32 0, i32 6, !dbg !9539
  %31 = load i32, i32* %saved_ncq_enabled, align 8, !dbg !9540
  %and27 = and i32 %31, %neg, !dbg !9540
  store i32 %and27, i32* %saved_ncq_enabled, align 8, !dbg !9540
  %32 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9541
  %lock28 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %32, i32 0, i32 2, !dbg !9542
  %33 = load %struct.spinlock*, %struct.spinlock** %lock28, align 16, !dbg !9542
  %34 = load i64, i64* %flags, align 8, !dbg !9543
  store %struct.spinlock* %33, %struct.spinlock** %lock.addr.i29, align 8
  store i64 %34, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1101, metadata !7437, metadata !DIExpression()) #2, !dbg !9544
  call void @llvm.dbg.declare(metadata !1101, metadata !7441, metadata !DIExpression()) #2, !dbg !9544
  store i32 1, i32* %tmp.i, align 4, !dbg !9544
  %35 = load i32, i32* %tmp.i, align 4, !dbg !9544
  call void @llvm.dbg.declare(metadata !1101, metadata !7442, metadata !DIExpression()) #2, !dbg !9545
  call void @llvm.dbg.declare(metadata !1101, metadata !7448, metadata !DIExpression()) #2, !dbg !9545
  store i32 1, i32* %tmp8.i, align 4, !dbg !9545
  %36 = load i32, i32* %tmp8.i, align 4, !dbg !9545
  %37 = load i64, i64* %flags.addr.i, align 8, !dbg !9546
  call void @arch_local_irq_restore(i64 %37) #9, !dbg !9546
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !9547, !srcloc !7452
  %38 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i29, align 8, !dbg !9548
  %39 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %38, i32 0, i32 0, !dbg !9548
  %rlock.i30 = bitcast %union.anon* %39 to %struct.raw_spinlock*, !dbg !9548
  ret void, !dbg !9549
}

; Function Attrs: noredzone
declare dso_local i32 @ata_scsi_offline_dev(%struct.ata_device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_eh_clear_action(%struct.ata_link* %link, %struct.ata_device* %dev, %struct.ata_eh_info* %ehi, i32 %action) #0 !dbg !9550 {
entry:
  %link.addr = alloca %struct.ata_link*, align 8
  %dev.addr = alloca %struct.ata_device*, align 8
  %ehi.addr = alloca %struct.ata_eh_info*, align 8
  %action.addr = alloca i32, align 4
  %tdev = alloca %struct.ata_device*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !9553, metadata !DIExpression()), !dbg !9554
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !9555, metadata !DIExpression()), !dbg !9556
  store %struct.ata_eh_info* %ehi, %struct.ata_eh_info** %ehi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_eh_info** %ehi.addr, metadata !9557, metadata !DIExpression()), !dbg !9558
  store i32 %action, i32* %action.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !9559, metadata !DIExpression()), !dbg !9560
  call void @llvm.dbg.declare(metadata %struct.ata_device** %tdev, metadata !9561, metadata !DIExpression()), !dbg !9562
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9563
  %tobool = icmp ne %struct.ata_device* %0, null, !dbg !9563
  br i1 %tobool, label %if.else, label %if.then, !dbg !9565

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %action.addr, align 4, !dbg !9566
  %neg = xor i32 %1, -1, !dbg !9568
  %2 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi.addr, align 8, !dbg !9569
  %action1 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %2, i32 0, i32 3, !dbg !9570
  %3 = load i32, i32* %action1, align 8, !dbg !9571
  %and = and i32 %3, %neg, !dbg !9571
  store i32 %and, i32* %action1, align 8, !dbg !9571
  %4 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !9572
  %call = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %4, i32 2) #7, !dbg !9572
  store %struct.ata_device* %call, %struct.ata_device** %tdev, align 8, !dbg !9572
  br label %for.cond, !dbg !9572

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load %struct.ata_device*, %struct.ata_device** %tdev, align 8, !dbg !9574
  %tobool2 = icmp ne %struct.ata_device* %5, null, !dbg !9572
  br i1 %tobool2, label %for.body, label %for.end, !dbg !9572

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %action.addr, align 4, !dbg !9576
  %neg3 = xor i32 %6, -1, !dbg !9577
  %7 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi.addr, align 8, !dbg !9578
  %dev_action = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %7, i32 0, i32 4, !dbg !9579
  %8 = load %struct.ata_device*, %struct.ata_device** %tdev, align 8, !dbg !9580
  %devno = getelementptr inbounds %struct.ata_device, %struct.ata_device* %8, i32 0, i32 1, !dbg !9581
  %9 = load i32, i32* %devno, align 8, !dbg !9581
  %idxprom = zext i32 %9 to i64, !dbg !9578
  %arrayidx = getelementptr [2 x i32], [2 x i32]* %dev_action, i64 0, i64 %idxprom, !dbg !9578
  %10 = load i32, i32* %arrayidx, align 4, !dbg !9582
  %and4 = and i32 %10, %neg3, !dbg !9582
  store i32 %and4, i32* %arrayidx, align 4, !dbg !9582
  br label %for.inc, !dbg !9578

for.inc:                                          ; preds = %for.body
  %11 = load %struct.ata_device*, %struct.ata_device** %tdev, align 8, !dbg !9574
  %12 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !9574
  %call5 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %11, %struct.ata_link* %12, i32 2) #7, !dbg !9574
  store %struct.ata_device* %call5, %struct.ata_device** %tdev, align 8, !dbg !9574
  br label %for.cond, !dbg !9574, !llvm.loop !9583

for.end:                                          ; preds = %for.cond
  br label %if.end56, !dbg !9585

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9586, metadata !DIExpression()), !dbg !9589
  %13 = load i32, i32* %action.addr, align 4, !dbg !9589
  %and6 = and i32 %13, 33, !dbg !9589
  %tobool7 = icmp ne i32 %and6, 0, !dbg !9589
  %lnot = xor i1 %tobool7, true, !dbg !9589
  %lnot8 = xor i1 %lnot, true, !dbg !9589
  %lnot9 = xor i1 %lnot8, true, !dbg !9589
  %lnot.ext = zext i1 %lnot9 to i32, !dbg !9589
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !9589
  %14 = load i32, i32* %__ret_warn_on, align 4, !dbg !9590
  %tobool10 = icmp ne i32 %14, 0, !dbg !9590
  %lnot11 = xor i1 %tobool10, true, !dbg !9590
  %lnot13 = xor i1 %lnot11, true, !dbg !9590
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !9590
  %conv = sext i32 %lnot.ext14 to i64, !dbg !9590
  %tobool15 = icmp ne i64 %conv, 0, !dbg !9590
  br i1 %tobool15, label %if.then16, label %if.end, !dbg !9589

if.then16:                                        ; preds = %if.else
  br label %do.body, !dbg !9590

do.body:                                          ; preds = %if.then16
  br label %do.body17, !dbg !9592

do.body17:                                        ; preds = %do.body
  br label %do.end, !dbg !9594

do.end:                                           ; preds = %do.body17
  br label %do.body18, !dbg !9592

do.body18:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), i32 435, i32 2305, i64 12) #2, !dbg !9596, !srcloc !9598
  br label %do.end19, !dbg !9596

do.end19:                                         ; preds = %do.body18
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 310) #2, !dbg !9599, !srcloc !9601
  br label %do.body20, !dbg !9592

do.body20:                                        ; preds = %do.end19
  br label %do.end21, !dbg !9602

do.end21:                                         ; preds = %do.body20
  br label %do.end22, !dbg !9592

do.end22:                                         ; preds = %do.end21
  br label %if.end, !dbg !9592

if.end:                                           ; preds = %do.end22, %if.else
  %15 = load i32, i32* %__ret_warn_on, align 4, !dbg !9589
  %tobool23 = icmp ne i32 %15, 0, !dbg !9589
  %lnot24 = xor i1 %tobool23, true, !dbg !9589
  %lnot26 = xor i1 %lnot24, true, !dbg !9589
  %lnot.ext27 = zext i1 %lnot26 to i32, !dbg !9589
  %conv28 = sext i32 %lnot.ext27 to i64, !dbg !9589
  store i64 %conv28, i64* %tmp, align 8, !dbg !9590
  %16 = load i64, i64* %tmp, align 8, !dbg !9589
  %17 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi.addr, align 8, !dbg !9604
  %action29 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %17, i32 0, i32 3, !dbg !9606
  %18 = load i32, i32* %action29, align 8, !dbg !9606
  %19 = load i32, i32* %action.addr, align 4, !dbg !9607
  %and30 = and i32 %18, %19, !dbg !9608
  %tobool31 = icmp ne i32 %and30, 0, !dbg !9608
  br i1 %tobool31, label %if.then32, label %if.end49, !dbg !9609

if.then32:                                        ; preds = %if.end
  %20 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !9610
  %call33 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %20, i32 2) #7, !dbg !9610
  store %struct.ata_device* %call33, %struct.ata_device** %tdev, align 8, !dbg !9610
  br label %for.cond34, !dbg !9610

for.cond34:                                       ; preds = %for.inc43, %if.then32
  %21 = load %struct.ata_device*, %struct.ata_device** %tdev, align 8, !dbg !9613
  %tobool35 = icmp ne %struct.ata_device* %21, null, !dbg !9610
  br i1 %tobool35, label %for.body36, label %for.end45, !dbg !9610

for.body36:                                       ; preds = %for.cond34
  %22 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi.addr, align 8, !dbg !9615
  %action37 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %22, i32 0, i32 3, !dbg !9616
  %23 = load i32, i32* %action37, align 8, !dbg !9616
  %24 = load i32, i32* %action.addr, align 4, !dbg !9617
  %and38 = and i32 %23, %24, !dbg !9618
  %25 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi.addr, align 8, !dbg !9619
  %dev_action39 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %25, i32 0, i32 4, !dbg !9620
  %26 = load %struct.ata_device*, %struct.ata_device** %tdev, align 8, !dbg !9621
  %devno40 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %26, i32 0, i32 1, !dbg !9622
  %27 = load i32, i32* %devno40, align 8, !dbg !9622
  %idxprom41 = zext i32 %27 to i64, !dbg !9619
  %arrayidx42 = getelementptr [2 x i32], [2 x i32]* %dev_action39, i64 0, i64 %idxprom41, !dbg !9619
  %28 = load i32, i32* %arrayidx42, align 4, !dbg !9623
  %or = or i32 %28, %and38, !dbg !9623
  store i32 %or, i32* %arrayidx42, align 4, !dbg !9623
  br label %for.inc43, !dbg !9619

for.inc43:                                        ; preds = %for.body36
  %29 = load %struct.ata_device*, %struct.ata_device** %tdev, align 8, !dbg !9613
  %30 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !9613
  %call44 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %29, %struct.ata_link* %30, i32 2) #7, !dbg !9613
  store %struct.ata_device* %call44, %struct.ata_device** %tdev, align 8, !dbg !9613
  br label %for.cond34, !dbg !9613, !llvm.loop !9624

for.end45:                                        ; preds = %for.cond34
  %31 = load i32, i32* %action.addr, align 4, !dbg !9626
  %neg46 = xor i32 %31, -1, !dbg !9627
  %32 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi.addr, align 8, !dbg !9628
  %action47 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %32, i32 0, i32 3, !dbg !9629
  %33 = load i32, i32* %action47, align 8, !dbg !9630
  %and48 = and i32 %33, %neg46, !dbg !9630
  store i32 %and48, i32* %action47, align 8, !dbg !9630
  br label %if.end49, !dbg !9631

if.end49:                                         ; preds = %for.end45, %if.end
  %34 = load i32, i32* %action.addr, align 4, !dbg !9632
  %neg50 = xor i32 %34, -1, !dbg !9633
  %35 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi.addr, align 8, !dbg !9634
  %dev_action51 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %35, i32 0, i32 4, !dbg !9635
  %36 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9636
  %devno52 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %36, i32 0, i32 1, !dbg !9637
  %37 = load i32, i32* %devno52, align 8, !dbg !9637
  %idxprom53 = zext i32 %37 to i64, !dbg !9634
  %arrayidx54 = getelementptr [2 x i32], [2 x i32]* %dev_action51, i64 0, i64 %idxprom53, !dbg !9634
  %38 = load i32, i32* %arrayidx54, align 4, !dbg !9638
  %and55 = and i32 %38, %neg50, !dbg !9638
  store i32 %and55, i32* %arrayidx54, align 4, !dbg !9638
  br label %if.end56

if.end56:                                         ; preds = %if.end49, %for.end
  ret void, !dbg !9639
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_eh_about_to_do(%struct.ata_link* %link, %struct.ata_device* %dev, i32 %action) #0 !dbg !9640 {
entry:
  %lock.addr.i24 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i24, metadata !7379, metadata !DIExpression()), !dbg !9643
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7386, metadata !DIExpression()), !dbg !9645
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7388, metadata !DIExpression()), !dbg !9646
  %link.addr = alloca %struct.ata_link*, align 8
  %dev.addr = alloca %struct.ata_device*, align 8
  %action.addr = alloca i32, align 4
  %ap = alloca %struct.ata_port*, align 8
  %ehi = alloca %struct.ata_eh_info*, align 8
  %ehc = alloca %struct.ata_eh_context*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !9653, metadata !DIExpression()), !dbg !9654
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !9655, metadata !DIExpression()), !dbg !9656
  store i32 %action, i32* %action.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !9657, metadata !DIExpression()), !dbg !9658
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !9659, metadata !DIExpression()), !dbg !9660
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !9661
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %0, i32 0, i32 0, !dbg !9662
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !9662
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !9660
  call void @llvm.dbg.declare(metadata %struct.ata_eh_info** %ehi, metadata !9663, metadata !DIExpression()), !dbg !9664
  %2 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !9665
  %eh_info = getelementptr inbounds %struct.ata_link, %struct.ata_link* %2, i32 0, i32 11, !dbg !9666
  store %struct.ata_eh_info* %eh_info, %struct.ata_eh_info** %ehi, align 8, !dbg !9664
  call void @llvm.dbg.declare(metadata %struct.ata_eh_context** %ehc, metadata !9667, metadata !DIExpression()), !dbg !9668
  %3 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !9669
  %eh_context = getelementptr inbounds %struct.ata_link, %struct.ata_link* %3, i32 0, i32 12, !dbg !9670
  store %struct.ata_eh_context* %eh_context, %struct.ata_eh_context** %ehc, align 8, !dbg !9668
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9671, metadata !DIExpression()), !dbg !9672
  br label %do.body, !dbg !9673

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !9674

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9675, metadata !DIExpression()), !dbg !9677
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9678, metadata !DIExpression()), !dbg !9677
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9677
  %conv = zext i1 %cmp to i32, !dbg !9677
  store i32 1, i32* %tmp, align 4, !dbg !9677
  %4 = load i32, i32* %tmp, align 4, !dbg !9677
  br label %do.body3, !dbg !9679

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !9680

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !9681

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !9683, metadata !DIExpression()), !dbg !9686
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !9687, metadata !DIExpression()), !dbg !9686
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !9686
  %conv9 = zext i1 %cmp8 to i32, !dbg !9686
  store i32 1, i32* %tmp10, align 4, !dbg !9686
  %5 = load i32, i32* %tmp10, align 4, !dbg !9686
  %call = call i64 @arch_local_irq_save() #7, !dbg !9688
  store i64 %call, i64* %flags, align 8, !dbg !9688
  br label %do.end, !dbg !9688

do.end:                                           ; preds = %do.body5
  br label %do.end11, !dbg !9681

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !9680

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !9689, !srcloc !9690
  br label %do.body13, !dbg !9689

do.body13:                                        ; preds = %do.body12
  %6 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9691
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %6, i32 0, i32 2, !dbg !9691
  %7 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !9691
  store %struct.spinlock* %7, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9692
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !9693
  %rlock.i = bitcast %union.anon* %9 to %struct.raw_spinlock*, !dbg !9693
  br label %do.end15, !dbg !9691

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !9689

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !9680

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !9679

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !9674

do.end19:                                         ; preds = %do.end18
  %10 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !9694
  %11 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9695
  %12 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !9696
  %13 = load i32, i32* %action.addr, align 4, !dbg !9697
  call void @ata_eh_clear_action(%struct.ata_link* %10, %struct.ata_device* %11, %struct.ata_eh_info* %12, i32 %13) #7, !dbg !9698
  %14 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !9699
  %i = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %14, i32 0, i32 0, !dbg !9701
  %flags20 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i, i32 0, i32 5, !dbg !9702
  %15 = load i32, i32* %flags20, align 4, !dbg !9702
  %and = and i32 %15, 8, !dbg !9703
  %tobool = icmp ne i32 %and, 0, !dbg !9703
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !9704

land.lhs.true:                                    ; preds = %do.end19
  %16 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !9705
  %17 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9706
  %slave_link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %17, i32 0, i32 26, !dbg !9707
  %18 = load %struct.ata_link*, %struct.ata_link** %slave_link, align 64, !dbg !9707
  %cmp21 = icmp ne %struct.ata_link* %16, %18, !dbg !9708
  br i1 %cmp21, label %if.then, label %if.end, !dbg !9709

if.then:                                          ; preds = %land.lhs.true
  %19 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9710
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %19, i32 0, i32 4, !dbg !9711
  %20 = load i32, i32* %pflags, align 32, !dbg !9712
  %or = or i32 %20, 8, !dbg !9712
  store i32 %or, i32* %pflags, align 32, !dbg !9712
  br label %if.end, !dbg !9710

if.end:                                           ; preds = %if.then, %land.lhs.true, %do.end19
  %21 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9713
  %lock23 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %21, i32 0, i32 2, !dbg !9714
  %22 = load %struct.spinlock*, %struct.spinlock** %lock23, align 16, !dbg !9714
  %23 = load i64, i64* %flags, align 8, !dbg !9715
  store %struct.spinlock* %22, %struct.spinlock** %lock.addr.i24, align 8
  store i64 %23, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1101, metadata !7437, metadata !DIExpression()) #2, !dbg !9716
  call void @llvm.dbg.declare(metadata !1101, metadata !7441, metadata !DIExpression()) #2, !dbg !9716
  store i32 1, i32* %tmp.i, align 4, !dbg !9716
  %24 = load i32, i32* %tmp.i, align 4, !dbg !9716
  call void @llvm.dbg.declare(metadata !1101, metadata !7442, metadata !DIExpression()) #2, !dbg !9717
  call void @llvm.dbg.declare(metadata !1101, metadata !7448, metadata !DIExpression()) #2, !dbg !9717
  store i32 1, i32* %tmp8.i, align 4, !dbg !9717
  %25 = load i32, i32* %tmp8.i, align 4, !dbg !9717
  %26 = load i64, i64* %flags.addr.i, align 8, !dbg !9718
  call void @arch_local_irq_restore(i64 %26) #9, !dbg !9718
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !9719, !srcloc !7452
  %27 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i24, align 8, !dbg !9720
  %28 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %27, i32 0, i32 0, !dbg !9720
  %rlock.i25 = bitcast %union.anon* %28 to %struct.raw_spinlock*, !dbg !9720
  ret void, !dbg !9721
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_eh_done(%struct.ata_link* %link, %struct.ata_device* %dev, i32 %action) #0 !dbg !9722 {
entry:
  %link.addr = alloca %struct.ata_link*, align 8
  %dev.addr = alloca %struct.ata_device*, align 8
  %action.addr = alloca i32, align 4
  %ehc = alloca %struct.ata_eh_context*, align 8
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !9723, metadata !DIExpression()), !dbg !9724
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !9725, metadata !DIExpression()), !dbg !9726
  store i32 %action, i32* %action.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !9727, metadata !DIExpression()), !dbg !9728
  call void @llvm.dbg.declare(metadata %struct.ata_eh_context** %ehc, metadata !9729, metadata !DIExpression()), !dbg !9730
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !9731
  %eh_context = getelementptr inbounds %struct.ata_link, %struct.ata_link* %0, i32 0, i32 12, !dbg !9732
  store %struct.ata_eh_context* %eh_context, %struct.ata_eh_context** %ehc, align 8, !dbg !9730
  %1 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !9733
  %2 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9734
  %3 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !9735
  %i = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %3, i32 0, i32 0, !dbg !9736
  %4 = load i32, i32* %action.addr, align 4, !dbg !9737
  call void @ata_eh_clear_action(%struct.ata_link* %1, %struct.ata_device* %2, %struct.ata_eh_info* %i, i32 %4) #7, !dbg !9738
  ret void, !dbg !9739
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @atapi_eh_tur(%struct.ata_device* %dev, i8* %r_sense_key) #0 !dbg !9740 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  %r_sense_key.addr = alloca i8*, align 8
  %cdb = alloca [16 x i8], align 16
  %tf = alloca %struct.ata_taskfile, align 8
  %err_mask = alloca i32, align 4
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !9743, metadata !DIExpression()), !dbg !9744
  store i8* %r_sense_key, i8** %r_sense_key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r_sense_key.addr, metadata !9745, metadata !DIExpression()), !dbg !9746
  call void @llvm.dbg.declare(metadata [16 x i8]* %cdb, metadata !9747, metadata !DIExpression()), !dbg !9748
  %0 = bitcast [16 x i8]* %cdb to i8*, !dbg !9748
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 16, i1 false), !dbg !9748
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile* %tf, metadata !9749, metadata !DIExpression()), !dbg !9750
  call void @llvm.dbg.declare(metadata i32* %err_mask, metadata !9751, metadata !DIExpression()), !dbg !9752
  %1 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9753
  call void @ata_tf_init(%struct.ata_device* %1, %struct.ata_taskfile* %tf) #7, !dbg !9754
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 0, !dbg !9755
  %2 = load i64, i64* %flags, align 8, !dbg !9756
  %or = or i64 %2, 6, !dbg !9756
  store i64 %or, i64* %flags, align 8, !dbg !9756
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 14, !dbg !9757
  store i8 -96, i8* %command, align 1, !dbg !9758
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 1, !dbg !9759
  store i8 8, i8* %protocol, align 8, !dbg !9760
  %3 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9761
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %cdb, i64 0, i64 0, !dbg !9762
  %call = call i32 @ata_exec_internal(%struct.ata_device* %3, %struct.ata_taskfile* %tf, i8* %arraydecay, i32 3, i8* null, i32 0, i64 0) #7, !dbg !9763
  store i32 %call, i32* %err_mask, align 4, !dbg !9764
  %4 = load i32, i32* %err_mask, align 4, !dbg !9765
  %cmp = icmp eq i32 %4, 1, !dbg !9767
  br i1 %cmp, label %if.then, label %if.end, !dbg !9768

if.then:                                          ; preds = %entry
  %feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 8, !dbg !9769
  %5 = load i8, i8* %feature, align 1, !dbg !9769
  %conv = zext i8 %5 to i32, !dbg !9770
  %shr = ashr i32 %conv, 4, !dbg !9771
  %conv1 = trunc i32 %shr to i8, !dbg !9770
  %6 = load i8*, i8** %r_sense_key.addr, align 8, !dbg !9772
  store i8 %conv1, i8* %6, align 1, !dbg !9773
  br label %if.end, !dbg !9774

if.end:                                           ; preds = %if.then, %entry
  %7 = load i32, i32* %err_mask, align 4, !dbg !9775
  ret i32 %7, !dbg !9776
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_tf_init(%struct.ata_device* %dev, %struct.ata_taskfile* %tf) #0 !dbg !9777 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  %tf.addr = alloca %struct.ata_taskfile*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !9780, metadata !DIExpression()), !dbg !9781
  store %struct.ata_taskfile* %tf, %struct.ata_taskfile** %tf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf.addr, metadata !9782, metadata !DIExpression()), !dbg !9783
  %0 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !9784
  %1 = bitcast %struct.ata_taskfile* %0 to i8*, !dbg !9785
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 32, i1 false), !dbg !9785
  %2 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9786
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %2, i32 0, i32 0, !dbg !9787
  %3 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !9787
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %3, i32 0, i32 0, !dbg !9788
  %4 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !9788
  %ctl = getelementptr inbounds %struct.ata_port, %struct.ata_port* %4, i32 0, i32 9, !dbg !9789
  %5 = load i8, i8* %ctl, align 8, !dbg !9789
  %6 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !9790
  %ctl1 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %6, i32 0, i32 2, !dbg !9791
  store i8 %5, i8* %ctl1, align 1, !dbg !9792
  %7 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9793
  %devno = getelementptr inbounds %struct.ata_device, %struct.ata_device* %7, i32 0, i32 1, !dbg !9795
  %8 = load i32, i32* %devno, align 8, !dbg !9795
  %cmp = icmp eq i32 %8, 0, !dbg !9796
  br i1 %cmp, label %if.then, label %if.else, !dbg !9797

if.then:                                          ; preds = %entry
  %9 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !9798
  %device = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %9, i32 0, i32 13, !dbg !9799
  store i8 -96, i8* %device, align 4, !dbg !9800
  br label %if.end, !dbg !9798

if.else:                                          ; preds = %entry
  %10 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !9801
  %device2 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %10, i32 0, i32 13, !dbg !9802
  store i8 -80, i8* %device2, align 4, !dbg !9803
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9804
}

; Function Attrs: noredzone
declare dso_local i32 @ata_exec_internal(%struct.ata_device*, %struct.ata_taskfile*, i8*, i32, i8*, i32, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @atapi_eh_request_sense(%struct.ata_device* %dev, i8* %sense_buf, i8 zeroext %dfl_sense_key) #0 !dbg !9805 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  %sense_buf.addr = alloca i8*, align 8
  %dfl_sense_key.addr = alloca i8, align 1
  %cdb = alloca [16 x i8], align 16
  %ap = alloca %struct.ata_port*, align 8
  %tf = alloca %struct.ata_taskfile, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !9808, metadata !DIExpression()), !dbg !9809
  store i8* %sense_buf, i8** %sense_buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %sense_buf.addr, metadata !9810, metadata !DIExpression()), !dbg !9811
  store i8 %dfl_sense_key, i8* %dfl_sense_key.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dfl_sense_key.addr, metadata !9812, metadata !DIExpression()), !dbg !9813
  call void @llvm.dbg.declare(metadata [16 x i8]* %cdb, metadata !9814, metadata !DIExpression()), !dbg !9815
  %0 = bitcast [16 x i8]* %cdb to i8*, !dbg !9815
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 getelementptr inbounds (<{ i8, i8, i8, i8, i8, [11 x i8] }>, <{ i8, i8, i8, i8, i8, [11 x i8] }>* @__const.atapi_eh_request_sense.cdb, i32 0, i32 0), i64 16, i1 false), !dbg !9815
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !9816, metadata !DIExpression()), !dbg !9817
  %1 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9818
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %1, i32 0, i32 0, !dbg !9819
  %2 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !9819
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %2, i32 0, i32 0, !dbg !9820
  %3 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !9820
  store %struct.ata_port* %3, %struct.ata_port** %ap, align 8, !dbg !9817
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile* %tf, metadata !9821, metadata !DIExpression()), !dbg !9822
  %4 = load i8*, i8** %sense_buf.addr, align 8, !dbg !9823
  call void @llvm.memset.p0i8.i64(i8* align 1 %4, i8 0, i64 96, i1 false), !dbg !9824
  %5 = load i8*, i8** %sense_buf.addr, align 8, !dbg !9825
  %arrayidx = getelementptr i8, i8* %5, i64 0, !dbg !9825
  store i8 112, i8* %arrayidx, align 1, !dbg !9826
  %6 = load i8, i8* %dfl_sense_key.addr, align 1, !dbg !9827
  %7 = load i8*, i8** %sense_buf.addr, align 8, !dbg !9828
  %arrayidx2 = getelementptr i8, i8* %7, i64 2, !dbg !9828
  store i8 %6, i8* %arrayidx2, align 1, !dbg !9829
  %8 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9830
  call void @ata_tf_init(%struct.ata_device* %8, %struct.ata_taskfile* %tf) #7, !dbg !9831
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 0, !dbg !9832
  %9 = load i64, i64* %flags, align 8, !dbg !9833
  %or = or i64 %9, 6, !dbg !9833
  store i64 %or, i64* %flags, align 8, !dbg !9833
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 14, !dbg !9834
  store i8 -96, i8* %command, align 1, !dbg !9835
  %10 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !9836
  %flags3 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %10, i32 0, i32 3, !dbg !9838
  %11 = load i64, i64* %flags3, align 8, !dbg !9838
  %and = and i64 %11, 128, !dbg !9839
  %tobool = icmp ne i64 %and, 0, !dbg !9839
  br i1 %tobool, label %if.then, label %if.else, !dbg !9840

if.then:                                          ; preds = %entry
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 1, !dbg !9841
  store i8 10, i8* %protocol, align 8, !dbg !9843
  %feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 8, !dbg !9844
  %12 = load i8, i8* %feature, align 1, !dbg !9845
  %conv = zext i8 %12 to i32, !dbg !9845
  %or4 = or i32 %conv, 1, !dbg !9845
  %conv5 = trunc i32 %or4 to i8, !dbg !9845
  store i8 %conv5, i8* %feature, align 1, !dbg !9845
  br label %if.end, !dbg !9846

if.else:                                          ; preds = %entry
  %protocol6 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 1, !dbg !9847
  store i8 9, i8* %protocol6, align 8, !dbg !9849
  %lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 11, !dbg !9850
  store i8 96, i8* %lbam, align 2, !dbg !9851
  %lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 12, !dbg !9852
  store i8 0, i8* %lbah, align 1, !dbg !9853
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !9854
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %cdb, i64 0, i64 0, !dbg !9855
  %14 = load i8*, i8** %sense_buf.addr, align 8, !dbg !9856
  %call = call i32 @ata_exec_internal(%struct.ata_device* %13, %struct.ata_taskfile* %tf, i8* %arraydecay, i32 2, i8* %14, i32 96, i64 0) #7, !dbg !9857
  ret i32 %call, !dbg !9858
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_eh_autopsy(%struct.ata_port* %ap) #0 !dbg !9859 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %link = alloca %struct.ata_link*, align 8
  %mehc = alloca %struct.ata_eh_context*, align 8
  %sehc = alloca %struct.ata_eh_context*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !9860, metadata !DIExpression()), !dbg !9861
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link, metadata !9862, metadata !DIExpression()), !dbg !9863
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9864
  %call = call %struct.ata_link* @ata_link_next(%struct.ata_link* null, %struct.ata_port* %0, i32 0) #7, !dbg !9864
  store %struct.ata_link* %call, %struct.ata_link** %link, align 8, !dbg !9864
  br label %for.cond, !dbg !9864

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !9866
  %tobool = icmp ne %struct.ata_link* %1, null, !dbg !9864
  br i1 %tobool, label %for.body, label %for.end, !dbg !9864

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !9868
  call void @ata_eh_link_autopsy(%struct.ata_link* %2) #7, !dbg !9869
  br label %for.inc, !dbg !9869

for.inc:                                          ; preds = %for.body
  %3 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !9866
  %4 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9866
  %call1 = call %struct.ata_link* @ata_link_next(%struct.ata_link* %3, %struct.ata_port* %4, i32 0) #7, !dbg !9866
  store %struct.ata_link* %call1, %struct.ata_link** %link, align 8, !dbg !9866
  br label %for.cond, !dbg !9866, !llvm.loop !9870

for.end:                                          ; preds = %for.cond
  %5 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9872
  %slave_link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %5, i32 0, i32 26, !dbg !9874
  %6 = load %struct.ata_link*, %struct.ata_link** %slave_link, align 64, !dbg !9874
  %tobool2 = icmp ne %struct.ata_link* %6, null, !dbg !9872
  br i1 %tobool2, label %if.then, label %if.end, !dbg !9875

if.then:                                          ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.ata_eh_context** %mehc, metadata !9876, metadata !DIExpression()), !dbg !9878
  %7 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9879
  %link3 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %7, i32 0, i32 25, !dbg !9880
  %eh_context = getelementptr inbounds %struct.ata_link, %struct.ata_link* %link3, i32 0, i32 12, !dbg !9881
  store %struct.ata_eh_context* %eh_context, %struct.ata_eh_context** %mehc, align 8, !dbg !9878
  call void @llvm.dbg.declare(metadata %struct.ata_eh_context** %sehc, metadata !9882, metadata !DIExpression()), !dbg !9883
  %8 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9884
  %slave_link4 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %8, i32 0, i32 26, !dbg !9885
  %9 = load %struct.ata_link*, %struct.ata_link** %slave_link4, align 64, !dbg !9885
  %eh_context5 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %9, i32 0, i32 12, !dbg !9886
  store %struct.ata_eh_context* %eh_context5, %struct.ata_eh_context** %sehc, align 8, !dbg !9883
  %10 = load %struct.ata_eh_context*, %struct.ata_eh_context** %mehc, align 8, !dbg !9887
  %i = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %10, i32 0, i32 0, !dbg !9888
  %flags = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i, i32 0, i32 5, !dbg !9889
  %11 = load i32, i32* %flags, align 4, !dbg !9889
  %and = and i32 %11, 12, !dbg !9890
  %12 = load %struct.ata_eh_context*, %struct.ata_eh_context** %sehc, align 8, !dbg !9891
  %i6 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %12, i32 0, i32 0, !dbg !9892
  %flags7 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i6, i32 0, i32 5, !dbg !9893
  %13 = load i32, i32* %flags7, align 4, !dbg !9894
  %or = or i32 %13, %and, !dbg !9894
  store i32 %or, i32* %flags7, align 4, !dbg !9894
  %14 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9895
  %slave_link8 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %14, i32 0, i32 26, !dbg !9896
  %15 = load %struct.ata_link*, %struct.ata_link** %slave_link8, align 64, !dbg !9896
  call void @ata_eh_link_autopsy(%struct.ata_link* %15) #7, !dbg !9897
  %16 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9898
  %slave_link9 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %16, i32 0, i32 26, !dbg !9899
  %17 = load %struct.ata_link*, %struct.ata_link** %slave_link9, align 64, !dbg !9899
  call void @ata_eh_about_to_do(%struct.ata_link* %17, %struct.ata_device* null, i32 15) #7, !dbg !9900
  %18 = load %struct.ata_eh_context*, %struct.ata_eh_context** %sehc, align 8, !dbg !9901
  %i10 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %18, i32 0, i32 0, !dbg !9902
  %action = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i10, i32 0, i32 3, !dbg !9903
  %19 = load i32, i32* %action, align 8, !dbg !9903
  %20 = load %struct.ata_eh_context*, %struct.ata_eh_context** %mehc, align 8, !dbg !9904
  %i11 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %20, i32 0, i32 0, !dbg !9905
  %action12 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i11, i32 0, i32 3, !dbg !9906
  %21 = load i32, i32* %action12, align 8, !dbg !9907
  %or13 = or i32 %21, %19, !dbg !9907
  store i32 %or13, i32* %action12, align 8, !dbg !9907
  %22 = load %struct.ata_eh_context*, %struct.ata_eh_context** %sehc, align 8, !dbg !9908
  %i14 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %22, i32 0, i32 0, !dbg !9909
  %dev_action = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i14, i32 0, i32 4, !dbg !9910
  %arrayidx = getelementptr [2 x i32], [2 x i32]* %dev_action, i64 0, i64 1, !dbg !9908
  %23 = load i32, i32* %arrayidx, align 4, !dbg !9908
  %24 = load %struct.ata_eh_context*, %struct.ata_eh_context** %mehc, align 8, !dbg !9911
  %i15 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %24, i32 0, i32 0, !dbg !9912
  %dev_action16 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i15, i32 0, i32 4, !dbg !9913
  %arrayidx17 = getelementptr [2 x i32], [2 x i32]* %dev_action16, i64 0, i64 1, !dbg !9911
  %25 = load i32, i32* %arrayidx17, align 4, !dbg !9914
  %or18 = or i32 %25, %23, !dbg !9914
  store i32 %or18, i32* %arrayidx17, align 4, !dbg !9914
  %26 = load %struct.ata_eh_context*, %struct.ata_eh_context** %sehc, align 8, !dbg !9915
  %i19 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %26, i32 0, i32 0, !dbg !9916
  %flags20 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i19, i32 0, i32 5, !dbg !9917
  %27 = load i32, i32* %flags20, align 4, !dbg !9917
  %28 = load %struct.ata_eh_context*, %struct.ata_eh_context** %mehc, align 8, !dbg !9918
  %i21 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %28, i32 0, i32 0, !dbg !9919
  %flags22 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i21, i32 0, i32 5, !dbg !9920
  %29 = load i32, i32* %flags22, align 4, !dbg !9921
  %or23 = or i32 %29, %27, !dbg !9921
  store i32 %or23, i32* %flags22, align 4, !dbg !9921
  %30 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9922
  %slave_link24 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %30, i32 0, i32 26, !dbg !9923
  %31 = load %struct.ata_link*, %struct.ata_link** %slave_link24, align 64, !dbg !9923
  call void @ata_eh_done(%struct.ata_link* %31, %struct.ata_device* null, i32 15) #7, !dbg !9924
  br label %if.end, !dbg !9925

if.end:                                           ; preds = %if.then, %for.end
  %32 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9926
  %call25 = call zeroext i1 @sata_pmp_attached(%struct.ata_port* %32) #7, !dbg !9928
  br i1 %call25, label %if.then26, label %if.end28, !dbg !9929

if.then26:                                        ; preds = %if.end
  %33 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !9930
  %link27 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %33, i32 0, i32 25, !dbg !9931
  call void @ata_eh_link_autopsy(%struct.ata_link* %link27) #7, !dbg !9932
  br label %if.end28, !dbg !9932

if.end28:                                         ; preds = %if.then26, %if.end
  ret void, !dbg !9933
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_eh_link_autopsy(%struct.ata_link* %link) #0 !dbg !9934 {
entry:
  %link.addr = alloca %struct.ata_link*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %ehc = alloca %struct.ata_eh_context*, align 8
  %qc = alloca %struct.ata_queued_cmd*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %all_err_mask = alloca i32, align 4
  %eflags = alloca i32, align 4
  %tag = alloca i32, align 4
  %nr_failed = alloca i32, align 4
  %nr_quiet = alloca i32, align 4
  %serror = alloca i32, align 4
  %rc = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !9935, metadata !DIExpression()), !dbg !9936
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !9937, metadata !DIExpression()), !dbg !9938
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !9939
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %0, i32 0, i32 0, !dbg !9940
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !9940
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !9938
  call void @llvm.dbg.declare(metadata %struct.ata_eh_context** %ehc, metadata !9941, metadata !DIExpression()), !dbg !9942
  %2 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !9943
  %eh_context = getelementptr inbounds %struct.ata_link, %struct.ata_link* %2, i32 0, i32 12, !dbg !9944
  store %struct.ata_eh_context* %eh_context, %struct.ata_eh_context** %ehc, align 8, !dbg !9942
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc, metadata !9945, metadata !DIExpression()), !dbg !9946
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !9947, metadata !DIExpression()), !dbg !9948
  call void @llvm.dbg.declare(metadata i32* %all_err_mask, metadata !9949, metadata !DIExpression()), !dbg !9950
  store i32 0, i32* %all_err_mask, align 4, !dbg !9950
  call void @llvm.dbg.declare(metadata i32* %eflags, metadata !9951, metadata !DIExpression()), !dbg !9952
  store i32 0, i32* %eflags, align 4, !dbg !9952
  call void @llvm.dbg.declare(metadata i32* %tag, metadata !9953, metadata !DIExpression()), !dbg !9954
  call void @llvm.dbg.declare(metadata i32* %nr_failed, metadata !9955, metadata !DIExpression()), !dbg !9956
  store i32 0, i32* %nr_failed, align 4, !dbg !9956
  call void @llvm.dbg.declare(metadata i32* %nr_quiet, metadata !9957, metadata !DIExpression()), !dbg !9958
  store i32 0, i32* %nr_quiet, align 4, !dbg !9958
  call void @llvm.dbg.declare(metadata i32* %serror, metadata !9959, metadata !DIExpression()), !dbg !9960
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !9961, metadata !DIExpression()), !dbg !9962
  %3 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !9963
  %i = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %3, i32 0, i32 0, !dbg !9965
  %flags = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i, i32 0, i32 5, !dbg !9966
  %4 = load i32, i32* %flags, align 4, !dbg !9966
  %and = and i32 %4, 4, !dbg !9967
  %tobool = icmp ne i32 %and, 0, !dbg !9967
  br i1 %tobool, label %if.then, label %if.end, !dbg !9968

if.then:                                          ; preds = %entry
  br label %if.end174, !dbg !9969

if.end:                                           ; preds = %entry
  %5 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !9970
  %call = call i32 @sata_scr_read(%struct.ata_link* %5, i32 1, i32* %serror) #7, !dbg !9971
  store i32 %call, i32* %rc, align 4, !dbg !9972
  %6 = load i32, i32* %rc, align 4, !dbg !9973
  %cmp = icmp eq i32 %6, 0, !dbg !9975
  br i1 %cmp, label %if.then2, label %if.else, !dbg !9976

if.then2:                                         ; preds = %if.end
  %7 = load i32, i32* %serror, align 4, !dbg !9977
  %8 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !9979
  %i3 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %8, i32 0, i32 0, !dbg !9980
  %serror4 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i3, i32 0, i32 1, !dbg !9981
  %9 = load i32, i32* %serror4, align 8, !dbg !9982
  %or = or i32 %9, %7, !dbg !9982
  store i32 %or, i32* %serror4, align 8, !dbg !9982
  %10 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !9983
  call void @ata_eh_analyze_serror(%struct.ata_link* %10) #7, !dbg !9984
  br label %if.end14, !dbg !9985

if.else:                                          ; preds = %if.end
  %11 = load i32, i32* %rc, align 4, !dbg !9986
  %cmp5 = icmp ne i32 %11, -95, !dbg !9988
  br i1 %cmp5, label %if.then6, label %if.end13, !dbg !9989

if.then6:                                         ; preds = %if.else
  %12 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !9990
  %i7 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %12, i32 0, i32 0, !dbg !9992
  %probe_mask = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i7, i32 0, i32 6, !dbg !9993
  %13 = load i32, i32* %probe_mask, align 8, !dbg !9994
  %or8 = or i32 %13, 3, !dbg !9994
  store i32 %or8, i32* %probe_mask, align 8, !dbg !9994
  %14 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !9995
  %i9 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %14, i32 0, i32 0, !dbg !9996
  %action = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i9, i32 0, i32 3, !dbg !9997
  %15 = load i32, i32* %action, align 8, !dbg !9998
  %or10 = or i32 %15, 6, !dbg !9998
  store i32 %or10, i32* %action, align 8, !dbg !9998
  %16 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !9999
  %i11 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %16, i32 0, i32 0, !dbg !10000
  %err_mask = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i11, i32 0, i32 2, !dbg !10001
  %17 = load i32, i32* %err_mask, align 4, !dbg !10002
  %or12 = or i32 %17, 256, !dbg !10002
  store i32 %or12, i32* %err_mask, align 4, !dbg !10002
  br label %if.end13, !dbg !10003

if.end13:                                         ; preds = %if.then6, %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.then2
  %18 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10004
  call void @ata_eh_analyze_ncq_error(%struct.ata_link* %18) #7, !dbg !10005
  %19 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10006
  %i15 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %19, i32 0, i32 0, !dbg !10008
  %err_mask16 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i15, i32 0, i32 2, !dbg !10009
  %20 = load i32, i32* %err_mask16, align 4, !dbg !10009
  %and17 = and i32 %20, -257, !dbg !10010
  %tobool18 = icmp ne i32 %and17, 0, !dbg !10010
  br i1 %tobool18, label %if.then19, label %if.end23, !dbg !10011

if.then19:                                        ; preds = %if.end14
  %21 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10012
  %i20 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %21, i32 0, i32 0, !dbg !10013
  %err_mask21 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i20, i32 0, i32 2, !dbg !10014
  %22 = load i32, i32* %err_mask21, align 4, !dbg !10015
  %and22 = and i32 %22, -257, !dbg !10015
  store i32 %and22, i32* %err_mask21, align 4, !dbg !10015
  br label %if.end23, !dbg !10012

if.end23:                                         ; preds = %if.then19, %if.end14
  %23 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10016
  %i24 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %23, i32 0, i32 0, !dbg !10017
  %err_mask25 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i24, i32 0, i32 2, !dbg !10018
  %24 = load i32, i32* %err_mask25, align 4, !dbg !10018
  %25 = load i32, i32* %all_err_mask, align 4, !dbg !10019
  %or26 = or i32 %25, %24, !dbg !10019
  store i32 %or26, i32* %all_err_mask, align 4, !dbg !10019
  store i32 0, i32* %tag, align 4, !dbg !10020
  br label %for.cond, !dbg !10020

for.cond:                                         ; preds = %for.inc, %if.end23
  %26 = load i32, i32* %tag, align 4, !dbg !10022
  %cmp27 = icmp slt i32 %26, 32, !dbg !10022
  br i1 %cmp27, label %land.rhs, label %land.end, !dbg !10022

land.rhs:                                         ; preds = %for.cond
  %27 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10024
  %28 = load i32, i32* %tag, align 4, !dbg !10024
  %call28 = call %struct.ata_queued_cmd* @__ata_qc_from_tag(%struct.ata_port* %27, i32 %28) #7, !dbg !10024
  store %struct.ata_queued_cmd* %call28, %struct.ata_queued_cmd** %qc, align 8, !dbg !10024
  store i32 1, i32* %tmp, align 4, !dbg !10024
  %29 = load i32, i32* %tmp, align 4, !dbg !10024
  %tobool29 = icmp ne i32 %29, 0, !dbg !10022
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %30 = phi i1 [ false, %for.cond ], [ %tobool29, %land.rhs ], !dbg !10026
  br i1 %30, label %for.body, label %for.end, !dbg !10020

for.body:                                         ; preds = %land.end
  %31 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10027
  %flags30 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %31, i32 0, i32 6, !dbg !10030
  %32 = load i64, i64* %flags30, align 8, !dbg !10030
  %and31 = and i64 %32, 65536, !dbg !10031
  %tobool32 = icmp ne i64 %and31, 0, !dbg !10031
  br i1 %tobool32, label %lor.lhs.false, label %if.then36, !dbg !10032

lor.lhs.false:                                    ; preds = %for.body
  %33 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10033
  %dev33 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %33, i32 0, i32 1, !dbg !10034
  %34 = load %struct.ata_device*, %struct.ata_device** %dev33, align 8, !dbg !10034
  %call34 = call %struct.ata_link* @ata_dev_phys_link(%struct.ata_device* %34) #7, !dbg !10035
  %35 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10036
  %cmp35 = icmp ne %struct.ata_link* %call34, %35, !dbg !10037
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !10038

if.then36:                                        ; preds = %lor.lhs.false, %for.body
  br label %for.inc, !dbg !10039

if.end37:                                         ; preds = %lor.lhs.false
  %36 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10040
  %i38 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %36, i32 0, i32 0, !dbg !10041
  %err_mask39 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i38, i32 0, i32 2, !dbg !10042
  %37 = load i32, i32* %err_mask39, align 4, !dbg !10042
  %38 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10043
  %err_mask40 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %38, i32 0, i32 20, !dbg !10044
  %39 = load i32, i32* %err_mask40, align 4, !dbg !10045
  %or41 = or i32 %39, %37, !dbg !10045
  store i32 %or41, i32* %err_mask40, align 4, !dbg !10045
  %40 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10046
  %41 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10047
  %result_tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %41, i32 0, i32 21, !dbg !10048
  %call42 = call i32 @ata_eh_analyze_tf(%struct.ata_queued_cmd* %40, %struct.ata_taskfile* %result_tf) #7, !dbg !10049
  %42 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10050
  %i43 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %42, i32 0, i32 0, !dbg !10051
  %action44 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i43, i32 0, i32 3, !dbg !10052
  %43 = load i32, i32* %action44, align 8, !dbg !10053
  %or45 = or i32 %43, %call42, !dbg !10053
  store i32 %or45, i32* %action44, align 8, !dbg !10053
  %44 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10054
  %err_mask46 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %44, i32 0, i32 20, !dbg !10056
  %45 = load i32, i32* %err_mask46, align 4, !dbg !10056
  %and47 = and i32 %45, 16, !dbg !10057
  %tobool48 = icmp ne i32 %and47, 0, !dbg !10057
  br i1 %tobool48, label %if.then49, label %if.end52, !dbg !10058

if.then49:                                        ; preds = %if.end37
  %46 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10059
  %err_mask50 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %46, i32 0, i32 20, !dbg !10060
  %47 = load i32, i32* %err_mask50, align 4, !dbg !10061
  %and51 = and i32 %47, -138, !dbg !10061
  store i32 %and51, i32* %err_mask50, align 4, !dbg !10061
  br label %if.end52, !dbg !10059

if.end52:                                         ; preds = %if.then49, %if.end37
  %48 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10062
  %err_mask53 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %48, i32 0, i32 20, !dbg !10064
  %49 = load i32, i32* %err_mask53, align 4, !dbg !10064
  %and54 = and i32 %49, -257, !dbg !10065
  %tobool55 = icmp ne i32 %and54, 0, !dbg !10065
  br i1 %tobool55, label %if.then56, label %if.end59, !dbg !10066

if.then56:                                        ; preds = %if.end52
  %50 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10067
  %err_mask57 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %50, i32 0, i32 20, !dbg !10068
  %51 = load i32, i32* %err_mask57, align 4, !dbg !10069
  %and58 = and i32 %51, -257, !dbg !10069
  store i32 %and58, i32* %err_mask57, align 4, !dbg !10069
  br label %if.end59, !dbg !10067

if.end59:                                         ; preds = %if.then56, %if.end52
  %52 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10070
  %flags60 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %52, i32 0, i32 6, !dbg !10072
  %53 = load i64, i64* %flags60, align 8, !dbg !10072
  %and61 = and i64 %53, 131072, !dbg !10073
  %tobool62 = icmp ne i64 %and61, 0, !dbg !10073
  br i1 %tobool62, label %if.then63, label %if.else66, !dbg !10074

if.then63:                                        ; preds = %if.end59
  %54 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10075
  %err_mask64 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %54, i32 0, i32 20, !dbg !10076
  %55 = load i32, i32* %err_mask64, align 4, !dbg !10077
  %and65 = and i32 %55, -258, !dbg !10077
  store i32 %and65, i32* %err_mask64, align 4, !dbg !10077
  br label %if.end73, !dbg !10075

if.else66:                                        ; preds = %if.end59
  %56 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10078
  %call67 = call i32 @ata_eh_worth_retry(%struct.ata_queued_cmd* %56) #7, !dbg !10080
  %tobool68 = icmp ne i32 %call67, 0, !dbg !10080
  br i1 %tobool68, label %if.then69, label %if.end72, !dbg !10081

if.then69:                                        ; preds = %if.else66
  %57 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10082
  %flags70 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %57, i32 0, i32 6, !dbg !10083
  %58 = load i64, i64* %flags70, align 8, !dbg !10084
  %or71 = or i64 %58, 128, !dbg !10084
  store i64 %or71, i64* %flags70, align 8, !dbg !10084
  br label %if.end72, !dbg !10082

if.end72:                                         ; preds = %if.then69, %if.else66
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %if.then63
  %59 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10085
  %dev74 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %59, i32 0, i32 1, !dbg !10086
  %60 = load %struct.ata_device*, %struct.ata_device** %dev74, align 8, !dbg !10086
  %61 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10087
  %i75 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %61, i32 0, i32 0, !dbg !10088
  %dev76 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i75, i32 0, i32 0, !dbg !10089
  store %struct.ata_device* %60, %struct.ata_device** %dev76, align 8, !dbg !10090
  %62 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10091
  %err_mask77 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %62, i32 0, i32 20, !dbg !10092
  %63 = load i32, i32* %err_mask77, align 4, !dbg !10092
  %64 = load i32, i32* %all_err_mask, align 4, !dbg !10093
  %or78 = or i32 %64, %63, !dbg !10093
  store i32 %or78, i32* %all_err_mask, align 4, !dbg !10093
  %65 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10094
  %flags79 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %65, i32 0, i32 6, !dbg !10096
  %66 = load i64, i64* %flags79, align 8, !dbg !10096
  %and80 = and i64 %66, 8, !dbg !10097
  %tobool81 = icmp ne i64 %and80, 0, !dbg !10097
  br i1 %tobool81, label %if.then82, label %if.end84, !dbg !10098

if.then82:                                        ; preds = %if.end73
  %67 = load i32, i32* %eflags, align 4, !dbg !10099
  %or83 = or i32 %67, 1, !dbg !10099
  store i32 %or83, i32* %eflags, align 4, !dbg !10099
  br label %if.end84, !dbg !10100

if.end84:                                         ; preds = %if.then82, %if.end73
  %68 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10101
  call void @trace_ata_eh_link_autopsy_qc(%struct.ata_queued_cmd* %68) #7, !dbg !10102
  %69 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10103
  %call85 = call zeroext i1 @ata_eh_quiet(%struct.ata_queued_cmd* %69) #7, !dbg !10105
  br i1 %call85, label %if.then86, label %if.end87, !dbg !10106

if.then86:                                        ; preds = %if.end84
  %70 = load i32, i32* %nr_quiet, align 4, !dbg !10107
  %inc = add i32 %70, 1, !dbg !10107
  store i32 %inc, i32* %nr_quiet, align 4, !dbg !10107
  br label %if.end87, !dbg !10108

if.end87:                                         ; preds = %if.then86, %if.end84
  %71 = load i32, i32* %nr_failed, align 4, !dbg !10109
  %inc88 = add i32 %71, 1, !dbg !10109
  store i32 %inc88, i32* %nr_failed, align 4, !dbg !10109
  br label %for.inc, !dbg !10110

for.inc:                                          ; preds = %if.end87, %if.then36
  %72 = load i32, i32* %tag, align 4, !dbg !10022
  %inc89 = add i32 %72, 1, !dbg !10022
  store i32 %inc89, i32* %tag, align 4, !dbg !10022
  br label %for.cond, !dbg !10022, !llvm.loop !10111

for.end:                                          ; preds = %land.end
  %73 = load i32, i32* %nr_quiet, align 4, !dbg !10113
  %74 = load i32, i32* %nr_failed, align 4, !dbg !10115
  %cmp90 = icmp eq i32 %73, %74, !dbg !10116
  br i1 %cmp90, label %if.then91, label %if.end95, !dbg !10117

if.then91:                                        ; preds = %for.end
  %75 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10118
  %i92 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %75, i32 0, i32 0, !dbg !10119
  %flags93 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i92, i32 0, i32 5, !dbg !10120
  %76 = load i32, i32* %flags93, align 4, !dbg !10121
  %or94 = or i32 %76, 8, !dbg !10121
  store i32 %or94, i32* %flags93, align 4, !dbg !10121
  br label %if.end95, !dbg !10118

if.end95:                                         ; preds = %if.then91, %for.end
  %77 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10122
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %77, i32 0, i32 4, !dbg !10124
  %78 = load i32, i32* %pflags, align 32, !dbg !10124
  %and96 = and i32 %78, 4, !dbg !10125
  %tobool97 = icmp ne i32 %and96, 0, !dbg !10125
  br i1 %tobool97, label %if.then101, label %lor.lhs.false98, !dbg !10126

lor.lhs.false98:                                  ; preds = %if.end95
  %79 = load i32, i32* %all_err_mask, align 4, !dbg !10127
  %and99 = and i32 %79, 6, !dbg !10128
  %tobool100 = icmp ne i32 %and99, 0, !dbg !10128
  br i1 %tobool100, label %if.then101, label %if.else105, !dbg !10129

if.then101:                                       ; preds = %lor.lhs.false98, %if.end95
  %80 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10130
  %i102 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %80, i32 0, i32 0, !dbg !10131
  %action103 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i102, i32 0, i32 3, !dbg !10132
  %81 = load i32, i32* %action103, align 8, !dbg !10133
  %or104 = or i32 %81, 6, !dbg !10133
  store i32 %or104, i32* %action103, align 8, !dbg !10133
  br label %if.end120, !dbg !10130

if.else105:                                       ; preds = %lor.lhs.false98
  %82 = load i32, i32* %eflags, align 4, !dbg !10134
  %and106 = and i32 %82, 1, !dbg !10136
  %tobool107 = icmp ne i32 %and106, 0, !dbg !10136
  br i1 %tobool107, label %land.lhs.true, label %lor.lhs.false109, !dbg !10137

land.lhs.true:                                    ; preds = %if.else105
  %83 = load i32, i32* %all_err_mask, align 4, !dbg !10138
  %tobool108 = icmp ne i32 %83, 0, !dbg !10138
  br i1 %tobool108, label %if.then115, label %lor.lhs.false109, !dbg !10139

lor.lhs.false109:                                 ; preds = %land.lhs.true, %if.else105
  %84 = load i32, i32* %eflags, align 4, !dbg !10140
  %and110 = and i32 %84, 1, !dbg !10141
  %tobool111 = icmp ne i32 %and110, 0, !dbg !10141
  br i1 %tobool111, label %if.end119, label %land.lhs.true112, !dbg !10142

land.lhs.true112:                                 ; preds = %lor.lhs.false109
  %85 = load i32, i32* %all_err_mask, align 4, !dbg !10143
  %and113 = and i32 %85, -2, !dbg !10144
  %tobool114 = icmp ne i32 %and113, 0, !dbg !10144
  br i1 %tobool114, label %if.then115, label %if.end119, !dbg !10145

if.then115:                                       ; preds = %land.lhs.true112, %land.lhs.true
  %86 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10146
  %i116 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %86, i32 0, i32 0, !dbg !10147
  %action117 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i116, i32 0, i32 3, !dbg !10148
  %87 = load i32, i32* %action117, align 8, !dbg !10149
  %or118 = or i32 %87, 1, !dbg !10149
  store i32 %or118, i32* %action117, align 8, !dbg !10149
  br label %if.end119, !dbg !10146

if.end119:                                        ; preds = %if.then115, %land.lhs.true112, %lor.lhs.false109
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %if.then101
  %88 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10150
  %i121 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %88, i32 0, i32 0, !dbg !10152
  %dev122 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i121, i32 0, i32 0, !dbg !10153
  %89 = load %struct.ata_device*, %struct.ata_device** %dev122, align 8, !dbg !10153
  %tobool123 = icmp ne %struct.ata_device* %89, null, !dbg !10150
  br i1 %tobool123, label %if.then124, label %if.end135, !dbg !10154

if.then124:                                       ; preds = %if.end120
  %90 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10155
  %i125 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %90, i32 0, i32 0, !dbg !10157
  %action126 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i125, i32 0, i32 3, !dbg !10158
  %91 = load i32, i32* %action126, align 8, !dbg !10158
  %and127 = and i32 %91, 33, !dbg !10159
  %92 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10160
  %i128 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %92, i32 0, i32 0, !dbg !10161
  %dev_action = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i128, i32 0, i32 4, !dbg !10162
  %93 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10163
  %i129 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %93, i32 0, i32 0, !dbg !10164
  %dev130 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i129, i32 0, i32 0, !dbg !10165
  %94 = load %struct.ata_device*, %struct.ata_device** %dev130, align 8, !dbg !10165
  %devno = getelementptr inbounds %struct.ata_device, %struct.ata_device* %94, i32 0, i32 1, !dbg !10166
  %95 = load i32, i32* %devno, align 8, !dbg !10166
  %idxprom = zext i32 %95 to i64, !dbg !10160
  %arrayidx = getelementptr [2 x i32], [2 x i32]* %dev_action, i64 0, i64 %idxprom, !dbg !10160
  %96 = load i32, i32* %arrayidx, align 4, !dbg !10167
  %or131 = or i32 %96, %and127, !dbg !10167
  store i32 %or131, i32* %arrayidx, align 4, !dbg !10167
  %97 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10168
  %i132 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %97, i32 0, i32 0, !dbg !10169
  %action133 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i132, i32 0, i32 3, !dbg !10170
  %98 = load i32, i32* %action133, align 8, !dbg !10171
  %and134 = and i32 %98, -34, !dbg !10171
  store i32 %and134, i32* %action133, align 8, !dbg !10171
  br label %if.end135, !dbg !10172

if.end135:                                        ; preds = %if.then124, %if.end120
  %99 = load i32, i32* %all_err_mask, align 4, !dbg !10173
  %and136 = and i32 %99, 4, !dbg !10175
  %tobool137 = icmp ne i32 %and136, 0, !dbg !10175
  br i1 %tobool137, label %land.lhs.true138, label %if.end146, !dbg !10176

land.lhs.true138:                                 ; preds = %if.end135
  %100 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10177
  %call139 = call zeroext i1 @ata_is_host_link(%struct.ata_link* %100) #7, !dbg !10178
  br i1 %call139, label %if.end146, label %if.then140, !dbg !10179

if.then140:                                       ; preds = %land.lhs.true138
  %101 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10180
  %link141 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %101, i32 0, i32 25, !dbg !10181
  %eh_context142 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %link141, i32 0, i32 12, !dbg !10182
  %i143 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %eh_context142, i32 0, i32 0, !dbg !10183
  %err_mask144 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i143, i32 0, i32 2, !dbg !10184
  %102 = load i32, i32* %err_mask144, align 4, !dbg !10185
  %or145 = or i32 %102, 4, !dbg !10185
  store i32 %or145, i32* %err_mask144, align 4, !dbg !10185
  br label %if.end146, !dbg !10180

if.end146:                                        ; preds = %if.then140, %land.lhs.true138, %if.end135
  %103 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10186
  %i147 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %103, i32 0, i32 0, !dbg !10187
  %dev148 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i147, i32 0, i32 0, !dbg !10188
  %104 = load %struct.ata_device*, %struct.ata_device** %dev148, align 8, !dbg !10188
  store %struct.ata_device* %104, %struct.ata_device** %dev, align 8, !dbg !10189
  %105 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10190
  %tobool149 = icmp ne %struct.ata_device* %105, null, !dbg !10190
  br i1 %tobool149, label %if.end159, label %land.lhs.true150, !dbg !10192

land.lhs.true150:                                 ; preds = %if.end146
  %106 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10193
  %call151 = call i32 @ata_link_max_devices(%struct.ata_link* %106) #7, !dbg !10194
  %cmp152 = icmp eq i32 %call151, 1, !dbg !10195
  br i1 %cmp152, label %land.lhs.true153, label %if.end159, !dbg !10196

land.lhs.true153:                                 ; preds = %land.lhs.true150
  %107 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10197
  %device = getelementptr inbounds %struct.ata_link, %struct.ata_link* %107, i32 0, i32 14, !dbg !10198
  %arraydecay = getelementptr inbounds [2 x %struct.ata_device], [2 x %struct.ata_device]* %device, i64 0, i64 0, !dbg !10197
  %call154 = call i32 @ata_dev_enabled(%struct.ata_device* %arraydecay) #7, !dbg !10199
  %tobool155 = icmp ne i32 %call154, 0, !dbg !10199
  br i1 %tobool155, label %if.then156, label %if.end159, !dbg !10200

if.then156:                                       ; preds = %land.lhs.true153
  %108 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10201
  %device157 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %108, i32 0, i32 14, !dbg !10202
  %arraydecay158 = getelementptr inbounds [2 x %struct.ata_device], [2 x %struct.ata_device]* %device157, i64 0, i64 0, !dbg !10201
  store %struct.ata_device* %arraydecay158, %struct.ata_device** %dev, align 8, !dbg !10203
  br label %if.end159, !dbg !10204

if.end159:                                        ; preds = %if.then156, %land.lhs.true153, %land.lhs.true150, %if.end146
  %109 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10205
  %tobool160 = icmp ne %struct.ata_device* %109, null, !dbg !10205
  br i1 %tobool160, label %if.then161, label %if.end174, !dbg !10207

if.then161:                                       ; preds = %if.end159
  %110 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10208
  %flags162 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %110, i32 0, i32 3, !dbg !10211
  %111 = load i64, i64* %flags162, align 16, !dbg !10211
  %and163 = and i64 %111, 65536, !dbg !10212
  %tobool164 = icmp ne i64 %and163, 0, !dbg !10212
  br i1 %tobool164, label %if.then165, label %if.end167, !dbg !10213

if.then165:                                       ; preds = %if.then161
  %112 = load i32, i32* %eflags, align 4, !dbg !10214
  %or166 = or i32 %112, 2, !dbg !10214
  store i32 %or166, i32* %eflags, align 4, !dbg !10214
  br label %if.end167, !dbg !10215

if.end167:                                        ; preds = %if.then165, %if.then161
  %113 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10216
  %114 = load i32, i32* %eflags, align 4, !dbg !10217
  %115 = load i32, i32* %all_err_mask, align 4, !dbg !10218
  %call168 = call i32 @ata_eh_speed_down(%struct.ata_device* %113, i32 %114, i32 %115) #7, !dbg !10219
  %116 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10220
  %i169 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %116, i32 0, i32 0, !dbg !10221
  %action170 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i169, i32 0, i32 3, !dbg !10222
  %117 = load i32, i32* %action170, align 8, !dbg !10223
  %or171 = or i32 %117, %call168, !dbg !10223
  store i32 %or171, i32* %action170, align 8, !dbg !10223
  %118 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10224
  %119 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10225
  %i172 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %119, i32 0, i32 0, !dbg !10226
  %action173 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i172, i32 0, i32 3, !dbg !10227
  %120 = load i32, i32* %action173, align 8, !dbg !10227
  %121 = load i32, i32* %all_err_mask, align 4, !dbg !10228
  call void @trace_ata_eh_link_autopsy(%struct.ata_device* %118, i32 %120, i32 %121) #7, !dbg !10229
  br label %if.end174, !dbg !10230

if.end174:                                        ; preds = %if.then, %if.end167, %if.end159
  ret void, !dbg !10231
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @sata_pmp_attached(%struct.ata_port* %ap) #0 !dbg !10232 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !10233, metadata !DIExpression()), !dbg !10234
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10235
  %nr_pmp_links = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 27, !dbg !10236
  %1 = load i32, i32* %nr_pmp_links, align 8, !dbg !10236
  %cmp = icmp ne i32 %1, 0, !dbg !10237
  ret i1 %cmp, !dbg !10238
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @ata_get_cmd_descript(i8 zeroext %command) #0 !dbg !6879 {
entry:
  %retval = alloca i8*, align 8
  %command.addr = alloca i8, align 1
  %i = alloca i32, align 4
  store i8 %command, i8* %command.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %command.addr, metadata !10239, metadata !DIExpression()), !dbg !10240
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10241, metadata !DIExpression()), !dbg !10242
  store i32 0, i32* %i, align 4, !dbg !10243
  br label %for.cond, !dbg !10245

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10246
  %idxprom = zext i32 %0 to i64, !dbg !10248
  %arrayidx = getelementptr [92 x %struct.anon.85], [92 x %struct.anon.85]* @ata_get_cmd_descript.cmd_descr, i64 0, i64 %idxprom, !dbg !10248
  %text = getelementptr inbounds %struct.anon.85, %struct.anon.85* %arrayidx, i32 0, i32 1, !dbg !10249
  %1 = load i8*, i8** %text, align 8, !dbg !10249
  %tobool = icmp ne i8* %1, null, !dbg !10250
  br i1 %tobool, label %for.body, label %for.end, !dbg !10250

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !10251
  %idxprom1 = zext i32 %2 to i64, !dbg !10253
  %arrayidx2 = getelementptr [92 x %struct.anon.85], [92 x %struct.anon.85]* @ata_get_cmd_descript.cmd_descr, i64 0, i64 %idxprom1, !dbg !10253
  %command3 = getelementptr inbounds %struct.anon.85, %struct.anon.85* %arrayidx2, i32 0, i32 0, !dbg !10254
  %3 = load i8, i8* %command3, align 16, !dbg !10254
  %conv = zext i8 %3 to i32, !dbg !10253
  %4 = load i8, i8* %command.addr, align 1, !dbg !10255
  %conv4 = zext i8 %4 to i32, !dbg !10255
  %cmp = icmp eq i32 %conv, %conv4, !dbg !10256
  br i1 %cmp, label %if.then, label %if.end, !dbg !10257

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !10258
  %idxprom6 = zext i32 %5 to i64, !dbg !10259
  %arrayidx7 = getelementptr [92 x %struct.anon.85], [92 x %struct.anon.85]* @ata_get_cmd_descript.cmd_descr, i64 0, i64 %idxprom6, !dbg !10259
  %text8 = getelementptr inbounds %struct.anon.85, %struct.anon.85* %arrayidx7, i32 0, i32 1, !dbg !10260
  %6 = load i8*, i8** %text8, align 8, !dbg !10260
  store i8* %6, i8** %retval, align 8, !dbg !10261
  br label %return, !dbg !10261

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !10255

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %i, align 4, !dbg !10262
  %inc = add i32 %7, 1, !dbg !10262
  store i32 %inc, i32* %i, align 4, !dbg !10262
  br label %for.cond, !dbg !10263, !llvm.loop !10264

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !10266
  br label %return, !dbg !10266

return:                                           ; preds = %for.end, %if.then
  %8 = load i8*, i8** %retval, align 8, !dbg !10267
  ret i8* %8, !dbg !10267
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_eh_report(%struct.ata_port* %ap) #0 !dbg !10268 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %link = alloca %struct.ata_link*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !10269, metadata !DIExpression()), !dbg !10270
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link, metadata !10271, metadata !DIExpression()), !dbg !10272
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10273
  %call = call %struct.ata_link* @ata_link_next(%struct.ata_link* null, %struct.ata_port* %0, i32 1) #7, !dbg !10273
  store %struct.ata_link* %call, %struct.ata_link** %link, align 8, !dbg !10273
  br label %for.cond, !dbg !10273

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !10275
  %tobool = icmp ne %struct.ata_link* %1, null, !dbg !10273
  br i1 %tobool, label %for.body, label %for.end, !dbg !10273

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !10277
  call void @ata_eh_link_report(%struct.ata_link* %2) #7, !dbg !10278
  br label %for.inc, !dbg !10278

for.inc:                                          ; preds = %for.body
  %3 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !10275
  %4 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !10275
  %call1 = call %struct.ata_link* @ata_link_next(%struct.ata_link* %3, %struct.ata_port* %4, i32 1) #7, !dbg !10275
  store %struct.ata_link* %call1, %struct.ata_link** %link, align 8, !dbg !10275
  br label %for.cond, !dbg !10275, !llvm.loop !10279

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10281
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_eh_link_report(%struct.ata_link* %link) #0 !dbg !6909 {
entry:
  %link.addr = alloca %struct.ata_link*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %ehc = alloca %struct.ata_eh_context*, align 8
  %qc = alloca %struct.ata_queued_cmd*, align 8
  %frozen = alloca i8*, align 8
  %desc = alloca i8*, align 8
  %tries_buf = alloca [6 x i8], align 1
  %tag = alloca i32, align 4
  %nr_failed = alloca i32, align 4
  %tmp = alloca i32, align 4
  %tmp175 = alloca i32, align 4
  %cmd = alloca %struct.ata_taskfile*, align 8
  %res = alloca %struct.ata_taskfile*, align 8
  %data_buf = alloca [20 x i8], align 16
  %cdb_buf = alloca [70 x i8], align 16
  %prot_str = alloca i8*, align 8
  %cdb = alloca i8*, align 8
  %cdb_len = alloca i64, align 8
  %descr = alloca i8*, align 8
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !10282, metadata !DIExpression()), !dbg !10283
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !10284, metadata !DIExpression()), !dbg !10285
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10286
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %0, i32 0, i32 0, !dbg !10287
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !10287
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !10285
  call void @llvm.dbg.declare(metadata %struct.ata_eh_context** %ehc, metadata !10288, metadata !DIExpression()), !dbg !10289
  %2 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10290
  %eh_context = getelementptr inbounds %struct.ata_link, %struct.ata_link* %2, i32 0, i32 12, !dbg !10291
  store %struct.ata_eh_context* %eh_context, %struct.ata_eh_context** %ehc, align 8, !dbg !10289
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc, metadata !10292, metadata !DIExpression()), !dbg !10293
  call void @llvm.dbg.declare(metadata i8** %frozen, metadata !10294, metadata !DIExpression()), !dbg !10295
  call void @llvm.dbg.declare(metadata i8** %desc, metadata !10296, metadata !DIExpression()), !dbg !10297
  call void @llvm.dbg.declare(metadata [6 x i8]* %tries_buf, metadata !10298, metadata !DIExpression()), !dbg !10299
  %3 = bitcast [6 x i8]* %tries_buf to i8*, !dbg !10299
  call void @llvm.memset.p0i8.i64(i8* align 1 %3, i8 0, i64 6, i1 false), !dbg !10299
  call void @llvm.dbg.declare(metadata i32* %tag, metadata !10300, metadata !DIExpression()), !dbg !10301
  call void @llvm.dbg.declare(metadata i32* %nr_failed, metadata !10302, metadata !DIExpression()), !dbg !10303
  store i32 0, i32* %nr_failed, align 4, !dbg !10303
  %4 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10304
  %i = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %4, i32 0, i32 0, !dbg !10306
  %flags = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i, i32 0, i32 5, !dbg !10307
  %5 = load i32, i32* %flags, align 4, !dbg !10307
  %and = and i32 %5, 8, !dbg !10308
  %tobool = icmp ne i32 %and, 0, !dbg !10308
  br i1 %tobool, label %if.then, label %if.end, !dbg !10309

if.then:                                          ; preds = %entry
  br label %for.end361, !dbg !10310

if.end:                                           ; preds = %entry
  store i8* null, i8** %desc, align 8, !dbg !10311
  %6 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10312
  %i2 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %6, i32 0, i32 0, !dbg !10314
  %desc3 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i2, i32 0, i32 7, !dbg !10315
  %arrayidx = getelementptr [80 x i8], [80 x i8]* %desc3, i64 0, i64 0, !dbg !10312
  %7 = load i8, i8* %arrayidx, align 4, !dbg !10312
  %conv = sext i8 %7 to i32, !dbg !10312
  %cmp = icmp ne i32 %conv, 0, !dbg !10316
  br i1 %cmp, label %if.then5, label %if.end8, !dbg !10317

if.then5:                                         ; preds = %if.end
  %8 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10318
  %i6 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %8, i32 0, i32 0, !dbg !10319
  %desc7 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i6, i32 0, i32 7, !dbg !10320
  %arraydecay = getelementptr inbounds [80 x i8], [80 x i8]* %desc7, i64 0, i64 0, !dbg !10318
  store i8* %arraydecay, i8** %desc, align 8, !dbg !10321
  br label %if.end8, !dbg !10322

if.end8:                                          ; preds = %if.then5, %if.end
  store i32 0, i32* %tag, align 4, !dbg !10323
  br label %for.cond, !dbg !10323

for.cond:                                         ; preds = %for.inc, %if.end8
  %9 = load i32, i32* %tag, align 4, !dbg !10325
  %cmp9 = icmp slt i32 %9, 32, !dbg !10325
  br i1 %cmp9, label %land.rhs, label %land.end, !dbg !10325

land.rhs:                                         ; preds = %for.cond
  %10 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10327
  %11 = load i32, i32* %tag, align 4, !dbg !10327
  %call = call %struct.ata_queued_cmd* @__ata_qc_from_tag(%struct.ata_port* %10, i32 %11) #7, !dbg !10327
  store %struct.ata_queued_cmd* %call, %struct.ata_queued_cmd** %qc, align 8, !dbg !10327
  store i32 1, i32* %tmp, align 4, !dbg !10327
  %12 = load i32, i32* %tmp, align 4, !dbg !10327
  %tobool11 = icmp ne i32 %12, 0, !dbg !10325
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %13 = phi i1 [ false, %for.cond ], [ %tobool11, %land.rhs ], !dbg !10329
  br i1 %13, label %for.body, label %for.end, !dbg !10323

for.body:                                         ; preds = %land.end
  %14 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10330
  %flags12 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %14, i32 0, i32 6, !dbg !10333
  %15 = load i64, i64* %flags12, align 8, !dbg !10333
  %and13 = and i64 %15, 65536, !dbg !10334
  %tobool14 = icmp ne i64 %and13, 0, !dbg !10334
  br i1 %tobool14, label %lor.lhs.false, label %if.then24, !dbg !10335

lor.lhs.false:                                    ; preds = %for.body
  %16 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10336
  %dev = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %16, i32 0, i32 1, !dbg !10337
  %17 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10337
  %call15 = call %struct.ata_link* @ata_dev_phys_link(%struct.ata_device* %17) #7, !dbg !10338
  %18 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10339
  %cmp16 = icmp ne %struct.ata_link* %call15, %18, !dbg !10340
  br i1 %cmp16, label %if.then24, label %lor.lhs.false18, !dbg !10341

lor.lhs.false18:                                  ; preds = %lor.lhs.false
  %19 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10342
  %flags19 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %19, i32 0, i32 6, !dbg !10343
  %20 = load i64, i64* %flags19, align 8, !dbg !10343
  %and20 = and i64 %20, 64, !dbg !10344
  %tobool21 = icmp ne i64 %and20, 0, !dbg !10344
  br i1 %tobool21, label %land.lhs.true, label %if.end25, !dbg !10345

land.lhs.true:                                    ; preds = %lor.lhs.false18
  %21 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10346
  %err_mask = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %21, i32 0, i32 20, !dbg !10347
  %22 = load i32, i32* %err_mask, align 4, !dbg !10347
  %cmp22 = icmp eq i32 %22, 1, !dbg !10348
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !10349

if.then24:                                        ; preds = %land.lhs.true, %lor.lhs.false, %for.body
  br label %for.inc, !dbg !10350

if.end25:                                         ; preds = %land.lhs.true, %lor.lhs.false18
  %23 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10351
  %flags26 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %23, i32 0, i32 6, !dbg !10353
  %24 = load i64, i64* %flags26, align 8, !dbg !10353
  %and27 = and i64 %24, 131072, !dbg !10354
  %tobool28 = icmp ne i64 %and27, 0, !dbg !10354
  br i1 %tobool28, label %land.lhs.true29, label %if.end33, !dbg !10355

land.lhs.true29:                                  ; preds = %if.end25
  %25 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10356
  %err_mask30 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %25, i32 0, i32 20, !dbg !10357
  %26 = load i32, i32* %err_mask30, align 4, !dbg !10357
  %tobool31 = icmp ne i32 %26, 0, !dbg !10356
  br i1 %tobool31, label %if.end33, label %if.then32, !dbg !10358

if.then32:                                        ; preds = %land.lhs.true29
  br label %for.inc, !dbg !10359

if.end33:                                         ; preds = %land.lhs.true29, %if.end25
  %27 = load i32, i32* %nr_failed, align 4, !dbg !10360
  %inc = add i32 %27, 1, !dbg !10360
  store i32 %inc, i32* %nr_failed, align 4, !dbg !10360
  br label %for.inc, !dbg !10361

for.inc:                                          ; preds = %if.end33, %if.then32, %if.then24
  %28 = load i32, i32* %tag, align 4, !dbg !10325
  %inc34 = add i32 %28, 1, !dbg !10325
  store i32 %inc34, i32* %tag, align 4, !dbg !10325
  br label %for.cond, !dbg !10325, !llvm.loop !10362

for.end:                                          ; preds = %land.end
  %29 = load i32, i32* %nr_failed, align 4, !dbg !10364
  %tobool35 = icmp ne i32 %29, 0, !dbg !10364
  br i1 %tobool35, label %if.end41, label %land.lhs.true36, !dbg !10366

land.lhs.true36:                                  ; preds = %for.end
  %30 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10367
  %i37 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %30, i32 0, i32 0, !dbg !10368
  %err_mask38 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i37, i32 0, i32 2, !dbg !10369
  %31 = load i32, i32* %err_mask38, align 4, !dbg !10369
  %tobool39 = icmp ne i32 %31, 0, !dbg !10367
  br i1 %tobool39, label %if.end41, label %if.then40, !dbg !10370

if.then40:                                        ; preds = %land.lhs.true36
  br label %for.end361, !dbg !10371

if.end41:                                         ; preds = %land.lhs.true36, %for.end
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i8** %frozen, align 8, !dbg !10372
  %32 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10373
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %32, i32 0, i32 4, !dbg !10375
  %33 = load i32, i32* %pflags, align 32, !dbg !10375
  %and42 = and i32 %33, 4, !dbg !10376
  %tobool43 = icmp ne i32 %and42, 0, !dbg !10376
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !10377

if.then44:                                        ; preds = %if.end41
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.130, i64 0, i64 0), i8** %frozen, align 8, !dbg !10378
  br label %if.end45, !dbg !10379

if.end45:                                         ; preds = %if.then44, %if.end41
  %34 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10380
  %eh_tries = getelementptr inbounds %struct.ata_port, %struct.ata_port* %34, i32 0, i32 41, !dbg !10382
  %35 = load i32, i32* %eh_tries, align 8, !dbg !10382
  %cmp46 = icmp slt i32 %35, 5, !dbg !10383
  br i1 %cmp46, label %if.then48, label %if.end52, !dbg !10384

if.then48:                                        ; preds = %if.end45
  %arraydecay49 = getelementptr inbounds [6 x i8], [6 x i8]* %tries_buf, i64 0, i64 0, !dbg !10385
  %36 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10386
  %eh_tries50 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %36, i32 0, i32 41, !dbg !10387
  %37 = load i32, i32* %eh_tries50, align 8, !dbg !10387
  %call51 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay49, i64 6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.131, i64 0, i64 0), i32 %37) #7, !dbg !10388
  br label %if.end52, !dbg !10388

if.end52:                                         ; preds = %if.then48, %if.end45
  %38 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10389
  %i53 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %38, i32 0, i32 0, !dbg !10391
  %dev54 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i53, i32 0, i32 0, !dbg !10392
  %39 = load %struct.ata_device*, %struct.ata_device** %dev54, align 8, !dbg !10392
  %tobool55 = icmp ne %struct.ata_device* %39, null, !dbg !10389
  br i1 %tobool55, label %if.then56, label %if.else, !dbg !10393

if.then56:                                        ; preds = %if.end52
  %40 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10394
  %i57 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %40, i32 0, i32 0, !dbg !10394
  %dev58 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i57, i32 0, i32 0, !dbg !10394
  %41 = load %struct.ata_device*, %struct.ata_device** %dev58, align 8, !dbg !10394
  %42 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10394
  %i59 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %42, i32 0, i32 0, !dbg !10394
  %err_mask60 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i59, i32 0, i32 2, !dbg !10394
  %43 = load i32, i32* %err_mask60, align 4, !dbg !10394
  %44 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10394
  %sactive = getelementptr inbounds %struct.ata_link, %struct.ata_link* %44, i32 0, i32 4, !dbg !10394
  %45 = load i32, i32* %sactive, align 4, !dbg !10394
  %46 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10394
  %i61 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %46, i32 0, i32 0, !dbg !10394
  %serror = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i61, i32 0, i32 1, !dbg !10394
  %47 = load i32, i32* %serror, align 8, !dbg !10394
  %48 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10394
  %i62 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %48, i32 0, i32 0, !dbg !10394
  %action = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i62, i32 0, i32 3, !dbg !10394
  %49 = load i32, i32* %action, align 8, !dbg !10394
  %50 = load i8*, i8** %frozen, align 8, !dbg !10394
  %arraydecay63 = getelementptr inbounds [6 x i8], [6 x i8]* %tries_buf, i64 0, i64 0, !dbg !10394
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %41, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.132, i64 0, i64 0), i32 %43, i32 %45, i32 %47, i32 %49, i8* %50, i8* %arraydecay63) #7, !dbg !10394
  %51 = load i8*, i8** %desc, align 8, !dbg !10396
  %tobool64 = icmp ne i8* %51, null, !dbg !10396
  br i1 %tobool64, label %if.then65, label %if.end68, !dbg !10398

if.then65:                                        ; preds = %if.then56
  %52 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10399
  %i66 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %52, i32 0, i32 0, !dbg !10399
  %dev67 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i66, i32 0, i32 0, !dbg !10399
  %53 = load %struct.ata_device*, %struct.ata_device** %dev67, align 8, !dbg !10399
  %54 = load i8*, i8** %desc, align 8, !dbg !10399
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %53, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.133, i64 0, i64 0), i8* %54) #7, !dbg !10399
  br label %if.end68, !dbg !10399

if.end68:                                         ; preds = %if.then65, %if.then56
  br label %if.end80, !dbg !10400

if.else:                                          ; preds = %if.end52
  %55 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10401
  %56 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10401
  %i69 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %56, i32 0, i32 0, !dbg !10401
  %err_mask70 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i69, i32 0, i32 2, !dbg !10401
  %57 = load i32, i32* %err_mask70, align 4, !dbg !10401
  %58 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10401
  %sactive71 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %58, i32 0, i32 4, !dbg !10401
  %59 = load i32, i32* %sactive71, align 4, !dbg !10401
  %60 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10401
  %i72 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %60, i32 0, i32 0, !dbg !10401
  %serror73 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i72, i32 0, i32 1, !dbg !10401
  %61 = load i32, i32* %serror73, align 8, !dbg !10401
  %62 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10401
  %i74 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %62, i32 0, i32 0, !dbg !10401
  %action75 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i74, i32 0, i32 3, !dbg !10401
  %63 = load i32, i32* %action75, align 8, !dbg !10401
  %64 = load i8*, i8** %frozen, align 8, !dbg !10401
  %arraydecay76 = getelementptr inbounds [6 x i8], [6 x i8]* %tries_buf, i64 0, i64 0, !dbg !10401
  call void (%struct.ata_link*, i8*, i8*, ...) @ata_link_printk(%struct.ata_link* %55, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.132, i64 0, i64 0), i32 %57, i32 %59, i32 %61, i32 %63, i8* %64, i8* %arraydecay76) #7, !dbg !10401
  %65 = load i8*, i8** %desc, align 8, !dbg !10403
  %tobool77 = icmp ne i8* %65, null, !dbg !10403
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !10405

if.then78:                                        ; preds = %if.else
  %66 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10406
  %67 = load i8*, i8** %desc, align 8, !dbg !10406
  call void (%struct.ata_link*, i8*, i8*, ...) @ata_link_printk(%struct.ata_link* %66, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.133, i64 0, i64 0), i8* %67) #7, !dbg !10406
  br label %if.end79, !dbg !10406

if.end79:                                         ; preds = %if.then78, %if.else
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %if.end68
  %68 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10407
  %i81 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %68, i32 0, i32 0, !dbg !10409
  %serror82 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i81, i32 0, i32 1, !dbg !10410
  %69 = load i32, i32* %serror82, align 8, !dbg !10410
  %tobool83 = icmp ne i32 %69, 0, !dbg !10407
  br i1 %tobool83, label %if.then84, label %if.end169, !dbg !10411

if.then84:                                        ; preds = %if.end80
  %70 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10412
  %71 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10412
  %i85 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %71, i32 0, i32 0, !dbg !10412
  %serror86 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i85, i32 0, i32 1, !dbg !10412
  %72 = load i32, i32* %serror86, align 8, !dbg !10412
  %and87 = and i32 %72, 1, !dbg !10412
  %tobool88 = icmp ne i32 %and87, 0, !dbg !10412
  %73 = zext i1 %tobool88 to i64, !dbg !10412
  %cond = select i1 %tobool88, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.135, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), !dbg !10412
  %74 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10412
  %i89 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %74, i32 0, i32 0, !dbg !10412
  %serror90 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i89, i32 0, i32 1, !dbg !10412
  %75 = load i32, i32* %serror90, align 8, !dbg !10412
  %and91 = and i32 %75, 2, !dbg !10412
  %tobool92 = icmp ne i32 %and91, 0, !dbg !10412
  %76 = zext i1 %tobool92 to i64, !dbg !10412
  %cond93 = select i1 %tobool92, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.136, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), !dbg !10412
  %77 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10412
  %i94 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %77, i32 0, i32 0, !dbg !10412
  %serror95 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i94, i32 0, i32 1, !dbg !10412
  %78 = load i32, i32* %serror95, align 8, !dbg !10412
  %and96 = and i32 %78, 256, !dbg !10412
  %tobool97 = icmp ne i32 %and96, 0, !dbg !10412
  %79 = zext i1 %tobool97 to i64, !dbg !10412
  %cond98 = select i1 %tobool97, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.137, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), !dbg !10412
  %80 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10412
  %i99 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %80, i32 0, i32 0, !dbg !10412
  %serror100 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i99, i32 0, i32 1, !dbg !10412
  %81 = load i32, i32* %serror100, align 8, !dbg !10412
  %and101 = and i32 %81, 512, !dbg !10412
  %tobool102 = icmp ne i32 %and101, 0, !dbg !10412
  %82 = zext i1 %tobool102 to i64, !dbg !10412
  %cond103 = select i1 %tobool102, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.138, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), !dbg !10412
  %83 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10412
  %i104 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %83, i32 0, i32 0, !dbg !10412
  %serror105 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i104, i32 0, i32 1, !dbg !10412
  %84 = load i32, i32* %serror105, align 8, !dbg !10412
  %and106 = and i32 %84, 1024, !dbg !10412
  %tobool107 = icmp ne i32 %and106, 0, !dbg !10412
  %85 = zext i1 %tobool107 to i64, !dbg !10412
  %cond108 = select i1 %tobool107, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.139, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), !dbg !10412
  %86 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10412
  %i109 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %86, i32 0, i32 0, !dbg !10412
  %serror110 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i109, i32 0, i32 1, !dbg !10412
  %87 = load i32, i32* %serror110, align 8, !dbg !10412
  %and111 = and i32 %87, 2048, !dbg !10412
  %tobool112 = icmp ne i32 %and111, 0, !dbg !10412
  %88 = zext i1 %tobool112 to i64, !dbg !10412
  %cond113 = select i1 %tobool112, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.140, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), !dbg !10412
  %89 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10412
  %i114 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %89, i32 0, i32 0, !dbg !10412
  %serror115 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i114, i32 0, i32 1, !dbg !10412
  %90 = load i32, i32* %serror115, align 8, !dbg !10412
  %and116 = and i32 %90, 65536, !dbg !10412
  %tobool117 = icmp ne i32 %and116, 0, !dbg !10412
  %91 = zext i1 %tobool117 to i64, !dbg !10412
  %cond118 = select i1 %tobool117, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.141, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), !dbg !10412
  %92 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10412
  %i119 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %92, i32 0, i32 0, !dbg !10412
  %serror120 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i119, i32 0, i32 1, !dbg !10412
  %93 = load i32, i32* %serror120, align 8, !dbg !10412
  %and121 = and i32 %93, 131072, !dbg !10412
  %tobool122 = icmp ne i32 %and121, 0, !dbg !10412
  %94 = zext i1 %tobool122 to i64, !dbg !10412
  %cond123 = select i1 %tobool122, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.142, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), !dbg !10412
  %95 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10412
  %i124 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %95, i32 0, i32 0, !dbg !10412
  %serror125 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i124, i32 0, i32 1, !dbg !10412
  %96 = load i32, i32* %serror125, align 8, !dbg !10412
  %and126 = and i32 %96, 262144, !dbg !10412
  %tobool127 = icmp ne i32 %and126, 0, !dbg !10412
  %97 = zext i1 %tobool127 to i64, !dbg !10412
  %cond128 = select i1 %tobool127, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.143, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), !dbg !10412
  %98 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10412
  %i129 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %98, i32 0, i32 0, !dbg !10412
  %serror130 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i129, i32 0, i32 1, !dbg !10412
  %99 = load i32, i32* %serror130, align 8, !dbg !10412
  %and131 = and i32 %99, 524288, !dbg !10412
  %tobool132 = icmp ne i32 %and131, 0, !dbg !10412
  %100 = zext i1 %tobool132 to i64, !dbg !10412
  %cond133 = select i1 %tobool132, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.144, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), !dbg !10412
  %101 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10412
  %i134 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %101, i32 0, i32 0, !dbg !10412
  %serror135 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i134, i32 0, i32 1, !dbg !10412
  %102 = load i32, i32* %serror135, align 8, !dbg !10412
  %and136 = and i32 %102, 1048576, !dbg !10412
  %tobool137 = icmp ne i32 %and136, 0, !dbg !10412
  %103 = zext i1 %tobool137 to i64, !dbg !10412
  %cond138 = select i1 %tobool137, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.145, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), !dbg !10412
  %104 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10412
  %i139 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %104, i32 0, i32 0, !dbg !10412
  %serror140 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i139, i32 0, i32 1, !dbg !10412
  %105 = load i32, i32* %serror140, align 8, !dbg !10412
  %and141 = and i32 %105, 2097152, !dbg !10412
  %tobool142 = icmp ne i32 %and141, 0, !dbg !10412
  %106 = zext i1 %tobool142 to i64, !dbg !10412
  %cond143 = select i1 %tobool142, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.146, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), !dbg !10412
  %107 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10412
  %i144 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %107, i32 0, i32 0, !dbg !10412
  %serror145 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i144, i32 0, i32 1, !dbg !10412
  %108 = load i32, i32* %serror145, align 8, !dbg !10412
  %and146 = and i32 %108, 4194304, !dbg !10412
  %tobool147 = icmp ne i32 %and146, 0, !dbg !10412
  %109 = zext i1 %tobool147 to i64, !dbg !10412
  %cond148 = select i1 %tobool147, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.147, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), !dbg !10412
  %110 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10412
  %i149 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %110, i32 0, i32 0, !dbg !10412
  %serror150 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i149, i32 0, i32 1, !dbg !10412
  %111 = load i32, i32* %serror150, align 8, !dbg !10412
  %and151 = and i32 %111, 8388608, !dbg !10412
  %tobool152 = icmp ne i32 %and151, 0, !dbg !10412
  %112 = zext i1 %tobool152 to i64, !dbg !10412
  %cond153 = select i1 %tobool152, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.148, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), !dbg !10412
  %113 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10412
  %i154 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %113, i32 0, i32 0, !dbg !10412
  %serror155 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i154, i32 0, i32 1, !dbg !10412
  %114 = load i32, i32* %serror155, align 8, !dbg !10412
  %and156 = and i32 %114, 16777216, !dbg !10412
  %tobool157 = icmp ne i32 %and156, 0, !dbg !10412
  %115 = zext i1 %tobool157 to i64, !dbg !10412
  %cond158 = select i1 %tobool157, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.149, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), !dbg !10412
  %116 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10412
  %i159 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %116, i32 0, i32 0, !dbg !10412
  %serror160 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i159, i32 0, i32 1, !dbg !10412
  %117 = load i32, i32* %serror160, align 8, !dbg !10412
  %and161 = and i32 %117, 33554432, !dbg !10412
  %tobool162 = icmp ne i32 %and161, 0, !dbg !10412
  %118 = zext i1 %tobool162 to i64, !dbg !10412
  %cond163 = select i1 %tobool162, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), !dbg !10412
  %119 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10412
  %i164 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %119, i32 0, i32 0, !dbg !10412
  %serror165 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i164, i32 0, i32 1, !dbg !10412
  %120 = load i32, i32* %serror165, align 8, !dbg !10412
  %and166 = and i32 %120, 67108864, !dbg !10412
  %tobool167 = icmp ne i32 %and166, 0, !dbg !10412
  %121 = zext i1 %tobool167 to i64, !dbg !10412
  %cond168 = select i1 %tobool167, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.151, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), !dbg !10412
  call void (%struct.ata_link*, i8*, i8*, ...) @ata_link_printk(%struct.ata_link* %70, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.134, i64 0, i64 0), i8* %cond, i8* %cond93, i8* %cond98, i8* %cond103, i8* %cond108, i8* %cond113, i8* %cond118, i8* %cond123, i8* %cond128, i8* %cond133, i8* %cond138, i8* %cond143, i8* %cond148, i8* %cond153, i8* %cond158, i8* %cond163, i8* %cond168) #7, !dbg !10412
  br label %if.end169, !dbg !10412

if.end169:                                        ; preds = %if.then84, %if.end80
  store i32 0, i32* %tag, align 4, !dbg !10413
  br label %for.cond170, !dbg !10413

for.cond170:                                      ; preds = %for.inc359, %if.end169
  %122 = load i32, i32* %tag, align 4, !dbg !10415
  %cmp171 = icmp slt i32 %122, 32, !dbg !10415
  br i1 %cmp171, label %land.rhs173, label %land.end177, !dbg !10415

land.rhs173:                                      ; preds = %for.cond170
  %123 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10417
  %124 = load i32, i32* %tag, align 4, !dbg !10417
  %call174 = call %struct.ata_queued_cmd* @__ata_qc_from_tag(%struct.ata_port* %123, i32 %124) #7, !dbg !10417
  store %struct.ata_queued_cmd* %call174, %struct.ata_queued_cmd** %qc, align 8, !dbg !10417
  store i32 1, i32* %tmp175, align 4, !dbg !10417
  %125 = load i32, i32* %tmp175, align 4, !dbg !10417
  %tobool176 = icmp ne i32 %125, 0, !dbg !10415
  br label %land.end177

land.end177:                                      ; preds = %land.rhs173, %for.cond170
  %126 = phi i1 [ false, %for.cond170 ], [ %tobool176, %land.rhs173 ], !dbg !10419
  br i1 %126, label %for.body178, label %for.end361, !dbg !10413

for.body178:                                      ; preds = %land.end177
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %cmd, metadata !10420, metadata !DIExpression()), !dbg !10422
  %127 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10423
  %tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %127, i32 0, i32 4, !dbg !10424
  store %struct.ata_taskfile* %tf, %struct.ata_taskfile** %cmd, align 8, !dbg !10422
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %res, metadata !10425, metadata !DIExpression()), !dbg !10426
  %128 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10427
  %result_tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %128, i32 0, i32 21, !dbg !10428
  store %struct.ata_taskfile* %result_tf, %struct.ata_taskfile** %res, align 8, !dbg !10426
  call void @llvm.dbg.declare(metadata [20 x i8]* %data_buf, metadata !10429, metadata !DIExpression()), !dbg !10430
  %129 = bitcast [20 x i8]* %data_buf to i8*, !dbg !10430
  call void @llvm.memset.p0i8.i64(i8* align 16 %129, i8 0, i64 20, i1 false), !dbg !10430
  call void @llvm.dbg.declare(metadata [70 x i8]* %cdb_buf, metadata !10431, metadata !DIExpression()), !dbg !10435
  %130 = bitcast [70 x i8]* %cdb_buf to i8*, !dbg !10435
  call void @llvm.memset.p0i8.i64(i8* align 16 %130, i8 0, i64 70, i1 false), !dbg !10435
  %131 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10436
  %flags179 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %131, i32 0, i32 6, !dbg !10438
  %132 = load i64, i64* %flags179, align 8, !dbg !10438
  %and180 = and i64 %132, 65536, !dbg !10439
  %tobool181 = icmp ne i64 %and180, 0, !dbg !10439
  br i1 %tobool181, label %lor.lhs.false182, label %if.then190, !dbg !10440

lor.lhs.false182:                                 ; preds = %for.body178
  %133 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10441
  %dev183 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %133, i32 0, i32 1, !dbg !10442
  %134 = load %struct.ata_device*, %struct.ata_device** %dev183, align 8, !dbg !10442
  %call184 = call %struct.ata_link* @ata_dev_phys_link(%struct.ata_device* %134) #7, !dbg !10443
  %135 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10444
  %cmp185 = icmp ne %struct.ata_link* %call184, %135, !dbg !10445
  br i1 %cmp185, label %if.then190, label %lor.lhs.false187, !dbg !10446

lor.lhs.false187:                                 ; preds = %lor.lhs.false182
  %136 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10447
  %err_mask188 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %136, i32 0, i32 20, !dbg !10448
  %137 = load i32, i32* %err_mask188, align 4, !dbg !10448
  %tobool189 = icmp ne i32 %137, 0, !dbg !10447
  br i1 %tobool189, label %if.end191, label %if.then190, !dbg !10449

if.then190:                                       ; preds = %lor.lhs.false187, %lor.lhs.false182, %for.body178
  br label %for.inc359, !dbg !10450

if.end191:                                        ; preds = %lor.lhs.false187
  %138 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10451
  %dma_dir = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %138, i32 0, i32 11, !dbg !10453
  %139 = load i32, i32* %dma_dir, align 8, !dbg !10453
  %cmp192 = icmp ne i32 %139, 3, !dbg !10454
  br i1 %cmp192, label %if.then194, label %if.end209, !dbg !10455

if.then194:                                       ; preds = %if.end191
  call void @llvm.dbg.declare(metadata i8** %prot_str, metadata !10456, metadata !DIExpression()), !dbg !10458
  store i8* null, i8** %prot_str, align 8, !dbg !10458
  %140 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10459
  %tf195 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %140, i32 0, i32 4, !dbg !10460
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf195, i32 0, i32 1, !dbg !10461
  %141 = load i8, i8* %protocol, align 8, !dbg !10461
  %conv196 = zext i8 %141 to i32, !dbg !10459
  switch i32 %conv196, label %sw.epilog [
    i32 255, label %sw.bb
    i32 0, label %sw.bb197
    i32 1, label %sw.bb198
    i32 2, label %sw.bb199
    i32 6, label %sw.bb200
    i32 4, label %sw.bb201
    i32 8, label %sw.bb202
    i32 9, label %sw.bb203
    i32 10, label %sw.bb204
  ], !dbg !10462

sw.bb:                                            ; preds = %if.then194
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.155, i64 0, i64 0), i8** %prot_str, align 8, !dbg !10463
  br label %sw.epilog, !dbg !10465

sw.bb197:                                         ; preds = %if.then194
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.156, i64 0, i64 0), i8** %prot_str, align 8, !dbg !10466
  br label %sw.epilog, !dbg !10467

sw.bb198:                                         ; preds = %if.then194
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.157, i64 0, i64 0), i8** %prot_str, align 8, !dbg !10468
  br label %sw.epilog, !dbg !10469

sw.bb199:                                         ; preds = %if.then194
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.158, i64 0, i64 0), i8** %prot_str, align 8, !dbg !10470
  br label %sw.epilog, !dbg !10471

sw.bb200:                                         ; preds = %if.then194
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.159, i64 0, i64 0), i8** %prot_str, align 8, !dbg !10472
  br label %sw.epilog, !dbg !10473

sw.bb201:                                         ; preds = %if.then194
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.160, i64 0, i64 0), i8** %prot_str, align 8, !dbg !10474
  br label %sw.epilog, !dbg !10475

sw.bb202:                                         ; preds = %if.then194
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.156, i64 0, i64 0), i8** %prot_str, align 8, !dbg !10476
  br label %sw.epilog, !dbg !10477

sw.bb203:                                         ; preds = %if.then194
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.157, i64 0, i64 0), i8** %prot_str, align 8, !dbg !10478
  br label %sw.epilog, !dbg !10479

sw.bb204:                                         ; preds = %if.then194
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.158, i64 0, i64 0), i8** %prot_str, align 8, !dbg !10480
  br label %sw.epilog, !dbg !10481

sw.epilog:                                        ; preds = %if.then194, %sw.bb204, %sw.bb203, %sw.bb202, %sw.bb201, %sw.bb200, %sw.bb199, %sw.bb198, %sw.bb197, %sw.bb
  %arraydecay205 = getelementptr inbounds [20 x i8], [20 x i8]* %data_buf, i64 0, i64 0, !dbg !10482
  %142 = load i8*, i8** %prot_str, align 8, !dbg !10483
  %143 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10484
  %nbytes = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %143, i32 0, i32 13, !dbg !10485
  %144 = load i32, i32* %nbytes, align 8, !dbg !10485
  %145 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10486
  %dma_dir206 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %145, i32 0, i32 11, !dbg !10487
  %146 = load i32, i32* %dma_dir206, align 8, !dbg !10487
  %idxprom = sext i32 %146 to i64, !dbg !10488
  %arrayidx207 = getelementptr [3 x i8*], [3 x i8*]* @ata_eh_link_report.dma_str, i64 0, i64 %idxprom, !dbg !10488
  %147 = load i8*, i8** %arrayidx207, align 8, !dbg !10488
  %call208 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay205, i64 20, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.161, i64 0, i64 0), i8* %142, i32 %144, i8* %147) #7, !dbg !10489
  br label %if.end209, !dbg !10490

if.end209:                                        ; preds = %sw.epilog, %if.end191
  %148 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10491
  %tf210 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %148, i32 0, i32 4, !dbg !10493
  %protocol211 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf210, i32 0, i32 1, !dbg !10494
  %149 = load i8, i8* %protocol211, align 8, !dbg !10494
  %call212 = call zeroext i1 @ata_is_atapi(i8 zeroext %149) #7, !dbg !10495
  br i1 %call212, label %if.then213, label %if.else227, !dbg !10496

if.then213:                                       ; preds = %if.end209
  call void @llvm.dbg.declare(metadata i8** %cdb, metadata !10497, metadata !DIExpression()), !dbg !10499
  %150 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10500
  %cdb214 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %150, i32 0, i32 5, !dbg !10501
  %arraydecay215 = getelementptr inbounds [16 x i8], [16 x i8]* %cdb214, i64 0, i64 0, !dbg !10500
  store i8* %arraydecay215, i8** %cdb, align 8, !dbg !10499
  call void @llvm.dbg.declare(metadata i64* %cdb_len, metadata !10502, metadata !DIExpression()), !dbg !10503
  %151 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10504
  %dev216 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %151, i32 0, i32 1, !dbg !10505
  %152 = load %struct.ata_device*, %struct.ata_device** %dev216, align 8, !dbg !10505
  %cdb_len217 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %152, i32 0, i32 19, !dbg !10506
  %153 = load i32, i32* %cdb_len217, align 32, !dbg !10506
  %conv218 = zext i32 %153 to i64, !dbg !10504
  store i64 %conv218, i64* %cdb_len, align 8, !dbg !10503
  %154 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10507
  %scsicmd = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %154, i32 0, i32 2, !dbg !10509
  %155 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd, align 8, !dbg !10509
  %tobool219 = icmp ne %struct.scsi_cmnd* %155, null, !dbg !10507
  br i1 %tobool219, label %if.then220, label %if.end224, !dbg !10510

if.then220:                                       ; preds = %if.then213
  %156 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10511
  %scsicmd221 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %156, i32 0, i32 2, !dbg !10513
  %157 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd221, align 8, !dbg !10513
  %cmnd = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %157, i32 0, i32 14, !dbg !10514
  %158 = load i8*, i8** %cmnd, align 8, !dbg !10514
  store i8* %158, i8** %cdb, align 8, !dbg !10515
  %159 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10516
  %scsicmd222 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %159, i32 0, i32 2, !dbg !10517
  %160 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd222, align 8, !dbg !10517
  %cmd_len = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %160, i32 0, i32 12, !dbg !10518
  %161 = load i16, i16* %cmd_len, align 4, !dbg !10518
  %conv223 = zext i16 %161 to i64, !dbg !10516
  store i64 %conv223, i64* %cdb_len, align 8, !dbg !10519
  br label %if.end224, !dbg !10520

if.end224:                                        ; preds = %if.then220, %if.then213
  %arraydecay225 = getelementptr inbounds [70 x i8], [70 x i8]* %cdb_buf, i64 0, i64 0, !dbg !10521
  %162 = load i8*, i8** %cdb, align 8, !dbg !10522
  %163 = load i64, i64* %cdb_len, align 8, !dbg !10523
  %call226 = call i64 @__scsi_format_command(i8* %arraydecay225, i64 70, i8* %162, i64 %163) #7, !dbg !10524
  br label %if.end233, !dbg !10525

if.else227:                                       ; preds = %if.end209
  call void @llvm.dbg.declare(metadata i8** %descr, metadata !10526, metadata !DIExpression()), !dbg !10528
  %164 = load %struct.ata_taskfile*, %struct.ata_taskfile** %cmd, align 8, !dbg !10529
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %164, i32 0, i32 14, !dbg !10530
  %165 = load i8, i8* %command, align 1, !dbg !10530
  %call228 = call i8* @ata_get_cmd_descript(i8 zeroext %165) #7, !dbg !10531
  store i8* %call228, i8** %descr, align 8, !dbg !10528
  %166 = load i8*, i8** %descr, align 8, !dbg !10532
  %tobool229 = icmp ne i8* %166, null, !dbg !10532
  br i1 %tobool229, label %if.then230, label %if.end232, !dbg !10534

if.then230:                                       ; preds = %if.else227
  %167 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10535
  %dev231 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %167, i32 0, i32 1, !dbg !10535
  %168 = load %struct.ata_device*, %struct.ata_device** %dev231, align 8, !dbg !10535
  %169 = load i8*, i8** %descr, align 8, !dbg !10535
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %168, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.162, i64 0, i64 0), i8* %169) #7, !dbg !10535
  br label %if.end232, !dbg !10535

if.end232:                                        ; preds = %if.then230, %if.else227
  br label %if.end233

if.end233:                                        ; preds = %if.end232, %if.end224
  %170 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10536
  %dev234 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %170, i32 0, i32 1, !dbg !10536
  %171 = load %struct.ata_device*, %struct.ata_device** %dev234, align 8, !dbg !10536
  %172 = load %struct.ata_taskfile*, %struct.ata_taskfile** %cmd, align 8, !dbg !10536
  %command235 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %172, i32 0, i32 14, !dbg !10536
  %173 = load i8, i8* %command235, align 1, !dbg !10536
  %conv236 = zext i8 %173 to i32, !dbg !10536
  %174 = load %struct.ata_taskfile*, %struct.ata_taskfile** %cmd, align 8, !dbg !10536
  %feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %174, i32 0, i32 8, !dbg !10536
  %175 = load i8, i8* %feature, align 1, !dbg !10536
  %conv237 = zext i8 %175 to i32, !dbg !10536
  %176 = load %struct.ata_taskfile*, %struct.ata_taskfile** %cmd, align 8, !dbg !10536
  %nsect = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %176, i32 0, i32 9, !dbg !10536
  %177 = load i8, i8* %nsect, align 8, !dbg !10536
  %conv238 = zext i8 %177 to i32, !dbg !10536
  %178 = load %struct.ata_taskfile*, %struct.ata_taskfile** %cmd, align 8, !dbg !10536
  %lbal = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %178, i32 0, i32 10, !dbg !10536
  %179 = load i8, i8* %lbal, align 1, !dbg !10536
  %conv239 = zext i8 %179 to i32, !dbg !10536
  %180 = load %struct.ata_taskfile*, %struct.ata_taskfile** %cmd, align 8, !dbg !10536
  %lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %180, i32 0, i32 11, !dbg !10536
  %181 = load i8, i8* %lbam, align 2, !dbg !10536
  %conv240 = zext i8 %181 to i32, !dbg !10536
  %182 = load %struct.ata_taskfile*, %struct.ata_taskfile** %cmd, align 8, !dbg !10536
  %lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %182, i32 0, i32 12, !dbg !10536
  %183 = load i8, i8* %lbah, align 1, !dbg !10536
  %conv241 = zext i8 %183 to i32, !dbg !10536
  %184 = load %struct.ata_taskfile*, %struct.ata_taskfile** %cmd, align 8, !dbg !10536
  %hob_feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %184, i32 0, i32 3, !dbg !10536
  %185 = load i8, i8* %hob_feature, align 2, !dbg !10536
  %conv242 = zext i8 %185 to i32, !dbg !10536
  %186 = load %struct.ata_taskfile*, %struct.ata_taskfile** %cmd, align 8, !dbg !10536
  %hob_nsect = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %186, i32 0, i32 4, !dbg !10536
  %187 = load i8, i8* %hob_nsect, align 1, !dbg !10536
  %conv243 = zext i8 %187 to i32, !dbg !10536
  %188 = load %struct.ata_taskfile*, %struct.ata_taskfile** %cmd, align 8, !dbg !10536
  %hob_lbal = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %188, i32 0, i32 5, !dbg !10536
  %189 = load i8, i8* %hob_lbal, align 4, !dbg !10536
  %conv244 = zext i8 %189 to i32, !dbg !10536
  %190 = load %struct.ata_taskfile*, %struct.ata_taskfile** %cmd, align 8, !dbg !10536
  %hob_lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %190, i32 0, i32 6, !dbg !10536
  %191 = load i8, i8* %hob_lbam, align 1, !dbg !10536
  %conv245 = zext i8 %191 to i32, !dbg !10536
  %192 = load %struct.ata_taskfile*, %struct.ata_taskfile** %cmd, align 8, !dbg !10536
  %hob_lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %192, i32 0, i32 7, !dbg !10536
  %193 = load i8, i8* %hob_lbah, align 2, !dbg !10536
  %conv246 = zext i8 %193 to i32, !dbg !10536
  %194 = load %struct.ata_taskfile*, %struct.ata_taskfile** %cmd, align 8, !dbg !10536
  %device = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %194, i32 0, i32 13, !dbg !10536
  %195 = load i8, i8* %device, align 4, !dbg !10536
  %conv247 = zext i8 %195 to i32, !dbg !10536
  %196 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10536
  %tag248 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %196, i32 0, i32 7, !dbg !10536
  %197 = load i32, i32* %tag248, align 8, !dbg !10536
  %arraydecay249 = getelementptr inbounds [20 x i8], [20 x i8]* %data_buf, i64 0, i64 0, !dbg !10536
  %arraydecay250 = getelementptr inbounds [70 x i8], [70 x i8]* %cdb_buf, i64 0, i64 0, !dbg !10536
  %198 = load %struct.ata_taskfile*, %struct.ata_taskfile** %res, align 8, !dbg !10536
  %command251 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %198, i32 0, i32 14, !dbg !10536
  %199 = load i8, i8* %command251, align 1, !dbg !10536
  %conv252 = zext i8 %199 to i32, !dbg !10536
  %200 = load %struct.ata_taskfile*, %struct.ata_taskfile** %res, align 8, !dbg !10536
  %feature253 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %200, i32 0, i32 8, !dbg !10536
  %201 = load i8, i8* %feature253, align 1, !dbg !10536
  %conv254 = zext i8 %201 to i32, !dbg !10536
  %202 = load %struct.ata_taskfile*, %struct.ata_taskfile** %res, align 8, !dbg !10536
  %nsect255 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %202, i32 0, i32 9, !dbg !10536
  %203 = load i8, i8* %nsect255, align 8, !dbg !10536
  %conv256 = zext i8 %203 to i32, !dbg !10536
  %204 = load %struct.ata_taskfile*, %struct.ata_taskfile** %res, align 8, !dbg !10536
  %lbal257 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %204, i32 0, i32 10, !dbg !10536
  %205 = load i8, i8* %lbal257, align 1, !dbg !10536
  %conv258 = zext i8 %205 to i32, !dbg !10536
  %206 = load %struct.ata_taskfile*, %struct.ata_taskfile** %res, align 8, !dbg !10536
  %lbam259 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %206, i32 0, i32 11, !dbg !10536
  %207 = load i8, i8* %lbam259, align 2, !dbg !10536
  %conv260 = zext i8 %207 to i32, !dbg !10536
  %208 = load %struct.ata_taskfile*, %struct.ata_taskfile** %res, align 8, !dbg !10536
  %lbah261 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %208, i32 0, i32 12, !dbg !10536
  %209 = load i8, i8* %lbah261, align 1, !dbg !10536
  %conv262 = zext i8 %209 to i32, !dbg !10536
  %210 = load %struct.ata_taskfile*, %struct.ata_taskfile** %res, align 8, !dbg !10536
  %hob_feature263 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %210, i32 0, i32 3, !dbg !10536
  %211 = load i8, i8* %hob_feature263, align 2, !dbg !10536
  %conv264 = zext i8 %211 to i32, !dbg !10536
  %212 = load %struct.ata_taskfile*, %struct.ata_taskfile** %res, align 8, !dbg !10536
  %hob_nsect265 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %212, i32 0, i32 4, !dbg !10536
  %213 = load i8, i8* %hob_nsect265, align 1, !dbg !10536
  %conv266 = zext i8 %213 to i32, !dbg !10536
  %214 = load %struct.ata_taskfile*, %struct.ata_taskfile** %res, align 8, !dbg !10536
  %hob_lbal267 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %214, i32 0, i32 5, !dbg !10536
  %215 = load i8, i8* %hob_lbal267, align 4, !dbg !10536
  %conv268 = zext i8 %215 to i32, !dbg !10536
  %216 = load %struct.ata_taskfile*, %struct.ata_taskfile** %res, align 8, !dbg !10536
  %hob_lbam269 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %216, i32 0, i32 6, !dbg !10536
  %217 = load i8, i8* %hob_lbam269, align 1, !dbg !10536
  %conv270 = zext i8 %217 to i32, !dbg !10536
  %218 = load %struct.ata_taskfile*, %struct.ata_taskfile** %res, align 8, !dbg !10536
  %hob_lbah271 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %218, i32 0, i32 7, !dbg !10536
  %219 = load i8, i8* %hob_lbah271, align 2, !dbg !10536
  %conv272 = zext i8 %219 to i32, !dbg !10536
  %220 = load %struct.ata_taskfile*, %struct.ata_taskfile** %res, align 8, !dbg !10536
  %device273 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %220, i32 0, i32 13, !dbg !10536
  %221 = load i8, i8* %device273, align 4, !dbg !10536
  %conv274 = zext i8 %221 to i32, !dbg !10536
  %222 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10536
  %err_mask275 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %222, i32 0, i32 20, !dbg !10536
  %223 = load i32, i32* %err_mask275, align 4, !dbg !10536
  %224 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10536
  %err_mask276 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %224, i32 0, i32 20, !dbg !10536
  %225 = load i32, i32* %err_mask276, align 4, !dbg !10536
  %call277 = call i8* @ata_err_string(i32 %225) #7, !dbg !10536
  %226 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10536
  %err_mask278 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %226, i32 0, i32 20, !dbg !10536
  %227 = load i32, i32* %err_mask278, align 4, !dbg !10536
  %and279 = and i32 %227, 1024, !dbg !10536
  %tobool280 = icmp ne i32 %and279, 0, !dbg !10536
  %228 = zext i1 %tobool280 to i64, !dbg !10536
  %cond281 = select i1 %tobool280, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.164, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), !dbg !10536
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %171, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([167 x i8], [167 x i8]* @.str.163, i64 0, i64 0), i32 %conv236, i32 %conv237, i32 %conv238, i32 %conv239, i32 %conv240, i32 %conv241, i32 %conv242, i32 %conv243, i32 %conv244, i32 %conv245, i32 %conv246, i32 %conv247, i32 %197, i8* %arraydecay249, i8* %arraydecay250, i32 %conv252, i32 %conv254, i32 %conv256, i32 %conv258, i32 %conv260, i32 %conv262, i32 %conv264, i32 %conv266, i32 %conv268, i32 %conv270, i32 %conv272, i32 %conv274, i32 %223, i8* %call277, i8* %cond281) #7, !dbg !10536
  %229 = load %struct.ata_taskfile*, %struct.ata_taskfile** %res, align 8, !dbg !10537
  %command282 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %229, i32 0, i32 14, !dbg !10539
  %230 = load i8, i8* %command282, align 1, !dbg !10539
  %conv283 = zext i8 %230 to i32, !dbg !10537
  %and284 = and i32 %conv283, 235, !dbg !10540
  %tobool285 = icmp ne i32 %and284, 0, !dbg !10540
  br i1 %tobool285, label %if.then286, label %if.end321, !dbg !10541

if.then286:                                       ; preds = %if.end233
  %231 = load %struct.ata_taskfile*, %struct.ata_taskfile** %res, align 8, !dbg !10542
  %command287 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %231, i32 0, i32 14, !dbg !10545
  %232 = load i8, i8* %command287, align 1, !dbg !10545
  %conv288 = zext i8 %232 to i32, !dbg !10542
  %and289 = and i32 %conv288, 128, !dbg !10546
  %tobool290 = icmp ne i32 %and289, 0, !dbg !10546
  br i1 %tobool290, label %if.then291, label %if.else293, !dbg !10547

if.then291:                                       ; preds = %if.then286
  %233 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10548
  %dev292 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %233, i32 0, i32 1, !dbg !10548
  %234 = load %struct.ata_device*, %struct.ata_device** %dev292, align 8, !dbg !10548
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %234, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.165, i64 0, i64 0)) #7, !dbg !10548
  br label %if.end320, !dbg !10548

if.else293:                                       ; preds = %if.then286
  %235 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10549
  %dev294 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %235, i32 0, i32 1, !dbg !10549
  %236 = load %struct.ata_device*, %struct.ata_device** %dev294, align 8, !dbg !10549
  %237 = load %struct.ata_taskfile*, %struct.ata_taskfile** %res, align 8, !dbg !10549
  %command295 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %237, i32 0, i32 14, !dbg !10549
  %238 = load i8, i8* %command295, align 1, !dbg !10549
  %conv296 = zext i8 %238 to i32, !dbg !10549
  %and297 = and i32 %conv296, 64, !dbg !10549
  %tobool298 = icmp ne i32 %and297, 0, !dbg !10549
  %239 = zext i1 %tobool298 to i64, !dbg !10549
  %cond299 = select i1 %tobool298, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.167, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), !dbg !10549
  %240 = load %struct.ata_taskfile*, %struct.ata_taskfile** %res, align 8, !dbg !10549
  %command300 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %240, i32 0, i32 14, !dbg !10549
  %241 = load i8, i8* %command300, align 1, !dbg !10549
  %conv301 = zext i8 %241 to i32, !dbg !10549
  %and302 = and i32 %conv301, 32, !dbg !10549
  %tobool303 = icmp ne i32 %and302, 0, !dbg !10549
  %242 = zext i1 %tobool303 to i64, !dbg !10549
  %cond304 = select i1 %tobool303, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.168, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), !dbg !10549
  %243 = load %struct.ata_taskfile*, %struct.ata_taskfile** %res, align 8, !dbg !10549
  %command305 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %243, i32 0, i32 14, !dbg !10549
  %244 = load i8, i8* %command305, align 1, !dbg !10549
  %conv306 = zext i8 %244 to i32, !dbg !10549
  %and307 = and i32 %conv306, 8, !dbg !10549
  %tobool308 = icmp ne i32 %and307, 0, !dbg !10549
  %245 = zext i1 %tobool308 to i64, !dbg !10549
  %cond309 = select i1 %tobool308, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.169, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), !dbg !10549
  %246 = load %struct.ata_taskfile*, %struct.ata_taskfile** %res, align 8, !dbg !10549
  %command310 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %246, i32 0, i32 14, !dbg !10549
  %247 = load i8, i8* %command310, align 1, !dbg !10549
  %conv311 = zext i8 %247 to i32, !dbg !10549
  %and312 = and i32 %conv311, 2, !dbg !10549
  %tobool313 = icmp ne i32 %and312, 0, !dbg !10549
  %248 = zext i1 %tobool313 to i64, !dbg !10549
  %cond314 = select i1 %tobool313, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.170, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), !dbg !10549
  %249 = load %struct.ata_taskfile*, %struct.ata_taskfile** %res, align 8, !dbg !10549
  %command315 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %249, i32 0, i32 14, !dbg !10549
  %250 = load i8, i8* %command315, align 1, !dbg !10549
  %conv316 = zext i8 %250 to i32, !dbg !10549
  %and317 = and i32 %conv316, 1, !dbg !10549
  %tobool318 = icmp ne i32 %and317, 0, !dbg !10549
  %251 = zext i1 %tobool318 to i64, !dbg !10549
  %cond319 = select i1 %tobool318, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.171, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), !dbg !10549
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %236, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.166, i64 0, i64 0), i8* %cond299, i8* %cond304, i8* %cond309, i8* %cond314, i8* %cond319) #7, !dbg !10549
  br label %if.end320

if.end320:                                        ; preds = %if.else293, %if.then291
  br label %if.end321, !dbg !10550

if.end321:                                        ; preds = %if.end320, %if.end233
  %252 = load %struct.ata_taskfile*, %struct.ata_taskfile** %cmd, align 8, !dbg !10551
  %command322 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %252, i32 0, i32 14, !dbg !10553
  %253 = load i8, i8* %command322, align 1, !dbg !10553
  %conv323 = zext i8 %253 to i32, !dbg !10551
  %cmp324 = icmp ne i32 %conv323, 160, !dbg !10554
  br i1 %cmp324, label %land.lhs.true326, label %if.end358, !dbg !10555

land.lhs.true326:                                 ; preds = %if.end321
  %254 = load %struct.ata_taskfile*, %struct.ata_taskfile** %res, align 8, !dbg !10556
  %feature327 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %254, i32 0, i32 8, !dbg !10557
  %255 = load i8, i8* %feature327, align 1, !dbg !10557
  %conv328 = zext i8 %255 to i32, !dbg !10556
  %and329 = and i32 %conv328, 213, !dbg !10558
  %tobool330 = icmp ne i32 %and329, 0, !dbg !10558
  br i1 %tobool330, label %if.then331, label %if.end358, !dbg !10559

if.then331:                                       ; preds = %land.lhs.true326
  %256 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !10560
  %dev332 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %256, i32 0, i32 1, !dbg !10560
  %257 = load %struct.ata_device*, %struct.ata_device** %dev332, align 8, !dbg !10560
  %258 = load %struct.ata_taskfile*, %struct.ata_taskfile** %res, align 8, !dbg !10560
  %feature333 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %258, i32 0, i32 8, !dbg !10560
  %259 = load i8, i8* %feature333, align 1, !dbg !10560
  %conv334 = zext i8 %259 to i32, !dbg !10560
  %and335 = and i32 %conv334, 128, !dbg !10560
  %tobool336 = icmp ne i32 %and335, 0, !dbg !10560
  %260 = zext i1 %tobool336 to i64, !dbg !10560
  %cond337 = select i1 %tobool336, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.173, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), !dbg !10560
  %261 = load %struct.ata_taskfile*, %struct.ata_taskfile** %res, align 8, !dbg !10560
  %feature338 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %261, i32 0, i32 8, !dbg !10560
  %262 = load i8, i8* %feature338, align 1, !dbg !10560
  %conv339 = zext i8 %262 to i32, !dbg !10560
  %and340 = and i32 %conv339, 64, !dbg !10560
  %tobool341 = icmp ne i32 %and340, 0, !dbg !10560
  %263 = zext i1 %tobool341 to i64, !dbg !10560
  %cond342 = select i1 %tobool341, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.174, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), !dbg !10560
  %264 = load %struct.ata_taskfile*, %struct.ata_taskfile** %res, align 8, !dbg !10560
  %feature343 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %264, i32 0, i32 8, !dbg !10560
  %265 = load i8, i8* %feature343, align 1, !dbg !10560
  %conv344 = zext i8 %265 to i32, !dbg !10560
  %and345 = and i32 %conv344, 1, !dbg !10560
  %tobool346 = icmp ne i32 %and345, 0, !dbg !10560
  %266 = zext i1 %tobool346 to i64, !dbg !10560
  %cond347 = select i1 %tobool346, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.175, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), !dbg !10560
  %267 = load %struct.ata_taskfile*, %struct.ata_taskfile** %res, align 8, !dbg !10560
  %feature348 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %267, i32 0, i32 8, !dbg !10560
  %268 = load i8, i8* %feature348, align 1, !dbg !10560
  %conv349 = zext i8 %268 to i32, !dbg !10560
  %and350 = and i32 %conv349, 16, !dbg !10560
  %tobool351 = icmp ne i32 %and350, 0, !dbg !10560
  %269 = zext i1 %tobool351 to i64, !dbg !10560
  %cond352 = select i1 %tobool351, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.176, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), !dbg !10560
  %270 = load %struct.ata_taskfile*, %struct.ata_taskfile** %res, align 8, !dbg !10560
  %feature353 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %270, i32 0, i32 8, !dbg !10560
  %271 = load i8, i8* %feature353, align 1, !dbg !10560
  %conv354 = zext i8 %271 to i32, !dbg !10560
  %and355 = and i32 %conv354, 4, !dbg !10560
  %tobool356 = icmp ne i32 %and355, 0, !dbg !10560
  %272 = zext i1 %tobool356 to i64, !dbg !10560
  %cond357 = select i1 %tobool356, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.177, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), !dbg !10560
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %257, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.172, i64 0, i64 0), i8* %cond337, i8* %cond342, i8* %cond347, i8* %cond352, i8* %cond357) #7, !dbg !10560
  br label %if.end358, !dbg !10560

if.end358:                                        ; preds = %if.then331, %land.lhs.true326, %if.end321
  br label %for.inc359, !dbg !10561

for.inc359:                                       ; preds = %if.end358, %if.then190
  %273 = load i32, i32* %tag, align 4, !dbg !10415
  %inc360 = add i32 %273, 1, !dbg !10415
  store i32 %inc360, i32* %tag, align 4, !dbg !10415
  br label %for.cond170, !dbg !10415, !llvm.loop !10562

for.end361:                                       ; preds = %if.then, %if.then40, %land.end177
  ret void, !dbg !10564
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_eh_reset(%struct.ata_link* %link, i32 %classify, i32 (%struct.ata_link*, i64)* %prereset, i32 (%struct.ata_link*, i32*, i64)* %softreset, i32 (%struct.ata_link*, i32*, i64)* %hardreset, void (%struct.ata_link*, i32*)* %postreset) #0 !dbg !10565 {
entry:
  %lock.addr.i521 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i521, metadata !7379, metadata !DIExpression()), !dbg !10568
  %flags.addr.i522 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i522, metadata !7386, metadata !DIExpression()), !dbg !10570
  %tmp.i523 = alloca i32, align 4
  %tmp8.i524 = alloca i32, align 4
  %lock.addr.i519 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i519, metadata !7388, metadata !DIExpression()), !dbg !10571
  %lock.addr.i514 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i514, metadata !7379, metadata !DIExpression()), !dbg !10578
  %flags.addr.i515 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i515, metadata !7386, metadata !DIExpression()), !dbg !10580
  %tmp.i516 = alloca i32, align 4
  %tmp8.i517 = alloca i32, align 4
  %lock.addr.i512 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i512, metadata !7388, metadata !DIExpression()), !dbg !10581
  %lock.addr.i510 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i510, metadata !7379, metadata !DIExpression()), !dbg !10588
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7386, metadata !DIExpression()), !dbg !10590
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7388, metadata !DIExpression()), !dbg !10591
  %link.addr = alloca %struct.ata_link*, align 8
  %classify.addr = alloca i32, align 4
  %prereset.addr = alloca i32 (%struct.ata_link*, i64)*, align 8
  %softreset.addr = alloca i32 (%struct.ata_link*, i32*, i64)*, align 8
  %hardreset.addr = alloca i32 (%struct.ata_link*, i32*, i64)*, align 8
  %postreset.addr = alloca void (%struct.ata_link*, i32*)*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %slave = alloca %struct.ata_link*, align 8
  %ehc = alloca %struct.ata_eh_context*, align 8
  %sehc = alloca %struct.ata_eh_context*, align 8
  %classes = alloca i32*, align 8
  %lflags = alloca i32, align 4
  %verbose = alloca i32, align 4
  %max_tries = alloca i32, align 4
  %try = alloca i32, align 4
  %failed_link = alloca %struct.ata_link*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %deadline = alloca i64, align 8
  %now = alloca i64, align 8
  %reset = alloca i32 (%struct.ata_link*, i32*, i64)*, align 8
  %flags6 = alloca i64, align 8
  %sstatus = alloca i32, align 4
  %nr_unknown = alloca i32, align 4
  %rc = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp63 = alloca i32, align 4
  %__dummy67 = alloca i64, align 8
  %__dummy268 = alloca i64, align 8
  %tmp71 = alloca i32, align 4
  %deadline108 = alloca i64, align 8
  %tmp128 = alloca i32, align 4
  %tmp226 = alloca i32, align 4
  %__dummy313 = alloca i64, align 8
  %__dummy2314 = alloca i64, align 8
  %tmp317 = alloca i32, align 4
  %__dummy321 = alloca i64, align 8
  %__dummy2322 = alloca i64, align 8
  %tmp325 = alloca i32, align 4
  %__dummy430 = alloca i64, align 8
  %__dummy2431 = alloca i64, align 8
  %tmp434 = alloca i32, align 4
  %__dummy438 = alloca i64, align 8
  %__dummy2439 = alloca i64, align 8
  %tmp442 = alloca i32, align 4
  %delta = alloca i64, align 8
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !10598, metadata !DIExpression()), !dbg !10599
  store i32 %classify, i32* %classify.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %classify.addr, metadata !10600, metadata !DIExpression()), !dbg !10601
  store i32 (%struct.ata_link*, i64)* %prereset, i32 (%struct.ata_link*, i64)** %prereset.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.ata_link*, i64)** %prereset.addr, metadata !10602, metadata !DIExpression()), !dbg !10603
  store i32 (%struct.ata_link*, i32*, i64)* %softreset, i32 (%struct.ata_link*, i32*, i64)** %softreset.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.ata_link*, i32*, i64)** %softreset.addr, metadata !10604, metadata !DIExpression()), !dbg !10605
  store i32 (%struct.ata_link*, i32*, i64)* %hardreset, i32 (%struct.ata_link*, i32*, i64)** %hardreset.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.ata_link*, i32*, i64)** %hardreset.addr, metadata !10606, metadata !DIExpression()), !dbg !10607
  store void (%struct.ata_link*, i32*)* %postreset, void (%struct.ata_link*, i32*)** %postreset.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.ata_link*, i32*)** %postreset.addr, metadata !10608, metadata !DIExpression()), !dbg !10609
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !10610, metadata !DIExpression()), !dbg !10611
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10612
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %0, i32 0, i32 0, !dbg !10613
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !10613
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !10611
  call void @llvm.dbg.declare(metadata %struct.ata_link** %slave, metadata !10614, metadata !DIExpression()), !dbg !10615
  %2 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10616
  %slave_link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 26, !dbg !10617
  %3 = load %struct.ata_link*, %struct.ata_link** %slave_link, align 64, !dbg !10617
  store %struct.ata_link* %3, %struct.ata_link** %slave, align 8, !dbg !10615
  call void @llvm.dbg.declare(metadata %struct.ata_eh_context** %ehc, metadata !10618, metadata !DIExpression()), !dbg !10619
  %4 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10620
  %eh_context = getelementptr inbounds %struct.ata_link, %struct.ata_link* %4, i32 0, i32 12, !dbg !10621
  store %struct.ata_eh_context* %eh_context, %struct.ata_eh_context** %ehc, align 8, !dbg !10619
  call void @llvm.dbg.declare(metadata %struct.ata_eh_context** %sehc, metadata !10622, metadata !DIExpression()), !dbg !10623
  %5 = load %struct.ata_link*, %struct.ata_link** %slave, align 8, !dbg !10624
  %tobool = icmp ne %struct.ata_link* %5, null, !dbg !10624
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10624

cond.true:                                        ; preds = %entry
  %6 = load %struct.ata_link*, %struct.ata_link** %slave, align 8, !dbg !10625
  %eh_context2 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %6, i32 0, i32 12, !dbg !10626
  br label %cond.end, !dbg !10624

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10624

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.ata_eh_context* [ %eh_context2, %cond.true ], [ null, %cond.false ], !dbg !10624
  store %struct.ata_eh_context* %cond, %struct.ata_eh_context** %sehc, align 8, !dbg !10623
  call void @llvm.dbg.declare(metadata i32** %classes, metadata !10627, metadata !DIExpression()), !dbg !10628
  %7 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10629
  %classes3 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %7, i32 0, i32 3, !dbg !10630
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %classes3, i64 0, i64 0, !dbg !10629
  store i32* %arraydecay, i32** %classes, align 8, !dbg !10628
  call void @llvm.dbg.declare(metadata i32* %lflags, metadata !10631, metadata !DIExpression()), !dbg !10632
  %8 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10633
  %flags = getelementptr inbounds %struct.ata_link, %struct.ata_link* %8, i32 0, i32 5, !dbg !10634
  %9 = load i32, i32* %flags, align 16, !dbg !10634
  store i32 %9, i32* %lflags, align 4, !dbg !10632
  call void @llvm.dbg.declare(metadata i32* %verbose, metadata !10635, metadata !DIExpression()), !dbg !10636
  %10 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10637
  %i = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %10, i32 0, i32 0, !dbg !10638
  %flags4 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i, i32 0, i32 5, !dbg !10639
  %11 = load i32, i32* %flags4, align 4, !dbg !10639
  %and = and i32 %11, 8, !dbg !10640
  %tobool5 = icmp ne i32 %and, 0, !dbg !10641
  %lnot = xor i1 %tobool5, true, !dbg !10641
  %lnot.ext = zext i1 %lnot to i32, !dbg !10641
  store i32 %lnot.ext, i32* %verbose, align 4, !dbg !10636
  call void @llvm.dbg.declare(metadata i32* %max_tries, metadata !10642, metadata !DIExpression()), !dbg !10643
  store i32 0, i32* %max_tries, align 4, !dbg !10643
  call void @llvm.dbg.declare(metadata i32* %try, metadata !10644, metadata !DIExpression()), !dbg !10645
  store i32 0, i32* %try, align 4, !dbg !10645
  call void @llvm.dbg.declare(metadata %struct.ata_link** %failed_link, metadata !10646, metadata !DIExpression()), !dbg !10647
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !10648, metadata !DIExpression()), !dbg !10649
  call void @llvm.dbg.declare(metadata i64* %deadline, metadata !10650, metadata !DIExpression()), !dbg !10651
  call void @llvm.dbg.declare(metadata i64* %now, metadata !10652, metadata !DIExpression()), !dbg !10653
  call void @llvm.dbg.declare(metadata i32 (%struct.ata_link*, i32*, i64)** %reset, metadata !10654, metadata !DIExpression()), !dbg !10655
  call void @llvm.dbg.declare(metadata i64* %flags6, metadata !10656, metadata !DIExpression()), !dbg !10657
  call void @llvm.dbg.declare(metadata i32* %sstatus, metadata !10658, metadata !DIExpression()), !dbg !10659
  call void @llvm.dbg.declare(metadata i32* %nr_unknown, metadata !10660, metadata !DIExpression()), !dbg !10661
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !10662, metadata !DIExpression()), !dbg !10663
  br label %while.cond, !dbg !10664

while.cond:                                       ; preds = %while.body, %cond.end
  %12 = load i32, i32* %max_tries, align 4, !dbg !10665
  %idxprom = sext i32 %12 to i64, !dbg !10666
  %arrayidx = getelementptr [5 x i64], [5 x i64]* @ata_eh_reset_timeouts, i64 0, i64 %idxprom, !dbg !10666
  %13 = load i64, i64* %arrayidx, align 8, !dbg !10666
  %cmp = icmp ne i64 %13, -1, !dbg !10667
  br i1 %cmp, label %while.body, label %while.end, !dbg !10664

while.body:                                       ; preds = %while.cond
  %14 = load i32, i32* %max_tries, align 4, !dbg !10668
  %inc = add i32 %14, 1, !dbg !10668
  store i32 %inc, i32* %max_tries, align 4, !dbg !10668
  br label %while.cond, !dbg !10664, !llvm.loop !10669

while.end:                                        ; preds = %while.cond
  %15 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10670
  %flags7 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %15, i32 0, i32 5, !dbg !10672
  %16 = load i32, i32* %flags7, align 16, !dbg !10672
  %and8 = and i32 %16, 512, !dbg !10673
  %tobool9 = icmp ne i32 %and8, 0, !dbg !10673
  br i1 %tobool9, label %if.then, label %if.end, !dbg !10674

if.then:                                          ; preds = %while.end
  store i32 1, i32* %max_tries, align 4, !dbg !10675
  br label %if.end, !dbg !10676

if.end:                                           ; preds = %if.then, %while.end
  %17 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10677
  %flags10 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %17, i32 0, i32 5, !dbg !10679
  %18 = load i32, i32* %flags10, align 16, !dbg !10679
  %and11 = and i32 %18, 2, !dbg !10680
  %tobool12 = icmp ne i32 %and11, 0, !dbg !10680
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !10681

if.then13:                                        ; preds = %if.end
  store i32 (%struct.ata_link*, i32*, i64)* null, i32 (%struct.ata_link*, i32*, i64)** %hardreset.addr, align 8, !dbg !10682
  br label %if.end14, !dbg !10683

if.end14:                                         ; preds = %if.then13, %if.end
  %19 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10684
  %flags15 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %19, i32 0, i32 5, !dbg !10686
  %20 = load i32, i32* %flags15, align 16, !dbg !10686
  %and16 = and i32 %20, 4, !dbg !10687
  %tobool17 = icmp ne i32 %and16, 0, !dbg !10687
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !10688

if.then18:                                        ; preds = %if.end14
  store i32 (%struct.ata_link*, i32*, i64)* null, i32 (%struct.ata_link*, i32*, i64)** %softreset.addr, align 8, !dbg !10689
  br label %if.end19, !dbg !10690

if.end19:                                         ; preds = %if.then18, %if.end14
  %21 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10691
  %i20 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %21, i32 0, i32 0, !dbg !10693
  %flags21 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i20, i32 0, i32 5, !dbg !10694
  %22 = load i32, i32* %flags21, align 4, !dbg !10694
  %and22 = and i32 %22, 196608, !dbg !10695
  %tobool23 = icmp ne i32 %and22, 0, !dbg !10695
  br i1 %tobool23, label %if.then24, label %if.end58, !dbg !10696

if.then24:                                        ; preds = %if.end19
  %23 = load volatile i64, i64* @jiffies, align 8, !dbg !10697
  store i64 %23, i64* %now, align 8, !dbg !10699
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !10700, metadata !DIExpression()), !dbg !10702
  %24 = load i64, i64* %now, align 8, !dbg !10702
  %25 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10702
  %last_reset = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %25, i32 0, i32 8, !dbg !10702
  %26 = load i64, i64* %last_reset, align 8, !dbg !10702
  %sub = sub i64 %24, %26, !dbg !10702
  %cmp25 = icmp slt i64 %sub, 0, !dbg !10702
  %lnot26 = xor i1 %cmp25, true, !dbg !10702
  %lnot28 = xor i1 %lnot26, true, !dbg !10702
  %lnot.ext29 = zext i1 %lnot28 to i32, !dbg !10702
  store i32 %lnot.ext29, i32* %__ret_warn_on, align 4, !dbg !10702
  %27 = load i32, i32* %__ret_warn_on, align 4, !dbg !10703
  %tobool30 = icmp ne i32 %27, 0, !dbg !10703
  %lnot31 = xor i1 %tobool30, true, !dbg !10703
  %lnot33 = xor i1 %lnot31, true, !dbg !10703
  %lnot.ext34 = zext i1 %lnot33 to i32, !dbg !10703
  %conv = sext i32 %lnot.ext34 to i64, !dbg !10703
  %tobool35 = icmp ne i64 %conv, 0, !dbg !10703
  br i1 %tobool35, label %if.then36, label %if.end43, !dbg !10702

if.then36:                                        ; preds = %if.then24
  br label %do.body, !dbg !10703

do.body:                                          ; preds = %if.then36
  br label %do.body37, !dbg !10705

do.body37:                                        ; preds = %do.body
  br label %do.end, !dbg !10707

do.end:                                           ; preds = %do.body37
  br label %do.body38, !dbg !10705

do.body38:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), i32 2477, i32 2305, i64 12) #2, !dbg !10709, !srcloc !10711
  br label %do.end39, !dbg !10709

do.end39:                                         ; preds = %do.body38
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 329) #2, !dbg !10712, !srcloc !10714
  br label %do.body40, !dbg !10705

do.body40:                                        ; preds = %do.end39
  br label %do.end41, !dbg !10715

do.end41:                                         ; preds = %do.body40
  br label %do.end42, !dbg !10705

do.end42:                                         ; preds = %do.end41
  br label %if.end43, !dbg !10705

if.end43:                                         ; preds = %do.end42, %if.then24
  %28 = load i32, i32* %__ret_warn_on, align 4, !dbg !10702
  %tobool44 = icmp ne i32 %28, 0, !dbg !10702
  %lnot45 = xor i1 %tobool44, true, !dbg !10702
  %lnot47 = xor i1 %lnot45, true, !dbg !10702
  %lnot.ext48 = zext i1 %lnot47 to i32, !dbg !10702
  %conv49 = sext i32 %lnot.ext48 to i64, !dbg !10702
  store i64 %conv49, i64* %tmp, align 8, !dbg !10703
  %29 = load i64, i64* %tmp, align 8, !dbg !10702
  %30 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10717
  %last_reset50 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %30, i32 0, i32 8, !dbg !10718
  %31 = load i64, i64* %last_reset50, align 8, !dbg !10718
  %call = call i64 @ata_deadline(i64 %31, i64 5000) #7, !dbg !10719
  store i64 %call, i64* %deadline, align 8, !dbg !10720
  %32 = load i64, i64* %now, align 8, !dbg !10721
  %33 = load i64, i64* %deadline, align 8, !dbg !10721
  %sub51 = sub i64 %32, %33, !dbg !10721
  %cmp52 = icmp slt i64 %sub51, 0, !dbg !10721
  br i1 %cmp52, label %if.then54, label %if.end57, !dbg !10723

if.then54:                                        ; preds = %if.end43
  %34 = load i64, i64* %deadline, align 8, !dbg !10724
  %35 = load i64, i64* %now, align 8, !dbg !10725
  %sub55 = sub i64 %34, %35, !dbg !10726
  %call56 = call i64 @schedule_timeout_uninterruptible(i64 %sub55) #7, !dbg !10727
  br label %if.end57, !dbg !10727

if.end57:                                         ; preds = %if.then54, %if.end43
  br label %if.end58, !dbg !10728

if.end58:                                         ; preds = %if.end57, %if.end19
  br label %do.body59, !dbg !10729

do.body59:                                        ; preds = %if.end58
  br label %do.body60, !dbg !10730

do.body60:                                        ; preds = %do.body59
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10731, metadata !DIExpression()), !dbg !10733
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10734, metadata !DIExpression()), !dbg !10733
  %cmp61 = icmp eq i64* %__dummy, %__dummy2, !dbg !10733
  %conv62 = zext i1 %cmp61 to i32, !dbg !10733
  store i32 1, i32* %tmp63, align 4, !dbg !10733
  %36 = load i32, i32* %tmp63, align 4, !dbg !10733
  br label %do.body64, !dbg !10735

do.body64:                                        ; preds = %do.body60
  br label %do.body65, !dbg !10736

do.body65:                                        ; preds = %do.body64
  br label %do.body66, !dbg !10737

do.body66:                                        ; preds = %do.body65
  call void @llvm.dbg.declare(metadata i64* %__dummy67, metadata !10739, metadata !DIExpression()), !dbg !10742
  call void @llvm.dbg.declare(metadata i64* %__dummy268, metadata !10743, metadata !DIExpression()), !dbg !10742
  %cmp69 = icmp eq i64* %__dummy67, %__dummy268, !dbg !10742
  %conv70 = zext i1 %cmp69 to i32, !dbg !10742
  store i32 1, i32* %tmp71, align 4, !dbg !10742
  %37 = load i32, i32* %tmp71, align 4, !dbg !10742
  %call72 = call i64 @arch_local_irq_save() #7, !dbg !10744
  store i64 %call72, i64* %flags6, align 8, !dbg !10744
  br label %do.end73, !dbg !10744

do.end73:                                         ; preds = %do.body66
  br label %do.end74, !dbg !10737

do.end74:                                         ; preds = %do.end73
  br label %do.body75, !dbg !10736

do.body75:                                        ; preds = %do.end74
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !10745, !srcloc !10746
  br label %do.body76, !dbg !10745

do.body76:                                        ; preds = %do.body75
  %38 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10747
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %38, i32 0, i32 2, !dbg !10747
  %39 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !10747
  store %struct.spinlock* %39, %struct.spinlock** %lock.addr.i, align 8
  %40 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10748
  %41 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %40, i32 0, i32 0, !dbg !10749
  %rlock.i = bitcast %union.anon* %41 to %struct.raw_spinlock*, !dbg !10749
  br label %do.end78, !dbg !10747

do.end78:                                         ; preds = %do.body76
  br label %do.end79, !dbg !10745

do.end79:                                         ; preds = %do.end78
  br label %do.end80, !dbg !10736

do.end80:                                         ; preds = %do.end79
  br label %do.end81, !dbg !10735

do.end81:                                         ; preds = %do.end80
  br label %do.end82, !dbg !10730

do.end82:                                         ; preds = %do.end81
  %42 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10750
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %42, i32 0, i32 4, !dbg !10751
  %43 = load i32, i32* %pflags, align 32, !dbg !10752
  %or = or i32 %43, 256, !dbg !10752
  store i32 %or, i32* %pflags, align 32, !dbg !10752
  %44 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10753
  %lock83 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %44, i32 0, i32 2, !dbg !10754
  %45 = load %struct.spinlock*, %struct.spinlock** %lock83, align 16, !dbg !10754
  %46 = load i64, i64* %flags6, align 8, !dbg !10755
  store %struct.spinlock* %45, %struct.spinlock** %lock.addr.i510, align 8
  store i64 %46, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1101, metadata !7437, metadata !DIExpression()) #2, !dbg !10756
  call void @llvm.dbg.declare(metadata !1101, metadata !7441, metadata !DIExpression()) #2, !dbg !10756
  store i32 1, i32* %tmp.i, align 4, !dbg !10756
  %47 = load i32, i32* %tmp.i, align 4, !dbg !10756
  call void @llvm.dbg.declare(metadata !1101, metadata !7442, metadata !DIExpression()) #2, !dbg !10757
  call void @llvm.dbg.declare(metadata !1101, metadata !7448, metadata !DIExpression()) #2, !dbg !10757
  store i32 1, i32* %tmp8.i, align 4, !dbg !10757
  %48 = load i32, i32* %tmp8.i, align 4, !dbg !10757
  %49 = load i64, i64* %flags.addr.i, align 8, !dbg !10758
  call void @arch_local_irq_restore(i64 %49) #9, !dbg !10758
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !10759, !srcloc !7452
  %50 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i510, align 8, !dbg !10760
  %51 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %50, i32 0, i32 0, !dbg !10760
  %rlock.i511 = bitcast %union.anon* %51 to %struct.raw_spinlock*, !dbg !10760
  %52 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10761
  call void @ata_eh_about_to_do(%struct.ata_link* %52, %struct.ata_device* null, i32 6) #7, !dbg !10762
  %53 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10763
  %call84 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %53, i32 2) #7, !dbg !10763
  store %struct.ata_device* %call84, %struct.ata_device** %dev, align 8, !dbg !10763
  br label %for.cond, !dbg !10763

for.cond:                                         ; preds = %for.inc, %do.end82
  %54 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10765
  %tobool85 = icmp ne %struct.ata_device* %54, null, !dbg !10763
  br i1 %tobool85, label %for.body, label %for.end, !dbg !10763

for.body:                                         ; preds = %for.cond
  %55 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10767
  %pio_mode = getelementptr inbounds %struct.ata_device, %struct.ata_device* %55, i32 0, i32 13, !dbg !10769
  store i8 8, i8* %pio_mode, align 16, !dbg !10770
  %56 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10771
  %dma_mode = getelementptr inbounds %struct.ata_device, %struct.ata_device* %56, i32 0, i32 14, !dbg !10772
  store i8 -1, i8* %dma_mode, align 1, !dbg !10773
  %57 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10774
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %57, i32 0, i32 1, !dbg !10776
  %58 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !10776
  %set_piomode = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %58, i32 0, i32 7, !dbg !10777
  %59 = load void (%struct.ata_port*, %struct.ata_device*)*, void (%struct.ata_port*, %struct.ata_device*)** %set_piomode, align 8, !dbg !10777
  %tobool86 = icmp ne void (%struct.ata_port*, %struct.ata_device*)* %59, null, !dbg !10774
  br i1 %tobool86, label %if.then87, label %if.end90, !dbg !10778

if.then87:                                        ; preds = %for.body
  %60 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10779
  %ops88 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %60, i32 0, i32 1, !dbg !10780
  %61 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops88, align 8, !dbg !10780
  %set_piomode89 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %61, i32 0, i32 7, !dbg !10781
  %62 = load void (%struct.ata_port*, %struct.ata_device*)*, void (%struct.ata_port*, %struct.ata_device*)** %set_piomode89, align 8, !dbg !10781
  %63 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10782
  %64 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10783
  call void %62(%struct.ata_port* %63, %struct.ata_device* %64) #7, !dbg !10779
  br label %if.end90, !dbg !10779

if.end90:                                         ; preds = %if.then87, %for.body
  br label %for.inc, !dbg !10784

for.inc:                                          ; preds = %if.end90
  %65 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10765
  %66 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10765
  %call91 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %65, %struct.ata_link* %66, i32 2) #7, !dbg !10765
  store %struct.ata_device* %call91, %struct.ata_device** %dev, align 8, !dbg !10765
  br label %for.cond, !dbg !10765, !llvm.loop !10785

for.end:                                          ; preds = %for.cond
  store i32 (%struct.ata_link*, i32*, i64)* null, i32 (%struct.ata_link*, i32*, i64)** %reset, align 8, !dbg !10787
  %67 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10788
  %i92 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %67, i32 0, i32 0, !dbg !10789
  %action = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i92, i32 0, i32 3, !dbg !10790
  %68 = load i32, i32* %action, align 8, !dbg !10791
  %and93 = and i32 %68, -7, !dbg !10791
  store i32 %and93, i32* %action, align 8, !dbg !10791
  %69 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %hardreset.addr, align 8, !dbg !10792
  %tobool94 = icmp ne i32 (%struct.ata_link*, i32*, i64)* %69, null, !dbg !10792
  br i1 %tobool94, label %if.then95, label %if.else, !dbg !10794

if.then95:                                        ; preds = %for.end
  %70 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %hardreset.addr, align 8, !dbg !10795
  store i32 (%struct.ata_link*, i32*, i64)* %70, i32 (%struct.ata_link*, i32*, i64)** %reset, align 8, !dbg !10797
  %71 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10798
  %i96 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %71, i32 0, i32 0, !dbg !10799
  %action97 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i96, i32 0, i32 3, !dbg !10800
  %72 = load i32, i32* %action97, align 8, !dbg !10801
  %or98 = or i32 %72, 4, !dbg !10801
  store i32 %or98, i32* %action97, align 8, !dbg !10801
  br label %if.end105, !dbg !10802

if.else:                                          ; preds = %for.end
  %73 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %softreset.addr, align 8, !dbg !10803
  %tobool99 = icmp ne i32 (%struct.ata_link*, i32*, i64)* %73, null, !dbg !10803
  br i1 %tobool99, label %if.then100, label %if.end104, !dbg !10805

if.then100:                                       ; preds = %if.else
  %74 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %softreset.addr, align 8, !dbg !10806
  store i32 (%struct.ata_link*, i32*, i64)* %74, i32 (%struct.ata_link*, i32*, i64)** %reset, align 8, !dbg !10808
  %75 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10809
  %i101 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %75, i32 0, i32 0, !dbg !10810
  %action102 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i101, i32 0, i32 3, !dbg !10811
  %76 = load i32, i32* %action102, align 8, !dbg !10812
  %or103 = or i32 %76, 2, !dbg !10812
  store i32 %or103, i32* %action102, align 8, !dbg !10812
  br label %if.end104, !dbg !10813

if.end104:                                        ; preds = %if.then100, %if.else
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.then95
  %77 = load i32 (%struct.ata_link*, i64)*, i32 (%struct.ata_link*, i64)** %prereset.addr, align 8, !dbg !10814
  %tobool106 = icmp ne i32 (%struct.ata_link*, i64)* %77, null, !dbg !10814
  br i1 %tobool106, label %if.then107, label %if.end186, !dbg !10816

if.then107:                                       ; preds = %if.end105
  call void @llvm.dbg.declare(metadata i64* %deadline108, metadata !10817, metadata !DIExpression()), !dbg !10819
  %78 = load volatile i64, i64* @jiffies, align 8, !dbg !10820
  %call109 = call i64 @ata_deadline(i64 %78, i64 10000) #7, !dbg !10821
  store i64 %call109, i64* %deadline108, align 8, !dbg !10819
  %79 = load %struct.ata_link*, %struct.ata_link** %slave, align 8, !dbg !10822
  %tobool110 = icmp ne %struct.ata_link* %79, null, !dbg !10822
  br i1 %tobool110, label %if.then111, label %if.end120, !dbg !10824

if.then111:                                       ; preds = %if.then107
  %80 = load %struct.ata_eh_context*, %struct.ata_eh_context** %sehc, align 8, !dbg !10825
  %i112 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %80, i32 0, i32 0, !dbg !10827
  %action113 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i112, i32 0, i32 3, !dbg !10828
  %81 = load i32, i32* %action113, align 8, !dbg !10829
  %and114 = and i32 %81, -7, !dbg !10829
  store i32 %and114, i32* %action113, align 8, !dbg !10829
  %82 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10830
  %i115 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %82, i32 0, i32 0, !dbg !10831
  %action116 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i115, i32 0, i32 3, !dbg !10832
  %83 = load i32, i32* %action116, align 8, !dbg !10832
  %84 = load %struct.ata_eh_context*, %struct.ata_eh_context** %sehc, align 8, !dbg !10833
  %i117 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %84, i32 0, i32 0, !dbg !10834
  %action118 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i117, i32 0, i32 3, !dbg !10835
  %85 = load i32, i32* %action118, align 8, !dbg !10836
  %or119 = or i32 %85, %83, !dbg !10836
  store i32 %or119, i32* %action118, align 8, !dbg !10836
  br label %if.end120, !dbg !10837

if.end120:                                        ; preds = %if.then111, %if.then107
  %86 = load i32 (%struct.ata_link*, i64)*, i32 (%struct.ata_link*, i64)** %prereset.addr, align 8, !dbg !10838
  %87 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10839
  %88 = load i64, i64* %deadline108, align 8, !dbg !10840
  %call121 = call i32 %86(%struct.ata_link* %87, i64 %88) #7, !dbg !10838
  store i32 %call121, i32* %rc, align 4, !dbg !10841
  %89 = load %struct.ata_link*, %struct.ata_link** %slave, align 8, !dbg !10842
  %tobool122 = icmp ne %struct.ata_link* %89, null, !dbg !10842
  br i1 %tobool122, label %land.lhs.true, label %if.end139, !dbg !10844

land.lhs.true:                                    ; preds = %if.end120
  %90 = load i32, i32* %rc, align 4, !dbg !10845
  %cmp123 = icmp eq i32 %90, 0, !dbg !10846
  br i1 %cmp123, label %if.then127, label %lor.lhs.false, !dbg !10847

lor.lhs.false:                                    ; preds = %land.lhs.true
  %91 = load i32, i32* %rc, align 4, !dbg !10848
  %cmp125 = icmp eq i32 %91, -2, !dbg !10849
  br i1 %cmp125, label %if.then127, label %if.end139, !dbg !10850

if.then127:                                       ; preds = %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %tmp128, metadata !10851, metadata !DIExpression()), !dbg !10853
  %92 = load i32 (%struct.ata_link*, i64)*, i32 (%struct.ata_link*, i64)** %prereset.addr, align 8, !dbg !10854
  %93 = load %struct.ata_link*, %struct.ata_link** %slave, align 8, !dbg !10855
  %94 = load i64, i64* %deadline108, align 8, !dbg !10856
  %call129 = call i32 %92(%struct.ata_link* %93, i64 %94) #7, !dbg !10854
  store i32 %call129, i32* %tmp128, align 4, !dbg !10857
  %95 = load i32, i32* %tmp128, align 4, !dbg !10858
  %cmp130 = icmp ne i32 %95, -2, !dbg !10860
  br i1 %cmp130, label %if.then132, label %if.end133, !dbg !10861

if.then132:                                       ; preds = %if.then127
  %96 = load i32, i32* %tmp128, align 4, !dbg !10862
  store i32 %96, i32* %rc, align 4, !dbg !10863
  br label %if.end133, !dbg !10864

if.end133:                                        ; preds = %if.then132, %if.then127
  %97 = load %struct.ata_eh_context*, %struct.ata_eh_context** %sehc, align 8, !dbg !10865
  %i134 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %97, i32 0, i32 0, !dbg !10866
  %action135 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i134, i32 0, i32 3, !dbg !10867
  %98 = load i32, i32* %action135, align 8, !dbg !10867
  %99 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10868
  %i136 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %99, i32 0, i32 0, !dbg !10869
  %action137 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i136, i32 0, i32 3, !dbg !10870
  %100 = load i32, i32* %action137, align 8, !dbg !10871
  %or138 = or i32 %100, %98, !dbg !10871
  store i32 %or138, i32* %action137, align 8, !dbg !10871
  br label %if.end139, !dbg !10872

if.end139:                                        ; preds = %if.end133, %lor.lhs.false, %if.end120
  %101 = load i32, i32* %rc, align 4, !dbg !10873
  %tobool140 = icmp ne i32 %101, 0, !dbg !10873
  br i1 %tobool140, label %if.then141, label %if.end159, !dbg !10875

if.then141:                                       ; preds = %if.end139
  %102 = load i32, i32* %rc, align 4, !dbg !10876
  %cmp142 = icmp eq i32 %102, -2, !dbg !10879
  br i1 %cmp142, label %if.then144, label %if.else157, !dbg !10880

if.then144:                                       ; preds = %if.then141
  %103 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10881
  call void (%struct.ata_link*, i8*, i8*, ...) @ata_link_printk(%struct.ata_link* %103, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.105, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.106, i64 0, i64 0)) #7, !dbg !10881
  %104 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10883
  %i145 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %104, i32 0, i32 0, !dbg !10884
  %action146 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i145, i32 0, i32 3, !dbg !10885
  %105 = load i32, i32* %action146, align 8, !dbg !10886
  %and147 = and i32 %105, -7, !dbg !10886
  store i32 %and147, i32* %action146, align 8, !dbg !10886
  %106 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10887
  %call148 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %106, i32 2) #7, !dbg !10887
  store %struct.ata_device* %call148, %struct.ata_device** %dev, align 8, !dbg !10887
  br label %for.cond149, !dbg !10887

for.cond149:                                      ; preds = %for.inc154, %if.then144
  %107 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10889
  %tobool150 = icmp ne %struct.ata_device* %107, null, !dbg !10887
  br i1 %tobool150, label %for.body151, label %for.end156, !dbg !10887

for.body151:                                      ; preds = %for.cond149
  %108 = load i32*, i32** %classes, align 8, !dbg !10891
  %109 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10892
  %devno = getelementptr inbounds %struct.ata_device, %struct.ata_device* %109, i32 0, i32 1, !dbg !10893
  %110 = load i32, i32* %devno, align 8, !dbg !10893
  %idxprom152 = zext i32 %110 to i64, !dbg !10891
  %arrayidx153 = getelementptr i32, i32* %108, i64 %idxprom152, !dbg !10891
  store i32 11, i32* %arrayidx153, align 4, !dbg !10894
  br label %for.inc154, !dbg !10891

for.inc154:                                       ; preds = %for.body151
  %111 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10889
  %112 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10889
  %call155 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %111, %struct.ata_link* %112, i32 2) #7, !dbg !10889
  store %struct.ata_device* %call155, %struct.ata_device** %dev, align 8, !dbg !10889
  br label %for.cond149, !dbg !10889, !llvm.loop !10895

for.end156:                                       ; preds = %for.cond149
  store i32 0, i32* %rc, align 4, !dbg !10897
  br label %if.end158, !dbg !10898

if.else157:                                       ; preds = %if.then141
  %113 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10899
  %114 = load i32, i32* %rc, align 4, !dbg !10899
  call void (%struct.ata_link*, i8*, i8*, ...) @ata_link_printk(%struct.ata_link* %113, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.107, i64 0, i64 0), i32 %114) #7, !dbg !10899
  br label %if.end158

if.end158:                                        ; preds = %if.else157, %for.end156
  br label %out, !dbg !10900

if.end159:                                        ; preds = %if.end139
  %115 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %reset, align 8, !dbg !10901
  %tobool160 = icmp ne i32 (%struct.ata_link*, i32*, i64)* %115, null, !dbg !10901
  br i1 %tobool160, label %land.lhs.true161, label %if.end185, !dbg !10903

land.lhs.true161:                                 ; preds = %if.end159
  %116 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10904
  %i162 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %116, i32 0, i32 0, !dbg !10905
  %action163 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i162, i32 0, i32 3, !dbg !10906
  %117 = load i32, i32* %action163, align 8, !dbg !10906
  %and164 = and i32 %117, 6, !dbg !10907
  %tobool165 = icmp ne i32 %and164, 0, !dbg !10907
  br i1 %tobool165, label %if.end185, label %if.then166, !dbg !10908

if.then166:                                       ; preds = %land.lhs.true161
  %118 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10909
  %call167 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %118, i32 2) #7, !dbg !10909
  store %struct.ata_device* %call167, %struct.ata_device** %dev, align 8, !dbg !10909
  br label %for.cond168, !dbg !10909

for.cond168:                                      ; preds = %for.inc174, %if.then166
  %119 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10912
  %tobool169 = icmp ne %struct.ata_device* %119, null, !dbg !10909
  br i1 %tobool169, label %for.body170, label %for.end176, !dbg !10909

for.body170:                                      ; preds = %for.cond168
  %120 = load i32*, i32** %classes, align 8, !dbg !10914
  %121 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10915
  %devno171 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %121, i32 0, i32 1, !dbg !10916
  %122 = load i32, i32* %devno171, align 8, !dbg !10916
  %idxprom172 = zext i32 %122 to i64, !dbg !10914
  %arrayidx173 = getelementptr i32, i32* %120, i64 %idxprom172, !dbg !10914
  store i32 11, i32* %arrayidx173, align 4, !dbg !10917
  br label %for.inc174, !dbg !10914

for.inc174:                                       ; preds = %for.body170
  %123 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !10912
  %124 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10912
  %call175 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %123, %struct.ata_link* %124, i32 2) #7, !dbg !10912
  store %struct.ata_device* %call175, %struct.ata_device** %dev, align 8, !dbg !10912
  br label %for.cond168, !dbg !10912, !llvm.loop !10918

for.end176:                                       ; preds = %for.cond168
  %125 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10920
  %pflags177 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %125, i32 0, i32 4, !dbg !10922
  %126 = load i32, i32* %pflags177, align 32, !dbg !10922
  %and178 = and i32 %126, 4, !dbg !10923
  %tobool179 = icmp ne i32 %and178, 0, !dbg !10923
  br i1 %tobool179, label %land.lhs.true180, label %if.end184, !dbg !10924

land.lhs.true180:                                 ; preds = %for.end176
  %127 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10925
  %call181 = call zeroext i1 @ata_is_host_link(%struct.ata_link* %127) #7, !dbg !10926
  br i1 %call181, label %if.then183, label %if.end184, !dbg !10927

if.then183:                                       ; preds = %land.lhs.true180
  %128 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10928
  call void @ata_eh_thaw_port(%struct.ata_port* %128) #7, !dbg !10929
  br label %if.end184, !dbg !10929

if.end184:                                        ; preds = %if.then183, %land.lhs.true180, %for.end176
  store i32 0, i32* %rc, align 4, !dbg !10930
  br label %out, !dbg !10931

if.end185:                                        ; preds = %land.lhs.true161, %if.end159
  br label %if.end186, !dbg !10932

if.end186:                                        ; preds = %if.end185, %if.end105
  br label %retry, !dbg !10814

retry:                                            ; preds = %if.end509, %if.end186
  call void @llvm.dbg.label(metadata !10933), !dbg !10934
  %129 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10935
  %call187 = call zeroext i1 @ata_is_host_link(%struct.ata_link* %129) #7, !dbg !10937
  br i1 %call187, label %if.then188, label %if.end189, !dbg !10938

if.then188:                                       ; preds = %retry
  %130 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !10939
  call void @ata_eh_freeze_port(%struct.ata_port* %130) #7, !dbg !10940
  br label %if.end189, !dbg !10940

if.end189:                                        ; preds = %if.then188, %retry
  %131 = load volatile i64, i64* @jiffies, align 8, !dbg !10941
  %132 = load i32, i32* %try, align 4, !dbg !10942
  %inc190 = add i32 %132, 1, !dbg !10942
  store i32 %inc190, i32* %try, align 4, !dbg !10942
  %idxprom191 = sext i32 %132 to i64, !dbg !10943
  %arrayidx192 = getelementptr [5 x i64], [5 x i64]* @ata_eh_reset_timeouts, i64 0, i64 %idxprom191, !dbg !10943
  %133 = load i64, i64* %arrayidx192, align 8, !dbg !10943
  %call193 = call i64 @ata_deadline(i64 %131, i64 %133) #7, !dbg !10944
  store i64 %call193, i64* %deadline, align 8, !dbg !10945
  %134 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %reset, align 8, !dbg !10946
  %tobool194 = icmp ne i32 (%struct.ata_link*, i32*, i64)* %134, null, !dbg !10946
  br i1 %tobool194, label %if.then195, label %if.else247, !dbg !10948

if.then195:                                       ; preds = %if.end189
  %135 = load i32, i32* %verbose, align 4, !dbg !10949
  %tobool196 = icmp ne i32 %135, 0, !dbg !10949
  br i1 %tobool196, label %if.then197, label %if.end201, !dbg !10952

if.then197:                                       ; preds = %if.then195
  %136 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10953
  %137 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %reset, align 8, !dbg !10953
  %138 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %softreset.addr, align 8, !dbg !10953
  %cmp198 = icmp eq i32 (%struct.ata_link*, i32*, i64)* %137, %138, !dbg !10953
  %139 = zext i1 %cmp198 to i64, !dbg !10953
  %cond200 = select i1 %cmp198, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.109, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.110, i64 0, i64 0), !dbg !10953
  call void (%struct.ata_link*, i8*, i8*, ...) @ata_link_printk(%struct.ata_link* %136, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.108, i64 0, i64 0), i8* %cond200) #7, !dbg !10953
  br label %if.end201, !dbg !10953

if.end201:                                        ; preds = %if.then197, %if.then195
  %140 = load volatile i64, i64* @jiffies, align 8, !dbg !10954
  %141 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10955
  %last_reset202 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %141, i32 0, i32 8, !dbg !10956
  store i64 %140, i64* %last_reset202, align 8, !dbg !10957
  %142 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %reset, align 8, !dbg !10958
  %143 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %hardreset.addr, align 8, !dbg !10960
  %cmp203 = icmp eq i32 (%struct.ata_link*, i32*, i64)* %142, %143, !dbg !10961
  br i1 %cmp203, label %if.then205, label %if.else209, !dbg !10962

if.then205:                                       ; preds = %if.end201
  %144 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10963
  %i206 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %144, i32 0, i32 0, !dbg !10964
  %flags207 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i206, i32 0, i32 5, !dbg !10965
  %145 = load i32, i32* %flags207, align 4, !dbg !10966
  %or208 = or i32 %145, 131072, !dbg !10966
  store i32 %or208, i32* %flags207, align 4, !dbg !10966
  br label %if.end213, !dbg !10963

if.else209:                                       ; preds = %if.end201
  %146 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !10967
  %i210 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %146, i32 0, i32 0, !dbg !10968
  %flags211 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i210, i32 0, i32 5, !dbg !10969
  %147 = load i32, i32* %flags211, align 4, !dbg !10970
  %or212 = or i32 %147, 65536, !dbg !10970
  store i32 %or212, i32* %flags211, align 4, !dbg !10970
  br label %if.end213

if.end213:                                        ; preds = %if.else209, %if.then205
  %148 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10971
  %149 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %reset, align 8, !dbg !10972
  %150 = load i32*, i32** %classes, align 8, !dbg !10973
  %151 = load i64, i64* %deadline, align 8, !dbg !10974
  %call214 = call i32 @ata_do_reset(%struct.ata_link* %148, i32 (%struct.ata_link*, i32*, i64)* %149, i32* %150, i64 %151, i1 zeroext true) #7, !dbg !10975
  store i32 %call214, i32* %rc, align 4, !dbg !10976
  %152 = load i32, i32* %rc, align 4, !dbg !10977
  %tobool215 = icmp ne i32 %152, 0, !dbg !10977
  br i1 %tobool215, label %land.lhs.true216, label %if.end220, !dbg !10979

land.lhs.true216:                                 ; preds = %if.end213
  %153 = load i32, i32* %rc, align 4, !dbg !10980
  %cmp217 = icmp ne i32 %153, -11, !dbg !10981
  br i1 %cmp217, label %if.then219, label %if.end220, !dbg !10982

if.then219:                                       ; preds = %land.lhs.true216
  %154 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !10983
  store %struct.ata_link* %154, %struct.ata_link** %failed_link, align 8, !dbg !10985
  br label %fail, !dbg !10986

if.end220:                                        ; preds = %land.lhs.true216, %if.end213
  %155 = load %struct.ata_link*, %struct.ata_link** %slave, align 8, !dbg !10987
  %tobool221 = icmp ne %struct.ata_link* %155, null, !dbg !10987
  br i1 %tobool221, label %land.lhs.true222, label %if.end232, !dbg !10989

land.lhs.true222:                                 ; preds = %if.end220
  %156 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %reset, align 8, !dbg !10990
  %157 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %hardreset.addr, align 8, !dbg !10991
  %cmp223 = icmp eq i32 (%struct.ata_link*, i32*, i64)* %156, %157, !dbg !10992
  br i1 %cmp223, label %if.then225, label %if.end232, !dbg !10993

if.then225:                                       ; preds = %land.lhs.true222
  call void @llvm.dbg.declare(metadata i32* %tmp226, metadata !10994, metadata !DIExpression()), !dbg !10996
  %158 = load i32, i32* %verbose, align 4, !dbg !10997
  %tobool227 = icmp ne i32 %158, 0, !dbg !10997
  br i1 %tobool227, label %if.then228, label %if.end229, !dbg !10999

if.then228:                                       ; preds = %if.then225
  %159 = load %struct.ata_link*, %struct.ata_link** %slave, align 8, !dbg !11000
  call void (%struct.ata_link*, i8*, i8*, ...) @ata_link_printk(%struct.ata_link* %159, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.111, i64 0, i64 0)) #7, !dbg !11000
  br label %if.end229, !dbg !11000

if.end229:                                        ; preds = %if.then228, %if.then225
  %160 = load %struct.ata_link*, %struct.ata_link** %slave, align 8, !dbg !11001
  call void @ata_eh_about_to_do(%struct.ata_link* %160, %struct.ata_device* null, i32 6) #7, !dbg !11002
  %161 = load %struct.ata_link*, %struct.ata_link** %slave, align 8, !dbg !11003
  %162 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %reset, align 8, !dbg !11004
  %163 = load i32*, i32** %classes, align 8, !dbg !11005
  %164 = load i64, i64* %deadline, align 8, !dbg !11006
  %call230 = call i32 @ata_do_reset(%struct.ata_link* %161, i32 (%struct.ata_link*, i32*, i64)* %162, i32* %163, i64 %164, i1 zeroext false) #7, !dbg !11007
  store i32 %call230, i32* %tmp226, align 4, !dbg !11008
  %165 = load i32, i32* %tmp226, align 4, !dbg !11009
  switch i32 %165, label %sw.default [
    i32 -11, label %sw.bb
    i32 0, label %sw.bb231
  ], !dbg !11010

sw.bb:                                            ; preds = %if.end229
  store i32 -11, i32* %rc, align 4, !dbg !11011
  br label %sw.bb231, !dbg !11013

sw.bb231:                                         ; preds = %if.end229, %sw.bb
  br label %sw.epilog, !dbg !11014

sw.default:                                       ; preds = %if.end229
  %166 = load %struct.ata_link*, %struct.ata_link** %slave, align 8, !dbg !11015
  store %struct.ata_link* %166, %struct.ata_link** %failed_link, align 8, !dbg !11016
  %167 = load i32, i32* %tmp226, align 4, !dbg !11017
  store i32 %167, i32* %rc, align 4, !dbg !11018
  br label %fail, !dbg !11019

sw.epilog:                                        ; preds = %sw.bb231
  br label %if.end232, !dbg !11020

if.end232:                                        ; preds = %sw.epilog, %land.lhs.true222, %if.end220
  %168 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %reset, align 8, !dbg !11021
  %169 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %hardreset.addr, align 8, !dbg !11023
  %cmp233 = icmp eq i32 (%struct.ata_link*, i32*, i64)* %168, %169, !dbg !11024
  br i1 %cmp233, label %land.lhs.true235, label %if.end246, !dbg !11025

land.lhs.true235:                                 ; preds = %if.end232
  %170 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11026
  %171 = load i32, i32* %rc, align 4, !dbg !11027
  %call236 = call i32 @ata_eh_followup_srst_needed(%struct.ata_link* %170, i32 %171) #7, !dbg !11028
  %tobool237 = icmp ne i32 %call236, 0, !dbg !11028
  br i1 %tobool237, label %if.then238, label %if.end246, !dbg !11029

if.then238:                                       ; preds = %land.lhs.true235
  %172 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %softreset.addr, align 8, !dbg !11030
  store i32 (%struct.ata_link*, i32*, i64)* %172, i32 (%struct.ata_link*, i32*, i64)** %reset, align 8, !dbg !11032
  %173 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %reset, align 8, !dbg !11033
  %tobool239 = icmp ne i32 (%struct.ata_link*, i32*, i64)* %173, null, !dbg !11033
  br i1 %tobool239, label %if.end241, label %if.then240, !dbg !11035

if.then240:                                       ; preds = %if.then238
  %174 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11036
  call void (%struct.ata_link*, i8*, i8*, ...) @ata_link_printk(%struct.ata_link* %174, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.112, i64 0, i64 0)) #7, !dbg !11036
  %175 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11038
  store %struct.ata_link* %175, %struct.ata_link** %failed_link, align 8, !dbg !11039
  store i32 -22, i32* %rc, align 4, !dbg !11040
  br label %fail, !dbg !11041

if.end241:                                        ; preds = %if.then238
  %176 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11042
  call void @ata_eh_about_to_do(%struct.ata_link* %176, %struct.ata_device* null, i32 6) #7, !dbg !11043
  %177 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11044
  %178 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %reset, align 8, !dbg !11045
  %179 = load i32*, i32** %classes, align 8, !dbg !11046
  %180 = load i64, i64* %deadline, align 8, !dbg !11047
  %call242 = call i32 @ata_do_reset(%struct.ata_link* %177, i32 (%struct.ata_link*, i32*, i64)* %178, i32* %179, i64 %180, i1 zeroext true) #7, !dbg !11048
  store i32 %call242, i32* %rc, align 4, !dbg !11049
  %181 = load i32, i32* %rc, align 4, !dbg !11050
  %tobool243 = icmp ne i32 %181, 0, !dbg !11050
  br i1 %tobool243, label %if.then244, label %if.end245, !dbg !11052

if.then244:                                       ; preds = %if.end241
  %182 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11053
  store %struct.ata_link* %182, %struct.ata_link** %failed_link, align 8, !dbg !11055
  br label %fail, !dbg !11056

if.end245:                                        ; preds = %if.end241
  br label %if.end246, !dbg !11057

if.end246:                                        ; preds = %if.end245, %land.lhs.true235, %if.end232
  br label %if.end256, !dbg !11058

if.else247:                                       ; preds = %if.end189
  %183 = load i32, i32* %verbose, align 4, !dbg !11059
  %tobool248 = icmp ne i32 %183, 0, !dbg !11059
  br i1 %tobool248, label %if.then249, label %if.end250, !dbg !11062

if.then249:                                       ; preds = %if.else247
  %184 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11063
  call void (%struct.ata_link*, i8*, i8*, ...) @ata_link_printk(%struct.ata_link* %184, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.113, i64 0, i64 0)) #7, !dbg !11063
  br label %if.end250, !dbg !11063

if.end250:                                        ; preds = %if.then249, %if.else247
  %185 = load i32, i32* %lflags, align 4, !dbg !11064
  %and251 = and i32 %185, 24, !dbg !11066
  %tobool252 = icmp ne i32 %and251, 0, !dbg !11066
  br i1 %tobool252, label %if.end255, label %if.then253, !dbg !11067

if.then253:                                       ; preds = %if.end250
  %186 = load i32, i32* %lflags, align 4, !dbg !11068
  %or254 = or i32 %186, 8, !dbg !11068
  store i32 %or254, i32* %lflags, align 4, !dbg !11068
  br label %if.end255, !dbg !11069

if.end255:                                        ; preds = %if.then253, %if.end250
  br label %if.end256

if.end256:                                        ; preds = %if.end255, %if.end246
  %187 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11070
  %call257 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %187, i32 2) #7, !dbg !11070
  store %struct.ata_device* %call257, %struct.ata_device** %dev, align 8, !dbg !11070
  br label %for.cond258, !dbg !11070

for.cond258:                                      ; preds = %for.inc283, %if.end256
  %188 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11072
  %tobool259 = icmp ne %struct.ata_device* %188, null, !dbg !11070
  br i1 %tobool259, label %for.body260, label %for.end285, !dbg !11070

for.body260:                                      ; preds = %for.cond258
  %189 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11074
  %pio_mode261 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %189, i32 0, i32 13, !dbg !11076
  store i8 8, i8* %pio_mode261, align 16, !dbg !11077
  %190 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11078
  %flags262 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %190, i32 0, i32 3, !dbg !11079
  %191 = load i64, i64* %flags262, align 16, !dbg !11080
  %and263 = and i64 %191, -32769, !dbg !11080
  store i64 %and263, i64* %flags262, align 16, !dbg !11080
  %192 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11081
  %call264 = call %struct.ata_link* @ata_dev_phys_link(%struct.ata_device* %192) #7, !dbg !11083
  %call265 = call zeroext i1 @ata_phys_link_offline(%struct.ata_link* %call264) #7, !dbg !11084
  br i1 %call265, label %if.then266, label %if.end267, !dbg !11085

if.then266:                                       ; preds = %for.body260
  br label %for.inc283, !dbg !11086

if.end267:                                        ; preds = %for.body260
  %193 = load i32, i32* %lflags, align 4, !dbg !11087
  %and268 = and i32 %193, 8, !dbg !11089
  %tobool269 = icmp ne i32 %and268, 0, !dbg !11089
  br i1 %tobool269, label %if.then270, label %if.else274, !dbg !11090

if.then270:                                       ; preds = %if.end267
  %194 = load i32*, i32** %classes, align 8, !dbg !11091
  %195 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11092
  %devno271 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %195, i32 0, i32 1, !dbg !11093
  %196 = load i32, i32* %devno271, align 8, !dbg !11093
  %idxprom272 = zext i32 %196 to i64, !dbg !11091
  %arrayidx273 = getelementptr i32, i32* %194, i64 %idxprom272, !dbg !11091
  store i32 1, i32* %arrayidx273, align 4, !dbg !11094
  br label %if.end282, !dbg !11091

if.else274:                                       ; preds = %if.end267
  %197 = load i32, i32* %lflags, align 4, !dbg !11095
  %and275 = and i32 %197, 16, !dbg !11097
  %tobool276 = icmp ne i32 %and275, 0, !dbg !11097
  br i1 %tobool276, label %if.then277, label %if.end281, !dbg !11098

if.then277:                                       ; preds = %if.else274
  %198 = load i32*, i32** %classes, align 8, !dbg !11099
  %199 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11100
  %devno278 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %199, i32 0, i32 1, !dbg !11101
  %200 = load i32, i32* %devno278, align 8, !dbg !11101
  %idxprom279 = zext i32 %200 to i64, !dbg !11099
  %arrayidx280 = getelementptr i32, i32* %198, i64 %idxprom279, !dbg !11099
  store i32 8, i32* %arrayidx280, align 4, !dbg !11102
  br label %if.end281, !dbg !11099

if.end281:                                        ; preds = %if.then277, %if.else274
  br label %if.end282

if.end282:                                        ; preds = %if.end281, %if.then270
  br label %for.inc283, !dbg !11103

for.inc283:                                       ; preds = %if.end282, %if.then266
  %201 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11072
  %202 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11072
  %call284 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %201, %struct.ata_link* %202, i32 2) #7, !dbg !11072
  store %struct.ata_device* %call284, %struct.ata_device** %dev, align 8, !dbg !11072
  br label %for.cond258, !dbg !11072, !llvm.loop !11104

for.end285:                                       ; preds = %for.cond258
  %203 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11106
  %call286 = call i32 @sata_scr_read(%struct.ata_link* %203, i32 0, i32* %sstatus) #7, !dbg !11108
  %cmp287 = icmp eq i32 %call286, 0, !dbg !11109
  br i1 %cmp287, label %if.then289, label %if.end291, !dbg !11110

if.then289:                                       ; preds = %for.end285
  %204 = load i32, i32* %sstatus, align 4, !dbg !11111
  %shr = lshr i32 %204, 4, !dbg !11112
  %and290 = and i32 %shr, 15, !dbg !11113
  %205 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11114
  %sata_spd = getelementptr inbounds %struct.ata_link, %struct.ata_link* %205, i32 0, i32 9, !dbg !11115
  store i32 %and290, i32* %sata_spd, align 32, !dbg !11116
  br label %if.end291, !dbg !11114

if.end291:                                        ; preds = %if.then289, %for.end285
  %206 = load %struct.ata_link*, %struct.ata_link** %slave, align 8, !dbg !11117
  %tobool292 = icmp ne %struct.ata_link* %206, null, !dbg !11117
  br i1 %tobool292, label %land.lhs.true293, label %if.end301, !dbg !11119

land.lhs.true293:                                 ; preds = %if.end291
  %207 = load %struct.ata_link*, %struct.ata_link** %slave, align 8, !dbg !11120
  %call294 = call i32 @sata_scr_read(%struct.ata_link* %207, i32 0, i32* %sstatus) #7, !dbg !11121
  %cmp295 = icmp eq i32 %call294, 0, !dbg !11122
  br i1 %cmp295, label %if.then297, label %if.end301, !dbg !11123

if.then297:                                       ; preds = %land.lhs.true293
  %208 = load i32, i32* %sstatus, align 4, !dbg !11124
  %shr298 = lshr i32 %208, 4, !dbg !11125
  %and299 = and i32 %shr298, 15, !dbg !11126
  %209 = load %struct.ata_link*, %struct.ata_link** %slave, align 8, !dbg !11127
  %sata_spd300 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %209, i32 0, i32 9, !dbg !11128
  store i32 %and299, i32* %sata_spd300, align 32, !dbg !11129
  br label %if.end301, !dbg !11127

if.end301:                                        ; preds = %if.then297, %land.lhs.true293, %if.end291
  %210 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11130
  %call302 = call zeroext i1 @ata_is_host_link(%struct.ata_link* %210) #7, !dbg !11132
  br i1 %call302, label %if.then303, label %if.end304, !dbg !11133

if.then303:                                       ; preds = %if.end301
  %211 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11134
  call void @ata_eh_thaw_port(%struct.ata_port* %211) #7, !dbg !11135
  br label %if.end304, !dbg !11135

if.end304:                                        ; preds = %if.then303, %if.end301
  %212 = load void (%struct.ata_link*, i32*)*, void (%struct.ata_link*, i32*)** %postreset.addr, align 8, !dbg !11136
  %tobool305 = icmp ne void (%struct.ata_link*, i32*)* %212, null, !dbg !11136
  br i1 %tobool305, label %if.then306, label %if.end310, !dbg !11138

if.then306:                                       ; preds = %if.end304
  %213 = load void (%struct.ata_link*, i32*)*, void (%struct.ata_link*, i32*)** %postreset.addr, align 8, !dbg !11139
  %214 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11141
  %215 = load i32*, i32** %classes, align 8, !dbg !11142
  call void %213(%struct.ata_link* %214, i32* %215) #7, !dbg !11139
  %216 = load %struct.ata_link*, %struct.ata_link** %slave, align 8, !dbg !11143
  %tobool307 = icmp ne %struct.ata_link* %216, null, !dbg !11143
  br i1 %tobool307, label %if.then308, label %if.end309, !dbg !11145

if.then308:                                       ; preds = %if.then306
  %217 = load void (%struct.ata_link*, i32*)*, void (%struct.ata_link*, i32*)** %postreset.addr, align 8, !dbg !11146
  %218 = load %struct.ata_link*, %struct.ata_link** %slave, align 8, !dbg !11147
  %219 = load i32*, i32** %classes, align 8, !dbg !11148
  call void %217(%struct.ata_link* %218, i32* %219) #7, !dbg !11146
  br label %if.end309, !dbg !11146

if.end309:                                        ; preds = %if.then308, %if.then306
  br label %if.end310, !dbg !11149

if.end310:                                        ; preds = %if.end309, %if.end304
  br label %do.body311, !dbg !11150

do.body311:                                       ; preds = %if.end310
  br label %do.body312, !dbg !11151

do.body312:                                       ; preds = %do.body311
  call void @llvm.dbg.declare(metadata i64* %__dummy313, metadata !11152, metadata !DIExpression()), !dbg !11154
  call void @llvm.dbg.declare(metadata i64* %__dummy2314, metadata !11155, metadata !DIExpression()), !dbg !11154
  %cmp315 = icmp eq i64* %__dummy313, %__dummy2314, !dbg !11154
  %conv316 = zext i1 %cmp315 to i32, !dbg !11154
  store i32 1, i32* %tmp317, align 4, !dbg !11154
  %220 = load i32, i32* %tmp317, align 4, !dbg !11154
  br label %do.body318, !dbg !11156

do.body318:                                       ; preds = %do.body312
  br label %do.body319, !dbg !11157

do.body319:                                       ; preds = %do.body318
  br label %do.body320, !dbg !11158

do.body320:                                       ; preds = %do.body319
  call void @llvm.dbg.declare(metadata i64* %__dummy321, metadata !11160, metadata !DIExpression()), !dbg !11163
  call void @llvm.dbg.declare(metadata i64* %__dummy2322, metadata !11164, metadata !DIExpression()), !dbg !11163
  %cmp323 = icmp eq i64* %__dummy321, %__dummy2322, !dbg !11163
  %conv324 = zext i1 %cmp323 to i32, !dbg !11163
  store i32 1, i32* %tmp325, align 4, !dbg !11163
  %221 = load i32, i32* %tmp325, align 4, !dbg !11163
  %call326 = call i64 @arch_local_irq_save() #7, !dbg !11165
  store i64 %call326, i64* %flags6, align 8, !dbg !11165
  br label %do.end327, !dbg !11165

do.end327:                                        ; preds = %do.body320
  br label %do.end328, !dbg !11158

do.end328:                                        ; preds = %do.end327
  br label %do.body329, !dbg !11157

do.body329:                                       ; preds = %do.end328
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !11166, !srcloc !11167
  br label %do.body330, !dbg !11166

do.body330:                                       ; preds = %do.body329
  %222 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11168
  %ap331 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %222, i32 0, i32 0, !dbg !11168
  %223 = load %struct.ata_port*, %struct.ata_port** %ap331, align 64, !dbg !11168
  %lock332 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %223, i32 0, i32 2, !dbg !11168
  %224 = load %struct.spinlock*, %struct.spinlock** %lock332, align 16, !dbg !11168
  store %struct.spinlock* %224, %struct.spinlock** %lock.addr.i512, align 8
  %225 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i512, align 8, !dbg !11169
  %226 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %225, i32 0, i32 0, !dbg !11170
  %rlock.i513 = bitcast %union.anon* %226 to %struct.raw_spinlock*, !dbg !11170
  br label %do.end334, !dbg !11168

do.end334:                                        ; preds = %do.body330
  br label %do.end335, !dbg !11166

do.end335:                                        ; preds = %do.end334
  br label %do.end336, !dbg !11157

do.end336:                                        ; preds = %do.end335
  br label %do.end337, !dbg !11156

do.end337:                                        ; preds = %do.end336
  br label %do.end338, !dbg !11151

do.end338:                                        ; preds = %do.end337
  %227 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11171
  %eh_info = getelementptr inbounds %struct.ata_link, %struct.ata_link* %227, i32 0, i32 11, !dbg !11172
  %228 = bitcast %struct.ata_eh_info* %eh_info to i8*, !dbg !11173
  call void @llvm.memset.p0i8.i64(i8* align 8 %228, i8 0, i64 120, i1 false), !dbg !11173
  %229 = load %struct.ata_link*, %struct.ata_link** %slave, align 8, !dbg !11174
  %tobool339 = icmp ne %struct.ata_link* %229, null, !dbg !11174
  br i1 %tobool339, label %if.then340, label %if.end342, !dbg !11176

if.then340:                                       ; preds = %do.end338
  %230 = load %struct.ata_link*, %struct.ata_link** %slave, align 8, !dbg !11177
  %eh_info341 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %230, i32 0, i32 11, !dbg !11178
  %231 = bitcast %struct.ata_eh_info* %eh_info341 to i8*, !dbg !11179
  call void @llvm.memset.p0i8.i64(i8* align 8 %231, i8 0, i64 120, i1 false), !dbg !11179
  br label %if.end342, !dbg !11179

if.end342:                                        ; preds = %if.then340, %do.end338
  %232 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11180
  %pflags343 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %232, i32 0, i32 4, !dbg !11181
  %233 = load i32, i32* %pflags343, align 32, !dbg !11182
  %and344 = and i32 %233, -2, !dbg !11182
  store i32 %and344, i32* %pflags343, align 32, !dbg !11182
  %234 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11183
  %ap345 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %234, i32 0, i32 0, !dbg !11184
  %235 = load %struct.ata_port*, %struct.ata_port** %ap345, align 64, !dbg !11184
  %lock346 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %235, i32 0, i32 2, !dbg !11185
  %236 = load %struct.spinlock*, %struct.spinlock** %lock346, align 16, !dbg !11185
  %237 = load i64, i64* %flags6, align 8, !dbg !11186
  store %struct.spinlock* %236, %struct.spinlock** %lock.addr.i514, align 8
  store i64 %237, i64* %flags.addr.i515, align 8
  call void @llvm.dbg.declare(metadata !1101, metadata !7437, metadata !DIExpression()) #2, !dbg !11187
  call void @llvm.dbg.declare(metadata !1101, metadata !7441, metadata !DIExpression()) #2, !dbg !11187
  store i32 1, i32* %tmp.i516, align 4, !dbg !11187
  %238 = load i32, i32* %tmp.i516, align 4, !dbg !11187
  call void @llvm.dbg.declare(metadata !1101, metadata !7442, metadata !DIExpression()) #2, !dbg !11188
  call void @llvm.dbg.declare(metadata !1101, metadata !7448, metadata !DIExpression()) #2, !dbg !11188
  store i32 1, i32* %tmp8.i517, align 4, !dbg !11188
  %239 = load i32, i32* %tmp8.i517, align 4, !dbg !11188
  %240 = load i64, i64* %flags.addr.i515, align 8, !dbg !11189
  call void @arch_local_irq_restore(i64 %240) #9, !dbg !11189
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !11190, !srcloc !7452
  %241 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i514, align 8, !dbg !11191
  %242 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %241, i32 0, i32 0, !dbg !11191
  %rlock.i518 = bitcast %union.anon* %242 to %struct.raw_spinlock*, !dbg !11191
  %243 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11192
  %pflags347 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %243, i32 0, i32 4, !dbg !11194
  %244 = load i32, i32* %pflags347, align 32, !dbg !11194
  %and348 = and i32 %244, 4, !dbg !11195
  %tobool349 = icmp ne i32 %and348, 0, !dbg !11195
  br i1 %tobool349, label %if.then350, label %if.end351, !dbg !11196

if.then350:                                       ; preds = %if.end342
  %245 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11197
  call void @ata_eh_thaw_port(%struct.ata_port* %245) #7, !dbg !11198
  br label %if.end351, !dbg !11198

if.end351:                                        ; preds = %if.then350, %if.end342
  store i32 0, i32* %nr_unknown, align 4, !dbg !11199
  %246 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11200
  %call352 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %246, i32 2) #7, !dbg !11200
  store %struct.ata_device* %call352, %struct.ata_device** %dev, align 8, !dbg !11200
  br label %for.cond353, !dbg !11200

for.cond353:                                      ; preds = %for.inc400, %if.end351
  %247 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11202
  %tobool354 = icmp ne %struct.ata_device* %247, null, !dbg !11200
  br i1 %tobool354, label %for.body355, label %for.end402, !dbg !11200

for.body355:                                      ; preds = %for.cond353
  %248 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11204
  %call356 = call %struct.ata_link* @ata_dev_phys_link(%struct.ata_device* %248) #7, !dbg !11207
  %call357 = call zeroext i1 @ata_phys_link_online(%struct.ata_link* %call356) #7, !dbg !11208
  br i1 %call357, label %if.then358, label %if.else370, !dbg !11209

if.then358:                                       ; preds = %for.body355
  %249 = load i32*, i32** %classes, align 8, !dbg !11210
  %250 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11213
  %devno359 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %250, i32 0, i32 1, !dbg !11214
  %251 = load i32, i32* %devno359, align 8, !dbg !11214
  %idxprom360 = zext i32 %251 to i64, !dbg !11210
  %arrayidx361 = getelementptr i32, i32* %249, i64 %idxprom360, !dbg !11210
  %252 = load i32, i32* %arrayidx361, align 4, !dbg !11210
  %cmp362 = icmp eq i32 %252, 0, !dbg !11215
  br i1 %cmp362, label %if.then364, label %if.end369, !dbg !11216

if.then364:                                       ; preds = %if.then358
  %253 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11217
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %253, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.105, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.114, i64 0, i64 0)) #7, !dbg !11217
  %254 = load i32*, i32** %classes, align 8, !dbg !11219
  %255 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11220
  %devno365 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %255, i32 0, i32 1, !dbg !11221
  %256 = load i32, i32* %devno365, align 8, !dbg !11221
  %idxprom366 = zext i32 %256 to i64, !dbg !11219
  %arrayidx367 = getelementptr i32, i32* %254, i64 %idxprom366, !dbg !11219
  store i32 11, i32* %arrayidx367, align 4, !dbg !11222
  %257 = load i32, i32* %nr_unknown, align 4, !dbg !11223
  %inc368 = add i32 %257, 1, !dbg !11223
  store i32 %inc368, i32* %nr_unknown, align 4, !dbg !11223
  br label %if.end369, !dbg !11224

if.end369:                                        ; preds = %if.then364, %if.then358
  br label %if.end399, !dbg !11225

if.else370:                                       ; preds = %for.body355
  %258 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11226
  %call371 = call %struct.ata_link* @ata_dev_phys_link(%struct.ata_device* %258) #7, !dbg !11228
  %call372 = call zeroext i1 @ata_phys_link_offline(%struct.ata_link* %call371) #7, !dbg !11229
  br i1 %call372, label %if.then373, label %if.else387, !dbg !11230

if.then373:                                       ; preds = %if.else370
  %259 = load i32*, i32** %classes, align 8, !dbg !11231
  %260 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11234
  %devno374 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %260, i32 0, i32 1, !dbg !11235
  %261 = load i32, i32* %devno374, align 8, !dbg !11235
  %idxprom375 = zext i32 %261 to i64, !dbg !11231
  %arrayidx376 = getelementptr i32, i32* %259, i64 %idxprom375, !dbg !11231
  %262 = load i32, i32* %arrayidx376, align 4, !dbg !11231
  %call377 = call i32 @ata_class_enabled(i32 %262) #7, !dbg !11236
  %tobool378 = icmp ne i32 %call377, 0, !dbg !11236
  br i1 %tobool378, label %if.then379, label %if.end383, !dbg !11237

if.then379:                                       ; preds = %if.then373
  %263 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11238
  %264 = load i32*, i32** %classes, align 8, !dbg !11238
  %265 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11238
  %devno380 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %265, i32 0, i32 1, !dbg !11238
  %266 = load i32, i32* %devno380, align 8, !dbg !11238
  %idxprom381 = zext i32 %266 to i64, !dbg !11238
  %arrayidx382 = getelementptr i32, i32* %264, i64 %idxprom381, !dbg !11238
  %267 = load i32, i32* %arrayidx382, align 4, !dbg !11238
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %263, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.105, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.115, i64 0, i64 0), i32 %267) #7, !dbg !11238
  br label %if.end383, !dbg !11238

if.end383:                                        ; preds = %if.then379, %if.then373
  %268 = load i32*, i32** %classes, align 8, !dbg !11239
  %269 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11240
  %devno384 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %269, i32 0, i32 1, !dbg !11241
  %270 = load i32, i32* %devno384, align 8, !dbg !11241
  %idxprom385 = zext i32 %270 to i64, !dbg !11239
  %arrayidx386 = getelementptr i32, i32* %268, i64 %idxprom385, !dbg !11239
  store i32 11, i32* %arrayidx386, align 4, !dbg !11242
  br label %if.end398, !dbg !11243

if.else387:                                       ; preds = %if.else370
  %271 = load i32*, i32** %classes, align 8, !dbg !11244
  %272 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11246
  %devno388 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %272, i32 0, i32 1, !dbg !11247
  %273 = load i32, i32* %devno388, align 8, !dbg !11247
  %idxprom389 = zext i32 %273 to i64, !dbg !11244
  %arrayidx390 = getelementptr i32, i32* %271, i64 %idxprom389, !dbg !11244
  %274 = load i32, i32* %arrayidx390, align 4, !dbg !11244
  %cmp391 = icmp eq i32 %274, 0, !dbg !11248
  br i1 %cmp391, label %if.then393, label %if.end397, !dbg !11249

if.then393:                                       ; preds = %if.else387
  %275 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11250
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %275, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.105, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.116, i64 0, i64 0)) #7, !dbg !11250
  %276 = load i32*, i32** %classes, align 8, !dbg !11252
  %277 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11253
  %devno394 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %277, i32 0, i32 1, !dbg !11254
  %278 = load i32, i32* %devno394, align 8, !dbg !11254
  %idxprom395 = zext i32 %278 to i64, !dbg !11252
  %arrayidx396 = getelementptr i32, i32* %276, i64 %idxprom395, !dbg !11252
  store i32 11, i32* %arrayidx396, align 4, !dbg !11255
  br label %if.end397, !dbg !11256

if.end397:                                        ; preds = %if.then393, %if.else387
  br label %if.end398

if.end398:                                        ; preds = %if.end397, %if.end383
  br label %if.end399

if.end399:                                        ; preds = %if.end398, %if.end369
  br label %for.inc400, !dbg !11257

for.inc400:                                       ; preds = %if.end399
  %279 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11202
  %280 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11202
  %call401 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %279, %struct.ata_link* %280, i32 2) #7, !dbg !11202
  store %struct.ata_device* %call401, %struct.ata_device** %dev, align 8, !dbg !11202
  br label %for.cond353, !dbg !11202, !llvm.loop !11258

for.end402:                                       ; preds = %for.cond353
  %281 = load i32, i32* %classify.addr, align 4, !dbg !11260
  %tobool403 = icmp ne i32 %281, 0, !dbg !11260
  br i1 %tobool403, label %land.lhs.true404, label %if.end411, !dbg !11262

land.lhs.true404:                                 ; preds = %for.end402
  %282 = load i32, i32* %nr_unknown, align 4, !dbg !11263
  %tobool405 = icmp ne i32 %282, 0, !dbg !11263
  br i1 %tobool405, label %if.then406, label %if.end411, !dbg !11264

if.then406:                                       ; preds = %land.lhs.true404
  %283 = load i32, i32* %try, align 4, !dbg !11265
  %284 = load i32, i32* %max_tries, align 4, !dbg !11268
  %cmp407 = icmp slt i32 %283, %284, !dbg !11269
  br i1 %cmp407, label %if.then409, label %if.end410, !dbg !11270

if.then409:                                       ; preds = %if.then406
  %285 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11271
  %286 = load i32, i32* %nr_unknown, align 4, !dbg !11271
  call void (%struct.ata_link*, i8*, i8*, ...) @ata_link_printk(%struct.ata_link* %285, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.117, i64 0, i64 0), i32 %286) #7, !dbg !11271
  %287 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11273
  store %struct.ata_link* %287, %struct.ata_link** %failed_link, align 8, !dbg !11274
  store i32 -11, i32* %rc, align 4, !dbg !11275
  br label %fail, !dbg !11276

if.end410:                                        ; preds = %if.then406
  %288 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11277
  %289 = load i32, i32* %nr_unknown, align 4, !dbg !11277
  call void (%struct.ata_link*, i8*, i8*, ...) @ata_link_printk(%struct.ata_link* %288, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.118, i64 0, i64 0), i32 %289) #7, !dbg !11277
  br label %if.end411, !dbg !11278

if.end411:                                        ; preds = %if.end410, %land.lhs.true404, %for.end402
  %290 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11279
  call void @ata_eh_done(%struct.ata_link* %290, %struct.ata_device* null, i32 6) #7, !dbg !11280
  %291 = load %struct.ata_link*, %struct.ata_link** %slave, align 8, !dbg !11281
  %tobool412 = icmp ne %struct.ata_link* %291, null, !dbg !11281
  br i1 %tobool412, label %if.then413, label %if.end414, !dbg !11283

if.then413:                                       ; preds = %if.end411
  %292 = load %struct.ata_link*, %struct.ata_link** %slave, align 8, !dbg !11284
  call void @ata_eh_done(%struct.ata_link* %292, %struct.ata_device* null, i32 6) #7, !dbg !11285
  br label %if.end414, !dbg !11285

if.end414:                                        ; preds = %if.then413, %if.end411
  %293 = load volatile i64, i64* @jiffies, align 8, !dbg !11286
  %294 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !11287
  %last_reset415 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %294, i32 0, i32 8, !dbg !11288
  store i64 %293, i64* %last_reset415, align 8, !dbg !11289
  %295 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !11290
  %i416 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %295, i32 0, i32 0, !dbg !11291
  %action417 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i416, i32 0, i32 3, !dbg !11292
  %296 = load i32, i32* %action417, align 8, !dbg !11293
  %or418 = or i32 %296, 1, !dbg !11293
  store i32 %or418, i32* %action417, align 8, !dbg !11293
  %297 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11294
  %lpm_policy = getelementptr inbounds %struct.ata_link, %struct.ata_link* %297, i32 0, i32 10, !dbg !11295
  store i32 0, i32* %lpm_policy, align 4, !dbg !11296
  store i32 0, i32* %rc, align 4, !dbg !11297
  br label %out, !dbg !11298

out:                                              ; preds = %if.end489, %if.end469, %if.end414, %if.end184, %if.end158
  call void @llvm.dbg.label(metadata !11299), !dbg !11300
  %298 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !11301
  %i419 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %298, i32 0, i32 0, !dbg !11302
  %flags420 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i419, i32 0, i32 5, !dbg !11303
  %299 = load i32, i32* %flags420, align 4, !dbg !11304
  %and421 = and i32 %299, -2, !dbg !11304
  store i32 %and421, i32* %flags420, align 4, !dbg !11304
  %300 = load %struct.ata_link*, %struct.ata_link** %slave, align 8, !dbg !11305
  %tobool422 = icmp ne %struct.ata_link* %300, null, !dbg !11305
  br i1 %tobool422, label %if.then423, label %if.end427, !dbg !11307

if.then423:                                       ; preds = %out
  %301 = load %struct.ata_eh_context*, %struct.ata_eh_context** %sehc, align 8, !dbg !11308
  %i424 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %301, i32 0, i32 0, !dbg !11309
  %flags425 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i424, i32 0, i32 5, !dbg !11310
  %302 = load i32, i32* %flags425, align 4, !dbg !11311
  %and426 = and i32 %302, -2, !dbg !11311
  store i32 %and426, i32* %flags425, align 4, !dbg !11311
  br label %if.end427, !dbg !11308

if.end427:                                        ; preds = %if.then423, %out
  br label %do.body428, !dbg !11312

do.body428:                                       ; preds = %if.end427
  br label %do.body429, !dbg !11313

do.body429:                                       ; preds = %do.body428
  call void @llvm.dbg.declare(metadata i64* %__dummy430, metadata !11314, metadata !DIExpression()), !dbg !11316
  call void @llvm.dbg.declare(metadata i64* %__dummy2431, metadata !11317, metadata !DIExpression()), !dbg !11316
  %cmp432 = icmp eq i64* %__dummy430, %__dummy2431, !dbg !11316
  %conv433 = zext i1 %cmp432 to i32, !dbg !11316
  store i32 1, i32* %tmp434, align 4, !dbg !11316
  %303 = load i32, i32* %tmp434, align 4, !dbg !11316
  br label %do.body435, !dbg !11318

do.body435:                                       ; preds = %do.body429
  br label %do.body436, !dbg !11319

do.body436:                                       ; preds = %do.body435
  br label %do.body437, !dbg !11320

do.body437:                                       ; preds = %do.body436
  call void @llvm.dbg.declare(metadata i64* %__dummy438, metadata !11322, metadata !DIExpression()), !dbg !11325
  call void @llvm.dbg.declare(metadata i64* %__dummy2439, metadata !11326, metadata !DIExpression()), !dbg !11325
  %cmp440 = icmp eq i64* %__dummy438, %__dummy2439, !dbg !11325
  %conv441 = zext i1 %cmp440 to i32, !dbg !11325
  store i32 1, i32* %tmp442, align 4, !dbg !11325
  %304 = load i32, i32* %tmp442, align 4, !dbg !11325
  %call443 = call i64 @arch_local_irq_save() #7, !dbg !11327
  store i64 %call443, i64* %flags6, align 8, !dbg !11327
  br label %do.end444, !dbg !11327

do.end444:                                        ; preds = %do.body437
  br label %do.end445, !dbg !11320

do.end445:                                        ; preds = %do.end444
  br label %do.body446, !dbg !11319

do.body446:                                       ; preds = %do.end445
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !11328, !srcloc !11329
  br label %do.body447, !dbg !11328

do.body447:                                       ; preds = %do.body446
  %305 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11330
  %lock448 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %305, i32 0, i32 2, !dbg !11330
  %306 = load %struct.spinlock*, %struct.spinlock** %lock448, align 16, !dbg !11330
  store %struct.spinlock* %306, %struct.spinlock** %lock.addr.i519, align 8
  %307 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i519, align 8, !dbg !11331
  %308 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %307, i32 0, i32 0, !dbg !11332
  %rlock.i520 = bitcast %union.anon* %308 to %struct.raw_spinlock*, !dbg !11332
  br label %do.end450, !dbg !11330

do.end450:                                        ; preds = %do.body447
  br label %do.end451, !dbg !11328

do.end451:                                        ; preds = %do.end450
  br label %do.end452, !dbg !11319

do.end452:                                        ; preds = %do.end451
  br label %do.end453, !dbg !11318

do.end453:                                        ; preds = %do.end452
  br label %do.end454, !dbg !11313

do.end454:                                        ; preds = %do.end453
  %309 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11333
  %pflags455 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %309, i32 0, i32 4, !dbg !11334
  %310 = load i32, i32* %pflags455, align 32, !dbg !11335
  %and456 = and i32 %310, -257, !dbg !11335
  store i32 %and456, i32* %pflags455, align 32, !dbg !11335
  %311 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11336
  %lock457 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %311, i32 0, i32 2, !dbg !11337
  %312 = load %struct.spinlock*, %struct.spinlock** %lock457, align 16, !dbg !11337
  %313 = load i64, i64* %flags6, align 8, !dbg !11338
  store %struct.spinlock* %312, %struct.spinlock** %lock.addr.i521, align 8
  store i64 %313, i64* %flags.addr.i522, align 8
  call void @llvm.dbg.declare(metadata !1101, metadata !7437, metadata !DIExpression()) #2, !dbg !11339
  call void @llvm.dbg.declare(metadata !1101, metadata !7441, metadata !DIExpression()) #2, !dbg !11339
  store i32 1, i32* %tmp.i523, align 4, !dbg !11339
  %314 = load i32, i32* %tmp.i523, align 4, !dbg !11339
  call void @llvm.dbg.declare(metadata !1101, metadata !7442, metadata !DIExpression()) #2, !dbg !11340
  call void @llvm.dbg.declare(metadata !1101, metadata !7448, metadata !DIExpression()) #2, !dbg !11340
  store i32 1, i32* %tmp8.i524, align 4, !dbg !11340
  %315 = load i32, i32* %tmp8.i524, align 4, !dbg !11340
  %316 = load i64, i64* %flags.addr.i522, align 8, !dbg !11341
  call void @arch_local_irq_restore(i64 %316) #9, !dbg !11341
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !11342, !srcloc !7452
  %317 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i521, align 8, !dbg !11343
  %318 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %317, i32 0, i32 0, !dbg !11343
  %rlock.i525 = bitcast %union.anon* %318 to %struct.raw_spinlock*, !dbg !11343
  %319 = load i32, i32* %rc, align 4, !dbg !11344
  ret i32 %319, !dbg !11345

fail:                                             ; preds = %if.then409, %if.then244, %if.then240, %sw.default, %if.then219
  call void @llvm.dbg.label(metadata !11346), !dbg !11347
  %320 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11348
  %call458 = call zeroext i1 @ata_is_host_link(%struct.ata_link* %320) #7, !dbg !11350
  br i1 %call458, label %if.end463, label %land.lhs.true459, !dbg !11351

land.lhs.true459:                                 ; preds = %fail
  %321 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11352
  %call460 = call i32 @sata_scr_read(%struct.ata_link* %321, i32 0, i32* %sstatus) #7, !dbg !11353
  %tobool461 = icmp ne i32 %call460, 0, !dbg !11353
  br i1 %tobool461, label %if.then462, label %if.end463, !dbg !11354

if.then462:                                       ; preds = %land.lhs.true459
  store i32 -85, i32* %rc, align 4, !dbg !11355
  br label %if.end463, !dbg !11356

if.end463:                                        ; preds = %if.then462, %land.lhs.true459, %fail
  %322 = load i32, i32* %try, align 4, !dbg !11357
  %323 = load i32, i32* %max_tries, align 4, !dbg !11359
  %cmp464 = icmp sge i32 %322, %323, !dbg !11360
  br i1 %cmp464, label %if.then466, label %if.end470, !dbg !11361

if.then466:                                       ; preds = %if.end463
  %324 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11362
  %call467 = call zeroext i1 @ata_is_host_link(%struct.ata_link* %324) #7, !dbg !11365
  br i1 %call467, label %if.then468, label %if.end469, !dbg !11366

if.then468:                                       ; preds = %if.then466
  %325 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11367
  call void @ata_eh_thaw_port(%struct.ata_port* %325) #7, !dbg !11368
  br label %if.end469, !dbg !11368

if.end469:                                        ; preds = %if.then468, %if.then466
  br label %out, !dbg !11369

if.end470:                                        ; preds = %if.end463
  %326 = load volatile i64, i64* @jiffies, align 8, !dbg !11370
  store i64 %326, i64* %now, align 8, !dbg !11371
  %327 = load i64, i64* %now, align 8, !dbg !11372
  %328 = load i64, i64* %deadline, align 8, !dbg !11372
  %sub471 = sub i64 %327, %328, !dbg !11372
  %cmp472 = icmp slt i64 %sub471, 0, !dbg !11372
  br i1 %cmp472, label %if.then474, label %if.end483, !dbg !11374

if.then474:                                       ; preds = %if.end470
  call void @llvm.dbg.declare(metadata i64* %delta, metadata !11375, metadata !DIExpression()), !dbg !11377
  %329 = load i64, i64* %deadline, align 8, !dbg !11378
  %330 = load i64, i64* %now, align 8, !dbg !11379
  %sub475 = sub i64 %329, %330, !dbg !11380
  store i64 %sub475, i64* %delta, align 8, !dbg !11377
  %331 = load %struct.ata_link*, %struct.ata_link** %failed_link, align 8, !dbg !11381
  %332 = load i32, i32* %rc, align 4, !dbg !11381
  %333 = load i64, i64* %delta, align 8, !dbg !11381
  %call476 = call i32 @jiffies_to_msecs(i64 %333) #7, !dbg !11381
  %add = add i32 %call476, 1000, !dbg !11381
  %sub477 = sub i32 %add, 1, !dbg !11381
  %div = udiv i32 %sub477, 1000, !dbg !11381
  call void (%struct.ata_link*, i8*, i8*, ...) @ata_link_printk(%struct.ata_link* %331, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.119, i64 0, i64 0), i32 %332, i32 %div) #7, !dbg !11381
  %334 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11382
  call void @ata_eh_release(%struct.ata_port* %334) #7, !dbg !11383
  br label %while.cond478, !dbg !11384

while.cond478:                                    ; preds = %while.body480, %if.then474
  %335 = load i64, i64* %delta, align 8, !dbg !11385
  %tobool479 = icmp ne i64 %335, 0, !dbg !11384
  br i1 %tobool479, label %while.body480, label %while.end482, !dbg !11384

while.body480:                                    ; preds = %while.cond478
  %336 = load i64, i64* %delta, align 8, !dbg !11386
  %call481 = call i64 @schedule_timeout_uninterruptible(i64 %336) #7, !dbg !11387
  store i64 %call481, i64* %delta, align 8, !dbg !11388
  br label %while.cond478, !dbg !11384, !llvm.loop !11389

while.end482:                                     ; preds = %while.cond478
  %337 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11391
  call void @ata_eh_acquire(%struct.ata_port* %337) #7, !dbg !11392
  br label %if.end483, !dbg !11393

if.end483:                                        ; preds = %while.end482, %if.end470
  %338 = load i32, i32* %rc, align 4, !dbg !11394
  %cmp484 = icmp eq i32 %338, -85, !dbg !11396
  br i1 %cmp484, label %if.then486, label %if.end490, !dbg !11397

if.then486:                                       ; preds = %if.end483
  %339 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11398
  %call487 = call zeroext i1 @ata_is_host_link(%struct.ata_link* %339) #7, !dbg !11401
  br i1 %call487, label %if.then488, label %if.end489, !dbg !11402

if.then488:                                       ; preds = %if.then486
  %340 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11403
  call void @ata_eh_thaw_port(%struct.ata_port* %340) #7, !dbg !11404
  br label %if.end489, !dbg !11404

if.end489:                                        ; preds = %if.then488, %if.then486
  br label %out, !dbg !11405

if.end490:                                        ; preds = %if.end483
  %341 = load i32, i32* %try, align 4, !dbg !11406
  %342 = load i32, i32* %max_tries, align 4, !dbg !11408
  %sub491 = sub i32 %342, 1, !dbg !11409
  %cmp492 = icmp eq i32 %341, %sub491, !dbg !11410
  br i1 %cmp492, label %if.then494, label %if.else500, !dbg !11411

if.then494:                                       ; preds = %if.end490
  %343 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11412
  %call495 = call i32 @sata_down_spd_limit(%struct.ata_link* %343, i32 0) #7, !dbg !11414
  %344 = load %struct.ata_link*, %struct.ata_link** %slave, align 8, !dbg !11415
  %tobool496 = icmp ne %struct.ata_link* %344, null, !dbg !11415
  br i1 %tobool496, label %if.then497, label %if.end499, !dbg !11417

if.then497:                                       ; preds = %if.then494
  %345 = load %struct.ata_link*, %struct.ata_link** %slave, align 8, !dbg !11418
  %call498 = call i32 @sata_down_spd_limit(%struct.ata_link* %345, i32 0) #7, !dbg !11419
  br label %if.end499, !dbg !11419

if.end499:                                        ; preds = %if.then497, %if.then494
  br label %if.end506, !dbg !11420

if.else500:                                       ; preds = %if.end490
  %346 = load i32, i32* %rc, align 4, !dbg !11421
  %cmp501 = icmp eq i32 %346, -32, !dbg !11423
  br i1 %cmp501, label %if.then503, label %if.end505, !dbg !11424

if.then503:                                       ; preds = %if.else500
  %347 = load %struct.ata_link*, %struct.ata_link** %failed_link, align 8, !dbg !11425
  %call504 = call i32 @sata_down_spd_limit(%struct.ata_link* %347, i32 0) #7, !dbg !11426
  br label %if.end505, !dbg !11426

if.end505:                                        ; preds = %if.then503, %if.else500
  br label %if.end506

if.end506:                                        ; preds = %if.end505, %if.end499
  %348 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %hardreset.addr, align 8, !dbg !11427
  %tobool507 = icmp ne i32 (%struct.ata_link*, i32*, i64)* %348, null, !dbg !11427
  br i1 %tobool507, label %if.then508, label %if.end509, !dbg !11429

if.then508:                                       ; preds = %if.end506
  %349 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %hardreset.addr, align 8, !dbg !11430
  store i32 (%struct.ata_link*, i32*, i64)* %349, i32 (%struct.ata_link*, i32*, i64)** %reset, align 8, !dbg !11431
  br label %if.end509, !dbg !11432

if.end509:                                        ; preds = %if.then508, %if.end506
  br label %retry, !dbg !11433
}

; Function Attrs: noredzone
declare dso_local i64 @schedule_timeout_uninterruptible(i64) #3

; Function Attrs: noredzone
declare dso_local void @ata_link_printk(%struct.ata_link*, i8*, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_is_host_link(%struct.ata_link* %link) #0 !dbg !11434 {
entry:
  %link.addr = alloca %struct.ata_link*, align 8
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !11439, metadata !DIExpression()), !dbg !11440
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11441
  %1 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11442
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 0, !dbg !11443
  %2 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !11443
  %link1 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 25, !dbg !11444
  %cmp = icmp eq %struct.ata_link* %0, %link1, !dbg !11445
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !11446

lor.rhs:                                          ; preds = %entry
  %3 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11447
  %4 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11448
  %ap2 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %4, i32 0, i32 0, !dbg !11449
  %5 = load %struct.ata_port*, %struct.ata_port** %ap2, align 64, !dbg !11449
  %slave_link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %5, i32 0, i32 26, !dbg !11450
  %6 = load %struct.ata_link*, %struct.ata_link** %slave_link, align 64, !dbg !11450
  %cmp3 = icmp eq %struct.ata_link* %3, %6, !dbg !11451
  br label %lor.end, !dbg !11446

lor.end:                                          ; preds = %lor.rhs, %entry
  %7 = phi i1 [ true, %entry ], [ %cmp3, %lor.rhs ]
  ret i1 %7, !dbg !11452
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_do_reset(%struct.ata_link* %link, i32 (%struct.ata_link*, i32*, i64)* %reset, i32* %classes, i64 %deadline, i1 zeroext %clear_classes) #0 !dbg !11453 {
entry:
  %link.addr = alloca %struct.ata_link*, align 8
  %reset.addr = alloca i32 (%struct.ata_link*, i32*, i64)*, align 8
  %classes.addr = alloca i32*, align 8
  %deadline.addr = alloca i64, align 8
  %clear_classes.addr = alloca i8, align 1
  %dev = alloca %struct.ata_device*, align 8
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !11456, metadata !DIExpression()), !dbg !11457
  store i32 (%struct.ata_link*, i32*, i64)* %reset, i32 (%struct.ata_link*, i32*, i64)** %reset.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.ata_link*, i32*, i64)** %reset.addr, metadata !11458, metadata !DIExpression()), !dbg !11459
  store i32* %classes, i32** %classes.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %classes.addr, metadata !11460, metadata !DIExpression()), !dbg !11461
  store i64 %deadline, i64* %deadline.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %deadline.addr, metadata !11462, metadata !DIExpression()), !dbg !11463
  %frombool = zext i1 %clear_classes to i8
  store i8 %frombool, i8* %clear_classes.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %clear_classes.addr, metadata !11464, metadata !DIExpression()), !dbg !11465
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !11466, metadata !DIExpression()), !dbg !11467
  %0 = load i8, i8* %clear_classes.addr, align 1, !dbg !11468
  %tobool = trunc i8 %0 to i1, !dbg !11468
  br i1 %tobool, label %if.then, label %if.end, !dbg !11470

if.then:                                          ; preds = %entry
  %1 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11471
  %call = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %1, i32 2) #7, !dbg !11471
  store %struct.ata_device* %call, %struct.ata_device** %dev, align 8, !dbg !11471
  br label %for.cond, !dbg !11471

for.cond:                                         ; preds = %for.inc, %if.then
  %2 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11473
  %tobool1 = icmp ne %struct.ata_device* %2, null, !dbg !11471
  br i1 %tobool1, label %for.body, label %for.end, !dbg !11471

for.body:                                         ; preds = %for.cond
  %3 = load i32*, i32** %classes.addr, align 8, !dbg !11475
  %4 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11476
  %devno = getelementptr inbounds %struct.ata_device, %struct.ata_device* %4, i32 0, i32 1, !dbg !11477
  %5 = load i32, i32* %devno, align 8, !dbg !11477
  %idxprom = zext i32 %5 to i64, !dbg !11475
  %arrayidx = getelementptr i32, i32* %3, i64 %idxprom, !dbg !11475
  store i32 0, i32* %arrayidx, align 4, !dbg !11478
  br label %for.inc, !dbg !11475

for.inc:                                          ; preds = %for.body
  %6 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11473
  %7 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11473
  %call2 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %6, %struct.ata_link* %7, i32 2) #7, !dbg !11473
  store %struct.ata_device* %call2, %struct.ata_device** %dev, align 8, !dbg !11473
  br label %for.cond, !dbg !11473, !llvm.loop !11479

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !11480

if.end:                                           ; preds = %for.end, %entry
  %8 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %reset.addr, align 8, !dbg !11481
  %9 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11482
  %10 = load i32*, i32** %classes.addr, align 8, !dbg !11483
  %11 = load i64, i64* %deadline.addr, align 8, !dbg !11484
  %call3 = call i32 %8(%struct.ata_link* %9, i32* %10, i64 %11) #7, !dbg !11481
  ret i32 %call3, !dbg !11485
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_eh_followup_srst_needed(%struct.ata_link* %link, i32 %rc) #0 !dbg !11486 {
entry:
  %retval = alloca i32, align 4
  %link.addr = alloca %struct.ata_link*, align 8
  %rc.addr = alloca i32, align 4
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !11489, metadata !DIExpression()), !dbg !11490
  store i32 %rc, i32* %rc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rc.addr, metadata !11491, metadata !DIExpression()), !dbg !11492
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11493
  %flags = getelementptr inbounds %struct.ata_link, %struct.ata_link* %0, i32 0, i32 5, !dbg !11495
  %1 = load i32, i32* %flags, align 16, !dbg !11495
  %and = and i32 %1, 4, !dbg !11496
  %tobool = icmp ne i32 %and, 0, !dbg !11496
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !11497

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11498
  %call = call zeroext i1 @ata_link_offline(%struct.ata_link* %2) #7, !dbg !11499
  br i1 %call, label %if.then, label %if.end, !dbg !11500

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !11501
  br label %return, !dbg !11501

if.end:                                           ; preds = %lor.lhs.false
  %3 = load i32, i32* %rc.addr, align 4, !dbg !11502
  %cmp = icmp eq i32 %3, -11, !dbg !11504
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !11505

if.then1:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !11506
  br label %return, !dbg !11506

if.end2:                                          ; preds = %if.end
  %4 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11507
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %4, i32 0, i32 0, !dbg !11509
  %5 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !11509
  %call3 = call zeroext i1 @sata_pmp_supported(%struct.ata_port* %5) #7, !dbg !11510
  br i1 %call3, label %land.lhs.true, label %if.end6, !dbg !11511

land.lhs.true:                                    ; preds = %if.end2
  %6 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11512
  %call4 = call zeroext i1 @ata_is_host_link(%struct.ata_link* %6) #7, !dbg !11513
  br i1 %call4, label %if.then5, label %if.end6, !dbg !11514

if.then5:                                         ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !11515
  br label %return, !dbg !11515

if.end6:                                          ; preds = %land.lhs.true, %if.end2
  store i32 0, i32* %retval, align 4, !dbg !11516
  br label %return, !dbg !11516

return:                                           ; preds = %if.end6, %if.then5, %if.then1, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !11517
  ret i32 %7, !dbg !11517
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @ata_phys_link_offline(%struct.ata_link*) #3

; Function Attrs: noredzone
declare dso_local %struct.ata_link* @ata_dev_phys_link(%struct.ata_device*) #3

; Function Attrs: noredzone
declare dso_local i32 @sata_scr_read(%struct.ata_link*, i32, i32*) #3

; Function Attrs: noredzone
declare dso_local zeroext i1 @ata_phys_link_online(%struct.ata_link*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_class_enabled(i32 %class) #0 !dbg !11518 {
entry:
  %class.addr = alloca i32, align 4
  store i32 %class, i32* %class.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %class.addr, metadata !11521, metadata !DIExpression()), !dbg !11522
  %0 = load i32, i32* %class.addr, align 4, !dbg !11523
  %cmp = icmp eq i32 %0, 1, !dbg !11524
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !11525

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %class.addr, align 4, !dbg !11526
  %cmp1 = icmp eq i32 %1, 3, !dbg !11527
  br i1 %cmp1, label %lor.end, label %lor.lhs.false2, !dbg !11528

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i32, i32* %class.addr, align 4, !dbg !11529
  %cmp3 = icmp eq i32 %2, 5, !dbg !11530
  br i1 %cmp3, label %lor.end, label %lor.lhs.false4, !dbg !11531

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %3 = load i32, i32* %class.addr, align 4, !dbg !11532
  %cmp5 = icmp eq i32 %3, 7, !dbg !11533
  br i1 %cmp5, label %lor.end, label %lor.rhs, !dbg !11534

lor.rhs:                                          ; preds = %lor.lhs.false4
  %4 = load i32, i32* %class.addr, align 4, !dbg !11535
  %cmp6 = icmp eq i32 %4, 9, !dbg !11536
  br label %lor.end, !dbg !11534

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false4, %lor.lhs.false2, %lor.lhs.false, %entry
  %5 = phi i1 [ true, %lor.lhs.false4 ], [ true, %lor.lhs.false2 ], [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp6, %lor.rhs ]
  %lor.ext = zext i1 %5 to i32, !dbg !11534
  ret i32 %lor.ext, !dbg !11537
}

; Function Attrs: noredzone
declare dso_local i32 @jiffies_to_msecs(i64) #3

; Function Attrs: noredzone
declare dso_local i32 @sata_down_spd_limit(%struct.ata_link*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_set_mode(%struct.ata_link* %link, %struct.ata_device** %r_failed_dev) #0 !dbg !11538 {
entry:
  %link.addr = alloca %struct.ata_link*, align 8
  %r_failed_dev.addr = alloca %struct.ata_device**, align 8
  %ap = alloca %struct.ata_port*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %rc = alloca i32, align 4
  %ent = alloca %struct.ata_ering_entry*, align 8
  %ehc = alloca %struct.ata_eh_context*, align 8
  %saved_xfer_mode = alloca i8, align 1
  %saved_ncq = alloca i8, align 1
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !11539, metadata !DIExpression()), !dbg !11540
  store %struct.ata_device** %r_failed_dev, %struct.ata_device*** %r_failed_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device*** %r_failed_dev.addr, metadata !11541, metadata !DIExpression()), !dbg !11542
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !11543, metadata !DIExpression()), !dbg !11544
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11545
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %0, i32 0, i32 0, !dbg !11546
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !11546
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !11544
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !11547, metadata !DIExpression()), !dbg !11548
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !11549, metadata !DIExpression()), !dbg !11550
  %2 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11551
  %call = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %2, i32 0) #7, !dbg !11551
  store %struct.ata_device* %call, %struct.ata_device** %dev, align 8, !dbg !11551
  br label %for.cond, !dbg !11551

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11553
  %tobool = icmp ne %struct.ata_device* %3, null, !dbg !11551
  br i1 %tobool, label %for.body, label %for.end, !dbg !11551

for.body:                                         ; preds = %for.cond
  %4 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11555
  %flags = getelementptr inbounds %struct.ata_device, %struct.ata_device* %4, i32 0, i32 3, !dbg !11558
  %5 = load i64, i64* %flags, align 16, !dbg !11558
  %and = and i64 %5, 65536, !dbg !11559
  %tobool2 = icmp ne i64 %and, 0, !dbg !11559
  br i1 %tobool2, label %if.end7, label %if.then, !dbg !11560

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.ata_ering_entry** %ent, metadata !11561, metadata !DIExpression()), !dbg !11563
  %6 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11564
  %ering = getelementptr inbounds %struct.ata_device, %struct.ata_device* %6, i32 0, i32 36, !dbg !11565
  %call3 = call %struct.ata_ering_entry* @ata_ering_top(%struct.ata_ering* %ering) #7, !dbg !11566
  store %struct.ata_ering_entry* %call3, %struct.ata_ering_entry** %ent, align 8, !dbg !11567
  %7 = load %struct.ata_ering_entry*, %struct.ata_ering_entry** %ent, align 8, !dbg !11568
  %tobool4 = icmp ne %struct.ata_ering_entry* %7, null, !dbg !11568
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !11570

if.then5:                                         ; preds = %if.then
  %8 = load %struct.ata_ering_entry*, %struct.ata_ering_entry** %ent, align 8, !dbg !11571
  %eflags = getelementptr inbounds %struct.ata_ering_entry, %struct.ata_ering_entry* %8, i32 0, i32 0, !dbg !11572
  %9 = load i32, i32* %eflags, align 8, !dbg !11573
  %and6 = and i32 %9, -3, !dbg !11573
  store i32 %and6, i32* %eflags, align 8, !dbg !11573
  br label %if.end, !dbg !11571

if.end:                                           ; preds = %if.then5, %if.then
  br label %if.end7, !dbg !11574

if.end7:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !11575

for.inc:                                          ; preds = %if.end7
  %10 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11553
  %11 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11553
  %call8 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %10, %struct.ata_link* %11, i32 0) #7, !dbg !11553
  store %struct.ata_device* %call8, %struct.ata_device** %dev, align 8, !dbg !11553
  br label %for.cond, !dbg !11553, !llvm.loop !11576

for.end:                                          ; preds = %for.cond
  %12 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11578
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %12, i32 0, i32 1, !dbg !11580
  %13 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !11580
  %set_mode = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %13, i32 0, i32 9, !dbg !11581
  %14 = load i32 (%struct.ata_link*, %struct.ata_device**)*, i32 (%struct.ata_link*, %struct.ata_device**)** %set_mode, align 8, !dbg !11581
  %tobool9 = icmp ne i32 (%struct.ata_link*, %struct.ata_device**)* %14, null, !dbg !11578
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !11582

if.then10:                                        ; preds = %for.end
  %15 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !11583
  %ops11 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %15, i32 0, i32 1, !dbg !11584
  %16 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops11, align 8, !dbg !11584
  %set_mode12 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %16, i32 0, i32 9, !dbg !11585
  %17 = load i32 (%struct.ata_link*, %struct.ata_device**)*, i32 (%struct.ata_link*, %struct.ata_device**)** %set_mode12, align 8, !dbg !11585
  %18 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11586
  %19 = load %struct.ata_device**, %struct.ata_device*** %r_failed_dev.addr, align 8, !dbg !11587
  %call13 = call i32 %17(%struct.ata_link* %18, %struct.ata_device** %19) #7, !dbg !11583
  store i32 %call13, i32* %rc, align 4, !dbg !11588
  br label %if.end15, !dbg !11589

if.else:                                          ; preds = %for.end
  %20 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11590
  %21 = load %struct.ata_device**, %struct.ata_device*** %r_failed_dev.addr, align 8, !dbg !11591
  %call14 = call i32 @ata_do_set_mode(%struct.ata_link* %20, %struct.ata_device** %21) #7, !dbg !11592
  store i32 %call14, i32* %rc, align 4, !dbg !11593
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then10
  %22 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11594
  %call16 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %22, i32 0) #7, !dbg !11594
  store %struct.ata_device* %call16, %struct.ata_device** %dev, align 8, !dbg !11594
  br label %for.cond17, !dbg !11594

for.cond17:                                       ; preds = %for.inc35, %if.end15
  %23 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11596
  %tobool18 = icmp ne %struct.ata_device* %23, null, !dbg !11594
  br i1 %tobool18, label %for.body19, label %for.end37, !dbg !11594

for.body19:                                       ; preds = %for.cond17
  call void @llvm.dbg.declare(metadata %struct.ata_eh_context** %ehc, metadata !11598, metadata !DIExpression()), !dbg !11600
  %24 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11601
  %eh_context = getelementptr inbounds %struct.ata_link, %struct.ata_link* %24, i32 0, i32 12, !dbg !11602
  store %struct.ata_eh_context* %eh_context, %struct.ata_eh_context** %ehc, align 8, !dbg !11600
  call void @llvm.dbg.declare(metadata i8* %saved_xfer_mode, metadata !11603, metadata !DIExpression()), !dbg !11604
  %25 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !11605
  %saved_xfer_mode20 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %25, i32 0, i32 7, !dbg !11606
  %26 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11607
  %devno = getelementptr inbounds %struct.ata_device, %struct.ata_device* %26, i32 0, i32 1, !dbg !11608
  %27 = load i32, i32* %devno, align 8, !dbg !11608
  %idxprom = zext i32 %27 to i64, !dbg !11605
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %saved_xfer_mode20, i64 0, i64 %idxprom, !dbg !11605
  %28 = load i8, i8* %arrayidx, align 1, !dbg !11605
  store i8 %28, i8* %saved_xfer_mode, align 1, !dbg !11604
  call void @llvm.dbg.declare(metadata i8* %saved_ncq, metadata !11609, metadata !DIExpression()), !dbg !11610
  %29 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !11611
  %saved_ncq_enabled = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %29, i32 0, i32 6, !dbg !11612
  %30 = load i32, i32* %saved_ncq_enabled, align 8, !dbg !11612
  %31 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11613
  %devno21 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %31, i32 0, i32 1, !dbg !11614
  %32 = load i32, i32* %devno21, align 8, !dbg !11614
  %shl = shl i32 1, %32, !dbg !11615
  %and22 = and i32 %30, %shl, !dbg !11616
  %tobool23 = icmp ne i32 %and22, 0, !dbg !11617
  %lnot = xor i1 %tobool23, true, !dbg !11617
  %lnot24 = xor i1 %lnot, true, !dbg !11618
  %lnot.ext = zext i1 %lnot24 to i32, !dbg !11618
  %conv = trunc i32 %lnot.ext to i8, !dbg !11618
  store i8 %conv, i8* %saved_ncq, align 1, !dbg !11610
  %33 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11619
  %xfer_mode = getelementptr inbounds %struct.ata_device, %struct.ata_device* %33, i32 0, i32 15, !dbg !11621
  %34 = load i8, i8* %xfer_mode, align 2, !dbg !11621
  %conv25 = zext i8 %34 to i32, !dbg !11619
  %35 = load i8, i8* %saved_xfer_mode, align 1, !dbg !11622
  %conv26 = zext i8 %35 to i32, !dbg !11622
  %cmp = icmp ne i32 %conv25, %conv26, !dbg !11623
  br i1 %cmp, label %if.then32, label %lor.lhs.false, !dbg !11624

lor.lhs.false:                                    ; preds = %for.body19
  %36 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11625
  %call28 = call i32 @ata_ncq_enabled(%struct.ata_device* %36) #7, !dbg !11626
  %37 = load i8, i8* %saved_ncq, align 1, !dbg !11627
  %conv29 = zext i8 %37 to i32, !dbg !11627
  %cmp30 = icmp ne i32 %call28, %conv29, !dbg !11628
  br i1 %cmp30, label %if.then32, label %if.end34, !dbg !11629

if.then32:                                        ; preds = %lor.lhs.false, %for.body19
  %38 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11630
  %flags33 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %38, i32 0, i32 3, !dbg !11631
  %39 = load i64, i64* %flags33, align 16, !dbg !11632
  %or = or i64 %39, 65536, !dbg !11632
  store i64 %or, i64* %flags33, align 16, !dbg !11632
  br label %if.end34, !dbg !11630

if.end34:                                         ; preds = %if.then32, %lor.lhs.false
  br label %for.inc35, !dbg !11633

for.inc35:                                        ; preds = %if.end34
  %40 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11596
  %41 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11596
  %call36 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %40, %struct.ata_link* %41, i32 0) #7, !dbg !11596
  store %struct.ata_device* %call36, %struct.ata_device** %dev, align 8, !dbg !11596
  br label %for.cond17, !dbg !11596, !llvm.loop !11634

for.end37:                                        ; preds = %for.cond17
  %42 = load i32, i32* %rc, align 4, !dbg !11636
  ret i32 %42, !dbg !11637
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.ata_ering_entry* @ata_ering_top(%struct.ata_ering* %ering) #0 !dbg !11638 {
entry:
  %retval = alloca %struct.ata_ering_entry*, align 8
  %ering.addr = alloca %struct.ata_ering*, align 8
  %ent = alloca %struct.ata_ering_entry*, align 8
  store %struct.ata_ering* %ering, %struct.ata_ering** %ering.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_ering** %ering.addr, metadata !11641, metadata !DIExpression()), !dbg !11642
  call void @llvm.dbg.declare(metadata %struct.ata_ering_entry** %ent, metadata !11643, metadata !DIExpression()), !dbg !11644
  %0 = load %struct.ata_ering*, %struct.ata_ering** %ering.addr, align 8, !dbg !11645
  %ring = getelementptr inbounds %struct.ata_ering, %struct.ata_ering* %0, i32 0, i32 1, !dbg !11646
  %1 = load %struct.ata_ering*, %struct.ata_ering** %ering.addr, align 8, !dbg !11647
  %cursor = getelementptr inbounds %struct.ata_ering, %struct.ata_ering* %1, i32 0, i32 0, !dbg !11648
  %2 = load i32, i32* %cursor, align 8, !dbg !11648
  %idxprom = sext i32 %2 to i64, !dbg !11645
  %arrayidx = getelementptr [32 x %struct.ata_ering_entry], [32 x %struct.ata_ering_entry]* %ring, i64 0, i64 %idxprom, !dbg !11645
  store %struct.ata_ering_entry* %arrayidx, %struct.ata_ering_entry** %ent, align 8, !dbg !11644
  %3 = load %struct.ata_ering_entry*, %struct.ata_ering_entry** %ent, align 8, !dbg !11649
  %err_mask = getelementptr inbounds %struct.ata_ering_entry, %struct.ata_ering_entry* %3, i32 0, i32 1, !dbg !11651
  %4 = load i32, i32* %err_mask, align 4, !dbg !11651
  %tobool = icmp ne i32 %4, 0, !dbg !11649
  br i1 %tobool, label %if.then, label %if.end, !dbg !11652

if.then:                                          ; preds = %entry
  %5 = load %struct.ata_ering_entry*, %struct.ata_ering_entry** %ent, align 8, !dbg !11653
  store %struct.ata_ering_entry* %5, %struct.ata_ering_entry** %retval, align 8, !dbg !11654
  br label %return, !dbg !11654

if.end:                                           ; preds = %entry
  store %struct.ata_ering_entry* null, %struct.ata_ering_entry** %retval, align 8, !dbg !11655
  br label %return, !dbg !11655

return:                                           ; preds = %if.end, %if.then
  %6 = load %struct.ata_ering_entry*, %struct.ata_ering_entry** %retval, align 8, !dbg !11656
  ret %struct.ata_ering_entry* %6, !dbg !11656
}

; Function Attrs: noredzone
declare dso_local i32 @ata_do_set_mode(%struct.ata_link*, %struct.ata_device**) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_link_nr_enabled(%struct.ata_link* %link) #0 !dbg !11657 {
entry:
  %link.addr = alloca %struct.ata_link*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %cnt = alloca i32, align 4
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !11658, metadata !DIExpression()), !dbg !11659
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !11660, metadata !DIExpression()), !dbg !11661
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !11662, metadata !DIExpression()), !dbg !11663
  store i32 0, i32* %cnt, align 4, !dbg !11663
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11664
  %call = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %0, i32 0) #7, !dbg !11664
  store %struct.ata_device* %call, %struct.ata_device** %dev, align 8, !dbg !11664
  br label %for.cond, !dbg !11664

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11666
  %tobool = icmp ne %struct.ata_device* %1, null, !dbg !11664
  br i1 %tobool, label %for.body, label %for.end, !dbg !11664

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %cnt, align 4, !dbg !11668
  %inc = add i32 %2, 1, !dbg !11668
  store i32 %inc, i32* %cnt, align 4, !dbg !11668
  br label %for.inc, !dbg !11669

for.inc:                                          ; preds = %for.body
  %3 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11666
  %4 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !11666
  %call1 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %3, %struct.ata_link* %4, i32 0) #7, !dbg !11666
  store %struct.ata_device* %call1, %struct.ata_device** %dev, align 8, !dbg !11666
  br label %for.cond, !dbg !11666, !llvm.loop !11670

for.end:                                          ; preds = %for.cond
  %5 = load i32, i32* %cnt, align 4, !dbg !11672
  ret i32 %5, !dbg !11673
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ata_eh_recover(%struct.ata_port* %ap, i32 (%struct.ata_link*, i64)* %prereset, i32 (%struct.ata_link*, i32*, i64)* %softreset, i32 (%struct.ata_link*, i32*, i64)* %hardreset, void (%struct.ata_link*, i32*)* %postreset, %struct.ata_link** %r_failed_link) #0 !dbg !11674 {
entry:
  %lock.addr.i309 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i309, metadata !7379, metadata !DIExpression()), !dbg !11678
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7386, metadata !DIExpression()), !dbg !11685
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7388, metadata !DIExpression()), !dbg !11686
  %retval = alloca i32, align 4
  %ap.addr = alloca %struct.ata_port*, align 8
  %prereset.addr = alloca i32 (%struct.ata_link*, i64)*, align 8
  %softreset.addr = alloca i32 (%struct.ata_link*, i32*, i64)*, align 8
  %hardreset.addr = alloca i32 (%struct.ata_link*, i32*, i64)*, align 8
  %postreset.addr = alloca void (%struct.ata_link*, i32*)*, align 8
  %r_failed_link.addr = alloca %struct.ata_link**, align 8
  %link = alloca %struct.ata_link*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %rc = alloca i32, align 4
  %nr_fails = alloca i32, align 4
  %flags = alloca i64, align 8
  %deadline = alloca i64, align 8
  %ehc = alloca %struct.ata_eh_context*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  %ehc72 = alloca %struct.ata_eh_context*, align 8
  %ehc97 = alloca %struct.ata_eh_context*, align 8
  %now = alloca i64, align 8
  %ehc122 = alloca %struct.ata_eh_context*, align 8
  %tmp124 = alloca i64, align 8
  %ehc197 = alloca %struct.ata_eh_context*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !11693, metadata !DIExpression()), !dbg !11694
  store i32 (%struct.ata_link*, i64)* %prereset, i32 (%struct.ata_link*, i64)** %prereset.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.ata_link*, i64)** %prereset.addr, metadata !11695, metadata !DIExpression()), !dbg !11696
  store i32 (%struct.ata_link*, i32*, i64)* %softreset, i32 (%struct.ata_link*, i32*, i64)** %softreset.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.ata_link*, i32*, i64)** %softreset.addr, metadata !11697, metadata !DIExpression()), !dbg !11698
  store i32 (%struct.ata_link*, i32*, i64)* %hardreset, i32 (%struct.ata_link*, i32*, i64)** %hardreset.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.ata_link*, i32*, i64)** %hardreset.addr, metadata !11699, metadata !DIExpression()), !dbg !11700
  store void (%struct.ata_link*, i32*)* %postreset, void (%struct.ata_link*, i32*)** %postreset.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.ata_link*, i32*)** %postreset.addr, metadata !11701, metadata !DIExpression()), !dbg !11702
  store %struct.ata_link** %r_failed_link, %struct.ata_link*** %r_failed_link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link*** %r_failed_link.addr, metadata !11703, metadata !DIExpression()), !dbg !11704
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link, metadata !11705, metadata !DIExpression()), !dbg !11706
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !11707, metadata !DIExpression()), !dbg !11708
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !11709, metadata !DIExpression()), !dbg !11710
  call void @llvm.dbg.declare(metadata i32* %nr_fails, metadata !11711, metadata !DIExpression()), !dbg !11712
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11713, metadata !DIExpression()), !dbg !11714
  call void @llvm.dbg.declare(metadata i64* %deadline, metadata !11715, metadata !DIExpression()), !dbg !11716
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11717
  %call = call %struct.ata_link* @ata_link_next(%struct.ata_link* null, %struct.ata_port* %0, i32 0) #7, !dbg !11717
  store %struct.ata_link* %call, %struct.ata_link** %link, align 8, !dbg !11717
  br label %for.cond, !dbg !11717

for.cond:                                         ; preds = %for.inc61, %entry
  %1 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11718
  %tobool = icmp ne %struct.ata_link* %1, null, !dbg !11717
  br i1 %tobool, label %for.body, label %for.end63, !dbg !11717

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ata_eh_context** %ehc, metadata !11719, metadata !DIExpression()), !dbg !11720
  %2 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11721
  %eh_context = getelementptr inbounds %struct.ata_link, %struct.ata_link* %2, i32 0, i32 12, !dbg !11722
  store %struct.ata_eh_context* %eh_context, %struct.ata_eh_context** %ehc, align 8, !dbg !11720
  %3 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !11723
  %i = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %3, i32 0, i32 0, !dbg !11724
  %action = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i, i32 0, i32 3, !dbg !11725
  %4 = load i32, i32* %action, align 8, !dbg !11725
  %and = and i32 %4, 8, !dbg !11726
  %tobool1 = icmp ne i32 %and, 0, !dbg !11726
  br i1 %tobool1, label %if.then, label %if.end, !dbg !11727

if.then:                                          ; preds = %for.body
  %5 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11728
  call void @ata_eh_about_to_do(%struct.ata_link* %5, %struct.ata_device* null, i32 8) #7, !dbg !11729
  br label %do.body, !dbg !11730

do.body:                                          ; preds = %if.then
  br label %do.body2, !dbg !11731

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11732, metadata !DIExpression()), !dbg !11734
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11735, metadata !DIExpression()), !dbg !11734
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !11734
  %conv = zext i1 %cmp to i32, !dbg !11734
  store i32 1, i32* %tmp, align 4, !dbg !11734
  %6 = load i32, i32* %tmp, align 4, !dbg !11734
  br label %do.body3, !dbg !11736

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !11737

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !11738

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !11740, metadata !DIExpression()), !dbg !11743
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !11744, metadata !DIExpression()), !dbg !11743
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !11743
  %conv9 = zext i1 %cmp8 to i32, !dbg !11743
  store i32 1, i32* %tmp10, align 4, !dbg !11743
  %7 = load i32, i32* %tmp10, align 4, !dbg !11743
  %call11 = call i64 @arch_local_irq_save() #7, !dbg !11745
  store i64 %call11, i64* %flags, align 8, !dbg !11745
  br label %do.end, !dbg !11745

do.end:                                           ; preds = %do.body5
  br label %do.end12, !dbg !11738

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !11737

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !11746, !srcloc !11747
  br label %do.body14, !dbg !11746

do.body14:                                        ; preds = %do.body13
  %8 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11748
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %8, i32 0, i32 2, !dbg !11748
  %9 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !11748
  store %struct.spinlock* %9, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11749
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !11750
  %rlock.i = bitcast %union.anon* %11 to %struct.raw_spinlock*, !dbg !11750
  br label %do.end16, !dbg !11748

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !11746

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !11737

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !11736

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !11731

do.end20:                                         ; preds = %do.end19
  %12 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11751
  %flags21 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %12, i32 0, i32 5, !dbg !11752
  %13 = load i32, i32* %flags21, align 16, !dbg !11753
  %and22 = and i32 %13, -65, !dbg !11753
  store i32 %and22, i32* %flags21, align 16, !dbg !11753
  %14 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11754
  %lock23 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %14, i32 0, i32 2, !dbg !11755
  %15 = load %struct.spinlock*, %struct.spinlock** %lock23, align 16, !dbg !11755
  %16 = load i64, i64* %flags, align 8, !dbg !11756
  store %struct.spinlock* %15, %struct.spinlock** %lock.addr.i309, align 8
  store i64 %16, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1101, metadata !7437, metadata !DIExpression()) #2, !dbg !11757
  call void @llvm.dbg.declare(metadata !1101, metadata !7441, metadata !DIExpression()) #2, !dbg !11757
  store i32 1, i32* %tmp.i, align 4, !dbg !11757
  %17 = load i32, i32* %tmp.i, align 4, !dbg !11757
  call void @llvm.dbg.declare(metadata !1101, metadata !7442, metadata !DIExpression()) #2, !dbg !11758
  call void @llvm.dbg.declare(metadata !1101, metadata !7448, metadata !DIExpression()) #2, !dbg !11758
  store i32 1, i32* %tmp8.i, align 4, !dbg !11758
  %18 = load i32, i32* %tmp8.i, align 4, !dbg !11758
  %19 = load i64, i64* %flags.addr.i, align 8, !dbg !11759
  call void @arch_local_irq_restore(i64 %19) #9, !dbg !11759
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !11760, !srcloc !7452
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i309, align 8, !dbg !11761
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !11761
  %rlock.i310 = bitcast %union.anon* %21 to %struct.raw_spinlock*, !dbg !11761
  %22 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11762
  call void @ata_eh_done(%struct.ata_link* %22, %struct.ata_device* null, i32 8) #7, !dbg !11763
  br label %if.end, !dbg !11764

if.end:                                           ; preds = %do.end20, %for.body
  %23 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11765
  %call24 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %23, i32 2) #7, !dbg !11765
  store %struct.ata_device* %call24, %struct.ata_device** %dev, align 8, !dbg !11765
  br label %for.cond25, !dbg !11765

for.cond25:                                       ; preds = %for.inc, %if.end
  %24 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11767
  %tobool26 = icmp ne %struct.ata_device* %24, null, !dbg !11765
  br i1 %tobool26, label %for.body27, label %for.end, !dbg !11765

for.body27:                                       ; preds = %for.cond25
  %25 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11769
  %flags28 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %25, i32 0, i32 5, !dbg !11772
  %26 = load i32, i32* %flags28, align 16, !dbg !11772
  %and29 = and i32 %26, 32, !dbg !11773
  %tobool30 = icmp ne i32 %and29, 0, !dbg !11773
  br i1 %tobool30, label %if.then31, label %if.else, !dbg !11774

if.then31:                                        ; preds = %for.body27
  %27 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !11775
  %tries = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %27, i32 0, i32 1, !dbg !11776
  %28 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11777
  %devno = getelementptr inbounds %struct.ata_device, %struct.ata_device* %28, i32 0, i32 1, !dbg !11778
  %29 = load i32, i32* %devno, align 8, !dbg !11778
  %idxprom = zext i32 %29 to i64, !dbg !11775
  %arrayidx = getelementptr [2 x i32], [2 x i32]* %tries, i64 0, i64 %idxprom, !dbg !11775
  store i32 1, i32* %arrayidx, align 4, !dbg !11779
  br label %if.end36, !dbg !11775

if.else:                                          ; preds = %for.body27
  %30 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !11780
  %tries32 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %30, i32 0, i32 1, !dbg !11781
  %31 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11782
  %devno33 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %31, i32 0, i32 1, !dbg !11783
  %32 = load i32, i32* %devno33, align 8, !dbg !11783
  %idxprom34 = zext i32 %32 to i64, !dbg !11780
  %arrayidx35 = getelementptr [2 x i32], [2 x i32]* %tries32, i64 0, i64 %idxprom34, !dbg !11780
  store i32 3, i32* %arrayidx35, align 4, !dbg !11784
  br label %if.end36

if.end36:                                         ; preds = %if.else, %if.then31
  %33 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !11785
  %i37 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %33, i32 0, i32 0, !dbg !11786
  %dev_action = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i37, i32 0, i32 4, !dbg !11787
  %34 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11788
  %devno38 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %34, i32 0, i32 1, !dbg !11789
  %35 = load i32, i32* %devno38, align 8, !dbg !11789
  %idxprom39 = zext i32 %35 to i64, !dbg !11785
  %arrayidx40 = getelementptr [2 x i32], [2 x i32]* %dev_action, i64 0, i64 %idxprom39, !dbg !11785
  %36 = load i32, i32* %arrayidx40, align 4, !dbg !11785
  %and41 = and i32 %36, -34, !dbg !11790
  %37 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !11791
  %i42 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %37, i32 0, i32 0, !dbg !11792
  %action43 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i42, i32 0, i32 3, !dbg !11793
  %38 = load i32, i32* %action43, align 8, !dbg !11794
  %or = or i32 %38, %and41, !dbg !11794
  store i32 %or, i32* %action43, align 8, !dbg !11794
  %39 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !11795
  %i44 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %39, i32 0, i32 0, !dbg !11796
  %dev_action45 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i44, i32 0, i32 4, !dbg !11797
  %40 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11798
  %devno46 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %40, i32 0, i32 1, !dbg !11799
  %41 = load i32, i32* %devno46, align 8, !dbg !11799
  %idxprom47 = zext i32 %41 to i64, !dbg !11795
  %arrayidx48 = getelementptr [2 x i32], [2 x i32]* %dev_action45, i64 0, i64 %idxprom47, !dbg !11795
  %42 = load i32, i32* %arrayidx48, align 4, !dbg !11800
  %and49 = and i32 %42, 33, !dbg !11800
  store i32 %and49, i32* %arrayidx48, align 4, !dbg !11800
  %43 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11801
  %flags50 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %43, i32 0, i32 3, !dbg !11803
  %44 = load i64, i64* %flags50, align 16, !dbg !11803
  %and51 = and i64 %44, 16777216, !dbg !11804
  %tobool52 = icmp ne i64 %and51, 0, !dbg !11804
  br i1 %tobool52, label %if.then53, label %if.end54, !dbg !11805

if.then53:                                        ; preds = %if.end36
  %45 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11806
  call void @ata_eh_detach_dev(%struct.ata_device* %45) #7, !dbg !11807
  br label %if.end54, !dbg !11807

if.end54:                                         ; preds = %if.then53, %if.end36
  %46 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11808
  %call55 = call i32 @ata_dev_enabled(%struct.ata_device* %46) #7, !dbg !11810
  %tobool56 = icmp ne i32 %call55, 0, !dbg !11810
  br i1 %tobool56, label %if.end59, label %if.then57, !dbg !11811

if.then57:                                        ; preds = %if.end54
  %47 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11812
  %call58 = call i32 @ata_eh_schedule_probe(%struct.ata_device* %47) #7, !dbg !11813
  br label %if.end59, !dbg !11813

if.end59:                                         ; preds = %if.then57, %if.end54
  br label %for.inc, !dbg !11814

for.inc:                                          ; preds = %if.end59
  %48 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11767
  %49 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11767
  %call60 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %48, %struct.ata_link* %49, i32 2) #7, !dbg !11767
  store %struct.ata_device* %call60, %struct.ata_device** %dev, align 8, !dbg !11767
  br label %for.cond25, !dbg !11767, !llvm.loop !11815

for.end:                                          ; preds = %for.cond25
  br label %for.inc61, !dbg !11817

for.inc61:                                        ; preds = %for.end
  %50 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11718
  %51 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11718
  %call62 = call %struct.ata_link* @ata_link_next(%struct.ata_link* %50, %struct.ata_port* %51, i32 0) #7, !dbg !11718
  store %struct.ata_link* %call62, %struct.ata_link** %link, align 8, !dbg !11718
  br label %for.cond, !dbg !11718, !llvm.loop !11818

for.end63:                                        ; preds = %for.cond
  br label %retry, !dbg !11819

retry:                                            ; preds = %if.then302, %for.end63
  call void @llvm.dbg.label(metadata !11820), !dbg !11821
  store i32 0, i32* %rc, align 4, !dbg !11822
  %52 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11823
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %52, i32 0, i32 4, !dbg !11825
  %53 = load i32, i32* %pflags, align 32, !dbg !11825
  %and64 = and i32 %53, 512, !dbg !11826
  %tobool65 = icmp ne i32 %and64, 0, !dbg !11826
  br i1 %tobool65, label %if.then66, label %if.end67, !dbg !11827

if.then66:                                        ; preds = %retry
  br label %out, !dbg !11828

if.end67:                                         ; preds = %retry
  %54 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11829
  %call68 = call %struct.ata_link* @ata_link_next(%struct.ata_link* null, %struct.ata_port* %54, i32 0) #7, !dbg !11829
  store %struct.ata_link* %call68, %struct.ata_link** %link, align 8, !dbg !11829
  br label %for.cond69, !dbg !11829

for.cond69:                                       ; preds = %for.inc90, %if.end67
  %55 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11831
  %tobool70 = icmp ne %struct.ata_link* %55, null, !dbg !11829
  br i1 %tobool70, label %for.body71, label %for.end92, !dbg !11829

for.body71:                                       ; preds = %for.cond69
  call void @llvm.dbg.declare(metadata %struct.ata_eh_context** %ehc72, metadata !11833, metadata !DIExpression()), !dbg !11835
  %56 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11836
  %eh_context73 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %56, i32 0, i32 12, !dbg !11837
  store %struct.ata_eh_context* %eh_context73, %struct.ata_eh_context** %ehc72, align 8, !dbg !11835
  %57 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11838
  %call74 = call i32 @ata_eh_skip_recovery(%struct.ata_link* %57) #7, !dbg !11840
  %tobool75 = icmp ne i32 %call74, 0, !dbg !11840
  br i1 %tobool75, label %if.then76, label %if.end79, !dbg !11841

if.then76:                                        ; preds = %for.body71
  %58 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc72, align 8, !dbg !11842
  %i77 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %58, i32 0, i32 0, !dbg !11843
  %action78 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i77, i32 0, i32 3, !dbg !11844
  store i32 0, i32* %action78, align 8, !dbg !11845
  br label %if.end79, !dbg !11842

if.end79:                                         ; preds = %if.then76, %for.body71
  %59 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11846
  %call80 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %59, i32 2) #7, !dbg !11846
  store %struct.ata_device* %call80, %struct.ata_device** %dev, align 8, !dbg !11846
  br label %for.cond81, !dbg !11846

for.cond81:                                       ; preds = %for.inc87, %if.end79
  %60 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11848
  %tobool82 = icmp ne %struct.ata_device* %60, null, !dbg !11846
  br i1 %tobool82, label %for.body83, label %for.end89, !dbg !11846

for.body83:                                       ; preds = %for.cond81
  %61 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc72, align 8, !dbg !11850
  %classes = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %61, i32 0, i32 3, !dbg !11851
  %62 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11852
  %devno84 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %62, i32 0, i32 1, !dbg !11853
  %63 = load i32, i32* %devno84, align 8, !dbg !11853
  %idxprom85 = zext i32 %63 to i64, !dbg !11850
  %arrayidx86 = getelementptr [2 x i32], [2 x i32]* %classes, i64 0, i64 %idxprom85, !dbg !11850
  store i32 0, i32* %arrayidx86, align 4, !dbg !11854
  br label %for.inc87, !dbg !11850

for.inc87:                                        ; preds = %for.body83
  %64 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11848
  %65 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11848
  %call88 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %64, %struct.ata_link* %65, i32 2) #7, !dbg !11848
  store %struct.ata_device* %call88, %struct.ata_device** %dev, align 8, !dbg !11848
  br label %for.cond81, !dbg !11848, !llvm.loop !11855

for.end89:                                        ; preds = %for.cond81
  br label %for.inc90, !dbg !11857

for.inc90:                                        ; preds = %for.end89
  %66 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11831
  %67 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11831
  %call91 = call %struct.ata_link* @ata_link_next(%struct.ata_link* %66, %struct.ata_port* %67, i32 0) #7, !dbg !11831
  store %struct.ata_link* %call91, %struct.ata_link** %link, align 8, !dbg !11831
  br label %for.cond69, !dbg !11831, !llvm.loop !11858

for.end92:                                        ; preds = %for.cond69
  %68 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11860
  %call93 = call %struct.ata_link* @ata_link_next(%struct.ata_link* null, %struct.ata_port* %68, i32 0) #7, !dbg !11860
  store %struct.ata_link* %call93, %struct.ata_link** %link, align 8, !dbg !11860
  br label %for.cond94, !dbg !11860

for.cond94:                                       ; preds = %for.inc110, %for.end92
  %69 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11862
  %tobool95 = icmp ne %struct.ata_link* %69, null, !dbg !11860
  br i1 %tobool95, label %for.body96, label %for.end112, !dbg !11860

for.body96:                                       ; preds = %for.cond94
  call void @llvm.dbg.declare(metadata %struct.ata_eh_context** %ehc97, metadata !11864, metadata !DIExpression()), !dbg !11866
  %70 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11867
  %eh_context98 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %70, i32 0, i32 12, !dbg !11868
  store %struct.ata_eh_context* %eh_context98, %struct.ata_eh_context** %ehc97, align 8, !dbg !11866
  %71 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc97, align 8, !dbg !11869
  %i99 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %71, i32 0, i32 0, !dbg !11871
  %action100 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i99, i32 0, i32 3, !dbg !11872
  %72 = load i32, i32* %action100, align 8, !dbg !11872
  %and101 = and i32 %72, 6, !dbg !11873
  %tobool102 = icmp ne i32 %and101, 0, !dbg !11873
  br i1 %tobool102, label %if.end104, label %if.then103, !dbg !11874

if.then103:                                       ; preds = %for.body96
  br label %for.inc110, !dbg !11875

if.end104:                                        ; preds = %for.body96
  %73 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11876
  %74 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11877
  %call105 = call i32 @ata_link_nr_vacant(%struct.ata_link* %74) #7, !dbg !11878
  %75 = load i32 (%struct.ata_link*, i64)*, i32 (%struct.ata_link*, i64)** %prereset.addr, align 8, !dbg !11879
  %76 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %softreset.addr, align 8, !dbg !11880
  %77 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %hardreset.addr, align 8, !dbg !11881
  %78 = load void (%struct.ata_link*, i32*)*, void (%struct.ata_link*, i32*)** %postreset.addr, align 8, !dbg !11882
  %call106 = call i32 @ata_eh_reset(%struct.ata_link* %73, i32 %call105, i32 (%struct.ata_link*, i64)* %75, i32 (%struct.ata_link*, i32*, i64)* %76, i32 (%struct.ata_link*, i32*, i64)* %77, void (%struct.ata_link*, i32*)* %78) #7, !dbg !11883
  store i32 %call106, i32* %rc, align 4, !dbg !11884
  %79 = load i32, i32* %rc, align 4, !dbg !11885
  %tobool107 = icmp ne i32 %79, 0, !dbg !11885
  br i1 %tobool107, label %if.then108, label %if.end109, !dbg !11887

if.then108:                                       ; preds = %if.end104
  %80 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11888
  call void (%struct.ata_link*, i8*, i8*, ...) @ata_link_printk(%struct.ata_link* %80, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.120, i64 0, i64 0)) #7, !dbg !11888
  br label %out, !dbg !11890

if.end109:                                        ; preds = %if.end104
  br label %for.inc110, !dbg !11891

for.inc110:                                       ; preds = %if.end109, %if.then103
  %81 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11862
  %82 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11862
  %call111 = call %struct.ata_link* @ata_link_next(%struct.ata_link* %81, %struct.ata_port* %82, i32 0) #7, !dbg !11862
  store %struct.ata_link* %call111, %struct.ata_link** %link, align 8, !dbg !11862
  br label %for.cond94, !dbg !11862, !llvm.loop !11892

for.end112:                                       ; preds = %for.cond94
  br label %do.body113, !dbg !11894

do.body113:                                       ; preds = %do.cond, %for.end112
  call void @llvm.dbg.declare(metadata i64* %now, metadata !11895, metadata !DIExpression()), !dbg !11897
  %83 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11898
  call void @ata_eh_pull_park_action(%struct.ata_port* %83) #7, !dbg !11899
  %84 = load volatile i64, i64* @jiffies, align 8, !dbg !11900
  store i64 %84, i64* %deadline, align 8, !dbg !11901
  %85 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11902
  %call114 = call %struct.ata_link* @ata_link_next(%struct.ata_link* null, %struct.ata_port* %85, i32 0) #7, !dbg !11902
  store %struct.ata_link* %call114, %struct.ata_link** %link, align 8, !dbg !11902
  br label %for.cond115, !dbg !11902

for.cond115:                                      ; preds = %for.inc159, %do.body113
  %86 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11904
  %tobool116 = icmp ne %struct.ata_link* %86, null, !dbg !11902
  br i1 %tobool116, label %for.body117, label %for.end161, !dbg !11902

for.body117:                                      ; preds = %for.cond115
  %87 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11906
  %call118 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %87, i32 2) #7, !dbg !11906
  store %struct.ata_device* %call118, %struct.ata_device** %dev, align 8, !dbg !11906
  br label %for.cond119, !dbg !11906

for.cond119:                                      ; preds = %for.inc156, %for.body117
  %88 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11909
  %tobool120 = icmp ne %struct.ata_device* %88, null, !dbg !11906
  br i1 %tobool120, label %for.body121, label %for.end158, !dbg !11906

for.body121:                                      ; preds = %for.cond119
  call void @llvm.dbg.declare(metadata %struct.ata_eh_context** %ehc122, metadata !11911, metadata !DIExpression()), !dbg !11913
  %89 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11914
  %eh_context123 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %89, i32 0, i32 12, !dbg !11915
  store %struct.ata_eh_context* %eh_context123, %struct.ata_eh_context** %ehc122, align 8, !dbg !11913
  call void @llvm.dbg.declare(metadata i64* %tmp124, metadata !11916, metadata !DIExpression()), !dbg !11917
  %90 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11918
  %class = getelementptr inbounds %struct.ata_device, %struct.ata_device* %90, i32 0, i32 11, !dbg !11920
  %91 = load i32, i32* %class, align 64, !dbg !11920
  %cmp125 = icmp ne i32 %91, 1, !dbg !11921
  br i1 %cmp125, label %land.lhs.true, label %if.end131, !dbg !11922

land.lhs.true:                                    ; preds = %for.body121
  %92 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11923
  %class127 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %92, i32 0, i32 11, !dbg !11924
  %93 = load i32, i32* %class127, align 64, !dbg !11924
  %cmp128 = icmp ne i32 %93, 9, !dbg !11925
  br i1 %cmp128, label %if.then130, label %if.end131, !dbg !11926

if.then130:                                       ; preds = %land.lhs.true
  br label %for.inc156, !dbg !11927

if.end131:                                        ; preds = %land.lhs.true, %for.body121
  %94 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc122, align 8, !dbg !11928
  %i132 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %94, i32 0, i32 0, !dbg !11930
  %dev_action133 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i132, i32 0, i32 4, !dbg !11931
  %95 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11932
  %devno134 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %95, i32 0, i32 1, !dbg !11933
  %96 = load i32, i32* %devno134, align 8, !dbg !11933
  %idxprom135 = zext i32 %96 to i64, !dbg !11928
  %arrayidx136 = getelementptr [2 x i32], [2 x i32]* %dev_action133, i64 0, i64 %idxprom135, !dbg !11928
  %97 = load i32, i32* %arrayidx136, align 4, !dbg !11928
  %and137 = and i32 %97, 32, !dbg !11934
  %tobool138 = icmp ne i32 %and137, 0, !dbg !11934
  br i1 %tobool138, label %if.end140, label %if.then139, !dbg !11935

if.then139:                                       ; preds = %if.end131
  br label %for.inc156, !dbg !11936

if.end140:                                        ; preds = %if.end131
  %98 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11937
  %unpark_deadline = getelementptr inbounds %struct.ata_device, %struct.ata_device* %98, i32 0, i32 12, !dbg !11938
  %99 = load i64, i64* %unpark_deadline, align 8, !dbg !11938
  store i64 %99, i64* %tmp124, align 8, !dbg !11939
  %100 = load i64, i64* %deadline, align 8, !dbg !11940
  %101 = load i64, i64* %tmp124, align 8, !dbg !11940
  %sub = sub i64 %100, %101, !dbg !11940
  %cmp141 = icmp slt i64 %sub, 0, !dbg !11940
  br i1 %cmp141, label %if.then143, label %if.else144, !dbg !11942

if.then143:                                       ; preds = %if.end140
  %102 = load i64, i64* %tmp124, align 8, !dbg !11943
  store i64 %102, i64* %deadline, align 8, !dbg !11944
  br label %if.end150, !dbg !11945

if.else144:                                       ; preds = %if.end140
  %103 = load volatile i64, i64* @jiffies, align 8, !dbg !11946
  %104 = load i64, i64* %tmp124, align 8, !dbg !11946
  %sub145 = sub i64 %103, %104, !dbg !11946
  %cmp146 = icmp sge i64 %sub145, 0, !dbg !11946
  br i1 %cmp146, label %if.then148, label %if.end149, !dbg !11948

if.then148:                                       ; preds = %if.else144
  br label %for.inc156, !dbg !11949

if.end149:                                        ; preds = %if.else144
  br label %if.end150

if.end150:                                        ; preds = %if.end149, %if.then143
  %105 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc122, align 8, !dbg !11950
  %unloaded_mask = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %105, i32 0, i32 5, !dbg !11952
  %106 = load i32, i32* %unloaded_mask, align 4, !dbg !11952
  %107 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11953
  %devno151 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %107, i32 0, i32 1, !dbg !11954
  %108 = load i32, i32* %devno151, align 8, !dbg !11954
  %shl = shl i32 1, %108, !dbg !11955
  %and152 = and i32 %106, %shl, !dbg !11956
  %tobool153 = icmp ne i32 %and152, 0, !dbg !11956
  br i1 %tobool153, label %if.then154, label %if.end155, !dbg !11957

if.then154:                                       ; preds = %if.end150
  br label %for.inc156, !dbg !11958

if.end155:                                        ; preds = %if.end150
  %109 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11959
  call void @ata_eh_park_issue_cmd(%struct.ata_device* %109, i32 1) #7, !dbg !11960
  br label %for.inc156, !dbg !11961

for.inc156:                                       ; preds = %if.end155, %if.then154, %if.then148, %if.then139, %if.then130
  %110 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11909
  %111 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11909
  %call157 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %110, %struct.ata_link* %111, i32 2) #7, !dbg !11909
  store %struct.ata_device* %call157, %struct.ata_device** %dev, align 8, !dbg !11909
  br label %for.cond119, !dbg !11909, !llvm.loop !11962

for.end158:                                       ; preds = %for.cond119
  br label %for.inc159, !dbg !11964

for.inc159:                                       ; preds = %for.end158
  %112 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11904
  %113 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11904
  %call160 = call %struct.ata_link* @ata_link_next(%struct.ata_link* %112, %struct.ata_port* %113, i32 0) #7, !dbg !11904
  store %struct.ata_link* %call160, %struct.ata_link** %link, align 8, !dbg !11904
  br label %for.cond115, !dbg !11904, !llvm.loop !11965

for.end161:                                       ; preds = %for.cond115
  %114 = load volatile i64, i64* @jiffies, align 8, !dbg !11967
  store i64 %114, i64* %now, align 8, !dbg !11968
  %115 = load i64, i64* %now, align 8, !dbg !11969
  %116 = load i64, i64* %deadline, align 8, !dbg !11969
  %sub162 = sub i64 %115, %116, !dbg !11969
  %cmp163 = icmp sge i64 %sub162, 0, !dbg !11969
  br i1 %cmp163, label %if.then165, label %if.end166, !dbg !11971

if.then165:                                       ; preds = %for.end161
  br label %do.end170, !dbg !11972

if.end166:                                        ; preds = %for.end161
  %117 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11973
  call void @ata_eh_release(%struct.ata_port* %117) #7, !dbg !11974
  %118 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11975
  %park_req_pending = getelementptr inbounds %struct.ata_port, %struct.ata_port* %118, i32 0, i32 42, !dbg !11976
  %119 = load i64, i64* %deadline, align 8, !dbg !11977
  %120 = load i64, i64* %now, align 8, !dbg !11978
  %sub167 = sub i64 %119, %120, !dbg !11979
  %call168 = call i64 @wait_for_completion_timeout(%struct.completion* %park_req_pending, i64 %sub167) #7, !dbg !11980
  store i64 %call168, i64* %deadline, align 8, !dbg !11981
  %121 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11982
  call void @ata_eh_acquire(%struct.ata_port* %121) #7, !dbg !11983
  br label %do.cond, !dbg !11984

do.cond:                                          ; preds = %if.end166
  %122 = load i64, i64* %deadline, align 8, !dbg !11985
  %tobool169 = icmp ne i64 %122, 0, !dbg !11984
  br i1 %tobool169, label %do.body113, label %do.end170, !dbg !11984, !llvm.loop !11986

do.end170:                                        ; preds = %do.cond, %if.then165
  %123 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11988
  %call171 = call %struct.ata_link* @ata_link_next(%struct.ata_link* null, %struct.ata_port* %123, i32 0) #7, !dbg !11988
  store %struct.ata_link* %call171, %struct.ata_link** %link, align 8, !dbg !11988
  br label %for.cond172, !dbg !11988

for.cond172:                                      ; preds = %for.inc190, %do.end170
  %124 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11990
  %tobool173 = icmp ne %struct.ata_link* %124, null, !dbg !11988
  br i1 %tobool173, label %for.body174, label %for.end192, !dbg !11988

for.body174:                                      ; preds = %for.cond172
  %125 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11992
  %call175 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %125, i32 2) #7, !dbg !11992
  store %struct.ata_device* %call175, %struct.ata_device** %dev, align 8, !dbg !11992
  br label %for.cond176, !dbg !11992

for.cond176:                                      ; preds = %for.inc187, %for.body174
  %126 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11995
  %tobool177 = icmp ne %struct.ata_device* %126, null, !dbg !11992
  br i1 %tobool177, label %for.body178, label %for.end189, !dbg !11992

for.body178:                                      ; preds = %for.cond176
  %127 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11997
  %eh_context179 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %127, i32 0, i32 12, !dbg !12000
  %unloaded_mask180 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %eh_context179, i32 0, i32 5, !dbg !12001
  %128 = load i32, i32* %unloaded_mask180, align 4, !dbg !12001
  %129 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12002
  %devno181 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %129, i32 0, i32 1, !dbg !12003
  %130 = load i32, i32* %devno181, align 8, !dbg !12003
  %shl182 = shl i32 1, %130, !dbg !12004
  %and183 = and i32 %128, %shl182, !dbg !12005
  %tobool184 = icmp ne i32 %and183, 0, !dbg !12005
  br i1 %tobool184, label %if.end186, label %if.then185, !dbg !12006

if.then185:                                       ; preds = %for.body178
  br label %for.inc187, !dbg !12007

if.end186:                                        ; preds = %for.body178
  %131 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12008
  call void @ata_eh_park_issue_cmd(%struct.ata_device* %131, i32 0) #7, !dbg !12009
  %132 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !12010
  %133 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12011
  call void @ata_eh_done(%struct.ata_link* %132, %struct.ata_device* %133, i32 32) #7, !dbg !12012
  br label %for.inc187, !dbg !12013

for.inc187:                                       ; preds = %if.end186, %if.then185
  %134 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !11995
  %135 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11995
  %call188 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %134, %struct.ata_link* %135, i32 2) #7, !dbg !11995
  store %struct.ata_device* %call188, %struct.ata_device** %dev, align 8, !dbg !11995
  br label %for.cond176, !dbg !11995, !llvm.loop !12014

for.end189:                                       ; preds = %for.cond176
  br label %for.inc190, !dbg !12016

for.inc190:                                       ; preds = %for.end189
  %136 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !11990
  %137 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !11990
  %call191 = call %struct.ata_link* @ata_link_next(%struct.ata_link* %136, %struct.ata_port* %137, i32 0) #7, !dbg !11990
  store %struct.ata_link* %call191, %struct.ata_link** %link, align 8, !dbg !11990
  br label %for.cond172, !dbg !11990, !llvm.loop !12017

for.end192:                                       ; preds = %for.cond172
  store i32 0, i32* %nr_fails, align 4, !dbg !12019
  %138 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12020
  %call193 = call %struct.ata_link* @ata_link_next(%struct.ata_link* null, %struct.ata_port* %138, i32 2) #7, !dbg !12020
  store %struct.ata_link* %call193, %struct.ata_link** %link, align 8, !dbg !12020
  br label %for.cond194, !dbg !12020

for.cond194:                                      ; preds = %for.inc298, %for.end192
  %139 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !12022
  %tobool195 = icmp ne %struct.ata_link* %139, null, !dbg !12020
  br i1 %tobool195, label %for.body196, label %for.end300, !dbg !12020

for.body196:                                      ; preds = %for.cond194
  call void @llvm.dbg.declare(metadata %struct.ata_eh_context** %ehc197, metadata !12024, metadata !DIExpression()), !dbg !12026
  %140 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !12027
  %eh_context198 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %140, i32 0, i32 12, !dbg !12028
  store %struct.ata_eh_context* %eh_context198, %struct.ata_eh_context** %ehc197, align 8, !dbg !12026
  %141 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12029
  %call199 = call zeroext i1 @sata_pmp_attached(%struct.ata_port* %141) #7, !dbg !12031
  br i1 %call199, label %land.lhs.true201, label %if.end205, !dbg !12032

land.lhs.true201:                                 ; preds = %for.body196
  %142 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !12033
  %call202 = call zeroext i1 @ata_is_host_link(%struct.ata_link* %142) #7, !dbg !12034
  br i1 %call202, label %if.then204, label %if.end205, !dbg !12035

if.then204:                                       ; preds = %land.lhs.true201
  br label %config_lpm, !dbg !12036

if.end205:                                        ; preds = %land.lhs.true201, %for.body196
  %143 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !12037
  %call206 = call i32 @ata_eh_revalidate_and_attach(%struct.ata_link* %143, %struct.ata_device** %dev) #7, !dbg !12038
  store i32 %call206, i32* %rc, align 4, !dbg !12039
  %144 = load i32, i32* %rc, align 4, !dbg !12040
  %tobool207 = icmp ne i32 %144, 0, !dbg !12040
  br i1 %tobool207, label %if.then208, label %if.end209, !dbg !12042

if.then208:                                       ; preds = %if.end205
  br label %rest_fail, !dbg !12043

if.end209:                                        ; preds = %if.end205
  %145 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !12044
  %device = getelementptr inbounds %struct.ata_link, %struct.ata_link* %145, i32 0, i32 14, !dbg !12046
  %arraydecay = getelementptr inbounds [2 x %struct.ata_device], [2 x %struct.ata_device]* %device, i64 0, i64 0, !dbg !12047
  %class210 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %arraydecay, i32 0, i32 11, !dbg !12047
  %146 = load i32, i32* %class210, align 64, !dbg !12047
  %cmp211 = icmp eq i32 %146, 5, !dbg !12048
  br i1 %cmp211, label %if.then213, label %if.end216, !dbg !12049

if.then213:                                       ; preds = %if.end209
  %147 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc197, align 8, !dbg !12050
  %i214 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %147, i32 0, i32 0, !dbg !12052
  %action215 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i214, i32 0, i32 3, !dbg !12053
  store i32 0, i32* %action215, align 8, !dbg !12054
  store i32 0, i32* %retval, align 4, !dbg !12055
  br label %return, !dbg !12055

if.end216:                                        ; preds = %if.end209
  %148 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc197, align 8, !dbg !12056
  %i217 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %148, i32 0, i32 0, !dbg !12058
  %flags218 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i217, i32 0, i32 5, !dbg !12059
  %149 = load i32, i32* %flags218, align 4, !dbg !12059
  %and219 = and i32 %149, 524288, !dbg !12060
  %tobool220 = icmp ne i32 %and219, 0, !dbg !12060
  br i1 %tobool220, label %if.then221, label %if.end229, !dbg !12061

if.then221:                                       ; preds = %if.end216
  %150 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !12062
  %call222 = call i32 @ata_set_mode(%struct.ata_link* %150, %struct.ata_device** %dev) #7, !dbg !12064
  store i32 %call222, i32* %rc, align 4, !dbg !12065
  %151 = load i32, i32* %rc, align 4, !dbg !12066
  %tobool223 = icmp ne i32 %151, 0, !dbg !12066
  br i1 %tobool223, label %if.then224, label %if.end225, !dbg !12068

if.then224:                                       ; preds = %if.then221
  br label %rest_fail, !dbg !12069

if.end225:                                        ; preds = %if.then221
  %152 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc197, align 8, !dbg !12070
  %i226 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %152, i32 0, i32 0, !dbg !12071
  %flags227 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i226, i32 0, i32 5, !dbg !12072
  %153 = load i32, i32* %flags227, align 4, !dbg !12073
  %and228 = and i32 %153, -524289, !dbg !12073
  store i32 %and228, i32* %flags227, align 4, !dbg !12073
  br label %if.end229, !dbg !12074

if.end229:                                        ; preds = %if.end225, %if.end216
  %154 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc197, align 8, !dbg !12075
  %i230 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %154, i32 0, i32 0, !dbg !12077
  %flags231 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i230, i32 0, i32 5, !dbg !12078
  %155 = load i32, i32* %flags231, align 4, !dbg !12078
  %and232 = and i32 %155, 196608, !dbg !12079
  %tobool233 = icmp ne i32 %and232, 0, !dbg !12079
  br i1 %tobool233, label %if.then234, label %if.end254, !dbg !12080

if.then234:                                       ; preds = %if.end229
  %156 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !12081
  %call235 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %156, i32 2) #7, !dbg !12081
  store %struct.ata_device* %call235, %struct.ata_device** %dev, align 8, !dbg !12081
  br label %for.cond236, !dbg !12081

for.cond236:                                      ; preds = %for.inc251, %if.then234
  %157 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12084
  %tobool237 = icmp ne %struct.ata_device* %157, null, !dbg !12081
  br i1 %tobool237, label %for.body238, label %for.end253, !dbg !12081

for.body238:                                      ; preds = %for.cond236
  %158 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12086
  %class239 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %158, i32 0, i32 11, !dbg !12089
  %159 = load i32, i32* %class239, align 64, !dbg !12089
  %cmp240 = icmp ne i32 %159, 3, !dbg !12090
  br i1 %cmp240, label %if.then242, label %if.end243, !dbg !12091

if.then242:                                       ; preds = %for.body238
  br label %for.inc251, !dbg !12092

if.end243:                                        ; preds = %for.body238
  %160 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12093
  %call244 = call i32 @atapi_eh_clear_ua(%struct.ata_device* %160) #7, !dbg !12094
  store i32 %call244, i32* %rc, align 4, !dbg !12095
  %161 = load i32, i32* %rc, align 4, !dbg !12096
  %tobool245 = icmp ne i32 %161, 0, !dbg !12096
  br i1 %tobool245, label %if.then246, label %if.end247, !dbg !12098

if.then246:                                       ; preds = %if.end243
  br label %rest_fail, !dbg !12099

if.end247:                                        ; preds = %if.end243
  %162 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12100
  %call248 = call zeroext i1 @zpodd_dev_enabled(%struct.ata_device* %162) #7, !dbg !12102
  br i1 %call248, label %if.then249, label %if.end250, !dbg !12103

if.then249:                                       ; preds = %if.end247
  %163 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12104
  call void @zpodd_post_poweron(%struct.ata_device* %163) #7, !dbg !12105
  br label %if.end250, !dbg !12105

if.end250:                                        ; preds = %if.then249, %if.end247
  br label %for.inc251, !dbg !12106

for.inc251:                                       ; preds = %if.end250, %if.then242
  %164 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12084
  %165 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !12084
  %call252 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %164, %struct.ata_link* %165, i32 2) #7, !dbg !12084
  store %struct.ata_device* %call252, %struct.ata_device** %dev, align 8, !dbg !12084
  br label %for.cond236, !dbg !12084, !llvm.loop !12107

for.end253:                                       ; preds = %for.cond236
  br label %if.end254, !dbg !12109

if.end254:                                        ; preds = %for.end253, %if.end229
  %166 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !12110
  %call255 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %166, i32 2) #7, !dbg !12110
  store %struct.ata_device* %call255, %struct.ata_device** %dev, align 8, !dbg !12110
  br label %for.cond256, !dbg !12110

for.cond256:                                      ; preds = %for.inc272, %if.end254
  %167 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12112
  %tobool257 = icmp ne %struct.ata_device* %167, null, !dbg !12110
  br i1 %tobool257, label %for.body258, label %for.end274, !dbg !12110

for.body258:                                      ; preds = %for.cond256
  %168 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12114
  %class259 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %168, i32 0, i32 11, !dbg !12117
  %169 = load i32, i32* %class259, align 64, !dbg !12117
  %cmp260 = icmp ne i32 %169, 1, !dbg !12118
  br i1 %cmp260, label %land.lhs.true262, label %if.end267, !dbg !12119

land.lhs.true262:                                 ; preds = %for.body258
  %170 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12120
  %class263 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %170, i32 0, i32 11, !dbg !12121
  %171 = load i32, i32* %class263, align 64, !dbg !12121
  %cmp264 = icmp ne i32 %171, 9, !dbg !12122
  br i1 %cmp264, label %if.then266, label %if.end267, !dbg !12123

if.then266:                                       ; preds = %land.lhs.true262
  br label %for.inc272, !dbg !12124

if.end267:                                        ; preds = %land.lhs.true262, %for.body258
  %172 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12125
  %call268 = call i32 @ata_eh_maybe_retry_flush(%struct.ata_device* %172) #7, !dbg !12126
  store i32 %call268, i32* %rc, align 4, !dbg !12127
  %173 = load i32, i32* %rc, align 4, !dbg !12128
  %tobool269 = icmp ne i32 %173, 0, !dbg !12128
  br i1 %tobool269, label %if.then270, label %if.end271, !dbg !12130

if.then270:                                       ; preds = %if.end267
  br label %rest_fail, !dbg !12131

if.end271:                                        ; preds = %if.end267
  br label %for.inc272, !dbg !12132

for.inc272:                                       ; preds = %if.end271, %if.then266
  %174 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12112
  %175 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !12112
  %call273 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %174, %struct.ata_link* %175, i32 2) #7, !dbg !12112
  store %struct.ata_device* %call273, %struct.ata_device** %dev, align 8, !dbg !12112
  br label %for.cond256, !dbg !12112, !llvm.loop !12133

for.end274:                                       ; preds = %for.cond256
  br label %config_lpm, !dbg !12134

config_lpm:                                       ; preds = %for.end274, %if.then204
  call void @llvm.dbg.label(metadata !12135), !dbg !12136
  %176 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !12137
  %lpm_policy = getelementptr inbounds %struct.ata_link, %struct.ata_link* %176, i32 0, i32 10, !dbg !12139
  %177 = load i32, i32* %lpm_policy, align 4, !dbg !12139
  %178 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12140
  %target_lpm_policy = getelementptr inbounds %struct.ata_port, %struct.ata_port* %178, i32 0, i32 44, !dbg !12141
  %179 = load i32, i32* %target_lpm_policy, align 4, !dbg !12141
  %cmp275 = icmp ne i32 %177, %179, !dbg !12142
  br i1 %cmp275, label %if.then277, label %if.end283, !dbg !12143

if.then277:                                       ; preds = %config_lpm
  %180 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !12144
  %181 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12146
  %target_lpm_policy278 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %181, i32 0, i32 44, !dbg !12147
  %182 = load i32, i32* %target_lpm_policy278, align 4, !dbg !12147
  %call279 = call i32 @ata_eh_set_lpm(%struct.ata_link* %180, i32 %182, %struct.ata_device** %dev) #7, !dbg !12148
  store i32 %call279, i32* %rc, align 4, !dbg !12149
  %183 = load i32, i32* %rc, align 4, !dbg !12150
  %tobool280 = icmp ne i32 %183, 0, !dbg !12150
  br i1 %tobool280, label %if.then281, label %if.end282, !dbg !12152

if.then281:                                       ; preds = %if.then277
  br label %rest_fail, !dbg !12153

if.end282:                                        ; preds = %if.then277
  br label %if.end283, !dbg !12154

if.end283:                                        ; preds = %if.end282, %config_lpm
  %184 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc197, align 8, !dbg !12155
  %i284 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %184, i32 0, i32 0, !dbg !12156
  %flags285 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i284, i32 0, i32 5, !dbg !12157
  store i32 0, i32* %flags285, align 4, !dbg !12158
  br label %for.inc298, !dbg !12159

rest_fail:                                        ; preds = %if.then281, %if.then270, %if.then246, %if.then224, %if.then208
  call void @llvm.dbg.label(metadata !12160), !dbg !12161
  %185 = load i32, i32* %nr_fails, align 4, !dbg !12162
  %inc = add i32 %185, 1, !dbg !12162
  store i32 %inc, i32* %nr_fails, align 4, !dbg !12162
  %186 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12163
  %tobool286 = icmp ne %struct.ata_device* %186, null, !dbg !12163
  br i1 %tobool286, label %if.then287, label %if.end289, !dbg !12165

if.then287:                                       ; preds = %rest_fail
  %187 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12166
  %188 = load i32, i32* %rc, align 4, !dbg !12167
  %call288 = call i32 @ata_eh_handle_dev_fail(%struct.ata_device* %187, i32 %188) #7, !dbg !12168
  br label %if.end289, !dbg !12168

if.end289:                                        ; preds = %if.then287, %rest_fail
  %189 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12169
  %pflags290 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %189, i32 0, i32 4, !dbg !12171
  %190 = load i32, i32* %pflags290, align 32, !dbg !12171
  %and291 = and i32 %190, 4, !dbg !12172
  %tobool292 = icmp ne i32 %and291, 0, !dbg !12172
  br i1 %tobool292, label %if.then293, label %if.end297, !dbg !12173

if.then293:                                       ; preds = %if.end289
  %191 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12174
  %call294 = call zeroext i1 @sata_pmp_attached(%struct.ata_port* %191) #7, !dbg !12177
  br i1 %call294, label %if.then295, label %if.end296, !dbg !12178

if.then295:                                       ; preds = %if.then293
  br label %out, !dbg !12179

if.end296:                                        ; preds = %if.then293
  br label %for.end300, !dbg !12180

if.end297:                                        ; preds = %if.end289
  br label %for.inc298, !dbg !12181

for.inc298:                                       ; preds = %if.end297, %if.end283
  %192 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !12022
  %193 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12022
  %call299 = call %struct.ata_link* @ata_link_next(%struct.ata_link* %192, %struct.ata_port* %193, i32 2) #7, !dbg !12022
  store %struct.ata_link* %call299, %struct.ata_link** %link, align 8, !dbg !12022
  br label %for.cond194, !dbg !12022, !llvm.loop !12182

for.end300:                                       ; preds = %if.end296, %for.cond194
  %194 = load i32, i32* %nr_fails, align 4, !dbg !12184
  %tobool301 = icmp ne i32 %194, 0, !dbg !12184
  br i1 %tobool301, label %if.then302, label %if.end303, !dbg !12186

if.then302:                                       ; preds = %for.end300
  br label %retry, !dbg !12187

if.end303:                                        ; preds = %for.end300
  br label %out, !dbg !12184

out:                                              ; preds = %if.end303, %if.then295, %if.then108, %if.then66
  call void @llvm.dbg.label(metadata !12188), !dbg !12189
  %195 = load i32, i32* %rc, align 4, !dbg !12190
  %tobool304 = icmp ne i32 %195, 0, !dbg !12190
  br i1 %tobool304, label %land.lhs.true305, label %if.end308, !dbg !12192

land.lhs.true305:                                 ; preds = %out
  %196 = load %struct.ata_link**, %struct.ata_link*** %r_failed_link.addr, align 8, !dbg !12193
  %tobool306 = icmp ne %struct.ata_link** %196, null, !dbg !12193
  br i1 %tobool306, label %if.then307, label %if.end308, !dbg !12194

if.then307:                                       ; preds = %land.lhs.true305
  %197 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !12195
  %198 = load %struct.ata_link**, %struct.ata_link*** %r_failed_link.addr, align 8, !dbg !12196
  store %struct.ata_link* %197, %struct.ata_link** %198, align 8, !dbg !12197
  br label %if.end308, !dbg !12198

if.end308:                                        ; preds = %if.then307, %land.lhs.true305, %out
  %199 = load i32, i32* %rc, align 4, !dbg !12199
  store i32 %199, i32* %retval, align 4, !dbg !12200
  br label %return, !dbg !12200

return:                                           ; preds = %if.end308, %if.then213
  %200 = load i32, i32* %retval, align 4, !dbg !12201
  ret i32 %200, !dbg !12201
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_eh_schedule_probe(%struct.ata_device* %dev) #0 !dbg !12202 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ata_device*, align 8
  %ehc = alloca %struct.ata_eh_context*, align 8
  %link1 = alloca %struct.ata_link*, align 8
  %trials = alloca i32, align 4
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !12203, metadata !DIExpression()), !dbg !12204
  call void @llvm.dbg.declare(metadata %struct.ata_eh_context** %ehc, metadata !12205, metadata !DIExpression()), !dbg !12206
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12207
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 0, !dbg !12208
  %1 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !12208
  %eh_context = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 12, !dbg !12209
  store %struct.ata_eh_context* %eh_context, %struct.ata_eh_context** %ehc, align 8, !dbg !12206
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link1, metadata !12210, metadata !DIExpression()), !dbg !12211
  %2 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12212
  %call = call %struct.ata_link* @ata_dev_phys_link(%struct.ata_device* %2) #7, !dbg !12213
  store %struct.ata_link* %call, %struct.ata_link** %link1, align 8, !dbg !12211
  call void @llvm.dbg.declare(metadata i32* %trials, metadata !12214, metadata !DIExpression()), !dbg !12215
  store i32 0, i32* %trials, align 4, !dbg !12215
  %3 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !12216
  %i = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %3, i32 0, i32 0, !dbg !12218
  %probe_mask = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i, i32 0, i32 6, !dbg !12219
  %4 = load i32, i32* %probe_mask, align 8, !dbg !12219
  %5 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12220
  %devno = getelementptr inbounds %struct.ata_device, %struct.ata_device* %5, i32 0, i32 1, !dbg !12221
  %6 = load i32, i32* %devno, align 8, !dbg !12221
  %shl = shl i32 1, %6, !dbg !12222
  %and = and i32 %4, %shl, !dbg !12223
  %tobool = icmp ne i32 %and, 0, !dbg !12223
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !12224

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !12225
  %did_probe_mask = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %7, i32 0, i32 4, !dbg !12226
  %8 = load i32, i32* %did_probe_mask, align 8, !dbg !12226
  %9 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12227
  %devno2 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %9, i32 0, i32 1, !dbg !12228
  %10 = load i32, i32* %devno2, align 8, !dbg !12228
  %shl3 = shl i32 1, %10, !dbg !12229
  %and4 = and i32 %8, %shl3, !dbg !12230
  %tobool5 = icmp ne i32 %and4, 0, !dbg !12230
  br i1 %tobool5, label %if.then, label %if.end, !dbg !12231

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !12232
  br label %return, !dbg !12232

if.end:                                           ; preds = %lor.lhs.false
  %11 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12233
  call void @ata_eh_detach_dev(%struct.ata_device* %11) #7, !dbg !12234
  %12 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12235
  call void @ata_dev_init(%struct.ata_device* %12) #7, !dbg !12236
  %13 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12237
  %devno6 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %13, i32 0, i32 1, !dbg !12238
  %14 = load i32, i32* %devno6, align 8, !dbg !12238
  %shl7 = shl i32 1, %14, !dbg !12239
  %15 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !12240
  %did_probe_mask8 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %15, i32 0, i32 4, !dbg !12241
  %16 = load i32, i32* %did_probe_mask8, align 8, !dbg !12242
  %or = or i32 %16, %shl7, !dbg !12242
  store i32 %or, i32* %did_probe_mask8, align 8, !dbg !12242
  %17 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !12243
  %i9 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %17, i32 0, i32 0, !dbg !12244
  %action = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i9, i32 0, i32 3, !dbg !12245
  %18 = load i32, i32* %action, align 8, !dbg !12246
  %or10 = or i32 %18, 6, !dbg !12246
  store i32 %or10, i32* %action, align 8, !dbg !12246
  %19 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !12247
  %saved_xfer_mode = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %19, i32 0, i32 7, !dbg !12248
  %20 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12249
  %devno11 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %20, i32 0, i32 1, !dbg !12250
  %21 = load i32, i32* %devno11, align 8, !dbg !12250
  %idxprom = zext i32 %21 to i64, !dbg !12247
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %saved_xfer_mode, i64 0, i64 %idxprom, !dbg !12247
  store i8 0, i8* %arrayidx, align 1, !dbg !12251
  %22 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12252
  %devno12 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %22, i32 0, i32 1, !dbg !12253
  %23 = load i32, i32* %devno12, align 8, !dbg !12253
  %shl13 = shl i32 1, %23, !dbg !12254
  %neg = xor i32 %shl13, -1, !dbg !12255
  %24 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !12256
  %saved_ncq_enabled = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %24, i32 0, i32 6, !dbg !12257
  %25 = load i32, i32* %saved_ncq_enabled, align 8, !dbg !12258
  %and14 = and i32 %25, %neg, !dbg !12258
  store i32 %and14, i32* %saved_ncq_enabled, align 8, !dbg !12258
  %26 = load %struct.ata_link*, %struct.ata_link** %link1, align 8, !dbg !12259
  %lpm_policy = getelementptr inbounds %struct.ata_link, %struct.ata_link* %26, i32 0, i32 10, !dbg !12261
  %27 = load i32, i32* %lpm_policy, align 4, !dbg !12261
  %cmp = icmp ugt i32 %27, 1, !dbg !12262
  br i1 %cmp, label %if.then15, label %if.end21, !dbg !12263

if.then15:                                        ; preds = %if.end
  %28 = load %struct.ata_link*, %struct.ata_link** %link1, align 8, !dbg !12264
  %call16 = call zeroext i1 @ata_is_host_link(%struct.ata_link* %28) #7, !dbg !12267
  br i1 %call16, label %if.then17, label %if.else, !dbg !12268

if.then17:                                        ; preds = %if.then15
  %29 = load %struct.ata_link*, %struct.ata_link** %link1, align 8, !dbg !12269
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %29, i32 0, i32 0, !dbg !12270
  %30 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !12270
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %30, i32 0, i32 1, !dbg !12271
  %31 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !12271
  %set_lpm = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %31, i32 0, i32 31, !dbg !12272
  %32 = load i32 (%struct.ata_link*, i32, i32)*, i32 (%struct.ata_link*, i32, i32)** %set_lpm, align 8, !dbg !12272
  %33 = load %struct.ata_link*, %struct.ata_link** %link1, align 8, !dbg !12273
  %call18 = call i32 %32(%struct.ata_link* %33, i32 1, i32 1) #7, !dbg !12269
  br label %if.end20, !dbg !12269

if.else:                                          ; preds = %if.then15
  %34 = load %struct.ata_link*, %struct.ata_link** %link1, align 8, !dbg !12274
  %call19 = call i32 @sata_pmp_set_lpm(%struct.ata_link* %34, i32 1, i32 1) #7, !dbg !12275
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then17
  br label %if.end21, !dbg !12276

if.end21:                                         ; preds = %if.end20, %if.end
  %35 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12277
  %ering = getelementptr inbounds %struct.ata_device, %struct.ata_device* %35, i32 0, i32 36, !dbg !12278
  call void @ata_ering_record(%struct.ata_ering* %ering, i32 0, i32 256) #7, !dbg !12279
  %36 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12280
  %ering22 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %36, i32 0, i32 36, !dbg !12281
  %37 = bitcast i32* %trials to i8*, !dbg !12282
  %call23 = call i32 @ata_ering_map(%struct.ata_ering* %ering22, i32 (%struct.ata_ering_entry*, i8*)* @ata_count_probe_trials_cb, i8* %37) #7, !dbg !12283
  %38 = load i32, i32* %trials, align 4, !dbg !12284
  %cmp24 = icmp sgt i32 %38, 2, !dbg !12286
  br i1 %cmp24, label %if.then25, label %if.end27, !dbg !12287

if.then25:                                        ; preds = %if.end21
  %39 = load %struct.ata_link*, %struct.ata_link** %link1, align 8, !dbg !12288
  %call26 = call i32 @sata_down_spd_limit(%struct.ata_link* %39, i32 1) #7, !dbg !12289
  br label %if.end27, !dbg !12289

if.end27:                                         ; preds = %if.then25, %if.end21
  store i32 1, i32* %retval, align 4, !dbg !12290
  br label %return, !dbg !12290

return:                                           ; preds = %if.end27, %if.then
  %40 = load i32, i32* %retval, align 4, !dbg !12291
  ret i32 %40, !dbg !12291
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_eh_skip_recovery(%struct.ata_link* %link) #0 !dbg !12292 {
entry:
  %retval = alloca i32, align 4
  %link.addr = alloca %struct.ata_link*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %ehc = alloca %struct.ata_eh_context*, align 8
  %dev = alloca %struct.ata_device*, align 8
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !12293, metadata !DIExpression()), !dbg !12294
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !12295, metadata !DIExpression()), !dbg !12296
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !12297
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %0, i32 0, i32 0, !dbg !12298
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !12298
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !12296
  call void @llvm.dbg.declare(metadata %struct.ata_eh_context** %ehc, metadata !12299, metadata !DIExpression()), !dbg !12300
  %2 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !12301
  %eh_context = getelementptr inbounds %struct.ata_link, %struct.ata_link* %2, i32 0, i32 12, !dbg !12302
  store %struct.ata_eh_context* %eh_context, %struct.ata_eh_context** %ehc, align 8, !dbg !12300
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !12303, metadata !DIExpression()), !dbg !12304
  %3 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !12305
  %flags = getelementptr inbounds %struct.ata_link, %struct.ata_link* %3, i32 0, i32 5, !dbg !12307
  %4 = load i32, i32* %flags, align 16, !dbg !12307
  %and = and i32 %4, 64, !dbg !12308
  %tobool = icmp ne i32 %and, 0, !dbg !12308
  br i1 %tobool, label %if.then, label %if.end, !dbg !12309

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !12310
  br label %return, !dbg !12310

if.end:                                           ; preds = %entry
  %5 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !12311
  %i = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %5, i32 0, i32 0, !dbg !12313
  %flags2 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i, i32 0, i32 5, !dbg !12314
  %6 = load i32, i32* %flags2, align 4, !dbg !12314
  %and3 = and i32 %6, 16, !dbg !12315
  %tobool4 = icmp ne i32 %and3, 0, !dbg !12315
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !12316

if.then5:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !12317
  br label %return, !dbg !12317

if.end6:                                          ; preds = %if.end
  %7 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !12318
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %7, i32 0, i32 4, !dbg !12320
  %8 = load i32, i32* %pflags, align 32, !dbg !12320
  %and7 = and i32 %8, 4, !dbg !12321
  %tobool8 = icmp ne i32 %and7, 0, !dbg !12321
  br i1 %tobool8, label %if.then10, label %lor.lhs.false, !dbg !12322

lor.lhs.false:                                    ; preds = %if.end6
  %9 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !12323
  %call = call i32 @ata_link_nr_enabled(%struct.ata_link* %9) #7, !dbg !12324
  %tobool9 = icmp ne i32 %call, 0, !dbg !12324
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !12325

if.then10:                                        ; preds = %lor.lhs.false, %if.end6
  store i32 0, i32* %retval, align 4, !dbg !12326
  br label %return, !dbg !12326

if.end11:                                         ; preds = %lor.lhs.false
  %10 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !12327
  %i12 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %10, i32 0, i32 0, !dbg !12329
  %action = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i12, i32 0, i32 3, !dbg !12330
  %11 = load i32, i32* %action, align 8, !dbg !12330
  %and13 = and i32 %11, 6, !dbg !12331
  %tobool14 = icmp ne i32 %and13, 0, !dbg !12331
  br i1 %tobool14, label %land.lhs.true, label %if.end20, !dbg !12332

land.lhs.true:                                    ; preds = %if.end11
  %12 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !12333
  %i15 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %12, i32 0, i32 0, !dbg !12334
  %flags16 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i15, i32 0, i32 5, !dbg !12335
  %13 = load i32, i32* %flags16, align 4, !dbg !12335
  %and17 = and i32 %13, 196608, !dbg !12336
  %tobool18 = icmp ne i32 %and17, 0, !dbg !12336
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !12337

if.then19:                                        ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !12338
  br label %return, !dbg !12338

if.end20:                                         ; preds = %land.lhs.true, %if.end11
  %14 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !12339
  %call21 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %14, i32 2) #7, !dbg !12339
  store %struct.ata_device* %call21, %struct.ata_device** %dev, align 8, !dbg !12339
  br label %for.cond, !dbg !12339

for.cond:                                         ; preds = %for.inc, %if.end20
  %15 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12341
  %tobool22 = icmp ne %struct.ata_device* %15, null, !dbg !12339
  br i1 %tobool22, label %for.body, label %for.end, !dbg !12339

for.body:                                         ; preds = %for.cond
  %16 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12343
  %class = getelementptr inbounds %struct.ata_device, %struct.ata_device* %16, i32 0, i32 11, !dbg !12346
  %17 = load i32, i32* %class, align 64, !dbg !12346
  %cmp = icmp eq i32 %17, 0, !dbg !12347
  br i1 %cmp, label %land.lhs.true23, label %if.end26, !dbg !12348

land.lhs.true23:                                  ; preds = %for.body
  %18 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !12349
  %classes = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %18, i32 0, i32 3, !dbg !12350
  %19 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12351
  %devno = getelementptr inbounds %struct.ata_device, %struct.ata_device* %19, i32 0, i32 1, !dbg !12352
  %20 = load i32, i32* %devno, align 8, !dbg !12352
  %idxprom = zext i32 %20 to i64, !dbg !12349
  %arrayidx = getelementptr [2 x i32], [2 x i32]* %classes, i64 0, i64 %idxprom, !dbg !12349
  %21 = load i32, i32* %arrayidx, align 4, !dbg !12349
  %cmp24 = icmp ne i32 %21, 11, !dbg !12353
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !12354

if.then25:                                        ; preds = %land.lhs.true23
  store i32 0, i32* %retval, align 4, !dbg !12355
  br label %return, !dbg !12355

if.end26:                                         ; preds = %land.lhs.true23, %for.body
  br label %for.inc, !dbg !12356

for.inc:                                          ; preds = %if.end26
  %22 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12341
  %23 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !12341
  %call27 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %22, %struct.ata_link* %23, i32 2) #7, !dbg !12341
  store %struct.ata_device* %call27, %struct.ata_device** %dev, align 8, !dbg !12341
  br label %for.cond, !dbg !12341, !llvm.loop !12357

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !12359
  br label %return, !dbg !12359

return:                                           ; preds = %for.end, %if.then25, %if.then19, %if.then10, %if.then5, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !12360
  ret i32 %24, !dbg !12360
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_link_nr_vacant(%struct.ata_link* %link) #0 !dbg !12361 {
entry:
  %link.addr = alloca %struct.ata_link*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %cnt = alloca i32, align 4
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !12362, metadata !DIExpression()), !dbg !12363
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !12364, metadata !DIExpression()), !dbg !12365
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !12366, metadata !DIExpression()), !dbg !12367
  store i32 0, i32* %cnt, align 4, !dbg !12367
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !12368
  %call = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %0, i32 2) #7, !dbg !12368
  store %struct.ata_device* %call, %struct.ata_device** %dev, align 8, !dbg !12368
  br label %for.cond, !dbg !12368

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12370
  %tobool = icmp ne %struct.ata_device* %1, null, !dbg !12368
  br i1 %tobool, label %for.body, label %for.end, !dbg !12368

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12372
  %class = getelementptr inbounds %struct.ata_device, %struct.ata_device* %2, i32 0, i32 11, !dbg !12374
  %3 = load i32, i32* %class, align 64, !dbg !12374
  %cmp = icmp eq i32 %3, 0, !dbg !12375
  br i1 %cmp, label %if.then, label %if.end, !dbg !12376

if.then:                                          ; preds = %for.body
  %4 = load i32, i32* %cnt, align 4, !dbg !12377
  %inc = add i32 %4, 1, !dbg !12377
  store i32 %inc, i32* %cnt, align 4, !dbg !12377
  br label %if.end, !dbg !12378

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !12379

for.inc:                                          ; preds = %if.end
  %5 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12370
  %6 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !12370
  %call1 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %5, %struct.ata_link* %6, i32 2) #7, !dbg !12370
  store %struct.ata_device* %call1, %struct.ata_device** %dev, align 8, !dbg !12370
  br label %for.cond, !dbg !12370, !llvm.loop !12380

for.end:                                          ; preds = %for.cond
  %7 = load i32, i32* %cnt, align 4, !dbg !12382
  ret i32 %7, !dbg !12383
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_eh_pull_park_action(%struct.ata_port* %ap) #0 !dbg !12384 {
entry:
  %lock.addr.i33 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i33, metadata !7379, metadata !DIExpression()), !dbg !12385
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7386, metadata !DIExpression()), !dbg !12387
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7388, metadata !DIExpression()), !dbg !12388
  %ap.addr = alloca %struct.ata_port*, align 8
  %link = alloca %struct.ata_link*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %ehi = alloca %struct.ata_eh_info*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !12395, metadata !DIExpression()), !dbg !12396
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link, metadata !12397, metadata !DIExpression()), !dbg !12398
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !12399, metadata !DIExpression()), !dbg !12400
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12401, metadata !DIExpression()), !dbg !12402
  br label %do.body, !dbg !12403

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !12404

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12405, metadata !DIExpression()), !dbg !12407
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12408, metadata !DIExpression()), !dbg !12407
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !12407
  %conv = zext i1 %cmp to i32, !dbg !12407
  store i32 1, i32* %tmp, align 4, !dbg !12407
  %0 = load i32, i32* %tmp, align 4, !dbg !12407
  br label %do.body2, !dbg !12409

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !12410

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !12411

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !12413, metadata !DIExpression()), !dbg !12416
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !12417, metadata !DIExpression()), !dbg !12416
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !12416
  %conv8 = zext i1 %cmp7 to i32, !dbg !12416
  store i32 1, i32* %tmp9, align 4, !dbg !12416
  %1 = load i32, i32* %tmp9, align 4, !dbg !12416
  %call = call i64 @arch_local_irq_save() #7, !dbg !12418
  store i64 %call, i64* %flags, align 8, !dbg !12418
  br label %do.end, !dbg !12418

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !12411

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !12410

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !12419, !srcloc !12420
  br label %do.body12, !dbg !12419

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12421
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 2, !dbg !12421
  %3 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !12421
  store %struct.spinlock* %3, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12422
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !12423
  %rlock.i = bitcast %union.anon* %5 to %struct.raw_spinlock*, !dbg !12423
  br label %do.end14, !dbg !12421

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !12419

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !12410

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !12409

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !12404

do.end18:                                         ; preds = %do.end17
  %6 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12424
  %park_req_pending = getelementptr inbounds %struct.ata_port, %struct.ata_port* %6, i32 0, i32 42, !dbg !12425
  call void @reinit_completion(%struct.completion* %park_req_pending) #7, !dbg !12426
  %7 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12427
  %call19 = call %struct.ata_link* @ata_link_next(%struct.ata_link* null, %struct.ata_port* %7, i32 0) #7, !dbg !12427
  store %struct.ata_link* %call19, %struct.ata_link** %link, align 8, !dbg !12427
  br label %for.cond, !dbg !12427

for.cond:                                         ; preds = %for.inc29, %do.end18
  %8 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !12429
  %tobool = icmp ne %struct.ata_link* %8, null, !dbg !12427
  br i1 %tobool, label %for.body, label %for.end31, !dbg !12427

for.body:                                         ; preds = %for.cond
  %9 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !12431
  %call20 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %9, i32 2) #7, !dbg !12431
  store %struct.ata_device* %call20, %struct.ata_device** %dev, align 8, !dbg !12431
  br label %for.cond21, !dbg !12431

for.cond21:                                       ; preds = %for.inc, %for.body
  %10 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12434
  %tobool22 = icmp ne %struct.ata_device* %10, null, !dbg !12431
  br i1 %tobool22, label %for.body23, label %for.end, !dbg !12431

for.body23:                                       ; preds = %for.cond21
  call void @llvm.dbg.declare(metadata %struct.ata_eh_info** %ehi, metadata !12436, metadata !DIExpression()), !dbg !12438
  %11 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !12439
  %eh_info = getelementptr inbounds %struct.ata_link, %struct.ata_link* %11, i32 0, i32 11, !dbg !12440
  store %struct.ata_eh_info* %eh_info, %struct.ata_eh_info** %ehi, align 8, !dbg !12438
  %12 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !12441
  %dev_action = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %12, i32 0, i32 4, !dbg !12442
  %13 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12443
  %devno = getelementptr inbounds %struct.ata_device, %struct.ata_device* %13, i32 0, i32 1, !dbg !12444
  %14 = load i32, i32* %devno, align 8, !dbg !12444
  %idxprom = zext i32 %14 to i64, !dbg !12441
  %arrayidx = getelementptr [2 x i32], [2 x i32]* %dev_action, i64 0, i64 %idxprom, !dbg !12441
  %15 = load i32, i32* %arrayidx, align 4, !dbg !12441
  %and = and i32 %15, 32, !dbg !12445
  %16 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !12446
  %eh_context = getelementptr inbounds %struct.ata_link, %struct.ata_link* %16, i32 0, i32 12, !dbg !12447
  %i = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %eh_context, i32 0, i32 0, !dbg !12448
  %dev_action24 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i, i32 0, i32 4, !dbg !12449
  %17 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12450
  %devno25 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %17, i32 0, i32 1, !dbg !12451
  %18 = load i32, i32* %devno25, align 8, !dbg !12451
  %idxprom26 = zext i32 %18 to i64, !dbg !12446
  %arrayidx27 = getelementptr [2 x i32], [2 x i32]* %dev_action24, i64 0, i64 %idxprom26, !dbg !12446
  %19 = load i32, i32* %arrayidx27, align 4, !dbg !12452
  %or = or i32 %19, %and, !dbg !12452
  store i32 %or, i32* %arrayidx27, align 4, !dbg !12452
  %20 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !12453
  %21 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12454
  %22 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi, align 8, !dbg !12455
  call void @ata_eh_clear_action(%struct.ata_link* %20, %struct.ata_device* %21, %struct.ata_eh_info* %22, i32 32) #7, !dbg !12456
  br label %for.inc, !dbg !12457

for.inc:                                          ; preds = %for.body23
  %23 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12434
  %24 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !12434
  %call28 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %23, %struct.ata_link* %24, i32 2) #7, !dbg !12434
  store %struct.ata_device* %call28, %struct.ata_device** %dev, align 8, !dbg !12434
  br label %for.cond21, !dbg !12434, !llvm.loop !12458

for.end:                                          ; preds = %for.cond21
  br label %for.inc29, !dbg !12460

for.inc29:                                        ; preds = %for.end
  %25 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !12429
  %26 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12429
  %call30 = call %struct.ata_link* @ata_link_next(%struct.ata_link* %25, %struct.ata_port* %26, i32 0) #7, !dbg !12429
  store %struct.ata_link* %call30, %struct.ata_link** %link, align 8, !dbg !12429
  br label %for.cond, !dbg !12429, !llvm.loop !12461

for.end31:                                        ; preds = %for.cond
  %27 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !12463
  %lock32 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %27, i32 0, i32 2, !dbg !12464
  %28 = load %struct.spinlock*, %struct.spinlock** %lock32, align 16, !dbg !12464
  %29 = load i64, i64* %flags, align 8, !dbg !12465
  store %struct.spinlock* %28, %struct.spinlock** %lock.addr.i33, align 8
  store i64 %29, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1101, metadata !7437, metadata !DIExpression()) #2, !dbg !12466
  call void @llvm.dbg.declare(metadata !1101, metadata !7441, metadata !DIExpression()) #2, !dbg !12466
  store i32 1, i32* %tmp.i, align 4, !dbg !12466
  %30 = load i32, i32* %tmp.i, align 4, !dbg !12466
  call void @llvm.dbg.declare(metadata !1101, metadata !7442, metadata !DIExpression()) #2, !dbg !12467
  call void @llvm.dbg.declare(metadata !1101, metadata !7448, metadata !DIExpression()) #2, !dbg !12467
  store i32 1, i32* %tmp8.i, align 4, !dbg !12467
  %31 = load i32, i32* %tmp8.i, align 4, !dbg !12467
  %32 = load i64, i64* %flags.addr.i, align 8, !dbg !12468
  call void @arch_local_irq_restore(i64 %32) #9, !dbg !12468
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !12469, !srcloc !7452
  %33 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i33, align 8, !dbg !12470
  %34 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %33, i32 0, i32 0, !dbg !12470
  %rlock.i34 = bitcast %union.anon* %34 to %struct.raw_spinlock*, !dbg !12470
  ret void, !dbg !12471
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_eh_park_issue_cmd(%struct.ata_device* %dev, i32 %park) #0 !dbg !12472 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  %park.addr = alloca i32, align 4
  %ehc = alloca %struct.ata_eh_context*, align 8
  %tf = alloca %struct.ata_taskfile, align 8
  %err_mask = alloca i32, align 4
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !12475, metadata !DIExpression()), !dbg !12476
  store i32 %park, i32* %park.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %park.addr, metadata !12477, metadata !DIExpression()), !dbg !12478
  call void @llvm.dbg.declare(metadata %struct.ata_eh_context** %ehc, metadata !12479, metadata !DIExpression()), !dbg !12480
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12481
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 0, !dbg !12482
  %1 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !12482
  %eh_context = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 12, !dbg !12483
  store %struct.ata_eh_context* %eh_context, %struct.ata_eh_context** %ehc, align 8, !dbg !12480
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile* %tf, metadata !12484, metadata !DIExpression()), !dbg !12485
  call void @llvm.dbg.declare(metadata i32* %err_mask, metadata !12486, metadata !DIExpression()), !dbg !12487
  %2 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12488
  call void @ata_tf_init(%struct.ata_device* %2, %struct.ata_taskfile* %tf) #7, !dbg !12489
  %3 = load i32, i32* %park.addr, align 4, !dbg !12490
  %tobool = icmp ne i32 %3, 0, !dbg !12490
  br i1 %tobool, label %if.then, label %if.else, !dbg !12492

if.then:                                          ; preds = %entry
  %4 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12493
  %devno = getelementptr inbounds %struct.ata_device, %struct.ata_device* %4, i32 0, i32 1, !dbg !12495
  %5 = load i32, i32* %devno, align 8, !dbg !12495
  %shl = shl i32 1, %5, !dbg !12496
  %6 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !12497
  %unloaded_mask = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %6, i32 0, i32 5, !dbg !12498
  %7 = load i32, i32* %unloaded_mask, align 4, !dbg !12499
  %or = or i32 %7, %shl, !dbg !12499
  store i32 %or, i32* %unloaded_mask, align 4, !dbg !12499
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 14, !dbg !12500
  store i8 -31, i8* %command, align 1, !dbg !12501
  %feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 8, !dbg !12502
  store i8 68, i8* %feature, align 1, !dbg !12503
  %lbal = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 10, !dbg !12504
  store i8 76, i8* %lbal, align 1, !dbg !12505
  %lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 11, !dbg !12506
  store i8 78, i8* %lbam, align 2, !dbg !12507
  %lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 12, !dbg !12508
  store i8 85, i8* %lbah, align 1, !dbg !12509
  br label %if.end, !dbg !12510

if.else:                                          ; preds = %entry
  %8 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12511
  %devno1 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %8, i32 0, i32 1, !dbg !12513
  %9 = load i32, i32* %devno1, align 8, !dbg !12513
  %shl2 = shl i32 1, %9, !dbg !12514
  %neg = xor i32 %shl2, -1, !dbg !12515
  %10 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !12516
  %unloaded_mask3 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %10, i32 0, i32 5, !dbg !12517
  %11 = load i32, i32* %unloaded_mask3, align 4, !dbg !12518
  %and = and i32 %11, %neg, !dbg !12518
  store i32 %and, i32* %unloaded_mask3, align 4, !dbg !12518
  %command4 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 14, !dbg !12519
  store i8 -27, i8* %command4, align 1, !dbg !12520
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 0, !dbg !12521
  %12 = load i64, i64* %flags, align 8, !dbg !12522
  %or5 = or i64 %12, 6, !dbg !12522
  store i64 %or5, i64* %flags, align 8, !dbg !12522
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 1, !dbg !12523
  store i8 0, i8* %protocol, align 8, !dbg !12524
  %13 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12525
  %call = call i32 @ata_exec_internal(%struct.ata_device* %13, %struct.ata_taskfile* %tf, i8* null, i32 3, i8* null, i32 0, i64 0) #7, !dbg !12526
  store i32 %call, i32* %err_mask, align 4, !dbg !12527
  %14 = load i32, i32* %park.addr, align 4, !dbg !12528
  %tobool6 = icmp ne i32 %14, 0, !dbg !12528
  br i1 %tobool6, label %land.lhs.true, label %if.end16, !dbg !12530

land.lhs.true:                                    ; preds = %if.end
  %15 = load i32, i32* %err_mask, align 4, !dbg !12531
  %tobool7 = icmp ne i32 %15, 0, !dbg !12531
  br i1 %tobool7, label %if.then10, label %lor.lhs.false, !dbg !12532

lor.lhs.false:                                    ; preds = %land.lhs.true
  %lbal8 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 10, !dbg !12533
  %16 = load i8, i8* %lbal8, align 1, !dbg !12533
  %conv = zext i8 %16 to i32, !dbg !12534
  %cmp = icmp ne i32 %conv, 196, !dbg !12535
  br i1 %cmp, label %if.then10, label %if.end16, !dbg !12536

if.then10:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %17 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12537
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %17, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.189, i64 0, i64 0)) #7, !dbg !12537
  %18 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12539
  %devno11 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %18, i32 0, i32 1, !dbg !12540
  %19 = load i32, i32* %devno11, align 8, !dbg !12540
  %shl12 = shl i32 1, %19, !dbg !12541
  %neg13 = xor i32 %shl12, -1, !dbg !12542
  %20 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !12543
  %unloaded_mask14 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %20, i32 0, i32 5, !dbg !12544
  %21 = load i32, i32* %unloaded_mask14, align 4, !dbg !12545
  %and15 = and i32 %21, %neg13, !dbg !12545
  store i32 %and15, i32* %unloaded_mask14, align 4, !dbg !12545
  br label %if.end16, !dbg !12546

if.end16:                                         ; preds = %if.then10, %lor.lhs.false, %if.end
  ret void, !dbg !12547
}

; Function Attrs: noredzone
declare dso_local i64 @wait_for_completion_timeout(%struct.completion*, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_eh_revalidate_and_attach(%struct.ata_link* %link, %struct.ata_device** %r_failed_dev) #0 !dbg !12548 {
entry:
  %lock.addr.i163 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i163, metadata !7379, metadata !DIExpression()), !dbg !12549
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7386, metadata !DIExpression()), !dbg !12554
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7388, metadata !DIExpression()), !dbg !12555
  %retval = alloca i32, align 4
  %link.addr = alloca %struct.ata_link*, align 8
  %r_failed_dev.addr = alloca %struct.ata_device**, align 8
  %ap = alloca %struct.ata_port*, align 8
  %ehc = alloca %struct.ata_eh_context*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %new_mask = alloca i32, align 4
  %flags = alloca i64, align 8
  %rc = alloca i32, align 4
  %action = alloca i32, align 4
  %readid_flags = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp135 = alloca i32, align 4
  %__dummy139 = alloca i64, align 8
  %__dummy2140 = alloca i64, align 8
  %tmp143 = alloca i32, align 4
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !12562, metadata !DIExpression()), !dbg !12563
  store %struct.ata_device** %r_failed_dev, %struct.ata_device*** %r_failed_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device*** %r_failed_dev.addr, metadata !12564, metadata !DIExpression()), !dbg !12565
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !12566, metadata !DIExpression()), !dbg !12567
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !12568
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %0, i32 0, i32 0, !dbg !12569
  %1 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !12569
  store %struct.ata_port* %1, %struct.ata_port** %ap, align 8, !dbg !12567
  call void @llvm.dbg.declare(metadata %struct.ata_eh_context** %ehc, metadata !12570, metadata !DIExpression()), !dbg !12571
  %2 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !12572
  %eh_context = getelementptr inbounds %struct.ata_link, %struct.ata_link* %2, i32 0, i32 12, !dbg !12573
  store %struct.ata_eh_context* %eh_context, %struct.ata_eh_context** %ehc, align 8, !dbg !12571
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !12574, metadata !DIExpression()), !dbg !12575
  call void @llvm.dbg.declare(metadata i32* %new_mask, metadata !12576, metadata !DIExpression()), !dbg !12577
  store i32 0, i32* %new_mask, align 4, !dbg !12577
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12578, metadata !DIExpression()), !dbg !12579
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !12580, metadata !DIExpression()), !dbg !12581
  store i32 0, i32* %rc, align 4, !dbg !12581
  %3 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !12582
  %call = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %3, i32 3) #7, !dbg !12582
  store %struct.ata_device* %call, %struct.ata_device** %dev, align 8, !dbg !12582
  br label %for.cond, !dbg !12582

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12584
  %tobool = icmp ne %struct.ata_device* %4, null, !dbg !12582
  br i1 %tobool, label %for.body, label %for.end, !dbg !12582

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %action, metadata !12586, metadata !DIExpression()), !dbg !12588
  %5 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12589
  %call2 = call i32 @ata_eh_dev_action(%struct.ata_device* %5) #7, !dbg !12590
  store i32 %call2, i32* %action, align 4, !dbg !12588
  call void @llvm.dbg.declare(metadata i32* %readid_flags, metadata !12591, metadata !DIExpression()), !dbg !12592
  store i32 0, i32* %readid_flags, align 4, !dbg !12592
  %6 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !12593
  %i = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %6, i32 0, i32 0, !dbg !12595
  %flags3 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i, i32 0, i32 5, !dbg !12596
  %7 = load i32, i32* %flags3, align 4, !dbg !12596
  %and = and i32 %7, 196608, !dbg !12597
  %tobool4 = icmp ne i32 %and, 0, !dbg !12597
  br i1 %tobool4, label %if.then, label %if.end, !dbg !12598

if.then:                                          ; preds = %for.body
  %8 = load i32, i32* %readid_flags, align 4, !dbg !12599
  %or = or i32 %8, 1, !dbg !12599
  store i32 %or, i32* %readid_flags, align 4, !dbg !12599
  br label %if.end, !dbg !12600

if.end:                                           ; preds = %if.then, %for.body
  %9 = load i32, i32* %action, align 4, !dbg !12601
  %and5 = and i32 %9, 1, !dbg !12603
  %tobool6 = icmp ne i32 %and5, 0, !dbg !12603
  br i1 %tobool6, label %land.lhs.true, label %if.else, !dbg !12604

land.lhs.true:                                    ; preds = %if.end
  %10 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12605
  %call7 = call i32 @ata_dev_enabled(%struct.ata_device* %10) #7, !dbg !12606
  %tobool8 = icmp ne i32 %call7, 0, !dbg !12606
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !12607

if.then9:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !12608, metadata !DIExpression()), !dbg !12611
  %11 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12611
  %class = getelementptr inbounds %struct.ata_device, %struct.ata_device* %11, i32 0, i32 11, !dbg !12611
  %12 = load i32, i32* %class, align 64, !dbg !12611
  %cmp = icmp eq i32 %12, 5, !dbg !12611
  %lnot = xor i1 %cmp, true, !dbg !12611
  %lnot10 = xor i1 %lnot, true, !dbg !12611
  %lnot.ext = zext i1 %lnot10 to i32, !dbg !12611
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !12611
  %13 = load i32, i32* %__ret_warn_on, align 4, !dbg !12612
  %tobool11 = icmp ne i32 %13, 0, !dbg !12612
  %lnot12 = xor i1 %tobool11, true, !dbg !12612
  %lnot14 = xor i1 %lnot12, true, !dbg !12612
  %lnot.ext15 = zext i1 %lnot14 to i32, !dbg !12612
  %conv = sext i32 %lnot.ext15 to i64, !dbg !12612
  %tobool16 = icmp ne i64 %conv, 0, !dbg !12612
  br i1 %tobool16, label %if.then17, label %if.end24, !dbg !12611

if.then17:                                        ; preds = %if.then9
  br label %do.body, !dbg !12612

do.body:                                          ; preds = %if.then17
  br label %do.body18, !dbg !12614

do.body18:                                        ; preds = %do.body
  br label %do.end, !dbg !12616

do.end:                                           ; preds = %do.body18
  br label %do.body19, !dbg !12614

do.body19:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), i32 2930, i32 2305, i64 12) #2, !dbg !12618, !srcloc !12620
  br label %do.end20, !dbg !12618

do.end20:                                         ; preds = %do.body19
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 330) #2, !dbg !12621, !srcloc !12623
  br label %do.body21, !dbg !12614

do.body21:                                        ; preds = %do.end20
  br label %do.end22, !dbg !12624

do.end22:                                         ; preds = %do.body21
  br label %do.end23, !dbg !12614

do.end23:                                         ; preds = %do.end22
  br label %if.end24, !dbg !12614

if.end24:                                         ; preds = %do.end23, %if.then9
  %14 = load i32, i32* %__ret_warn_on, align 4, !dbg !12611
  %tobool25 = icmp ne i32 %14, 0, !dbg !12611
  %lnot26 = xor i1 %tobool25, true, !dbg !12611
  %lnot28 = xor i1 %lnot26, true, !dbg !12611
  %lnot.ext29 = zext i1 %lnot28 to i32, !dbg !12611
  %conv30 = sext i32 %lnot.ext29 to i64, !dbg !12611
  store i64 %conv30, i64* %tmp, align 8, !dbg !12612
  %15 = load i64, i64* %tmp, align 8, !dbg !12611
  %16 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12626
  %call31 = call %struct.ata_link* @ata_dev_phys_link(%struct.ata_device* %16) #7, !dbg !12628
  %call32 = call zeroext i1 @ata_phys_link_offline(%struct.ata_link* %call31) #7, !dbg !12629
  br i1 %call32, label %if.then33, label %if.end34, !dbg !12630

if.then33:                                        ; preds = %if.end24
  store i32 -5, i32* %rc, align 4, !dbg !12631
  br label %err, !dbg !12633

if.end34:                                         ; preds = %if.end24
  %17 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !12634
  %18 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12635
  call void @ata_eh_about_to_do(%struct.ata_link* %17, %struct.ata_device* %18, i32 1) #7, !dbg !12636
  %19 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12637
  %20 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !12638
  %classes = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %20, i32 0, i32 3, !dbg !12639
  %21 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12640
  %devno = getelementptr inbounds %struct.ata_device, %struct.ata_device* %21, i32 0, i32 1, !dbg !12641
  %22 = load i32, i32* %devno, align 8, !dbg !12641
  %idxprom = zext i32 %22 to i64, !dbg !12638
  %arrayidx = getelementptr [2 x i32], [2 x i32]* %classes, i64 0, i64 %idxprom, !dbg !12638
  %23 = load i32, i32* %arrayidx, align 4, !dbg !12638
  %24 = load i32, i32* %readid_flags, align 4, !dbg !12642
  %call35 = call i32 @ata_dev_revalidate(%struct.ata_device* %19, i32 %23, i32 %24) #7, !dbg !12643
  store i32 %call35, i32* %rc, align 4, !dbg !12644
  %25 = load i32, i32* %rc, align 4, !dbg !12645
  %tobool36 = icmp ne i32 %25, 0, !dbg !12645
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !12647

if.then37:                                        ; preds = %if.end34
  br label %err, !dbg !12648

if.end38:                                         ; preds = %if.end34
  %26 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !12649
  %27 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12650
  call void @ata_eh_done(%struct.ata_link* %26, %struct.ata_device* %27, i32 1) #7, !dbg !12651
  %28 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !12652
  %i39 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %28, i32 0, i32 0, !dbg !12653
  %flags40 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i39, i32 0, i32 5, !dbg !12654
  %29 = load i32, i32* %flags40, align 4, !dbg !12655
  %or41 = or i32 %29, 524288, !dbg !12655
  store i32 %or41, i32* %flags40, align 4, !dbg !12655
  %30 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !12656
  %scsi_rescan_task = getelementptr inbounds %struct.ata_port, %struct.ata_port* %30, i32 0, i32 36, !dbg !12657
  %call42 = call zeroext i1 @schedule_work(%struct.work_struct* %scsi_rescan_task) #7, !dbg !12658
  br label %if.end83, !dbg !12659

if.else:                                          ; preds = %land.lhs.true, %if.end
  %31 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12660
  %class43 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %31, i32 0, i32 11, !dbg !12662
  %32 = load i32, i32* %class43, align 64, !dbg !12662
  %cmp44 = icmp eq i32 %32, 0, !dbg !12663
  br i1 %cmp44, label %land.lhs.true46, label %if.end82, !dbg !12664

land.lhs.true46:                                  ; preds = %if.else
  %33 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !12665
  %tries = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %33, i32 0, i32 1, !dbg !12666
  %34 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12667
  %devno47 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %34, i32 0, i32 1, !dbg !12668
  %35 = load i32, i32* %devno47, align 8, !dbg !12668
  %idxprom48 = zext i32 %35 to i64, !dbg !12665
  %arrayidx49 = getelementptr [2 x i32], [2 x i32]* %tries, i64 0, i64 %idxprom48, !dbg !12665
  %36 = load i32, i32* %arrayidx49, align 4, !dbg !12665
  %tobool50 = icmp ne i32 %36, 0, !dbg !12665
  br i1 %tobool50, label %land.lhs.true51, label %if.end82, !dbg !12669

land.lhs.true51:                                  ; preds = %land.lhs.true46
  %37 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !12670
  %classes52 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %37, i32 0, i32 3, !dbg !12671
  %38 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12672
  %devno53 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %38, i32 0, i32 1, !dbg !12673
  %39 = load i32, i32* %devno53, align 8, !dbg !12673
  %idxprom54 = zext i32 %39 to i64, !dbg !12670
  %arrayidx55 = getelementptr [2 x i32], [2 x i32]* %classes52, i64 0, i64 %idxprom54, !dbg !12670
  %40 = load i32, i32* %arrayidx55, align 4, !dbg !12670
  %call56 = call i32 @ata_class_enabled(i32 %40) #7, !dbg !12674
  %tobool57 = icmp ne i32 %call56, 0, !dbg !12674
  br i1 %tobool57, label %if.then58, label %if.end82, !dbg !12675

if.then58:                                        ; preds = %land.lhs.true51
  %41 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !12676
  %classes59 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %41, i32 0, i32 3, !dbg !12678
  %42 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12679
  %devno60 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %42, i32 0, i32 1, !dbg !12680
  %43 = load i32, i32* %devno60, align 8, !dbg !12680
  %idxprom61 = zext i32 %43 to i64, !dbg !12676
  %arrayidx62 = getelementptr [2 x i32], [2 x i32]* %classes59, i64 0, i64 %idxprom61, !dbg !12676
  %44 = load i32, i32* %arrayidx62, align 4, !dbg !12676
  %45 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12681
  %class63 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %45, i32 0, i32 11, !dbg !12682
  store i32 %44, i32* %class63, align 64, !dbg !12683
  %46 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12684
  %class64 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %46, i32 0, i32 11, !dbg !12686
  %47 = load i32, i32* %class64, align 64, !dbg !12686
  %cmp65 = icmp eq i32 %47, 5, !dbg !12687
  br i1 %cmp65, label %if.then67, label %if.else69, !dbg !12688

if.then67:                                        ; preds = %if.then58
  %48 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12689
  %call68 = call i32 @sata_pmp_attach(%struct.ata_device* %48) #7, !dbg !12690
  store i32 %call68, i32* %rc, align 4, !dbg !12691
  br label %if.end72, !dbg !12692

if.else69:                                        ; preds = %if.then58
  %49 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12693
  %50 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12694
  %class70 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %50, i32 0, i32 11, !dbg !12695
  %51 = load i32, i32* %readid_flags, align 4, !dbg !12696
  %52 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12697
  %53 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %52, i32 0, i32 27, !dbg !12698
  %id = bitcast %union.anon.79* %53 to [256 x i16]*, !dbg !12698
  %arraydecay = getelementptr inbounds [256 x i16], [256 x i16]* %id, i64 0, i64 0, !dbg !12697
  %call71 = call i32 @ata_dev_read_id(%struct.ata_device* %49, i32* %class70, i32 %51, i16* %arraydecay) #7, !dbg !12699
  store i32 %call71, i32* %rc, align 4, !dbg !12700
  br label %if.end72

if.end72:                                         ; preds = %if.else69, %if.then67
  %54 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12701
  %class73 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %54, i32 0, i32 11, !dbg !12702
  %55 = load i32, i32* %class73, align 64, !dbg !12702
  %56 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !12703
  %classes74 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %56, i32 0, i32 3, !dbg !12704
  %57 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12705
  %devno75 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %57, i32 0, i32 1, !dbg !12706
  %58 = load i32, i32* %devno75, align 8, !dbg !12706
  %idxprom76 = zext i32 %58 to i64, !dbg !12703
  %arrayidx77 = getelementptr [2 x i32], [2 x i32]* %classes74, i64 0, i64 %idxprom76, !dbg !12703
  store i32 %55, i32* %arrayidx77, align 4, !dbg !12707
  %59 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12708
  %class78 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %59, i32 0, i32 11, !dbg !12709
  store i32 0, i32* %class78, align 64, !dbg !12710
  %60 = load i32, i32* %rc, align 4, !dbg !12711
  switch i32 %60, label %sw.default [
    i32 0, label %sw.bb
    i32 -2, label %sw.bb81
  ], !dbg !12712

sw.bb:                                            ; preds = %if.end72
  %61 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12713
  %ering = getelementptr inbounds %struct.ata_device, %struct.ata_device* %61, i32 0, i32 36, !dbg !12715
  call void @ata_ering_clear(%struct.ata_ering* %ering) #7, !dbg !12716
  %62 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12717
  %devno79 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %62, i32 0, i32 1, !dbg !12718
  %63 = load i32, i32* %devno79, align 8, !dbg !12718
  %shl = shl i32 1, %63, !dbg !12719
  %64 = load i32, i32* %new_mask, align 4, !dbg !12720
  %or80 = or i32 %64, %shl, !dbg !12720
  store i32 %or80, i32* %new_mask, align 4, !dbg !12720
  br label %sw.epilog, !dbg !12721

sw.bb81:                                          ; preds = %if.end72
  %65 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !12722
  call void @ata_eh_thaw_port(%struct.ata_port* %65) #7, !dbg !12723
  br label %sw.epilog, !dbg !12724

sw.default:                                       ; preds = %if.end72
  br label %err, !dbg !12725

sw.epilog:                                        ; preds = %sw.bb81, %sw.bb
  br label %if.end82, !dbg !12726

if.end82:                                         ; preds = %sw.epilog, %land.lhs.true51, %land.lhs.true46, %if.else
  br label %if.end83

if.end83:                                         ; preds = %if.end82, %if.end38
  br label %for.inc, !dbg !12727

for.inc:                                          ; preds = %if.end83
  %66 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12584
  %67 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !12584
  %call84 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %66, %struct.ata_link* %67, i32 3) #7, !dbg !12584
  store %struct.ata_device* %call84, %struct.ata_device** %dev, align 8, !dbg !12584
  br label %for.cond, !dbg !12584, !llvm.loop !12728

for.end:                                          ; preds = %for.cond
  %68 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !12730
  %i85 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %68, i32 0, i32 0, !dbg !12732
  %flags86 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i85, i32 0, i32 5, !dbg !12733
  %69 = load i32, i32* %flags86, align 4, !dbg !12733
  %and87 = and i32 %69, 196608, !dbg !12734
  %tobool88 = icmp ne i32 %and87, 0, !dbg !12734
  br i1 %tobool88, label %land.lhs.true89, label %if.end99, !dbg !12735

land.lhs.true89:                                  ; preds = %for.end
  %70 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !12736
  %call90 = call zeroext i1 @ata_is_host_link(%struct.ata_link* %70) #7, !dbg !12737
  br i1 %call90, label %if.then92, label %if.end99, !dbg !12738

if.then92:                                        ; preds = %land.lhs.true89
  %71 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !12739
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %71, i32 0, i32 1, !dbg !12742
  %72 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !12742
  %cable_detect = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %72, i32 0, i32 5, !dbg !12743
  %73 = load i32 (%struct.ata_port*)*, i32 (%struct.ata_port*)** %cable_detect, align 8, !dbg !12743
  %tobool93 = icmp ne i32 (%struct.ata_port*)* %73, null, !dbg !12739
  br i1 %tobool93, label %if.then94, label %if.end98, !dbg !12744

if.then94:                                        ; preds = %if.then92
  %74 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !12745
  %ops95 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %74, i32 0, i32 1, !dbg !12746
  %75 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops95, align 8, !dbg !12746
  %cable_detect96 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %75, i32 0, i32 5, !dbg !12747
  %76 = load i32 (%struct.ata_port*)*, i32 (%struct.ata_port*)** %cable_detect96, align 8, !dbg !12747
  %77 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !12748
  %call97 = call i32 %76(%struct.ata_port* %77) #7, !dbg !12745
  %78 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !12749
  %cbl = getelementptr inbounds %struct.ata_port, %struct.ata_port* %78, i32 0, i32 18, !dbg !12750
  store i32 %call97, i32* %cbl, align 4, !dbg !12751
  br label %if.end98, !dbg !12749

if.end98:                                         ; preds = %if.then94, %if.then92
  %79 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !12752
  call void @ata_force_cbl(%struct.ata_port* %79) #7, !dbg !12753
  br label %if.end99, !dbg !12754

if.end99:                                         ; preds = %if.end98, %land.lhs.true89, %for.end
  %80 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !12755
  %call100 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %80, i32 2) #7, !dbg !12755
  store %struct.ata_device* %call100, %struct.ata_device** %dev, align 8, !dbg !12755
  br label %for.cond101, !dbg !12755

for.cond101:                                      ; preds = %for.inc160, %if.end99
  %81 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12756
  %tobool102 = icmp ne %struct.ata_device* %81, null, !dbg !12755
  br i1 %tobool102, label %for.body103, label %for.end162, !dbg !12755

for.body103:                                      ; preds = %for.cond101
  %82 = load i32, i32* %new_mask, align 4, !dbg !12757
  %83 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12759
  %devno104 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %83, i32 0, i32 1, !dbg !12760
  %84 = load i32, i32* %devno104, align 8, !dbg !12760
  %shl105 = shl i32 1, %84, !dbg !12761
  %and106 = and i32 %82, %shl105, !dbg !12762
  %tobool107 = icmp ne i32 %and106, 0, !dbg !12762
  br i1 %tobool107, label %if.end109, label %if.then108, !dbg !12763

if.then108:                                       ; preds = %for.body103
  br label %for.inc160, !dbg !12764

if.end109:                                        ; preds = %for.body103
  %85 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !12765
  %classes110 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %85, i32 0, i32 3, !dbg !12766
  %86 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12767
  %devno111 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %86, i32 0, i32 1, !dbg !12768
  %87 = load i32, i32* %devno111, align 8, !dbg !12768
  %idxprom112 = zext i32 %87 to i64, !dbg !12765
  %arrayidx113 = getelementptr [2 x i32], [2 x i32]* %classes110, i64 0, i64 %idxprom112, !dbg !12765
  %88 = load i32, i32* %arrayidx113, align 4, !dbg !12765
  %89 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12769
  %class114 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %89, i32 0, i32 11, !dbg !12770
  store i32 %88, i32* %class114, align 64, !dbg !12771
  %90 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12772
  %class115 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %90, i32 0, i32 11, !dbg !12774
  %91 = load i32, i32* %class115, align 64, !dbg !12774
  %cmp116 = icmp eq i32 %91, 5, !dbg !12775
  br i1 %cmp116, label %if.then118, label %if.end119, !dbg !12776

if.then118:                                       ; preds = %if.end109
  br label %for.inc160, !dbg !12777

if.end119:                                        ; preds = %if.end109
  %92 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !12778
  %i120 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %92, i32 0, i32 0, !dbg !12779
  %flags121 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i120, i32 0, i32 5, !dbg !12780
  %93 = load i32, i32* %flags121, align 4, !dbg !12781
  %or122 = or i32 %93, 262144, !dbg !12781
  store i32 %or122, i32* %flags121, align 4, !dbg !12781
  %94 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12782
  %call123 = call i32 @ata_dev_configure(%struct.ata_device* %94) #7, !dbg !12783
  store i32 %call123, i32* %rc, align 4, !dbg !12784
  %95 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !12785
  %i124 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %95, i32 0, i32 0, !dbg !12786
  %flags125 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i124, i32 0, i32 5, !dbg !12787
  %96 = load i32, i32* %flags125, align 4, !dbg !12788
  %and126 = and i32 %96, -262145, !dbg !12788
  store i32 %and126, i32* %flags125, align 4, !dbg !12788
  %97 = load i32, i32* %rc, align 4, !dbg !12789
  %tobool127 = icmp ne i32 %97, 0, !dbg !12789
  br i1 %tobool127, label %if.then128, label %if.end130, !dbg !12791

if.then128:                                       ; preds = %if.end119
  %98 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12792
  %class129 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %98, i32 0, i32 11, !dbg !12794
  store i32 0, i32* %class129, align 64, !dbg !12795
  br label %err, !dbg !12796

if.end130:                                        ; preds = %if.end119
  br label %do.body131, !dbg !12797

do.body131:                                       ; preds = %if.end130
  br label %do.body132, !dbg !12798

do.body132:                                       ; preds = %do.body131
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12799, metadata !DIExpression()), !dbg !12801
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12802, metadata !DIExpression()), !dbg !12801
  %cmp133 = icmp eq i64* %__dummy, %__dummy2, !dbg !12801
  %conv134 = zext i1 %cmp133 to i32, !dbg !12801
  store i32 1, i32* %tmp135, align 4, !dbg !12801
  %99 = load i32, i32* %tmp135, align 4, !dbg !12801
  br label %do.body136, !dbg !12803

do.body136:                                       ; preds = %do.body132
  br label %do.body137, !dbg !12804

do.body137:                                       ; preds = %do.body136
  br label %do.body138, !dbg !12805

do.body138:                                       ; preds = %do.body137
  call void @llvm.dbg.declare(metadata i64* %__dummy139, metadata !12807, metadata !DIExpression()), !dbg !12810
  call void @llvm.dbg.declare(metadata i64* %__dummy2140, metadata !12811, metadata !DIExpression()), !dbg !12810
  %cmp141 = icmp eq i64* %__dummy139, %__dummy2140, !dbg !12810
  %conv142 = zext i1 %cmp141 to i32, !dbg !12810
  store i32 1, i32* %tmp143, align 4, !dbg !12810
  %100 = load i32, i32* %tmp143, align 4, !dbg !12810
  %call144 = call i64 @arch_local_irq_save() #7, !dbg !12812
  store i64 %call144, i64* %flags, align 8, !dbg !12812
  br label %do.end145, !dbg !12812

do.end145:                                        ; preds = %do.body138
  br label %do.end146, !dbg !12805

do.end146:                                        ; preds = %do.end145
  br label %do.body147, !dbg !12804

do.body147:                                       ; preds = %do.end146
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !12813, !srcloc !12814
  br label %do.body148, !dbg !12813

do.body148:                                       ; preds = %do.body147
  %101 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !12815
  %lock = getelementptr inbounds %struct.ata_port, %struct.ata_port* %101, i32 0, i32 2, !dbg !12815
  %102 = load %struct.spinlock*, %struct.spinlock** %lock, align 16, !dbg !12815
  store %struct.spinlock* %102, %struct.spinlock** %lock.addr.i, align 8
  %103 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12816
  %104 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %103, i32 0, i32 0, !dbg !12817
  %rlock.i = bitcast %union.anon* %104 to %struct.raw_spinlock*, !dbg !12817
  br label %do.end150, !dbg !12815

do.end150:                                        ; preds = %do.body148
  br label %do.end151, !dbg !12813

do.end151:                                        ; preds = %do.end150
  br label %do.end152, !dbg !12804

do.end152:                                        ; preds = %do.end151
  br label %do.end153, !dbg !12803

do.end153:                                        ; preds = %do.end152
  br label %do.end154, !dbg !12798

do.end154:                                        ; preds = %do.end153
  %105 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !12818
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %105, i32 0, i32 4, !dbg !12819
  %106 = load i32, i32* %pflags, align 32, !dbg !12820
  %or155 = or i32 %106, 64, !dbg !12820
  store i32 %or155, i32* %pflags, align 32, !dbg !12820
  %107 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !12821
  %lock156 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %107, i32 0, i32 2, !dbg !12822
  %108 = load %struct.spinlock*, %struct.spinlock** %lock156, align 16, !dbg !12822
  %109 = load i64, i64* %flags, align 8, !dbg !12823
  store %struct.spinlock* %108, %struct.spinlock** %lock.addr.i163, align 8
  store i64 %109, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1101, metadata !7437, metadata !DIExpression()) #2, !dbg !12824
  call void @llvm.dbg.declare(metadata !1101, metadata !7441, metadata !DIExpression()) #2, !dbg !12824
  store i32 1, i32* %tmp.i, align 4, !dbg !12824
  %110 = load i32, i32* %tmp.i, align 4, !dbg !12824
  call void @llvm.dbg.declare(metadata !1101, metadata !7442, metadata !DIExpression()) #2, !dbg !12825
  call void @llvm.dbg.declare(metadata !1101, metadata !7448, metadata !DIExpression()) #2, !dbg !12825
  store i32 1, i32* %tmp8.i, align 4, !dbg !12825
  %111 = load i32, i32* %tmp8.i, align 4, !dbg !12825
  %112 = load i64, i64* %flags.addr.i, align 8, !dbg !12826
  call void @arch_local_irq_restore(i64 %112) #9, !dbg !12826
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !12827, !srcloc !7452
  %113 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i163, align 8, !dbg !12828
  %114 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %113, i32 0, i32 0, !dbg !12828
  %rlock.i164 = bitcast %union.anon* %114 to %struct.raw_spinlock*, !dbg !12828
  %115 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !12829
  %i157 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %115, i32 0, i32 0, !dbg !12830
  %flags158 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i157, i32 0, i32 5, !dbg !12831
  %116 = load i32, i32* %flags158, align 4, !dbg !12832
  %or159 = or i32 %116, 524288, !dbg !12832
  store i32 %or159, i32* %flags158, align 4, !dbg !12832
  br label %for.inc160, !dbg !12833

for.inc160:                                       ; preds = %do.end154, %if.then118, %if.then108
  %117 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12756
  %118 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !12756
  %call161 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %117, %struct.ata_link* %118, i32 2) #7, !dbg !12756
  store %struct.ata_device* %call161, %struct.ata_device** %dev, align 8, !dbg !12756
  br label %for.cond101, !dbg !12756, !llvm.loop !12834

for.end162:                                       ; preds = %for.cond101
  store i32 0, i32* %retval, align 4, !dbg !12836
  br label %return, !dbg !12836

err:                                              ; preds = %if.then128, %sw.default, %if.then37, %if.then33
  call void @llvm.dbg.label(metadata !12837), !dbg !12838
  %119 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !12839
  %120 = load %struct.ata_device**, %struct.ata_device*** %r_failed_dev.addr, align 8, !dbg !12840
  store %struct.ata_device* %119, %struct.ata_device** %120, align 8, !dbg !12841
  %121 = load i32, i32* %rc, align 4, !dbg !12842
  store i32 %121, i32* %retval, align 4, !dbg !12843
  br label %return, !dbg !12843

return:                                           ; preds = %err, %for.end162
  %122 = load i32, i32* %retval, align 4, !dbg !12844
  ret i32 %122, !dbg !12844
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atapi_eh_clear_ua(%struct.ata_device* %dev) #0 !dbg !12845 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ata_device*, align 8
  %i = alloca i32, align 4
  %sense_buffer = alloca i8*, align 8
  %sense_key = alloca i8, align 1
  %err_mask = alloca i32, align 4
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !12846, metadata !DIExpression()), !dbg !12847
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12848, metadata !DIExpression()), !dbg !12849
  store i32 0, i32* %i, align 4, !dbg !12850
  br label %for.cond, !dbg !12852

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !12853
  %cmp = icmp slt i32 %0, 5, !dbg !12855
  br i1 %cmp, label %for.body, label %for.end, !dbg !12856

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %sense_buffer, metadata !12857, metadata !DIExpression()), !dbg !12859
  %1 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12860
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %1, i32 0, i32 0, !dbg !12861
  %2 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !12861
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %2, i32 0, i32 0, !dbg !12862
  %3 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !12862
  %sector_buf = getelementptr inbounds %struct.ata_port, %struct.ata_port* %3, i32 0, i32 52, !dbg !12863
  %arraydecay = getelementptr inbounds [512 x i8], [512 x i8]* %sector_buf, i64 0, i64 0, !dbg !12860
  store i8* %arraydecay, i8** %sense_buffer, align 8, !dbg !12859
  call void @llvm.dbg.declare(metadata i8* %sense_key, metadata !12864, metadata !DIExpression()), !dbg !12865
  store i8 0, i8* %sense_key, align 1, !dbg !12865
  call void @llvm.dbg.declare(metadata i32* %err_mask, metadata !12866, metadata !DIExpression()), !dbg !12867
  %4 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12868
  %call = call i32 @atapi_eh_tur(%struct.ata_device* %4, i8* %sense_key) #7, !dbg !12869
  store i32 %call, i32* %err_mask, align 4, !dbg !12870
  %5 = load i32, i32* %err_mask, align 4, !dbg !12871
  %cmp1 = icmp ne i32 %5, 0, !dbg !12873
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !12874

land.lhs.true:                                    ; preds = %for.body
  %6 = load i32, i32* %err_mask, align 4, !dbg !12875
  %cmp2 = icmp ne i32 %6, 1, !dbg !12876
  br i1 %cmp2, label %if.then, label %if.end, !dbg !12877

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12878
  %8 = load i32, i32* %err_mask, align 4, !dbg !12878
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.190, i64 0, i64 0), i32 %8) #7, !dbg !12878
  store i32 -5, i32* %retval, align 4, !dbg !12880
  br label %return, !dbg !12880

if.end:                                           ; preds = %land.lhs.true, %for.body
  %9 = load i32, i32* %err_mask, align 4, !dbg !12881
  %tobool = icmp ne i32 %9, 0, !dbg !12881
  br i1 %tobool, label %lor.lhs.false, label %if.then5, !dbg !12883

lor.lhs.false:                                    ; preds = %if.end
  %10 = load i8, i8* %sense_key, align 1, !dbg !12884
  %conv = zext i8 %10 to i32, !dbg !12884
  %cmp3 = icmp ne i32 %conv, 6, !dbg !12885
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !12886

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  store i32 0, i32* %retval, align 4, !dbg !12887
  br label %return, !dbg !12887

if.end6:                                          ; preds = %lor.lhs.false
  %11 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12888
  %12 = load i8*, i8** %sense_buffer, align 8, !dbg !12889
  %13 = load i8, i8* %sense_key, align 1, !dbg !12890
  %call7 = call i32 @atapi_eh_request_sense(%struct.ata_device* %11, i8* %12, i8 zeroext %13) #7, !dbg !12891
  store i32 %call7, i32* %err_mask, align 4, !dbg !12892
  %14 = load i32, i32* %err_mask, align 4, !dbg !12893
  %tobool8 = icmp ne i32 %14, 0, !dbg !12893
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !12895

if.then9:                                         ; preds = %if.end6
  %15 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12896
  %16 = load i32, i32* %err_mask, align 4, !dbg !12896
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.191, i64 0, i64 0), i32 %16) #7, !dbg !12896
  store i32 -5, i32* %retval, align 4, !dbg !12898
  br label %return, !dbg !12898

if.end10:                                         ; preds = %if.end6
  br label %for.inc, !dbg !12899

for.inc:                                          ; preds = %if.end10
  %17 = load i32, i32* %i, align 4, !dbg !12900
  %inc = add i32 %17, 1, !dbg !12900
  store i32 %inc, i32* %i, align 4, !dbg !12900
  br label %for.cond, !dbg !12901, !llvm.loop !12902

for.end:                                          ; preds = %for.cond
  %18 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12904
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.192, i64 0, i64 0), i32 5) #7, !dbg !12904
  store i32 0, i32* %retval, align 4, !dbg !12905
  br label %return, !dbg !12905

return:                                           ; preds = %for.end, %if.then9, %if.then5, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !12906
  ret i32 %19, !dbg !12906
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @zpodd_dev_enabled(%struct.ata_device* %dev) #0 !dbg !12907 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !12910, metadata !DIExpression()), !dbg !12911
  ret i1 false, !dbg !12912
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @zpodd_post_poweron(%struct.ata_device* %dev) #0 !dbg !12913 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !12914, metadata !DIExpression()), !dbg !12915
  ret void, !dbg !12916
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_eh_maybe_retry_flush(%struct.ata_device* %dev) #0 !dbg !12917 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ata_device*, align 8
  %link = alloca %struct.ata_link*, align 8
  %ap = alloca %struct.ata_port*, align 8
  %qc = alloca %struct.ata_queued_cmd*, align 8
  %tf = alloca %struct.ata_taskfile, align 8
  %err_mask = alloca i32, align 4
  %rc = alloca i32, align 4
  %__UNIQUE_ID___x331 = alloca i32, align 4
  %__UNIQUE_ID___y332 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !12918, metadata !DIExpression()), !dbg !12919
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link, metadata !12920, metadata !DIExpression()), !dbg !12921
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12922
  %link1 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 0, !dbg !12923
  %1 = load %struct.ata_link*, %struct.ata_link** %link1, align 64, !dbg !12923
  store %struct.ata_link* %1, %struct.ata_link** %link, align 8, !dbg !12921
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !12924, metadata !DIExpression()), !dbg !12925
  %2 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !12926
  %ap2 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %2, i32 0, i32 0, !dbg !12927
  %3 = load %struct.ata_port*, %struct.ata_port** %ap2, align 64, !dbg !12927
  store %struct.ata_port* %3, %struct.ata_port** %ap, align 8, !dbg !12925
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc, metadata !12928, metadata !DIExpression()), !dbg !12929
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile* %tf, metadata !12930, metadata !DIExpression()), !dbg !12931
  call void @llvm.dbg.declare(metadata i32* %err_mask, metadata !12932, metadata !DIExpression()), !dbg !12933
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !12934, metadata !DIExpression()), !dbg !12935
  store i32 0, i32* %rc, align 4, !dbg !12935
  %4 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !12936
  %active_tag = getelementptr inbounds %struct.ata_link, %struct.ata_link* %4, i32 0, i32 3, !dbg !12938
  %5 = load i32, i32* %active_tag, align 8, !dbg !12938
  %call = call zeroext i1 @ata_tag_valid(i32 %5) #7, !dbg !12939
  br i1 %call, label %if.end, label %if.then, !dbg !12940

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !12941
  br label %return, !dbg !12941

if.end:                                           ; preds = %entry
  %6 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !12942
  %7 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !12943
  %active_tag3 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %7, i32 0, i32 3, !dbg !12944
  %8 = load i32, i32* %active_tag3, align 8, !dbg !12944
  %call4 = call %struct.ata_queued_cmd* @__ata_qc_from_tag(%struct.ata_port* %6, i32 %8) #7, !dbg !12945
  store %struct.ata_queued_cmd* %call4, %struct.ata_queued_cmd** %qc, align 8, !dbg !12946
  %9 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !12947
  %dev5 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %9, i32 0, i32 1, !dbg !12949
  %10 = load %struct.ata_device*, %struct.ata_device** %dev5, align 8, !dbg !12949
  %11 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12950
  %cmp = icmp ne %struct.ata_device* %10, %11, !dbg !12951
  br i1 %cmp, label %if.then14, label %lor.lhs.false, !dbg !12952

lor.lhs.false:                                    ; preds = %if.end
  %12 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !12953
  %tf6 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %12, i32 0, i32 4, !dbg !12954
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf6, i32 0, i32 14, !dbg !12955
  %13 = load i8, i8* %command, align 1, !dbg !12955
  %conv = zext i8 %13 to i32, !dbg !12953
  %cmp7 = icmp ne i32 %conv, 234, !dbg !12956
  br i1 %cmp7, label %land.lhs.true, label %if.end15, !dbg !12957

land.lhs.true:                                    ; preds = %lor.lhs.false
  %14 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !12958
  %tf9 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %14, i32 0, i32 4, !dbg !12959
  %command10 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf9, i32 0, i32 14, !dbg !12960
  %15 = load i8, i8* %command10, align 1, !dbg !12960
  %conv11 = zext i8 %15 to i32, !dbg !12958
  %cmp12 = icmp ne i32 %conv11, 231, !dbg !12961
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !12962

if.then14:                                        ; preds = %land.lhs.true, %if.end
  store i32 0, i32* %retval, align 4, !dbg !12963
  br label %return, !dbg !12963

if.end15:                                         ; preds = %land.lhs.true, %lor.lhs.false
  %16 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !12964
  %err_mask16 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %16, i32 0, i32 20, !dbg !12966
  %17 = load i32, i32* %err_mask16, align 4, !dbg !12966
  %and = and i32 %17, 1, !dbg !12967
  %tobool = icmp ne i32 %and, 0, !dbg !12967
  br i1 %tobool, label %if.then17, label %if.end18, !dbg !12968

if.then17:                                        ; preds = %if.end15
  store i32 0, i32* %retval, align 4, !dbg !12969
  br label %return, !dbg !12969

if.end18:                                         ; preds = %if.end15
  %18 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12970
  call void @ata_tf_init(%struct.ata_device* %18, %struct.ata_taskfile* %tf) #7, !dbg !12971
  %19 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !12972
  %tf19 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %19, i32 0, i32 4, !dbg !12973
  %command20 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf19, i32 0, i32 14, !dbg !12974
  %20 = load i8, i8* %command20, align 1, !dbg !12974
  %command21 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 14, !dbg !12975
  store i8 %20, i8* %command21, align 1, !dbg !12976
  %flags = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 0, !dbg !12977
  %21 = load i64, i64* %flags, align 8, !dbg !12978
  %or = or i64 %21, 4, !dbg !12978
  store i64 %or, i64* %flags, align 8, !dbg !12978
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 1, !dbg !12979
  store i8 0, i8* %protocol, align 8, !dbg !12980
  %22 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12981
  %command22 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 14, !dbg !12981
  %23 = load i8, i8* %command22, align 1, !dbg !12981
  %conv23 = zext i8 %23 to i32, !dbg !12981
  %24 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !12981
  %err_mask24 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %24, i32 0, i32 20, !dbg !12981
  %25 = load i32, i32* %err_mask24, align 4, !dbg !12981
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %22, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.193, i64 0, i64 0), i32 %conv23, i32 %25) #7, !dbg !12981
  %26 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12982
  %call25 = call i32 @ata_exec_internal(%struct.ata_device* %26, %struct.ata_taskfile* %tf, i8* null, i32 3, i8* null, i32 0, i64 0) #7, !dbg !12983
  store i32 %call25, i32* %err_mask, align 4, !dbg !12984
  %27 = load i32, i32* %err_mask, align 4, !dbg !12985
  %tobool26 = icmp ne i32 %27, 0, !dbg !12985
  br i1 %tobool26, label %if.else, label %if.then27, !dbg !12987

if.then27:                                        ; preds = %if.end18
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x331, metadata !12988, metadata !DIExpression()), !dbg !12991
  %28 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !12991
  %scsicmd = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %28, i32 0, i32 2, !dbg !12991
  %29 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd, align 8, !dbg !12991
  %allowed = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %29, i32 0, i32 8, !dbg !12991
  %30 = load i32, i32* %allowed, align 4, !dbg !12991
  store i32 %30, i32* %__UNIQUE_ID___x331, align 4, !dbg !12991
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y332, metadata !12992, metadata !DIExpression()), !dbg !12991
  store i32 1, i32* %__UNIQUE_ID___y332, align 4, !dbg !12991
  %31 = load i32, i32* %__UNIQUE_ID___x331, align 4, !dbg !12991
  %32 = load i32, i32* %__UNIQUE_ID___y332, align 4, !dbg !12991
  %cmp28 = icmp sgt i32 %31, %32, !dbg !12991
  br i1 %cmp28, label %cond.true, label %cond.false, !dbg !12991

cond.true:                                        ; preds = %if.then27
  %33 = load i32, i32* %__UNIQUE_ID___x331, align 4, !dbg !12991
  br label %cond.end, !dbg !12991

cond.false:                                       ; preds = %if.then27
  %34 = load i32, i32* %__UNIQUE_ID___y332, align 4, !dbg !12991
  br label %cond.end, !dbg !12991

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %33, %cond.true ], [ %34, %cond.false ], !dbg !12991
  store i32 %cond, i32* %tmp, align 4, !dbg !12991
  %35 = load i32, i32* %tmp, align 4, !dbg !12991
  %36 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !12993
  %scsicmd30 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %36, i32 0, i32 2, !dbg !12994
  %37 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd30, align 8, !dbg !12994
  %allowed31 = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %37, i32 0, i32 8, !dbg !12995
  store i32 %35, i32* %allowed31, align 4, !dbg !12996
  br label %if.end42, !dbg !12997

if.else:                                          ; preds = %if.end18
  %38 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !12998
  %39 = load i32, i32* %err_mask, align 4, !dbg !12998
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %38, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.194, i64 0, i64 0), i32 %39) #7, !dbg !12998
  store i32 -5, i32* %rc, align 4, !dbg !13000
  %40 = load i32, i32* %err_mask, align 4, !dbg !13001
  %and32 = and i32 %40, 1, !dbg !13003
  %tobool33 = icmp ne i32 %and32, 0, !dbg !13003
  br i1 %tobool33, label %if.then34, label %if.end41, !dbg !13004

if.then34:                                        ; preds = %if.else
  %41 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !13005
  %err_mask35 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %41, i32 0, i32 20, !dbg !13007
  %42 = load i32, i32* %err_mask35, align 4, !dbg !13008
  %or36 = or i32 %42, 1, !dbg !13008
  store i32 %or36, i32* %err_mask35, align 4, !dbg !13008
  %43 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc, align 8, !dbg !13009
  %result_tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %43, i32 0, i32 21, !dbg !13010
  %44 = bitcast %struct.ata_taskfile* %result_tf to i8*, !dbg !13011
  %45 = bitcast %struct.ata_taskfile* %tf to i8*, !dbg !13011
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 32, i1 false), !dbg !13011
  %46 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13012
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %46, i32 0, i32 4, !dbg !13014
  %47 = load i32, i32* %pflags, align 32, !dbg !13014
  %and37 = and i32 %47, 4, !dbg !13015
  %tobool38 = icmp ne i32 %and37, 0, !dbg !13015
  br i1 %tobool38, label %if.end40, label %if.then39, !dbg !13016

if.then39:                                        ; preds = %if.then34
  store i32 0, i32* %rc, align 4, !dbg !13017
  br label %if.end40, !dbg !13018

if.end40:                                         ; preds = %if.then39, %if.then34
  br label %if.end41, !dbg !13019

if.end41:                                         ; preds = %if.end40, %if.else
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %cond.end
  %48 = load i32, i32* %rc, align 4, !dbg !13020
  store i32 %48, i32* %retval, align 4, !dbg !13021
  br label %return, !dbg !13021

return:                                           ; preds = %if.end42, %if.then17, %if.then14, %if.then
  %49 = load i32, i32* %retval, align 4, !dbg !13022
  ret i32 %49, !dbg !13022
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_eh_set_lpm(%struct.ata_link* %link, i32 %policy, %struct.ata_device** %r_failed_dev) #0 !dbg !13023 {
entry:
  %retval = alloca i32, align 4
  %link.addr = alloca %struct.ata_link*, align 8
  %policy.addr = alloca i32, align 4
  %r_failed_dev.addr = alloca %struct.ata_device**, align 8
  %ap = alloca %struct.ata_port*, align 8
  %ehc = alloca %struct.ata_eh_context*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %link_dev = alloca %struct.ata_device*, align 8
  %lpm_dev = alloca %struct.ata_device*, align 8
  %old_policy = alloca i32, align 4
  %no_dipm = alloca i8, align 1
  %hints = alloca i32, align 4
  %err_mask = alloca i32, align 4
  %rc = alloca i32, align 4
  %hipm = alloca i8, align 1
  %dipm = alloca i8, align 1
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !13026, metadata !DIExpression()), !dbg !13027
  store i32 %policy, i32* %policy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %policy.addr, metadata !13028, metadata !DIExpression()), !dbg !13029
  store %struct.ata_device** %r_failed_dev, %struct.ata_device*** %r_failed_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device*** %r_failed_dev.addr, metadata !13030, metadata !DIExpression()), !dbg !13031
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap, metadata !13032, metadata !DIExpression()), !dbg !13033
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13034
  %call = call zeroext i1 @ata_is_host_link(%struct.ata_link* %0) #7, !dbg !13035
  br i1 %call, label %cond.true, label %cond.false, !dbg !13035

cond.true:                                        ; preds = %entry
  %1 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13036
  %ap1 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 0, !dbg !13037
  %2 = load %struct.ata_port*, %struct.ata_port** %ap1, align 64, !dbg !13037
  br label %cond.end, !dbg !13035

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13035

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.ata_port* [ %2, %cond.true ], [ null, %cond.false ], !dbg !13035
  store %struct.ata_port* %cond, %struct.ata_port** %ap, align 8, !dbg !13033
  call void @llvm.dbg.declare(metadata %struct.ata_eh_context** %ehc, metadata !13038, metadata !DIExpression()), !dbg !13039
  %3 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13040
  %eh_context = getelementptr inbounds %struct.ata_link, %struct.ata_link* %3, i32 0, i32 12, !dbg !13041
  store %struct.ata_eh_context* %eh_context, %struct.ata_eh_context** %ehc, align 8, !dbg !13039
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !13042, metadata !DIExpression()), !dbg !13043
  call void @llvm.dbg.declare(metadata %struct.ata_device** %link_dev, metadata !13044, metadata !DIExpression()), !dbg !13045
  store %struct.ata_device* null, %struct.ata_device** %link_dev, align 8, !dbg !13045
  call void @llvm.dbg.declare(metadata %struct.ata_device** %lpm_dev, metadata !13046, metadata !DIExpression()), !dbg !13047
  store %struct.ata_device* null, %struct.ata_device** %lpm_dev, align 8, !dbg !13047
  call void @llvm.dbg.declare(metadata i32* %old_policy, metadata !13048, metadata !DIExpression()), !dbg !13049
  %4 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13050
  %lpm_policy = getelementptr inbounds %struct.ata_link, %struct.ata_link* %4, i32 0, i32 10, !dbg !13051
  %5 = load i32, i32* %lpm_policy, align 4, !dbg !13051
  store i32 %5, i32* %old_policy, align 4, !dbg !13049
  call void @llvm.dbg.declare(metadata i8* %no_dipm, metadata !13052, metadata !DIExpression()), !dbg !13053
  %6 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13054
  %ap2 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %6, i32 0, i32 0, !dbg !13055
  %7 = load %struct.ata_port*, %struct.ata_port** %ap2, align 64, !dbg !13055
  %flags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %7, i32 0, i32 3, !dbg !13056
  %8 = load i64, i64* %flags, align 8, !dbg !13056
  %and = and i64 %8, 8388608, !dbg !13057
  %tobool = icmp ne i64 %and, 0, !dbg !13054
  %frombool = zext i1 %tobool to i8, !dbg !13053
  store i8 %frombool, i8* %no_dipm, align 1, !dbg !13053
  call void @llvm.dbg.declare(metadata i32* %hints, metadata !13058, metadata !DIExpression()), !dbg !13059
  store i32 3, i32* %hints, align 4, !dbg !13059
  call void @llvm.dbg.declare(metadata i32* %err_mask, metadata !13060, metadata !DIExpression()), !dbg !13061
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !13062, metadata !DIExpression()), !dbg !13063
  %9 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13064
  %flags3 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %9, i32 0, i32 5, !dbg !13066
  %10 = load i32, i32* %flags3, align 16, !dbg !13066
  %and4 = and i32 %10, 256, !dbg !13067
  %tobool5 = icmp ne i32 %and4, 0, !dbg !13067
  br i1 %tobool5, label %if.then, label %lor.lhs.false, !dbg !13068

lor.lhs.false:                                    ; preds = %cond.end
  %11 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13069
  %tobool6 = icmp ne %struct.ata_port* %11, null, !dbg !13069
  br i1 %tobool6, label %land.lhs.true, label %if.end, !dbg !13070

land.lhs.true:                                    ; preds = %lor.lhs.false
  %12 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13071
  %ops = getelementptr inbounds %struct.ata_port, %struct.ata_port* %12, i32 0, i32 1, !dbg !13072
  %13 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !13072
  %set_lpm = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %13, i32 0, i32 31, !dbg !13073
  %14 = load i32 (%struct.ata_link*, i32, i32)*, i32 (%struct.ata_link*, i32, i32)** %set_lpm, align 8, !dbg !13073
  %tobool7 = icmp ne i32 (%struct.ata_link*, i32, i32)* %14, null, !dbg !13071
  br i1 %tobool7, label %if.end, label %if.then, !dbg !13074

if.then:                                          ; preds = %land.lhs.true, %cond.end
  store i32 0, i32* %retval, align 4, !dbg !13075
  br label %return, !dbg !13075

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %15 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13076
  %call8 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %15, i32 0) #7, !dbg !13076
  store %struct.ata_device* %call8, %struct.ata_device** %dev, align 8, !dbg !13076
  br label %for.cond, !dbg !13076

for.cond:                                         ; preds = %for.inc, %if.end
  %16 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13078
  %tobool9 = icmp ne %struct.ata_device* %16, null, !dbg !13076
  br i1 %tobool9, label %for.body, label %for.end, !dbg !13076

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8* %hipm, metadata !13080, metadata !DIExpression()), !dbg !13082
  %17 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13083
  %18 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %17, i32 0, i32 27, !dbg !13084
  %id = bitcast %union.anon.79* %18 to [256 x i16]*, !dbg !13084
  %arraydecay = getelementptr inbounds [256 x i16], [256 x i16]* %id, i64 0, i64 0, !dbg !13083
  %call10 = call zeroext i1 @ata_id_has_hipm(i16* %arraydecay) #7, !dbg !13085
  %frombool11 = zext i1 %call10 to i8, !dbg !13082
  store i8 %frombool11, i8* %hipm, align 1, !dbg !13082
  call void @llvm.dbg.declare(metadata i8* %dipm, metadata !13086, metadata !DIExpression()), !dbg !13087
  %19 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13088
  %20 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %19, i32 0, i32 27, !dbg !13089
  %id12 = bitcast %union.anon.79* %20 to [256 x i16]*, !dbg !13089
  %arraydecay13 = getelementptr inbounds [256 x i16], [256 x i16]* %id12, i64 0, i64 0, !dbg !13088
  %call14 = call zeroext i1 @ata_id_has_dipm(i16* %arraydecay13) #7, !dbg !13090
  br i1 %call14, label %land.rhs, label %land.end, !dbg !13091

land.rhs:                                         ; preds = %for.body
  %21 = load i8, i8* %no_dipm, align 1, !dbg !13092
  %tobool15 = trunc i8 %21 to i1, !dbg !13092
  %lnot = xor i1 %tobool15, true, !dbg !13093
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.body
  %22 = phi i1 [ false, %for.body ], [ %lnot, %land.rhs ], !dbg !13094
  %frombool16 = zext i1 %22 to i8, !dbg !13087
  store i8 %frombool16, i8* %dipm, align 1, !dbg !13087
  %23 = load %struct.ata_device*, %struct.ata_device** %link_dev, align 8, !dbg !13095
  %tobool17 = icmp ne %struct.ata_device* %23, null, !dbg !13095
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !13097

if.then18:                                        ; preds = %land.end
  %24 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13098
  store %struct.ata_device* %24, %struct.ata_device** %link_dev, align 8, !dbg !13099
  br label %if.end19, !dbg !13100

if.end19:                                         ; preds = %if.then18, %land.end
  %25 = load %struct.ata_device*, %struct.ata_device** %lpm_dev, align 8, !dbg !13101
  %tobool20 = icmp ne %struct.ata_device* %25, null, !dbg !13101
  br i1 %tobool20, label %if.end26, label %land.lhs.true21, !dbg !13103

land.lhs.true21:                                  ; preds = %if.end19
  %26 = load i8, i8* %hipm, align 1, !dbg !13104
  %tobool22 = trunc i8 %26 to i1, !dbg !13104
  br i1 %tobool22, label %if.then25, label %lor.lhs.false23, !dbg !13105

lor.lhs.false23:                                  ; preds = %land.lhs.true21
  %27 = load i8, i8* %dipm, align 1, !dbg !13106
  %tobool24 = trunc i8 %27 to i1, !dbg !13106
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !13107

if.then25:                                        ; preds = %lor.lhs.false23, %land.lhs.true21
  %28 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13108
  store %struct.ata_device* %28, %struct.ata_device** %lpm_dev, align 8, !dbg !13109
  br label %if.end26, !dbg !13110

if.end26:                                         ; preds = %if.then25, %lor.lhs.false23, %if.end19
  %29 = load i32, i32* %hints, align 4, !dbg !13111
  %and27 = and i32 %29, -2, !dbg !13111
  store i32 %and27, i32* %hints, align 4, !dbg !13111
  %30 = load i8, i8* %hipm, align 1, !dbg !13112
  %tobool28 = trunc i8 %30 to i1, !dbg !13112
  br i1 %tobool28, label %if.end31, label %if.then29, !dbg !13114

if.then29:                                        ; preds = %if.end26
  %31 = load i32, i32* %hints, align 4, !dbg !13115
  %and30 = and i32 %31, -3, !dbg !13115
  store i32 %and30, i32* %hints, align 4, !dbg !13115
  br label %if.end31, !dbg !13116

if.end31:                                         ; preds = %if.then29, %if.end26
  %32 = load i32, i32* %policy.addr, align 4, !dbg !13117
  %cmp = icmp ult i32 %32, 3, !dbg !13119
  br i1 %cmp, label %land.lhs.true32, label %if.end41, !dbg !13120

land.lhs.true32:                                  ; preds = %if.end31
  %33 = load i8, i8* %dipm, align 1, !dbg !13121
  %tobool33 = trunc i8 %33 to i1, !dbg !13121
  br i1 %tobool33, label %if.then34, label %if.end41, !dbg !13122

if.then34:                                        ; preds = %land.lhs.true32
  %34 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13123
  %call35 = call i32 @ata_dev_set_feature(%struct.ata_device* %34, i8 zeroext -112, i8 zeroext 3) #7, !dbg !13125
  store i32 %call35, i32* %err_mask, align 4, !dbg !13126
  %35 = load i32, i32* %err_mask, align 4, !dbg !13127
  %tobool36 = icmp ne i32 %35, 0, !dbg !13127
  br i1 %tobool36, label %land.lhs.true37, label %if.end40, !dbg !13129

land.lhs.true37:                                  ; preds = %if.then34
  %36 = load i32, i32* %err_mask, align 4, !dbg !13130
  %cmp38 = icmp ne i32 %36, 1, !dbg !13131
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !13132

if.then39:                                        ; preds = %land.lhs.true37
  %37 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13133
  %38 = load i32, i32* %err_mask, align 4, !dbg !13133
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %37, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.195, i64 0, i64 0), i32 %38) #7, !dbg !13133
  store i32 -5, i32* %rc, align 4, !dbg !13135
  br label %fail, !dbg !13136

if.end40:                                         ; preds = %land.lhs.true37, %if.then34
  br label %if.end41, !dbg !13137

if.end41:                                         ; preds = %if.end40, %land.lhs.true32, %if.end31
  br label %for.inc, !dbg !13138

for.inc:                                          ; preds = %if.end41
  %39 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13078
  %40 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13078
  %call42 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %39, %struct.ata_link* %40, i32 0) #7, !dbg !13078
  store %struct.ata_device* %call42, %struct.ata_device** %dev, align 8, !dbg !13078
  br label %for.cond, !dbg !13078, !llvm.loop !13139

for.end:                                          ; preds = %for.cond
  %41 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13141
  %tobool43 = icmp ne %struct.ata_port* %41, null, !dbg !13141
  br i1 %tobool43, label %if.then44, label %if.else, !dbg !13143

if.then44:                                        ; preds = %for.end
  %42 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13144
  %ops45 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %42, i32 0, i32 1, !dbg !13146
  %43 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops45, align 8, !dbg !13146
  %set_lpm46 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %43, i32 0, i32 31, !dbg !13147
  %44 = load i32 (%struct.ata_link*, i32, i32)*, i32 (%struct.ata_link*, i32, i32)** %set_lpm46, align 8, !dbg !13147
  %45 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13148
  %46 = load i32, i32* %policy.addr, align 4, !dbg !13149
  %47 = load i32, i32* %hints, align 4, !dbg !13150
  %call47 = call i32 %44(%struct.ata_link* %45, i32 %46, i32 %47) #7, !dbg !13144
  store i32 %call47, i32* %rc, align 4, !dbg !13151
  %48 = load i32, i32* %rc, align 4, !dbg !13152
  %tobool48 = icmp ne i32 %48, 0, !dbg !13152
  br i1 %tobool48, label %if.end56, label %land.lhs.true49, !dbg !13154

land.lhs.true49:                                  ; preds = %if.then44
  %49 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13155
  %slave_link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %49, i32 0, i32 26, !dbg !13156
  %50 = load %struct.ata_link*, %struct.ata_link** %slave_link, align 64, !dbg !13156
  %tobool50 = icmp ne %struct.ata_link* %50, null, !dbg !13155
  br i1 %tobool50, label %if.then51, label %if.end56, !dbg !13157

if.then51:                                        ; preds = %land.lhs.true49
  %51 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13158
  %ops52 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %51, i32 0, i32 1, !dbg !13159
  %52 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops52, align 8, !dbg !13159
  %set_lpm53 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %52, i32 0, i32 31, !dbg !13160
  %53 = load i32 (%struct.ata_link*, i32, i32)*, i32 (%struct.ata_link*, i32, i32)** %set_lpm53, align 8, !dbg !13160
  %54 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13161
  %slave_link54 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %54, i32 0, i32 26, !dbg !13162
  %55 = load %struct.ata_link*, %struct.ata_link** %slave_link54, align 64, !dbg !13162
  %56 = load i32, i32* %policy.addr, align 4, !dbg !13163
  %57 = load i32, i32* %hints, align 4, !dbg !13164
  %call55 = call i32 %53(%struct.ata_link* %55, i32 %56, i32 %57) #7, !dbg !13158
  store i32 %call55, i32* %rc, align 4, !dbg !13165
  br label %if.end56, !dbg !13166

if.end56:                                         ; preds = %if.then51, %land.lhs.true49, %if.then44
  br label %if.end58, !dbg !13167

if.else:                                          ; preds = %for.end
  %58 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13168
  %59 = load i32, i32* %policy.addr, align 4, !dbg !13169
  %60 = load i32, i32* %hints, align 4, !dbg !13170
  %call57 = call i32 @sata_pmp_set_lpm(%struct.ata_link* %58, i32 %59, i32 %60) #7, !dbg !13171
  store i32 %call57, i32* %rc, align 4, !dbg !13172
  br label %if.end58

if.end58:                                         ; preds = %if.else, %if.end56
  %61 = load i32, i32* %rc, align 4, !dbg !13173
  %tobool59 = icmp ne i32 %61, 0, !dbg !13173
  br i1 %tobool59, label %if.then60, label %if.end70, !dbg !13175

if.then60:                                        ; preds = %if.end58
  %62 = load i32, i32* %rc, align 4, !dbg !13176
  %cmp61 = icmp eq i32 %62, -95, !dbg !13179
  br i1 %cmp61, label %if.then62, label %if.end64, !dbg !13180

if.then62:                                        ; preds = %if.then60
  %63 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13181
  %flags63 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %63, i32 0, i32 5, !dbg !13183
  %64 = load i32, i32* %flags63, align 16, !dbg !13184
  %or = or i32 %64, 256, !dbg !13184
  store i32 %or, i32* %flags63, align 16, !dbg !13184
  store i32 0, i32* %retval, align 4, !dbg !13185
  br label %return, !dbg !13185

if.end64:                                         ; preds = %if.then60
  %65 = load %struct.ata_device*, %struct.ata_device** %lpm_dev, align 8, !dbg !13186
  %tobool65 = icmp ne %struct.ata_device* %65, null, !dbg !13186
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !13186

cond.true66:                                      ; preds = %if.end64
  %66 = load %struct.ata_device*, %struct.ata_device** %lpm_dev, align 8, !dbg !13187
  br label %cond.end68, !dbg !13186

cond.false67:                                     ; preds = %if.end64
  %67 = load %struct.ata_device*, %struct.ata_device** %link_dev, align 8, !dbg !13188
  br label %cond.end68, !dbg !13186

cond.end68:                                       ; preds = %cond.false67, %cond.true66
  %cond69 = phi %struct.ata_device* [ %66, %cond.true66 ], [ %67, %cond.false67 ], !dbg !13186
  store %struct.ata_device* %cond69, %struct.ata_device** %dev, align 8, !dbg !13189
  br label %fail, !dbg !13190

if.end70:                                         ; preds = %if.end58
  %68 = load i32, i32* %policy.addr, align 4, !dbg !13191
  %69 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13192
  %lpm_policy71 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %69, i32 0, i32 10, !dbg !13193
  store i32 %68, i32* %lpm_policy71, align 4, !dbg !13194
  %70 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13195
  %tobool72 = icmp ne %struct.ata_port* %70, null, !dbg !13195
  br i1 %tobool72, label %land.lhs.true73, label %if.end79, !dbg !13197

land.lhs.true73:                                  ; preds = %if.end70
  %71 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13198
  %slave_link74 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %71, i32 0, i32 26, !dbg !13199
  %72 = load %struct.ata_link*, %struct.ata_link** %slave_link74, align 64, !dbg !13199
  %tobool75 = icmp ne %struct.ata_link* %72, null, !dbg !13198
  br i1 %tobool75, label %if.then76, label %if.end79, !dbg !13200

if.then76:                                        ; preds = %land.lhs.true73
  %73 = load i32, i32* %policy.addr, align 4, !dbg !13201
  %74 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13202
  %slave_link77 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %74, i32 0, i32 26, !dbg !13203
  %75 = load %struct.ata_link*, %struct.ata_link** %slave_link77, align 64, !dbg !13203
  %lpm_policy78 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %75, i32 0, i32 10, !dbg !13204
  store i32 %73, i32* %lpm_policy78, align 4, !dbg !13205
  br label %if.end79, !dbg !13202

if.end79:                                         ; preds = %if.then76, %land.lhs.true73, %if.end70
  %76 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13206
  %call80 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %76, i32 0) #7, !dbg !13206
  store %struct.ata_device* %call80, %struct.ata_device** %dev, align 8, !dbg !13206
  br label %for.cond81, !dbg !13206

for.cond81:                                       ; preds = %for.inc99, %if.end79
  %77 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13208
  %tobool82 = icmp ne %struct.ata_device* %77, null, !dbg !13206
  br i1 %tobool82, label %for.body83, label %for.end101, !dbg !13206

for.body83:                                       ; preds = %for.cond81
  %78 = load i32, i32* %policy.addr, align 4, !dbg !13210
  %cmp84 = icmp uge i32 %78, 3, !dbg !13213
  br i1 %cmp84, label %land.lhs.true85, label %if.end98, !dbg !13214

land.lhs.true85:                                  ; preds = %for.body83
  %79 = load i8, i8* %no_dipm, align 1, !dbg !13215
  %tobool86 = trunc i8 %79 to i1, !dbg !13215
  br i1 %tobool86, label %if.end98, label %land.lhs.true87, !dbg !13216

land.lhs.true87:                                  ; preds = %land.lhs.true85
  %80 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13217
  %81 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %80, i32 0, i32 27, !dbg !13218
  %id88 = bitcast %union.anon.79* %81 to [256 x i16]*, !dbg !13218
  %arraydecay89 = getelementptr inbounds [256 x i16], [256 x i16]* %id88, i64 0, i64 0, !dbg !13217
  %call90 = call zeroext i1 @ata_id_has_dipm(i16* %arraydecay89) #7, !dbg !13219
  br i1 %call90, label %if.then91, label %if.end98, !dbg !13220

if.then91:                                        ; preds = %land.lhs.true87
  %82 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13221
  %call92 = call i32 @ata_dev_set_feature(%struct.ata_device* %82, i8 zeroext 16, i8 zeroext 3) #7, !dbg !13223
  store i32 %call92, i32* %err_mask, align 4, !dbg !13224
  %83 = load i32, i32* %err_mask, align 4, !dbg !13225
  %tobool93 = icmp ne i32 %83, 0, !dbg !13225
  br i1 %tobool93, label %land.lhs.true94, label %if.end97, !dbg !13227

land.lhs.true94:                                  ; preds = %if.then91
  %84 = load i32, i32* %err_mask, align 4, !dbg !13228
  %cmp95 = icmp ne i32 %84, 1, !dbg !13229
  br i1 %cmp95, label %if.then96, label %if.end97, !dbg !13230

if.then96:                                        ; preds = %land.lhs.true94
  %85 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13231
  %86 = load i32, i32* %err_mask, align 4, !dbg !13231
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %85, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.196, i64 0, i64 0), i32 %86) #7, !dbg !13231
  store i32 -5, i32* %rc, align 4, !dbg !13233
  br label %fail, !dbg !13234

if.end97:                                         ; preds = %land.lhs.true94, %if.then91
  br label %if.end98, !dbg !13235

if.end98:                                         ; preds = %if.end97, %land.lhs.true87, %land.lhs.true85, %for.body83
  br label %for.inc99, !dbg !13236

for.inc99:                                        ; preds = %if.end98
  %87 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13208
  %88 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13208
  %call100 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %87, %struct.ata_link* %88, i32 0) #7, !dbg !13208
  store %struct.ata_device* %call100, %struct.ata_device** %dev, align 8, !dbg !13208
  br label %for.cond81, !dbg !13208, !llvm.loop !13237

for.end101:                                       ; preds = %for.cond81
  %89 = load volatile i64, i64* @jiffies, align 8, !dbg !13239
  %90 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13240
  %last_lpm_change = getelementptr inbounds %struct.ata_link, %struct.ata_link* %90, i32 0, i32 15, !dbg !13241
  store i64 %89, i64* %last_lpm_change, align 64, !dbg !13242
  %91 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13243
  %flags102 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %91, i32 0, i32 5, !dbg !13244
  %92 = load i32, i32* %flags102, align 16, !dbg !13245
  %or103 = or i32 %92, 1024, !dbg !13245
  store i32 %or103, i32* %flags102, align 16, !dbg !13245
  store i32 0, i32* %retval, align 4, !dbg !13246
  br label %return, !dbg !13246

fail:                                             ; preds = %if.then96, %cond.end68, %if.then39
  call void @llvm.dbg.label(metadata !13247), !dbg !13248
  %93 = load i32, i32* %old_policy, align 4, !dbg !13249
  %94 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13250
  %lpm_policy104 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %94, i32 0, i32 10, !dbg !13251
  store i32 %93, i32* %lpm_policy104, align 4, !dbg !13252
  %95 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13253
  %tobool105 = icmp ne %struct.ata_port* %95, null, !dbg !13253
  br i1 %tobool105, label %land.lhs.true106, label %if.end112, !dbg !13255

land.lhs.true106:                                 ; preds = %fail
  %96 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13256
  %slave_link107 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %96, i32 0, i32 26, !dbg !13257
  %97 = load %struct.ata_link*, %struct.ata_link** %slave_link107, align 64, !dbg !13257
  %tobool108 = icmp ne %struct.ata_link* %97, null, !dbg !13256
  br i1 %tobool108, label %if.then109, label %if.end112, !dbg !13258

if.then109:                                       ; preds = %land.lhs.true106
  %98 = load i32, i32* %old_policy, align 4, !dbg !13259
  %99 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13260
  %slave_link110 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %99, i32 0, i32 26, !dbg !13261
  %100 = load %struct.ata_link*, %struct.ata_link** %slave_link110, align 64, !dbg !13261
  %lpm_policy111 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %100, i32 0, i32 10, !dbg !13262
  store i32 %98, i32* %lpm_policy111, align 4, !dbg !13263
  br label %if.end112, !dbg !13260

if.end112:                                        ; preds = %if.then109, %land.lhs.true106, %fail
  %101 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13264
  %tobool113 = icmp ne %struct.ata_device* %101, null, !dbg !13264
  br i1 %tobool113, label %lor.lhs.false114, label %if.then116, !dbg !13266

lor.lhs.false114:                                 ; preds = %if.end112
  %102 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !13267
  %tries = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %102, i32 0, i32 1, !dbg !13268
  %103 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13269
  %devno = getelementptr inbounds %struct.ata_device, %struct.ata_device* %103, i32 0, i32 1, !dbg !13270
  %104 = load i32, i32* %devno, align 8, !dbg !13270
  %idxprom = zext i32 %104 to i64, !dbg !13267
  %arrayidx = getelementptr [2 x i32], [2 x i32]* %tries, i64 0, i64 %idxprom, !dbg !13267
  %105 = load i32, i32* %arrayidx, align 4, !dbg !13267
  %cmp115 = icmp sle i32 %105, 2, !dbg !13271
  br i1 %cmp115, label %if.then116, label %if.end119, !dbg !13272

if.then116:                                       ; preds = %lor.lhs.false114, %if.end112
  %106 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13273
  call void (%struct.ata_link*, i8*, i8*, ...) @ata_link_printk(%struct.ata_link* %106, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.197, i64 0, i64 0)) #7, !dbg !13273
  %107 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13275
  %flags117 = getelementptr inbounds %struct.ata_link, %struct.ata_link* %107, i32 0, i32 5, !dbg !13276
  %108 = load i32, i32* %flags117, align 16, !dbg !13277
  %or118 = or i32 %108, 256, !dbg !13277
  store i32 %or118, i32* %flags117, align 16, !dbg !13277
  br label %if.end119, !dbg !13278

if.end119:                                        ; preds = %if.then116, %lor.lhs.false114
  %109 = load %struct.ata_device**, %struct.ata_device*** %r_failed_dev.addr, align 8, !dbg !13279
  %tobool120 = icmp ne %struct.ata_device** %109, null, !dbg !13279
  br i1 %tobool120, label %if.then121, label %if.end122, !dbg !13281

if.then121:                                       ; preds = %if.end119
  %110 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13282
  %111 = load %struct.ata_device**, %struct.ata_device*** %r_failed_dev.addr, align 8, !dbg !13283
  store %struct.ata_device* %110, %struct.ata_device** %111, align 8, !dbg !13284
  br label %if.end122, !dbg !13285

if.end122:                                        ; preds = %if.then121, %if.end119
  %112 = load i32, i32* %rc, align 4, !dbg !13286
  store i32 %112, i32* %retval, align 4, !dbg !13287
  br label %return, !dbg !13287

return:                                           ; preds = %if.end122, %for.end101, %if.then62, %if.then
  %113 = load i32, i32* %retval, align 4, !dbg !13288
  ret i32 %113, !dbg !13288
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_eh_handle_dev_fail(%struct.ata_device* %dev, i32 %err) #0 !dbg !13289 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ata_device*, align 8
  %err.addr = alloca i32, align 4
  %ehc = alloca %struct.ata_eh_context*, align 8
  %__UNIQUE_ID___x335 = alloca i32, align 4
  %__UNIQUE_ID___y336 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !13292, metadata !DIExpression()), !dbg !13293
  store i32 %err, i32* %err.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !13294, metadata !DIExpression()), !dbg !13295
  call void @llvm.dbg.declare(metadata %struct.ata_eh_context** %ehc, metadata !13296, metadata !DIExpression()), !dbg !13297
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13298
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 0, !dbg !13299
  %1 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !13299
  %eh_context = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 12, !dbg !13300
  store %struct.ata_eh_context* %eh_context, %struct.ata_eh_context** %ehc, align 8, !dbg !13297
  %2 = load i32, i32* %err.addr, align 4, !dbg !13301
  %cmp = icmp ne i32 %2, -11, !dbg !13303
  br i1 %cmp, label %if.then, label %if.end, !dbg !13304

if.then:                                          ; preds = %entry
  %3 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !13305
  %tries = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %3, i32 0, i32 1, !dbg !13306
  %4 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13307
  %devno = getelementptr inbounds %struct.ata_device, %struct.ata_device* %4, i32 0, i32 1, !dbg !13308
  %5 = load i32, i32* %devno, align 8, !dbg !13308
  %idxprom = zext i32 %5 to i64, !dbg !13305
  %arrayidx = getelementptr [2 x i32], [2 x i32]* %tries, i64 0, i64 %idxprom, !dbg !13305
  %6 = load i32, i32* %arrayidx, align 4, !dbg !13309
  %dec = add i32 %6, -1, !dbg !13309
  store i32 %dec, i32* %arrayidx, align 4, !dbg !13309
  br label %if.end, !dbg !13305

if.end:                                           ; preds = %if.then, %entry
  %7 = load i32, i32* %err.addr, align 4, !dbg !13310
  switch i32 %7, label %sw.epilog [
    i32 -19, label %sw.bb
    i32 -22, label %sw.bb2
    i32 -5, label %sw.bb12
  ], !dbg !13311

sw.bb:                                            ; preds = %if.end
  %8 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13312
  %devno1 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %8, i32 0, i32 1, !dbg !13314
  %9 = load i32, i32* %devno1, align 8, !dbg !13314
  %shl = shl i32 1, %9, !dbg !13315
  %10 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !13316
  %i = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %10, i32 0, i32 0, !dbg !13317
  %probe_mask = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i, i32 0, i32 6, !dbg !13318
  %11 = load i32, i32* %probe_mask, align 8, !dbg !13319
  %or = or i32 %11, %shl, !dbg !13319
  store i32 %or, i32* %probe_mask, align 8, !dbg !13319
  br label %sw.bb2, !dbg !13316

sw.bb2:                                           ; preds = %if.end, %sw.bb
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x335, metadata !13320, metadata !DIExpression()), !dbg !13322
  %12 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !13322
  %tries3 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %12, i32 0, i32 1, !dbg !13322
  %13 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13322
  %devno4 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %13, i32 0, i32 1, !dbg !13322
  %14 = load i32, i32* %devno4, align 8, !dbg !13322
  %idxprom5 = zext i32 %14 to i64, !dbg !13322
  %arrayidx6 = getelementptr [2 x i32], [2 x i32]* %tries3, i64 0, i64 %idxprom5, !dbg !13322
  %15 = load i32, i32* %arrayidx6, align 4, !dbg !13322
  store i32 %15, i32* %__UNIQUE_ID___x335, align 4, !dbg !13322
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y336, metadata !13323, metadata !DIExpression()), !dbg !13322
  store i32 1, i32* %__UNIQUE_ID___y336, align 4, !dbg !13322
  %16 = load i32, i32* %__UNIQUE_ID___x335, align 4, !dbg !13322
  %17 = load i32, i32* %__UNIQUE_ID___y336, align 4, !dbg !13322
  %cmp7 = icmp slt i32 %16, %17, !dbg !13322
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !13322

cond.true:                                        ; preds = %sw.bb2
  %18 = load i32, i32* %__UNIQUE_ID___x335, align 4, !dbg !13322
  br label %cond.end, !dbg !13322

cond.false:                                       ; preds = %sw.bb2
  %19 = load i32, i32* %__UNIQUE_ID___y336, align 4, !dbg !13322
  br label %cond.end, !dbg !13322

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %18, %cond.true ], [ %19, %cond.false ], !dbg !13322
  store i32 %cond, i32* %tmp, align 4, !dbg !13322
  %20 = load i32, i32* %tmp, align 4, !dbg !13322
  %21 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !13324
  %tries8 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %21, i32 0, i32 1, !dbg !13325
  %22 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13326
  %devno9 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %22, i32 0, i32 1, !dbg !13327
  %23 = load i32, i32* %devno9, align 8, !dbg !13327
  %idxprom10 = zext i32 %23 to i64, !dbg !13324
  %arrayidx11 = getelementptr [2 x i32], [2 x i32]* %tries8, i64 0, i64 %idxprom10, !dbg !13324
  store i32 %20, i32* %arrayidx11, align 4, !dbg !13328
  br label %sw.bb12, !dbg !13324

sw.bb12:                                          ; preds = %if.end, %cond.end
  %24 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !13329
  %tries13 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %24, i32 0, i32 1, !dbg !13331
  %25 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13332
  %devno14 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %25, i32 0, i32 1, !dbg !13333
  %26 = load i32, i32* %devno14, align 8, !dbg !13333
  %idxprom15 = zext i32 %26 to i64, !dbg !13329
  %arrayidx16 = getelementptr [2 x i32], [2 x i32]* %tries13, i64 0, i64 %idxprom15, !dbg !13329
  %27 = load i32, i32* %arrayidx16, align 4, !dbg !13329
  %cmp17 = icmp eq i32 %27, 1, !dbg !13334
  br i1 %cmp17, label %if.then18, label %if.end25, !dbg !13335

if.then18:                                        ; preds = %sw.bb12
  %28 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13336
  %call = call %struct.ata_link* @ata_dev_phys_link(%struct.ata_device* %28) #7, !dbg !13338
  %call19 = call i32 @sata_down_spd_limit(%struct.ata_link* %call, i32 0) #7, !dbg !13339
  %29 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13340
  %pio_mode = getelementptr inbounds %struct.ata_device, %struct.ata_device* %29, i32 0, i32 13, !dbg !13342
  %30 = load i8, i8* %pio_mode, align 16, !dbg !13342
  %conv = zext i8 %30 to i32, !dbg !13340
  %cmp20 = icmp sgt i32 %conv, 8, !dbg !13343
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !13344

if.then22:                                        ; preds = %if.then18
  %31 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13345
  %call23 = call i32 @ata_down_xfermask_limit(%struct.ata_device* %31, i32 0) #7, !dbg !13346
  br label %if.end24, !dbg !13346

if.end24:                                         ; preds = %if.then22, %if.then18
  br label %if.end25, !dbg !13347

if.end25:                                         ; preds = %if.end24, %sw.bb12
  br label %sw.epilog, !dbg !13348

sw.epilog:                                        ; preds = %if.end25, %if.end
  %32 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13349
  %call26 = call i32 @ata_dev_enabled(%struct.ata_device* %32) #7, !dbg !13351
  %tobool = icmp ne i32 %call26, 0, !dbg !13351
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !13352

land.lhs.true:                                    ; preds = %sw.epilog
  %33 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !13353
  %tries27 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %33, i32 0, i32 1, !dbg !13354
  %34 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13355
  %devno28 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %34, i32 0, i32 1, !dbg !13356
  %35 = load i32, i32* %devno28, align 8, !dbg !13356
  %idxprom29 = zext i32 %35 to i64, !dbg !13353
  %arrayidx30 = getelementptr [2 x i32], [2 x i32]* %tries27, i64 0, i64 %idxprom29, !dbg !13353
  %36 = load i32, i32* %arrayidx30, align 4, !dbg !13353
  %tobool31 = icmp ne i32 %36, 0, !dbg !13353
  br i1 %tobool31, label %if.else, label %if.then32, !dbg !13357

if.then32:                                        ; preds = %land.lhs.true
  %37 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13358
  call void @ata_dev_disable(%struct.ata_device* %37) #7, !dbg !13360
  %38 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13361
  %call33 = call %struct.ata_link* @ata_dev_phys_link(%struct.ata_device* %38) #7, !dbg !13363
  %call34 = call zeroext i1 @ata_phys_link_offline(%struct.ata_link* %call33) #7, !dbg !13364
  br i1 %call34, label %if.then35, label %if.end36, !dbg !13365

if.then35:                                        ; preds = %if.then32
  %39 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13366
  call void @ata_eh_detach_dev(%struct.ata_device* %39) #7, !dbg !13367
  br label %if.end36, !dbg !13367

if.end36:                                         ; preds = %if.then35, %if.then32
  %40 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13368
  %call37 = call i32 @ata_eh_schedule_probe(%struct.ata_device* %40) #7, !dbg !13370
  %tobool38 = icmp ne i32 %call37, 0, !dbg !13370
  br i1 %tobool38, label %if.then39, label %if.end47, !dbg !13371

if.then39:                                        ; preds = %if.end36
  %41 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !13372
  %tries40 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %41, i32 0, i32 1, !dbg !13374
  %42 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13375
  %devno41 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %42, i32 0, i32 1, !dbg !13376
  %43 = load i32, i32* %devno41, align 8, !dbg !13376
  %idxprom42 = zext i32 %43 to i64, !dbg !13372
  %arrayidx43 = getelementptr [2 x i32], [2 x i32]* %tries40, i64 0, i64 %idxprom42, !dbg !13372
  store i32 3, i32* %arrayidx43, align 4, !dbg !13377
  %44 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !13378
  %cmd_timeout_idx = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %44, i32 0, i32 2, !dbg !13379
  %45 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13380
  %devno44 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %45, i32 0, i32 1, !dbg !13381
  %46 = load i32, i32* %devno44, align 8, !dbg !13381
  %idxprom45 = zext i32 %46 to i64, !dbg !13378
  %arrayidx46 = getelementptr [2 x [6 x i32]], [2 x [6 x i32]]* %cmd_timeout_idx, i64 0, i64 %idxprom45, !dbg !13378
  %arraydecay = getelementptr inbounds [6 x i32], [6 x i32]* %arrayidx46, i64 0, i64 0, !dbg !13382
  %47 = bitcast i32* %arraydecay to i8*, !dbg !13382
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false), !dbg !13382
  br label %if.end47, !dbg !13383

if.end47:                                         ; preds = %if.then39, %if.end36
  store i32 1, i32* %retval, align 4, !dbg !13384
  br label %return, !dbg !13384

if.else:                                          ; preds = %land.lhs.true, %sw.epilog
  %48 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !13385
  %i48 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %48, i32 0, i32 0, !dbg !13387
  %action = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i48, i32 0, i32 3, !dbg !13388
  %49 = load i32, i32* %action, align 8, !dbg !13389
  %or49 = or i32 %49, 6, !dbg !13389
  store i32 %or49, i32* %action, align 8, !dbg !13389
  store i32 0, i32* %retval, align 4, !dbg !13390
  br label %return, !dbg !13390

return:                                           ; preds = %if.else, %if.end47
  %50 = load i32, i32* %retval, align 4, !dbg !13391
  ret i32 %50, !dbg !13391
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_do_eh(%struct.ata_port* %ap, i32 (%struct.ata_link*, i64)* %prereset, i32 (%struct.ata_link*, i32*, i64)* %softreset, i32 (%struct.ata_link*, i32*, i64)* %hardreset, void (%struct.ata_link*, i32*)* %postreset) #0 !dbg !13392 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %prereset.addr = alloca i32 (%struct.ata_link*, i64)*, align 8
  %softreset.addr = alloca i32 (%struct.ata_link*, i32*, i64)*, align 8
  %hardreset.addr = alloca i32 (%struct.ata_link*, i32*, i64)*, align 8
  %postreset.addr = alloca void (%struct.ata_link*, i32*)*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %rc = alloca i32, align 4
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !13395, metadata !DIExpression()), !dbg !13396
  store i32 (%struct.ata_link*, i64)* %prereset, i32 (%struct.ata_link*, i64)** %prereset.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.ata_link*, i64)** %prereset.addr, metadata !13397, metadata !DIExpression()), !dbg !13398
  store i32 (%struct.ata_link*, i32*, i64)* %softreset, i32 (%struct.ata_link*, i32*, i64)** %softreset.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.ata_link*, i32*, i64)** %softreset.addr, metadata !13399, metadata !DIExpression()), !dbg !13400
  store i32 (%struct.ata_link*, i32*, i64)* %hardreset, i32 (%struct.ata_link*, i32*, i64)** %hardreset.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.ata_link*, i32*, i64)** %hardreset.addr, metadata !13401, metadata !DIExpression()), !dbg !13402
  store void (%struct.ata_link*, i32*)* %postreset, void (%struct.ata_link*, i32*)** %postreset.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.ata_link*, i32*)** %postreset.addr, metadata !13403, metadata !DIExpression()), !dbg !13404
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !13405, metadata !DIExpression()), !dbg !13406
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !13407, metadata !DIExpression()), !dbg !13408
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13409
  call void @ata_eh_autopsy(%struct.ata_port* %0) #7, !dbg !13410
  %1 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13411
  call void @ata_eh_report(%struct.ata_port* %1) #7, !dbg !13412
  %2 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13413
  %3 = load i32 (%struct.ata_link*, i64)*, i32 (%struct.ata_link*, i64)** %prereset.addr, align 8, !dbg !13414
  %4 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %softreset.addr, align 8, !dbg !13415
  %5 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %hardreset.addr, align 8, !dbg !13416
  %6 = load void (%struct.ata_link*, i32*)*, void (%struct.ata_link*, i32*)** %postreset.addr, align 8, !dbg !13417
  %call = call i32 @ata_eh_recover(%struct.ata_port* %2, i32 (%struct.ata_link*, i64)* %3, i32 (%struct.ata_link*, i32*, i64)* %4, i32 (%struct.ata_link*, i32*, i64)* %5, void (%struct.ata_link*, i32*)* %6, %struct.ata_link** null) #7, !dbg !13418
  store i32 %call, i32* %rc, align 4, !dbg !13419
  %7 = load i32, i32* %rc, align 4, !dbg !13420
  %tobool = icmp ne i32 %7, 0, !dbg !13420
  br i1 %tobool, label %if.then, label %if.end, !dbg !13422

if.then:                                          ; preds = %entry
  %8 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13423
  %link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %8, i32 0, i32 25, !dbg !13423
  %call1 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* null, %struct.ata_link* %link, i32 2) #7, !dbg !13423
  store %struct.ata_device* %call1, %struct.ata_device** %dev, align 8, !dbg !13423
  br label %for.cond, !dbg !13423

for.cond:                                         ; preds = %for.inc, %if.then
  %9 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13426
  %tobool2 = icmp ne %struct.ata_device* %9, null, !dbg !13423
  br i1 %tobool2, label %for.body, label %for.end, !dbg !13423

for.body:                                         ; preds = %for.cond
  %10 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13428
  call void @ata_dev_disable(%struct.ata_device* %10) #7, !dbg !13429
  br label %for.inc, !dbg !13429

for.inc:                                          ; preds = %for.body
  %11 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13426
  %12 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13426
  %link3 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %12, i32 0, i32 25, !dbg !13426
  %call4 = call %struct.ata_device* @ata_dev_next(%struct.ata_device* %11, %struct.ata_link* %link3, i32 2) #7, !dbg !13426
  store %struct.ata_device* %call4, %struct.ata_device** %dev, align 8, !dbg !13426
  br label %for.cond, !dbg !13426, !llvm.loop !13430

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !13432

if.end:                                           ; preds = %for.end, %entry
  %13 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13433
  call void @ata_eh_finish(%struct.ata_port* %13) #7, !dbg !13434
  ret void, !dbg !13435
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ata_std_error_handler(%struct.ata_port* %ap) #0 !dbg !13436 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  %ops = alloca %struct.ata_port_operations*, align 8
  %hardreset = alloca i32 (%struct.ata_link*, i32*, i64)*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !13437, metadata !DIExpression()), !dbg !13438
  call void @llvm.dbg.declare(metadata %struct.ata_port_operations** %ops, metadata !13439, metadata !DIExpression()), !dbg !13440
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13441
  %ops1 = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 1, !dbg !13442
  %1 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops1, align 8, !dbg !13442
  store %struct.ata_port_operations* %1, %struct.ata_port_operations** %ops, align 8, !dbg !13440
  call void @llvm.dbg.declare(metadata i32 (%struct.ata_link*, i32*, i64)** %hardreset, metadata !13443, metadata !DIExpression()), !dbg !13444
  %2 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !13445
  %hardreset2 = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %2, i32 0, i32 16, !dbg !13446
  %3 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %hardreset2, align 8, !dbg !13446
  store i32 (%struct.ata_link*, i32*, i64)* %3, i32 (%struct.ata_link*, i32*, i64)** %hardreset, align 8, !dbg !13444
  %4 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %hardreset, align 8, !dbg !13447
  %cmp = icmp eq i32 (%struct.ata_link*, i32*, i64)* %4, @sata_std_hardreset, !dbg !13449
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !13450

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13451
  %link = getelementptr inbounds %struct.ata_port, %struct.ata_port* %5, i32 0, i32 25, !dbg !13452
  %call = call i32 @sata_scr_valid(%struct.ata_link* %link) #7, !dbg !13453
  %tobool = icmp ne i32 %call, 0, !dbg !13453
  br i1 %tobool, label %if.end, label %if.then, !dbg !13454

if.then:                                          ; preds = %land.lhs.true
  store i32 (%struct.ata_link*, i32*, i64)* null, i32 (%struct.ata_link*, i32*, i64)** %hardreset, align 8, !dbg !13455
  br label %if.end, !dbg !13456

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %6 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !13457
  %7 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !13458
  %prereset = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %7, i32 0, i32 14, !dbg !13459
  %8 = load i32 (%struct.ata_link*, i64)*, i32 (%struct.ata_link*, i64)** %prereset, align 8, !dbg !13459
  %9 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !13460
  %softreset = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %9, i32 0, i32 15, !dbg !13461
  %10 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %softreset, align 8, !dbg !13461
  %11 = load i32 (%struct.ata_link*, i32*, i64)*, i32 (%struct.ata_link*, i32*, i64)** %hardreset, align 8, !dbg !13462
  %12 = load %struct.ata_port_operations*, %struct.ata_port_operations** %ops, align 8, !dbg !13463
  %postreset = getelementptr inbounds %struct.ata_port_operations, %struct.ata_port_operations* %12, i32 0, i32 17, !dbg !13464
  %13 = load void (%struct.ata_link*, i32*)*, void (%struct.ata_link*, i32*)** %postreset, align 8, !dbg !13464
  call void @ata_do_eh(%struct.ata_port* %6, i32 (%struct.ata_link*, i64)* %8, i32 (%struct.ata_link*, i32*, i64)* %10, i32 (%struct.ata_link*, i32*, i64)* %11, void (%struct.ata_link*, i32*)* %13) #7, !dbg !13465
  ret void, !dbg !13466
}

; Function Attrs: noredzone
declare dso_local i32 @sata_std_hardreset(%struct.ata_link*, i32*, i64) #3

; Function Attrs: noredzone
declare dso_local i32 @sata_scr_valid(%struct.ata_link*) #3

; Function Attrs: noredzone
declare dso_local i32 @vscnprintf(i8*, i64, i8*, %struct.__va_list_tag*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !13467 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !13468, metadata !DIExpression()), !dbg !13470
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !13471, metadata !DIExpression()), !dbg !13470
  %0 = load i64, i64* %__edi, align 8, !dbg !13470
  store i64 %0, i64* %__edi, align 8, !dbg !13470
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !13472, metadata !DIExpression()), !dbg !13470
  %1 = load i64, i64* %__esi, align 8, !dbg !13470
  store i64 %1, i64* %__esi, align 8, !dbg !13470
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !13473, metadata !DIExpression()), !dbg !13470
  %2 = load i64, i64* %__edx, align 8, !dbg !13470
  store i64 %2, i64* %__edx, align 8, !dbg !13470
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !13474, metadata !DIExpression()), !dbg !13470
  %3 = load i64, i64* %__ecx, align 8, !dbg !13470
  store i64 %3, i64* %__ecx, align 8, !dbg !13470
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !13475, metadata !DIExpression()), !dbg !13470
  %4 = load i64, i64* %__eax, align 8, !dbg !13470
  store i64 %4, i64* %__eax, align 8, !dbg !13470
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !13470
  %6 = call i64 @llvm.read_register.i64(metadata !6925), !dbg !13476
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #2, !dbg !13476, !srcloc !13479
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !13476
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !13476
  store i64 %asmresult, i64* %__eax, align 8, !dbg !13476
  call void @llvm.write_register.i64(metadata !6925, i64 %asmresult1), !dbg !13476
  %8 = load i64, i64* %__eax, align 8, !dbg !13476
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !13480, metadata !DIExpression()), !dbg !13482
  store i64 -1, i64* %__mask, align 8, !dbg !13482
  %9 = load i64, i64* %__mask, align 8, !dbg !13482
  store i64 %9, i64* %tmp, align 8, !dbg !13482
  %10 = load i64, i64* %tmp, align 8, !dbg !13482
  %and = and i64 %8, %10, !dbg !13476
  store i64 %and, i64* %__ret, align 8, !dbg !13476
  %11 = load i64, i64* %__ret, align 8, !dbg !13470
  store i64 %11, i64* %tmp2, align 8, !dbg !13483
  %12 = load i64, i64* %tmp2, align 8, !dbg !13470
  ret i64 %12, !dbg !13484
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !13485 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !13486, metadata !DIExpression()), !dbg !13488
  %0 = load i64, i64* %__edi, align 8, !dbg !13488
  store i64 %0, i64* %__edi, align 8, !dbg !13488
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !13489, metadata !DIExpression()), !dbg !13488
  %1 = load i64, i64* %__esi, align 8, !dbg !13488
  store i64 %1, i64* %__esi, align 8, !dbg !13488
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !13490, metadata !DIExpression()), !dbg !13488
  %2 = load i64, i64* %__edx, align 8, !dbg !13488
  store i64 %2, i64* %__edx, align 8, !dbg !13488
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !13491, metadata !DIExpression()), !dbg !13488
  %3 = load i64, i64* %__ecx, align 8, !dbg !13488
  store i64 %3, i64* %__ecx, align 8, !dbg !13488
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !13492, metadata !DIExpression()), !dbg !13488
  %4 = load i64, i64* %__eax, align 8, !dbg !13488
  store i64 %4, i64* %__eax, align 8, !dbg !13488
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !13488
  %6 = call i64 @llvm.read_register.i64(metadata !6925), !dbg !13488
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #2, !dbg !13488, !srcloc !13493
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !13488
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !13488
  store i64 %asmresult, i64* %__eax, align 8, !dbg !13488
  call void @llvm.write_register.i64(metadata !6925, i64 %asmresult1), !dbg !13488
  ret void, !dbg !13494
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #5

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_splice(%struct.list_head* %list, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !13495 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  %first = alloca %struct.list_head*, align 8
  %last = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !13498, metadata !DIExpression()), !dbg !13499
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !13500, metadata !DIExpression()), !dbg !13501
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !13502, metadata !DIExpression()), !dbg !13503
  call void @llvm.dbg.declare(metadata %struct.list_head** %first, metadata !13504, metadata !DIExpression()), !dbg !13505
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !13506
  %next1 = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !13507
  %1 = load %struct.list_head*, %struct.list_head** %next1, align 8, !dbg !13507
  store %struct.list_head* %1, %struct.list_head** %first, align 8, !dbg !13505
  call void @llvm.dbg.declare(metadata %struct.list_head** %last, metadata !13508, metadata !DIExpression()), !dbg !13509
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !13510
  %prev2 = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !13511
  %3 = load %struct.list_head*, %struct.list_head** %prev2, align 8, !dbg !13511
  store %struct.list_head* %3, %struct.list_head** %last, align 8, !dbg !13509
  %4 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13512
  %5 = load %struct.list_head*, %struct.list_head** %first, align 8, !dbg !13513
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %5, i32 0, i32 1, !dbg !13514
  store %struct.list_head* %4, %struct.list_head** %prev3, align 8, !dbg !13515
  %6 = load %struct.list_head*, %struct.list_head** %first, align 8, !dbg !13516
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13517
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %7, i32 0, i32 0, !dbg !13518
  store %struct.list_head* %6, %struct.list_head** %next4, align 8, !dbg !13519
  %8 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13520
  %9 = load %struct.list_head*, %struct.list_head** %last, align 8, !dbg !13521
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %9, i32 0, i32 0, !dbg !13522
  store %struct.list_head* %8, %struct.list_head** %next5, align 8, !dbg !13523
  %10 = load %struct.list_head*, %struct.list_head** %last, align 8, !dbg !13524
  %11 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13525
  %prev6 = getelementptr inbounds %struct.list_head, %struct.list_head* %11, i32 0, i32 1, !dbg !13526
  store %struct.list_head* %10, %struct.list_head** %prev6, align 8, !dbg !13527
  ret void, !dbg !13528
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !13529 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !13532, metadata !DIExpression()), !dbg !13533
  br label %do.body, !dbg !13534

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !13535

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !13537

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !13535

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !13539
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !13539
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !13539
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !13539
  br label %do.end3, !dbg !13539

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !13535

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !13541
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !13542
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !13543
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !13544
  ret void, !dbg !13545
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !13546 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !13549, metadata !DIExpression()), !dbg !13550
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !13551, metadata !DIExpression()), !dbg !13553
  %0 = load i64, i64* %__edi, align 8, !dbg !13553
  store i64 %0, i64* %__edi, align 8, !dbg !13553
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !13554, metadata !DIExpression()), !dbg !13553
  %1 = load i64, i64* %__esi, align 8, !dbg !13553
  store i64 %1, i64* %__esi, align 8, !dbg !13553
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !13555, metadata !DIExpression()), !dbg !13553
  %2 = load i64, i64* %__edx, align 8, !dbg !13553
  store i64 %2, i64* %__edx, align 8, !dbg !13553
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !13556, metadata !DIExpression()), !dbg !13553
  %3 = load i64, i64* %__ecx, align 8, !dbg !13553
  store i64 %3, i64* %__ecx, align 8, !dbg !13553
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !13557, metadata !DIExpression()), !dbg !13553
  %4 = load i64, i64* %__eax, align 8, !dbg !13553
  store i64 %4, i64* %__eax, align 8, !dbg !13553
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !13553
  %6 = call i64 @llvm.read_register.i64(metadata !6925), !dbg !13553
  %7 = load i64, i64* %f.addr, align 8, !dbg !13553
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #2, !dbg !13553, !srcloc !13558
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !13553
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !13553
  store i64 %asmresult, i64* %__eax, align 8, !dbg !13553
  call void @llvm.write_register.i64(metadata !6925, i64 %asmresult1), !dbg !13553
  ret void, !dbg !13559
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_tag_valid(i32 %tag) #0 !dbg !13560 {
entry:
  %tag.addr = alloca i32, align 4
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !13563, metadata !DIExpression()), !dbg !13564
  %0 = load i32, i32* %tag.addr, align 4, !dbg !13565
  %cmp = icmp ult i32 %0, 32, !dbg !13566
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !13567

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %tag.addr, align 4, !dbg !13568
  %call = call zeroext i1 @ata_tag_internal(i32 %1) #7, !dbg !13569
  br label %lor.end, !dbg !13567

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %call, %lor.rhs ]
  ret i1 %2, !dbg !13570
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_tag_internal(i32 %tag) #0 !dbg !13571 {
entry:
  %tag.addr = alloca i32, align 4
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !13572, metadata !DIExpression()), !dbg !13573
  %0 = load i32, i32* %tag.addr, align 4, !dbg !13574
  %cmp = icmp eq i32 %0, 32, !dbg !13575
  ret i1 %cmp, !dbg !13576
}

; Function Attrs: noredzone
declare dso_local i32 @sata_scr_write(%struct.ata_link*, i32, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %wq, %struct.delayed_work* %dwork, i64 %delay) #0 !dbg !13577 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %dwork.addr = alloca %struct.delayed_work*, align 8
  %delay.addr = alloca i64, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !13580, metadata !DIExpression()), !dbg !13581
  store %struct.delayed_work* %dwork, %struct.delayed_work** %dwork.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.delayed_work** %dwork.addr, metadata !13582, metadata !DIExpression()), !dbg !13583
  store i64 %delay, i64* %delay.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %delay.addr, metadata !13584, metadata !DIExpression()), !dbg !13585
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !13586
  %1 = load %struct.delayed_work*, %struct.delayed_work** %dwork.addr, align 8, !dbg !13587
  %2 = load i64, i64* %delay.addr, align 8, !dbg !13588
  %call = call zeroext i1 @queue_delayed_work_on(i32 1, %struct.workqueue_struct* %0, %struct.delayed_work* %1, i64 %2) #7, !dbg !13589
  ret i1 %call, !dbg !13590
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_delayed_work_on(i32, %struct.workqueue_struct*, %struct.delayed_work*, i64) #3

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #0 !dbg !13591 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !13592, metadata !DIExpression()), !dbg !13593
  %0 = load i32, i32* %m.addr, align 4, !dbg !13594
  %conv = zext i32 %0 to i64, !dbg !13594
  %add = add i64 %conv, 4, !dbg !13595
  %sub = sub i64 %add, 1, !dbg !13596
  %div = sdiv i64 %sub, 4, !dbg !13597
  ret i64 %div, !dbg !13598
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #3

; Function Attrs: noredzone
declare dso_local void @ata_qc_complete(%struct.ata_queued_cmd*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_eh_scsidone(%struct.scsi_cmnd* %scmd) #0 !dbg !13599 {
entry:
  %scmd.addr = alloca %struct.scsi_cmnd*, align 8
  store %struct.scsi_cmnd* %scmd, %struct.scsi_cmnd** %scmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %scmd.addr, metadata !13600, metadata !DIExpression()), !dbg !13601
  ret void, !dbg !13602
}

; Function Attrs: noredzone
declare dso_local void @__ata_qc_complete(%struct.ata_queued_cmd*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_ering_clear_cb(%struct.ata_ering_entry* %ent, i8* %void_arg) #0 !dbg !13603 {
entry:
  %ent.addr = alloca %struct.ata_ering_entry*, align 8
  %void_arg.addr = alloca i8*, align 8
  store %struct.ata_ering_entry* %ent, %struct.ata_ering_entry** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_ering_entry** %ent.addr, metadata !13604, metadata !DIExpression()), !dbg !13605
  store i8* %void_arg, i8** %void_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %void_arg.addr, metadata !13606, metadata !DIExpression()), !dbg !13607
  %0 = load %struct.ata_ering_entry*, %struct.ata_ering_entry** %ent.addr, align 8, !dbg !13608
  %eflags = getelementptr inbounds %struct.ata_ering_entry, %struct.ata_ering_entry* %0, i32 0, i32 0, !dbg !13609
  %1 = load i32, i32* %eflags, align 8, !dbg !13610
  %or = or i32 %1, -2147483648, !dbg !13610
  store i32 %or, i32* %eflags, align 8, !dbg !13610
  ret i32 0, !dbg !13611
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_eh_analyze_serror(%struct.ata_link* %link) #0 !dbg !13612 {
entry:
  %link.addr = alloca %struct.ata_link*, align 8
  %ehc = alloca %struct.ata_eh_context*, align 8
  %serror = alloca i32, align 4
  %err_mask = alloca i32, align 4
  %action = alloca i32, align 4
  %hotplug_mask = alloca i32, align 4
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !13613, metadata !DIExpression()), !dbg !13614
  call void @llvm.dbg.declare(metadata %struct.ata_eh_context** %ehc, metadata !13615, metadata !DIExpression()), !dbg !13616
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13617
  %eh_context = getelementptr inbounds %struct.ata_link, %struct.ata_link* %0, i32 0, i32 12, !dbg !13618
  store %struct.ata_eh_context* %eh_context, %struct.ata_eh_context** %ehc, align 8, !dbg !13616
  call void @llvm.dbg.declare(metadata i32* %serror, metadata !13619, metadata !DIExpression()), !dbg !13620
  %1 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !13621
  %i = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %1, i32 0, i32 0, !dbg !13622
  %serror1 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i, i32 0, i32 1, !dbg !13623
  %2 = load i32, i32* %serror1, align 8, !dbg !13623
  store i32 %2, i32* %serror, align 4, !dbg !13620
  call void @llvm.dbg.declare(metadata i32* %err_mask, metadata !13624, metadata !DIExpression()), !dbg !13625
  store i32 0, i32* %err_mask, align 4, !dbg !13625
  call void @llvm.dbg.declare(metadata i32* %action, metadata !13626, metadata !DIExpression()), !dbg !13627
  store i32 0, i32* %action, align 4, !dbg !13627
  call void @llvm.dbg.declare(metadata i32* %hotplug_mask, metadata !13628, metadata !DIExpression()), !dbg !13629
  %3 = load i32, i32* %serror, align 4, !dbg !13630
  %and = and i32 %3, 768, !dbg !13632
  %tobool = icmp ne i32 %and, 0, !dbg !13632
  br i1 %tobool, label %if.then, label %if.end, !dbg !13633

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %err_mask, align 4, !dbg !13634
  %or = or i32 %4, 16, !dbg !13634
  store i32 %or, i32* %err_mask, align 4, !dbg !13634
  %5 = load i32, i32* %action, align 4, !dbg !13636
  %or2 = or i32 %5, 6, !dbg !13636
  store i32 %or2, i32* %action, align 4, !dbg !13636
  br label %if.end, !dbg !13637

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %serror, align 4, !dbg !13638
  %and3 = and i32 %6, 1024, !dbg !13640
  %tobool4 = icmp ne i32 %and3, 0, !dbg !13640
  br i1 %tobool4, label %if.then5, label %if.end8, !dbg !13641

if.then5:                                         ; preds = %if.end
  %7 = load i32, i32* %err_mask, align 4, !dbg !13642
  %or6 = or i32 %7, 2, !dbg !13642
  store i32 %or6, i32* %err_mask, align 4, !dbg !13642
  %8 = load i32, i32* %action, align 4, !dbg !13644
  %or7 = or i32 %8, 6, !dbg !13644
  store i32 %or7, i32* %action, align 4, !dbg !13644
  br label %if.end8, !dbg !13645

if.end8:                                          ; preds = %if.then5, %if.end
  %9 = load i32, i32* %serror, align 4, !dbg !13646
  %and9 = and i32 %9, 2048, !dbg !13648
  %tobool10 = icmp ne i32 %and9, 0, !dbg !13648
  br i1 %tobool10, label %if.then11, label %if.end14, !dbg !13649

if.then11:                                        ; preds = %if.end8
  %10 = load i32, i32* %err_mask, align 4, !dbg !13650
  %or12 = or i32 %10, 64, !dbg !13650
  store i32 %or12, i32* %err_mask, align 4, !dbg !13650
  %11 = load i32, i32* %action, align 4, !dbg !13652
  %or13 = or i32 %11, 6, !dbg !13652
  store i32 %or13, i32* %action, align 4, !dbg !13652
  br label %if.end14, !dbg !13653

if.end14:                                         ; preds = %if.then11, %if.end8
  %12 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13654
  %lpm_policy = getelementptr inbounds %struct.ata_link, %struct.ata_link* %12, i32 0, i32 10, !dbg !13656
  %13 = load i32, i32* %lpm_policy, align 4, !dbg !13656
  %cmp = icmp ugt i32 %13, 1, !dbg !13657
  br i1 %cmp, label %if.then15, label %if.else, !dbg !13658

if.then15:                                        ; preds = %if.end14
  store i32 0, i32* %hotplug_mask, align 4, !dbg !13659
  br label %if.end21, !dbg !13660

if.else:                                          ; preds = %if.end14
  %14 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13661
  %flags = getelementptr inbounds %struct.ata_link, %struct.ata_link* %14, i32 0, i32 5, !dbg !13663
  %15 = load i32, i32* %flags, align 16, !dbg !13663
  %and16 = and i32 %15, 64, !dbg !13664
  %tobool17 = icmp ne i32 %and16, 0, !dbg !13664
  br i1 %tobool17, label %lor.lhs.false, label %if.then18, !dbg !13665

lor.lhs.false:                                    ; preds = %if.else
  %16 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13666
  %call = call zeroext i1 @ata_is_host_link(%struct.ata_link* %16) #7, !dbg !13667
  br i1 %call, label %if.then18, label %if.else19, !dbg !13668

if.then18:                                        ; preds = %lor.lhs.false, %if.else
  store i32 67174400, i32* %hotplug_mask, align 4, !dbg !13669
  br label %if.end20, !dbg !13670

if.else19:                                        ; preds = %lor.lhs.false
  store i32 65536, i32* %hotplug_mask, align 4, !dbg !13671
  br label %if.end20

if.end20:                                         ; preds = %if.else19, %if.then18
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then15
  %17 = load i32, i32* %serror, align 4, !dbg !13672
  %18 = load i32, i32* %hotplug_mask, align 4, !dbg !13674
  %and22 = and i32 %17, %18, !dbg !13675
  %tobool23 = icmp ne i32 %and22, 0, !dbg !13675
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !13676

if.then24:                                        ; preds = %if.end21
  %19 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !13677
  %i25 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %19, i32 0, i32 0, !dbg !13678
  call void @ata_ehi_hotplugged(%struct.ata_eh_info* %i25) #7, !dbg !13679
  br label %if.end26, !dbg !13679

if.end26:                                         ; preds = %if.then24, %if.end21
  %20 = load i32, i32* %err_mask, align 4, !dbg !13680
  %21 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !13681
  %i27 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %21, i32 0, i32 0, !dbg !13682
  %err_mask28 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i27, i32 0, i32 2, !dbg !13683
  %22 = load i32, i32* %err_mask28, align 4, !dbg !13684
  %or29 = or i32 %22, %20, !dbg !13684
  store i32 %or29, i32* %err_mask28, align 4, !dbg !13684
  %23 = load i32, i32* %action, align 4, !dbg !13685
  %24 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !13686
  %i30 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %24, i32 0, i32 0, !dbg !13687
  %action31 = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i30, i32 0, i32 3, !dbg !13688
  %25 = load i32, i32* %action31, align 8, !dbg !13689
  %or32 = or i32 %25, %23, !dbg !13689
  store i32 %or32, i32* %action31, align 8, !dbg !13689
  ret void, !dbg !13690
}

; Function Attrs: noredzone
declare dso_local void @ata_eh_analyze_ncq_error(%struct.ata_link*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_eh_analyze_tf(%struct.ata_queued_cmd* %qc, %struct.ata_taskfile* %tf) #0 !dbg !13691 {
entry:
  %retval = alloca i32, align 4
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %tf.addr = alloca %struct.ata_taskfile*, align 8
  %tmp = alloca i32, align 4
  %action = alloca i32, align 4
  %stat = alloca i8, align 1
  %err = alloca i8, align 1
  %ret = alloca i32, align 4
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !13694, metadata !DIExpression()), !dbg !13695
  store %struct.ata_taskfile* %tf, %struct.ata_taskfile** %tf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile** %tf.addr, metadata !13696, metadata !DIExpression()), !dbg !13697
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !13698, metadata !DIExpression()), !dbg !13699
  call void @llvm.dbg.declare(metadata i32* %action, metadata !13700, metadata !DIExpression()), !dbg !13701
  store i32 0, i32* %action, align 4, !dbg !13701
  call void @llvm.dbg.declare(metadata i8* %stat, metadata !13702, metadata !DIExpression()), !dbg !13703
  %0 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !13704
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %0, i32 0, i32 14, !dbg !13705
  %1 = load i8, i8* %command, align 1, !dbg !13705
  store i8 %1, i8* %stat, align 1, !dbg !13703
  call void @llvm.dbg.declare(metadata i8* %err, metadata !13706, metadata !DIExpression()), !dbg !13707
  %2 = load %struct.ata_taskfile*, %struct.ata_taskfile** %tf.addr, align 8, !dbg !13708
  %feature = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %2, i32 0, i32 8, !dbg !13709
  %3 = load i8, i8* %feature, align 1, !dbg !13709
  store i8 %3, i8* %err, align 1, !dbg !13707
  %4 = load i8, i8* %stat, align 1, !dbg !13710
  %conv = zext i8 %4 to i32, !dbg !13710
  %and = and i32 %conv, 200, !dbg !13712
  %cmp = icmp ne i32 %and, 64, !dbg !13713
  br i1 %cmp, label %if.then, label %if.end, !dbg !13714

if.then:                                          ; preds = %entry
  %5 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13715
  %err_mask = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %5, i32 0, i32 20, !dbg !13717
  %6 = load i32, i32* %err_mask, align 4, !dbg !13718
  %or = or i32 %6, 2, !dbg !13718
  store i32 %or, i32* %err_mask, align 4, !dbg !13718
  store i32 6, i32* %retval, align 4, !dbg !13719
  br label %return, !dbg !13719

if.end:                                           ; preds = %entry
  %7 = load i8, i8* %stat, align 1, !dbg !13720
  %conv2 = zext i8 %7 to i32, !dbg !13720
  %and3 = and i32 %conv2, 33, !dbg !13722
  %tobool = icmp ne i32 %and3, 0, !dbg !13722
  br i1 %tobool, label %if.then4, label %if.else, !dbg !13723

if.then4:                                         ; preds = %if.end
  %8 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13724
  %err_mask5 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %8, i32 0, i32 20, !dbg !13726
  %9 = load i32, i32* %err_mask5, align 4, !dbg !13727
  %or6 = or i32 %9, 1, !dbg !13727
  store i32 %or6, i32* %err_mask5, align 4, !dbg !13727
  %10 = load i8, i8* %stat, align 1, !dbg !13728
  %conv7 = zext i8 %10 to i32, !dbg !13728
  %and8 = and i32 %conv7, 32, !dbg !13730
  %tobool9 = icmp ne i32 %and8, 0, !dbg !13730
  br i1 %tobool9, label %if.then10, label %if.end14, !dbg !13731

if.then10:                                        ; preds = %if.then4
  %11 = load i8, i8* %stat, align 1, !dbg !13732
  %conv11 = zext i8 %11 to i32, !dbg !13732
  %and12 = and i32 %conv11, -3, !dbg !13732
  %conv13 = trunc i32 %and12 to i8, !dbg !13732
  store i8 %conv13, i8* %stat, align 1, !dbg !13732
  br label %if.end14, !dbg !13733

if.end14:                                         ; preds = %if.then10, %if.then4
  br label %if.end15, !dbg !13734

if.else:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !13735
  br label %return, !dbg !13735

if.end15:                                         ; preds = %if.end14
  %12 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13737
  %dev = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %12, i32 0, i32 1, !dbg !13738
  %13 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !13738
  %class = getelementptr inbounds %struct.ata_device, %struct.ata_device* %13, i32 0, i32 11, !dbg !13739
  %14 = load i32, i32* %class, align 64, !dbg !13739
  switch i32 %14, label %sw.epilog [
    i32 9, label %sw.bb
    i32 1, label %sw.bb21
    i32 3, label %sw.bb43
  ], !dbg !13740

sw.bb:                                            ; preds = %if.end15
  %15 = load i8, i8* %stat, align 1, !dbg !13741
  %conv16 = zext i8 %15 to i32, !dbg !13741
  %and17 = and i32 %conv16, 2, !dbg !13744
  %tobool18 = icmp ne i32 %and17, 0, !dbg !13744
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !13745

if.then19:                                        ; preds = %sw.bb
  %16 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13746
  %17 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13747
  %scsicmd = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %17, i32 0, i32 2, !dbg !13748
  %18 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd, align 8, !dbg !13748
  call void @ata_eh_request_sense(%struct.ata_queued_cmd* %16, %struct.scsi_cmnd* %18) #7, !dbg !13749
  br label %if.end20, !dbg !13749

if.end20:                                         ; preds = %if.then19, %sw.bb
  br label %sw.bb21, !dbg !13750

sw.bb21:                                          ; preds = %if.end15, %if.end20
  %19 = load i8, i8* %err, align 1, !dbg !13751
  %conv22 = zext i8 %19 to i32, !dbg !13751
  %and23 = and i32 %conv22, 128, !dbg !13753
  %tobool24 = icmp ne i32 %and23, 0, !dbg !13753
  br i1 %tobool24, label %if.then25, label %if.end28, !dbg !13754

if.then25:                                        ; preds = %sw.bb21
  %20 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13755
  %err_mask26 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %20, i32 0, i32 20, !dbg !13756
  %21 = load i32, i32* %err_mask26, align 4, !dbg !13757
  %or27 = or i32 %21, 16, !dbg !13757
  store i32 %or27, i32* %err_mask26, align 4, !dbg !13757
  br label %if.end28, !dbg !13755

if.end28:                                         ; preds = %if.then25, %sw.bb21
  %22 = load i8, i8* %err, align 1, !dbg !13758
  %conv29 = zext i8 %22 to i32, !dbg !13758
  %and30 = and i32 %conv29, 65, !dbg !13760
  %tobool31 = icmp ne i32 %and30, 0, !dbg !13760
  br i1 %tobool31, label %if.then32, label %if.end35, !dbg !13761

if.then32:                                        ; preds = %if.end28
  %23 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13762
  %err_mask33 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %23, i32 0, i32 20, !dbg !13763
  %24 = load i32, i32* %err_mask33, align 4, !dbg !13764
  %or34 = or i32 %24, 8, !dbg !13764
  store i32 %or34, i32* %err_mask33, align 4, !dbg !13764
  br label %if.end35, !dbg !13762

if.end35:                                         ; preds = %if.then32, %if.end28
  %25 = load i8, i8* %err, align 1, !dbg !13765
  %conv36 = zext i8 %25 to i32, !dbg !13765
  %and37 = and i32 %conv36, 16, !dbg !13767
  %tobool38 = icmp ne i32 %and37, 0, !dbg !13767
  br i1 %tobool38, label %if.then39, label %if.end42, !dbg !13768

if.then39:                                        ; preds = %if.end35
  %26 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13769
  %err_mask40 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %26, i32 0, i32 20, !dbg !13770
  %27 = load i32, i32* %err_mask40, align 4, !dbg !13771
  %or41 = or i32 %27, 128, !dbg !13771
  store i32 %or41, i32* %err_mask40, align 4, !dbg !13771
  br label %if.end42, !dbg !13769

if.end42:                                         ; preds = %if.then39, %if.end35
  br label %sw.epilog, !dbg !13772

sw.bb43:                                          ; preds = %if.end15
  %28 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13773
  %ap = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %28, i32 0, i32 0, !dbg !13775
  %29 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !13775
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %29, i32 0, i32 4, !dbg !13776
  %30 = load i32, i32* %pflags, align 32, !dbg !13776
  %and44 = and i32 %30, 4, !dbg !13777
  %tobool45 = icmp ne i32 %and44, 0, !dbg !13777
  br i1 %tobool45, label %if.end59, label %if.then46, !dbg !13778

if.then46:                                        ; preds = %sw.bb43
  %31 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13779
  %dev47 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %31, i32 0, i32 1, !dbg !13781
  %32 = load %struct.ata_device*, %struct.ata_device** %dev47, align 8, !dbg !13781
  %33 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13782
  %scsicmd48 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %33, i32 0, i32 2, !dbg !13783
  %34 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd48, align 8, !dbg !13783
  %sense_buffer = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %34, i32 0, i32 20, !dbg !13784
  %35 = load i8*, i8** %sense_buffer, align 8, !dbg !13784
  %36 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13785
  %result_tf = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %36, i32 0, i32 21, !dbg !13786
  %feature49 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %result_tf, i32 0, i32 8, !dbg !13787
  %37 = load i8, i8* %feature49, align 1, !dbg !13787
  %conv50 = zext i8 %37 to i32, !dbg !13785
  %shr = ashr i32 %conv50, 4, !dbg !13788
  %conv51 = trunc i32 %shr to i8, !dbg !13785
  %call = call i32 @atapi_eh_request_sense(%struct.ata_device* %32, i8* %35, i8 zeroext %conv51) #7, !dbg !13789
  store i32 %call, i32* %tmp, align 4, !dbg !13790
  %38 = load i32, i32* %tmp, align 4, !dbg !13791
  %tobool52 = icmp ne i32 %38, 0, !dbg !13791
  br i1 %tobool52, label %if.else55, label %if.then53, !dbg !13793

if.then53:                                        ; preds = %if.then46
  %39 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13794
  %flags = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %39, i32 0, i32 6, !dbg !13795
  %40 = load i64, i64* %flags, align 8, !dbg !13796
  %or54 = or i64 %40, 131072, !dbg !13796
  store i64 %or54, i64* %flags, align 8, !dbg !13796
  br label %if.end58, !dbg !13794

if.else55:                                        ; preds = %if.then46
  %41 = load i32, i32* %tmp, align 4, !dbg !13797
  %42 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13798
  %err_mask56 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %42, i32 0, i32 20, !dbg !13799
  %43 = load i32, i32* %err_mask56, align 4, !dbg !13800
  %or57 = or i32 %43, %41, !dbg !13800
  store i32 %or57, i32* %err_mask56, align 4, !dbg !13800
  br label %if.end58

if.end58:                                         ; preds = %if.else55, %if.then53
  br label %if.end59, !dbg !13801

if.end59:                                         ; preds = %if.end58, %sw.bb43
  br label %sw.epilog, !dbg !13802

sw.epilog:                                        ; preds = %if.end59, %if.end15, %if.end42
  %44 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13803
  %flags60 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %44, i32 0, i32 6, !dbg !13805
  %45 = load i64, i64* %flags60, align 8, !dbg !13805
  %and61 = and i64 %45, 131072, !dbg !13806
  %tobool62 = icmp ne i64 %and61, 0, !dbg !13806
  br i1 %tobool62, label %if.then63, label %if.end83, !dbg !13807

if.then63:                                        ; preds = %sw.epilog
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13808, metadata !DIExpression()), !dbg !13810
  %46 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13811
  %scsicmd64 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %46, i32 0, i32 2, !dbg !13812
  %47 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd64, align 8, !dbg !13812
  %call65 = call i32 @scsi_check_sense(%struct.scsi_cmnd* %47) #7, !dbg !13813
  store i32 %call65, i32* %ret, align 4, !dbg !13810
  %48 = load i32, i32* %ret, align 4, !dbg !13814
  %cmp66 = icmp eq i32 %48, 8193, !dbg !13816
  br i1 %cmp66, label %if.then70, label %lor.lhs.false, !dbg !13817

lor.lhs.false:                                    ; preds = %if.then63
  %49 = load i32, i32* %ret, align 4, !dbg !13818
  %cmp68 = icmp eq i32 %49, 8198, !dbg !13819
  br i1 %cmp68, label %if.then70, label %if.else75, !dbg !13820

if.then70:                                        ; preds = %lor.lhs.false, %if.then63
  %50 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13821
  %flags71 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %50, i32 0, i32 6, !dbg !13823
  %51 = load i64, i64* %flags71, align 8, !dbg !13824
  %or72 = or i64 %51, 128, !dbg !13824
  store i64 %or72, i64* %flags71, align 8, !dbg !13824
  %52 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13825
  %err_mask73 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %52, i32 0, i32 20, !dbg !13826
  %53 = load i32, i32* %err_mask73, align 4, !dbg !13827
  %or74 = or i32 %53, 256, !dbg !13827
  store i32 %or74, i32* %err_mask73, align 4, !dbg !13827
  br label %if.end82, !dbg !13828

if.else75:                                        ; preds = %lor.lhs.false
  %54 = load i32, i32* %ret, align 4, !dbg !13829
  %cmp76 = icmp ne i32 %54, 8194, !dbg !13831
  br i1 %cmp76, label %if.then78, label %if.end81, !dbg !13832

if.then78:                                        ; preds = %if.else75
  %55 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13833
  %err_mask79 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %55, i32 0, i32 20, !dbg !13835
  %56 = load i32, i32* %err_mask79, align 4, !dbg !13836
  %or80 = or i32 %56, 2, !dbg !13836
  store i32 %or80, i32* %err_mask79, align 4, !dbg !13836
  br label %if.end81, !dbg !13837

if.end81:                                         ; preds = %if.then78, %if.else75
  br label %if.end82

if.end82:                                         ; preds = %if.end81, %if.then70
  br label %if.end83, !dbg !13838

if.end83:                                         ; preds = %if.end82, %sw.epilog
  %57 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13839
  %err_mask84 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %57, i32 0, i32 20, !dbg !13841
  %58 = load i32, i32* %err_mask84, align 4, !dbg !13841
  %and85 = and i32 %58, 22, !dbg !13842
  %tobool86 = icmp ne i32 %and85, 0, !dbg !13842
  br i1 %tobool86, label %if.then87, label %if.end89, !dbg !13843

if.then87:                                        ; preds = %if.end83
  %59 = load i32, i32* %action, align 4, !dbg !13844
  %or88 = or i32 %59, 6, !dbg !13844
  store i32 %or88, i32* %action, align 4, !dbg !13844
  br label %if.end89, !dbg !13845

if.end89:                                         ; preds = %if.then87, %if.end83
  %60 = load i32, i32* %action, align 4, !dbg !13846
  store i32 %60, i32* %retval, align 4, !dbg !13847
  br label %return, !dbg !13847

return:                                           ; preds = %if.end89, %if.else, %if.then
  %61 = load i32, i32* %retval, align 4, !dbg !13848
  ret i32 %61, !dbg !13848
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_eh_worth_retry(%struct.ata_queued_cmd* %qc) #0 !dbg !13849 {
entry:
  %retval = alloca i32, align 4
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !13850, metadata !DIExpression()), !dbg !13851
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13852
  %err_mask = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 20, !dbg !13854
  %1 = load i32, i32* %err_mask, align 4, !dbg !13854
  %and = and i32 %1, 8, !dbg !13855
  %tobool = icmp ne i32 %and, 0, !dbg !13855
  br i1 %tobool, label %if.then, label %if.end, !dbg !13856

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13857
  br label %return, !dbg !13857

if.end:                                           ; preds = %entry
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13858
  %flags = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %2, i32 0, i32 6, !dbg !13860
  %3 = load i64, i64* %flags, align 8, !dbg !13860
  %and1 = and i64 %3, 8, !dbg !13861
  %tobool2 = icmp ne i64 %and1, 0, !dbg !13861
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !13862

if.then3:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !13863
  br label %return, !dbg !13863

if.end4:                                          ; preds = %if.end
  %4 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13864
  %err_mask5 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %4, i32 0, i32 20, !dbg !13866
  %5 = load i32, i32* %err_mask5, align 4, !dbg !13866
  %and6 = and i32 %5, 128, !dbg !13867
  %tobool7 = icmp ne i32 %and6, 0, !dbg !13867
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !13868

if.then8:                                         ; preds = %if.end4
  store i32 0, i32* %retval, align 4, !dbg !13869
  br label %return, !dbg !13869

if.end9:                                          ; preds = %if.end4
  %6 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13870
  %err_mask10 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %6, i32 0, i32 20, !dbg !13871
  %7 = load i32, i32* %err_mask10, align 4, !dbg !13871
  %cmp = icmp ne i32 %7, 1, !dbg !13872
  %conv = zext i1 %cmp to i32, !dbg !13872
  store i32 %conv, i32* %retval, align 4, !dbg !13873
  br label %return, !dbg !13873

return:                                           ; preds = %if.end9, %if.then8, %if.then3, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !13874
  ret i32 %8, !dbg !13874
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_ata_eh_link_autopsy_qc(%struct.ata_queued_cmd* %qc) #0 !dbg !13875 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !13877, metadata !DIExpression()), !dbg !13878
  ret void, !dbg !13878
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_eh_quiet(%struct.ata_queued_cmd* %qc) #0 !dbg !13879 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !13880, metadata !DIExpression()), !dbg !13881
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13882
  %scsicmd = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 2, !dbg !13884
  %1 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd, align 8, !dbg !13884
  %tobool = icmp ne %struct.scsi_cmnd* %1, null, !dbg !13882
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !13885

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13886
  %scsicmd1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %2, i32 0, i32 2, !dbg !13887
  %3 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %scsicmd1, align 8, !dbg !13887
  %request = getelementptr inbounds %struct.scsi_cmnd, %struct.scsi_cmnd* %3, i32 0, i32 19, !dbg !13888
  %4 = load %struct.request*, %struct.request** %request, align 8, !dbg !13888
  %rq_flags = getelementptr inbounds %struct.request, %struct.request* %4, i32 0, i32 4, !dbg !13889
  %5 = load i32, i32* %rq_flags, align 4, !dbg !13889
  %and = and i32 %5, 2048, !dbg !13890
  %tobool2 = icmp ne i32 %and, 0, !dbg !13890
  br i1 %tobool2, label %if.then, label %if.end, !dbg !13891

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13892
  %flags = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %6, i32 0, i32 6, !dbg !13893
  %7 = load i64, i64* %flags, align 8, !dbg !13894
  %or = or i64 %7, 64, !dbg !13894
  store i64 %or, i64* %flags, align 8, !dbg !13894
  br label %if.end, !dbg !13892

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %8 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !13895
  %flags3 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %8, i32 0, i32 6, !dbg !13896
  %9 = load i64, i64* %flags3, align 8, !dbg !13896
  %and4 = and i64 %9, 64, !dbg !13897
  %tobool5 = icmp ne i64 %and4, 0, !dbg !13895
  ret i1 %tobool5, !dbg !13898
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_link_max_devices(%struct.ata_link* %link) #0 !dbg !13899 {
entry:
  %retval = alloca i32, align 4
  %link.addr = alloca %struct.ata_link*, align 8
  store %struct.ata_link* %link, %struct.ata_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link.addr, metadata !13902, metadata !DIExpression()), !dbg !13903
  %0 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13904
  %call = call zeroext i1 @ata_is_host_link(%struct.ata_link* %0) #7, !dbg !13906
  br i1 %call, label %land.lhs.true, label %if.end, !dbg !13907

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ata_link*, %struct.ata_link** %link.addr, align 8, !dbg !13908
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 0, !dbg !13909
  %2 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !13909
  %flags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %2, i32 0, i32 3, !dbg !13910
  %3 = load i64, i64* %flags, align 8, !dbg !13910
  %and = and i64 %3, 1, !dbg !13911
  %tobool = icmp ne i64 %and, 0, !dbg !13911
  br i1 %tobool, label %if.then, label %if.end, !dbg !13912

if.then:                                          ; preds = %land.lhs.true
  store i32 2, i32* %retval, align 4, !dbg !13913
  br label %return, !dbg !13913

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 1, i32* %retval, align 4, !dbg !13914
  br label %return, !dbg !13914

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !13915
  ret i32 %4, !dbg !13915
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_eh_speed_down(%struct.ata_device* %dev, i32 %eflags, i32 %err_mask) #0 !dbg !6900 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ata_device*, align 8
  %eflags.addr = alloca i32, align 4
  %err_mask.addr = alloca i32, align 4
  %link = alloca %struct.ata_link*, align 8
  %xfer_ok = alloca i32, align 4
  %verdict = alloca i32, align 4
  %action = alloca i32, align 4
  %sel = alloca i32, align 4
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !13916, metadata !DIExpression()), !dbg !13917
  store i32 %eflags, i32* %eflags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %eflags.addr, metadata !13918, metadata !DIExpression()), !dbg !13919
  store i32 %err_mask, i32* %err_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err_mask.addr, metadata !13920, metadata !DIExpression()), !dbg !13921
  call void @llvm.dbg.declare(metadata %struct.ata_link** %link, metadata !13922, metadata !DIExpression()), !dbg !13923
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13924
  %call = call %struct.ata_link* @ata_dev_phys_link(%struct.ata_device* %0) #7, !dbg !13925
  store %struct.ata_link* %call, %struct.ata_link** %link, align 8, !dbg !13923
  call void @llvm.dbg.declare(metadata i32* %xfer_ok, metadata !13926, metadata !DIExpression()), !dbg !13927
  store i32 0, i32* %xfer_ok, align 4, !dbg !13927
  call void @llvm.dbg.declare(metadata i32* %verdict, metadata !13928, metadata !DIExpression()), !dbg !13929
  call void @llvm.dbg.declare(metadata i32* %action, metadata !13930, metadata !DIExpression()), !dbg !13931
  store i32 0, i32* %action, align 4, !dbg !13931
  %1 = load i32, i32* %eflags.addr, align 4, !dbg !13932
  %2 = load i32, i32* %err_mask.addr, align 4, !dbg !13934
  %call1 = call i32 @ata_eh_categorize_error(i32 %1, i32 %2, i32* %xfer_ok) #7, !dbg !13935
  %cmp = icmp eq i32 %call1, 0, !dbg !13936
  br i1 %cmp, label %if.then, label %if.end, !dbg !13937

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13938
  br label %return, !dbg !13938

if.end:                                           ; preds = %entry
  %3 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13939
  %ering = getelementptr inbounds %struct.ata_device, %struct.ata_device* %3, i32 0, i32 36, !dbg !13940
  %4 = load i32, i32* %eflags.addr, align 4, !dbg !13941
  %5 = load i32, i32* %err_mask.addr, align 4, !dbg !13942
  call void @ata_ering_record(%struct.ata_ering* %ering, i32 %4, i32 %5) #7, !dbg !13943
  %6 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13944
  %call2 = call i32 @ata_eh_speed_down_verdict(%struct.ata_device* %6) #7, !dbg !13945
  store i32 %call2, i32* %verdict, align 4, !dbg !13946
  %7 = load i32, i32* %verdict, align 4, !dbg !13947
  %and = and i32 %7, 1, !dbg !13949
  %tobool = icmp ne i32 %and, 0, !dbg !13949
  br i1 %tobool, label %land.lhs.true, label %if.end7, !dbg !13950

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13951
  %flags = getelementptr inbounds %struct.ata_device, %struct.ata_device* %8, i32 0, i32 3, !dbg !13952
  %9 = load i64, i64* %flags, align 16, !dbg !13952
  %and3 = and i64 %9, 12296, !dbg !13953
  %cmp4 = icmp eq i64 %and3, 8, !dbg !13954
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !13955

if.then5:                                         ; preds = %land.lhs.true
  %10 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13956
  %flags6 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %10, i32 0, i32 3, !dbg !13958
  %11 = load i64, i64* %flags6, align 16, !dbg !13959
  %or = or i64 %11, 8192, !dbg !13959
  store i64 %or, i64* %flags6, align 16, !dbg !13959
  %12 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13960
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.129, i64 0, i64 0)) #7, !dbg !13960
  br label %done, !dbg !13961

if.end7:                                          ; preds = %land.lhs.true, %if.end
  %13 = load i32, i32* %verdict, align 4, !dbg !13962
  %and8 = and i32 %13, 2, !dbg !13964
  %tobool9 = icmp ne i32 %and8, 0, !dbg !13964
  br i1 %tobool9, label %if.then10, label %if.end32, !dbg !13965

if.then10:                                        ; preds = %if.end7
  %14 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !13966
  %call11 = call i32 @sata_down_spd_limit(%struct.ata_link* %14, i32 0) #7, !dbg !13969
  %cmp12 = icmp eq i32 %call11, 0, !dbg !13970
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !13971

if.then13:                                        ; preds = %if.then10
  %15 = load i32, i32* %action, align 4, !dbg !13972
  %or14 = or i32 %15, 6, !dbg !13972
  store i32 %or14, i32* %action, align 4, !dbg !13972
  br label %done, !dbg !13974

if.end15:                                         ; preds = %if.then10
  %16 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13975
  %spdn_cnt = getelementptr inbounds %struct.ata_device, %struct.ata_device* %16, i32 0, i32 35, !dbg !13977
  %17 = load i32, i32* %spdn_cnt, align 4, !dbg !13977
  %cmp16 = icmp slt i32 %17, 2, !dbg !13978
  br i1 %cmp16, label %if.then17, label %if.end31, !dbg !13979

if.then17:                                        ; preds = %if.end15
  call void @llvm.dbg.declare(metadata i32* %sel, metadata !13980, metadata !DIExpression()), !dbg !13982
  %18 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13983
  %xfer_shift = getelementptr inbounds %struct.ata_device, %struct.ata_device* %18, i32 0, i32 16, !dbg !13985
  %19 = load i32, i32* %xfer_shift, align 4, !dbg !13985
  %cmp18 = icmp ne i32 %19, 0, !dbg !13986
  br i1 %cmp18, label %if.then19, label %if.else, !dbg !13987

if.then19:                                        ; preds = %if.then17
  %20 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13988
  %spdn_cnt20 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %20, i32 0, i32 35, !dbg !13989
  %21 = load i32, i32* %spdn_cnt20, align 4, !dbg !13989
  %idxprom = sext i32 %21 to i64, !dbg !13990
  %arrayidx = getelementptr [2 x i32], [2 x i32]* @ata_eh_speed_down.dma_dnxfer_sel, i64 0, i64 %idxprom, !dbg !13990
  %22 = load i32, i32* %arrayidx, align 4, !dbg !13990
  store i32 %22, i32* %sel, align 4, !dbg !13991
  br label %if.end24, !dbg !13992

if.else:                                          ; preds = %if.then17
  %23 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13993
  %spdn_cnt21 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %23, i32 0, i32 35, !dbg !13994
  %24 = load i32, i32* %spdn_cnt21, align 4, !dbg !13994
  %idxprom22 = sext i32 %24 to i64, !dbg !13995
  %arrayidx23 = getelementptr [2 x i32], [2 x i32]* @ata_eh_speed_down.pio_dnxfer_sel, i64 0, i64 %idxprom22, !dbg !13995
  %25 = load i32, i32* %arrayidx23, align 4, !dbg !13995
  store i32 %25, i32* %sel, align 4, !dbg !13996
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then19
  %26 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !13997
  %spdn_cnt25 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %26, i32 0, i32 35, !dbg !13998
  %27 = load i32, i32* %spdn_cnt25, align 4, !dbg !13999
  %inc = add i32 %27, 1, !dbg !13999
  store i32 %inc, i32* %spdn_cnt25, align 4, !dbg !13999
  %28 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14000
  %29 = load i32, i32* %sel, align 4, !dbg !14002
  %call26 = call i32 @ata_down_xfermask_limit(%struct.ata_device* %28, i32 %29) #7, !dbg !14003
  %cmp27 = icmp eq i32 %call26, 0, !dbg !14004
  br i1 %cmp27, label %if.then28, label %if.end30, !dbg !14005

if.then28:                                        ; preds = %if.end24
  %30 = load i32, i32* %action, align 4, !dbg !14006
  %or29 = or i32 %30, 6, !dbg !14006
  store i32 %or29, i32* %action, align 4, !dbg !14006
  br label %done, !dbg !14008

if.end30:                                         ; preds = %if.end24
  br label %if.end31, !dbg !14009

if.end31:                                         ; preds = %if.end30, %if.end15
  br label %if.end32, !dbg !14010

if.end32:                                         ; preds = %if.end31, %if.end7
  %31 = load i32, i32* %verdict, align 4, !dbg !14011
  %and33 = and i32 %31, 4, !dbg !14013
  %tobool34 = icmp ne i32 %and33, 0, !dbg !14013
  br i1 %tobool34, label %land.lhs.true35, label %if.end51, !dbg !14014

land.lhs.true35:                                  ; preds = %if.end32
  %32 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14015
  %spdn_cnt36 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %32, i32 0, i32 35, !dbg !14016
  %33 = load i32, i32* %spdn_cnt36, align 4, !dbg !14016
  %cmp37 = icmp sge i32 %33, 2, !dbg !14017
  br i1 %cmp37, label %land.lhs.true38, label %if.end51, !dbg !14018

land.lhs.true38:                                  ; preds = %land.lhs.true35
  %34 = load %struct.ata_link*, %struct.ata_link** %link, align 8, !dbg !14019
  %ap = getelementptr inbounds %struct.ata_link, %struct.ata_link* %34, i32 0, i32 0, !dbg !14020
  %35 = load %struct.ata_port*, %struct.ata_port** %ap, align 64, !dbg !14020
  %cbl = getelementptr inbounds %struct.ata_port, %struct.ata_port* %35, i32 0, i32 18, !dbg !14021
  %36 = load i32, i32* %cbl, align 4, !dbg !14021
  %cmp39 = icmp ne i32 %36, 6, !dbg !14022
  br i1 %cmp39, label %land.lhs.true41, label %lor.lhs.false, !dbg !14023

lor.lhs.false:                                    ; preds = %land.lhs.true38
  %37 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14024
  %class = getelementptr inbounds %struct.ata_device, %struct.ata_device* %37, i32 0, i32 11, !dbg !14025
  %38 = load i32, i32* %class, align 64, !dbg !14025
  %cmp40 = icmp eq i32 %38, 3, !dbg !14026
  br i1 %cmp40, label %land.lhs.true41, label %if.end51, !dbg !14027

land.lhs.true41:                                  ; preds = %lor.lhs.false, %land.lhs.true38
  %39 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14028
  %xfer_shift42 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %39, i32 0, i32 16, !dbg !14029
  %40 = load i32, i32* %xfer_shift42, align 4, !dbg !14029
  %cmp43 = icmp ne i32 %40, 0, !dbg !14030
  br i1 %cmp43, label %if.then44, label %if.end51, !dbg !14031

if.then44:                                        ; preds = %land.lhs.true41
  %41 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14032
  %call45 = call i32 @ata_down_xfermask_limit(%struct.ata_device* %41, i32 3) #7, !dbg !14035
  %cmp46 = icmp eq i32 %call45, 0, !dbg !14036
  br i1 %cmp46, label %if.then47, label %if.end50, !dbg !14037

if.then47:                                        ; preds = %if.then44
  %42 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14038
  %spdn_cnt48 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %42, i32 0, i32 35, !dbg !14040
  store i32 0, i32* %spdn_cnt48, align 4, !dbg !14041
  %43 = load i32, i32* %action, align 4, !dbg !14042
  %or49 = or i32 %43, 6, !dbg !14042
  store i32 %or49, i32* %action, align 4, !dbg !14042
  br label %done, !dbg !14043

if.end50:                                         ; preds = %if.then44
  br label %if.end51, !dbg !14044

if.end51:                                         ; preds = %if.end50, %land.lhs.true41, %lor.lhs.false, %land.lhs.true35, %if.end32
  store i32 0, i32* %retval, align 4, !dbg !14045
  br label %return, !dbg !14045

done:                                             ; preds = %if.then47, %if.then28, %if.then13, %if.then5
  call void @llvm.dbg.label(metadata !14046), !dbg !14047
  %44 = load i32, i32* %verdict, align 4, !dbg !14048
  %and52 = and i32 %44, 8, !dbg !14050
  %tobool53 = icmp ne i32 %and52, 0, !dbg !14050
  br i1 %tobool53, label %if.end56, label %if.then54, !dbg !14051

if.then54:                                        ; preds = %done
  %45 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14052
  %ering55 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %45, i32 0, i32 36, !dbg !14053
  call void @ata_ering_clear(%struct.ata_ering* %ering55) #7, !dbg !14054
  br label %if.end56, !dbg !14054

if.end56:                                         ; preds = %if.then54, %done
  %46 = load i32, i32* %action, align 4, !dbg !14055
  store i32 %46, i32* %retval, align 4, !dbg !14056
  br label %return, !dbg !14056

return:                                           ; preds = %if.end56, %if.end51, %if.then
  %47 = load i32, i32* %retval, align 4, !dbg !14057
  ret i32 %47, !dbg !14057
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_ata_eh_link_autopsy(%struct.ata_device* %dev, i32 %eh_action, i32 %eh_err_mask) #0 !dbg !14058 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  %eh_action.addr = alloca i32, align 4
  %eh_err_mask.addr = alloca i32, align 4
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !14061, metadata !DIExpression()), !dbg !14062
  store i32 %eh_action, i32* %eh_action.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %eh_action.addr, metadata !14063, metadata !DIExpression()), !dbg !14062
  store i32 %eh_err_mask, i32* %eh_err_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %eh_err_mask.addr, metadata !14064, metadata !DIExpression()), !dbg !14062
  ret void, !dbg !14062
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_ehi_hotplugged(%struct.ata_eh_info* %ehi) #0 !dbg !14065 {
entry:
  %ehi.addr = alloca %struct.ata_eh_info*, align 8
  store %struct.ata_eh_info* %ehi, %struct.ata_eh_info** %ehi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_eh_info** %ehi.addr, metadata !14066, metadata !DIExpression()), !dbg !14067
  %0 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi.addr, align 8, !dbg !14068
  %probe_mask = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %0, i32 0, i32 6, !dbg !14069
  %1 = load i32, i32* %probe_mask, align 8, !dbg !14070
  %or = or i32 %1, 3, !dbg !14070
  store i32 %or, i32* %probe_mask, align 8, !dbg !14070
  %2 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi.addr, align 8, !dbg !14071
  %flags = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %2, i32 0, i32 5, !dbg !14072
  %3 = load i32, i32* %flags, align 4, !dbg !14073
  %or1 = or i32 %3, 1, !dbg !14073
  store i32 %or1, i32* %flags, align 4, !dbg !14073
  %4 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi.addr, align 8, !dbg !14074
  %action = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %4, i32 0, i32 3, !dbg !14075
  %5 = load i32, i32* %action, align 8, !dbg !14076
  %or2 = or i32 %5, 14, !dbg !14076
  store i32 %or2, i32* %action, align 8, !dbg !14076
  %6 = load %struct.ata_eh_info*, %struct.ata_eh_info** %ehi.addr, align 8, !dbg !14077
  %err_mask = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %6, i32 0, i32 2, !dbg !14078
  %7 = load i32, i32* %err_mask, align 4, !dbg !14079
  %or3 = or i32 %7, 16, !dbg !14079
  store i32 %or3, i32* %err_mask, align 4, !dbg !14079
  ret void, !dbg !14080
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_eh_request_sense(%struct.ata_queued_cmd* %qc, %struct.scsi_cmnd* %cmd) #0 !dbg !14081 {
entry:
  %qc.addr = alloca %struct.ata_queued_cmd*, align 8
  %cmd.addr = alloca %struct.scsi_cmnd*, align 8
  %dev = alloca %struct.ata_device*, align 8
  %tf = alloca %struct.ata_taskfile, align 8
  %err_mask = alloca i32, align 4
  store %struct.ata_queued_cmd* %qc, %struct.ata_queued_cmd** %qc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_queued_cmd** %qc.addr, metadata !14084, metadata !DIExpression()), !dbg !14085
  store %struct.scsi_cmnd* %cmd, %struct.scsi_cmnd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scsi_cmnd** %cmd.addr, metadata !14086, metadata !DIExpression()), !dbg !14087
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev, metadata !14088, metadata !DIExpression()), !dbg !14089
  %0 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14090
  %dev1 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %0, i32 0, i32 1, !dbg !14091
  %1 = load %struct.ata_device*, %struct.ata_device** %dev1, align 8, !dbg !14091
  store %struct.ata_device* %1, %struct.ata_device** %dev, align 8, !dbg !14089
  call void @llvm.dbg.declare(metadata %struct.ata_taskfile* %tf, metadata !14092, metadata !DIExpression()), !dbg !14093
  call void @llvm.dbg.declare(metadata i32* %err_mask, metadata !14094, metadata !DIExpression()), !dbg !14095
  %2 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14096
  %ap = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %2, i32 0, i32 0, !dbg !14098
  %3 = load %struct.ata_port*, %struct.ata_port** %ap, align 8, !dbg !14098
  %pflags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %3, i32 0, i32 4, !dbg !14099
  %4 = load i32, i32* %pflags, align 32, !dbg !14099
  %and = and i32 %4, 4, !dbg !14100
  %tobool = icmp ne i32 %and, 0, !dbg !14100
  br i1 %tobool, label %if.then, label %if.end, !dbg !14101

if.then:                                          ; preds = %entry
  %5 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !14102
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.126, i64 0, i64 0)) #7, !dbg !14102
  br label %if.end22, !dbg !14104

if.end:                                           ; preds = %entry
  %6 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !14105
  %tobool2 = icmp ne %struct.scsi_cmnd* %6, null, !dbg !14105
  br i1 %tobool2, label %lor.lhs.false, label %if.then5, !dbg !14107

lor.lhs.false:                                    ; preds = %if.end
  %7 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14108
  %flags = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %7, i32 0, i32 6, !dbg !14109
  %8 = load i64, i64* %flags, align 8, !dbg !14109
  %and3 = and i64 %8, 131072, !dbg !14110
  %tobool4 = icmp ne i64 %and3, 0, !dbg !14110
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !14111

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  br label %if.end22, !dbg !14112

if.end6:                                          ; preds = %lor.lhs.false
  %9 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !14113
  %10 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %9, i32 0, i32 27, !dbg !14115
  %id = bitcast %union.anon.79* %10 to [256 x i16]*, !dbg !14115
  %arraydecay = getelementptr inbounds [256 x i16], [256 x i16]* %id, i64 0, i64 0, !dbg !14113
  %call = call zeroext i1 @ata_id_sense_reporting_enabled(i16* %arraydecay) #7, !dbg !14116
  br i1 %call, label %if.end9, label %if.then7, !dbg !14117

if.then7:                                         ; preds = %if.end6
  %11 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14118
  %dev8 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %11, i32 0, i32 1, !dbg !14118
  %12 = load %struct.ata_device*, %struct.ata_device** %dev8, align 8, !dbg !14118
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.127, i64 0, i64 0)) #7, !dbg !14118
  br label %if.end22, !dbg !14120

if.end9:                                          ; preds = %if.end6
  %13 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !14121
  call void @ata_tf_init(%struct.ata_device* %13, %struct.ata_taskfile* %tf) #7, !dbg !14122
  %flags10 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 0, !dbg !14123
  %14 = load i64, i64* %flags10, align 8, !dbg !14124
  %or = or i64 %14, 6, !dbg !14124
  store i64 %or, i64* %flags10, align 8, !dbg !14124
  %flags11 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 0, !dbg !14125
  %15 = load i64, i64* %flags11, align 8, !dbg !14126
  %or12 = or i64 %15, 17, !dbg !14126
  store i64 %or12, i64* %flags11, align 8, !dbg !14126
  %command = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 14, !dbg !14127
  store i8 11, i8* %command, align 1, !dbg !14128
  %protocol = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 1, !dbg !14129
  store i8 0, i8* %protocol, align 8, !dbg !14130
  %16 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !14131
  %call13 = call i32 @ata_exec_internal(%struct.ata_device* %16, %struct.ata_taskfile* %tf, i8* null, i32 3, i8* null, i32 0, i64 0) #7, !dbg !14132
  store i32 %call13, i32* %err_mask, align 4, !dbg !14133
  %command14 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 14, !dbg !14134
  %17 = load i8, i8* %command14, align 1, !dbg !14134
  %conv = zext i8 %17 to i32, !dbg !14136
  %and15 = and i32 %conv, 2, !dbg !14137
  %tobool16 = icmp ne i32 %and15, 0, !dbg !14137
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !14138

if.then17:                                        ; preds = %if.end9
  %18 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !14139
  %19 = load %struct.scsi_cmnd*, %struct.scsi_cmnd** %cmd.addr, align 8, !dbg !14141
  %lbah = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 12, !dbg !14142
  %20 = load i8, i8* %lbah, align 1, !dbg !14142
  %lbam = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 11, !dbg !14143
  %21 = load i8, i8* %lbam, align 2, !dbg !14143
  %lbal = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 10, !dbg !14144
  %22 = load i8, i8* %lbal, align 1, !dbg !14144
  call void @ata_scsi_set_sense(%struct.ata_device* %18, %struct.scsi_cmnd* %19, i8 zeroext %20, i8 zeroext %21, i8 zeroext %22) #7, !dbg !14145
  %23 = load %struct.ata_queued_cmd*, %struct.ata_queued_cmd** %qc.addr, align 8, !dbg !14146
  %flags18 = getelementptr inbounds %struct.ata_queued_cmd, %struct.ata_queued_cmd* %23, i32 0, i32 6, !dbg !14147
  %24 = load i64, i64* %flags18, align 8, !dbg !14148
  %or19 = or i64 %24, 131072, !dbg !14148
  store i64 %or19, i64* %flags18, align 8, !dbg !14148
  br label %if.end22, !dbg !14149

if.else:                                          ; preds = %if.end9
  %25 = load %struct.ata_device*, %struct.ata_device** %dev, align 8, !dbg !14150
  %command20 = getelementptr inbounds %struct.ata_taskfile, %struct.ata_taskfile* %tf, i32 0, i32 14, !dbg !14150
  %26 = load i8, i8* %command20, align 1, !dbg !14150
  %conv21 = zext i8 %26 to i32, !dbg !14150
  %27 = load i32, i32* %err_mask, align 4, !dbg !14150
  call void (%struct.ata_device*, i8*, i8*, ...) @ata_dev_printk(%struct.ata_device* %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.128, i64 0, i64 0), i32 %conv21, i32 %27) #7, !dbg !14150
  br label %if.end22

if.end22:                                         ; preds = %if.then, %if.then5, %if.then7, %if.else, %if.then17
  ret void, !dbg !14152
}

; Function Attrs: noredzone
declare dso_local i32 @scsi_check_sense(%struct.scsi_cmnd*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_id_sense_reporting_enabled(i16* %id) #0 !dbg !14153 {
entry:
  %retval = alloca i1, align 1
  %id.addr = alloca i16*, align 8
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !14158, metadata !DIExpression()), !dbg !14159
  %0 = load i16*, i16** %id.addr, align 8, !dbg !14160
  %arrayidx = getelementptr i16, i16* %0, i64 86, !dbg !14160
  %1 = load i16, i16* %arrayidx, align 2, !dbg !14160
  %conv = zext i16 %1 to i32, !dbg !14160
  %and = and i32 %conv, 32768, !dbg !14162
  %tobool = icmp ne i32 %and, 0, !dbg !14162
  br i1 %tobool, label %if.end, label %if.then, !dbg !14163

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !14164
  br label %return, !dbg !14164

if.end:                                           ; preds = %entry
  %2 = load i16*, i16** %id.addr, align 8, !dbg !14165
  %arrayidx1 = getelementptr i16, i16* %2, i64 120, !dbg !14165
  %3 = load i16, i16* %arrayidx1, align 2, !dbg !14165
  %conv2 = zext i16 %3 to i32, !dbg !14165
  %and3 = and i32 %conv2, 64, !dbg !14166
  %tobool4 = icmp ne i32 %and3, 0, !dbg !14165
  store i1 %tobool4, i1* %retval, align 1, !dbg !14167
  br label %return, !dbg !14167

return:                                           ; preds = %if.end, %if.then
  %4 = load i1, i1* %retval, align 1, !dbg !14168
  ret i1 %4, !dbg !14168
}

; Function Attrs: noredzone
declare dso_local void @ata_scsi_set_sense(%struct.ata_device*, %struct.scsi_cmnd*, i8 zeroext, i8 zeroext, i8 zeroext) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_eh_categorize_error(i32 %eflags, i32 %err_mask, i32* %xfer_ok) #0 !dbg !14169 {
entry:
  %retval = alloca i32, align 4
  %eflags.addr = alloca i32, align 4
  %err_mask.addr = alloca i32, align 4
  %xfer_ok.addr = alloca i32*, align 8
  %base = alloca i32, align 4
  store i32 %eflags, i32* %eflags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %eflags.addr, metadata !14172, metadata !DIExpression()), !dbg !14173
  store i32 %err_mask, i32* %err_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err_mask.addr, metadata !14174, metadata !DIExpression()), !dbg !14175
  store i32* %xfer_ok, i32** %xfer_ok.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %xfer_ok.addr, metadata !14176, metadata !DIExpression()), !dbg !14177
  call void @llvm.dbg.declare(metadata i32* %base, metadata !14178, metadata !DIExpression()), !dbg !14179
  store i32 0, i32* %base, align 4, !dbg !14179
  %0 = load i32, i32* %eflags.addr, align 4, !dbg !14180
  %and = and i32 %0, 2, !dbg !14182
  %tobool = icmp ne i32 %and, 0, !dbg !14182
  br i1 %tobool, label %if.end, label %if.then, !dbg !14183

if.then:                                          ; preds = %entry
  %1 = load i32*, i32** %xfer_ok.addr, align 8, !dbg !14184
  store i32 1, i32* %1, align 4, !dbg !14185
  br label %if.end, !dbg !14186

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32*, i32** %xfer_ok.addr, align 8, !dbg !14187
  %3 = load i32, i32* %2, align 4, !dbg !14189
  %tobool1 = icmp ne i32 %3, 0, !dbg !14189
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !14190

if.then2:                                         ; preds = %if.end
  store i32 4, i32* %base, align 4, !dbg !14191
  br label %if.end3, !dbg !14192

if.end3:                                          ; preds = %if.then2, %if.end
  %4 = load i32, i32* %err_mask.addr, align 4, !dbg !14193
  %and4 = and i32 %4, 16, !dbg !14195
  %tobool5 = icmp ne i32 %and4, 0, !dbg !14195
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !14196

if.then6:                                         ; preds = %if.end3
  %5 = load i32, i32* %base, align 4, !dbg !14197
  %add = add i32 %5, 1, !dbg !14198
  store i32 %add, i32* %retval, align 4, !dbg !14199
  br label %return, !dbg !14199

if.end7:                                          ; preds = %if.end3
  %6 = load i32, i32* %err_mask.addr, align 4, !dbg !14200
  %and8 = and i32 %6, 4, !dbg !14202
  %tobool9 = icmp ne i32 %and8, 0, !dbg !14202
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !14203

if.then10:                                        ; preds = %if.end7
  %7 = load i32, i32* %base, align 4, !dbg !14204
  %add11 = add i32 %7, 2, !dbg !14205
  store i32 %add11, i32* %retval, align 4, !dbg !14206
  br label %return, !dbg !14206

if.end12:                                         ; preds = %if.end7
  %8 = load i32, i32* %eflags.addr, align 4, !dbg !14207
  %and13 = and i32 %8, 1, !dbg !14209
  %tobool14 = icmp ne i32 %and13, 0, !dbg !14209
  br i1 %tobool14, label %if.then15, label %if.end25, !dbg !14210

if.then15:                                        ; preds = %if.end12
  %9 = load i32, i32* %err_mask.addr, align 4, !dbg !14211
  %and16 = and i32 %9, 2, !dbg !14214
  %tobool17 = icmp ne i32 %and16, 0, !dbg !14214
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !14215

if.then18:                                        ; preds = %if.then15
  %10 = load i32, i32* %base, align 4, !dbg !14216
  %add19 = add i32 %10, 2, !dbg !14217
  store i32 %add19, i32* %retval, align 4, !dbg !14218
  br label %return, !dbg !14218

if.end20:                                         ; preds = %if.then15
  %11 = load i32, i32* %err_mask.addr, align 4, !dbg !14219
  %and21 = and i32 %11, 137, !dbg !14221
  %cmp = icmp eq i32 %and21, 1, !dbg !14222
  br i1 %cmp, label %if.then22, label %if.end24, !dbg !14223

if.then22:                                        ; preds = %if.end20
  %12 = load i32, i32* %base, align 4, !dbg !14224
  %add23 = add i32 %12, 3, !dbg !14225
  store i32 %add23, i32* %retval, align 4, !dbg !14226
  br label %return, !dbg !14226

if.end24:                                         ; preds = %if.end20
  br label %if.end25, !dbg !14227

if.end25:                                         ; preds = %if.end24, %if.end12
  store i32 0, i32* %retval, align 4, !dbg !14228
  br label %return, !dbg !14228

return:                                           ; preds = %if.end25, %if.then22, %if.then18, %if.then10, %if.then6
  %13 = load i32, i32* %retval, align 4, !dbg !14229
  ret i32 %13, !dbg !14229
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_ering_record(%struct.ata_ering* %ering, i32 %eflags, i32 %err_mask) #0 !dbg !14230 {
entry:
  %ering.addr = alloca %struct.ata_ering*, align 8
  %eflags.addr = alloca i32, align 4
  %err_mask.addr = alloca i32, align 4
  %ent = alloca %struct.ata_ering_entry*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.ata_ering* %ering, %struct.ata_ering** %ering.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_ering** %ering.addr, metadata !14233, metadata !DIExpression()), !dbg !14234
  store i32 %eflags, i32* %eflags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %eflags.addr, metadata !14235, metadata !DIExpression()), !dbg !14236
  store i32 %err_mask, i32* %err_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err_mask.addr, metadata !14237, metadata !DIExpression()), !dbg !14238
  call void @llvm.dbg.declare(metadata %struct.ata_ering_entry** %ent, metadata !14239, metadata !DIExpression()), !dbg !14240
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !14241, metadata !DIExpression()), !dbg !14243
  %0 = load i32, i32* %err_mask.addr, align 4, !dbg !14243
  %tobool = icmp ne i32 %0, 0, !dbg !14243
  %lnot = xor i1 %tobool, true, !dbg !14243
  %lnot1 = xor i1 %lnot, true, !dbg !14243
  %lnot2 = xor i1 %lnot1, true, !dbg !14243
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !14243
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !14243
  %1 = load i32, i32* %__ret_warn_on, align 4, !dbg !14244
  %tobool3 = icmp ne i32 %1, 0, !dbg !14244
  %lnot4 = xor i1 %tobool3, true, !dbg !14244
  %lnot6 = xor i1 %lnot4, true, !dbg !14244
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !14244
  %conv = sext i32 %lnot.ext7 to i64, !dbg !14244
  %tobool8 = icmp ne i64 %conv, 0, !dbg !14244
  br i1 %tobool8, label %if.then, label %if.end, !dbg !14243

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !14244

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !14246

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !14248

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !14246

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), i32 365, i32 2305, i64 12) #2, !dbg !14250, !srcloc !14252
  br label %do.end11, !dbg !14250

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 309) #2, !dbg !14253, !srcloc !14255
  br label %do.body12, !dbg !14246

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !14256

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !14246

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !14246

if.end:                                           ; preds = %do.end14, %entry
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !14243
  %tobool15 = icmp ne i32 %2, 0, !dbg !14243
  %lnot16 = xor i1 %tobool15, true, !dbg !14243
  %lnot18 = xor i1 %lnot16, true, !dbg !14243
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !14243
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !14243
  store i64 %conv20, i64* %tmp, align 8, !dbg !14244
  %3 = load i64, i64* %tmp, align 8, !dbg !14243
  %4 = load %struct.ata_ering*, %struct.ata_ering** %ering.addr, align 8, !dbg !14258
  %cursor = getelementptr inbounds %struct.ata_ering, %struct.ata_ering* %4, i32 0, i32 0, !dbg !14259
  %5 = load i32, i32* %cursor, align 8, !dbg !14260
  %inc = add i32 %5, 1, !dbg !14260
  store i32 %inc, i32* %cursor, align 8, !dbg !14260
  %6 = load %struct.ata_ering*, %struct.ata_ering** %ering.addr, align 8, !dbg !14261
  %cursor21 = getelementptr inbounds %struct.ata_ering, %struct.ata_ering* %6, i32 0, i32 0, !dbg !14262
  %7 = load i32, i32* %cursor21, align 8, !dbg !14263
  %rem = srem i32 %7, 32, !dbg !14263
  store i32 %rem, i32* %cursor21, align 8, !dbg !14263
  %8 = load %struct.ata_ering*, %struct.ata_ering** %ering.addr, align 8, !dbg !14264
  %ring = getelementptr inbounds %struct.ata_ering, %struct.ata_ering* %8, i32 0, i32 1, !dbg !14265
  %9 = load %struct.ata_ering*, %struct.ata_ering** %ering.addr, align 8, !dbg !14266
  %cursor22 = getelementptr inbounds %struct.ata_ering, %struct.ata_ering* %9, i32 0, i32 0, !dbg !14267
  %10 = load i32, i32* %cursor22, align 8, !dbg !14267
  %idxprom = sext i32 %10 to i64, !dbg !14264
  %arrayidx = getelementptr [32 x %struct.ata_ering_entry], [32 x %struct.ata_ering_entry]* %ring, i64 0, i64 %idxprom, !dbg !14264
  store %struct.ata_ering_entry* %arrayidx, %struct.ata_ering_entry** %ent, align 8, !dbg !14268
  %11 = load i32, i32* %eflags.addr, align 4, !dbg !14269
  %12 = load %struct.ata_ering_entry*, %struct.ata_ering_entry** %ent, align 8, !dbg !14270
  %eflags23 = getelementptr inbounds %struct.ata_ering_entry, %struct.ata_ering_entry* %12, i32 0, i32 0, !dbg !14271
  store i32 %11, i32* %eflags23, align 8, !dbg !14272
  %13 = load i32, i32* %err_mask.addr, align 4, !dbg !14273
  %14 = load %struct.ata_ering_entry*, %struct.ata_ering_entry** %ent, align 8, !dbg !14274
  %err_mask24 = getelementptr inbounds %struct.ata_ering_entry, %struct.ata_ering_entry* %14, i32 0, i32 1, !dbg !14275
  store i32 %13, i32* %err_mask24, align 4, !dbg !14276
  %call = call i64 @get_jiffies_64() #7, !dbg !14277
  %15 = load %struct.ata_ering_entry*, %struct.ata_ering_entry** %ent, align 8, !dbg !14278
  %timestamp = getelementptr inbounds %struct.ata_ering_entry, %struct.ata_ering_entry* %15, i32 0, i32 2, !dbg !14279
  store i64 %call, i64* %timestamp, align 8, !dbg !14280
  ret void, !dbg !14281
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_eh_speed_down_verdict(%struct.ata_device* %dev) #0 !dbg !14282 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  %j5mins = alloca i64, align 8
  %j10mins = alloca i64, align 8
  %j64 = alloca i64, align 8
  %arg = alloca %struct.speed_down_verdict_arg, align 8
  %verdict = alloca i32, align 4
  %__UNIQUE_ID___x325 = alloca i64, align 8
  %__UNIQUE_ID___y326 = alloca i64, align 8
  %tmp = alloca i64, align 8
  %__UNIQUE_ID___x327 = alloca i64, align 8
  %__UNIQUE_ID___y328 = alloca i64, align 8
  %tmp26 = alloca i64, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !14285, metadata !DIExpression()), !dbg !14286
  call void @llvm.dbg.declare(metadata i64* %j5mins, metadata !14287, metadata !DIExpression()), !dbg !14289
  store i64 75000, i64* %j5mins, align 8, !dbg !14289
  call void @llvm.dbg.declare(metadata i64* %j10mins, metadata !14290, metadata !DIExpression()), !dbg !14291
  store i64 150000, i64* %j10mins, align 8, !dbg !14291
  call void @llvm.dbg.declare(metadata i64* %j64, metadata !14292, metadata !DIExpression()), !dbg !14293
  %call = call i64 @get_jiffies_64() #7, !dbg !14294
  store i64 %call, i64* %j64, align 8, !dbg !14293
  call void @llvm.dbg.declare(metadata %struct.speed_down_verdict_arg* %arg, metadata !14295, metadata !DIExpression()), !dbg !14302
  call void @llvm.dbg.declare(metadata i32* %verdict, metadata !14303, metadata !DIExpression()), !dbg !14304
  store i32 0, i32* %verdict, align 4, !dbg !14304
  %0 = bitcast %struct.speed_down_verdict_arg* %arg to i8*, !dbg !14305
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 48, i1 false), !dbg !14305
  %1 = load i64, i64* %j64, align 8, !dbg !14306
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x325, metadata !14307, metadata !DIExpression()), !dbg !14309
  %2 = load i64, i64* %j64, align 8, !dbg !14309
  store i64 %2, i64* %__UNIQUE_ID___x325, align 8, !dbg !14309
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y326, metadata !14310, metadata !DIExpression()), !dbg !14309
  store i64 75000, i64* %__UNIQUE_ID___y326, align 8, !dbg !14309
  %3 = load i64, i64* %__UNIQUE_ID___x325, align 8, !dbg !14309
  %cmp = icmp ult i64 %3, 75000, !dbg !14309
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !14309

cond.true:                                        ; preds = %entry
  %4 = load i64, i64* %__UNIQUE_ID___x325, align 8, !dbg !14309
  br label %cond.end, !dbg !14309

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14309

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ 75000, %cond.false ], !dbg !14309
  store i64 %cond, i64* %tmp, align 8, !dbg !14309
  %5 = load i64, i64* %tmp, align 8, !dbg !14309
  %sub = sub i64 %1, %5, !dbg !14311
  %since = getelementptr inbounds %struct.speed_down_verdict_arg, %struct.speed_down_verdict_arg* %arg, i32 0, i32 0, !dbg !14312
  store i64 %sub, i64* %since, align 8, !dbg !14313
  %6 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14314
  %ering = getelementptr inbounds %struct.ata_device, %struct.ata_device* %6, i32 0, i32 36, !dbg !14315
  %7 = bitcast %struct.speed_down_verdict_arg* %arg to i8*, !dbg !14316
  %call1 = call i32 @ata_ering_map(%struct.ata_ering* %ering, i32 (%struct.ata_ering_entry*, i8*)* @speed_down_verdict_cb, i8* %7) #7, !dbg !14317
  %nr_errors = getelementptr inbounds %struct.speed_down_verdict_arg, %struct.speed_down_verdict_arg* %arg, i32 0, i32 2, !dbg !14318
  %arrayidx = getelementptr [8 x i32], [8 x i32]* %nr_errors, i64 0, i64 5, !dbg !14320
  %8 = load i32, i32* %arrayidx, align 4, !dbg !14320
  %nr_errors2 = getelementptr inbounds %struct.speed_down_verdict_arg, %struct.speed_down_verdict_arg* %arg, i32 0, i32 2, !dbg !14321
  %arrayidx3 = getelementptr [8 x i32], [8 x i32]* %nr_errors2, i64 0, i64 6, !dbg !14322
  %9 = load i32, i32* %arrayidx3, align 4, !dbg !14322
  %add = add i32 %8, %9, !dbg !14323
  %cmp4 = icmp sgt i32 %add, 1, !dbg !14324
  br i1 %cmp4, label %if.then, label %if.end, !dbg !14325

if.then:                                          ; preds = %cond.end
  %10 = load i32, i32* %verdict, align 4, !dbg !14326
  %or = or i32 %10, 14, !dbg !14326
  store i32 %or, i32* %verdict, align 4, !dbg !14326
  br label %if.end, !dbg !14327

if.end:                                           ; preds = %if.then, %cond.end
  %nr_errors5 = getelementptr inbounds %struct.speed_down_verdict_arg, %struct.speed_down_verdict_arg* %arg, i32 0, i32 2, !dbg !14328
  %arrayidx6 = getelementptr [8 x i32], [8 x i32]* %nr_errors5, i64 0, i64 6, !dbg !14330
  %11 = load i32, i32* %arrayidx6, align 4, !dbg !14330
  %nr_errors7 = getelementptr inbounds %struct.speed_down_verdict_arg, %struct.speed_down_verdict_arg* %arg, i32 0, i32 2, !dbg !14331
  %arrayidx8 = getelementptr [8 x i32], [8 x i32]* %nr_errors7, i64 0, i64 7, !dbg !14332
  %12 = load i32, i32* %arrayidx8, align 4, !dbg !14332
  %add9 = add i32 %11, %12, !dbg !14333
  %cmp10 = icmp sgt i32 %add9, 1, !dbg !14334
  br i1 %cmp10, label %if.then11, label %if.end13, !dbg !14335

if.then11:                                        ; preds = %if.end
  %13 = load i32, i32* %verdict, align 4, !dbg !14336
  %or12 = or i32 %13, 9, !dbg !14336
  store i32 %or12, i32* %verdict, align 4, !dbg !14336
  br label %if.end13, !dbg !14337

if.end13:                                         ; preds = %if.then11, %if.end
  %nr_errors14 = getelementptr inbounds %struct.speed_down_verdict_arg, %struct.speed_down_verdict_arg* %arg, i32 0, i32 2, !dbg !14338
  %arrayidx15 = getelementptr [8 x i32], [8 x i32]* %nr_errors14, i64 0, i64 1, !dbg !14340
  %14 = load i32, i32* %arrayidx15, align 4, !dbg !14340
  %nr_errors16 = getelementptr inbounds %struct.speed_down_verdict_arg, %struct.speed_down_verdict_arg* %arg, i32 0, i32 2, !dbg !14341
  %arrayidx17 = getelementptr [8 x i32], [8 x i32]* %nr_errors16, i64 0, i64 2, !dbg !14342
  %15 = load i32, i32* %arrayidx17, align 4, !dbg !14342
  %add18 = add i32 %14, %15, !dbg !14343
  %nr_errors19 = getelementptr inbounds %struct.speed_down_verdict_arg, %struct.speed_down_verdict_arg* %arg, i32 0, i32 2, !dbg !14344
  %arrayidx20 = getelementptr [8 x i32], [8 x i32]* %nr_errors19, i64 0, i64 3, !dbg !14345
  %16 = load i32, i32* %arrayidx20, align 4, !dbg !14345
  %add21 = add i32 %add18, %16, !dbg !14346
  %cmp22 = icmp sgt i32 %add21, 6, !dbg !14347
  br i1 %cmp22, label %if.then23, label %if.end25, !dbg !14348

if.then23:                                        ; preds = %if.end13
  %17 = load i32, i32* %verdict, align 4, !dbg !14349
  %or24 = or i32 %17, 4, !dbg !14349
  store i32 %or24, i32* %verdict, align 4, !dbg !14349
  br label %if.end25, !dbg !14350

if.end25:                                         ; preds = %if.then23, %if.end13
  %18 = bitcast %struct.speed_down_verdict_arg* %arg to i8*, !dbg !14351
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 48, i1 false), !dbg !14351
  %19 = load i64, i64* %j64, align 8, !dbg !14352
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x327, metadata !14353, metadata !DIExpression()), !dbg !14355
  %20 = load i64, i64* %j64, align 8, !dbg !14355
  store i64 %20, i64* %__UNIQUE_ID___x327, align 8, !dbg !14355
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y328, metadata !14356, metadata !DIExpression()), !dbg !14355
  store i64 150000, i64* %__UNIQUE_ID___y328, align 8, !dbg !14355
  %21 = load i64, i64* %__UNIQUE_ID___x327, align 8, !dbg !14355
  %cmp27 = icmp ult i64 %21, 150000, !dbg !14355
  br i1 %cmp27, label %cond.true28, label %cond.false29, !dbg !14355

cond.true28:                                      ; preds = %if.end25
  %22 = load i64, i64* %__UNIQUE_ID___x327, align 8, !dbg !14355
  br label %cond.end30, !dbg !14355

cond.false29:                                     ; preds = %if.end25
  br label %cond.end30, !dbg !14355

cond.end30:                                       ; preds = %cond.false29, %cond.true28
  %cond31 = phi i64 [ %22, %cond.true28 ], [ 150000, %cond.false29 ], !dbg !14355
  store i64 %cond31, i64* %tmp26, align 8, !dbg !14355
  %23 = load i64, i64* %tmp26, align 8, !dbg !14355
  %sub32 = sub i64 %19, %23, !dbg !14357
  %since33 = getelementptr inbounds %struct.speed_down_verdict_arg, %struct.speed_down_verdict_arg* %arg, i32 0, i32 0, !dbg !14358
  store i64 %sub32, i64* %since33, align 8, !dbg !14359
  %24 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14360
  %ering34 = getelementptr inbounds %struct.ata_device, %struct.ata_device* %24, i32 0, i32 36, !dbg !14361
  %25 = bitcast %struct.speed_down_verdict_arg* %arg to i8*, !dbg !14362
  %call35 = call i32 @ata_ering_map(%struct.ata_ering* %ering34, i32 (%struct.ata_ering_entry*, i8*)* @speed_down_verdict_cb, i8* %25) #7, !dbg !14363
  %nr_errors36 = getelementptr inbounds %struct.speed_down_verdict_arg, %struct.speed_down_verdict_arg* %arg, i32 0, i32 2, !dbg !14364
  %arrayidx37 = getelementptr [8 x i32], [8 x i32]* %nr_errors36, i64 0, i64 2, !dbg !14366
  %26 = load i32, i32* %arrayidx37, align 4, !dbg !14366
  %nr_errors38 = getelementptr inbounds %struct.speed_down_verdict_arg, %struct.speed_down_verdict_arg* %arg, i32 0, i32 2, !dbg !14367
  %arrayidx39 = getelementptr [8 x i32], [8 x i32]* %nr_errors38, i64 0, i64 3, !dbg !14368
  %27 = load i32, i32* %arrayidx39, align 4, !dbg !14368
  %add40 = add i32 %26, %27, !dbg !14369
  %cmp41 = icmp sgt i32 %add40, 3, !dbg !14370
  br i1 %cmp41, label %if.then42, label %if.end44, !dbg !14371

if.then42:                                        ; preds = %cond.end30
  %28 = load i32, i32* %verdict, align 4, !dbg !14372
  %or43 = or i32 %28, 1, !dbg !14372
  store i32 %or43, i32* %verdict, align 4, !dbg !14372
  br label %if.end44, !dbg !14373

if.end44:                                         ; preds = %if.then42, %cond.end30
  %nr_errors45 = getelementptr inbounds %struct.speed_down_verdict_arg, %struct.speed_down_verdict_arg* %arg, i32 0, i32 2, !dbg !14374
  %arrayidx46 = getelementptr [8 x i32], [8 x i32]* %nr_errors45, i64 0, i64 1, !dbg !14376
  %29 = load i32, i32* %arrayidx46, align 4, !dbg !14376
  %nr_errors47 = getelementptr inbounds %struct.speed_down_verdict_arg, %struct.speed_down_verdict_arg* %arg, i32 0, i32 2, !dbg !14377
  %arrayidx48 = getelementptr [8 x i32], [8 x i32]* %nr_errors47, i64 0, i64 2, !dbg !14378
  %30 = load i32, i32* %arrayidx48, align 4, !dbg !14378
  %add49 = add i32 %29, %30, !dbg !14379
  %cmp50 = icmp sgt i32 %add49, 3, !dbg !14380
  br i1 %cmp50, label %if.then54, label %lor.lhs.false, !dbg !14381

lor.lhs.false:                                    ; preds = %if.end44
  %nr_errors51 = getelementptr inbounds %struct.speed_down_verdict_arg, %struct.speed_down_verdict_arg* %arg, i32 0, i32 2, !dbg !14382
  %arrayidx52 = getelementptr [8 x i32], [8 x i32]* %nr_errors51, i64 0, i64 3, !dbg !14383
  %31 = load i32, i32* %arrayidx52, align 4, !dbg !14383
  %cmp53 = icmp sgt i32 %31, 6, !dbg !14384
  br i1 %cmp53, label %if.then54, label %if.end56, !dbg !14385

if.then54:                                        ; preds = %lor.lhs.false, %if.end44
  %32 = load i32, i32* %verdict, align 4, !dbg !14386
  %or55 = or i32 %32, 2, !dbg !14386
  store i32 %or55, i32* %verdict, align 4, !dbg !14386
  br label %if.end56, !dbg !14387

if.end56:                                         ; preds = %if.then54, %lor.lhs.false
  %33 = load i32, i32* %verdict, align 4, !dbg !14388
  ret i32 %33, !dbg !14389
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @get_jiffies_64() #0 !dbg !14390 {
entry:
  %0 = load volatile i64, i64* @jiffies, align 8, !dbg !14393
  ret i64 %0, !dbg !14394
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @speed_down_verdict_cb(%struct.ata_ering_entry* %ent, i8* %void_arg) #0 !dbg !14395 {
entry:
  %retval = alloca i32, align 4
  %ent.addr = alloca %struct.ata_ering_entry*, align 8
  %void_arg.addr = alloca i8*, align 8
  %arg = alloca %struct.speed_down_verdict_arg*, align 8
  %cat = alloca i32, align 4
  store %struct.ata_ering_entry* %ent, %struct.ata_ering_entry** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_ering_entry** %ent.addr, metadata !14396, metadata !DIExpression()), !dbg !14397
  store i8* %void_arg, i8** %void_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %void_arg.addr, metadata !14398, metadata !DIExpression()), !dbg !14399
  call void @llvm.dbg.declare(metadata %struct.speed_down_verdict_arg** %arg, metadata !14400, metadata !DIExpression()), !dbg !14402
  %0 = load i8*, i8** %void_arg.addr, align 8, !dbg !14403
  %1 = bitcast i8* %0 to %struct.speed_down_verdict_arg*, !dbg !14403
  store %struct.speed_down_verdict_arg* %1, %struct.speed_down_verdict_arg** %arg, align 8, !dbg !14402
  call void @llvm.dbg.declare(metadata i32* %cat, metadata !14404, metadata !DIExpression()), !dbg !14405
  %2 = load %struct.ata_ering_entry*, %struct.ata_ering_entry** %ent.addr, align 8, !dbg !14406
  %eflags = getelementptr inbounds %struct.ata_ering_entry, %struct.ata_ering_entry* %2, i32 0, i32 0, !dbg !14408
  %3 = load i32, i32* %eflags, align 8, !dbg !14408
  %and = and i32 %3, -2147483648, !dbg !14409
  %tobool = icmp ne i32 %and, 0, !dbg !14409
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !14410

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.ata_ering_entry*, %struct.ata_ering_entry** %ent.addr, align 8, !dbg !14411
  %timestamp = getelementptr inbounds %struct.ata_ering_entry, %struct.ata_ering_entry* %4, i32 0, i32 2, !dbg !14412
  %5 = load i64, i64* %timestamp, align 8, !dbg !14412
  %6 = load %struct.speed_down_verdict_arg*, %struct.speed_down_verdict_arg** %arg, align 8, !dbg !14413
  %since = getelementptr inbounds %struct.speed_down_verdict_arg, %struct.speed_down_verdict_arg* %6, i32 0, i32 0, !dbg !14414
  %7 = load i64, i64* %since, align 8, !dbg !14414
  %cmp = icmp ult i64 %5, %7, !dbg !14415
  br i1 %cmp, label %if.then, label %if.end, !dbg !14416

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %retval, align 4, !dbg !14417
  br label %return, !dbg !14417

if.end:                                           ; preds = %lor.lhs.false
  %8 = load %struct.ata_ering_entry*, %struct.ata_ering_entry** %ent.addr, align 8, !dbg !14418
  %eflags1 = getelementptr inbounds %struct.ata_ering_entry, %struct.ata_ering_entry* %8, i32 0, i32 0, !dbg !14419
  %9 = load i32, i32* %eflags1, align 8, !dbg !14419
  %10 = load %struct.ata_ering_entry*, %struct.ata_ering_entry** %ent.addr, align 8, !dbg !14420
  %err_mask = getelementptr inbounds %struct.ata_ering_entry, %struct.ata_ering_entry* %10, i32 0, i32 1, !dbg !14421
  %11 = load i32, i32* %err_mask, align 4, !dbg !14421
  %12 = load %struct.speed_down_verdict_arg*, %struct.speed_down_verdict_arg** %arg, align 8, !dbg !14422
  %xfer_ok = getelementptr inbounds %struct.speed_down_verdict_arg, %struct.speed_down_verdict_arg* %12, i32 0, i32 1, !dbg !14423
  %call = call i32 @ata_eh_categorize_error(i32 %9, i32 %11, i32* %xfer_ok) #7, !dbg !14424
  store i32 %call, i32* %cat, align 4, !dbg !14425
  %13 = load %struct.speed_down_verdict_arg*, %struct.speed_down_verdict_arg** %arg, align 8, !dbg !14426
  %nr_errors = getelementptr inbounds %struct.speed_down_verdict_arg, %struct.speed_down_verdict_arg* %13, i32 0, i32 2, !dbg !14427
  %14 = load i32, i32* %cat, align 4, !dbg !14428
  %idxprom = sext i32 %14 to i64, !dbg !14426
  %arrayidx = getelementptr [8 x i32], [8 x i32]* %nr_errors, i64 0, i64 %idxprom, !dbg !14426
  %15 = load i32, i32* %arrayidx, align 4, !dbg !14429
  %inc = add i32 %15, 1, !dbg !14429
  store i32 %inc, i32* %arrayidx, align 4, !dbg !14429
  store i32 0, i32* %retval, align 4, !dbg !14430
  br label %return, !dbg !14430

return:                                           ; preds = %if.end, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !14431
  ret i32 %16, !dbg !14431
}

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_is_atapi(i8 zeroext %prot) #0 !dbg !14432 {
entry:
  %prot.addr = alloca i8, align 1
  store i8 %prot, i8* %prot.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %prot.addr, metadata !14435, metadata !DIExpression()), !dbg !14436
  %0 = load i8, i8* %prot.addr, align 1, !dbg !14437
  %conv = zext i8 %0 to i32, !dbg !14437
  %and = and i32 %conv, 8, !dbg !14438
  %tobool = icmp ne i32 %and, 0, !dbg !14437
  ret i1 %tobool, !dbg !14439
}

; Function Attrs: noredzone
declare dso_local i64 @__scsi_format_command(i8*, i64, i8*, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ata_err_string(i32 %err_mask) #0 !dbg !14440 {
entry:
  %retval = alloca i8*, align 8
  %err_mask.addr = alloca i32, align 4
  store i32 %err_mask, i32* %err_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err_mask.addr, metadata !14443, metadata !DIExpression()), !dbg !14444
  %0 = load i32, i32* %err_mask.addr, align 4, !dbg !14445
  %and = and i32 %0, 32, !dbg !14447
  %tobool = icmp ne i32 %and, 0, !dbg !14447
  br i1 %tobool, label %if.then, label %if.end, !dbg !14448

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.178, i64 0, i64 0), i8** %retval, align 8, !dbg !14449
  br label %return, !dbg !14449

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %err_mask.addr, align 4, !dbg !14450
  %and1 = and i32 %1, 16, !dbg !14452
  %tobool2 = icmp ne i32 %and1, 0, !dbg !14452
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !14453

if.then3:                                         ; preds = %if.end
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.179, i64 0, i64 0), i8** %retval, align 8, !dbg !14454
  br label %return, !dbg !14454

if.end4:                                          ; preds = %if.end
  %2 = load i32, i32* %err_mask.addr, align 4, !dbg !14455
  %and5 = and i32 %2, 4, !dbg !14457
  %tobool6 = icmp ne i32 %and5, 0, !dbg !14457
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !14458

if.then7:                                         ; preds = %if.end4
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.180, i64 0, i64 0), i8** %retval, align 8, !dbg !14459
  br label %return, !dbg !14459

if.end8:                                          ; preds = %if.end4
  %3 = load i32, i32* %err_mask.addr, align 4, !dbg !14460
  %and9 = and i32 %3, 2, !dbg !14462
  %tobool10 = icmp ne i32 %and9, 0, !dbg !14462
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !14463

if.then11:                                        ; preds = %if.end8
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.181, i64 0, i64 0), i8** %retval, align 8, !dbg !14464
  br label %return, !dbg !14464

if.end12:                                         ; preds = %if.end8
  %4 = load i32, i32* %err_mask.addr, align 4, !dbg !14465
  %and13 = and i32 %4, 64, !dbg !14467
  %tobool14 = icmp ne i32 %and13, 0, !dbg !14467
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !14468

if.then15:                                        ; preds = %if.end12
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.182, i64 0, i64 0), i8** %retval, align 8, !dbg !14469
  br label %return, !dbg !14469

if.end16:                                         ; preds = %if.end12
  %5 = load i32, i32* %err_mask.addr, align 4, !dbg !14470
  %and17 = and i32 %5, 8, !dbg !14472
  %tobool18 = icmp ne i32 %and17, 0, !dbg !14472
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !14473

if.then19:                                        ; preds = %if.end16
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.183, i64 0, i64 0), i8** %retval, align 8, !dbg !14474
  br label %return, !dbg !14474

if.end20:                                         ; preds = %if.end16
  %6 = load i32, i32* %err_mask.addr, align 4, !dbg !14475
  %and21 = and i32 %6, 128, !dbg !14477
  %tobool22 = icmp ne i32 %and21, 0, !dbg !14477
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !14478

if.then23:                                        ; preds = %if.end20
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.184, i64 0, i64 0), i8** %retval, align 8, !dbg !14479
  br label %return, !dbg !14479

if.end24:                                         ; preds = %if.end20
  %7 = load i32, i32* %err_mask.addr, align 4, !dbg !14480
  %and25 = and i32 %7, 1, !dbg !14482
  %tobool26 = icmp ne i32 %and25, 0, !dbg !14482
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !14483

if.then27:                                        ; preds = %if.end24
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.185, i64 0, i64 0), i8** %retval, align 8, !dbg !14484
  br label %return, !dbg !14484

if.end28:                                         ; preds = %if.end24
  %8 = load i32, i32* %err_mask.addr, align 4, !dbg !14485
  %and29 = and i32 %8, 1024, !dbg !14487
  %tobool30 = icmp ne i32 %and29, 0, !dbg !14487
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !14488

if.then31:                                        ; preds = %if.end28
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.186, i64 0, i64 0), i8** %retval, align 8, !dbg !14489
  br label %return, !dbg !14489

if.end32:                                         ; preds = %if.end28
  %9 = load i32, i32* %err_mask.addr, align 4, !dbg !14490
  %and33 = and i32 %9, 512, !dbg !14492
  %tobool34 = icmp ne i32 %and33, 0, !dbg !14492
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !14493

if.then35:                                        ; preds = %if.end32
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.187, i64 0, i64 0), i8** %retval, align 8, !dbg !14494
  br label %return, !dbg !14494

if.end36:                                         ; preds = %if.end32
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.188, i64 0, i64 0), i8** %retval, align 8, !dbg !14495
  br label %return, !dbg !14495

return:                                           ; preds = %if.end36, %if.then35, %if.then31, %if.then27, %if.then23, %if.then19, %if.then15, %if.then11, %if.then7, %if.then3, %if.then
  %10 = load i8*, i8** %retval, align 8, !dbg !14496
  ret i8* %10, !dbg !14496
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @ata_link_offline(%struct.ata_link*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @sata_pmp_supported(%struct.ata_port* %ap) #0 !dbg !14497 {
entry:
  %ap.addr = alloca %struct.ata_port*, align 8
  store %struct.ata_port* %ap, %struct.ata_port** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_port** %ap.addr, metadata !14498, metadata !DIExpression()), !dbg !14499
  %0 = load %struct.ata_port*, %struct.ata_port** %ap.addr, align 8, !dbg !14500
  %flags = getelementptr inbounds %struct.ata_port, %struct.ata_port* %0, i32 0, i32 3, !dbg !14501
  %1 = load i64, i64* %flags, align 8, !dbg !14501
  %and = and i64 %1, 524288, !dbg !14502
  %tobool = icmp ne i64 %and, 0, !dbg !14500
  ret i1 %tobool, !dbg !14503
}

; Function Attrs: noredzone
declare dso_local void @ata_dev_init(%struct.ata_device*) #3

; Function Attrs: noredzone
declare dso_local i32 @sata_pmp_set_lpm(%struct.ata_link*, i32, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_count_probe_trials_cb(%struct.ata_ering_entry* %ent, i8* %void_arg) #0 !dbg !14504 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !8938, metadata !DIExpression()), !dbg !14505
  %retval = alloca i32, align 4
  %ent.addr = alloca %struct.ata_ering_entry*, align 8
  %void_arg.addr = alloca i8*, align 8
  %interval = alloca i64, align 8
  %now = alloca i64, align 8
  %trials = alloca i32*, align 8
  %__UNIQUE_ID___x333 = alloca i64, align 8
  %__UNIQUE_ID___y334 = alloca i64, align 8
  %tmp = alloca i64, align 8
  store %struct.ata_ering_entry* %ent, %struct.ata_ering_entry** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_ering_entry** %ent.addr, metadata !14507, metadata !DIExpression()), !dbg !14508
  store i8* %void_arg, i8** %void_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %void_arg.addr, metadata !14509, metadata !DIExpression()), !dbg !14510
  call void @llvm.dbg.declare(metadata i64* %interval, metadata !14511, metadata !DIExpression()), !dbg !14512
  store i32 60000, i32* %m.addr.i, align 4
  %0 = load i32, i32* %m.addr.i, align 4, !dbg !14513
  %1 = call i1 @llvm.is.constant.i32(i32 %0) #2, !dbg !14514
  br i1 %1, label %if.then.i, label %if.else.i, !dbg !14515

if.then.i:                                        ; preds = %entry
  %2 = load i32, i32* %m.addr.i, align 4, !dbg !14516
  %cmp.i = icmp slt i32 %2, 0, !dbg !14517
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !14518

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !14519
  br label %msecs_to_jiffies.exit, !dbg !14519

if.end.i:                                         ; preds = %if.then.i
  %3 = load i32, i32* %m.addr.i, align 4, !dbg !14520
  %call.i = call i64 @_msecs_to_jiffies(i32 %3) #9, !dbg !14521
  store i64 %call.i, i64* %retval.i, align 8, !dbg !14522
  br label %msecs_to_jiffies.exit, !dbg !14522

if.else.i:                                        ; preds = %entry
  %4 = load i32, i32* %m.addr.i, align 4, !dbg !14523
  %call2.i = call i64 @__msecs_to_jiffies(i32 %4) #9, !dbg !14524
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !14525
  br label %msecs_to_jiffies.exit, !dbg !14525

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %5 = load i64, i64* %retval.i, align 8, !dbg !14526
  store i64 %5, i64* %interval, align 8, !dbg !14512
  call void @llvm.dbg.declare(metadata i64* %now, metadata !14527, metadata !DIExpression()), !dbg !14528
  %call1 = call i64 @get_jiffies_64() #7, !dbg !14529
  store i64 %call1, i64* %now, align 8, !dbg !14528
  call void @llvm.dbg.declare(metadata i32** %trials, metadata !14530, metadata !DIExpression()), !dbg !14531
  %6 = load i8*, i8** %void_arg.addr, align 8, !dbg !14532
  %7 = bitcast i8* %6 to i32*, !dbg !14532
  store i32* %7, i32** %trials, align 8, !dbg !14531
  %8 = load %struct.ata_ering_entry*, %struct.ata_ering_entry** %ent.addr, align 8, !dbg !14533
  %eflags = getelementptr inbounds %struct.ata_ering_entry, %struct.ata_ering_entry* %8, i32 0, i32 0, !dbg !14535
  %9 = load i32, i32* %eflags, align 8, !dbg !14535
  %and = and i32 %9, -2147483648, !dbg !14536
  %tobool = icmp ne i32 %and, 0, !dbg !14536
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !14537

lor.lhs.false:                                    ; preds = %msecs_to_jiffies.exit
  %10 = load %struct.ata_ering_entry*, %struct.ata_ering_entry** %ent.addr, align 8, !dbg !14538
  %timestamp = getelementptr inbounds %struct.ata_ering_entry, %struct.ata_ering_entry* %10, i32 0, i32 2, !dbg !14539
  %11 = load i64, i64* %timestamp, align 8, !dbg !14539
  %12 = load i64, i64* %now, align 8, !dbg !14540
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x333, metadata !14541, metadata !DIExpression()), !dbg !14543
  %13 = load i64, i64* %now, align 8, !dbg !14543
  store i64 %13, i64* %__UNIQUE_ID___x333, align 8, !dbg !14543
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y334, metadata !14544, metadata !DIExpression()), !dbg !14543
  %14 = load i64, i64* %interval, align 8, !dbg !14543
  store i64 %14, i64* %__UNIQUE_ID___y334, align 8, !dbg !14543
  %15 = load i64, i64* %__UNIQUE_ID___x333, align 8, !dbg !14543
  %16 = load i64, i64* %__UNIQUE_ID___y334, align 8, !dbg !14543
  %cmp = icmp ult i64 %15, %16, !dbg !14543
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !14543

cond.true:                                        ; preds = %lor.lhs.false
  %17 = load i64, i64* %__UNIQUE_ID___x333, align 8, !dbg !14543
  br label %cond.end, !dbg !14543

cond.false:                                       ; preds = %lor.lhs.false
  %18 = load i64, i64* %__UNIQUE_ID___y334, align 8, !dbg !14543
  br label %cond.end, !dbg !14543

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %17, %cond.true ], [ %18, %cond.false ], !dbg !14543
  store i64 %cond, i64* %tmp, align 8, !dbg !14543
  %19 = load i64, i64* %tmp, align 8, !dbg !14543
  %sub = sub i64 %12, %19, !dbg !14545
  %cmp2 = icmp ult i64 %11, %sub, !dbg !14546
  br i1 %cmp2, label %if.then, label %if.end, !dbg !14547

if.then:                                          ; preds = %cond.end, %msecs_to_jiffies.exit
  store i32 -1, i32* %retval, align 4, !dbg !14548
  br label %return, !dbg !14548

if.end:                                           ; preds = %cond.end
  %20 = load i32*, i32** %trials, align 8, !dbg !14549
  %21 = load i32, i32* %20, align 4, !dbg !14550
  %inc = add i32 %21, 1, !dbg !14550
  store i32 %inc, i32* %20, align 4, !dbg !14550
  store i32 0, i32* %retval, align 4, !dbg !14551
  br label %return, !dbg !14551

return:                                           ; preds = %if.end, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !14552
  ret i32 %22, !dbg !14552
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @reinit_completion(%struct.completion* %x) #0 !dbg !14553 {
entry:
  %x.addr = alloca %struct.completion*, align 8
  store %struct.completion* %x, %struct.completion** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.completion** %x.addr, metadata !14556, metadata !DIExpression()), !dbg !14557
  %0 = load %struct.completion*, %struct.completion** %x.addr, align 8, !dbg !14558
  %done = getelementptr inbounds %struct.completion, %struct.completion* %0, i32 0, i32 0, !dbg !14559
  store i32 0, i32* %done, align 8, !dbg !14560
  ret void, !dbg !14561
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ata_eh_dev_action(%struct.ata_device* %dev) #0 !dbg !14562 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  %ehc = alloca %struct.ata_eh_context*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !14563, metadata !DIExpression()), !dbg !14564
  call void @llvm.dbg.declare(metadata %struct.ata_eh_context** %ehc, metadata !14565, metadata !DIExpression()), !dbg !14566
  %0 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14567
  %link = getelementptr inbounds %struct.ata_device, %struct.ata_device* %0, i32 0, i32 0, !dbg !14568
  %1 = load %struct.ata_link*, %struct.ata_link** %link, align 64, !dbg !14568
  %eh_context = getelementptr inbounds %struct.ata_link, %struct.ata_link* %1, i32 0, i32 12, !dbg !14569
  store %struct.ata_eh_context* %eh_context, %struct.ata_eh_context** %ehc, align 8, !dbg !14566
  %2 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !14570
  %i = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %2, i32 0, i32 0, !dbg !14571
  %action = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i, i32 0, i32 3, !dbg !14572
  %3 = load i32, i32* %action, align 8, !dbg !14572
  %4 = load %struct.ata_eh_context*, %struct.ata_eh_context** %ehc, align 8, !dbg !14573
  %i1 = getelementptr inbounds %struct.ata_eh_context, %struct.ata_eh_context* %4, i32 0, i32 0, !dbg !14574
  %dev_action = getelementptr inbounds %struct.ata_eh_info, %struct.ata_eh_info* %i1, i32 0, i32 4, !dbg !14575
  %5 = load %struct.ata_device*, %struct.ata_device** %dev.addr, align 8, !dbg !14576
  %devno = getelementptr inbounds %struct.ata_device, %struct.ata_device* %5, i32 0, i32 1, !dbg !14577
  %6 = load i32, i32* %devno, align 8, !dbg !14577
  %idxprom = zext i32 %6 to i64, !dbg !14573
  %arrayidx = getelementptr [2 x i32], [2 x i32]* %dev_action, i64 0, i64 %idxprom, !dbg !14573
  %7 = load i32, i32* %arrayidx, align 4, !dbg !14573
  %or = or i32 %3, %7, !dbg !14578
  ret i32 %or, !dbg !14579
}

; Function Attrs: noredzone
declare dso_local i32 @ata_dev_revalidate(%struct.ata_device*, i32, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @schedule_work(%struct.work_struct* %work) #0 !dbg !14580 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !14583, metadata !DIExpression()), !dbg !14584
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_wq, align 8, !dbg !14585
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !14586
  %call = call zeroext i1 @queue_work(%struct.workqueue_struct* %0, %struct.work_struct* %1) #7, !dbg !14587
  ret i1 %call, !dbg !14588
}

; Function Attrs: noredzone
declare dso_local i32 @sata_pmp_attach(%struct.ata_device*) #3

; Function Attrs: noredzone
declare dso_local i32 @ata_dev_read_id(%struct.ata_device*, i32*, i32, i16*) #3

; Function Attrs: noredzone
declare dso_local void @ata_force_cbl(%struct.ata_port*) #3

; Function Attrs: noredzone
declare dso_local i32 @ata_dev_configure(%struct.ata_device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_work(%struct.workqueue_struct* %wq, %struct.work_struct* %work) #0 !dbg !14589 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !14592, metadata !DIExpression()), !dbg !14593
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !14594, metadata !DIExpression()), !dbg !14595
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !14596
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !14597
  %call = call zeroext i1 @queue_work_on(i32 1, %struct.workqueue_struct* %0, %struct.work_struct* %1) #7, !dbg !14598
  ret i1 %call, !dbg !14599
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_work_on(i32, %struct.workqueue_struct*, %struct.work_struct*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_id_has_hipm(i16* %id) #0 !dbg !14600 {
entry:
  %retval = alloca i1, align 1
  %id.addr = alloca i16*, align 8
  %val = alloca i16, align 2
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !14601, metadata !DIExpression()), !dbg !14602
  call void @llvm.dbg.declare(metadata i16* %val, metadata !14603, metadata !DIExpression()), !dbg !14604
  %0 = load i16*, i16** %id.addr, align 8, !dbg !14605
  %arrayidx = getelementptr i16, i16* %0, i64 76, !dbg !14605
  %1 = load i16, i16* %arrayidx, align 2, !dbg !14605
  store i16 %1, i16* %val, align 2, !dbg !14604
  %2 = load i16, i16* %val, align 2, !dbg !14606
  %conv = zext i16 %2 to i32, !dbg !14606
  %cmp = icmp eq i32 %conv, 0, !dbg !14608
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !14609

lor.lhs.false:                                    ; preds = %entry
  %3 = load i16, i16* %val, align 2, !dbg !14610
  %conv2 = zext i16 %3 to i32, !dbg !14610
  %cmp3 = icmp eq i32 %conv2, 65535, !dbg !14611
  br i1 %cmp3, label %if.then, label %if.end, !dbg !14612

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i1 false, i1* %retval, align 1, !dbg !14613
  br label %return, !dbg !14613

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i16, i16* %val, align 2, !dbg !14614
  %conv5 = zext i16 %4 to i32, !dbg !14614
  %and = and i32 %conv5, 512, !dbg !14615
  %tobool = icmp ne i32 %and, 0, !dbg !14614
  store i1 %tobool, i1* %retval, align 1, !dbg !14616
  br label %return, !dbg !14616

return:                                           ; preds = %if.end, %if.then
  %5 = load i1, i1* %retval, align 1, !dbg !14617
  ret i1 %5, !dbg !14617
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ata_id_has_dipm(i16* %id) #0 !dbg !14618 {
entry:
  %retval = alloca i1, align 1
  %id.addr = alloca i16*, align 8
  %val = alloca i16, align 2
  store i16* %id, i16** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %id.addr, metadata !14619, metadata !DIExpression()), !dbg !14620
  call void @llvm.dbg.declare(metadata i16* %val, metadata !14621, metadata !DIExpression()), !dbg !14622
  %0 = load i16*, i16** %id.addr, align 8, !dbg !14623
  %arrayidx = getelementptr i16, i16* %0, i64 78, !dbg !14623
  %1 = load i16, i16* %arrayidx, align 2, !dbg !14623
  store i16 %1, i16* %val, align 2, !dbg !14622
  %2 = load i16, i16* %val, align 2, !dbg !14624
  %conv = zext i16 %2 to i32, !dbg !14624
  %cmp = icmp eq i32 %conv, 0, !dbg !14626
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !14627

lor.lhs.false:                                    ; preds = %entry
  %3 = load i16, i16* %val, align 2, !dbg !14628
  %conv2 = zext i16 %3 to i32, !dbg !14628
  %cmp3 = icmp eq i32 %conv2, 65535, !dbg !14629
  br i1 %cmp3, label %if.then, label %if.end, !dbg !14630

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i1 false, i1* %retval, align 1, !dbg !14631
  br label %return, !dbg !14631

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i16, i16* %val, align 2, !dbg !14632
  %conv5 = zext i16 %4 to i32, !dbg !14632
  %and = and i32 %conv5, 8, !dbg !14633
  %tobool = icmp ne i32 %and, 0, !dbg !14632
  store i1 %tobool, i1* %retval, align 1, !dbg !14634
  br label %return, !dbg !14634

return:                                           ; preds = %if.end, %if.then
  %5 = load i1, i1* %retval, align 1, !dbg !14635
  ret i1 %5, !dbg !14635
}

; Function Attrs: noredzone
declare dso_local i32 @ata_dev_set_feature(%struct.ata_device*, i8 zeroext, i8 zeroext) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @zpodd_on_suspend(%struct.ata_device* %dev) #0 !dbg !14636 {
entry:
  %dev.addr = alloca %struct.ata_device*, align 8
  store %struct.ata_device* %dev, %struct.ata_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ata_device** %dev.addr, metadata !14637, metadata !DIExpression()), !dbg !14638
  ret void, !dbg !14639
}

; Function Attrs: noredzone
declare dso_local i32 @ata_acpi_on_suspend(%struct.ata_port*) #3

; Function Attrs: noredzone
declare dso_local void @ata_acpi_set_state(%struct.ata_port*, i32) #3

; Function Attrs: noredzone
declare dso_local void @ata_acpi_on_resume(%struct.ata_port*) #3

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { nounwind }
attributes #3 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nounwind readonly }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { noredzone }
attributes #8 = { nounwind readnone }
attributes #9 = { noredzone nounwind }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!6925}
!llvm.module.flags = !{!6926, !6927, !6928, !6929}
!llvm.ident = !{!6930}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "ata_eh_cmd_timeout_table", scope: !2, file: !3, line: 129, type: !6916, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !969, globals: !6876, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/ata/libata-eh.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !11, !20, !28, !34, !40, !46, !53, !61, !67, !81, !87, !94, !98, !110, !115, !122, !129, !135, !141, !149, !160, !167, !177, !192, !200, !205, !443, !468, !473, !479, !489, !499, !911, !926, !931, !964}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !6, line: 65, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10}
!9 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !12, line: 296, baseType: !7, size: 32, elements: !13)
!12 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!13 = !{!14, !15, !16, !17, !18, !19}
!14 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!15 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!16 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!17 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!18 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!19 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!20 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !21, line: 9, baseType: !7, size: 32, elements: !22)
!21 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!22 = !{!23, !24, !25, !26, !27}
!23 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!24 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!25 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!26 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!27 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!28 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !29, line: 54, baseType: !7, size: 32, elements: !30)
!29 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!30 = !{!31, !32, !33}
!31 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!32 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!33 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!34 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !35, line: 26, baseType: !7, size: 32, elements: !36)
!35 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!36 = !{!37, !38, !39}
!37 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!38 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!39 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!40 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !41, line: 44, baseType: !7, size: 32, elements: !42)
!41 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!42 = !{!43, !44, !45}
!43 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!44 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!45 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!46 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !47, line: 343, baseType: !7, size: 32, elements: !48)
!47 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!48 = !{!49, !50, !51, !52}
!49 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!50 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!51 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!52 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!53 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !54, line: 524, baseType: !7, size: 32, elements: !55)
!54 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!55 = !{!56, !57, !58, !59, !60}
!56 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!57 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!58 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!59 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!60 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!61 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !54, line: 502, baseType: !7, size: 32, elements: !62)
!62 = !{!63, !64, !65, !66}
!63 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!66 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!67 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !68, line: 76, baseType: !7, size: 32, elements: !69)
!68 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!69 = !{!70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80}
!70 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!71 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!72 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!73 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!74 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!75 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!76 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!77 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!78 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!79 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!80 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!81 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mq_rq_state", file: !82, line: 118, baseType: !7, size: 32, elements: !83)
!82 = !DIFile(filename: "./include/linux/blkdev.h", directory: "/home/lizy2001/genbc/linux")
!83 = !{!84, !85, !86}
!84 = !DIEnumerator(name: "MQ_RQ_IDLE", value: 0, isUnsigned: true)
!85 = !DIEnumerator(name: "MQ_RQ_IN_FLIGHT", value: 1, isUnsigned: true)
!86 = !DIEnumerator(name: "MQ_RQ_COMPLETE", value: 2, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "elv_merge", file: !88, line: 19, baseType: !7, size: 32, elements: !89)
!88 = !DIFile(filename: "./include/linux/elevator.h", directory: "/home/lizy2001/genbc/linux")
!89 = !{!90, !91, !92, !93}
!90 = !DIEnumerator(name: "ELEVATOR_NO_MERGE", value: 0, isUnsigned: true)
!91 = !DIEnumerator(name: "ELEVATOR_FRONT_MERGE", value: 1, isUnsigned: true)
!92 = !DIEnumerator(name: "ELEVATOR_BACK_MERGE", value: 2, isUnsigned: true)
!93 = !DIEnumerator(name: "ELEVATOR_DISCARD_MERGE", value: 3, isUnsigned: true)
!94 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_eh_timer_return", file: !82, line: 293, baseType: !7, size: 32, elements: !95)
!95 = !{!96, !97}
!96 = !DIEnumerator(name: "BLK_EH_DONE", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "BLK_EH_RESET_TIMER", value: 1, isUnsigned: true)
!98 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "wb_reason", file: !99, line: 49, baseType: !7, size: 32, elements: !100)
!99 = !DIFile(filename: "./include/linux/backing-dev-defs.h", directory: "/home/lizy2001/genbc/linux")
!100 = !{!101, !102, !103, !104, !105, !106, !107, !108, !109}
!101 = !DIEnumerator(name: "WB_REASON_BACKGROUND", value: 0, isUnsigned: true)
!102 = !DIEnumerator(name: "WB_REASON_VMSCAN", value: 1, isUnsigned: true)
!103 = !DIEnumerator(name: "WB_REASON_SYNC", value: 2, isUnsigned: true)
!104 = !DIEnumerator(name: "WB_REASON_PERIODIC", value: 3, isUnsigned: true)
!105 = !DIEnumerator(name: "WB_REASON_LAPTOP_TIMER", value: 4, isUnsigned: true)
!106 = !DIEnumerator(name: "WB_REASON_FS_FREE_SPACE", value: 5, isUnsigned: true)
!107 = !DIEnumerator(name: "WB_REASON_FORKER_THREAD", value: 6, isUnsigned: true)
!108 = !DIEnumerator(name: "WB_REASON_FOREIGN_FLUSH", value: 7, isUnsigned: true)
!109 = !DIEnumerator(name: "WB_REASON_MAX", value: 8, isUnsigned: true)
!110 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_zoned_model", file: !82, line: 315, baseType: !7, size: 32, elements: !111)
!111 = !{!112, !113, !114}
!112 = !DIEnumerator(name: "BLK_ZONED_NONE", value: 0, isUnsigned: true)
!113 = !DIEnumerator(name: "BLK_ZONED_HA", value: 1, isUnsigned: true)
!114 = !DIEnumerator(name: "BLK_ZONED_HM", value: 2, isUnsigned: true)
!115 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !116, line: 15, baseType: !7, size: 32, elements: !117)
!116 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!117 = !{!118, !119, !120, !121}
!118 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!119 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!120 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!121 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!122 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !123, line: 59, baseType: !7, size: 32, elements: !124)
!123 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!124 = !{!125, !126, !127, !128}
!125 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!126 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!127 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!128 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!129 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !130, line: 546, baseType: !7, size: 32, elements: !131)
!130 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!131 = !{!132, !133, !134}
!132 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!133 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!134 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!135 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !136, line: 16, baseType: !7, size: 32, elements: !137)
!136 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!137 = !{!138, !139, !140}
!138 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!139 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!140 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_target_state", file: !142, line: 276, baseType: !7, size: 32, elements: !143)
!142 = !DIFile(filename: "./include/scsi/scsi_device.h", directory: "/home/lizy2001/genbc/linux")
!143 = !{!144, !145, !146, !147, !148}
!144 = !DIEnumerator(name: "STARGET_CREATED", value: 1, isUnsigned: true)
!145 = !DIEnumerator(name: "STARGET_RUNNING", value: 2, isUnsigned: true)
!146 = !DIEnumerator(name: "STARGET_REMOVE", value: 3, isUnsigned: true)
!147 = !DIEnumerator(name: "STARGET_CREATED_REMOVE", value: 4, isUnsigned: true)
!148 = !DIEnumerator(name: "STARGET_DEL", value: 5, isUnsigned: true)
!149 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_device_state", file: !142, line: 36, baseType: !7, size: 32, elements: !150)
!150 = !{!151, !152, !153, !154, !155, !156, !157, !158, !159}
!151 = !DIEnumerator(name: "SDEV_CREATED", value: 1, isUnsigned: true)
!152 = !DIEnumerator(name: "SDEV_RUNNING", value: 2, isUnsigned: true)
!153 = !DIEnumerator(name: "SDEV_CANCEL", value: 3, isUnsigned: true)
!154 = !DIEnumerator(name: "SDEV_DEL", value: 4, isUnsigned: true)
!155 = !DIEnumerator(name: "SDEV_QUIESCE", value: 5, isUnsigned: true)
!156 = !DIEnumerator(name: "SDEV_OFFLINE", value: 6, isUnsigned: true)
!157 = !DIEnumerator(name: "SDEV_TRANSPORT_OFFLINE", value: 7, isUnsigned: true)
!158 = !DIEnumerator(name: "SDEV_BLOCK", value: 8, isUnsigned: true)
!159 = !DIEnumerator(name: "SDEV_CREATED_BLOCK", value: 9, isUnsigned: true)
!160 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_data_direction", file: !161, line: 5, baseType: !7, size: 32, elements: !162)
!161 = !DIFile(filename: "./include/linux/dma-direction.h", directory: "/home/lizy2001/genbc/linux")
!162 = !{!163, !164, !165, !166}
!163 = !DIEnumerator(name: "DMA_BIDIRECTIONAL", value: 0, isUnsigned: true)
!164 = !DIEnumerator(name: "DMA_TO_DEVICE", value: 1, isUnsigned: true)
!165 = !DIEnumerator(name: "DMA_FROM_DEVICE", value: 2, isUnsigned: true)
!166 = !DIEnumerator(name: "DMA_NONE", value: 3, isUnsigned: true)
!167 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "scsi_host_state", file: !168, line: 514, baseType: !7, size: 32, elements: !169)
!168 = !DIFile(filename: "./include/scsi/scsi_host.h", directory: "/home/lizy2001/genbc/linux")
!169 = !{!170, !171, !172, !173, !174, !175, !176}
!170 = !DIEnumerator(name: "SHOST_CREATED", value: 1, isUnsigned: true)
!171 = !DIEnumerator(name: "SHOST_RUNNING", value: 2, isUnsigned: true)
!172 = !DIEnumerator(name: "SHOST_CANCEL", value: 3, isUnsigned: true)
!173 = !DIEnumerator(name: "SHOST_DEL", value: 4, isUnsigned: true)
!174 = !DIEnumerator(name: "SHOST_RECOVERY", value: 5, isUnsigned: true)
!175 = !DIEnumerator(name: "SHOST_CANCEL_RECOVERY", value: 6, isUnsigned: true)
!176 = !DIEnumerator(name: "SHOST_DEL_RECOVERY", value: 7, isUnsigned: true)
!177 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ata_completion_errors", file: !178, line: 487, baseType: !7, size: 32, elements: !179)
!178 = !DIFile(filename: "./include/linux/libata.h", directory: "/home/lizy2001/genbc/linux")
!179 = !{!180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191}
!180 = !DIEnumerator(name: "AC_ERR_OK", value: 0, isUnsigned: true)
!181 = !DIEnumerator(name: "AC_ERR_DEV", value: 1, isUnsigned: true)
!182 = !DIEnumerator(name: "AC_ERR_HSM", value: 2, isUnsigned: true)
!183 = !DIEnumerator(name: "AC_ERR_TIMEOUT", value: 4, isUnsigned: true)
!184 = !DIEnumerator(name: "AC_ERR_MEDIA", value: 8, isUnsigned: true)
!185 = !DIEnumerator(name: "AC_ERR_ATA_BUS", value: 16, isUnsigned: true)
!186 = !DIEnumerator(name: "AC_ERR_HOST_BUS", value: 32, isUnsigned: true)
!187 = !DIEnumerator(name: "AC_ERR_SYSTEM", value: 64, isUnsigned: true)
!188 = !DIEnumerator(name: "AC_ERR_INVALID", value: 128, isUnsigned: true)
!189 = !DIEnumerator(name: "AC_ERR_OTHER", value: 256, isUnsigned: true)
!190 = !DIEnumerator(name: "AC_ERR_NODEV_HINT", value: 512, isUnsigned: true)
!191 = !DIEnumerator(name: "AC_ERR_NCQ", value: 1024, isUnsigned: true)
!192 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ata_lpm_policy", file: !178, line: 506, baseType: !7, size: 32, elements: !193)
!193 = !{!194, !195, !196, !197, !198, !199}
!194 = !DIEnumerator(name: "ATA_LPM_UNKNOWN", value: 0, isUnsigned: true)
!195 = !DIEnumerator(name: "ATA_LPM_MAX_POWER", value: 1, isUnsigned: true)
!196 = !DIEnumerator(name: "ATA_LPM_MED_POWER", value: 2, isUnsigned: true)
!197 = !DIEnumerator(name: "ATA_LPM_MED_POWER_WITH_DIPM", value: 3, isUnsigned: true)
!198 = !DIEnumerator(name: "ATA_LPM_MIN_POWER_WITH_PARTIAL", value: 4, isUnsigned: true)
!199 = !DIEnumerator(name: "ATA_LPM_MIN_POWER", value: 5, isUnsigned: true)
!200 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sw_activity", file: !178, line: 544, baseType: !7, size: 32, elements: !201)
!201 = !{!202, !203, !204}
!202 = !DIEnumerator(name: "OFF", value: 0, isUnsigned: true)
!203 = !DIEnumerator(name: "BLINK_ON", value: 1, isUnsigned: true)
!204 = !DIEnumerator(name: "BLINK_OFF", value: 2, isUnsigned: true)
!205 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !178, line: 106, baseType: !206, size: 32, elements: !207)
!206 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!207 = !{!208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442}
!208 = !DIEnumerator(name: "LIBATA_MAX_PRD", value: 128)
!209 = !DIEnumerator(name: "LIBATA_DUMB_MAX_PRD", value: 64)
!210 = !DIEnumerator(name: "ATA_DEF_QUEUE", value: 1)
!211 = !DIEnumerator(name: "ATA_MAX_QUEUE", value: 32)
!212 = !DIEnumerator(name: "ATA_TAG_INTERNAL", value: 32)
!213 = !DIEnumerator(name: "ATA_SHORT_PAUSE", value: 16)
!214 = !DIEnumerator(name: "ATAPI_MAX_DRAIN", value: 16384)
!215 = !DIEnumerator(name: "ATA_ALL_DEVICES", value: 3)
!216 = !DIEnumerator(name: "ATA_SHT_EMULATED", value: 1)
!217 = !DIEnumerator(name: "ATA_SHT_THIS_ID", value: -1)
!218 = !DIEnumerator(name: "ATA_TFLAG_LBA48", value: 1)
!219 = !DIEnumerator(name: "ATA_TFLAG_ISADDR", value: 2)
!220 = !DIEnumerator(name: "ATA_TFLAG_DEVICE", value: 4)
!221 = !DIEnumerator(name: "ATA_TFLAG_WRITE", value: 8)
!222 = !DIEnumerator(name: "ATA_TFLAG_LBA", value: 16)
!223 = !DIEnumerator(name: "ATA_TFLAG_FUA", value: 32)
!224 = !DIEnumerator(name: "ATA_TFLAG_POLLING", value: 64)
!225 = !DIEnumerator(name: "ATA_DFLAG_LBA", value: 1)
!226 = !DIEnumerator(name: "ATA_DFLAG_LBA48", value: 2)
!227 = !DIEnumerator(name: "ATA_DFLAG_CDB_INTR", value: 4)
!228 = !DIEnumerator(name: "ATA_DFLAG_NCQ", value: 8)
!229 = !DIEnumerator(name: "ATA_DFLAG_FLUSH_EXT", value: 16)
!230 = !DIEnumerator(name: "ATA_DFLAG_ACPI_PENDING", value: 32)
!231 = !DIEnumerator(name: "ATA_DFLAG_ACPI_FAILED", value: 64)
!232 = !DIEnumerator(name: "ATA_DFLAG_AN", value: 128)
!233 = !DIEnumerator(name: "ATA_DFLAG_TRUSTED", value: 256)
!234 = !DIEnumerator(name: "ATA_DFLAG_DMADIR", value: 1024)
!235 = !DIEnumerator(name: "ATA_DFLAG_CFG_MASK", value: 4095)
!236 = !DIEnumerator(name: "ATA_DFLAG_PIO", value: 4096)
!237 = !DIEnumerator(name: "ATA_DFLAG_NCQ_OFF", value: 8192)
!238 = !DIEnumerator(name: "ATA_DFLAG_SLEEPING", value: 32768)
!239 = !DIEnumerator(name: "ATA_DFLAG_DUBIOUS_XFER", value: 65536)
!240 = !DIEnumerator(name: "ATA_DFLAG_NO_UNLOAD", value: 131072)
!241 = !DIEnumerator(name: "ATA_DFLAG_UNLOCK_HPA", value: 262144)
!242 = !DIEnumerator(name: "ATA_DFLAG_NCQ_SEND_RECV", value: 524288)
!243 = !DIEnumerator(name: "ATA_DFLAG_NCQ_PRIO", value: 1048576)
!244 = !DIEnumerator(name: "ATA_DFLAG_NCQ_PRIO_ENABLE", value: 2097152)
!245 = !DIEnumerator(name: "ATA_DFLAG_INIT_MASK", value: 16777215)
!246 = !DIEnumerator(name: "ATA_DFLAG_DETACH", value: 16777216)
!247 = !DIEnumerator(name: "ATA_DFLAG_DETACHED", value: 33554432)
!248 = !DIEnumerator(name: "ATA_DFLAG_DA", value: 67108864)
!249 = !DIEnumerator(name: "ATA_DFLAG_DEVSLP", value: 134217728)
!250 = !DIEnumerator(name: "ATA_DFLAG_ACPI_DISABLED", value: 268435456)
!251 = !DIEnumerator(name: "ATA_DFLAG_D_SENSE", value: 536870912)
!252 = !DIEnumerator(name: "ATA_DFLAG_ZAC", value: 1073741824)
!253 = !DIEnumerator(name: "ATA_DEV_UNKNOWN", value: 0)
!254 = !DIEnumerator(name: "ATA_DEV_ATA", value: 1)
!255 = !DIEnumerator(name: "ATA_DEV_ATA_UNSUP", value: 2)
!256 = !DIEnumerator(name: "ATA_DEV_ATAPI", value: 3)
!257 = !DIEnumerator(name: "ATA_DEV_ATAPI_UNSUP", value: 4)
!258 = !DIEnumerator(name: "ATA_DEV_PMP", value: 5)
!259 = !DIEnumerator(name: "ATA_DEV_PMP_UNSUP", value: 6)
!260 = !DIEnumerator(name: "ATA_DEV_SEMB", value: 7)
!261 = !DIEnumerator(name: "ATA_DEV_SEMB_UNSUP", value: 8)
!262 = !DIEnumerator(name: "ATA_DEV_ZAC", value: 9)
!263 = !DIEnumerator(name: "ATA_DEV_ZAC_UNSUP", value: 10)
!264 = !DIEnumerator(name: "ATA_DEV_NONE", value: 11)
!265 = !DIEnumerator(name: "ATA_LFLAG_NO_HRST", value: 2)
!266 = !DIEnumerator(name: "ATA_LFLAG_NO_SRST", value: 4)
!267 = !DIEnumerator(name: "ATA_LFLAG_ASSUME_ATA", value: 8)
!268 = !DIEnumerator(name: "ATA_LFLAG_ASSUME_SEMB", value: 16)
!269 = !DIEnumerator(name: "ATA_LFLAG_ASSUME_CLASS", value: 24)
!270 = !DIEnumerator(name: "ATA_LFLAG_NO_RETRY", value: 32)
!271 = !DIEnumerator(name: "ATA_LFLAG_DISABLED", value: 64)
!272 = !DIEnumerator(name: "ATA_LFLAG_SW_ACTIVITY", value: 128)
!273 = !DIEnumerator(name: "ATA_LFLAG_NO_LPM", value: 256)
!274 = !DIEnumerator(name: "ATA_LFLAG_RST_ONCE", value: 512)
!275 = !DIEnumerator(name: "ATA_LFLAG_CHANGED", value: 1024)
!276 = !DIEnumerator(name: "ATA_LFLAG_NO_DB_DELAY", value: 2048)
!277 = !DIEnumerator(name: "ATA_FLAG_SLAVE_POSS", value: 1)
!278 = !DIEnumerator(name: "ATA_FLAG_SATA", value: 2)
!279 = !DIEnumerator(name: "ATA_FLAG_NO_LPM", value: 4)
!280 = !DIEnumerator(name: "ATA_FLAG_NO_LOG_PAGE", value: 32)
!281 = !DIEnumerator(name: "ATA_FLAG_NO_ATAPI", value: 64)
!282 = !DIEnumerator(name: "ATA_FLAG_PIO_DMA", value: 128)
!283 = !DIEnumerator(name: "ATA_FLAG_PIO_LBA48", value: 256)
!284 = !DIEnumerator(name: "ATA_FLAG_PIO_POLLING", value: 512)
!285 = !DIEnumerator(name: "ATA_FLAG_NCQ", value: 1024)
!286 = !DIEnumerator(name: "ATA_FLAG_NO_POWEROFF_SPINDOWN", value: 2048)
!287 = !DIEnumerator(name: "ATA_FLAG_NO_HIBERNATE_SPINDOWN", value: 4096)
!288 = !DIEnumerator(name: "ATA_FLAG_DEBUGMSG", value: 8192)
!289 = !DIEnumerator(name: "ATA_FLAG_FPDMA_AA", value: 16384)
!290 = !DIEnumerator(name: "ATA_FLAG_IGN_SIMPLEX", value: 32768)
!291 = !DIEnumerator(name: "ATA_FLAG_NO_IORDY", value: 65536)
!292 = !DIEnumerator(name: "ATA_FLAG_ACPI_SATA", value: 131072)
!293 = !DIEnumerator(name: "ATA_FLAG_AN", value: 262144)
!294 = !DIEnumerator(name: "ATA_FLAG_PMP", value: 524288)
!295 = !DIEnumerator(name: "ATA_FLAG_FPDMA_AUX", value: 1048576)
!296 = !DIEnumerator(name: "ATA_FLAG_EM", value: 2097152)
!297 = !DIEnumerator(name: "ATA_FLAG_SW_ACTIVITY", value: 4194304)
!298 = !DIEnumerator(name: "ATA_FLAG_NO_DIPM", value: 8388608)
!299 = !DIEnumerator(name: "ATA_FLAG_SAS_HOST", value: 16777216)
!300 = !DIEnumerator(name: "ATA_PFLAG_EH_PENDING", value: 1)
!301 = !DIEnumerator(name: "ATA_PFLAG_EH_IN_PROGRESS", value: 2)
!302 = !DIEnumerator(name: "ATA_PFLAG_FROZEN", value: 4)
!303 = !DIEnumerator(name: "ATA_PFLAG_RECOVERED", value: 8)
!304 = !DIEnumerator(name: "ATA_PFLAG_LOADING", value: 16)
!305 = !DIEnumerator(name: "ATA_PFLAG_SCSI_HOTPLUG", value: 64)
!306 = !DIEnumerator(name: "ATA_PFLAG_INITIALIZING", value: 128)
!307 = !DIEnumerator(name: "ATA_PFLAG_RESETTING", value: 256)
!308 = !DIEnumerator(name: "ATA_PFLAG_UNLOADING", value: 512)
!309 = !DIEnumerator(name: "ATA_PFLAG_UNLOADED", value: 1024)
!310 = !DIEnumerator(name: "ATA_PFLAG_SUSPENDED", value: 131072)
!311 = !DIEnumerator(name: "ATA_PFLAG_PM_PENDING", value: 262144)
!312 = !DIEnumerator(name: "ATA_PFLAG_INIT_GTM_VALID", value: 524288)
!313 = !DIEnumerator(name: "ATA_PFLAG_PIO32", value: 1048576)
!314 = !DIEnumerator(name: "ATA_PFLAG_PIO32CHANGE", value: 2097152)
!315 = !DIEnumerator(name: "ATA_PFLAG_EXTERNAL", value: 4194304)
!316 = !DIEnumerator(name: "ATA_QCFLAG_ACTIVE", value: 1)
!317 = !DIEnumerator(name: "ATA_QCFLAG_DMAMAP", value: 2)
!318 = !DIEnumerator(name: "ATA_QCFLAG_IO", value: 8)
!319 = !DIEnumerator(name: "ATA_QCFLAG_RESULT_TF", value: 16)
!320 = !DIEnumerator(name: "ATA_QCFLAG_CLEAR_EXCL", value: 32)
!321 = !DIEnumerator(name: "ATA_QCFLAG_QUIET", value: 64)
!322 = !DIEnumerator(name: "ATA_QCFLAG_RETRY", value: 128)
!323 = !DIEnumerator(name: "ATA_QCFLAG_FAILED", value: 65536)
!324 = !DIEnumerator(name: "ATA_QCFLAG_SENSE_VALID", value: 131072)
!325 = !DIEnumerator(name: "ATA_QCFLAG_EH_SCHEDULED", value: 262144)
!326 = !DIEnumerator(name: "ATA_HOST_SIMPLEX", value: 1)
!327 = !DIEnumerator(name: "ATA_HOST_STARTED", value: 2)
!328 = !DIEnumerator(name: "ATA_HOST_PARALLEL_SCAN", value: 4)
!329 = !DIEnumerator(name: "ATA_HOST_IGNORE_ATA", value: 8)
!330 = !DIEnumerator(name: "ATA_TMOUT_BOOT", value: 30000)
!331 = !DIEnumerator(name: "ATA_TMOUT_BOOT_QUICK", value: 7000)
!332 = !DIEnumerator(name: "ATA_TMOUT_INTERNAL_QUICK", value: 5000)
!333 = !DIEnumerator(name: "ATA_TMOUT_MAX_PARK", value: 30000)
!334 = !DIEnumerator(name: "ATA_TMOUT_FF_WAIT_LONG", value: 2000)
!335 = !DIEnumerator(name: "ATA_TMOUT_FF_WAIT", value: 800)
!336 = !DIEnumerator(name: "ATA_WAIT_AFTER_RESET", value: 150)
!337 = !DIEnumerator(name: "ATA_TMOUT_PMP_SRST_WAIT", value: 5000)
!338 = !DIEnumerator(name: "ATA_TMOUT_SPURIOUS_PHY", value: 10000)
!339 = !DIEnumerator(name: "BUS_UNKNOWN", value: 0)
!340 = !DIEnumerator(name: "BUS_DMA", value: 1)
!341 = !DIEnumerator(name: "BUS_IDLE", value: 2)
!342 = !DIEnumerator(name: "BUS_NOINTR", value: 3)
!343 = !DIEnumerator(name: "BUS_NODATA", value: 4)
!344 = !DIEnumerator(name: "BUS_TIMER", value: 5)
!345 = !DIEnumerator(name: "BUS_PIO", value: 6)
!346 = !DIEnumerator(name: "BUS_EDD", value: 7)
!347 = !DIEnumerator(name: "BUS_IDENTIFY", value: 8)
!348 = !DIEnumerator(name: "BUS_PACKET", value: 9)
!349 = !DIEnumerator(name: "PORT_UNKNOWN", value: 0)
!350 = !DIEnumerator(name: "PORT_ENABLED", value: 1)
!351 = !DIEnumerator(name: "PORT_DISABLED", value: 2)
!352 = !DIEnumerator(name: "ATA_NR_PIO_MODES", value: 7)
!353 = !DIEnumerator(name: "ATA_NR_MWDMA_MODES", value: 5)
!354 = !DIEnumerator(name: "ATA_NR_UDMA_MODES", value: 8)
!355 = !DIEnumerator(name: "ATA_SHIFT_PIO", value: 0)
!356 = !DIEnumerator(name: "ATA_SHIFT_MWDMA", value: 7)
!357 = !DIEnumerator(name: "ATA_SHIFT_UDMA", value: 12)
!358 = !DIEnumerator(name: "ATA_SHIFT_PRIO", value: 6)
!359 = !DIEnumerator(name: "ATA_PRIO_HIGH", value: 2)
!360 = !DIEnumerator(name: "ATA_DMA_PAD_SZ", value: 4)
!361 = !DIEnumerator(name: "ATA_ERING_SIZE", value: 32)
!362 = !DIEnumerator(name: "ATA_DEFER_LINK", value: 1)
!363 = !DIEnumerator(name: "ATA_DEFER_PORT", value: 2)
!364 = !DIEnumerator(name: "ATA_EH_DESC_LEN", value: 80)
!365 = !DIEnumerator(name: "ATA_EH_REVALIDATE", value: 1)
!366 = !DIEnumerator(name: "ATA_EH_SOFTRESET", value: 2)
!367 = !DIEnumerator(name: "ATA_EH_HARDRESET", value: 4)
!368 = !DIEnumerator(name: "ATA_EH_RESET", value: 6)
!369 = !DIEnumerator(name: "ATA_EH_ENABLE_LINK", value: 8)
!370 = !DIEnumerator(name: "ATA_EH_PARK", value: 32)
!371 = !DIEnumerator(name: "ATA_EH_PERDEV_MASK", value: 33)
!372 = !DIEnumerator(name: "ATA_EH_ALL_ACTIONS", value: 15)
!373 = !DIEnumerator(name: "ATA_EHI_HOTPLUGGED", value: 1)
!374 = !DIEnumerator(name: "ATA_EHI_NO_AUTOPSY", value: 4)
!375 = !DIEnumerator(name: "ATA_EHI_QUIET", value: 8)
!376 = !DIEnumerator(name: "ATA_EHI_NO_RECOVERY", value: 16)
!377 = !DIEnumerator(name: "ATA_EHI_DID_SOFTRESET", value: 65536)
!378 = !DIEnumerator(name: "ATA_EHI_DID_HARDRESET", value: 131072)
!379 = !DIEnumerator(name: "ATA_EHI_PRINTINFO", value: 262144)
!380 = !DIEnumerator(name: "ATA_EHI_SETMODE", value: 524288)
!381 = !DIEnumerator(name: "ATA_EHI_POST_SETMODE", value: 1048576)
!382 = !DIEnumerator(name: "ATA_EHI_DID_RESET", value: 196608)
!383 = !DIEnumerator(name: "ATA_EHI_TO_SLAVE_MASK", value: 12)
!384 = !DIEnumerator(name: "ATA_EH_MAX_TRIES", value: 5)
!385 = !DIEnumerator(name: "ATA_LINK_RESUME_TRIES", value: 5)
!386 = !DIEnumerator(name: "ATA_PROBE_MAX_TRIES", value: 3)
!387 = !DIEnumerator(name: "ATA_EH_DEV_TRIES", value: 3)
!388 = !DIEnumerator(name: "ATA_EH_PMP_TRIES", value: 5)
!389 = !DIEnumerator(name: "ATA_EH_PMP_LINK_TRIES", value: 3)
!390 = !DIEnumerator(name: "SATA_PMP_RW_TIMEOUT", value: 3000)
!391 = !DIEnumerator(name: "ATA_EH_CMD_TIMEOUT_TABLE_SIZE", value: 6)
!392 = !DIEnumerator(name: "ATA_HORKAGE_DIAGNOSTIC", value: 1)
!393 = !DIEnumerator(name: "ATA_HORKAGE_NODMA", value: 2)
!394 = !DIEnumerator(name: "ATA_HORKAGE_NONCQ", value: 4)
!395 = !DIEnumerator(name: "ATA_HORKAGE_MAX_SEC_128", value: 8)
!396 = !DIEnumerator(name: "ATA_HORKAGE_BROKEN_HPA", value: 16)
!397 = !DIEnumerator(name: "ATA_HORKAGE_DISABLE", value: 32)
!398 = !DIEnumerator(name: "ATA_HORKAGE_HPA_SIZE", value: 64)
!399 = !DIEnumerator(name: "ATA_HORKAGE_IVB", value: 256)
!400 = !DIEnumerator(name: "ATA_HORKAGE_STUCK_ERR", value: 512)
!401 = !DIEnumerator(name: "ATA_HORKAGE_BRIDGE_OK", value: 1024)
!402 = !DIEnumerator(name: "ATA_HORKAGE_ATAPI_MOD16_DMA", value: 2048)
!403 = !DIEnumerator(name: "ATA_HORKAGE_FIRMWARE_WARN", value: 4096)
!404 = !DIEnumerator(name: "ATA_HORKAGE_1_5_GBPS", value: 8192)
!405 = !DIEnumerator(name: "ATA_HORKAGE_NOSETXFER", value: 16384)
!406 = !DIEnumerator(name: "ATA_HORKAGE_BROKEN_FPDMA_AA", value: 32768)
!407 = !DIEnumerator(name: "ATA_HORKAGE_DUMP_ID", value: 65536)
!408 = !DIEnumerator(name: "ATA_HORKAGE_MAX_SEC_LBA48", value: 131072)
!409 = !DIEnumerator(name: "ATA_HORKAGE_ATAPI_DMADIR", value: 262144)
!410 = !DIEnumerator(name: "ATA_HORKAGE_NO_NCQ_TRIM", value: 524288)
!411 = !DIEnumerator(name: "ATA_HORKAGE_NOLPM", value: 1048576)
!412 = !DIEnumerator(name: "ATA_HORKAGE_WD_BROKEN_LPM", value: 2097152)
!413 = !DIEnumerator(name: "ATA_HORKAGE_ZERO_AFTER_TRIM", value: 4194304)
!414 = !DIEnumerator(name: "ATA_HORKAGE_NO_DMA_LOG", value: 8388608)
!415 = !DIEnumerator(name: "ATA_HORKAGE_NOTRIM", value: 16777216)
!416 = !DIEnumerator(name: "ATA_HORKAGE_MAX_SEC_1024", value: 33554432)
!417 = !DIEnumerator(name: "ATA_HORKAGE_MAX_TRIM_128M", value: 67108864)
!418 = !DIEnumerator(name: "ATA_DMA_MASK_ATA", value: 1)
!419 = !DIEnumerator(name: "ATA_DMA_MASK_ATAPI", value: 2)
!420 = !DIEnumerator(name: "ATA_DMA_MASK_CFA", value: 4)
!421 = !DIEnumerator(name: "ATAPI_READ", value: 0)
!422 = !DIEnumerator(name: "ATAPI_WRITE", value: 1)
!423 = !DIEnumerator(name: "ATAPI_READ_CD", value: 2)
!424 = !DIEnumerator(name: "ATAPI_PASS_THRU", value: 3)
!425 = !DIEnumerator(name: "ATAPI_MISC", value: 4)
!426 = !DIEnumerator(name: "ATA_TIMING_SETUP", value: 1)
!427 = !DIEnumerator(name: "ATA_TIMING_ACT8B", value: 2)
!428 = !DIEnumerator(name: "ATA_TIMING_REC8B", value: 4)
!429 = !DIEnumerator(name: "ATA_TIMING_CYC8B", value: 8)
!430 = !DIEnumerator(name: "ATA_TIMING_8BIT", value: 14)
!431 = !DIEnumerator(name: "ATA_TIMING_ACTIVE", value: 16)
!432 = !DIEnumerator(name: "ATA_TIMING_RECOVER", value: 32)
!433 = !DIEnumerator(name: "ATA_TIMING_DMACK_HOLD", value: 64)
!434 = !DIEnumerator(name: "ATA_TIMING_CYCLE", value: 128)
!435 = !DIEnumerator(name: "ATA_TIMING_UDMA", value: 256)
!436 = !DIEnumerator(name: "ATA_TIMING_ALL", value: 511)
!437 = !DIEnumerator(name: "ATA_ACPI_FILTER_SETXFER", value: 1)
!438 = !DIEnumerator(name: "ATA_ACPI_FILTER_LOCK", value: 2)
!439 = !DIEnumerator(name: "ATA_ACPI_FILTER_DIPM", value: 4)
!440 = !DIEnumerator(name: "ATA_ACPI_FILTER_FPDMA_OFFSET", value: 8)
!441 = !DIEnumerator(name: "ATA_ACPI_FILTER_FPDMA_AA", value: 16)
!442 = !DIEnumerator(name: "ATA_ACPI_FILTER_DEFAULT", value: 7)
!443 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 31, baseType: !206, size: 32, elements: !444)
!444 = !{!445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467}
!445 = !DIEnumerator(name: "ATA_EH_SPDN_NCQ_OFF", value: 1)
!446 = !DIEnumerator(name: "ATA_EH_SPDN_SPEED_DOWN", value: 2)
!447 = !DIEnumerator(name: "ATA_EH_SPDN_FALLBACK_TO_PIO", value: 4)
!448 = !DIEnumerator(name: "ATA_EH_SPDN_KEEP_ERRORS", value: 8)
!449 = !DIEnumerator(name: "ATA_EFLAG_IS_IO", value: 1)
!450 = !DIEnumerator(name: "ATA_EFLAG_DUBIOUS_XFER", value: 2)
!451 = !DIEnumerator(name: "ATA_EFLAG_OLD_ER", value: -2147483648)
!452 = !DIEnumerator(name: "ATA_ECAT_NONE", value: 0)
!453 = !DIEnumerator(name: "ATA_ECAT_ATA_BUS", value: 1)
!454 = !DIEnumerator(name: "ATA_ECAT_TOUT_HSM", value: 2)
!455 = !DIEnumerator(name: "ATA_ECAT_UNK_DEV", value: 3)
!456 = !DIEnumerator(name: "ATA_ECAT_DUBIOUS_NONE", value: 4)
!457 = !DIEnumerator(name: "ATA_ECAT_DUBIOUS_ATA_BUS", value: 5)
!458 = !DIEnumerator(name: "ATA_ECAT_DUBIOUS_TOUT_HSM", value: 6)
!459 = !DIEnumerator(name: "ATA_ECAT_DUBIOUS_UNK_DEV", value: 7)
!460 = !DIEnumerator(name: "ATA_ECAT_NR", value: 8)
!461 = !DIEnumerator(name: "ATA_EH_CMD_DFL_TIMEOUT", value: 5000)
!462 = !DIEnumerator(name: "ATA_EH_RESET_COOL_DOWN", value: 5000)
!463 = !DIEnumerator(name: "ATA_EH_PRERESET_TIMEOUT", value: 10000)
!464 = !DIEnumerator(name: "ATA_EH_FASTDRAIN_INTERVAL", value: 3000)
!465 = !DIEnumerator(name: "ATA_EH_UA_TRIES", value: 5)
!466 = !DIEnumerator(name: "ATA_EH_PROBE_TRIAL_INTERVAL", value: 60000)
!467 = !DIEnumerator(name: "ATA_EH_PROBE_TRIALS", value: 2)
!468 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ata_link_iter_mode", file: !178, line: 1637, baseType: !7, size: 32, elements: !469)
!469 = !{!470, !471, !472}
!470 = !DIEnumerator(name: "ATA_LITER_EDGE", value: 0, isUnsigned: true)
!471 = !DIEnumerator(name: "ATA_LITER_HOST_FIRST", value: 1, isUnsigned: true)
!472 = !DIEnumerator(name: "ATA_LITER_PMP_FIRST", value: 2, isUnsigned: true)
!473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ata_dev_iter_mode", file: !178, line: 1645, baseType: !7, size: 32, elements: !474)
!474 = !{!475, !476, !477, !478}
!475 = !DIEnumerator(name: "ATA_DITER_ENABLED", value: 0, isUnsigned: true)
!476 = !DIEnumerator(name: "ATA_DITER_ENABLED_REVERSE", value: 1, isUnsigned: true)
!477 = !DIEnumerator(name: "ATA_DITER_ALL", value: 2, isUnsigned: true)
!478 = !DIEnumerator(name: "ATA_DITER_ALL_REVERSE", value: 3, isUnsigned: true)
!479 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !178, line: 74, baseType: !7, size: 32, elements: !480)
!480 = !{!481, !482, !483, !484, !485, !486, !487, !488}
!481 = !DIEnumerator(name: "ATA_MSG_DRV", value: 1, isUnsigned: true)
!482 = !DIEnumerator(name: "ATA_MSG_INFO", value: 2, isUnsigned: true)
!483 = !DIEnumerator(name: "ATA_MSG_PROBE", value: 4, isUnsigned: true)
!484 = !DIEnumerator(name: "ATA_MSG_WARN", value: 8, isUnsigned: true)
!485 = !DIEnumerator(name: "ATA_MSG_MALLOC", value: 16, isUnsigned: true)
!486 = !DIEnumerator(name: "ATA_MSG_CTL", value: 32, isUnsigned: true)
!487 = !DIEnumerator(name: "ATA_MSG_INTR", value: 64, isUnsigned: true)
!488 = !DIEnumerator(name: "ATA_MSG_ERR", value: 128, isUnsigned: true)
!489 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !490, line: 19, baseType: !206, size: 32, elements: !491)
!490 = !DIFile(filename: "drivers/ata/libata.h", directory: "/home/lizy2001/genbc/linux")
!491 = !{!492, !493, !494, !495, !496, !497, !498}
!492 = !DIEnumerator(name: "ATA_READID_POSTRESET", value: 1)
!493 = !DIEnumerator(name: "ATA_DNXFER_PIO", value: 0)
!494 = !DIEnumerator(name: "ATA_DNXFER_DMA", value: 1)
!495 = !DIEnumerator(name: "ATA_DNXFER_40C", value: 2)
!496 = !DIEnumerator(name: "ATA_DNXFER_FORCE_PIO", value: 3)
!497 = !DIEnumerator(name: "ATA_DNXFER_FORCE_PIO0", value: 4)
!498 = !DIEnumerator(name: "ATA_DNXFER_QUIET", value: -2147483648)
!499 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !500, line: 25, baseType: !206, size: 32, elements: !501)
!500 = !DIFile(filename: "./include/linux/ata.h", directory: "/home/lizy2001/genbc/linux")
!501 = !{!502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910}
!502 = !DIEnumerator(name: "ATA_MAX_DEVICES", value: 2)
!503 = !DIEnumerator(name: "ATA_MAX_PRD", value: 256)
!504 = !DIEnumerator(name: "ATA_SECT_SIZE", value: 512)
!505 = !DIEnumerator(name: "ATA_MAX_SECTORS_128", value: 128)
!506 = !DIEnumerator(name: "ATA_MAX_SECTORS", value: 256)
!507 = !DIEnumerator(name: "ATA_MAX_SECTORS_1024", value: 1024)
!508 = !DIEnumerator(name: "ATA_MAX_SECTORS_LBA48", value: 65535)
!509 = !DIEnumerator(name: "ATA_MAX_SECTORS_TAPE", value: 65535)
!510 = !DIEnumerator(name: "ATA_MAX_TRIM_RNUM", value: 64)
!511 = !DIEnumerator(name: "ATA_ID_WORDS", value: 256)
!512 = !DIEnumerator(name: "ATA_ID_CONFIG", value: 0)
!513 = !DIEnumerator(name: "ATA_ID_CYLS", value: 1)
!514 = !DIEnumerator(name: "ATA_ID_HEADS", value: 3)
!515 = !DIEnumerator(name: "ATA_ID_SECTORS", value: 6)
!516 = !DIEnumerator(name: "ATA_ID_SERNO", value: 10)
!517 = !DIEnumerator(name: "ATA_ID_BUF_SIZE", value: 21)
!518 = !DIEnumerator(name: "ATA_ID_FW_REV", value: 23)
!519 = !DIEnumerator(name: "ATA_ID_PROD", value: 27)
!520 = !DIEnumerator(name: "ATA_ID_MAX_MULTSECT", value: 47)
!521 = !DIEnumerator(name: "ATA_ID_DWORD_IO", value: 48)
!522 = !DIEnumerator(name: "ATA_ID_TRUSTED", value: 48)
!523 = !DIEnumerator(name: "ATA_ID_CAPABILITY", value: 49)
!524 = !DIEnumerator(name: "ATA_ID_OLD_PIO_MODES", value: 51)
!525 = !DIEnumerator(name: "ATA_ID_OLD_DMA_MODES", value: 52)
!526 = !DIEnumerator(name: "ATA_ID_FIELD_VALID", value: 53)
!527 = !DIEnumerator(name: "ATA_ID_CUR_CYLS", value: 54)
!528 = !DIEnumerator(name: "ATA_ID_CUR_HEADS", value: 55)
!529 = !DIEnumerator(name: "ATA_ID_CUR_SECTORS", value: 56)
!530 = !DIEnumerator(name: "ATA_ID_MULTSECT", value: 59)
!531 = !DIEnumerator(name: "ATA_ID_LBA_CAPACITY", value: 60)
!532 = !DIEnumerator(name: "ATA_ID_SWDMA_MODES", value: 62)
!533 = !DIEnumerator(name: "ATA_ID_MWDMA_MODES", value: 63)
!534 = !DIEnumerator(name: "ATA_ID_PIO_MODES", value: 64)
!535 = !DIEnumerator(name: "ATA_ID_EIDE_DMA_MIN", value: 65)
!536 = !DIEnumerator(name: "ATA_ID_EIDE_DMA_TIME", value: 66)
!537 = !DIEnumerator(name: "ATA_ID_EIDE_PIO", value: 67)
!538 = !DIEnumerator(name: "ATA_ID_EIDE_PIO_IORDY", value: 68)
!539 = !DIEnumerator(name: "ATA_ID_ADDITIONAL_SUPP", value: 69)
!540 = !DIEnumerator(name: "ATA_ID_QUEUE_DEPTH", value: 75)
!541 = !DIEnumerator(name: "ATA_ID_SATA_CAPABILITY", value: 76)
!542 = !DIEnumerator(name: "ATA_ID_SATA_CAPABILITY_2", value: 77)
!543 = !DIEnumerator(name: "ATA_ID_FEATURE_SUPP", value: 78)
!544 = !DIEnumerator(name: "ATA_ID_MAJOR_VER", value: 80)
!545 = !DIEnumerator(name: "ATA_ID_COMMAND_SET_1", value: 82)
!546 = !DIEnumerator(name: "ATA_ID_COMMAND_SET_2", value: 83)
!547 = !DIEnumerator(name: "ATA_ID_CFSSE", value: 84)
!548 = !DIEnumerator(name: "ATA_ID_CFS_ENABLE_1", value: 85)
!549 = !DIEnumerator(name: "ATA_ID_CFS_ENABLE_2", value: 86)
!550 = !DIEnumerator(name: "ATA_ID_CSF_DEFAULT", value: 87)
!551 = !DIEnumerator(name: "ATA_ID_UDMA_MODES", value: 88)
!552 = !DIEnumerator(name: "ATA_ID_HW_CONFIG", value: 93)
!553 = !DIEnumerator(name: "ATA_ID_SPG", value: 98)
!554 = !DIEnumerator(name: "ATA_ID_LBA_CAPACITY_2", value: 100)
!555 = !DIEnumerator(name: "ATA_ID_SECTOR_SIZE", value: 106)
!556 = !DIEnumerator(name: "ATA_ID_WWN", value: 108)
!557 = !DIEnumerator(name: "ATA_ID_LOGICAL_SECTOR_SIZE", value: 117)
!558 = !DIEnumerator(name: "ATA_ID_COMMAND_SET_3", value: 119)
!559 = !DIEnumerator(name: "ATA_ID_COMMAND_SET_4", value: 120)
!560 = !DIEnumerator(name: "ATA_ID_LAST_LUN", value: 126)
!561 = !DIEnumerator(name: "ATA_ID_DLF", value: 128)
!562 = !DIEnumerator(name: "ATA_ID_CSFO", value: 129)
!563 = !DIEnumerator(name: "ATA_ID_CFA_POWER", value: 160)
!564 = !DIEnumerator(name: "ATA_ID_CFA_KEY_MGMT", value: 162)
!565 = !DIEnumerator(name: "ATA_ID_CFA_MODES", value: 163)
!566 = !DIEnumerator(name: "ATA_ID_DATA_SET_MGMT", value: 169)
!567 = !DIEnumerator(name: "ATA_ID_SCT_CMD_XPORT", value: 206)
!568 = !DIEnumerator(name: "ATA_ID_ROT_SPEED", value: 217)
!569 = !DIEnumerator(name: "ATA_ID_PIO4", value: 2)
!570 = !DIEnumerator(name: "ATA_ID_SERNO_LEN", value: 20)
!571 = !DIEnumerator(name: "ATA_ID_FW_REV_LEN", value: 8)
!572 = !DIEnumerator(name: "ATA_ID_PROD_LEN", value: 40)
!573 = !DIEnumerator(name: "ATA_ID_WWN_LEN", value: 8)
!574 = !DIEnumerator(name: "ATA_PCI_CTL_OFS", value: 2)
!575 = !DIEnumerator(name: "ATA_PIO0", value: 1)
!576 = !DIEnumerator(name: "ATA_PIO1", value: 3)
!577 = !DIEnumerator(name: "ATA_PIO2", value: 7)
!578 = !DIEnumerator(name: "ATA_PIO3", value: 15)
!579 = !DIEnumerator(name: "ATA_PIO4", value: 31)
!580 = !DIEnumerator(name: "ATA_PIO5", value: 63)
!581 = !DIEnumerator(name: "ATA_PIO6", value: 127)
!582 = !DIEnumerator(name: "ATA_PIO4_ONLY", value: 16)
!583 = !DIEnumerator(name: "ATA_SWDMA0", value: 1)
!584 = !DIEnumerator(name: "ATA_SWDMA1", value: 3)
!585 = !DIEnumerator(name: "ATA_SWDMA2", value: 7)
!586 = !DIEnumerator(name: "ATA_SWDMA2_ONLY", value: 4)
!587 = !DIEnumerator(name: "ATA_MWDMA0", value: 1)
!588 = !DIEnumerator(name: "ATA_MWDMA1", value: 3)
!589 = !DIEnumerator(name: "ATA_MWDMA2", value: 7)
!590 = !DIEnumerator(name: "ATA_MWDMA3", value: 15)
!591 = !DIEnumerator(name: "ATA_MWDMA4", value: 31)
!592 = !DIEnumerator(name: "ATA_MWDMA12_ONLY", value: 6)
!593 = !DIEnumerator(name: "ATA_MWDMA2_ONLY", value: 4)
!594 = !DIEnumerator(name: "ATA_UDMA0", value: 1)
!595 = !DIEnumerator(name: "ATA_UDMA1", value: 3)
!596 = !DIEnumerator(name: "ATA_UDMA2", value: 7)
!597 = !DIEnumerator(name: "ATA_UDMA3", value: 15)
!598 = !DIEnumerator(name: "ATA_UDMA4", value: 31)
!599 = !DIEnumerator(name: "ATA_UDMA5", value: 63)
!600 = !DIEnumerator(name: "ATA_UDMA6", value: 127)
!601 = !DIEnumerator(name: "ATA_UDMA7", value: 255)
!602 = !DIEnumerator(name: "ATA_UDMA24_ONLY", value: 20)
!603 = !DIEnumerator(name: "ATA_UDMA_MASK_40C", value: 7)
!604 = !DIEnumerator(name: "ATA_PRD_SZ", value: 8)
!605 = !DIEnumerator(name: "ATA_PRD_TBL_SZ", value: 2048)
!606 = !DIEnumerator(name: "ATA_PRD_EOT", value: -2147483648)
!607 = !DIEnumerator(name: "ATA_DMA_TABLE_OFS", value: 4)
!608 = !DIEnumerator(name: "ATA_DMA_STATUS", value: 2)
!609 = !DIEnumerator(name: "ATA_DMA_CMD", value: 0)
!610 = !DIEnumerator(name: "ATA_DMA_WR", value: 8)
!611 = !DIEnumerator(name: "ATA_DMA_START", value: 1)
!612 = !DIEnumerator(name: "ATA_DMA_INTR", value: 4)
!613 = !DIEnumerator(name: "ATA_DMA_ERR", value: 2)
!614 = !DIEnumerator(name: "ATA_DMA_ACTIVE", value: 1)
!615 = !DIEnumerator(name: "ATA_HOB", value: 128)
!616 = !DIEnumerator(name: "ATA_NIEN", value: 2)
!617 = !DIEnumerator(name: "ATA_LBA", value: 64)
!618 = !DIEnumerator(name: "ATA_DEV1", value: 16)
!619 = !DIEnumerator(name: "ATA_DEVICE_OBS", value: 160)
!620 = !DIEnumerator(name: "ATA_DEVCTL_OBS", value: 8)
!621 = !DIEnumerator(name: "ATA_BUSY", value: 128)
!622 = !DIEnumerator(name: "ATA_DRDY", value: 64)
!623 = !DIEnumerator(name: "ATA_DF", value: 32)
!624 = !DIEnumerator(name: "ATA_DSC", value: 16)
!625 = !DIEnumerator(name: "ATA_DRQ", value: 8)
!626 = !DIEnumerator(name: "ATA_CORR", value: 4)
!627 = !DIEnumerator(name: "ATA_SENSE", value: 2)
!628 = !DIEnumerator(name: "ATA_ERR", value: 1)
!629 = !DIEnumerator(name: "ATA_SRST", value: 4)
!630 = !DIEnumerator(name: "ATA_ICRC", value: 128)
!631 = !DIEnumerator(name: "ATA_BBK", value: 128)
!632 = !DIEnumerator(name: "ATA_UNC", value: 64)
!633 = !DIEnumerator(name: "ATA_MC", value: 32)
!634 = !DIEnumerator(name: "ATA_IDNF", value: 16)
!635 = !DIEnumerator(name: "ATA_MCR", value: 8)
!636 = !DIEnumerator(name: "ATA_ABORTED", value: 4)
!637 = !DIEnumerator(name: "ATA_TRK0NF", value: 2)
!638 = !DIEnumerator(name: "ATA_AMNF", value: 1)
!639 = !DIEnumerator(name: "ATAPI_LFS", value: 240)
!640 = !DIEnumerator(name: "ATAPI_EOM", value: 2)
!641 = !DIEnumerator(name: "ATAPI_ILI", value: 1)
!642 = !DIEnumerator(name: "ATAPI_IO", value: 2)
!643 = !DIEnumerator(name: "ATAPI_COD", value: 1)
!644 = !DIEnumerator(name: "ATA_REG_DATA", value: 0)
!645 = !DIEnumerator(name: "ATA_REG_ERR", value: 1)
!646 = !DIEnumerator(name: "ATA_REG_NSECT", value: 2)
!647 = !DIEnumerator(name: "ATA_REG_LBAL", value: 3)
!648 = !DIEnumerator(name: "ATA_REG_LBAM", value: 4)
!649 = !DIEnumerator(name: "ATA_REG_LBAH", value: 5)
!650 = !DIEnumerator(name: "ATA_REG_DEVICE", value: 6)
!651 = !DIEnumerator(name: "ATA_REG_STATUS", value: 7)
!652 = !DIEnumerator(name: "ATA_REG_FEATURE", value: 1)
!653 = !DIEnumerator(name: "ATA_REG_CMD", value: 7)
!654 = !DIEnumerator(name: "ATA_REG_BYTEL", value: 4)
!655 = !DIEnumerator(name: "ATA_REG_BYTEH", value: 5)
!656 = !DIEnumerator(name: "ATA_REG_DEVSEL", value: 6)
!657 = !DIEnumerator(name: "ATA_REG_IRQ", value: 2)
!658 = !DIEnumerator(name: "ATA_CMD_DEV_RESET", value: 8)
!659 = !DIEnumerator(name: "ATA_CMD_CHK_POWER", value: 229)
!660 = !DIEnumerator(name: "ATA_CMD_STANDBY", value: 226)
!661 = !DIEnumerator(name: "ATA_CMD_IDLE", value: 227)
!662 = !DIEnumerator(name: "ATA_CMD_EDD", value: 144)
!663 = !DIEnumerator(name: "ATA_CMD_DOWNLOAD_MICRO", value: 146)
!664 = !DIEnumerator(name: "ATA_CMD_DOWNLOAD_MICRO_DMA", value: 147)
!665 = !DIEnumerator(name: "ATA_CMD_NOP", value: 0)
!666 = !DIEnumerator(name: "ATA_CMD_FLUSH", value: 231)
!667 = !DIEnumerator(name: "ATA_CMD_FLUSH_EXT", value: 234)
!668 = !DIEnumerator(name: "ATA_CMD_ID_ATA", value: 236)
!669 = !DIEnumerator(name: "ATA_CMD_ID_ATAPI", value: 161)
!670 = !DIEnumerator(name: "ATA_CMD_SERVICE", value: 162)
!671 = !DIEnumerator(name: "ATA_CMD_READ", value: 200)
!672 = !DIEnumerator(name: "ATA_CMD_READ_EXT", value: 37)
!673 = !DIEnumerator(name: "ATA_CMD_READ_QUEUED", value: 38)
!674 = !DIEnumerator(name: "ATA_CMD_READ_STREAM_EXT", value: 43)
!675 = !DIEnumerator(name: "ATA_CMD_READ_STREAM_DMA_EXT", value: 42)
!676 = !DIEnumerator(name: "ATA_CMD_WRITE", value: 202)
!677 = !DIEnumerator(name: "ATA_CMD_WRITE_EXT", value: 53)
!678 = !DIEnumerator(name: "ATA_CMD_WRITE_QUEUED", value: 54)
!679 = !DIEnumerator(name: "ATA_CMD_WRITE_STREAM_EXT", value: 59)
!680 = !DIEnumerator(name: "ATA_CMD_WRITE_STREAM_DMA_EXT", value: 58)
!681 = !DIEnumerator(name: "ATA_CMD_WRITE_FUA_EXT", value: 61)
!682 = !DIEnumerator(name: "ATA_CMD_WRITE_QUEUED_FUA_EXT", value: 62)
!683 = !DIEnumerator(name: "ATA_CMD_FPDMA_READ", value: 96)
!684 = !DIEnumerator(name: "ATA_CMD_FPDMA_WRITE", value: 97)
!685 = !DIEnumerator(name: "ATA_CMD_NCQ_NON_DATA", value: 99)
!686 = !DIEnumerator(name: "ATA_CMD_FPDMA_SEND", value: 100)
!687 = !DIEnumerator(name: "ATA_CMD_FPDMA_RECV", value: 101)
!688 = !DIEnumerator(name: "ATA_CMD_PIO_READ", value: 32)
!689 = !DIEnumerator(name: "ATA_CMD_PIO_READ_EXT", value: 36)
!690 = !DIEnumerator(name: "ATA_CMD_PIO_WRITE", value: 48)
!691 = !DIEnumerator(name: "ATA_CMD_PIO_WRITE_EXT", value: 52)
!692 = !DIEnumerator(name: "ATA_CMD_READ_MULTI", value: 196)
!693 = !DIEnumerator(name: "ATA_CMD_READ_MULTI_EXT", value: 41)
!694 = !DIEnumerator(name: "ATA_CMD_WRITE_MULTI", value: 197)
!695 = !DIEnumerator(name: "ATA_CMD_WRITE_MULTI_EXT", value: 57)
!696 = !DIEnumerator(name: "ATA_CMD_WRITE_MULTI_FUA_EXT", value: 206)
!697 = !DIEnumerator(name: "ATA_CMD_SET_FEATURES", value: 239)
!698 = !DIEnumerator(name: "ATA_CMD_SET_MULTI", value: 198)
!699 = !DIEnumerator(name: "ATA_CMD_PACKET", value: 160)
!700 = !DIEnumerator(name: "ATA_CMD_VERIFY", value: 64)
!701 = !DIEnumerator(name: "ATA_CMD_VERIFY_EXT", value: 66)
!702 = !DIEnumerator(name: "ATA_CMD_WRITE_UNCORR_EXT", value: 69)
!703 = !DIEnumerator(name: "ATA_CMD_STANDBYNOW1", value: 224)
!704 = !DIEnumerator(name: "ATA_CMD_IDLEIMMEDIATE", value: 225)
!705 = !DIEnumerator(name: "ATA_CMD_SLEEP", value: 230)
!706 = !DIEnumerator(name: "ATA_CMD_INIT_DEV_PARAMS", value: 145)
!707 = !DIEnumerator(name: "ATA_CMD_READ_NATIVE_MAX", value: 248)
!708 = !DIEnumerator(name: "ATA_CMD_READ_NATIVE_MAX_EXT", value: 39)
!709 = !DIEnumerator(name: "ATA_CMD_SET_MAX", value: 249)
!710 = !DIEnumerator(name: "ATA_CMD_SET_MAX_EXT", value: 55)
!711 = !DIEnumerator(name: "ATA_CMD_READ_LOG_EXT", value: 47)
!712 = !DIEnumerator(name: "ATA_CMD_WRITE_LOG_EXT", value: 63)
!713 = !DIEnumerator(name: "ATA_CMD_READ_LOG_DMA_EXT", value: 71)
!714 = !DIEnumerator(name: "ATA_CMD_WRITE_LOG_DMA_EXT", value: 87)
!715 = !DIEnumerator(name: "ATA_CMD_TRUSTED_NONDATA", value: 91)
!716 = !DIEnumerator(name: "ATA_CMD_TRUSTED_RCV", value: 92)
!717 = !DIEnumerator(name: "ATA_CMD_TRUSTED_RCV_DMA", value: 93)
!718 = !DIEnumerator(name: "ATA_CMD_TRUSTED_SND", value: 94)
!719 = !DIEnumerator(name: "ATA_CMD_TRUSTED_SND_DMA", value: 95)
!720 = !DIEnumerator(name: "ATA_CMD_PMP_READ", value: 228)
!721 = !DIEnumerator(name: "ATA_CMD_PMP_READ_DMA", value: 233)
!722 = !DIEnumerator(name: "ATA_CMD_PMP_WRITE", value: 232)
!723 = !DIEnumerator(name: "ATA_CMD_PMP_WRITE_DMA", value: 235)
!724 = !DIEnumerator(name: "ATA_CMD_CONF_OVERLAY", value: 177)
!725 = !DIEnumerator(name: "ATA_CMD_SEC_SET_PASS", value: 241)
!726 = !DIEnumerator(name: "ATA_CMD_SEC_UNLOCK", value: 242)
!727 = !DIEnumerator(name: "ATA_CMD_SEC_ERASE_PREP", value: 243)
!728 = !DIEnumerator(name: "ATA_CMD_SEC_ERASE_UNIT", value: 244)
!729 = !DIEnumerator(name: "ATA_CMD_SEC_FREEZE_LOCK", value: 245)
!730 = !DIEnumerator(name: "ATA_CMD_SEC_DISABLE_PASS", value: 246)
!731 = !DIEnumerator(name: "ATA_CMD_CONFIG_STREAM", value: 81)
!732 = !DIEnumerator(name: "ATA_CMD_SMART", value: 176)
!733 = !DIEnumerator(name: "ATA_CMD_MEDIA_LOCK", value: 222)
!734 = !DIEnumerator(name: "ATA_CMD_MEDIA_UNLOCK", value: 223)
!735 = !DIEnumerator(name: "ATA_CMD_DSM", value: 6)
!736 = !DIEnumerator(name: "ATA_CMD_CHK_MED_CRD_TYP", value: 209)
!737 = !DIEnumerator(name: "ATA_CMD_CFA_REQ_EXT_ERR", value: 3)
!738 = !DIEnumerator(name: "ATA_CMD_CFA_WRITE_NE", value: 56)
!739 = !DIEnumerator(name: "ATA_CMD_CFA_TRANS_SECT", value: 135)
!740 = !DIEnumerator(name: "ATA_CMD_CFA_ERASE", value: 192)
!741 = !DIEnumerator(name: "ATA_CMD_CFA_WRITE_MULT_NE", value: 205)
!742 = !DIEnumerator(name: "ATA_CMD_REQ_SENSE_DATA", value: 11)
!743 = !DIEnumerator(name: "ATA_CMD_SANITIZE_DEVICE", value: 180)
!744 = !DIEnumerator(name: "ATA_CMD_ZAC_MGMT_IN", value: 74)
!745 = !DIEnumerator(name: "ATA_CMD_ZAC_MGMT_OUT", value: 159)
!746 = !DIEnumerator(name: "ATA_CMD_RESTORE", value: 16)
!747 = !DIEnumerator(name: "ATA_SUBCMD_FPDMA_RECV_RD_LOG_DMA_EXT", value: 1)
!748 = !DIEnumerator(name: "ATA_SUBCMD_FPDMA_RECV_ZAC_MGMT_IN", value: 2)
!749 = !DIEnumerator(name: "ATA_SUBCMD_FPDMA_SEND_DSM", value: 0)
!750 = !DIEnumerator(name: "ATA_SUBCMD_FPDMA_SEND_WR_LOG_DMA_EXT", value: 2)
!751 = !DIEnumerator(name: "ATA_SUBCMD_NCQ_NON_DATA_ABORT_QUEUE", value: 0)
!752 = !DIEnumerator(name: "ATA_SUBCMD_NCQ_NON_DATA_SET_FEATURES", value: 5)
!753 = !DIEnumerator(name: "ATA_SUBCMD_NCQ_NON_DATA_ZERO_EXT", value: 6)
!754 = !DIEnumerator(name: "ATA_SUBCMD_NCQ_NON_DATA_ZAC_MGMT_OUT", value: 7)
!755 = !DIEnumerator(name: "ATA_SUBCMD_ZAC_MGMT_IN_REPORT_ZONES", value: 0)
!756 = !DIEnumerator(name: "ATA_SUBCMD_ZAC_MGMT_OUT_CLOSE_ZONE", value: 1)
!757 = !DIEnumerator(name: "ATA_SUBCMD_ZAC_MGMT_OUT_FINISH_ZONE", value: 2)
!758 = !DIEnumerator(name: "ATA_SUBCMD_ZAC_MGMT_OUT_OPEN_ZONE", value: 3)
!759 = !DIEnumerator(name: "ATA_SUBCMD_ZAC_MGMT_OUT_RESET_WRITE_POINTER", value: 4)
!760 = !DIEnumerator(name: "ATA_LOG_DIRECTORY", value: 0)
!761 = !DIEnumerator(name: "ATA_LOG_SATA_NCQ", value: 16)
!762 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA", value: 18)
!763 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV", value: 19)
!764 = !DIEnumerator(name: "ATA_LOG_IDENTIFY_DEVICE", value: 48)
!765 = !DIEnumerator(name: "ATA_LOG_SECURITY", value: 6)
!766 = !DIEnumerator(name: "ATA_LOG_SATA_SETTINGS", value: 8)
!767 = !DIEnumerator(name: "ATA_LOG_ZONED_INFORMATION", value: 9)
!768 = !DIEnumerator(name: "ATA_LOG_DEVSLP_OFFSET", value: 48)
!769 = !DIEnumerator(name: "ATA_LOG_DEVSLP_SIZE", value: 8)
!770 = !DIEnumerator(name: "ATA_LOG_DEVSLP_MDAT", value: 0)
!771 = !DIEnumerator(name: "ATA_LOG_DEVSLP_MDAT_MASK", value: 31)
!772 = !DIEnumerator(name: "ATA_LOG_DEVSLP_DETO", value: 1)
!773 = !DIEnumerator(name: "ATA_LOG_DEVSLP_VALID", value: 7)
!774 = !DIEnumerator(name: "ATA_LOG_DEVSLP_VALID_MASK", value: 128)
!775 = !DIEnumerator(name: "ATA_LOG_NCQ_PRIO_OFFSET", value: 9)
!776 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_SUBCMDS_OFFSET", value: 0)
!777 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_SUBCMDS_DSM", value: 1)
!778 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_DSM_OFFSET", value: 4)
!779 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_DSM_TRIM", value: 1)
!780 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_RD_LOG_OFFSET", value: 8)
!781 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_RD_LOG_SUPPORTED", value: 1)
!782 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_WR_LOG_OFFSET", value: 12)
!783 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_WR_LOG_SUPPORTED", value: 1)
!784 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_ZAC_MGMT_OFFSET", value: 16)
!785 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_ZAC_MGMT_OUT_SUPPORTED", value: 1)
!786 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_ZAC_MGMT_IN_SUPPORTED", value: 2)
!787 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_SIZE", value: 20)
!788 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_SUBCMDS_OFFSET", value: 0)
!789 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_OFFSET", value: 0)
!790 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_NCQ", value: 1)
!791 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_ALL", value: 2)
!792 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_STREAMING", value: 4)
!793 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_NON_STREAMING", value: 8)
!794 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_SELECTED", value: 16)
!795 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ZAC_MGMT_OFFSET", value: 28)
!796 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ZAC_MGMT_OUT", value: 1)
!797 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_SIZE", value: 64)
!798 = !DIEnumerator(name: "ATA_CMD_READ_LONG", value: 34)
!799 = !DIEnumerator(name: "ATA_CMD_READ_LONG_ONCE", value: 35)
!800 = !DIEnumerator(name: "ATA_CMD_WRITE_LONG", value: 50)
!801 = !DIEnumerator(name: "ATA_CMD_WRITE_LONG_ONCE", value: 51)
!802 = !DIEnumerator(name: "SETFEATURES_XFER", value: 3)
!803 = !DIEnumerator(name: "XFER_UDMA_7", value: 71)
!804 = !DIEnumerator(name: "XFER_UDMA_6", value: 70)
!805 = !DIEnumerator(name: "XFER_UDMA_5", value: 69)
!806 = !DIEnumerator(name: "XFER_UDMA_4", value: 68)
!807 = !DIEnumerator(name: "XFER_UDMA_3", value: 67)
!808 = !DIEnumerator(name: "XFER_UDMA_2", value: 66)
!809 = !DIEnumerator(name: "XFER_UDMA_1", value: 65)
!810 = !DIEnumerator(name: "XFER_UDMA_0", value: 64)
!811 = !DIEnumerator(name: "XFER_MW_DMA_4", value: 36)
!812 = !DIEnumerator(name: "XFER_MW_DMA_3", value: 35)
!813 = !DIEnumerator(name: "XFER_MW_DMA_2", value: 34)
!814 = !DIEnumerator(name: "XFER_MW_DMA_1", value: 33)
!815 = !DIEnumerator(name: "XFER_MW_DMA_0", value: 32)
!816 = !DIEnumerator(name: "XFER_SW_DMA_2", value: 18)
!817 = !DIEnumerator(name: "XFER_SW_DMA_1", value: 17)
!818 = !DIEnumerator(name: "XFER_SW_DMA_0", value: 16)
!819 = !DIEnumerator(name: "XFER_PIO_6", value: 14)
!820 = !DIEnumerator(name: "XFER_PIO_5", value: 13)
!821 = !DIEnumerator(name: "XFER_PIO_4", value: 12)
!822 = !DIEnumerator(name: "XFER_PIO_3", value: 11)
!823 = !DIEnumerator(name: "XFER_PIO_2", value: 10)
!824 = !DIEnumerator(name: "XFER_PIO_1", value: 9)
!825 = !DIEnumerator(name: "XFER_PIO_0", value: 8)
!826 = !DIEnumerator(name: "XFER_PIO_SLOW", value: 0)
!827 = !DIEnumerator(name: "SETFEATURES_WC_ON", value: 2)
!828 = !DIEnumerator(name: "SETFEATURES_WC_OFF", value: 130)
!829 = !DIEnumerator(name: "SETFEATURES_RA_ON", value: 170)
!830 = !DIEnumerator(name: "SETFEATURES_RA_OFF", value: 85)
!831 = !DIEnumerator(name: "SETFEATURES_AAM_ON", value: 66)
!832 = !DIEnumerator(name: "SETFEATURES_AAM_OFF", value: 194)
!833 = !DIEnumerator(name: "SETFEATURES_SPINUP", value: 7)
!834 = !DIEnumerator(name: "SETFEATURES_SPINUP_TIMEOUT", value: 30000)
!835 = !DIEnumerator(name: "SETFEATURES_SATA_ENABLE", value: 16)
!836 = !DIEnumerator(name: "SETFEATURES_SATA_DISABLE", value: 144)
!837 = !DIEnumerator(name: "SATA_FPDMA_OFFSET", value: 1)
!838 = !DIEnumerator(name: "SATA_FPDMA_AA", value: 2)
!839 = !DIEnumerator(name: "SATA_DIPM", value: 3)
!840 = !DIEnumerator(name: "SATA_FPDMA_IN_ORDER", value: 4)
!841 = !DIEnumerator(name: "SATA_AN", value: 5)
!842 = !DIEnumerator(name: "SATA_SSP", value: 6)
!843 = !DIEnumerator(name: "SATA_DEVSLP", value: 9)
!844 = !DIEnumerator(name: "SETFEATURE_SENSE_DATA", value: 195)
!845 = !DIEnumerator(name: "ATA_SET_MAX_ADDR", value: 0)
!846 = !DIEnumerator(name: "ATA_SET_MAX_PASSWD", value: 1)
!847 = !DIEnumerator(name: "ATA_SET_MAX_LOCK", value: 2)
!848 = !DIEnumerator(name: "ATA_SET_MAX_UNLOCK", value: 3)
!849 = !DIEnumerator(name: "ATA_SET_MAX_FREEZE_LOCK", value: 4)
!850 = !DIEnumerator(name: "ATA_SET_MAX_PASSWD_DMA", value: 5)
!851 = !DIEnumerator(name: "ATA_SET_MAX_UNLOCK_DMA", value: 6)
!852 = !DIEnumerator(name: "ATA_DCO_RESTORE", value: 192)
!853 = !DIEnumerator(name: "ATA_DCO_FREEZE_LOCK", value: 193)
!854 = !DIEnumerator(name: "ATA_DCO_IDENTIFY", value: 194)
!855 = !DIEnumerator(name: "ATA_DCO_SET", value: 195)
!856 = !DIEnumerator(name: "ATA_SMART_ENABLE", value: 216)
!857 = !DIEnumerator(name: "ATA_SMART_READ_VALUES", value: 208)
!858 = !DIEnumerator(name: "ATA_SMART_READ_THRESHOLDS", value: 209)
!859 = !DIEnumerator(name: "ATA_DSM_TRIM", value: 1)
!860 = !DIEnumerator(name: "ATA_SMART_LBAM_PASS", value: 79)
!861 = !DIEnumerator(name: "ATA_SMART_LBAH_PASS", value: 194)
!862 = !DIEnumerator(name: "ATAPI_PKT_DMA", value: 1)
!863 = !DIEnumerator(name: "ATAPI_DMADIR", value: 4)
!864 = !DIEnumerator(name: "ATAPI_CDB_LEN", value: 16)
!865 = !DIEnumerator(name: "SATA_PMP_MAX_PORTS", value: 15)
!866 = !DIEnumerator(name: "SATA_PMP_CTRL_PORT", value: 15)
!867 = !DIEnumerator(name: "SATA_PMP_GSCR_DWORDS", value: 128)
!868 = !DIEnumerator(name: "SATA_PMP_GSCR_PROD_ID", value: 0)
!869 = !DIEnumerator(name: "SATA_PMP_GSCR_REV", value: 1)
!870 = !DIEnumerator(name: "SATA_PMP_GSCR_PORT_INFO", value: 2)
!871 = !DIEnumerator(name: "SATA_PMP_GSCR_ERROR", value: 32)
!872 = !DIEnumerator(name: "SATA_PMP_GSCR_ERROR_EN", value: 33)
!873 = !DIEnumerator(name: "SATA_PMP_GSCR_FEAT", value: 64)
!874 = !DIEnumerator(name: "SATA_PMP_GSCR_FEAT_EN", value: 96)
!875 = !DIEnumerator(name: "SATA_PMP_PSCR_STATUS", value: 0)
!876 = !DIEnumerator(name: "SATA_PMP_PSCR_ERROR", value: 1)
!877 = !DIEnumerator(name: "SATA_PMP_PSCR_CONTROL", value: 2)
!878 = !DIEnumerator(name: "SATA_PMP_FEAT_BIST", value: 1)
!879 = !DIEnumerator(name: "SATA_PMP_FEAT_PMREQ", value: 2)
!880 = !DIEnumerator(name: "SATA_PMP_FEAT_DYNSSC", value: 4)
!881 = !DIEnumerator(name: "SATA_PMP_FEAT_NOTIFY", value: 8)
!882 = !DIEnumerator(name: "ATA_CBL_NONE", value: 0)
!883 = !DIEnumerator(name: "ATA_CBL_PATA40", value: 1)
!884 = !DIEnumerator(name: "ATA_CBL_PATA80", value: 2)
!885 = !DIEnumerator(name: "ATA_CBL_PATA40_SHORT", value: 3)
!886 = !DIEnumerator(name: "ATA_CBL_PATA_UNK", value: 4)
!887 = !DIEnumerator(name: "ATA_CBL_PATA_IGN", value: 5)
!888 = !DIEnumerator(name: "ATA_CBL_SATA", value: 6)
!889 = !DIEnumerator(name: "SCR_STATUS", value: 0)
!890 = !DIEnumerator(name: "SCR_ERROR", value: 1)
!891 = !DIEnumerator(name: "SCR_CONTROL", value: 2)
!892 = !DIEnumerator(name: "SCR_ACTIVE", value: 3)
!893 = !DIEnumerator(name: "SCR_NOTIFICATION", value: 4)
!894 = !DIEnumerator(name: "SERR_DATA_RECOVERED", value: 1)
!895 = !DIEnumerator(name: "SERR_COMM_RECOVERED", value: 2)
!896 = !DIEnumerator(name: "SERR_DATA", value: 256)
!897 = !DIEnumerator(name: "SERR_PERSISTENT", value: 512)
!898 = !DIEnumerator(name: "SERR_PROTOCOL", value: 1024)
!899 = !DIEnumerator(name: "SERR_INTERNAL", value: 2048)
!900 = !DIEnumerator(name: "SERR_PHYRDY_CHG", value: 65536)
!901 = !DIEnumerator(name: "SERR_PHY_INT_ERR", value: 131072)
!902 = !DIEnumerator(name: "SERR_COMM_WAKE", value: 262144)
!903 = !DIEnumerator(name: "SERR_10B_8B_ERR", value: 524288)
!904 = !DIEnumerator(name: "SERR_DISPARITY", value: 1048576)
!905 = !DIEnumerator(name: "SERR_CRC", value: 2097152)
!906 = !DIEnumerator(name: "SERR_HANDSHAKE", value: 4194304)
!907 = !DIEnumerator(name: "SERR_LINK_SEQ_ERR", value: 8388608)
!908 = !DIEnumerator(name: "SERR_TRANS_ST_ERROR", value: 16777216)
!909 = !DIEnumerator(name: "SERR_UNRECOG_FIS", value: 33554432)
!910 = !DIEnumerator(name: "SERR_DEV_XCHG", value: 67108864)
!911 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ata_prot_flags", file: !500, line: 520, baseType: !7, size: 32, elements: !912)
!912 = !{!913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925}
!913 = !DIEnumerator(name: "ATA_PROT_FLAG_PIO", value: 1, isUnsigned: true)
!914 = !DIEnumerator(name: "ATA_PROT_FLAG_DMA", value: 2, isUnsigned: true)
!915 = !DIEnumerator(name: "ATA_PROT_FLAG_NCQ", value: 4, isUnsigned: true)
!916 = !DIEnumerator(name: "ATA_PROT_FLAG_ATAPI", value: 8, isUnsigned: true)
!917 = !DIEnumerator(name: "ATA_PROT_UNKNOWN", value: 255, isUnsigned: true)
!918 = !DIEnumerator(name: "ATA_PROT_NODATA", value: 0, isUnsigned: true)
!919 = !DIEnumerator(name: "ATA_PROT_PIO", value: 1, isUnsigned: true)
!920 = !DIEnumerator(name: "ATA_PROT_DMA", value: 2, isUnsigned: true)
!921 = !DIEnumerator(name: "ATA_PROT_NCQ_NODATA", value: 4, isUnsigned: true)
!922 = !DIEnumerator(name: "ATA_PROT_NCQ", value: 6, isUnsigned: true)
!923 = !DIEnumerator(name: "ATAPI_PROT_NODATA", value: 8, isUnsigned: true)
!924 = !DIEnumerator(name: "ATAPI_PROT_PIO", value: 9, isUnsigned: true)
!925 = !DIEnumerator(name: "ATAPI_PROT_DMA", value: 10, isUnsigned: true)
!926 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !927, line: 10, baseType: !7, size: 32, elements: !928)
!927 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!928 = !{!929, !930}
!929 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!930 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!931 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !932, line: 30, baseType: !933, size: 64, elements: !934)
!932 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!933 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!934 = !{!935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963}
!935 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!936 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!937 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!938 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!939 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!940 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!941 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!942 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!943 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!944 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!945 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!946 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!947 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!948 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!949 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!950 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!951 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!952 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!953 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!954 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!955 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!956 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!957 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!958 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!959 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!960 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!961 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!962 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!963 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!964 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ata_lpm_hints", file: !178, line: 515, baseType: !7, size: 32, elements: !965)
!965 = !{!966, !967, !968}
!966 = !DIEnumerator(name: "ATA_LPM_EMPTY", value: 1, isUnsigned: true)
!967 = !DIEnumerator(name: "ATA_LPM_HIPM", value: 2, isUnsigned: true)
!968 = !DIEnumerator(name: "ATA_LPM_WAKE_ONLY", value: 4, isUnsigned: true)
!969 = !{!970, !971, !1005, !5946, !6375, !933, !6870, !2121, !1012, !6871, !6872, !6874, !206, !3203, !1001}
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !973, line: 309, size: 19264, elements: !974)
!973 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!974 = !{!975, !982, !5749, !5750, !5751, !5752, !5763, !5764, !5765, !5766, !5767, !5768, !5769, !5770, !5771, !5772, !5773, !5774, !5775, !5776, !5777, !5778, !5779, !5844, !5845, !5846, !5848, !5849, !5850, !5851, !5852, !5853, !5854, !5855, !5856, !5857, !5858, !5859, !5860, !5861, !5862, !5863, !5864, !5865, !5866, !5867, !5870, !5871, !5872, !5873, !5874, !5875, !5876, !5877, !5881, !5882, !5883, !5884, !5885, !5886, !5887, !5888, !5889, !5890, !5891, !5892, !5893, !5894, !5895, !5896, !5897, !5898, !5899, !5900, !5901, !5902, !5903, !5904, !5905, !5906, !5907, !5908, !5909, !5910, !5911, !5912, !5913, !5914, !5915, !5916, !5917, !5918, !5920, !5921, !5922, !5923, !5924, !5925, !5927, !5928, !5929, !5932, !5939, !5940, !5941, !5942, !5943, !5944, !5945}
!975 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !972, file: !973, line: 310, baseType: !976, size: 128)
!976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !977, line: 178, size: 128, elements: !978)
!977 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!978 = !{!979, !981}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !976, file: !977, line: 179, baseType: !980, size: 64)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !976, file: !977, line: 179, baseType: !980, size: 64, offset: 64)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !972, file: !973, line: 311, baseType: !983, size: 64, offset: 128)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 64)
!984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !973, line: 605, size: 8064, elements: !985)
!985 = !{!986, !987, !988, !989, !990, !991, !992, !1019, !1020, !1021, !1048, !1051, !1052, !1056, !1058, !1059, !1060, !1061, !1065, !1067, !1069, !5745, !5746, !5747, !5748}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !984, file: !973, line: 606, baseType: !976, size: 128)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !984, file: !973, line: 607, baseType: !983, size: 64, offset: 128)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !984, file: !973, line: 608, baseType: !976, size: 128, offset: 192)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !984, file: !973, line: 609, baseType: !976, size: 128, offset: 320)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !984, file: !973, line: 610, baseType: !971, size: 64, offset: 448)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !984, file: !973, line: 611, baseType: !976, size: 128, offset: 512)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !984, file: !973, line: 613, baseType: !993, size: 256, offset: 640)
!993 = !DICompositeType(tag: DW_TAG_array_type, baseType: !994, size: 256, elements: !1017)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 64)
!995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !996, line: 20, size: 512, elements: !997)
!996 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!997 = !{!998, !1006, !1007, !1011, !1013, !1014, !1015, !1016}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !995, file: !996, line: 21, baseType: !999, size: 64)
!999 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !977, line: 158, baseType: !1000)
!1000 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !977, line: 153, baseType: !1001)
!1001 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !1002, line: 23, baseType: !1003)
!1002 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!1003 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !1004, line: 31, baseType: !1005)
!1004 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!1005 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !995, file: !996, line: 22, baseType: !999, size: 64, offset: 64)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !995, file: !996, line: 23, baseType: !1008, size: 64, offset: 128)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64)
!1009 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1010)
!1010 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !995, file: !996, line: 24, baseType: !1012, size: 64, offset: 192)
!1012 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !995, file: !996, line: 25, baseType: !1012, size: 64, offset: 256)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !995, file: !996, line: 26, baseType: !994, size: 64, offset: 320)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !995, file: !996, line: 26, baseType: !994, size: 64, offset: 384)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !995, file: !996, line: 26, baseType: !994, size: 64, offset: 448)
!1017 = !{!1018}
!1018 = !DISubrange(count: 4)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !984, file: !973, line: 614, baseType: !976, size: 128, offset: 896)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !984, file: !973, line: 615, baseType: !995, size: 512, offset: 1024)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !984, file: !973, line: 617, baseType: !1022, size: 64, offset: 1536)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !973, line: 731, size: 320, elements: !1024)
!1024 = !{!1025, !1029, !1033, !1037, !1044}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !1023, file: !973, line: 732, baseType: !1026, size: 64)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64)
!1027 = !DISubroutineType(types: !1028)
!1028 = !{!206, !983}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !1023, file: !973, line: 733, baseType: !1030, size: 64, offset: 64)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64)
!1031 = !DISubroutineType(types: !1032)
!1032 = !{null, !983}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !1023, file: !973, line: 734, baseType: !1034, size: 64, offset: 128)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 64)
!1035 = !DISubroutineType(types: !1036)
!1036 = !{!970, !983, !7, !206}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1023, file: !973, line: 735, baseType: !1038, size: 64, offset: 192)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64)
!1039 = !DISubroutineType(types: !1040)
!1040 = !{!206, !983, !7, !206, !206, !1041}
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64)
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !1002, line: 21, baseType: !1043)
!1043 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !1004, line: 27, baseType: !7)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1023, file: !973, line: 736, baseType: !1045, size: 64, offset: 256)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64)
!1046 = !DISubroutineType(types: !1047)
!1047 = !{!206, !983, !7, !206, !206, !1042}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !984, file: !973, line: 618, baseType: !1049, size: 64, offset: 1600)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64)
!1050 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !973, line: 537, flags: DIFlagFwdDecl)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !984, file: !973, line: 619, baseType: !970, size: 64, offset: 1664)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !984, file: !973, line: 620, baseType: !1053, size: 64, offset: 1728)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 64)
!1054 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !1055, line: 123, flags: DIFlagFwdDecl)
!1055 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !984, file: !973, line: 622, baseType: !1057, size: 8, offset: 1792)
!1057 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !984, file: !973, line: 623, baseType: !1057, size: 8, offset: 1800)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !984, file: !973, line: 624, baseType: !1057, size: 8, offset: 1808)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !984, file: !973, line: 625, baseType: !1057, size: 8, offset: 1816)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !984, file: !973, line: 630, baseType: !1062, size: 384, offset: 1824)
!1062 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1010, size: 384, elements: !1063)
!1063 = !{!1064}
!1064 = !DISubrange(count: 48)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !984, file: !973, line: 632, baseType: !1066, size: 16, offset: 2208)
!1066 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !984, file: !973, line: 633, baseType: !1068, size: 16, offset: 2224)
!1068 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !973, line: 237, baseType: !1066)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !984, file: !973, line: 634, baseType: !1070, size: 64, offset: 2240)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 64)
!1071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !47, line: 461, size: 5568, elements: !1072)
!1072 = !{!1073, !5211, !5212, !5215, !5216, !5266, !5357, !5358, !5359, !5360, !5361, !5370, !5464, !5477, !5672, !5673, !5677, !5679, !5680, !5681, !5685, !5691, !5692, !5695, !5696, !5697, !5698, !5699, !5700, !5701, !5733, !5734, !5735, !5738, !5741, !5742, !5743, !5744}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1071, file: !47, line: 462, baseType: !1074, size: 512)
!1074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !1075, line: 64, size: 512, elements: !1076)
!1075 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!1076 = !{!1077, !1078, !1079, !1081, !1141, !5077, !5205, !5206, !5207, !5208, !5209, !5210}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1074, file: !1075, line: 65, baseType: !1008, size: 64)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1074, file: !1075, line: 66, baseType: !976, size: 128, offset: 64)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1074, file: !1075, line: 67, baseType: !1080, size: 64, offset: 192)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !1074, file: !1075, line: 68, baseType: !1082, size: 64, offset: 256)
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 64)
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !1075, line: 192, size: 704, elements: !1084)
!1084 = !{!1085, !1086, !1102, !1103}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1083, file: !1075, line: 193, baseType: !976, size: 128)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !1083, file: !1075, line: 194, baseType: !1087, offset: 128)
!1087 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !1088, line: 83, baseType: !1089)
!1088 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !1088, line: 71, elements: !1090)
!1090 = !{!1091}
!1091 = !DIDerivedType(tag: DW_TAG_member, scope: !1089, file: !1088, line: 72, baseType: !1092)
!1092 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1089, file: !1088, line: 72, elements: !1093)
!1093 = !{!1094}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !1092, file: !1088, line: 73, baseType: !1095)
!1095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !1088, line: 20, elements: !1096)
!1096 = !{!1097}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1095, file: !1088, line: 21, baseType: !1098)
!1098 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !1099, line: 25, baseType: !1100)
!1099 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!1100 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1099, line: 25, elements: !1101)
!1101 = !{}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1083, file: !1075, line: 195, baseType: !1074, size: 512, offset: 128)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !1083, file: !1075, line: 196, baseType: !1104, size: 64, offset: 640)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 64)
!1105 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1106)
!1106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !1075, line: 156, size: 192, elements: !1107)
!1107 = !{!1108, !1113, !1118}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1106, file: !1075, line: 157, baseType: !1109, size: 64)
!1109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1110)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64)
!1111 = !DISubroutineType(types: !1112)
!1112 = !{!206, !1082, !1080}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1106, file: !1075, line: 158, baseType: !1114, size: 64, offset: 64)
!1114 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1115)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64)
!1116 = !DISubroutineType(types: !1117)
!1117 = !{!1008, !1082, !1080}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !1106, file: !1075, line: 159, baseType: !1119, size: 64, offset: 128)
!1119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1120)
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 64)
!1121 = !DISubroutineType(types: !1122)
!1122 = !{!206, !1082, !1080, !1123}
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 64)
!1124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !1075, line: 148, size: 20736, elements: !1125)
!1125 = !{!1126, !1131, !1135, !1136, !1140}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !1124, file: !1075, line: 149, baseType: !1127, size: 192)
!1127 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1128, size: 192, elements: !1129)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64)
!1129 = !{!1130}
!1130 = !DISubrange(count: 3)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !1124, file: !1075, line: 150, baseType: !1132, size: 4096, offset: 192)
!1132 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1128, size: 4096, elements: !1133)
!1133 = !{!1134}
!1134 = !DISubrange(count: 64)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !1124, file: !1075, line: 151, baseType: !206, size: 32, offset: 4288)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1124, file: !1075, line: 152, baseType: !1137, size: 16384, offset: 4320)
!1137 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1010, size: 16384, elements: !1138)
!1138 = !{!1139}
!1139 = !DISubrange(count: 2048)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !1124, file: !1075, line: 153, baseType: !206, size: 32, offset: 20704)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !1074, file: !1075, line: 69, baseType: !1142, size: 64, offset: 320)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 64)
!1143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !1075, line: 138, size: 448, elements: !1144)
!1144 = !{!1145, !1149, !1176, !1178, !5039, !5067, !5071}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1143, file: !1075, line: 139, baseType: !1146, size: 64)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64)
!1147 = !DISubroutineType(types: !1148)
!1148 = !{null, !1080}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !1143, file: !1075, line: 140, baseType: !1150, size: 64, offset: 64)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 64)
!1151 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1152)
!1152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !1153, line: 230, size: 128, elements: !1154)
!1153 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!1154 = !{!1155, !1169}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1152, file: !1153, line: 231, baseType: !1156, size: 64)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 64)
!1157 = !DISubroutineType(types: !1158)
!1158 = !{!1159, !1080, !1163, !1128}
!1159 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !977, line: 60, baseType: !1160)
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !1161, line: 73, baseType: !1162)
!1161 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!1162 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !1161, line: 15, baseType: !933)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 64)
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !1153, line: 30, size: 128, elements: !1165)
!1165 = !{!1166, !1167}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1164, file: !1153, line: 31, baseType: !1008, size: 64)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1164, file: !1153, line: 32, baseType: !1168, size: 16, offset: 64)
!1168 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !977, line: 19, baseType: !1066)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !1152, file: !1153, line: 232, baseType: !1170, size: 64, offset: 64)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64)
!1171 = !DISubroutineType(types: !1172)
!1172 = !{!1159, !1080, !1163, !1008, !1173}
!1173 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !977, line: 55, baseType: !1174)
!1174 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !1161, line: 72, baseType: !1175)
!1175 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !1161, line: 16, baseType: !1012)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !1143, file: !1075, line: 141, baseType: !1177, size: 64, offset: 128)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 64)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !1143, file: !1075, line: 142, baseType: !1179, size: 64, offset: 192)
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 64)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64)
!1181 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1182)
!1182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !1153, line: 84, size: 320, elements: !1183)
!1183 = !{!1184, !1185, !1189, !5036, !5037}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1182, file: !1153, line: 85, baseType: !1008, size: 64)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !1182, file: !1153, line: 86, baseType: !1186, size: 64, offset: 64)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 64)
!1187 = !DISubroutineType(types: !1188)
!1188 = !{!1168, !1080, !1163, !206}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !1182, file: !1153, line: 88, baseType: !1190, size: 64, offset: 128)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 64)
!1191 = !DISubroutineType(types: !1192)
!1192 = !{!1168, !1080, !1193, !206}
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 64)
!1194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !1153, line: 168, size: 448, elements: !1195)
!1195 = !{!1196, !1197, !1198, !1199, !5031, !5032}
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1194, file: !1153, line: 169, baseType: !1164, size: 128)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1194, file: !1153, line: 170, baseType: !1173, size: 64, offset: 128)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1194, file: !1153, line: 171, baseType: !970, size: 64, offset: 192)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1194, file: !1153, line: 172, baseType: !1200, size: 64, offset: 256)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64)
!1201 = !DISubroutineType(types: !1202)
!1202 = !{!1159, !1203, !1080, !1193, !1128, !1374, !1173}
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64)
!1204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !12, line: 916, size: 1856, align: 32, elements: !1205)
!1205 = !{!1206, !1224, !4996, !4997, !4998, !4999, !5000, !5001, !5002, !5003, !5004, !5005, !5014, !5015, !5024, !5025, !5026, !5027, !5028, !5029, !5030}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !1204, file: !12, line: 920, baseType: !1207, size: 128)
!1207 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1204, file: !12, line: 917, size: 128, elements: !1208)
!1208 = !{!1209, !1215}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !1207, file: !12, line: 918, baseType: !1210, size: 64)
!1210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !1211, line: 58, size: 64, elements: !1212)
!1211 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!1212 = !{!1213}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1210, file: !1211, line: 59, baseType: !1214, size: 64)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 64)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !1207, file: !12, line: 919, baseType: !1216, size: 128, align: 64)
!1216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !977, line: 216, size: 128, align: 64, elements: !1217)
!1217 = !{!1218, !1220}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1216, file: !977, line: 217, baseType: !1219, size: 64)
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 64)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1216, file: !977, line: 218, baseType: !1221, size: 64, offset: 64)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 64)
!1222 = !DISubroutineType(types: !1223)
!1223 = !{null, !1219}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !1204, file: !12, line: 921, baseType: !1225, size: 128, offset: 128)
!1225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !1226, line: 8, size: 128, elements: !1227)
!1226 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!1227 = !{!1228, !1232}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !1225, file: !1226, line: 9, baseType: !1229, size: 64)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 64)
!1230 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !1231, line: 18, flags: DIFlagFwdDecl)
!1231 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !1225, file: !1226, line: 10, baseType: !1233, size: 64, offset: 64)
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 64)
!1234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !1231, line: 89, size: 1536, elements: !1235)
!1235 = !{!1236, !1237, !1247, !1255, !1256, !1271, !4964, !4966, !4978, !4979, !4980, !4981, !4982, !4988, !4989, !4990}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !1234, file: !1231, line: 91, baseType: !7, size: 32)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !1234, file: !1231, line: 92, baseType: !1238, size: 32, offset: 32)
!1238 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !1239, line: 277, baseType: !1240)
!1239 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!1240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !1239, line: 277, size: 32, elements: !1241)
!1241 = !{!1242}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1240, file: !1239, line: 277, baseType: !1243, size: 32)
!1243 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !1239, line: 70, baseType: !1244)
!1244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !1239, line: 65, size: 32, elements: !1245)
!1245 = !{!1246}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !1244, file: !1239, line: 66, baseType: !7, size: 32)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !1234, file: !1231, line: 93, baseType: !1248, size: 128, offset: 64)
!1248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !1249, line: 38, size: 128, elements: !1250)
!1249 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!1250 = !{!1251, !1253}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1248, file: !1249, line: 39, baseType: !1252, size: 64)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 64)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !1248, file: !1249, line: 39, baseType: !1254, size: 64, offset: 64)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 64)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !1234, file: !1231, line: 94, baseType: !1233, size: 64, offset: 192)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1234, file: !1231, line: 95, baseType: !1257, size: 128, offset: 256)
!1257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !1231, line: 47, size: 128, elements: !1258)
!1258 = !{!1259, !1268}
!1259 = !DIDerivedType(tag: DW_TAG_member, scope: !1257, file: !1231, line: 48, baseType: !1260, size: 64)
!1260 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1257, file: !1231, line: 48, size: 64, elements: !1261)
!1261 = !{!1262, !1267}
!1262 = !DIDerivedType(tag: DW_TAG_member, scope: !1260, file: !1231, line: 49, baseType: !1263, size: 64)
!1263 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1260, file: !1231, line: 49, size: 64, elements: !1264)
!1264 = !{!1265, !1266}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1263, file: !1231, line: 50, baseType: !1042, size: 32)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1263, file: !1231, line: 50, baseType: !1042, size: 32, offset: 32)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !1260, file: !1231, line: 52, baseType: !1001, size: 64)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1257, file: !1231, line: 54, baseType: !1269, size: 64, offset: 64)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64)
!1270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1057)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !1234, file: !1231, line: 96, baseType: !1272, size: 64, offset: 384)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 64)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !12, line: 610, size: 4224, elements: !1274)
!1274 = !{!1275, !1276, !1277, !1285, !1292, !1293, !1441, !4677, !4678, !4679, !4684, !4685, !4686, !4687, !4688, !4689, !4690, !4691, !4692, !4693, !4694, !4695, !4696, !4697, !4698, !4699, !4700, !4701, !4702, !4703, !4708, !4709, !4710, !4711, !4712, !4713, !4714, !4940, !4948, !4949, !4950, !4960, !4961, !4962, !4963}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !1273, file: !12, line: 611, baseType: !1168, size: 16)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !1273, file: !12, line: 612, baseType: !1066, size: 16, offset: 16)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !1273, file: !12, line: 613, baseType: !1278, size: 32, offset: 32)
!1278 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !1279, line: 23, baseType: !1280)
!1279 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!1280 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1279, line: 21, size: 32, elements: !1281)
!1281 = !{!1282}
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1280, file: !1279, line: 22, baseType: !1283, size: 32)
!1283 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !977, line: 32, baseType: !1284)
!1284 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !1161, line: 49, baseType: !7)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !1273, file: !12, line: 614, baseType: !1286, size: 32, offset: 64)
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !1279, line: 28, baseType: !1287)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1279, line: 26, size: 32, elements: !1288)
!1288 = !{!1289}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1287, file: !1279, line: 27, baseType: !1290, size: 32)
!1290 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !977, line: 33, baseType: !1291)
!1291 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !1161, line: 50, baseType: !7)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !1273, file: !12, line: 615, baseType: !7, size: 32, offset: 96)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !1273, file: !12, line: 622, baseType: !1294, size: 64, offset: 128)
!1294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1295, size: 64)
!1295 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1296)
!1296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !12, line: 1864, size: 1536, align: 512, elements: !1297)
!1297 = !{!1298, !1302, !1315, !1319, !1325, !1329, !1335, !1339, !1343, !1347, !1351, !1352, !1358, !1362, !1388, !1417, !1421, !1427, !1432, !1436, !1437}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1296, file: !12, line: 1865, baseType: !1299, size: 64)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 64)
!1300 = !DISubroutineType(types: !1301)
!1301 = !{!1233, !1272, !1233, !7}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !1296, file: !12, line: 1866, baseType: !1303, size: 64, offset: 64)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 64)
!1304 = !DISubroutineType(types: !1305)
!1305 = !{!1008, !1233, !1272, !1306}
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 64)
!1307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !1308, line: 10, size: 128, elements: !1309)
!1308 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!1309 = !{!1310, !1314}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1307, file: !1308, line: 11, baseType: !1311, size: 64)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 64)
!1312 = !DISubroutineType(types: !1313)
!1313 = !{null, !970}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !1307, file: !1308, line: 12, baseType: !970, size: 64, offset: 64)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !1296, file: !12, line: 1867, baseType: !1316, size: 64, offset: 128)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 64)
!1317 = !DISubroutineType(types: !1318)
!1318 = !{!206, !1272, !206}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !1296, file: !12, line: 1868, baseType: !1320, size: 64, offset: 192)
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1321, size: 64)
!1321 = !DISubroutineType(types: !1322)
!1322 = !{!1323, !1272, !206}
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 64)
!1324 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !12, line: 581, flags: DIFlagFwdDecl)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !1296, file: !12, line: 1870, baseType: !1326, size: 64, offset: 256)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 64)
!1327 = !DISubroutineType(types: !1328)
!1328 = !{!206, !1233, !1128, !206}
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !1296, file: !12, line: 1872, baseType: !1330, size: 64, offset: 320)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 64)
!1331 = !DISubroutineType(types: !1332)
!1332 = !{!206, !1272, !1233, !1168, !1333}
!1333 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !977, line: 30, baseType: !1334)
!1334 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1296, file: !12, line: 1873, baseType: !1336, size: 64, offset: 384)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 64)
!1337 = !DISubroutineType(types: !1338)
!1338 = !{!206, !1233, !1272, !1233}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !1296, file: !12, line: 1874, baseType: !1340, size: 64, offset: 448)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 64)
!1341 = !DISubroutineType(types: !1342)
!1342 = !{!206, !1272, !1233}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !1296, file: !12, line: 1875, baseType: !1344, size: 64, offset: 512)
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 64)
!1345 = !DISubroutineType(types: !1346)
!1346 = !{!206, !1272, !1233, !1008}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !1296, file: !12, line: 1876, baseType: !1348, size: 64, offset: 576)
!1348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1349, size: 64)
!1349 = !DISubroutineType(types: !1350)
!1350 = !{!206, !1272, !1233, !1168}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !1296, file: !12, line: 1877, baseType: !1340, size: 64, offset: 640)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !1296, file: !12, line: 1878, baseType: !1353, size: 64, offset: 704)
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 64)
!1354 = !DISubroutineType(types: !1355)
!1355 = !{!206, !1272, !1233, !1168, !1356}
!1356 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !977, line: 16, baseType: !1357)
!1357 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !977, line: 13, baseType: !1042)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !1296, file: !12, line: 1879, baseType: !1359, size: 64, offset: 768)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 64)
!1360 = !DISubroutineType(types: !1361)
!1361 = !{!206, !1272, !1233, !1272, !1233, !7}
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !1296, file: !12, line: 1881, baseType: !1363, size: 64, offset: 832)
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 64)
!1364 = !DISubroutineType(types: !1365)
!1365 = !{!206, !1233, !1366}
!1366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1367, size: 64)
!1367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !12, line: 219, size: 640, elements: !1368)
!1368 = !{!1369, !1370, !1371, !1372, !1373, !1377, !1385, !1386, !1387}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !1367, file: !12, line: 220, baseType: !7, size: 32)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !1367, file: !12, line: 221, baseType: !1168, size: 16, offset: 32)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !1367, file: !12, line: 222, baseType: !1278, size: 32, offset: 64)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !1367, file: !12, line: 223, baseType: !1286, size: 32, offset: 96)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !1367, file: !12, line: 224, baseType: !1374, size: 64, offset: 128)
!1374 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !977, line: 46, baseType: !1375)
!1375 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !1161, line: 88, baseType: !1376)
!1376 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !1367, file: !12, line: 225, baseType: !1378, size: 128, offset: 192)
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1379, line: 13, size: 128, elements: !1380)
!1379 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1380 = !{!1381, !1384}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1378, file: !1379, line: 14, baseType: !1382, size: 64)
!1382 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1379, line: 8, baseType: !1383)
!1383 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !1004, line: 30, baseType: !1376)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1378, file: !1379, line: 15, baseType: !933, size: 64, offset: 64)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !1367, file: !12, line: 226, baseType: !1378, size: 128, offset: 320)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !1367, file: !12, line: 227, baseType: !1378, size: 128, offset: 448)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !1367, file: !12, line: 234, baseType: !1203, size: 64, offset: 576)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !1296, file: !12, line: 1882, baseType: !1389, size: 64, offset: 896)
!1389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64)
!1390 = !DISubroutineType(types: !1391)
!1391 = !{!206, !1392, !1394, !1042, !7}
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 64)
!1393 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1225)
!1394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1395, size: 64)
!1395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !1396, line: 22, size: 1152, elements: !1397)
!1396 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!1397 = !{!1398, !1399, !1400, !1401, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !1395, file: !1396, line: 23, baseType: !1042, size: 32)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1395, file: !1396, line: 24, baseType: !1168, size: 16, offset: 32)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !1395, file: !1396, line: 25, baseType: !7, size: 32, offset: 64)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !1395, file: !1396, line: 26, baseType: !1402, size: 32, offset: 96)
!1402 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !977, line: 104, baseType: !1042)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1395, file: !1396, line: 27, baseType: !1001, size: 64, offset: 128)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !1395, file: !1396, line: 28, baseType: !1001, size: 64, offset: 192)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1395, file: !1396, line: 37, baseType: !1001, size: 64, offset: 256)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1395, file: !1396, line: 38, baseType: !1356, size: 32, offset: 320)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !1395, file: !1396, line: 39, baseType: !1356, size: 32, offset: 352)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1395, file: !1396, line: 40, baseType: !1278, size: 32, offset: 384)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1395, file: !1396, line: 41, baseType: !1286, size: 32, offset: 416)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1395, file: !1396, line: 42, baseType: !1374, size: 64, offset: 448)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !1395, file: !1396, line: 43, baseType: !1378, size: 128, offset: 512)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !1395, file: !1396, line: 44, baseType: !1378, size: 128, offset: 640)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1395, file: !1396, line: 45, baseType: !1378, size: 128, offset: 768)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !1395, file: !1396, line: 46, baseType: !1378, size: 128, offset: 896)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1395, file: !1396, line: 47, baseType: !1001, size: 64, offset: 1024)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !1395, file: !1396, line: 48, baseType: !1001, size: 64, offset: 1088)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !1296, file: !12, line: 1883, baseType: !1418, size: 64, offset: 960)
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1419, size: 64)
!1419 = !DISubroutineType(types: !1420)
!1420 = !{!1159, !1233, !1128, !1173}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !1296, file: !12, line: 1884, baseType: !1422, size: 64, offset: 1024)
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 64)
!1423 = !DISubroutineType(types: !1424)
!1424 = !{!206, !1272, !1425, !1001, !1001}
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1426, size: 64)
!1426 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !12, line: 50, flags: DIFlagFwdDecl)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !1296, file: !12, line: 1886, baseType: !1428, size: 64, offset: 1088)
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 64)
!1429 = !DISubroutineType(types: !1430)
!1430 = !{!206, !1272, !1431, !206}
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 64)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !1296, file: !12, line: 1887, baseType: !1433, size: 64, offset: 1152)
!1433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1434, size: 64)
!1434 = !DISubroutineType(types: !1435)
!1435 = !{!206, !1272, !1233, !1203, !7, !1168}
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !1296, file: !12, line: 1890, baseType: !1348, size: 64, offset: 1216)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !1296, file: !12, line: 1891, baseType: !1438, size: 64, offset: 1280)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64)
!1439 = !DISubroutineType(types: !1440)
!1440 = !{!206, !1272, !1323, !206}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !1273, file: !12, line: 623, baseType: !1442, size: 64, offset: 192)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 64)
!1443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !12, line: 1416, size: 9472, elements: !1444)
!1444 = !{!1445, !1446, !1447, !1448, !1449, !1450, !1499, !4291, !4373, !4456, !4460, !4461, !4462, !4463, !4464, !4465, !4466, !4467, !4472, !4476, !4477, !4478, !4479, !4482, !4483, !4484, !4525, !4551, !4552, !4553, !4554, !4555, !4556, !4559, !4560, !4567, !4568, !4569, !4570, !4571, !4630, !4631, !4646, !4647, !4648, !4649, !4650, !4651, !4652, !4653, !4668, !4669, !4670, !4671, !4672, !4673, !4674, !4675, !4676}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !1443, file: !12, line: 1417, baseType: !976, size: 128)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !1443, file: !12, line: 1418, baseType: !1356, size: 32, offset: 128)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !1443, file: !12, line: 1419, baseType: !1057, size: 8, offset: 160)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !1443, file: !12, line: 1420, baseType: !1012, size: 64, offset: 192)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !1443, file: !12, line: 1421, baseType: !1374, size: 64, offset: 256)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !1443, file: !12, line: 1422, baseType: !1451, size: 64, offset: 320)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64)
!1452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !12, line: 2228, size: 576, elements: !1453)
!1453 = !{!1454, !1455, !1456, !1462, !1466, !1470, !1474, !1478, !1479, !1489, !1492, !1493, !1494, !1496, !1497, !1498}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1452, file: !12, line: 2229, baseType: !1008, size: 64)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !1452, file: !12, line: 2230, baseType: !206, size: 32, offset: 64)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !1452, file: !12, line: 2238, baseType: !1457, size: 64, offset: 128)
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 64)
!1458 = !DISubroutineType(types: !1459)
!1459 = !{!206, !1460}
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 64)
!1461 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !12, line: 69, flags: DIFlagFwdDecl)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !1452, file: !12, line: 2239, baseType: !1463, size: 64, offset: 192)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 64)
!1464 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1465)
!1465 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !12, line: 70, flags: DIFlagFwdDecl)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !1452, file: !12, line: 2240, baseType: !1467, size: 64, offset: 256)
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 64)
!1468 = !DISubroutineType(types: !1469)
!1469 = !{!1233, !1451, !206, !1008, !970}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !1452, file: !12, line: 2242, baseType: !1471, size: 64, offset: 320)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 64)
!1472 = !DISubroutineType(types: !1473)
!1473 = !{null, !1442}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1452, file: !12, line: 2243, baseType: !1475, size: 64, offset: 384)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64)
!1476 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !1477, line: 76, flags: DIFlagFwdDecl)
!1477 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1452, file: !12, line: 2244, baseType: !1451, size: 64, offset: 448)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !1452, file: !12, line: 2245, baseType: !1480, size: 64, offset: 512)
!1480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !977, line: 182, size: 64, elements: !1481)
!1481 = !{!1482}
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1480, file: !977, line: 183, baseType: !1483, size: 64)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 64)
!1484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !977, line: 186, size: 128, elements: !1485)
!1485 = !{!1486, !1487}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1484, file: !977, line: 187, baseType: !1483, size: 64)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !1484, file: !977, line: 187, baseType: !1488, size: 64, offset: 64)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 64)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !1452, file: !12, line: 2247, baseType: !1490, offset: 576)
!1490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !1491, line: 187, elements: !1101)
!1491 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !1452, file: !12, line: 2248, baseType: !1490, offset: 576)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !1452, file: !12, line: 2249, baseType: !1490, offset: 576)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !1452, file: !12, line: 2250, baseType: !1495, offset: 576)
!1495 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1490, elements: !1129)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !1452, file: !12, line: 2252, baseType: !1490, offset: 576)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !1452, file: !12, line: 2253, baseType: !1490, offset: 576)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !1452, file: !12, line: 2254, baseType: !1490, offset: 576)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !1443, file: !12, line: 1423, baseType: !1500, size: 64, offset: 384)
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 64)
!1501 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1502)
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !12, line: 1935, size: 1472, elements: !1503)
!1503 = !{!1504, !1508, !1512, !1513, !1517, !1523, !1527, !1528, !1529, !1533, !1537, !1538, !1539, !1540, !1546, !1551, !1552, !1608, !1609, !1610, !1611, !4275, !4290}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !1502, file: !12, line: 1936, baseType: !1505, size: 64)
!1505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1506, size: 64)
!1506 = !DISubroutineType(types: !1507)
!1507 = !{!1272, !1442}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !1502, file: !12, line: 1937, baseType: !1509, size: 64, offset: 64)
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 64)
!1510 = !DISubroutineType(types: !1511)
!1511 = !{null, !1272}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !1502, file: !12, line: 1938, baseType: !1509, size: 64, offset: 128)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !1502, file: !12, line: 1940, baseType: !1514, size: 64, offset: 192)
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 64)
!1515 = !DISubroutineType(types: !1516)
!1516 = !{null, !1272, !206}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !1502, file: !12, line: 1941, baseType: !1518, size: 64, offset: 256)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 64)
!1519 = !DISubroutineType(types: !1520)
!1520 = !{!206, !1272, !1521}
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 64)
!1522 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !130, line: 40, flags: DIFlagFwdDecl)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !1502, file: !12, line: 1942, baseType: !1524, size: 64, offset: 320)
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 64)
!1525 = !DISubroutineType(types: !1526)
!1526 = !{!206, !1272}
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !1502, file: !12, line: 1943, baseType: !1509, size: 64, offset: 384)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !1502, file: !12, line: 1944, baseType: !1471, size: 64, offset: 448)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !1502, file: !12, line: 1945, baseType: !1530, size: 64, offset: 512)
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 64)
!1531 = !DISubroutineType(types: !1532)
!1532 = !{!206, !1442, !206}
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !1502, file: !12, line: 1946, baseType: !1534, size: 64, offset: 576)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 64)
!1535 = !DISubroutineType(types: !1536)
!1536 = !{!206, !1442}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !1502, file: !12, line: 1947, baseType: !1534, size: 64, offset: 640)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !1502, file: !12, line: 1948, baseType: !1534, size: 64, offset: 704)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !1502, file: !12, line: 1949, baseType: !1534, size: 64, offset: 768)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !1502, file: !12, line: 1950, baseType: !1541, size: 64, offset: 832)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 64)
!1542 = !DISubroutineType(types: !1543)
!1543 = !{!206, !1233, !1544}
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 64)
!1545 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !12, line: 57, flags: DIFlagFwdDecl)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !1502, file: !12, line: 1951, baseType: !1547, size: 64, offset: 896)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 64)
!1548 = !DISubroutineType(types: !1549)
!1549 = !{!206, !1442, !1550, !1128}
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !206, size: 64)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !1502, file: !12, line: 1952, baseType: !1471, size: 64, offset: 960)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1502, file: !12, line: 1954, baseType: !1553, size: 64, offset: 1024)
!1553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 64)
!1554 = !DISubroutineType(types: !1555)
!1555 = !{!206, !1556, !1233}
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 64)
!1557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !1558, line: 16, size: 896, elements: !1559)
!1558 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!1559 = !{!1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1581, !1603, !1604, !1607}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1557, file: !1558, line: 17, baseType: !1128, size: 64)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1557, file: !1558, line: 18, baseType: !1173, size: 64, offset: 64)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1557, file: !1558, line: 19, baseType: !1173, size: 64, offset: 128)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1557, file: !1558, line: 20, baseType: !1173, size: 64, offset: 192)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !1557, file: !1558, line: 21, baseType: !1173, size: 64, offset: 256)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1557, file: !1558, line: 22, baseType: !1374, size: 64, offset: 320)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !1557, file: !1558, line: 23, baseType: !1374, size: 64, offset: 384)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1557, file: !1558, line: 24, baseType: !1568, size: 192, offset: 448)
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1569, line: 53, size: 192, elements: !1570)
!1569 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1570 = !{!1571, !1579, !1580}
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1568, file: !1569, line: 54, baseType: !1572, size: 64)
!1572 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !1573, line: 13, baseType: !1574)
!1573 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!1574 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !977, line: 175, baseType: !1575)
!1575 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !977, line: 173, size: 64, elements: !1576)
!1576 = !{!1577}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !1575, file: !977, line: 174, baseType: !1578, size: 64)
!1578 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !1002, line: 22, baseType: !1383)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1568, file: !1569, line: 55, baseType: !1087, offset: 64)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1568, file: !1569, line: 59, baseType: !976, size: 128, offset: 64)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1557, file: !1558, line: 25, baseType: !1582, size: 64, offset: 640)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 64)
!1583 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1584)
!1584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !1558, line: 31, size: 256, elements: !1585)
!1585 = !{!1586, !1591, !1595, !1599}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1584, file: !1558, line: 32, baseType: !1587, size: 64)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 64)
!1588 = !DISubroutineType(types: !1589)
!1589 = !{!970, !1556, !1590}
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 64)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !1584, file: !1558, line: 33, baseType: !1592, size: 64, offset: 64)
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 64)
!1593 = !DISubroutineType(types: !1594)
!1594 = !{null, !1556, !970}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1584, file: !1558, line: 34, baseType: !1596, size: 64, offset: 128)
!1596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1597, size: 64)
!1597 = !DISubroutineType(types: !1598)
!1598 = !{!970, !1556, !970, !1590}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1584, file: !1558, line: 35, baseType: !1600, size: 64, offset: 192)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 64)
!1601 = !DISubroutineType(types: !1602)
!1602 = !{!206, !1556, !970}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !1557, file: !1558, line: 26, baseType: !206, size: 32, offset: 704)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1557, file: !1558, line: 27, baseType: !1605, size: 64, offset: 768)
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 64)
!1606 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1204)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1557, file: !1558, line: 28, baseType: !970, size: 64, offset: 832)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !1502, file: !12, line: 1955, baseType: !1553, size: 64, offset: 1088)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1502, file: !12, line: 1956, baseType: !1553, size: 64, offset: 1152)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !1502, file: !12, line: 1957, baseType: !1553, size: 64, offset: 1216)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !1502, file: !12, line: 1963, baseType: !1612, size: 64, offset: 1280)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 64)
!1613 = !DISubroutineType(types: !1614)
!1614 = !{!206, !1442, !1615, !1638}
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 64)
!1616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !1617, line: 68, size: 512, align: 128, elements: !1618)
!1617 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!1618 = !{!1619, !1620, !4267, !4274}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1616, file: !1617, line: 69, baseType: !1012, size: 64)
!1620 = !DIDerivedType(tag: DW_TAG_member, scope: !1616, file: !1617, line: 77, baseType: !1621, size: 320, offset: 64)
!1621 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1616, file: !1617, line: 77, size: 320, elements: !1622)
!1622 = !{!1623, !1828, !1833, !1861, !1869, !1875, !4218, !4266}
!1623 = !DIDerivedType(tag: DW_TAG_member, scope: !1621, file: !1617, line: 78, baseType: !1624, size: 320)
!1624 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1621, file: !1617, line: 78, size: 320, elements: !1625)
!1625 = !{!1626, !1627, !1826, !1827}
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1624, file: !1617, line: 84, baseType: !976, size: 128)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1624, file: !1617, line: 86, baseType: !1628, size: 64, offset: 128)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 64)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !12, line: 451, size: 1216, align: 64, elements: !1630)
!1630 = !{!1631, !1632, !1640, !1641, !1646, !1661, !1670, !1671, !1672, !1673, !1819, !1820, !1823, !1824, !1825}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1629, file: !12, line: 452, baseType: !1272, size: 64)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !1629, file: !12, line: 453, baseType: !1633, size: 128, offset: 64)
!1633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1634, line: 292, size: 128, elements: !1635)
!1634 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1635 = !{!1636, !1637, !1639}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1633, file: !1634, line: 293, baseType: !1087)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1633, file: !1634, line: 295, baseType: !1638, size: 32)
!1638 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !977, line: 148, baseType: !7)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1633, file: !1634, line: 296, baseType: !970, size: 64, offset: 64)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1629, file: !12, line: 454, baseType: !1638, size: 32, offset: 192)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !1629, file: !12, line: 455, baseType: !1642, size: 32, offset: 224)
!1642 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !977, line: 168, baseType: !1643)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !977, line: 166, size: 32, elements: !1644)
!1644 = !{!1645}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !1643, file: !977, line: 167, baseType: !206, size: 32)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !1629, file: !12, line: 460, baseType: !1647, size: 128, offset: 256)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !1648, line: 125, size: 128, elements: !1649)
!1648 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!1649 = !{!1650, !1660}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1647, file: !1648, line: 126, baseType: !1651, size: 64)
!1651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !1648, line: 31, size: 64, elements: !1652)
!1652 = !{!1653}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1651, file: !1648, line: 32, baseType: !1654, size: 64)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 64)
!1655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !1648, line: 24, size: 192, align: 64, elements: !1656)
!1656 = !{!1657, !1658, !1659}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !1655, file: !1648, line: 25, baseType: !1012, size: 64)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !1655, file: !1648, line: 26, baseType: !1654, size: 64, offset: 64)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !1655, file: !1648, line: 27, baseType: !1654, size: 64, offset: 128)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1647, file: !1648, line: 127, baseType: !1654, size: 64, offset: 64)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !1629, file: !12, line: 461, baseType: !1662, size: 256, offset: 384)
!1662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1663, line: 35, size: 256, elements: !1664)
!1663 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1664 = !{!1665, !1666, !1667, !1669}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1662, file: !1663, line: 36, baseType: !1572, size: 64)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1662, file: !1663, line: 42, baseType: !1572, size: 64, offset: 64)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1662, file: !1663, line: 46, baseType: !1668, offset: 128)
!1668 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !1088, line: 29, baseType: !1095)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1662, file: !1663, line: 47, baseType: !976, size: 128, offset: 128)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !1629, file: !12, line: 462, baseType: !1012, size: 64, offset: 640)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !1629, file: !12, line: 463, baseType: !1012, size: 64, offset: 704)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !1629, file: !12, line: 464, baseType: !1012, size: 64, offset: 768)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !1629, file: !12, line: 465, baseType: !1674, size: 64, offset: 832)
!1674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1675, size: 64)
!1675 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1676)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !12, line: 367, size: 1408, elements: !1677)
!1677 = !{!1678, !1682, !1686, !1690, !1694, !1698, !1711, !1717, !1721, !1726, !1730, !1734, !1738, !1783, !1787, !1793, !1794, !1795, !1799, !1804, !1808, !1815}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !1676, file: !12, line: 368, baseType: !1679, size: 64)
!1679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1680, size: 64)
!1680 = !DISubroutineType(types: !1681)
!1681 = !{!206, !1615, !1521}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !1676, file: !12, line: 369, baseType: !1683, size: 64, offset: 64)
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 64)
!1684 = !DISubroutineType(types: !1685)
!1685 = !{!206, !1203, !1615}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !1676, file: !12, line: 372, baseType: !1687, size: 64, offset: 128)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 64)
!1688 = !DISubroutineType(types: !1689)
!1689 = !{!206, !1628, !1521}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !1676, file: !12, line: 375, baseType: !1691, size: 64, offset: 192)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 64)
!1692 = !DISubroutineType(types: !1693)
!1693 = !{!206, !1615}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !1676, file: !12, line: 381, baseType: !1695, size: 64, offset: 256)
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1696, size: 64)
!1696 = !DISubroutineType(types: !1697)
!1697 = !{!206, !1203, !1628, !980, !7}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !1676, file: !12, line: 383, baseType: !1699, size: 64, offset: 320)
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 64)
!1700 = !DISubroutineType(types: !1701)
!1701 = !{null, !1702}
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 64)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !1704, line: 795, size: 256, elements: !1705)
!1704 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!1705 = !{!1706, !1707, !1708, !1709, !1710}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1703, file: !1704, line: 796, baseType: !1203, size: 64)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1703, file: !1704, line: 797, baseType: !1628, size: 64, offset: 64)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !1703, file: !1704, line: 799, baseType: !1012, size: 64, offset: 128)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !1703, file: !1704, line: 800, baseType: !7, size: 32, offset: 192)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !1703, file: !1704, line: 801, baseType: !7, size: 32, offset: 224)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !1676, file: !12, line: 385, baseType: !1712, size: 64, offset: 384)
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 64)
!1713 = !DISubroutineType(types: !1714)
!1714 = !{!206, !1203, !1628, !1374, !7, !7, !1715, !1716}
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 64)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !1676, file: !12, line: 388, baseType: !1718, size: 64, offset: 448)
!1718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 64)
!1719 = !DISubroutineType(types: !1720)
!1720 = !{!206, !1203, !1628, !1374, !7, !7, !1615, !970}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !1676, file: !12, line: 393, baseType: !1722, size: 64, offset: 512)
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 64)
!1723 = !DISubroutineType(types: !1724)
!1724 = !{!1725, !1628, !1725}
!1725 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !977, line: 125, baseType: !1001)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !1676, file: !12, line: 394, baseType: !1727, size: 64, offset: 576)
!1727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1728, size: 64)
!1728 = !DISubroutineType(types: !1729)
!1729 = !{null, !1615, !7, !7}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !1676, file: !12, line: 395, baseType: !1731, size: 64, offset: 640)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 64)
!1732 = !DISubroutineType(types: !1733)
!1733 = !{!206, !1615, !1638}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !1676, file: !12, line: 396, baseType: !1735, size: 64, offset: 704)
!1735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 64)
!1736 = !DISubroutineType(types: !1737)
!1737 = !{null, !1615}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !1676, file: !12, line: 397, baseType: !1739, size: 64, offset: 768)
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 64)
!1740 = !DISubroutineType(types: !1741)
!1741 = !{!1159, !1742, !1781}
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 64)
!1743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !12, line: 320, size: 384, elements: !1744)
!1744 = !{!1745, !1746, !1747, !1751, !1752, !1753, !1756, !1757}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1743, file: !12, line: 321, baseType: !1203, size: 64)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1743, file: !12, line: 326, baseType: !1374, size: 64, offset: 64)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1743, file: !12, line: 327, baseType: !1748, size: 64, offset: 128)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 64)
!1749 = !DISubroutineType(types: !1750)
!1750 = !{null, !1742, !933, !933}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1743, file: !12, line: 328, baseType: !970, size: 64, offset: 192)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1743, file: !12, line: 329, baseType: !206, size: 32, offset: 256)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1743, file: !12, line: 330, baseType: !1754, size: 16, offset: 288)
!1754 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !1002, line: 19, baseType: !1755)
!1755 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !1004, line: 24, baseType: !1066)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1743, file: !12, line: 331, baseType: !1754, size: 16, offset: 304)
!1757 = !DIDerivedType(tag: DW_TAG_member, scope: !1743, file: !12, line: 332, baseType: !1758, size: 64, offset: 320)
!1758 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1743, file: !12, line: 332, size: 64, elements: !1759)
!1759 = !{!1760, !1761}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1758, file: !12, line: 333, baseType: !7, size: 32)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1758, file: !12, line: 334, baseType: !1762, size: 64)
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 64)
!1763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !1704, line: 569, size: 448, elements: !1764)
!1764 = !{!1765, !1766, !1767}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1763, file: !1704, line: 570, baseType: !1615, size: 64)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !1763, file: !1704, line: 571, baseType: !206, size: 32, offset: 64)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1763, file: !1704, line: 572, baseType: !1768, size: 320, offset: 128)
!1768 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !1769, line: 14, baseType: !1770)
!1769 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1769, line: 29, size: 320, elements: !1771)
!1771 = !{!1772, !1773, !1774, !1780}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1770, file: !1769, line: 30, baseType: !7, size: 32)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1770, file: !1769, line: 31, baseType: !970, size: 64, offset: 64)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1770, file: !1769, line: 32, baseType: !1775, size: 64, offset: 128)
!1775 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1769, line: 16, baseType: !1776)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 64)
!1777 = !DISubroutineType(types: !1778)
!1778 = !{!206, !1779, !7, !206, !970}
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 64)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1770, file: !1769, line: 33, baseType: !976, size: 128, offset: 192)
!1781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1782, size: 64)
!1782 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !12, line: 64, flags: DIFlagFwdDecl)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !1676, file: !12, line: 402, baseType: !1784, size: 64, offset: 832)
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 64)
!1785 = !DISubroutineType(types: !1786)
!1786 = !{!206, !1628, !1615, !1615, !115}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !1676, file: !12, line: 404, baseType: !1788, size: 64, offset: 896)
!1788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1789, size: 64)
!1789 = !DISubroutineType(types: !1790)
!1790 = !{!1333, !1615, !1791}
!1791 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1792, line: 305, baseType: !7)
!1792 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !1676, file: !12, line: 405, baseType: !1735, size: 64, offset: 960)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !1676, file: !12, line: 406, baseType: !1691, size: 64, offset: 1024)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !1676, file: !12, line: 407, baseType: !1796, size: 64, offset: 1088)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 64)
!1797 = !DISubroutineType(types: !1798)
!1798 = !{!206, !1615, !1012, !1012}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !1676, file: !12, line: 409, baseType: !1800, size: 64, offset: 1152)
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 64)
!1801 = !DISubroutineType(types: !1802)
!1802 = !{null, !1615, !1803, !1803}
!1803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !1676, file: !12, line: 410, baseType: !1805, size: 64, offset: 1216)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 64)
!1806 = !DISubroutineType(types: !1807)
!1807 = !{!206, !1628, !1615}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !1676, file: !12, line: 413, baseType: !1809, size: 64, offset: 1280)
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 64)
!1810 = !DISubroutineType(types: !1811)
!1811 = !{!206, !1812, !1203, !1814}
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 64)
!1813 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !12, line: 61, flags: DIFlagFwdDecl)
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1725, size: 64)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !1676, file: !12, line: 415, baseType: !1816, size: 64, offset: 1344)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 64)
!1817 = !DISubroutineType(types: !1818)
!1818 = !{null, !1203}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1629, file: !12, line: 466, baseType: !1012, size: 64, offset: 896)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !1629, file: !12, line: 467, baseType: !1821, size: 32, offset: 960)
!1821 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1822, line: 8, baseType: !1042)
!1822 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !1629, file: !12, line: 468, baseType: !1087, offset: 992)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !1629, file: !12, line: 469, baseType: !976, size: 128, offset: 1024)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1629, file: !12, line: 470, baseType: !970, size: 64, offset: 1152)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1624, file: !1617, line: 87, baseType: !1012, size: 64, offset: 192)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1624, file: !1617, line: 94, baseType: !1012, size: 64, offset: 256)
!1828 = !DIDerivedType(tag: DW_TAG_member, scope: !1621, file: !1617, line: 96, baseType: !1829, size: 64)
!1829 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1621, file: !1617, line: 96, size: 64, elements: !1830)
!1830 = !{!1831}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1829, file: !1617, line: 101, baseType: !1832, size: 64)
!1832 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !977, line: 143, baseType: !1001)
!1833 = !DIDerivedType(tag: DW_TAG_member, scope: !1621, file: !1617, line: 103, baseType: !1834, size: 320)
!1834 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1621, file: !1617, line: 103, size: 320, elements: !1835)
!1835 = !{!1836, !1846, !1849, !1850}
!1836 = !DIDerivedType(tag: DW_TAG_member, scope: !1834, file: !1617, line: 104, baseType: !1837, size: 128)
!1837 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1834, file: !1617, line: 104, size: 128, elements: !1838)
!1838 = !{!1839, !1840}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1837, file: !1617, line: 105, baseType: !976, size: 128)
!1840 = !DIDerivedType(tag: DW_TAG_member, scope: !1837, file: !1617, line: 106, baseType: !1841, size: 128)
!1841 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1837, file: !1617, line: 106, size: 128, elements: !1842)
!1842 = !{!1843, !1844, !1845}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1841, file: !1617, line: 107, baseType: !1615, size: 64)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1841, file: !1617, line: 109, baseType: !206, size: 32, offset: 64)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1841, file: !1617, line: 110, baseType: !206, size: 32, offset: 96)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1834, file: !1617, line: 117, baseType: !1847, size: 64, offset: 128)
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 64)
!1848 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !1617, line: 117, flags: DIFlagFwdDecl)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1834, file: !1617, line: 119, baseType: !970, size: 64, offset: 192)
!1850 = !DIDerivedType(tag: DW_TAG_member, scope: !1834, file: !1617, line: 120, baseType: !1851, size: 64, offset: 256)
!1851 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1834, file: !1617, line: 120, size: 64, elements: !1852)
!1852 = !{!1853, !1854, !1855}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1851, file: !1617, line: 121, baseType: !970, size: 64)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1851, file: !1617, line: 122, baseType: !1012, size: 64)
!1855 = !DIDerivedType(tag: DW_TAG_member, scope: !1851, file: !1617, line: 123, baseType: !1856, size: 32)
!1856 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1851, file: !1617, line: 123, size: 32, elements: !1857)
!1857 = !{!1858, !1859, !1860}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1856, file: !1617, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1856, file: !1617, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1856, file: !1617, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1861 = !DIDerivedType(tag: DW_TAG_member, scope: !1621, file: !1617, line: 130, baseType: !1862, size: 192)
!1862 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1621, file: !1617, line: 130, size: 192, elements: !1863)
!1863 = !{!1864, !1865, !1866, !1867, !1868}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1862, file: !1617, line: 131, baseType: !1012, size: 64)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1862, file: !1617, line: 134, baseType: !1057, size: 8, offset: 64)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1862, file: !1617, line: 135, baseType: !1057, size: 8, offset: 72)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1862, file: !1617, line: 136, baseType: !1642, size: 32, offset: 96)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1862, file: !1617, line: 137, baseType: !7, size: 32, offset: 128)
!1869 = !DIDerivedType(tag: DW_TAG_member, scope: !1621, file: !1617, line: 139, baseType: !1870, size: 256)
!1870 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1621, file: !1617, line: 139, size: 256, elements: !1871)
!1871 = !{!1872, !1873, !1874}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1870, file: !1617, line: 140, baseType: !1012, size: 64)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1870, file: !1617, line: 141, baseType: !1642, size: 32, offset: 64)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1870, file: !1617, line: 143, baseType: !976, size: 128, offset: 128)
!1875 = !DIDerivedType(tag: DW_TAG_member, scope: !1621, file: !1617, line: 145, baseType: !1876, size: 256)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1621, file: !1617, line: 145, size: 256, elements: !1877)
!1877 = !{!1878, !1879, !1882, !1883, !4217}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1876, file: !1617, line: 146, baseType: !1012, size: 64)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1876, file: !1617, line: 147, baseType: !1880, size: 64, offset: 64)
!1880 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1881, line: 509, baseType: !1615)
!1881 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1876, file: !1617, line: 148, baseType: !1012, size: 64, offset: 128)
!1883 = !DIDerivedType(tag: DW_TAG_member, scope: !1876, file: !1617, line: 149, baseType: !1884, size: 64, offset: 192)
!1884 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1876, file: !1617, line: 149, size: 64, elements: !1885)
!1885 = !{!1886, !4216}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1884, file: !1617, line: 150, baseType: !1887, size: 64)
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 64)
!1888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !1617, line: 388, size: 7296, elements: !1889)
!1889 = !{!1890, !4214}
!1890 = !DIDerivedType(tag: DW_TAG_member, scope: !1888, file: !1617, line: 389, baseType: !1891, size: 7296)
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1888, file: !1617, line: 389, size: 7296, elements: !1892)
!1892 = !{!1893, !2011, !2012, !2013, !2017, !2018, !2019, !2020, !2021, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2062, !2068, !2071, !2111, !2112, !4198, !4199, !4202, !4203, !4204, !4207, !4208, !4209, !4212, !4213}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1891, file: !1617, line: 390, baseType: !1894, size: 64)
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 64)
!1895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !1617, line: 305, size: 1472, elements: !1896)
!1896 = !{!1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1911, !1912, !1917, !1918, !1921, !2005, !2006, !2007, !2008, !2009}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1895, file: !1617, line: 308, baseType: !1012, size: 64)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1895, file: !1617, line: 309, baseType: !1012, size: 64, offset: 64)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1895, file: !1617, line: 313, baseType: !1894, size: 64, offset: 128)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1895, file: !1617, line: 313, baseType: !1894, size: 64, offset: 192)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1895, file: !1617, line: 315, baseType: !1655, size: 192, align: 64, offset: 256)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1895, file: !1617, line: 323, baseType: !1012, size: 64, offset: 448)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1895, file: !1617, line: 327, baseType: !1887, size: 64, offset: 512)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1895, file: !1617, line: 333, baseType: !1905, size: 64, offset: 576)
!1905 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1881, line: 284, baseType: !1906)
!1906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1881, line: 284, size: 64, elements: !1907)
!1907 = !{!1908}
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1906, file: !1881, line: 284, baseType: !1909, size: 64)
!1909 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1910, line: 19, baseType: !1012)
!1910 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1895, file: !1617, line: 334, baseType: !1012, size: 64, offset: 640)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1895, file: !1617, line: 343, baseType: !1913, size: 256, offset: 704)
!1913 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1895, file: !1617, line: 340, size: 256, elements: !1914)
!1914 = !{!1915, !1916}
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1913, file: !1617, line: 341, baseType: !1655, size: 192, align: 64)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1913, file: !1617, line: 342, baseType: !1012, size: 64, offset: 192)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1895, file: !1617, line: 351, baseType: !976, size: 128, offset: 960)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1895, file: !1617, line: 353, baseType: !1919, size: 64, offset: 1088)
!1919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1920, size: 64)
!1920 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !1617, line: 353, flags: DIFlagFwdDecl)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1895, file: !1617, line: 356, baseType: !1922, size: 64, offset: 1152)
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 64)
!1923 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1924)
!1924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !130, line: 557, size: 832, elements: !1925)
!1925 = !{!1926, !1930, !1931, !1935, !1939, !1979, !1983, !1987, !1991, !1992, !1993, !1997, !2001}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1924, file: !130, line: 558, baseType: !1927, size: 64)
!1927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1928, size: 64)
!1928 = !DISubroutineType(types: !1929)
!1929 = !{null, !1894}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1924, file: !130, line: 559, baseType: !1927, size: 64, offset: 64)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1924, file: !130, line: 560, baseType: !1932, size: 64, offset: 128)
!1932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1933, size: 64)
!1933 = !DISubroutineType(types: !1934)
!1934 = !{!206, !1894, !1012}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1924, file: !130, line: 561, baseType: !1936, size: 64, offset: 192)
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 64)
!1937 = !DISubroutineType(types: !1938)
!1938 = !{!206, !1894}
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1924, file: !130, line: 562, baseType: !1940, size: 64, offset: 256)
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1941, size: 64)
!1941 = !DISubroutineType(types: !1942)
!1942 = !{!1943, !1944}
!1943 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !1617, line: 682, baseType: !7)
!1944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 64)
!1945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !130, line: 508, size: 768, elements: !1946)
!1946 = !{!1947, !1948, !1949, !1950, !1951, !1952, !1959, !1966, !1972, !1973, !1974, !1976, !1978}
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1945, file: !130, line: 509, baseType: !1894, size: 64)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1945, file: !130, line: 510, baseType: !7, size: 32, offset: 64)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1945, file: !130, line: 511, baseType: !1638, size: 32, offset: 96)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1945, file: !130, line: 512, baseType: !1012, size: 64, offset: 128)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1945, file: !130, line: 513, baseType: !1012, size: 64, offset: 192)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1945, file: !130, line: 514, baseType: !1953, size: 64, offset: 256)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64)
!1954 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !1881, line: 385, baseType: !1955)
!1955 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1881, line: 385, size: 64, elements: !1956)
!1956 = !{!1957}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1955, file: !1881, line: 385, baseType: !1958, size: 64)
!1958 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1910, line: 15, baseType: !1012)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1945, file: !130, line: 516, baseType: !1960, size: 64, offset: 320)
!1960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 64)
!1961 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !1881, line: 359, baseType: !1962)
!1962 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1881, line: 359, size: 64, elements: !1963)
!1963 = !{!1964}
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1962, file: !1881, line: 359, baseType: !1965, size: 64)
!1965 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1910, line: 16, baseType: !1012)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1945, file: !130, line: 519, baseType: !1967, size: 64, offset: 384)
!1967 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1910, line: 21, baseType: !1968)
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1910, line: 21, size: 64, elements: !1969)
!1969 = !{!1970}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1968, file: !1910, line: 21, baseType: !1971, size: 64)
!1971 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1910, line: 14, baseType: !1012)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1945, file: !130, line: 521, baseType: !1615, size: 64, offset: 448)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1945, file: !130, line: 522, baseType: !1615, size: 64, offset: 512)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1945, file: !130, line: 528, baseType: !1975, size: 64, offset: 576)
!1975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1967, size: 64)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1945, file: !130, line: 532, baseType: !1977, size: 64, offset: 640)
!1977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1945, file: !130, line: 536, baseType: !1880, size: 64, offset: 704)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1924, file: !130, line: 563, baseType: !1980, size: 64, offset: 320)
!1980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1981, size: 64)
!1981 = !DISubroutineType(types: !1982)
!1982 = !{!1943, !1944, !129}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1924, file: !130, line: 565, baseType: !1984, size: 64, offset: 384)
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 64)
!1985 = !DISubroutineType(types: !1986)
!1986 = !{null, !1944, !1012, !1012}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1924, file: !130, line: 567, baseType: !1988, size: 64, offset: 448)
!1988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1989, size: 64)
!1989 = !DISubroutineType(types: !1990)
!1990 = !{!1012, !1894}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1924, file: !130, line: 571, baseType: !1940, size: 64, offset: 512)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1924, file: !130, line: 574, baseType: !1940, size: 64, offset: 576)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1924, file: !130, line: 579, baseType: !1994, size: 64, offset: 640)
!1994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1995, size: 64)
!1995 = !DISubroutineType(types: !1996)
!1996 = !{!206, !1894, !1012, !970, !206, !206}
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1924, file: !130, line: 585, baseType: !1998, size: 64, offset: 704)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 64)
!1999 = !DISubroutineType(types: !2000)
!2000 = !{!1008, !1894}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1924, file: !130, line: 615, baseType: !2002, size: 64, offset: 768)
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 64)
!2003 = !DISubroutineType(types: !2004)
!2004 = !{!1615, !1894, !1012}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1895, file: !1617, line: 359, baseType: !1012, size: 64, offset: 1216)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1895, file: !1617, line: 361, baseType: !1203, size: 64, offset: 1280)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1895, file: !1617, line: 362, baseType: !970, size: 64, offset: 1344)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1895, file: !1617, line: 365, baseType: !1572, size: 64, offset: 1408)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1895, file: !1617, line: 373, baseType: !2010, offset: 1472)
!2010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !1617, line: 296, elements: !1101)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1891, file: !1617, line: 391, baseType: !1651, size: 64, offset: 64)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1891, file: !1617, line: 392, baseType: !1001, size: 64, offset: 128)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1891, file: !1617, line: 394, baseType: !2014, size: 64, offset: 192)
!2014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2015, size: 64)
!2015 = !DISubroutineType(types: !2016)
!2016 = !{!1012, !1203, !1012, !1012, !1012, !1012}
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1891, file: !1617, line: 398, baseType: !1012, size: 64, offset: 256)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1891, file: !1617, line: 399, baseType: !1012, size: 64, offset: 320)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1891, file: !1617, line: 405, baseType: !1012, size: 64, offset: 384)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1891, file: !1617, line: 406, baseType: !1012, size: 64, offset: 448)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1891, file: !1617, line: 407, baseType: !2022, size: 64, offset: 512)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2023, size: 64)
!2023 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1881, line: 286, baseType: !2024)
!2024 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1881, line: 286, size: 64, elements: !2025)
!2025 = !{!2026}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2024, file: !1881, line: 286, baseType: !2027, size: 64)
!2027 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1910, line: 18, baseType: !1012)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1891, file: !1617, line: 416, baseType: !1642, size: 32, offset: 576)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1891, file: !1617, line: 428, baseType: !1642, size: 32, offset: 608)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1891, file: !1617, line: 437, baseType: !1642, size: 32, offset: 640)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1891, file: !1617, line: 447, baseType: !1642, size: 32, offset: 672)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1891, file: !1617, line: 450, baseType: !1572, size: 64, offset: 704)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1891, file: !1617, line: 452, baseType: !206, size: 32, offset: 768)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1891, file: !1617, line: 454, baseType: !1087, offset: 800)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1891, file: !1617, line: 457, baseType: !1662, size: 256, offset: 832)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1891, file: !1617, line: 459, baseType: !976, size: 128, offset: 1088)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1891, file: !1617, line: 466, baseType: !1012, size: 64, offset: 1216)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1891, file: !1617, line: 467, baseType: !1012, size: 64, offset: 1280)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1891, file: !1617, line: 469, baseType: !1012, size: 64, offset: 1344)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1891, file: !1617, line: 470, baseType: !1012, size: 64, offset: 1408)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1891, file: !1617, line: 471, baseType: !1574, size: 64, offset: 1472)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1891, file: !1617, line: 472, baseType: !1012, size: 64, offset: 1536)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1891, file: !1617, line: 473, baseType: !1012, size: 64, offset: 1600)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1891, file: !1617, line: 474, baseType: !1012, size: 64, offset: 1664)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1891, file: !1617, line: 475, baseType: !1012, size: 64, offset: 1728)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1891, file: !1617, line: 477, baseType: !1087, offset: 1792)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1891, file: !1617, line: 478, baseType: !1012, size: 64, offset: 1792)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1891, file: !1617, line: 478, baseType: !1012, size: 64, offset: 1856)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1891, file: !1617, line: 478, baseType: !1012, size: 64, offset: 1920)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1891, file: !1617, line: 478, baseType: !1012, size: 64, offset: 1984)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1891, file: !1617, line: 479, baseType: !1012, size: 64, offset: 2048)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1891, file: !1617, line: 479, baseType: !1012, size: 64, offset: 2112)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1891, file: !1617, line: 479, baseType: !1012, size: 64, offset: 2176)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1891, file: !1617, line: 480, baseType: !1012, size: 64, offset: 2240)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1891, file: !1617, line: 480, baseType: !1012, size: 64, offset: 2304)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1891, file: !1617, line: 480, baseType: !1012, size: 64, offset: 2368)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1891, file: !1617, line: 480, baseType: !1012, size: 64, offset: 2432)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1891, file: !1617, line: 482, baseType: !2059, size: 2816, offset: 2496)
!2059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1012, size: 2816, elements: !2060)
!2060 = !{!2061}
!2061 = !DISubrange(count: 44)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1891, file: !1617, line: 488, baseType: !2063, size: 256, offset: 5312)
!2063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !2064, line: 60, size: 256, elements: !2065)
!2064 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!2065 = !{!2066}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2063, file: !2064, line: 61, baseType: !2067, size: 256)
!2067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1572, size: 256, elements: !1017)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1891, file: !1617, line: 490, baseType: !2069, size: 64, offset: 5568)
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 64)
!2070 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !1617, line: 490, flags: DIFlagFwdDecl)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1891, file: !1617, line: 493, baseType: !2072, size: 896, offset: 5632)
!2072 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !2073, line: 53, baseType: !2074)
!2073 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2073, line: 13, size: 896, elements: !2075)
!2075 = !{!2076, !2077, !2078, !2079, !2082, !2083, !2084, !2085, !2105, !2106, !2107}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !2074, file: !2073, line: 18, baseType: !1001, size: 64)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !2074, file: !2073, line: 28, baseType: !1574, size: 64, offset: 64)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !2074, file: !2073, line: 31, baseType: !1662, size: 256, offset: 128)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !2074, file: !2073, line: 32, baseType: !2080, size: 64, offset: 384)
!2080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2081, size: 64)
!2081 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !2073, line: 32, flags: DIFlagFwdDecl)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !2074, file: !2073, line: 37, baseType: !1066, size: 16, offset: 448)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2074, file: !2073, line: 40, baseType: !1568, size: 192, offset: 512)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !2074, file: !2073, line: 41, baseType: !970, size: 64, offset: 704)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !2074, file: !2073, line: 42, baseType: !2086, size: 64, offset: 768)
!2086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2087, size: 64)
!2087 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2088)
!2088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !2089, line: 13, size: 896, elements: !2090)
!2089 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!2090 = !{!2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2088, file: !2089, line: 14, baseType: !970, size: 64)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2088, file: !2089, line: 15, baseType: !1012, size: 64, offset: 64)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2088, file: !2089, line: 17, baseType: !1012, size: 64, offset: 128)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !2088, file: !2089, line: 17, baseType: !1012, size: 64, offset: 192)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !2088, file: !2089, line: 19, baseType: !933, size: 64, offset: 256)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !2088, file: !2089, line: 21, baseType: !933, size: 64, offset: 320)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !2088, file: !2089, line: 22, baseType: !933, size: 64, offset: 384)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !2088, file: !2089, line: 23, baseType: !933, size: 64, offset: 448)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !2088, file: !2089, line: 24, baseType: !933, size: 64, offset: 512)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !2088, file: !2089, line: 25, baseType: !933, size: 64, offset: 576)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !2088, file: !2089, line: 26, baseType: !933, size: 64, offset: 640)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !2088, file: !2089, line: 27, baseType: !933, size: 64, offset: 704)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !2088, file: !2089, line: 28, baseType: !933, size: 64, offset: 768)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !2088, file: !2089, line: 29, baseType: !933, size: 64, offset: 832)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !2074, file: !2073, line: 44, baseType: !1642, size: 32, offset: 832)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !2074, file: !2073, line: 50, baseType: !1754, size: 16, offset: 864)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !2074, file: !2073, line: 51, baseType: !2108, size: 16, offset: 880)
!2108 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !1002, line: 18, baseType: !2109)
!2109 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !1004, line: 23, baseType: !2110)
!2110 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1891, file: !1617, line: 495, baseType: !1012, size: 64, offset: 6528)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1891, file: !1617, line: 497, baseType: !2113, size: 64, offset: 6592)
!2113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2114, size: 64)
!2114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !1617, line: 381, size: 384, elements: !2115)
!2115 = !{!2116, !2117, !4197}
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2114, file: !1617, line: 382, baseType: !1642, size: 32)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !2114, file: !1617, line: 383, baseType: !2118, size: 128, offset: 64)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !1617, line: 376, size: 128, elements: !2119)
!2119 = !{!2120, !4195}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2118, file: !1617, line: 377, baseType: !2121, size: 64)
!2121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 64)
!2122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !2123, line: 640, size: 48640, elements: !2124)
!2123 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!2124 = !{!2125, !2131, !2133, !2134, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2151, !2169, !2180, !2265, !2266, !2267, !2278, !2279, !2281, !2282, !2283, !2284, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2362, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2399, !2401, !2402, !2403, !2415, !2416, !2417, !2418, !2419, !2420, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2444, !2449, !2633, !2634, !2635, !2636, !2640, !2643, !2646, !2649, !2652, !2655, !2756, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2802, !2803, !2804, !2805, !2806, !2811, !2812, !2813, !2816, !2817, !3842, !3851, !3854, !3855, !3856, !3859, !3860, !3939, !3940, !3943, !3944, !3947, !3948, !3949, !3953, !3954, !3955, !3968, !3969, !3970, !3980, !3985, !3988, !3994, !3995, !3996, !3997, !3998, !3999, !4000, !4001, !4016, !4017, !4018, !4019, !4020, !4021, !4022, !4023, !4024}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !2122, file: !2123, line: 646, baseType: !2126, size: 128)
!2126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !2127, line: 56, size: 128, elements: !2128)
!2127 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!2128 = !{!2129, !2130}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2126, file: !2127, line: 57, baseType: !1012, size: 64)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2126, file: !2127, line: 58, baseType: !1042, size: 32, offset: 64)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2122, file: !2123, line: 649, baseType: !2132, size: 64, offset: 128)
!2132 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !933)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !2122, file: !2123, line: 657, baseType: !970, size: 64, offset: 192)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2122, file: !2123, line: 658, baseType: !2135, size: 32, offset: 256)
!2135 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !2136, line: 113, baseType: !2137)
!2136 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!2137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !2136, line: 111, size: 32, elements: !2138)
!2138 = !{!2139}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !2137, file: !2136, line: 112, baseType: !1642, size: 32)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2122, file: !2123, line: 660, baseType: !7, size: 32, offset: 288)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !2122, file: !2123, line: 661, baseType: !7, size: 32, offset: 320)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2122, file: !2123, line: 684, baseType: !206, size: 32, offset: 352)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2122, file: !2123, line: 686, baseType: !206, size: 32, offset: 384)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !2122, file: !2123, line: 687, baseType: !206, size: 32, offset: 416)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !2122, file: !2123, line: 688, baseType: !206, size: 32, offset: 448)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !2122, file: !2123, line: 689, baseType: !7, size: 32, offset: 480)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !2122, file: !2123, line: 691, baseType: !2148, size: 64, offset: 512)
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2149, size: 64)
!2149 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2150)
!2150 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !2123, line: 691, flags: DIFlagFwdDecl)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !2122, file: !2123, line: 692, baseType: !2152, size: 832, offset: 576)
!2152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !2123, line: 451, size: 832, elements: !2153)
!2153 = !{!2154, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !2152, file: !2123, line: 453, baseType: !2155, size: 128)
!2155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !2123, line: 325, size: 128, elements: !2156)
!2156 = !{!2157, !2158}
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2155, file: !2123, line: 326, baseType: !1012, size: 64)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !2155, file: !2123, line: 327, baseType: !1042, size: 32, offset: 64)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !2152, file: !2123, line: 454, baseType: !1655, size: 192, align: 64, offset: 128)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !2152, file: !2123, line: 455, baseType: !976, size: 128, offset: 320)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2152, file: !2123, line: 456, baseType: !7, size: 32, offset: 448)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !2152, file: !2123, line: 458, baseType: !1001, size: 64, offset: 512)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2152, file: !2123, line: 459, baseType: !1001, size: 64, offset: 576)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !2152, file: !2123, line: 460, baseType: !1001, size: 64, offset: 640)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !2152, file: !2123, line: 461, baseType: !1001, size: 64, offset: 704)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !2152, file: !2123, line: 463, baseType: !1001, size: 64, offset: 768)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !2152, file: !2123, line: 465, baseType: !2168, offset: 832)
!2168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !2123, line: 415, elements: !1101)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2122, file: !2123, line: 693, baseType: !2170, size: 384, offset: 1408)
!2170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !2123, line: 489, size: 384, elements: !2171)
!2171 = !{!2172, !2173, !2174, !2175, !2176, !2177, !2178}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !2170, file: !2123, line: 490, baseType: !976, size: 128)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2170, file: !2123, line: 491, baseType: !1012, size: 64, offset: 128)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !2170, file: !2123, line: 492, baseType: !1012, size: 64, offset: 192)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !2170, file: !2123, line: 493, baseType: !7, size: 32, offset: 256)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2170, file: !2123, line: 494, baseType: !1066, size: 16, offset: 288)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !2170, file: !2123, line: 495, baseType: !1066, size: 16, offset: 304)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !2170, file: !2123, line: 497, baseType: !2179, size: 64, offset: 320)
!2179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2170, size: 64)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !2122, file: !2123, line: 697, baseType: !2181, size: 1792, offset: 1792)
!2181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !2123, line: 507, size: 1792, elements: !2182)
!2182 = !{!2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2262, !2263}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2181, file: !2123, line: 508, baseType: !1655, size: 192, align: 64)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !2181, file: !2123, line: 515, baseType: !1001, size: 64, offset: 192)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !2181, file: !2123, line: 516, baseType: !1001, size: 64, offset: 256)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !2181, file: !2123, line: 517, baseType: !1001, size: 64, offset: 320)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !2181, file: !2123, line: 518, baseType: !1001, size: 64, offset: 384)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !2181, file: !2123, line: 519, baseType: !1001, size: 64, offset: 448)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !2181, file: !2123, line: 526, baseType: !1578, size: 64, offset: 512)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !2181, file: !2123, line: 527, baseType: !1001, size: 64, offset: 576)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2181, file: !2123, line: 528, baseType: !7, size: 32, offset: 640)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !2181, file: !2123, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !2181, file: !2123, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !2181, file: !2123, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !2181, file: !2123, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !2181, file: !2123, line: 563, baseType: !2197, size: 512, offset: 704)
!2197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !6, line: 118, size: 512, elements: !2198)
!2198 = !{!2199, !2207, !2208, !2213, !2256, !2259, !2260, !2261}
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2197, file: !6, line: 119, baseType: !2200, size: 256)
!2200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !2201, line: 9, size: 256, elements: !2202)
!2201 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!2202 = !{!2203, !2204}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2200, file: !2201, line: 10, baseType: !1655, size: 192, align: 64)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2200, file: !2201, line: 11, baseType: !2205, size: 64, offset: 192)
!2205 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !2206, line: 29, baseType: !1578)
!2206 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !2197, file: !6, line: 120, baseType: !2205, size: 64, offset: 256)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2197, file: !6, line: 121, baseType: !2209, size: 64, offset: 320)
!2209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2210, size: 64)
!2210 = !DISubroutineType(types: !2211)
!2211 = !{!5, !2212}
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2197, size: 64)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2197, file: !6, line: 122, baseType: !2214, size: 64, offset: 384)
!2214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2215, size: 64)
!2215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !6, line: 159, size: 512, align: 512, elements: !2216)
!2216 = !{!2217, !2237, !2238, !2241, !2246, !2247, !2251, !2255}
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !2215, file: !6, line: 160, baseType: !2218, size: 64)
!2218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2219, size: 64)
!2219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !6, line: 214, size: 4608, align: 512, elements: !2220)
!2220 = !{!2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2219, file: !6, line: 215, baseType: !1668)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2219, file: !6, line: 216, baseType: !7, size: 32)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !2219, file: !6, line: 217, baseType: !7, size: 32, offset: 32)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !2219, file: !6, line: 218, baseType: !7, size: 32, offset: 64)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !2219, file: !6, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !2219, file: !6, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !2219, file: !6, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !2219, file: !6, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !2219, file: !6, line: 233, baseType: !2205, size: 64, offset: 128)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !2219, file: !6, line: 234, baseType: !2212, size: 64, offset: 192)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !2219, file: !6, line: 235, baseType: !2205, size: 64, offset: 256)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !2219, file: !6, line: 236, baseType: !2212, size: 64, offset: 320)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !2219, file: !6, line: 237, baseType: !2234, size: 4096, offset: 512)
!2234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2215, size: 4096, elements: !2235)
!2235 = !{!2236}
!2236 = !DISubrange(count: 8)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2215, file: !6, line: 161, baseType: !7, size: 32, offset: 64)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2215, file: !6, line: 162, baseType: !2239, size: 32, offset: 96)
!2239 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !977, line: 27, baseType: !2240)
!2240 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !1161, line: 96, baseType: !206)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2215, file: !6, line: 163, baseType: !2242, size: 32, offset: 128)
!2242 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !1239, line: 276, baseType: !2243)
!2243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !1239, line: 276, size: 32, elements: !2244)
!2244 = !{!2245}
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2243, file: !1239, line: 276, baseType: !1243, size: 32)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !2215, file: !6, line: 164, baseType: !2212, size: 64, offset: 192)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2215, file: !6, line: 165, baseType: !2248, size: 128, offset: 256)
!2248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !2201, line: 14, size: 128, elements: !2249)
!2249 = !{!2250}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2248, file: !2201, line: 15, baseType: !1647, size: 128)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !2215, file: !6, line: 166, baseType: !2252, size: 64, offset: 384)
!2252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 64)
!2253 = !DISubroutineType(types: !2254)
!2254 = !{!2205}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2215, file: !6, line: 167, baseType: !2205, size: 64, offset: 448)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2197, file: !6, line: 123, baseType: !2257, size: 8, offset: 448)
!2257 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !1002, line: 17, baseType: !2258)
!2258 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !1004, line: 21, baseType: !1057)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !2197, file: !6, line: 124, baseType: !2257, size: 8, offset: 456)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !2197, file: !6, line: 125, baseType: !2257, size: 8, offset: 464)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !2197, file: !6, line: 126, baseType: !2257, size: 8, offset: 472)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !2181, file: !2123, line: 572, baseType: !2197, size: 512, offset: 1216)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !2181, file: !2123, line: 580, baseType: !2264, size: 64, offset: 1728)
!2264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2181, size: 64)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2122, file: !2123, line: 721, baseType: !7, size: 32, offset: 3584)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !2122, file: !2123, line: 722, baseType: !206, size: 32, offset: 3616)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !2122, file: !2123, line: 723, baseType: !2268, size: 64, offset: 3648)
!2268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2269, size: 64)
!2269 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2270)
!2270 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !2271, line: 17, baseType: !2272)
!2271 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!2272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !2271, line: 17, size: 64, elements: !2273)
!2273 = !{!2274}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2272, file: !2271, line: 17, baseType: !2275, size: 64)
!2275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1012, size: 64, elements: !2276)
!2276 = !{!2277}
!2277 = !DISubrange(count: 1)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !2122, file: !2123, line: 724, baseType: !2270, size: 64, offset: 3712)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !2122, file: !2123, line: 749, baseType: !2280, offset: 3776)
!2280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !2123, line: 290, elements: !1101)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2122, file: !2123, line: 751, baseType: !976, size: 128, offset: 3776)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !2122, file: !2123, line: 757, baseType: !1887, size: 64, offset: 3904)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !2122, file: !2123, line: 758, baseType: !1887, size: 64, offset: 3968)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !2122, file: !2123, line: 761, baseType: !2285, size: 320, offset: 4032)
!2285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !2064, line: 34, size: 320, elements: !2286)
!2286 = !{!2287, !2288}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !2285, file: !2064, line: 35, baseType: !1001, size: 64)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !2285, file: !2064, line: 36, baseType: !2289, size: 256, offset: 64)
!2289 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1894, size: 256, elements: !1017)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !2122, file: !2123, line: 766, baseType: !206, size: 32, offset: 4352)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !2122, file: !2123, line: 767, baseType: !206, size: 32, offset: 4384)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !2122, file: !2123, line: 768, baseType: !206, size: 32, offset: 4416)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !2122, file: !2123, line: 770, baseType: !206, size: 32, offset: 4448)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !2122, file: !2123, line: 772, baseType: !1012, size: 64, offset: 4480)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !2122, file: !2123, line: 775, baseType: !7, size: 32, offset: 4544)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !2122, file: !2123, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !2122, file: !2123, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !2122, file: !2123, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !2122, file: !2123, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !2122, file: !2123, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !2122, file: !2123, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !2122, file: !2123, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !2122, file: !2123, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !2122, file: !2123, line: 831, baseType: !1012, size: 64, offset: 4672)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !2122, file: !2123, line: 833, baseType: !2306, size: 384, offset: 4736)
!2306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !136, line: 25, size: 384, elements: !2307)
!2307 = !{!2308, !2313}
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2306, file: !136, line: 26, baseType: !2309, size: 64)
!2309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2310, size: 64)
!2310 = !DISubroutineType(types: !2311)
!2311 = !{!933, !2312}
!2312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2306, size: 64)
!2313 = !DIDerivedType(tag: DW_TAG_member, scope: !2306, file: !136, line: 27, baseType: !2314, size: 320, offset: 64)
!2314 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2306, file: !136, line: 27, size: 320, elements: !2315)
!2315 = !{!2316, !2325, !2352}
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !2314, file: !136, line: 36, baseType: !2317, size: 320)
!2317 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2314, file: !136, line: 29, size: 320, elements: !2318)
!2318 = !{!2319, !2320, !2321, !2322, !2323, !2324}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !2317, file: !136, line: 30, baseType: !1041, size: 64)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2317, file: !136, line: 31, baseType: !1042, size: 32, offset: 64)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2317, file: !136, line: 32, baseType: !1042, size: 32, offset: 96)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !2317, file: !136, line: 33, baseType: !1042, size: 32, offset: 128)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2317, file: !136, line: 34, baseType: !1001, size: 64, offset: 192)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !2317, file: !136, line: 35, baseType: !1041, size: 64, offset: 256)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !2314, file: !136, line: 46, baseType: !2326, size: 192)
!2326 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2314, file: !136, line: 38, size: 192, elements: !2327)
!2327 = !{!2328, !2329, !2330, !2351}
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2326, file: !136, line: 39, baseType: !2239, size: 32)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2326, file: !136, line: 40, baseType: !135, size: 32, offset: 32)
!2330 = !DIDerivedType(tag: DW_TAG_member, scope: !2326, file: !136, line: 41, baseType: !2331, size: 64, offset: 64)
!2331 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2326, file: !136, line: 41, size: 64, elements: !2332)
!2332 = !{!2333, !2341}
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !2331, file: !136, line: 42, baseType: !2334, size: 64)
!2334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 64)
!2335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !2336, line: 7, size: 128, elements: !2337)
!2336 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!2337 = !{!2338, !2340}
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2335, file: !2336, line: 8, baseType: !2339, size: 64)
!2339 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !1161, line: 93, baseType: !1376)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2335, file: !2336, line: 9, baseType: !1376, size: 64, offset: 64)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !2331, file: !136, line: 43, baseType: !2342, size: 64)
!2342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2343, size: 64)
!2343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !2344, line: 7, size: 64, elements: !2345)
!2344 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!2345 = !{!2346, !2350}
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2343, file: !2344, line: 8, baseType: !2347, size: 32)
!2347 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !2344, line: 5, baseType: !2348)
!2348 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !1002, line: 20, baseType: !2349)
!2349 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !1004, line: 26, baseType: !206)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2343, file: !2344, line: 9, baseType: !2348, size: 32, offset: 32)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2326, file: !136, line: 45, baseType: !1001, size: 64, offset: 128)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2314, file: !136, line: 54, baseType: !2353, size: 256)
!2353 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2314, file: !136, line: 48, size: 256, elements: !2354)
!2354 = !{!2355, !2358, !2359, !2360, !2361}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !2353, file: !136, line: 49, baseType: !2356, size: 64)
!2356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2357, size: 64)
!2357 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !136, line: 14, flags: DIFlagFwdDecl)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !2353, file: !136, line: 50, baseType: !206, size: 32, offset: 64)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !2353, file: !136, line: 51, baseType: !206, size: 32, offset: 96)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2353, file: !136, line: 52, baseType: !1012, size: 64, offset: 128)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2353, file: !136, line: 53, baseType: !1012, size: 64, offset: 192)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2122, file: !2123, line: 835, baseType: !2363, size: 32, offset: 5120)
!2363 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !977, line: 22, baseType: !2364)
!2364 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !1161, line: 28, baseType: !206)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !2122, file: !2123, line: 836, baseType: !2363, size: 32, offset: 5152)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !2122, file: !2123, line: 840, baseType: !1012, size: 64, offset: 5184)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !2122, file: !2123, line: 849, baseType: !2121, size: 64, offset: 5248)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2122, file: !2123, line: 852, baseType: !2121, size: 64, offset: 5312)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2122, file: !2123, line: 857, baseType: !976, size: 128, offset: 5376)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !2122, file: !2123, line: 858, baseType: !976, size: 128, offset: 5504)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !2122, file: !2123, line: 859, baseType: !2121, size: 64, offset: 5632)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !2122, file: !2123, line: 867, baseType: !976, size: 128, offset: 5696)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !2122, file: !2123, line: 868, baseType: !976, size: 128, offset: 5824)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !2122, file: !2123, line: 871, baseType: !2375, size: 64, offset: 5952)
!2375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2376, size: 64)
!2376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !21, line: 59, size: 768, elements: !2377)
!2377 = !{!2378, !2379, !2380, !2381, !2383, !2384, !2390, !2391}
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2376, file: !21, line: 61, baseType: !2135, size: 32)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2376, file: !21, line: 62, baseType: !7, size: 32, offset: 32)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2376, file: !21, line: 63, baseType: !1087, offset: 64)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2376, file: !21, line: 65, baseType: !2382, size: 256, offset: 64)
!2382 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1480, size: 256, elements: !1017)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2376, file: !21, line: 66, baseType: !1480, size: 64, offset: 320)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !2376, file: !21, line: 68, baseType: !2385, size: 128, offset: 384)
!2385 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1769, line: 40, baseType: !2386)
!2386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1769, line: 36, size: 128, elements: !2387)
!2387 = !{!2388, !2389}
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2386, file: !1769, line: 37, baseType: !1087)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2386, file: !1769, line: 38, baseType: !976, size: 128)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2376, file: !21, line: 69, baseType: !1216, size: 128, align: 64, offset: 512)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !2376, file: !21, line: 70, baseType: !2392, size: 128, offset: 640)
!2392 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2393, size: 128, elements: !2276)
!2393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !21, line: 54, size: 128, elements: !2394)
!2394 = !{!2395, !2396}
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !2393, file: !21, line: 55, baseType: !206, size: 32)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2393, file: !21, line: 56, baseType: !2397, size: 64, offset: 64)
!2397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2398, size: 64)
!2398 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !21, line: 56, flags: DIFlagFwdDecl)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !2122, file: !2123, line: 872, baseType: !2400, size: 512, offset: 6016)
!2400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1484, size: 512, elements: !1017)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !2122, file: !2123, line: 873, baseType: !976, size: 128, offset: 6528)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !2122, file: !2123, line: 874, baseType: !976, size: 128, offset: 6656)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !2122, file: !2123, line: 876, baseType: !2404, size: 64, offset: 6784)
!2404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2405, size: 64)
!2405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !2406, line: 26, size: 192, elements: !2407)
!2406 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!2407 = !{!2408, !2409}
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2405, file: !2406, line: 27, baseType: !7, size: 32)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2405, file: !2406, line: 28, baseType: !2410, size: 128, offset: 64)
!2410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !2411, line: 43, size: 128, elements: !2412)
!2411 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!2412 = !{!2413, !2414}
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2410, file: !2411, line: 44, baseType: !1668)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !2410, file: !2411, line: 45, baseType: !976, size: 128)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !2122, file: !2123, line: 879, baseType: !1550, size: 64, offset: 6848)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !2122, file: !2123, line: 882, baseType: !1550, size: 64, offset: 6912)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2122, file: !2123, line: 884, baseType: !1001, size: 64, offset: 6976)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2122, file: !2123, line: 885, baseType: !1001, size: 64, offset: 7040)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2122, file: !2123, line: 890, baseType: !1001, size: 64, offset: 7104)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2122, file: !2123, line: 891, baseType: !2421, size: 128, offset: 7168)
!2421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !2123, line: 242, size: 128, elements: !2422)
!2422 = !{!2423, !2424, !2425}
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2421, file: !2123, line: 244, baseType: !1001, size: 64)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2421, file: !2123, line: 245, baseType: !1001, size: 64, offset: 64)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2421, file: !2123, line: 246, baseType: !1668, offset: 128)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2122, file: !2123, line: 900, baseType: !1012, size: 64, offset: 7296)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2122, file: !2123, line: 901, baseType: !1012, size: 64, offset: 7360)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !2122, file: !2123, line: 904, baseType: !1001, size: 64, offset: 7424)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !2122, file: !2123, line: 907, baseType: !1001, size: 64, offset: 7488)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2122, file: !2123, line: 910, baseType: !1012, size: 64, offset: 7552)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2122, file: !2123, line: 911, baseType: !1012, size: 64, offset: 7616)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2122, file: !2123, line: 914, baseType: !2433, size: 640, offset: 7680)
!2433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !2434, line: 123, size: 640, elements: !2435)
!2434 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!2435 = !{!2436, !2442, !2443}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !2433, file: !2434, line: 124, baseType: !2437, size: 576)
!2437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2438, size: 576, elements: !1129)
!2438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !2434, line: 108, size: 192, elements: !2439)
!2439 = !{!2440, !2441}
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !2438, file: !2434, line: 109, baseType: !1001, size: 64)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !2438, file: !2434, line: 110, baseType: !2248, size: 128, offset: 64)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !2433, file: !2434, line: 125, baseType: !7, size: 32, offset: 576)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !2433, file: !2434, line: 126, baseType: !7, size: 32, offset: 608)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !2122, file: !2123, line: 917, baseType: !2445, size: 192, offset: 8320)
!2445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !2434, line: 134, size: 192, elements: !2446)
!2446 = !{!2447, !2448}
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2445, file: !2434, line: 135, baseType: !1216, size: 128, align: 64)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !2445, file: !2434, line: 136, baseType: !7, size: 32, offset: 128)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !2122, file: !2123, line: 923, baseType: !2450, size: 64, offset: 8512)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 64)
!2451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2452)
!2452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !2453, line: 111, size: 1280, elements: !2454)
!2453 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!2454 = !{!2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2474, !2475, !2476, !2477, !2478, !2479, !2586, !2587, !2588, !2589, !2615, !2618, !2628}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2452, file: !2453, line: 112, baseType: !1642, size: 32)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2452, file: !2453, line: 120, baseType: !1278, size: 32, offset: 32)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2452, file: !2453, line: 121, baseType: !1286, size: 32, offset: 64)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !2452, file: !2453, line: 122, baseType: !1278, size: 32, offset: 96)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !2452, file: !2453, line: 123, baseType: !1286, size: 32, offset: 128)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !2452, file: !2453, line: 124, baseType: !1278, size: 32, offset: 160)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !2452, file: !2453, line: 125, baseType: !1286, size: 32, offset: 192)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !2452, file: !2453, line: 126, baseType: !1278, size: 32, offset: 224)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !2452, file: !2453, line: 127, baseType: !1286, size: 32, offset: 256)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !2452, file: !2453, line: 128, baseType: !7, size: 32, offset: 288)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !2452, file: !2453, line: 129, baseType: !2466, size: 64, offset: 320)
!2466 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !2467, line: 26, baseType: !2468)
!2467 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!2468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !2467, line: 24, size: 64, elements: !2469)
!2469 = !{!2470}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2468, file: !2467, line: 25, baseType: !2471, size: 64)
!2471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1043, size: 64, elements: !2472)
!2472 = !{!2473}
!2473 = !DISubrange(count: 2)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !2452, file: !2453, line: 130, baseType: !2466, size: 64, offset: 384)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !2452, file: !2453, line: 131, baseType: !2466, size: 64, offset: 448)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !2452, file: !2453, line: 132, baseType: !2466, size: 64, offset: 512)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !2452, file: !2453, line: 133, baseType: !2466, size: 64, offset: 576)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !2452, file: !2453, line: 135, baseType: !1057, size: 8, offset: 640)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !2452, file: !2453, line: 137, baseType: !2480, size: 64, offset: 704)
!2480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2481, size: 64)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !2482, line: 189, size: 1664, elements: !2483)
!2482 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!2483 = !{!2484, !2485, !2488, !2493, !2494, !2497, !2498, !2503, !2504, !2505, !2506, !2508, !2509, !2510, !2511, !2512, !2550, !2571}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2481, file: !2482, line: 190, baseType: !2135, size: 32)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !2481, file: !2482, line: 191, baseType: !2486, size: 32, offset: 32)
!2486 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !2482, line: 28, baseType: !2487)
!2487 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !977, line: 98, baseType: !2348)
!2488 = !DIDerivedType(tag: DW_TAG_member, scope: !2481, file: !2482, line: 192, baseType: !2489, size: 192, offset: 64)
!2489 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2481, file: !2482, line: 192, size: 192, elements: !2490)
!2490 = !{!2491, !2492}
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !2489, file: !2482, line: 193, baseType: !976, size: 128)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !2489, file: !2482, line: 194, baseType: !1655, size: 192, align: 64)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !2481, file: !2482, line: 199, baseType: !1662, size: 256, offset: 256)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2481, file: !2482, line: 200, baseType: !2495, size: 64, offset: 512)
!2495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2496, size: 64)
!2496 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !2482, line: 200, flags: DIFlagFwdDecl)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !2481, file: !2482, line: 201, baseType: !970, size: 64, offset: 576)
!2498 = !DIDerivedType(tag: DW_TAG_member, scope: !2481, file: !2482, line: 202, baseType: !2499, size: 64, offset: 640)
!2499 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2481, file: !2482, line: 202, size: 64, elements: !2500)
!2500 = !{!2501, !2502}
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !2499, file: !2482, line: 203, baseType: !1382, size: 64)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !2499, file: !2482, line: 204, baseType: !1382, size: 64)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !2481, file: !2482, line: 206, baseType: !1382, size: 64, offset: 704)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2481, file: !2482, line: 207, baseType: !1278, size: 32, offset: 768)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2481, file: !2482, line: 208, baseType: !1286, size: 32, offset: 800)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !2481, file: !2482, line: 209, baseType: !2507, size: 32, offset: 832)
!2507 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !2482, line: 31, baseType: !1402)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !2481, file: !2482, line: 210, baseType: !1066, size: 16, offset: 864)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !2481, file: !2482, line: 211, baseType: !1066, size: 16, offset: 880)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2481, file: !2482, line: 215, baseType: !2110, size: 16, offset: 896)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2481, file: !2482, line: 222, baseType: !1012, size: 64, offset: 960)
!2512 = !DIDerivedType(tag: DW_TAG_member, scope: !2481, file: !2482, line: 239, baseType: !2513, size: 320, offset: 1024)
!2513 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2481, file: !2482, line: 239, size: 320, elements: !2514)
!2514 = !{!2515, !2542}
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !2513, file: !2482, line: 240, baseType: !2516, size: 320)
!2516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !2482, line: 108, size: 320, elements: !2517)
!2517 = !{!2518, !2519, !2531, !2534, !2541}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2516, file: !2482, line: 110, baseType: !1012, size: 64)
!2519 = !DIDerivedType(tag: DW_TAG_member, scope: !2516, file: !2482, line: 111, baseType: !2520, size: 64, offset: 64)
!2520 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2516, file: !2482, line: 111, size: 64, elements: !2521)
!2521 = !{!2522, !2530}
!2522 = !DIDerivedType(tag: DW_TAG_member, scope: !2520, file: !2482, line: 112, baseType: !2523, size: 64)
!2523 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2520, file: !2482, line: 112, size: 64, elements: !2524)
!2524 = !{!2525, !2526}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !2523, file: !2482, line: 114, baseType: !1754, size: 16)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !2523, file: !2482, line: 115, baseType: !2527, size: 48, offset: 16)
!2527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1010, size: 48, elements: !2528)
!2528 = !{!2529}
!2529 = !DISubrange(count: 6)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2520, file: !2482, line: 121, baseType: !1012, size: 64)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2516, file: !2482, line: 123, baseType: !2532, size: 64, offset: 128)
!2532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2533, size: 64)
!2533 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !2482, line: 96, flags: DIFlagFwdDecl)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2516, file: !2482, line: 124, baseType: !2535, size: 64, offset: 192)
!2535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2536, size: 64)
!2536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !2482, line: 102, size: 192, elements: !2537)
!2537 = !{!2538, !2539, !2540}
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2536, file: !2482, line: 103, baseType: !1216, size: 128, align: 64)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2536, file: !2482, line: 104, baseType: !2135, size: 32, offset: 128)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !2536, file: !2482, line: 105, baseType: !1333, size: 8, offset: 160)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2516, file: !2482, line: 125, baseType: !1008, size: 64, offset: 256)
!2542 = !DIDerivedType(tag: DW_TAG_member, scope: !2513, file: !2482, line: 241, baseType: !2543, size: 320)
!2543 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2513, file: !2482, line: 241, size: 320, elements: !2544)
!2544 = !{!2545, !2546, !2547, !2548, !2549}
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2543, file: !2482, line: 242, baseType: !1012, size: 64)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !2543, file: !2482, line: 243, baseType: !1012, size: 64, offset: 64)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2543, file: !2482, line: 244, baseType: !2532, size: 64, offset: 128)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2543, file: !2482, line: 245, baseType: !2535, size: 64, offset: 192)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2543, file: !2482, line: 246, baseType: !1128, size: 64, offset: 256)
!2550 = !DIDerivedType(tag: DW_TAG_member, scope: !2481, file: !2482, line: 254, baseType: !2551, size: 256, offset: 1344)
!2551 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2481, file: !2482, line: 254, size: 256, elements: !2552)
!2552 = !{!2553, !2559}
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !2551, file: !2482, line: 255, baseType: !2554, size: 256)
!2554 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !2482, line: 128, size: 256, elements: !2555)
!2555 = !{!2556, !2557}
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !2554, file: !2482, line: 129, baseType: !970, size: 64)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2554, file: !2482, line: 130, baseType: !2558, size: 256)
!2558 = !DICompositeType(tag: DW_TAG_array_type, baseType: !970, size: 256, elements: !1017)
!2559 = !DIDerivedType(tag: DW_TAG_member, scope: !2551, file: !2482, line: 256, baseType: !2560, size: 256)
!2560 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2551, file: !2482, line: 256, size: 256, elements: !2561)
!2561 = !{!2562, !2563}
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !2560, file: !2482, line: 258, baseType: !976, size: 128)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !2560, file: !2482, line: 259, baseType: !2564, size: 128, offset: 128)
!2564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !2565, line: 22, size: 128, elements: !2566)
!2565 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!2566 = !{!2567, !2570}
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2564, file: !2565, line: 23, baseType: !2568, size: 64)
!2568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2569, size: 64)
!2569 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !2565, line: 23, flags: DIFlagFwdDecl)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !2564, file: !2565, line: 24, baseType: !1012, size: 64, offset: 64)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !2481, file: !2482, line: 274, baseType: !2572, size: 64, offset: 1600)
!2572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2573, size: 64)
!2573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !2482, line: 170, size: 192, elements: !2574)
!2574 = !{!2575, !2584, !2585}
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2573, file: !2482, line: 171, baseType: !2576, size: 64)
!2576 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !2482, line: 165, baseType: !2577)
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2578, size: 64)
!2578 = !DISubroutineType(types: !2579)
!2579 = !{!206, !2480, !2580, !2582, !2480}
!2580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2581, size: 64)
!2581 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2533)
!2582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2583, size: 64)
!2583 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2554)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2573, file: !2482, line: 172, baseType: !2480, size: 64, offset: 64)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !2573, file: !2482, line: 173, baseType: !2532, size: 64, offset: 128)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !2452, file: !2453, line: 138, baseType: !2480, size: 64, offset: 768)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !2452, file: !2453, line: 139, baseType: !2480, size: 64, offset: 832)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !2452, file: !2453, line: 140, baseType: !2480, size: 64, offset: 896)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2452, file: !2453, line: 145, baseType: !2590, size: 64, offset: 960)
!2590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2591, size: 64)
!2591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !2592, line: 13, size: 896, elements: !2593)
!2592 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!2593 = !{!2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604}
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2591, file: !2592, line: 14, baseType: !2135, size: 32)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !2591, file: !2592, line: 15, baseType: !1642, size: 32, offset: 32)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !2591, file: !2592, line: 16, baseType: !1642, size: 32, offset: 64)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !2591, file: !2592, line: 21, baseType: !1572, size: 64, offset: 128)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !2591, file: !2592, line: 27, baseType: !1012, size: 64, offset: 192)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !2591, file: !2592, line: 28, baseType: !1012, size: 64, offset: 256)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !2591, file: !2592, line: 29, baseType: !1572, size: 64, offset: 320)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !2591, file: !2592, line: 32, baseType: !1484, size: 128, offset: 384)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2591, file: !2592, line: 33, baseType: !1278, size: 32, offset: 512)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2591, file: !2592, line: 37, baseType: !1572, size: 64, offset: 576)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !2591, file: !2592, line: 44, baseType: !2605, size: 256, offset: 640)
!2605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !2606, line: 15, size: 256, elements: !2607)
!2606 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!2607 = !{!2608, !2609, !2610, !2611, !2612, !2613, !2614}
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2605, file: !2606, line: 16, baseType: !1668)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !2605, file: !2606, line: 18, baseType: !206, size: 32)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !2605, file: !2606, line: 19, baseType: !206, size: 32, offset: 32)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !2605, file: !2606, line: 20, baseType: !206, size: 32, offset: 64)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !2605, file: !2606, line: 21, baseType: !206, size: 32, offset: 96)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !2605, file: !2606, line: 22, baseType: !1012, size: 64, offset: 128)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2605, file: !2606, line: 23, baseType: !1012, size: 64, offset: 192)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2452, file: !2453, line: 146, baseType: !2616, size: 64, offset: 1024)
!2616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2617, size: 64)
!2617 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !1279, line: 18, flags: DIFlagFwdDecl)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !2452, file: !2453, line: 147, baseType: !2619, size: 64, offset: 1088)
!2619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2620, size: 64)
!2620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !2453, line: 25, size: 64, elements: !2621)
!2621 = !{!2622, !2623, !2624}
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2620, file: !2453, line: 26, baseType: !1642, size: 32)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !2620, file: !2453, line: 27, baseType: !206, size: 32, offset: 32)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2620, file: !2453, line: 28, baseType: !2625, offset: 64)
!2625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1286, elements: !2626)
!2626 = !{!2627}
!2627 = !DISubrange(count: 0)
!2628 = !DIDerivedType(tag: DW_TAG_member, scope: !2452, file: !2453, line: 149, baseType: !2629, size: 128, offset: 1152)
!2629 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2452, file: !2453, line: 149, size: 128, elements: !2630)
!2630 = !{!2631, !2632}
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !2629, file: !2453, line: 150, baseType: !206, size: 32)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2629, file: !2453, line: 151, baseType: !1216, size: 128, align: 64)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !2122, file: !2123, line: 926, baseType: !2450, size: 64, offset: 8576)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !2122, file: !2123, line: 929, baseType: !2450, size: 64, offset: 8640)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !2122, file: !2123, line: 933, baseType: !2480, size: 64, offset: 8704)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !2122, file: !2123, line: 943, baseType: !2637, size: 128, offset: 8768)
!2637 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1010, size: 128, elements: !2638)
!2638 = !{!2639}
!2639 = !DISubrange(count: 16)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !2122, file: !2123, line: 945, baseType: !2641, size: 64, offset: 8896)
!2641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2642, size: 64)
!2642 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !2123, line: 49, flags: DIFlagFwdDecl)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !2122, file: !2123, line: 956, baseType: !2644, size: 64, offset: 8960)
!2644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2645, size: 64)
!2645 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !2123, line: 45, flags: DIFlagFwdDecl)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2122, file: !2123, line: 959, baseType: !2647, size: 64, offset: 9024)
!2647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2648, size: 64)
!2648 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !2123, line: 959, flags: DIFlagFwdDecl)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !2122, file: !2123, line: 962, baseType: !2650, size: 64, offset: 9088)
!2650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2651, size: 64)
!2651 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !2123, line: 66, flags: DIFlagFwdDecl)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !2122, file: !2123, line: 966, baseType: !2653, size: 64, offset: 9152)
!2653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2654, size: 64)
!2654 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !2123, line: 50, flags: DIFlagFwdDecl)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2122, file: !2123, line: 969, baseType: !2656, size: 64, offset: 9216)
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2657, size: 64)
!2657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !2658, line: 82, size: 7296, elements: !2659)
!2658 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!2659 = !{!2660, !2661, !2662, !2663, !2664, !2665, !2666, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2695, !2704, !2705, !2707, !2708, !2709, !2712, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2742, !2743, !2750, !2751, !2752, !2753, !2754, !2755}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !2657, file: !2658, line: 83, baseType: !2135, size: 32)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !2657, file: !2658, line: 84, baseType: !1642, size: 32, offset: 32)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2657, file: !2658, line: 85, baseType: !206, size: 32, offset: 64)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !2657, file: !2658, line: 86, baseType: !976, size: 128, offset: 128)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !2657, file: !2658, line: 88, baseType: !2385, size: 128, offset: 256)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !2657, file: !2658, line: 91, baseType: !2121, size: 64, offset: 384)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !2657, file: !2658, line: 94, baseType: !2667, size: 192, offset: 448)
!2667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !2668, line: 30, size: 192, elements: !2669)
!2668 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!2669 = !{!2670, !2671}
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2667, file: !2668, line: 31, baseType: !976, size: 128)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2667, file: !2668, line: 32, baseType: !2672, size: 64, offset: 128)
!2672 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !2673, line: 25, baseType: !2674)
!2673 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!2674 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2673, line: 23, size: 64, elements: !2675)
!2675 = !{!2676}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !2674, file: !2673, line: 24, baseType: !2275, size: 64)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !2657, file: !2658, line: 97, baseType: !1480, size: 64, offset: 640)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !2657, file: !2658, line: 100, baseType: !206, size: 32, offset: 704)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !2657, file: !2658, line: 106, baseType: !206, size: 32, offset: 736)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !2657, file: !2658, line: 107, baseType: !2121, size: 64, offset: 768)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !2657, file: !2658, line: 110, baseType: !206, size: 32, offset: 832)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2657, file: !2658, line: 111, baseType: !7, size: 32, offset: 864)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !2657, file: !2658, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !2657, file: !2658, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !2657, file: !2658, line: 128, baseType: !206, size: 32, offset: 928)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !2657, file: !2658, line: 129, baseType: !976, size: 128, offset: 960)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !2657, file: !2658, line: 132, baseType: !2197, size: 512, offset: 1088)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !2657, file: !2658, line: 133, baseType: !2205, size: 64, offset: 1600)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !2657, file: !2658, line: 140, baseType: !2690, size: 256, offset: 1664)
!2690 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2691, size: 256, elements: !2472)
!2691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !2658, line: 38, size: 128, elements: !2692)
!2692 = !{!2693, !2694}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2691, file: !2658, line: 39, baseType: !1001, size: 64)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !2691, file: !2658, line: 40, baseType: !1001, size: 64, offset: 64)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !2657, file: !2658, line: 146, baseType: !2696, size: 192, offset: 1920)
!2696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !2658, line: 66, size: 192, elements: !2697)
!2697 = !{!2698}
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !2696, file: !2658, line: 67, baseType: !2699, size: 192)
!2699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !2658, line: 47, size: 192, elements: !2700)
!2700 = !{!2701, !2702, !2703}
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2699, file: !2658, line: 48, baseType: !1574, size: 64)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2699, file: !2658, line: 49, baseType: !1574, size: 64, offset: 64)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2699, file: !2658, line: 50, baseType: !1574, size: 64, offset: 128)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2657, file: !2658, line: 150, baseType: !2433, size: 640, offset: 2112)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !2657, file: !2658, line: 153, baseType: !2706, size: 256, offset: 2752)
!2706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2375, size: 256, elements: !1017)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !2657, file: !2658, line: 159, baseType: !2375, size: 64, offset: 3008)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !2657, file: !2658, line: 162, baseType: !206, size: 32, offset: 3072)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !2657, file: !2658, line: 164, baseType: !2710, size: 64, offset: 3136)
!2710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2711, size: 64)
!2711 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !2658, line: 164, flags: DIFlagFwdDecl)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !2657, file: !2658, line: 175, baseType: !2713, size: 32, offset: 3200)
!2713 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !1239, line: 805, baseType: !2714)
!2714 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1239, line: 798, size: 32, elements: !2715)
!2715 = !{!2716, !2717}
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2714, file: !1239, line: 803, baseType: !1238, size: 32)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2714, file: !1239, line: 804, baseType: !1087, offset: 32)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2657, file: !2658, line: 176, baseType: !1001, size: 64, offset: 3264)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2657, file: !2658, line: 176, baseType: !1001, size: 64, offset: 3328)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !2657, file: !2658, line: 176, baseType: !1001, size: 64, offset: 3392)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !2657, file: !2658, line: 176, baseType: !1001, size: 64, offset: 3456)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2657, file: !2658, line: 177, baseType: !1001, size: 64, offset: 3520)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !2657, file: !2658, line: 178, baseType: !1001, size: 64, offset: 3584)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2657, file: !2658, line: 179, baseType: !2421, size: 128, offset: 3648)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2657, file: !2658, line: 180, baseType: !1012, size: 64, offset: 3776)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2657, file: !2658, line: 180, baseType: !1012, size: 64, offset: 3840)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !2657, file: !2658, line: 180, baseType: !1012, size: 64, offset: 3904)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !2657, file: !2658, line: 180, baseType: !1012, size: 64, offset: 3968)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2657, file: !2658, line: 181, baseType: !1012, size: 64, offset: 4032)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2657, file: !2658, line: 181, baseType: !1012, size: 64, offset: 4096)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !2657, file: !2658, line: 181, baseType: !1012, size: 64, offset: 4160)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !2657, file: !2658, line: 181, baseType: !1012, size: 64, offset: 4224)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !2657, file: !2658, line: 182, baseType: !1012, size: 64, offset: 4288)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !2657, file: !2658, line: 182, baseType: !1012, size: 64, offset: 4352)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !2657, file: !2658, line: 182, baseType: !1012, size: 64, offset: 4416)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !2657, file: !2658, line: 182, baseType: !1012, size: 64, offset: 4480)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !2657, file: !2658, line: 183, baseType: !1012, size: 64, offset: 4544)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !2657, file: !2658, line: 183, baseType: !1012, size: 64, offset: 4608)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2657, file: !2658, line: 184, baseType: !2740, offset: 4672)
!2740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !2741, line: 12, elements: !1101)
!2741 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !2657, file: !2658, line: 192, baseType: !1005, size: 64, offset: 4672)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !2657, file: !2658, line: 203, baseType: !2744, size: 2048, offset: 4736)
!2744 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2745, size: 2048, elements: !2638)
!2745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !2746, line: 43, size: 128, elements: !2747)
!2746 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!2747 = !{!2748, !2749}
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !2745, file: !2746, line: 44, baseType: !1175, size: 64)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !2745, file: !2746, line: 45, baseType: !1175, size: 64, offset: 64)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !2657, file: !2658, line: 220, baseType: !1333, size: 8, offset: 6784)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !2657, file: !2658, line: 221, baseType: !2110, size: 16, offset: 6800)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !2657, file: !2658, line: 222, baseType: !2110, size: 16, offset: 6816)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !2657, file: !2658, line: 224, baseType: !1887, size: 64, offset: 6848)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !2657, file: !2658, line: 227, baseType: !1568, size: 192, offset: 6912)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !2657, file: !2658, line: 233, baseType: !1568, size: 192, offset: 7104)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !2122, file: !2123, line: 970, baseType: !2757, size: 64, offset: 9280)
!2757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2758, size: 64)
!2758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !2658, line: 20, size: 16576, elements: !2759)
!2759 = !{!2760, !2761, !2762, !2763}
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !2758, file: !2658, line: 21, baseType: !1087)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2758, file: !2658, line: 22, baseType: !2135, size: 32)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !2758, file: !2658, line: 23, baseType: !2385, size: 128, offset: 64)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2758, file: !2658, line: 24, baseType: !2764, size: 16384, offset: 192)
!2764 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2765, size: 16384, elements: !1133)
!2765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !2668, line: 49, size: 256, elements: !2766)
!2766 = !{!2767}
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !2765, file: !2668, line: 50, baseType: !2768, size: 256)
!2768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !2668, line: 35, size: 256, elements: !2769)
!2769 = !{!2770, !2777, !2778, !2784}
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !2768, file: !2668, line: 37, baseType: !2771, size: 64)
!2771 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !2772, line: 19, baseType: !2773)
!2772 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!2773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2774, size: 64)
!2774 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !2772, line: 18, baseType: !2775)
!2775 = !DISubroutineType(types: !2776)
!2776 = !{null, !206}
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !2768, file: !2668, line: 38, baseType: !1012, size: 64, offset: 64)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !2768, file: !2668, line: 44, baseType: !2779, size: 64, offset: 128)
!2779 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !2772, line: 22, baseType: !2780)
!2780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2781, size: 64)
!2781 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !2772, line: 21, baseType: !2782)
!2782 = !DISubroutineType(types: !2783)
!2783 = !{null}
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !2768, file: !2668, line: 46, baseType: !2672, size: 64, offset: 192)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !2122, file: !2123, line: 971, baseType: !2672, size: 64, offset: 9344)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !2122, file: !2123, line: 972, baseType: !2672, size: 64, offset: 9408)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !2122, file: !2123, line: 974, baseType: !2672, size: 64, offset: 9472)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !2122, file: !2123, line: 975, baseType: !2667, size: 192, offset: 9536)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !2122, file: !2123, line: 976, baseType: !1012, size: 64, offset: 9728)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !2122, file: !2123, line: 977, baseType: !1173, size: 64, offset: 9792)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !2122, file: !2123, line: 978, baseType: !7, size: 32, offset: 9856)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !2122, file: !2123, line: 980, baseType: !1219, size: 64, offset: 9920)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !2122, file: !2123, line: 989, baseType: !2794, size: 128, offset: 9984)
!2794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !2795, line: 35, size: 128, elements: !2796)
!2795 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!2796 = !{!2797, !2798, !2799}
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2794, file: !2795, line: 36, baseType: !206, size: 32)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !2794, file: !2795, line: 37, baseType: !1642, size: 32, offset: 32)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2794, file: !2795, line: 38, baseType: !2800, size: 64, offset: 64)
!2800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2801, size: 64)
!2801 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !2795, line: 23, flags: DIFlagFwdDecl)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !2122, file: !2123, line: 992, baseType: !1001, size: 64, offset: 10112)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !2122, file: !2123, line: 993, baseType: !1001, size: 64, offset: 10176)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !2122, file: !2123, line: 996, baseType: !1087, offset: 10240)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !2122, file: !2123, line: 999, baseType: !1668, offset: 10240)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !2122, file: !2123, line: 1001, baseType: !2807, size: 64, offset: 10240)
!2807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !2123, line: 636, size: 64, elements: !2808)
!2808 = !{!2809}
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2807, file: !2123, line: 637, baseType: !2810, size: 64)
!2810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2807, size: 64)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !2122, file: !2123, line: 1005, baseType: !1647, size: 128, offset: 10304)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !2122, file: !2123, line: 1007, baseType: !2121, size: 64, offset: 10432)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !2122, file: !2123, line: 1009, baseType: !2814, size: 64, offset: 10496)
!2814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2815, size: 64)
!2815 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !2123, line: 1009, flags: DIFlagFwdDecl)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !2122, file: !2123, line: 1043, baseType: !970, size: 64, offset: 10560)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !2122, file: !2123, line: 1046, baseType: !2818, size: 64, offset: 10624)
!2818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2819, size: 64)
!2819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !2820, line: 554, size: 128, elements: !2821)
!2820 = !DIFile(filename: "./include/linux/bio.h", directory: "/home/lizy2001/genbc/linux")
!2821 = !{!2822, !3841}
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2819, file: !2820, line: 555, baseType: !2823, size: 64)
!2823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2824, size: 64)
!2824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio", file: !2825, line: 203, size: 832, elements: !2826)
!2825 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!2826 = !{!2827, !2828, !3795, !3796, !3797, !3798, !3799, !3800, !3801, !3802, !3809, !3814, !3815, !3834, !3835, !3836, !3837, !3838, !3840}
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "bi_next", scope: !2824, file: !2825, line: 204, baseType: !2823, size: 64)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "bi_disk", scope: !2824, file: !2825, line: 205, baseType: !2829, size: 64, offset: 64)
!2829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2830, size: 64)
!2830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !2831, line: 167, size: 8512, elements: !2832)
!2831 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!2832 = !{!2833, !2834, !2835, !2836, !2840, !2841, !2842, !2915, !2916, !3105, !3776, !3777, !3778, !3779, !3780, !3781, !3784, !3785, !3788, !3789, !3790, !3793}
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !2830, file: !2831, line: 171, baseType: !206, size: 32)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !2830, file: !2831, line: 172, baseType: !206, size: 32, offset: 32)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !2830, file: !2831, line: 173, baseType: !206, size: 32, offset: 64)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !2830, file: !2831, line: 176, baseType: !2837, size: 256, offset: 96)
!2837 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1010, size: 256, elements: !2838)
!2838 = !{!2839}
!2839 = !DISubrange(count: 32)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !2830, file: !2831, line: 178, baseType: !1066, size: 16, offset: 352)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !2830, file: !2831, line: 179, baseType: !1066, size: 16, offset: 368)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !2830, file: !2831, line: 186, baseType: !2843, size: 64, offset: 384)
!2843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2844, size: 64)
!2844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !2831, line: 149, size: 256, elements: !2845)
!2845 = !{!2846, !2847, !2848, !2911}
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2844, file: !2831, line: 150, baseType: !1216, size: 128, align: 64)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2844, file: !2831, line: 151, baseType: !206, size: 32, offset: 128)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !2844, file: !2831, line: 152, baseType: !2849, size: 64, offset: 192)
!2849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2850, size: 64)
!2850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !2831, line: 53, size: 6592, elements: !2851)
!2851 = !{!2852, !2853, !2854, !2855, !2858, !2879, !2880, !2881, !2882, !2883, !2893}
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !2850, file: !2831, line: 54, baseType: !1725, size: 64)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !2850, file: !2831, line: 60, baseType: !1725, size: 64, offset: 64)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2850, file: !2831, line: 64, baseType: !1012, size: 64, offset: 128)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !2850, file: !2831, line: 65, baseType: !2856, size: 64, offset: 192)
!2856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2857, size: 64)
!2857 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !2831, line: 65, flags: DIFlagFwdDecl)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2850, file: !2831, line: 66, baseType: !2859, size: 128, offset: 256)
!2859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2860, line: 105, size: 128, elements: !2861)
!2860 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2861 = !{!2862, !2863}
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2859, file: !2860, line: 110, baseType: !1012, size: 64)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2859, file: !2860, line: 118, baseType: !2864, size: 64, offset: 64)
!2864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2865, size: 64)
!2865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2860, line: 95, size: 448, elements: !2866)
!2866 = !{!2867, !2868, !2874, !2875, !2876, !2877, !2878}
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2865, file: !2860, line: 96, baseType: !1572, size: 64)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2865, file: !2860, line: 97, baseType: !2869, size: 64, offset: 64)
!2869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2870, size: 64)
!2870 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2860, line: 60, baseType: !2871)
!2871 = !DISubroutineType(types: !2872)
!2872 = !{null, !2873}
!2873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2859, size: 64)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2865, file: !2860, line: 98, baseType: !2869, size: 64, offset: 128)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2865, file: !2860, line: 99, baseType: !1333, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2865, file: !2860, line: 100, baseType: !1333, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2865, file: !2860, line: 101, baseType: !1216, size: 128, align: 64, offset: 256)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2865, file: !2860, line: 102, baseType: !2873, size: 64, offset: 384)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !2850, file: !2831, line: 68, baseType: !1071, size: 5568, offset: 384)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !2850, file: !2831, line: 69, baseType: !1080, size: 64, offset: 5952)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2850, file: !2831, line: 70, baseType: !206, size: 32, offset: 6016)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !2850, file: !2831, line: 70, baseType: !206, size: 32, offset: 6048)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2850, file: !2831, line: 71, baseType: !2884, size: 64, offset: 6080)
!2884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2885, size: 64)
!2885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !2831, line: 48, size: 808, elements: !2886)
!2886 = !{!2887, !2891}
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !2885, file: !2831, line: 49, baseType: !2888, size: 296)
!2888 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1010, size: 296, elements: !2889)
!2889 = !{!2890}
!2890 = !DISubrange(count: 37)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !2885, file: !2831, line: 50, baseType: !2892, size: 512, offset: 296)
!2892 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2257, size: 512, elements: !1133)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !2850, file: !2831, line: 75, baseType: !2894, size: 448, offset: 6144)
!2894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !932, line: 124, size: 448, elements: !2895)
!2895 = !{!2896, !2907, !2908}
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2894, file: !932, line: 125, baseType: !2897, size: 256)
!2897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !932, line: 102, size: 256, elements: !2898)
!2898 = !{!2899, !2900, !2901}
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2897, file: !932, line: 103, baseType: !1572, size: 64)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2897, file: !932, line: 104, baseType: !976, size: 128, offset: 64)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2897, file: !932, line: 105, baseType: !2902, size: 64, offset: 192)
!2902 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !932, line: 21, baseType: !2903)
!2903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2904, size: 64)
!2904 = !DISubroutineType(types: !2905)
!2905 = !{null, !2906}
!2906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2897, size: 64)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2894, file: !932, line: 126, baseType: !1216, size: 128, align: 64, offset: 256)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2894, file: !932, line: 129, baseType: !2909, size: 64, offset: 384)
!2909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2910, size: 64)
!2910 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !932, line: 18, flags: DIFlagFwdDecl)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !2844, file: !2831, line: 153, baseType: !2912, offset: 256)
!2912 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2849, elements: !2913)
!2913 = !{!2914}
!2914 = !DISubrange(count: -1)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !2830, file: !2831, line: 187, baseType: !2850, size: 6592, offset: 448)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !2830, file: !2831, line: 189, baseType: !2917, size: 64, offset: 7040)
!2917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2918, size: 64)
!2918 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2919)
!2919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !82, line: 1844, size: 960, elements: !2920)
!2920 = !{!2921, !2926, !3034, !3038, !3042, !3046, !3047, !3051, !3055, !3059, !3065, !3069, !3095, !3100, !3101}
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "submit_bio", scope: !2919, file: !82, line: 1845, baseType: !2922, size: 64)
!2922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2923, size: 64)
!2923 = !DISubroutineType(types: !2924)
!2924 = !{!2925, !2823}
!2925 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_qc_t", file: !2825, line: 515, baseType: !7)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2919, file: !82, line: 1846, baseType: !2927, size: 64, offset: 64)
!2927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2928, size: 64)
!2928 = !DISubroutineType(types: !2929)
!2929 = !{!206, !2930, !3033}
!2930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2931, size: 64)
!2931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !2825, line: 22, size: 1344, elements: !2932)
!2932 = !{!2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !3031, !3032}
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !2931, file: !2825, line: 23, baseType: !1356, size: 32)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !2931, file: !2825, line: 24, baseType: !206, size: 32, offset: 32)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !2931, file: !2825, line: 25, baseType: !1272, size: 64, offset: 64)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !2931, file: !2825, line: 26, baseType: !1442, size: 64, offset: 128)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !2931, file: !2825, line: 27, baseType: !1568, size: 192, offset: 192)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !2931, file: !2825, line: 28, baseType: !970, size: 64, offset: 384)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !2931, file: !2825, line: 29, baseType: !970, size: 64, offset: 448)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !2931, file: !2825, line: 30, baseType: !206, size: 32, offset: 512)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !2931, file: !2825, line: 31, baseType: !1333, size: 8, offset: 544)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !2931, file: !2825, line: 33, baseType: !976, size: 128, offset: 576)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !2931, file: !2825, line: 35, baseType: !2930, size: 64, offset: 704)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !2931, file: !2825, line: 36, baseType: !2257, size: 8, offset: 768)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !2931, file: !2825, line: 37, baseType: !2849, size: 64, offset: 832)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !2931, file: !2825, line: 39, baseType: !7, size: 32, offset: 896)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !2931, file: !2825, line: 41, baseType: !1087, offset: 928)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !2931, file: !2825, line: 42, baseType: !2829, size: 64, offset: 960)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !2931, file: !2825, line: 43, baseType: !2950, size: 64, offset: 1024)
!2950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2951, size: 64)
!2951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !99, line: 165, size: 4672, elements: !2952)
!2952 = !{!2953, !2954, !2955, !2956, !2957, !2958, !2963, !2964, !2965, !2966, !2967, !2968, !3024, !3025, !3026, !3027, !3029, !3030}
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2951, file: !99, line: 166, baseType: !1001, size: 64)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2951, file: !99, line: 167, baseType: !1655, size: 192, align: 64, offset: 64)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_list", scope: !2951, file: !99, line: 168, baseType: !976, size: 128, offset: 256)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !2951, file: !99, line: 169, baseType: !1012, size: 64, offset: 384)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "io_pages", scope: !2951, file: !99, line: 170, baseType: !1012, size: 64, offset: 448)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2951, file: !99, line: 172, baseType: !2959, size: 32, offset: 512)
!2959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !2960, line: 19, size: 32, elements: !2961)
!2960 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!2961 = !{!2962}
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2959, file: !2960, line: 20, baseType: !2135, size: 32)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !2951, file: !99, line: 173, baseType: !7, size: 32, offset: 544)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "min_ratio", scope: !2951, file: !99, line: 174, baseType: !7, size: 32, offset: 576)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "max_ratio", scope: !2951, file: !99, line: 175, baseType: !7, size: 32, offset: 608)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "max_prop_frac", scope: !2951, file: !99, line: 175, baseType: !7, size: 32, offset: 640)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "tot_write_bandwidth", scope: !2951, file: !99, line: 181, baseType: !1572, size: 64, offset: 704)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "wb", scope: !2951, file: !99, line: 183, baseType: !2969, size: 2688, offset: 768)
!2969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bdi_writeback", file: !99, line: 107, size: 2688, elements: !2970)
!2970 = !{!2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !3000, !3001, !3002, !3003, !3004, !3022, !3023}
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "bdi", scope: !2969, file: !99, line: 108, baseType: !2950, size: 64)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2969, file: !99, line: 110, baseType: !1012, size: 64, offset: 64)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "last_old_flush", scope: !2969, file: !99, line: 111, baseType: !1012, size: 64, offset: 128)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty", scope: !2969, file: !99, line: 113, baseType: !976, size: 128, offset: 192)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "b_io", scope: !2969, file: !99, line: 114, baseType: !976, size: 128, offset: 320)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "b_more_io", scope: !2969, file: !99, line: 115, baseType: !976, size: 128, offset: 448)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty_time", scope: !2969, file: !99, line: 116, baseType: !976, size: 128, offset: 576)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !2969, file: !99, line: 117, baseType: !1087, offset: 704)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !2969, file: !99, line: 119, baseType: !2980, size: 256, offset: 704)
!2980 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2981, size: 256, elements: !1017)
!2981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !2982, line: 97, size: 64, elements: !2983)
!2982 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!2983 = !{!2984}
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2981, file: !2982, line: 98, baseType: !1578, size: 64)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "congested", scope: !2969, file: !99, line: 121, baseType: !1012, size: 64, offset: 960)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "bw_time_stamp", scope: !2969, file: !99, line: 123, baseType: !1012, size: 64, offset: 1024)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_stamp", scope: !2969, file: !99, line: 124, baseType: !1012, size: 64, offset: 1088)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "written_stamp", scope: !2969, file: !99, line: 125, baseType: !1012, size: 64, offset: 1152)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "write_bandwidth", scope: !2969, file: !99, line: 126, baseType: !1012, size: 64, offset: 1216)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "avg_write_bandwidth", scope: !2969, file: !99, line: 127, baseType: !1012, size: 64, offset: 1280)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_ratelimit", scope: !2969, file: !99, line: 135, baseType: !1012, size: 64, offset: 1344)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "balanced_dirty_ratelimit", scope: !2969, file: !99, line: 136, baseType: !1012, size: 64, offset: 1408)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "completions", scope: !2969, file: !99, line: 138, baseType: !2994, size: 128, offset: 1472)
!2994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fprop_local_percpu", file: !2995, line: 76, size: 128, elements: !2996)
!2995 = !DIFile(filename: "./include/linux/flex_proportions.h", directory: "/home/lizy2001/genbc/linux")
!2996 = !{!2997, !2998, !2999}
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !2994, file: !2995, line: 78, baseType: !2981, size: 64)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !2994, file: !2995, line: 80, baseType: !7, size: 32, offset: 64)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2994, file: !2995, line: 81, baseType: !1668, offset: 96)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_exceeded", scope: !2969, file: !99, line: 139, baseType: !206, size: 32, offset: 1600)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "start_all_reason", scope: !2969, file: !99, line: 140, baseType: !98, size: 32, offset: 1632)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "work_lock", scope: !2969, file: !99, line: 142, baseType: !1087, offset: 1664)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !2969, file: !99, line: 143, baseType: !976, size: 128, offset: 1664)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "dwork", scope: !2969, file: !99, line: 144, baseType: !3005, size: 704, offset: 1792)
!3005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !932, line: 115, size: 704, elements: !3006)
!3006 = !{!3007, !3008, !3020, !3021}
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3005, file: !932, line: 116, baseType: !2897, size: 256)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3005, file: !932, line: 117, baseType: !3009, size: 320, offset: 256)
!3009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3010, line: 11, size: 320, elements: !3011)
!3010 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3011 = !{!3012, !3013, !3014, !3019}
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3009, file: !3010, line: 16, baseType: !1484, size: 128)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3009, file: !3010, line: 17, baseType: !1012, size: 64, offset: 128)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3009, file: !3010, line: 18, baseType: !3015, size: 64, offset: 192)
!3015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3016, size: 64)
!3016 = !DISubroutineType(types: !3017)
!3017 = !{null, !3018}
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3009, size: 64)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3009, file: !3010, line: 19, baseType: !1042, size: 32, offset: 256)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !3005, file: !932, line: 120, baseType: !2909, size: 64, offset: 576)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !3005, file: !932, line: 121, baseType: !206, size: 32, offset: 640)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sleep", scope: !2969, file: !99, line: 146, baseType: !1012, size: 64, offset: 2496)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_node", scope: !2969, file: !99, line: 148, baseType: !976, size: 128, offset: 2560)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "wb_list", scope: !2951, file: !99, line: 184, baseType: !976, size: 128, offset: 3456)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "wb_waitq", scope: !2951, file: !99, line: 190, baseType: !2385, size: 128, offset: 3584)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2951, file: !99, line: 192, baseType: !1070, size: 64, offset: 3712)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !2951, file: !99, line: 193, baseType: !3028, size: 512, offset: 3776)
!3028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1010, size: 512, elements: !1133)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2951, file: !99, line: 194, baseType: !1070, size: 64, offset: 4288)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "laptop_mode_wb_timer", scope: !2951, file: !99, line: 196, baseType: !3009, size: 320, offset: 4352)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !2931, file: !2825, line: 46, baseType: !206, size: 32, offset: 1088)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !2931, file: !2825, line: 48, baseType: !1568, size: 192, offset: 1152)
!3033 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !977, line: 150, baseType: !7)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2919, file: !82, line: 1847, baseType: !3035, size: 64, offset: 128)
!3035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3036, size: 64)
!3036 = !DISubroutineType(types: !3037)
!3037 = !{null, !2829, !3033}
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "rw_page", scope: !2919, file: !82, line: 1848, baseType: !3039, size: 64, offset: 192)
!3039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3040, size: 64)
!3040 = !DISubroutineType(types: !3041)
!3041 = !{!206, !2930, !1725, !1615, !7}
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !2919, file: !82, line: 1849, baseType: !3043, size: 64, offset: 256)
!3043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3044, size: 64)
!3044 = !DISubroutineType(types: !3045)
!3045 = !{!206, !2930, !3033, !7, !1012}
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2919, file: !82, line: 1850, baseType: !3043, size: 64, offset: 320)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "check_events", scope: !2919, file: !82, line: 1851, baseType: !3048, size: 64, offset: 384)
!3048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3049, size: 64)
!3049 = !DISubroutineType(types: !3050)
!3050 = !{!7, !2829, !7}
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !2919, file: !82, line: 1853, baseType: !3052, size: 64, offset: 448)
!3052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3053, size: 64)
!3053 = !DISubroutineType(types: !3054)
!3054 = !{null, !2829}
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "revalidate_disk", scope: !2919, file: !82, line: 1854, baseType: !3056, size: 64, offset: 512)
!3056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3057, size: 64)
!3057 = !DISubroutineType(types: !3058)
!3058 = !{!206, !2829}
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "getgeo", scope: !2919, file: !82, line: 1855, baseType: !3060, size: 64, offset: 576)
!3060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3061, size: 64)
!3061 = !DISubroutineType(types: !3062)
!3062 = !{!206, !2930, !3063}
!3063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3064, size: 64)
!3064 = !DICompositeType(tag: DW_TAG_structure_type, name: "hd_geometry", file: !12, line: 51, flags: DIFlagFwdDecl)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "swap_slot_free_notify", scope: !2919, file: !82, line: 1857, baseType: !3066, size: 64, offset: 640)
!3066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3067, size: 64)
!3067 = !DISubroutineType(types: !3068)
!3068 = !{null, !2930, !1012}
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "report_zones", scope: !2919, file: !82, line: 1858, baseType: !3070, size: 64, offset: 704)
!3070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3071, size: 64)
!3071 = !DISubroutineType(types: !3072)
!3072 = !{!206, !2829, !1725, !7, !3073, !970}
!3073 = !DIDerivedType(tag: DW_TAG_typedef, name: "report_zones_cb", file: !82, line: 354, baseType: !3074)
!3074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3075, size: 64)
!3075 = !DISubroutineType(types: !3076)
!3076 = !{!206, !3077, !7, !970}
!3077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3078, size: 64)
!3078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_zone", file: !3079, line: 106, size: 512, elements: !3080)
!3079 = !DIFile(filename: "./include/uapi/linux/blkzoned.h", directory: "/home/lizy2001/genbc/linux")
!3080 = !{!3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3090, !3091}
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3078, file: !3079, line: 107, baseType: !1003, size: 64)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3078, file: !3079, line: 108, baseType: !1003, size: 64, offset: 64)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !3078, file: !3079, line: 109, baseType: !1003, size: 64, offset: 128)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3078, file: !3079, line: 110, baseType: !2258, size: 8, offset: 192)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !3078, file: !3079, line: 111, baseType: !2258, size: 8, offset: 200)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "non_seq", scope: !3078, file: !3079, line: 112, baseType: !2258, size: 8, offset: 208)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !3078, file: !3079, line: 113, baseType: !2258, size: 8, offset: 216)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !3078, file: !3079, line: 114, baseType: !3089, size: 32, offset: 224)
!3089 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2258, size: 32, elements: !1017)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !3078, file: !3079, line: 115, baseType: !1003, size: 64, offset: 256)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !3078, file: !3079, line: 116, baseType: !3092, size: 192, offset: 320)
!3092 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2258, size: 192, elements: !3093)
!3093 = !{!3094}
!3094 = !DISubrange(count: 24)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !2919, file: !82, line: 1860, baseType: !3096, size: 64, offset: 768)
!3096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3097, size: 64)
!3097 = !DISubroutineType(types: !3098)
!3098 = !{!1128, !2829, !3099}
!3099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2919, file: !82, line: 1861, baseType: !1475, size: 64, offset: 832)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "pr_ops", scope: !2919, file: !82, line: 1862, baseType: !3102, size: 64, offset: 896)
!3102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3103, size: 64)
!3103 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3104)
!3104 = !DICompositeType(tag: DW_TAG_structure_type, name: "pr_ops", file: !82, line: 41, flags: DIFlagFwdDecl)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !2830, file: !2831, line: 190, baseType: !3106, size: 64, offset: 7104)
!3106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3107, size: 64)
!3107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !82, line: 399, size: 14464, elements: !3108)
!3108 = !{!3109, !3326, !3448, !3449, !3452, !3455, !3551, !3552, !3553, !3555, !3556, !3557, !3558, !3559, !3560, !3561, !3562, !3563, !3564, !3565, !3601, !3602, !3603, !3604, !3605, !3606, !3607, !3608, !3609, !3612, !3621, !3622, !3623, !3624, !3625, !3655, !3656, !3657, !3658, !3659, !3660, !3661, !3662, !3663, !3664, !3665, !3666, !3667, !3668, !3669, !3731, !3732, !3733, !3734, !3735, !3736, !3769, !3770, !3771, !3772}
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "last_merge", scope: !3107, file: !82, line: 400, baseType: !3110, size: 64)
!3110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3111, size: 64)
!3111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request", file: !82, line: 130, size: 2176, elements: !3112)
!3112 = !{!3113, !3114, !3117, !3201, !3202, !3204, !3205, !3206, !3207, !3208, !3209, !3210, !3211, !3216, !3229, !3278, !3279, !3280, !3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3324, !3325}
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !3111, file: !82, line: 131, baseType: !3106, size: 64)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ctx", scope: !3111, file: !82, line: 132, baseType: !3115, size: 64, offset: 64)
!3115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3116, size: 64)
!3116 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ctx", file: !82, line: 132, flags: DIFlagFwdDecl)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "mq_hctx", scope: !3111, file: !82, line: 133, baseType: !3118, size: 64, offset: 128)
!3118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3119, size: 64)
!3119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_hw_ctx", file: !3120, line: 16, size: 4032, elements: !3121)
!3120 = !DIFile(filename: "./include/linux/blk-mq.h", directory: "/home/lizy2001/genbc/linux")
!3121 = !{!3122, !3128, !3129, !3132, !3133, !3134, !3135, !3136, !3137, !3140, !3141, !3156, !3157, !3158, !3159, !3160, !3162, !3163, !3164, !3165, !3168, !3169, !3170, !3171, !3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186}
!3122 = !DIDerivedType(tag: DW_TAG_member, scope: !3119, file: !3120, line: 17, baseType: !3123, size: 192)
!3123 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3119, file: !3120, line: 17, size: 192, elements: !3124)
!3124 = !{!3125, !3126, !3127}
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3123, file: !3120, line: 19, baseType: !1087)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch", scope: !3123, file: !3120, line: 27, baseType: !976, size: 128)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3123, file: !3120, line: 32, baseType: !1012, size: 64, offset: 128)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !3119, file: !3120, line: 38, baseType: !3005, size: 704, offset: 192)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !3119, file: !3120, line: 40, baseType: !3130, size: 64, offset: 896)
!3130 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_var_t", file: !2271, line: 756, baseType: !3131)
!3131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2272, size: 64, elements: !2276)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "next_cpu", scope: !3119, file: !3120, line: 45, baseType: !206, size: 32, offset: 960)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "next_cpu_batch", scope: !3119, file: !3120, line: 50, baseType: !206, size: 32, offset: 992)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3119, file: !3120, line: 53, baseType: !1012, size: 64, offset: 1024)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "sched_data", scope: !3119, file: !3120, line: 59, baseType: !970, size: 64, offset: 1088)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3119, file: !3120, line: 63, baseType: !3106, size: 64, offset: 1152)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !3119, file: !3120, line: 65, baseType: !3138, size: 64, offset: 1216)
!3138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3139, size: 64)
!3139 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_flush_queue", file: !82, line: 40, flags: DIFlagFwdDecl)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3119, file: !3120, line: 71, baseType: !970, size: 64, offset: 1280)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_map", scope: !3119, file: !3120, line: 77, baseType: !3142, size: 192, offset: 1344)
!3142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap", file: !3143, line: 48, size: 192, elements: !3144)
!3143 = !DIFile(filename: "./include/linux/sbitmap.h", directory: "/home/lizy2001/genbc/linux")
!3144 = !{!3145, !3146, !3147, !3148}
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !3142, file: !3143, line: 52, baseType: !7, size: 32)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !3142, file: !3143, line: 57, baseType: !7, size: 32, offset: 32)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "map_nr", scope: !3142, file: !3143, line: 62, baseType: !7, size: 32, offset: 64)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3142, file: !3143, line: 67, baseType: !3149, size: 64, offset: 128)
!3149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3150, size: 64)
!3150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap_word", file: !3143, line: 20, size: 192, elements: !3151)
!3151 = !{!3152, !3153, !3154, !3155}
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !3150, file: !3143, line: 24, baseType: !1012, size: 64)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !3150, file: !3143, line: 29, baseType: !1012, size: 64, offset: 64)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "cleared", scope: !3150, file: !3143, line: 34, baseType: !1012, size: 64, offset: 128)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "swap_lock", scope: !3150, file: !3143, line: 39, baseType: !1087, offset: 192)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_from", scope: !3119, file: !3120, line: 83, baseType: !3115, size: 64, offset: 1536)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_busy", scope: !3119, file: !3120, line: 89, baseType: !7, size: 32, offset: 1600)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3119, file: !3120, line: 92, baseType: !1066, size: 16, offset: 1632)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "nr_ctx", scope: !3119, file: !3120, line: 94, baseType: !1066, size: 16, offset: 1648)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "ctxs", scope: !3119, file: !3120, line: 96, baseType: !3161, size: 64, offset: 1664)
!3161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3115, size: 64)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_wait_lock", scope: !3119, file: !3120, line: 99, baseType: !1087, offset: 1728)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_wait", scope: !3119, file: !3120, line: 104, baseType: !1768, size: 320, offset: 1728)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "wait_index", scope: !3119, file: !3120, line: 110, baseType: !1642, size: 32, offset: 2048)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !3119, file: !3120, line: 116, baseType: !3166, size: 64, offset: 2112)
!3166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3167, size: 64)
!3167 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tags", file: !3120, line: 9, flags: DIFlagFwdDecl)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "sched_tags", scope: !3119, file: !3120, line: 122, baseType: !3166, size: 64, offset: 2176)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "queued", scope: !3119, file: !3120, line: 125, baseType: !1012, size: 64, offset: 2240)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "run", scope: !3119, file: !3120, line: 127, baseType: !1012, size: 64, offset: 2304)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "dispatched", scope: !3119, file: !3120, line: 130, baseType: !3172, size: 448, offset: 2368)
!3172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1012, size: 448, elements: !3173)
!3173 = !{!3174}
!3174 = !DISubrange(count: 7)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3119, file: !3120, line: 133, baseType: !7, size: 32, offset: 2816)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "queue_num", scope: !3119, file: !3120, line: 135, baseType: !7, size: 32, offset: 2848)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active", scope: !3119, file: !3120, line: 141, baseType: !1642, size: 32, offset: 2880)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_queued", scope: !3119, file: !3120, line: 145, baseType: !1642, size: 32, offset: 2912)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "cpuhp_online", scope: !3119, file: !3120, line: 148, baseType: !1484, size: 128, offset: 2944)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "cpuhp_dead", scope: !3119, file: !3120, line: 150, baseType: !1484, size: 128, offset: 3072)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3119, file: !3120, line: 152, baseType: !1074, size: 512, offset: 3200)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "poll_considered", scope: !3119, file: !3120, line: 155, baseType: !1012, size: 64, offset: 3712)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "poll_invoked", scope: !3119, file: !3120, line: 157, baseType: !1012, size: 64, offset: 3776)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "poll_success", scope: !3119, file: !3120, line: 159, baseType: !1012, size: 64, offset: 3840)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "hctx_list", scope: !3119, file: !3120, line: 175, baseType: !976, size: 128, offset: 3904)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "srcu", scope: !3119, file: !3120, line: 182, baseType: !3187, offset: 4032)
!3187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3188, elements: !2913)
!3188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "srcu_struct", file: !3189, line: 16, size: 576, elements: !3190)
!3189 = !DIFile(filename: "./include/linux/srcutiny.h", directory: "/home/lizy2001/genbc/linux")
!3190 = !{!3191, !3193, !3194, !3195, !3196, !3197, !3198, !3200}
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_lock_nesting", scope: !3188, file: !3189, line: 17, baseType: !3192, size: 32)
!3192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2110, size: 32, elements: !2472)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_idx", scope: !3188, file: !3189, line: 18, baseType: !2110, size: 16, offset: 32)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_running", scope: !3188, file: !3189, line: 19, baseType: !2257, size: 8, offset: 48)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_waiting", scope: !3188, file: !3189, line: 20, baseType: !2257, size: 8, offset: 56)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_wq", scope: !3188, file: !3189, line: 21, baseType: !2410, size: 128, offset: 64)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_head", scope: !3188, file: !3189, line: 23, baseType: !1219, size: 64, offset: 192)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_tail", scope: !3188, file: !3189, line: 24, baseType: !3199, size: 64, offset: 256)
!3199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 64)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_work", scope: !3188, file: !3189, line: 25, baseType: !2897, size: 256, offset: 320)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !3111, file: !82, line: 135, baseType: !7, size: 32, offset: 192)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "rq_flags", scope: !3111, file: !82, line: 136, baseType: !3203, size: 32, offset: 224)
!3203 = !DIDerivedType(tag: DW_TAG_typedef, name: "req_flags_t", file: !82, line: 66, baseType: !1043)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !3111, file: !82, line: 138, baseType: !206, size: 32, offset: 256)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "internal_tag", scope: !3111, file: !82, line: 139, baseType: !206, size: 32, offset: 288)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "__data_len", scope: !3111, file: !82, line: 142, baseType: !7, size: 32, offset: 320)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "__sector", scope: !3111, file: !82, line: 143, baseType: !1725, size: 64, offset: 384)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "bio", scope: !3111, file: !82, line: 145, baseType: !2823, size: 64, offset: 448)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "biotail", scope: !3111, file: !82, line: 146, baseType: !2823, size: 64, offset: 512)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "queuelist", scope: !3111, file: !82, line: 148, baseType: !976, size: 128, offset: 576)
!3211 = !DIDerivedType(tag: DW_TAG_member, scope: !3111, file: !82, line: 157, baseType: !3212, size: 128, offset: 704)
!3212 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3111, file: !82, line: 157, size: 128, elements: !3213)
!3213 = !{!3214, !3215}
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3212, file: !82, line: 158, baseType: !1484, size: 128)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_list", scope: !3212, file: !82, line: 159, baseType: !976, size: 128)
!3216 = !DIDerivedType(tag: DW_TAG_member, scope: !3111, file: !82, line: 167, baseType: !3217, size: 192, offset: 832)
!3217 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3111, file: !82, line: 167, size: 192, elements: !3218)
!3218 = !{!3219, !3220, !3227, !3228}
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !3217, file: !82, line: 168, baseType: !1655, size: 192, align: 64)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "special_vec", scope: !3217, file: !82, line: 169, baseType: !3221, size: 128)
!3221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !3222, line: 31, size: 128, elements: !3223)
!3222 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!3223 = !{!3224, !3225, !3226}
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !3221, file: !3222, line: 32, baseType: !1615, size: 64)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !3221, file: !3222, line: 33, baseType: !7, size: 32, offset: 64)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !3221, file: !3222, line: 34, baseType: !7, size: 32, offset: 96)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "completion_data", scope: !3217, file: !82, line: 170, baseType: !970, size: 64)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !3217, file: !82, line: 171, baseType: !206, size: 32)
!3229 = !DIDerivedType(tag: DW_TAG_member, scope: !3111, file: !82, line: 180, baseType: !3230, size: 256, offset: 1024)
!3230 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3111, file: !82, line: 180, size: 256, elements: !3231)
!3231 = !{!3232, !3267}
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "elv", scope: !3230, file: !82, line: 184, baseType: !3233, size: 192)
!3233 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3230, file: !82, line: 181, size: 192, elements: !3234)
!3234 = !{!3235, !3265}
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "icq", scope: !3233, file: !82, line: 182, baseType: !3236, size: 64)
!3236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3237, size: 64)
!3237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !3238, line: 73, size: 448, elements: !3239)
!3238 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!3239 = !{!3240, !3241, !3254, !3259, !3264}
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !3237, file: !3238, line: 74, baseType: !3106, size: 64)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !3237, file: !3238, line: 75, baseType: !3242, size: 64, offset: 64)
!3242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3243, size: 64)
!3243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !3238, line: 99, size: 704, elements: !3244)
!3244 = !{!3245, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253}
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3243, file: !3238, line: 100, baseType: !1572, size: 64)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !3243, file: !3238, line: 101, baseType: !1642, size: 32, offset: 64)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !3243, file: !3238, line: 102, baseType: !1642, size: 32, offset: 96)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3243, file: !3238, line: 105, baseType: !1087, offset: 128)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !3243, file: !3238, line: 107, baseType: !1066, size: 16, offset: 128)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !3243, file: !3238, line: 109, baseType: !1633, size: 128, offset: 192)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !3243, file: !3238, line: 110, baseType: !3236, size: 64, offset: 320)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !3243, file: !3238, line: 111, baseType: !1480, size: 64, offset: 384)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !3243, file: !3238, line: 113, baseType: !2897, size: 256, offset: 448)
!3254 = !DIDerivedType(tag: DW_TAG_member, scope: !3237, file: !3238, line: 83, baseType: !3255, size: 128, offset: 128)
!3255 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3237, file: !3238, line: 83, size: 128, elements: !3256)
!3256 = !{!3257, !3258}
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !3255, file: !3238, line: 84, baseType: !976, size: 128)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !3255, file: !3238, line: 85, baseType: !1847, size: 64)
!3259 = !DIDerivedType(tag: DW_TAG_member, scope: !3237, file: !3238, line: 87, baseType: !3260, size: 128, offset: 256)
!3260 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3237, file: !3238, line: 87, size: 128, elements: !3261)
!3261 = !{!3262, !3263}
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !3260, file: !3238, line: 88, baseType: !1484, size: 128)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !3260, file: !3238, line: 89, baseType: !1216, size: 128, align: 64)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3237, file: !3238, line: 92, baseType: !7, size: 32, offset: 384)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3233, file: !82, line: 183, baseType: !3266, size: 128, offset: 64)
!3266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !970, size: 128, elements: !2472)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !3230, file: !82, line: 190, baseType: !3268, size: 256)
!3268 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3230, file: !82, line: 186, size: 256, elements: !3269)
!3269 = !{!3270, !3271, !3272}
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3268, file: !82, line: 187, baseType: !7, size: 32)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3268, file: !82, line: 188, baseType: !976, size: 128, offset: 64)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "saved_end_io", scope: !3268, file: !82, line: 189, baseType: !3273, size: 64, offset: 192)
!3273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3274, size: 64)
!3274 = !DIDerivedType(tag: DW_TAG_typedef, name: "rq_end_io_fn", file: !82, line: 62, baseType: !3275)
!3275 = !DISubroutineType(types: !3276)
!3276 = !{null, !3110, !3277}
!3277 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_status_t", file: !2825, line: 58, baseType: !2257)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "rq_disk", scope: !3111, file: !82, line: 193, baseType: !2829, size: 64, offset: 1280)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !3111, file: !82, line: 194, baseType: !2849, size: 64, offset: 1344)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !3111, file: !82, line: 200, baseType: !1001, size: 64, offset: 1408)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "io_start_time_ns", scope: !3111, file: !82, line: 202, baseType: !1001, size: 64, offset: 1472)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "stats_sectors", scope: !3111, file: !82, line: 212, baseType: !1066, size: 16, offset: 1536)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "nr_phys_segments", scope: !3111, file: !82, line: 218, baseType: !1066, size: 16, offset: 1552)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "nr_integrity_segments", scope: !3111, file: !82, line: 221, baseType: !1066, size: 16, offset: 1568)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "write_hint", scope: !3111, file: !82, line: 229, baseType: !1066, size: 16, offset: 1584)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !3111, file: !82, line: 230, baseType: !1066, size: 16, offset: 1600)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3111, file: !82, line: 232, baseType: !81, size: 32, offset: 1632)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3111, file: !82, line: 233, baseType: !2135, size: 32, offset: 1664)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3111, file: !82, line: 235, baseType: !7, size: 32, offset: 1696)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !3111, file: !82, line: 236, baseType: !1012, size: 64, offset: 1728)
!3291 = !DIDerivedType(tag: DW_TAG_member, scope: !3111, file: !82, line: 238, baseType: !3292, size: 256, offset: 1792)
!3292 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3111, file: !82, line: 238, size: 256, elements: !3293)
!3293 = !{!3294, !3323}
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !3292, file: !82, line: 239, baseType: !3295, size: 256)
!3295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_data", file: !3296, line: 23, size: 256, elements: !3297)
!3296 = !DIFile(filename: "./include/linux/smp.h", directory: "/home/lizy2001/genbc/linux")
!3297 = !{!3298, !3320, !3322}
!3298 = !DIDerivedType(tag: DW_TAG_member, scope: !3295, file: !3296, line: 24, baseType: !3299, size: 128)
!3299 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3295, file: !3296, line: 24, size: 128, elements: !3300)
!3300 = !{!3301, !3313}
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3299, file: !3296, line: 25, baseType: !3302, size: 128)
!3302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_node", file: !3303, line: 58, size: 128, elements: !3304)
!3303 = !DIFile(filename: "./include/linux/smp_types.h", directory: "/home/lizy2001/genbc/linux")
!3304 = !{!3305, !3306, !3311, !3312}
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !3302, file: !3303, line: 59, baseType: !1210, size: 64)
!3306 = !DIDerivedType(tag: DW_TAG_member, scope: !3302, file: !3303, line: 60, baseType: !3307, size: 32, offset: 64)
!3307 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3302, file: !3303, line: 60, size: 32, elements: !3308)
!3308 = !{!3309, !3310}
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "u_flags", scope: !3307, file: !3303, line: 61, baseType: !7, size: 32)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "a_flags", scope: !3307, file: !3303, line: 62, baseType: !1642, size: 32)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !3302, file: !3303, line: 65, baseType: !1754, size: 16, offset: 96)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !3302, file: !3303, line: 65, baseType: !1754, size: 16, offset: 112)
!3313 = !DIDerivedType(tag: DW_TAG_member, scope: !3299, file: !3296, line: 26, baseType: !3314, size: 128)
!3314 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3299, file: !3296, line: 26, size: 128, elements: !3315)
!3315 = !{!3316, !3317, !3318, !3319}
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !3314, file: !3296, line: 27, baseType: !1210, size: 64)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3314, file: !3296, line: 28, baseType: !7, size: 32, offset: 64)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !3314, file: !3296, line: 30, baseType: !1754, size: 16, offset: 96)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !3314, file: !3296, line: 30, baseType: !1754, size: 16, offset: 112)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3295, file: !3296, line: 34, baseType: !3321, size: 64, offset: 128)
!3321 = !DIDerivedType(tag: DW_TAG_typedef, name: "smp_call_func_t", file: !3296, line: 17, baseType: !1311)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3295, file: !3296, line: 35, baseType: !970, size: 64, offset: 192)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time", scope: !3292, file: !82, line: 240, baseType: !1001, size: 64)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "end_io", scope: !3111, file: !82, line: 246, baseType: !3273, size: 64, offset: 2048)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "end_io_data", scope: !3111, file: !82, line: 247, baseType: !970, size: 64, offset: 2112)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "elevator", scope: !3107, file: !82, line: 401, baseType: !3327, size: 64, offset: 64)
!3327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3328, size: 64)
!3328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_queue", file: !88, line: 101, size: 4992, elements: !3329)
!3329 = !{!3330, !3442, !3443, !3444, !3445, !3446}
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3328, file: !88, line: 103, baseType: !3331, size: 64)
!3331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3332, size: 64)
!3332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_type", file: !88, line: 66, size: 2240, elements: !3333)
!3333 = !{!3334, !3335, !3417, !3418, !3419, !3432, !3433, !3434, !3436, !3437, !3441}
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache", scope: !3332, file: !88, line: 69, baseType: !1847, size: 64)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3332, file: !88, line: 72, baseType: !3336, size: 1408, offset: 64)
!3336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_mq_ops", file: !88, line: 29, size: 1408, elements: !3337)
!3337 = !{!3338, !3342, !3346, !3350, !3354, !3358, !3362, !3366, !3371, !3375, !3379, !3385, !3389, !3390, !3394, !3398, !3402, !3406, !3407, !3411, !3412, !3416}
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "init_sched", scope: !3336, file: !88, line: 30, baseType: !3339, size: 64)
!3339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3340, size: 64)
!3340 = !DISubroutineType(types: !3341)
!3341 = !{!206, !3106, !3331}
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "exit_sched", scope: !3336, file: !88, line: 31, baseType: !3343, size: 64, offset: 64)
!3343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3344, size: 64)
!3344 = !DISubroutineType(types: !3345)
!3345 = !{null, !3327}
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !3336, file: !88, line: 32, baseType: !3347, size: 64, offset: 128)
!3347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3348, size: 64)
!3348 = !DISubroutineType(types: !3349)
!3349 = !{!206, !3118, !7}
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !3336, file: !88, line: 33, baseType: !3351, size: 64, offset: 192)
!3351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3352, size: 64)
!3352 = !DISubroutineType(types: !3353)
!3353 = !{null, !3118, !7}
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "depth_updated", scope: !3336, file: !88, line: 34, baseType: !3355, size: 64, offset: 256)
!3355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3356, size: 64)
!3356 = !DISubroutineType(types: !3357)
!3357 = !{null, !3118}
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "allow_merge", scope: !3336, file: !88, line: 36, baseType: !3359, size: 64, offset: 320)
!3359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3360, size: 64)
!3360 = !DISubroutineType(types: !3361)
!3361 = !{!1333, !3106, !3110, !2823}
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "bio_merge", scope: !3336, file: !88, line: 37, baseType: !3363, size: 64, offset: 384)
!3363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3364, size: 64)
!3364 = !DISubroutineType(types: !3365)
!3365 = !{!1333, !3118, !2823, !7}
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "request_merge", scope: !3336, file: !88, line: 38, baseType: !3367, size: 64, offset: 448)
!3367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3368, size: 64)
!3368 = !DISubroutineType(types: !3369)
!3369 = !{!206, !3106, !3370, !2823}
!3370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3110, size: 64)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "request_merged", scope: !3336, file: !88, line: 39, baseType: !3372, size: 64, offset: 512)
!3372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3373, size: 64)
!3373 = !DISubroutineType(types: !3374)
!3374 = !{null, !3106, !3110, !87}
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "requests_merged", scope: !3336, file: !88, line: 40, baseType: !3376, size: 64, offset: 576)
!3376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3377, size: 64)
!3377 = !DISubroutineType(types: !3378)
!3378 = !{null, !3106, !3110, !3110}
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !3336, file: !88, line: 41, baseType: !3380, size: 64, offset: 640)
!3380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3381, size: 64)
!3381 = !DISubroutineType(types: !3382)
!3382 = !{null, !7, !3383}
!3383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3384, size: 64)
!3384 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_alloc_data", file: !88, line: 26, flags: DIFlagFwdDecl)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_request", scope: !3336, file: !88, line: 42, baseType: !3386, size: 64, offset: 704)
!3386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3387, size: 64)
!3387 = !DISubroutineType(types: !3388)
!3388 = !{null, !3110}
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "finish_request", scope: !3336, file: !88, line: 43, baseType: !3386, size: 64, offset: 768)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "insert_requests", scope: !3336, file: !88, line: 44, baseType: !3391, size: 64, offset: 832)
!3391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3392, size: 64)
!3392 = !DISubroutineType(types: !3393)
!3393 = !{null, !3118, !980, !1333}
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_request", scope: !3336, file: !88, line: 45, baseType: !3395, size: 64, offset: 896)
!3395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3396, size: 64)
!3396 = !DISubroutineType(types: !3397)
!3397 = !{!3110, !3118}
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "has_work", scope: !3336, file: !88, line: 46, baseType: !3399, size: 64, offset: 960)
!3399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3400, size: 64)
!3400 = !DISubroutineType(types: !3401)
!3401 = !{!1333, !3118}
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "completed_request", scope: !3336, file: !88, line: 47, baseType: !3403, size: 64, offset: 1024)
!3403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3404, size: 64)
!3404 = !DISubroutineType(types: !3405)
!3405 = !{null, !3110, !1001}
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_request", scope: !3336, file: !88, line: 48, baseType: !3386, size: 64, offset: 1088)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "former_request", scope: !3336, file: !88, line: 49, baseType: !3408, size: 64, offset: 1152)
!3408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3409, size: 64)
!3409 = !DISubroutineType(types: !3410)
!3410 = !{!3110, !3106, !3110}
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !3336, file: !88, line: 50, baseType: !3408, size: 64, offset: 1216)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "init_icq", scope: !3336, file: !88, line: 51, baseType: !3413, size: 64, offset: 1280)
!3413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3414, size: 64)
!3414 = !DISubroutineType(types: !3415)
!3415 = !{null, !3236}
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "exit_icq", scope: !3336, file: !88, line: 52, baseType: !3413, size: 64, offset: 1344)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "icq_size", scope: !3332, file: !88, line: 74, baseType: !1173, size: 64, offset: 1472)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "icq_align", scope: !3332, file: !88, line: 75, baseType: !1173, size: 64, offset: 1536)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_attrs", scope: !3332, file: !88, line: 76, baseType: !3420, size: 64, offset: 1600)
!3420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3421, size: 64)
!3421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_fs_entry", file: !88, line: 57, size: 256, elements: !3422)
!3422 = !{!3423, !3424, !3428}
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3421, file: !88, line: 58, baseType: !1164, size: 128)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !3421, file: !88, line: 59, baseType: !3425, size: 64, offset: 128)
!3425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3426, size: 64)
!3426 = !DISubroutineType(types: !3427)
!3427 = !{!1159, !3327, !1128}
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !3421, file: !88, line: 60, baseType: !3429, size: 64, offset: 192)
!3429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3430, size: 64)
!3430 = !DISubroutineType(types: !3431)
!3431 = !{!1159, !3327, !1008, !1173}
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_name", scope: !3332, file: !88, line: 77, baseType: !1008, size: 64, offset: 1664)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_alias", scope: !3332, file: !88, line: 78, baseType: !1008, size: 64, offset: 1728)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_features", scope: !3332, file: !88, line: 79, baseType: !3435, size: 32, offset: 1792)
!3435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_owner", scope: !3332, file: !88, line: 80, baseType: !1475, size: 64, offset: 1856)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache_name", scope: !3332, file: !88, line: 87, baseType: !3438, size: 176, offset: 1920)
!3438 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1010, size: 176, elements: !3439)
!3439 = !{!3440}
!3440 = !DISubrange(count: 22)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3332, file: !88, line: 88, baseType: !976, size: 128, offset: 2112)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_data", scope: !3328, file: !88, line: 104, baseType: !970, size: 64, offset: 64)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3328, file: !88, line: 105, baseType: !1074, size: 512, offset: 128)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !3328, file: !88, line: 106, baseType: !1568, size: 192, offset: 640)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !3328, file: !88, line: 107, baseType: !7, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3328, file: !88, line: 108, baseType: !3447, size: 4096, offset: 896)
!3447 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1480, size: 4096, elements: !1133)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "q_usage_counter", scope: !3107, file: !82, line: 403, baseType: !2859, size: 128, offset: 128)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !3107, file: !82, line: 405, baseType: !3450, size: 64, offset: 256)
!3450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3451, size: 64)
!3451 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_queue_stats", file: !82, line: 43, flags: DIFlagFwdDecl)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "rq_qos", scope: !3107, file: !82, line: 406, baseType: !3453, size: 64, offset: 320)
!3453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3454, size: 64)
!3454 = !DICompositeType(tag: DW_TAG_structure_type, name: "rq_qos", file: !82, line: 42, flags: DIFlagFwdDecl)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ops", scope: !3107, file: !82, line: 408, baseType: !3456, size: 64, offset: 384)
!3456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3457, size: 64)
!3457 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3458)
!3458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ops", file: !3120, line: 290, size: 960, elements: !3459)
!3459 = !{!3460, !3470, !3471, !3475, !3479, !3483, !3487, !3488, !3492, !3493, !3540, !3544, !3545, !3546, !3547}
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "queue_rq", scope: !3458, file: !3120, line: 294, baseType: !3461, size: 64)
!3461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3462, size: 64)
!3462 = !DISubroutineType(types: !3463)
!3463 = !{!3277, !3118, !3464}
!3464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3465, size: 64)
!3465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3466)
!3466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_queue_data", file: !3120, line: 277, size: 128, elements: !3467)
!3467 = !{!3468, !3469}
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "rq", scope: !3466, file: !3120, line: 278, baseType: !3110, size: 64)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !3466, file: !3120, line: 279, baseType: !1333, size: 8, offset: 64)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "commit_rqs", scope: !3458, file: !3120, line: 304, baseType: !3355, size: 64, offset: 64)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "get_budget", scope: !3458, file: !3120, line: 312, baseType: !3472, size: 64, offset: 128)
!3472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3473, size: 64)
!3473 = !DISubroutineType(types: !3474)
!3474 = !{!1333, !3106}
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "put_budget", scope: !3458, file: !3120, line: 317, baseType: !3476, size: 64, offset: 192)
!3476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3477, size: 64)
!3477 = !DISubroutineType(types: !3478)
!3478 = !{null, !3106}
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3458, file: !3120, line: 322, baseType: !3480, size: 64, offset: 256)
!3480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3481, size: 64)
!3481 = !DISubroutineType(types: !3482)
!3482 = !{!94, !3110, !1333}
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3458, file: !3120, line: 327, baseType: !3484, size: 64, offset: 320)
!3484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3485, size: 64)
!3485 = !DISubroutineType(types: !3486)
!3486 = !{!206, !3118}
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3458, file: !3120, line: 332, baseType: !3386, size: 64, offset: 384)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !3458, file: !3120, line: 339, baseType: !3489, size: 64, offset: 448)
!3489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3490, size: 64)
!3490 = !DISubroutineType(types: !3491)
!3491 = !{!206, !3118, !970, !7}
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !3458, file: !3120, line: 343, baseType: !3351, size: 64, offset: 512)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "init_request", scope: !3458, file: !3120, line: 352, baseType: !3494, size: 64, offset: 576)
!3494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3495, size: 64)
!3495 = !DISubroutineType(types: !3496)
!3496 = !{!206, !3497, !3110, !7, !7}
!3497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3498, size: 64)
!3498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tag_set", file: !3120, line: 249, size: 2304, elements: !3499)
!3499 = !{!3500, !3508, !3509, !3510, !3511, !3512, !3513, !3514, !3515, !3516, !3517, !3518, !3519, !3535, !3536, !3538, !3539}
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3498, file: !3120, line: 250, baseType: !3501, size: 384)
!3501 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3502, size: 384, elements: !1129)
!3502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_queue_map", file: !3120, line: 195, size: 128, elements: !3503)
!3503 = !{!3504, !3506, !3507}
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "mq_map", scope: !3502, file: !3120, line: 196, baseType: !3505, size: 64)
!3505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "nr_queues", scope: !3502, file: !3120, line: 197, baseType: !7, size: 32, offset: 64)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "queue_offset", scope: !3502, file: !3120, line: 198, baseType: !7, size: 32, offset: 96)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "nr_maps", scope: !3498, file: !3120, line: 251, baseType: !7, size: 32, offset: 384)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3498, file: !3120, line: 252, baseType: !3456, size: 64, offset: 448)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !3498, file: !3120, line: 253, baseType: !7, size: 32, offset: 512)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !3498, file: !3120, line: 254, baseType: !7, size: 32, offset: 544)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tags", scope: !3498, file: !3120, line: 255, baseType: !7, size: 32, offset: 576)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !3498, file: !3120, line: 256, baseType: !7, size: 32, offset: 608)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3498, file: !3120, line: 257, baseType: !206, size: 32, offset: 640)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3498, file: !3120, line: 258, baseType: !7, size: 32, offset: 672)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3498, file: !3120, line: 259, baseType: !7, size: 32, offset: 704)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3498, file: !3120, line: 260, baseType: !970, size: 64, offset: 768)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "active_queues_shared_sbitmap", scope: !3498, file: !3120, line: 261, baseType: !1642, size: 32, offset: 832)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "__bitmap_tags", scope: !3498, file: !3120, line: 263, baseType: !3520, size: 512, offset: 896)
!3520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap_queue", file: !3143, line: 97, size: 512, elements: !3521)
!3521 = !{!3522, !3523, !3524, !3525, !3526, !3532, !3533, !3534}
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "sb", scope: !3520, file: !3143, line: 101, baseType: !3142, size: 192)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_hint", scope: !3520, file: !3143, line: 109, baseType: !3505, size: 64, offset: 192)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "wake_batch", scope: !3520, file: !3143, line: 115, baseType: !7, size: 32, offset: 256)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "wake_index", scope: !3520, file: !3143, line: 120, baseType: !1642, size: 32, offset: 288)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "ws", scope: !3520, file: !3143, line: 125, baseType: !3527, size: 64, offset: 320)
!3527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3528, size: 64)
!3528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbq_wait_state", file: !3143, line: 76, size: 192, elements: !3529)
!3529 = !{!3530, !3531}
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "wait_cnt", scope: !3528, file: !3143, line: 80, baseType: !1642, size: 32)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !3528, file: !3143, line: 85, baseType: !2385, size: 128, offset: 64)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "ws_active", scope: !3520, file: !3143, line: 130, baseType: !1642, size: 32, offset: 384)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "round_robin", scope: !3520, file: !3143, line: 135, baseType: !1333, size: 8, offset: 416)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "min_shallow_depth", scope: !3520, file: !3143, line: 141, baseType: !7, size: 32, offset: 448)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "__breserved_tags", scope: !3498, file: !3120, line: 264, baseType: !3520, size: 512, offset: 1408)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !3498, file: !3120, line: 265, baseType: !3537, size: 64, offset: 1920)
!3537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3166, size: 64)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "tag_list_lock", scope: !3498, file: !3120, line: 267, baseType: !1568, size: 192, offset: 1984)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "tag_list", scope: !3498, file: !3120, line: 268, baseType: !976, size: 128, offset: 2176)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "exit_request", scope: !3458, file: !3120, line: 357, baseType: !3541, size: 64, offset: 640)
!3541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3542, size: 64)
!3542 = !DISubroutineType(types: !3543)
!3543 = !{null, !3497, !3110, !7}
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "initialize_rq_fn", scope: !3458, file: !3120, line: 363, baseType: !3386, size: 64, offset: 704)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_rq", scope: !3458, file: !3120, line: 369, baseType: !3386, size: 64, offset: 768)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !3458, file: !3120, line: 374, baseType: !3472, size: 64, offset: 832)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "map_queues", scope: !3458, file: !3120, line: 380, baseType: !3548, size: 64, offset: 896)
!3548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3549, size: 64)
!3549 = !DISubroutineType(types: !3550)
!3550 = !{!206, !3497}
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ctx", scope: !3107, file: !82, line: 411, baseType: !3115, size: 64, offset: 448)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !3107, file: !82, line: 413, baseType: !7, size: 32, offset: 512)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "queue_hw_ctx", scope: !3107, file: !82, line: 416, baseType: !3554, size: 64, offset: 576)
!3554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3118, size: 64)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !3107, file: !82, line: 417, baseType: !7, size: 32, offset: 640)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !3107, file: !82, line: 419, baseType: !2950, size: 64, offset: 704)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "queuedata", scope: !3107, file: !82, line: 425, baseType: !970, size: 64, offset: 768)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "queue_flags", scope: !3107, file: !82, line: 430, baseType: !1012, size: 64, offset: 832)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "pm_only", scope: !3107, file: !82, line: 436, baseType: !1642, size: 32, offset: 896)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3107, file: !82, line: 442, baseType: !206, size: 32, offset: 928)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_gfp", scope: !3107, file: !82, line: 447, baseType: !1638, size: 32, offset: 960)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !3107, file: !82, line: 449, baseType: !1087, offset: 992)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3107, file: !82, line: 454, baseType: !1074, size: 512, offset: 1024)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "mq_kobj", scope: !3107, file: !82, line: 459, baseType: !1080, size: 64, offset: 1536)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "integrity", scope: !3107, file: !82, line: 462, baseType: !3566, size: 128, offset: 1600)
!3566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity", file: !2831, line: 159, size: 128, elements: !3567)
!3567 = !{!3568, !3597, !3598, !3599, !3600}
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !3566, file: !2831, line: 160, baseType: !3569, size: 64)
!3569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3570, size: 64)
!3570 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3571)
!3571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_profile", file: !82, line: 1664, size: 320, elements: !3572)
!3572 = !{!3573, !3587, !3588, !3591, !3596}
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "generate_fn", scope: !3571, file: !82, line: 1665, baseType: !3574, size: 64)
!3574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3575, size: 64)
!3575 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_processing_fn", file: !82, line: 1660, baseType: !3576)
!3576 = !DISubroutineType(types: !3577)
!3577 = !{!3277, !3578}
!3578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3579, size: 64)
!3579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_iter", file: !82, line: 1651, size: 320, elements: !3580)
!3580 = !{!3581, !3582, !3583, !3584, !3585, !3586}
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "prot_buf", scope: !3579, file: !82, line: 1652, baseType: !970, size: 64)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "data_buf", scope: !3579, file: !82, line: 1653, baseType: !970, size: 64, offset: 64)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !3579, file: !82, line: 1654, baseType: !1725, size: 64, offset: 128)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !3579, file: !82, line: 1655, baseType: !7, size: 32, offset: 192)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !3579, file: !82, line: 1656, baseType: !1066, size: 16, offset: 224)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !3579, file: !82, line: 1657, baseType: !1008, size: 64, offset: 256)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "verify_fn", scope: !3571, file: !82, line: 1666, baseType: !3574, size: 64, offset: 64)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fn", scope: !3571, file: !82, line: 1667, baseType: !3589, size: 64, offset: 128)
!3589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3590, size: 64)
!3590 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_prepare_fn", file: !82, line: 1661, baseType: !3387)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !3571, file: !82, line: 1668, baseType: !3592, size: 64, offset: 192)
!3592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3593, size: 64)
!3593 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_complete_fn", file: !82, line: 1662, baseType: !3594)
!3594 = !DISubroutineType(types: !3595)
!3595 = !{null, !3110, !7}
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3571, file: !82, line: 1669, baseType: !1008, size: 64, offset: 256)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3566, file: !2831, line: 161, baseType: !1057, size: 8, offset: 64)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_size", scope: !3566, file: !2831, line: 162, baseType: !1057, size: 8, offset: 72)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "interval_exp", scope: !3566, file: !2831, line: 163, baseType: !1057, size: 8, offset: 80)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "tag_size", scope: !3566, file: !2831, line: 164, baseType: !1057, size: 8, offset: 88)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3107, file: !82, line: 466, baseType: !1070, size: 64, offset: 1728)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_status", scope: !3107, file: !82, line: 467, baseType: !61, size: 32, offset: 1792)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending", scope: !3107, file: !82, line: 468, baseType: !7, size: 32, offset: 1824)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "nr_requests", scope: !3107, file: !82, line: 474, baseType: !1012, size: 64, offset: 1856)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pad_mask", scope: !3107, file: !82, line: 476, baseType: !7, size: 32, offset: 1920)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !3107, file: !82, line: 477, baseType: !7, size: 32, offset: 1952)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "rq_timeout", scope: !3107, file: !82, line: 484, baseType: !7, size: 32, offset: 1984)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nsec", scope: !3107, file: !82, line: 485, baseType: !206, size: 32, offset: 2016)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cb", scope: !3107, file: !82, line: 487, baseType: !3610, size: 64, offset: 2048)
!3610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3611, size: 64)
!3611 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_stat_callback", file: !82, line: 44, flags: DIFlagFwdDecl)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "poll_stat", scope: !3107, file: !82, line: 488, baseType: !3613, size: 5120, offset: 2112)
!3613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3614, size: 5120, elements: !2638)
!3614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_rq_stat", file: !2825, line: 540, size: 320, elements: !3615)
!3615 = !{!3616, !3617, !3618, !3619, !3620}
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !3614, file: !2825, line: 541, baseType: !1001, size: 64)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !3614, file: !2825, line: 542, baseType: !1001, size: 64, offset: 64)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3614, file: !2825, line: 543, baseType: !1001, size: 64, offset: 128)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "nr_samples", scope: !3614, file: !2825, line: 544, baseType: !1042, size: 32, offset: 192)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3614, file: !2825, line: 545, baseType: !1001, size: 64, offset: 256)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3107, file: !82, line: 490, baseType: !3009, size: 320, offset: 7232)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_work", scope: !3107, file: !82, line: 491, baseType: !2897, size: 256, offset: 7552)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_requests_shared_sbitmap", scope: !3107, file: !82, line: 493, baseType: !1642, size: 32, offset: 7808)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !3107, file: !82, line: 495, baseType: !976, size: 128, offset: 7872)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !3107, file: !82, line: 502, baseType: !3626, size: 896, offset: 8000)
!3626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_limits", file: !82, line: 321, size: 896, elements: !3627)
!3627 = !{!3628, !3629, !3630, !3631, !3632, !3633, !3634, !3635, !3636, !3637, !3638, !3639, !3640, !3641, !3642, !3643, !3644, !3645, !3646, !3647, !3648, !3649, !3650, !3651, !3652, !3653, !3654}
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_pfn", scope: !3626, file: !82, line: 322, baseType: !1012, size: 64)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "seg_boundary_mask", scope: !3626, file: !82, line: 323, baseType: !1012, size: 64, offset: 64)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !3626, file: !82, line: 324, baseType: !1012, size: 64, offset: 128)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_sectors", scope: !3626, file: !82, line: 326, baseType: !7, size: 32, offset: 192)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "max_dev_sectors", scope: !3626, file: !82, line: 327, baseType: !7, size: 32, offset: 224)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_sectors", scope: !3626, file: !82, line: 328, baseType: !7, size: 32, offset: 256)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !3626, file: !82, line: 329, baseType: !7, size: 32, offset: 288)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3626, file: !82, line: 330, baseType: !7, size: 32, offset: 320)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "physical_block_size", scope: !3626, file: !82, line: 331, baseType: !7, size: 32, offset: 352)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !3626, file: !82, line: 332, baseType: !7, size: 32, offset: 384)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_offset", scope: !3626, file: !82, line: 333, baseType: !7, size: 32, offset: 416)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "io_min", scope: !3626, file: !82, line: 334, baseType: !7, size: 32, offset: 448)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "io_opt", scope: !3626, file: !82, line: 335, baseType: !7, size: 32, offset: 480)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_sectors", scope: !3626, file: !82, line: 336, baseType: !7, size: 32, offset: 512)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_discard_sectors", scope: !3626, file: !82, line: 337, baseType: !7, size: 32, offset: 544)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_same_sectors", scope: !3626, file: !82, line: 338, baseType: !7, size: 32, offset: 576)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_zeroes_sectors", scope: !3626, file: !82, line: 339, baseType: !7, size: 32, offset: 608)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "max_zone_append_sectors", scope: !3626, file: !82, line: 340, baseType: !7, size: 32, offset: 640)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "discard_granularity", scope: !3626, file: !82, line: 341, baseType: !7, size: 32, offset: 672)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "discard_alignment", scope: !3626, file: !82, line: 342, baseType: !7, size: 32, offset: 704)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "max_segments", scope: !3626, file: !82, line: 344, baseType: !1066, size: 16, offset: 736)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "max_integrity_segments", scope: !3626, file: !82, line: 345, baseType: !1066, size: 16, offset: 752)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_segments", scope: !3626, file: !82, line: 346, baseType: !1066, size: 16, offset: 768)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "misaligned", scope: !3626, file: !82, line: 348, baseType: !1057, size: 8, offset: 784)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "discard_misaligned", scope: !3626, file: !82, line: 349, baseType: !1057, size: 8, offset: 792)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "raid_partial_stripes_expensive", scope: !3626, file: !82, line: 350, baseType: !1057, size: 8, offset: 800)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "zoned", scope: !3626, file: !82, line: 351, baseType: !110, size: 32, offset: 832)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "required_elevator_features", scope: !3107, file: !82, line: 504, baseType: !7, size: 32, offset: 8896)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "sg_timeout", scope: !3107, file: !82, line: 534, baseType: !7, size: 32, offset: 8928)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "sg_reserved_size", scope: !3107, file: !82, line: 535, baseType: !7, size: 32, offset: 8960)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3107, file: !82, line: 536, baseType: !206, size: 32, offset: 8992)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_mutex", scope: !3107, file: !82, line: 537, baseType: !1568, size: 192, offset: 9024)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !3107, file: !82, line: 544, baseType: !3138, size: 64, offset: 9216)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_list", scope: !3107, file: !82, line: 546, baseType: !976, size: 128, offset: 9280)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_lock", scope: !3107, file: !82, line: 547, baseType: !1087, offset: 9408)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !3107, file: !82, line: 548, baseType: !3005, size: 704, offset: 9408)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !3107, file: !82, line: 550, baseType: !1568, size: 192, offset: 10112)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_dir_lock", scope: !3107, file: !82, line: 551, baseType: !1568, size: 192, offset: 10304)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_list", scope: !3107, file: !82, line: 557, baseType: !976, size: 128, offset: 10496)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_lock", scope: !3107, file: !82, line: 558, baseType: !1087, offset: 10624)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_depth", scope: !3107, file: !82, line: 560, baseType: !206, size: 32, offset: 10624)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_dev", scope: !3107, file: !82, line: 563, baseType: !3670, size: 256, offset: 10688)
!3670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_class_device", file: !3671, line: 18, size: 256, elements: !3672)
!3671 = !DIFile(filename: "./include/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!3672 = !{!3673, !3674, !3675, !3676}
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !3670, file: !3671, line: 19, baseType: !1070, size: 64)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !3670, file: !3671, line: 20, baseType: !206, size: 32, offset: 64)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3670, file: !3671, line: 21, baseType: !3106, size: 64, offset: 128)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3670, file: !3671, line: 22, baseType: !3677, size: 64, offset: 192)
!3677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3678, size: 64)
!3678 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3679)
!3679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_ops", file: !3671, line: 10, size: 256, elements: !3680)
!3680 = !{!3681, !3722, !3726, !3730}
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "check_proto", scope: !3679, file: !3671, line: 11, baseType: !3682, size: 64)
!3682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3683, size: 64)
!3683 = !DISubroutineType(types: !3684)
!3684 = !{!206, !3685}
!3685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3686, size: 64)
!3686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_io_v4", file: !3687, line: 22, size: 1280, elements: !3688)
!3687 = !DIFile(filename: "./include/uapi/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!3688 = !{!3689, !3690, !3691, !3692, !3693, !3694, !3695, !3696, !3697, !3698, !3699, !3700, !3701, !3702, !3703, !3704, !3705, !3706, !3707, !3708, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717, !3718, !3719, !3720, !3721}
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "guard", scope: !3686, file: !3687, line: 23, baseType: !2349, size: 32)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !3686, file: !3687, line: 24, baseType: !1043, size: 32, offset: 32)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "subprotocol", scope: !3686, file: !3687, line: 25, baseType: !1043, size: 32, offset: 64)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !3686, file: !3687, line: 28, baseType: !1043, size: 32, offset: 96)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3686, file: !3687, line: 29, baseType: !1003, size: 64, offset: 128)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "request_tag", scope: !3686, file: !3687, line: 30, baseType: !1003, size: 64, offset: 192)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "request_attr", scope: !3686, file: !3687, line: 31, baseType: !1043, size: 32, offset: 256)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "request_priority", scope: !3686, file: !3687, line: 32, baseType: !1043, size: 32, offset: 288)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "request_extra", scope: !3686, file: !3687, line: 33, baseType: !1043, size: 32, offset: 320)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "max_response_len", scope: !3686, file: !3687, line: 34, baseType: !1043, size: 32, offset: 352)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !3686, file: !3687, line: 35, baseType: !1003, size: 64, offset: 384)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "dout_iovec_count", scope: !3686, file: !3687, line: 38, baseType: !1043, size: 32, offset: 448)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xfer_len", scope: !3686, file: !3687, line: 40, baseType: !1043, size: 32, offset: 480)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "din_iovec_count", scope: !3686, file: !3687, line: 41, baseType: !1043, size: 32, offset: 512)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "din_xfer_len", scope: !3686, file: !3687, line: 42, baseType: !1043, size: 32, offset: 544)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xferp", scope: !3686, file: !3687, line: 43, baseType: !1003, size: 64, offset: 576)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "din_xferp", scope: !3686, file: !3687, line: 44, baseType: !1003, size: 64, offset: 640)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3686, file: !3687, line: 46, baseType: !1043, size: 32, offset: 704)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3686, file: !3687, line: 47, baseType: !1043, size: 32, offset: 736)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ptr", scope: !3686, file: !3687, line: 48, baseType: !1003, size: 64, offset: 768)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "spare_in", scope: !3686, file: !3687, line: 49, baseType: !1043, size: 32, offset: 832)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "driver_status", scope: !3686, file: !3687, line: 51, baseType: !1043, size: 32, offset: 864)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "transport_status", scope: !3686, file: !3687, line: 52, baseType: !1043, size: 32, offset: 896)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "device_status", scope: !3686, file: !3687, line: 53, baseType: !1043, size: 32, offset: 928)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "retry_delay", scope: !3686, file: !3687, line: 54, baseType: !1043, size: 32, offset: 960)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3686, file: !3687, line: 55, baseType: !1043, size: 32, offset: 992)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !3686, file: !3687, line: 56, baseType: !1043, size: 32, offset: 1024)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "response_len", scope: !3686, file: !3687, line: 57, baseType: !1043, size: 32, offset: 1056)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "din_resid", scope: !3686, file: !3687, line: 58, baseType: !2349, size: 32, offset: 1088)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "dout_resid", scope: !3686, file: !3687, line: 59, baseType: !2349, size: 32, offset: 1120)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "generated_tag", scope: !3686, file: !3687, line: 60, baseType: !1003, size: 64, offset: 1152)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "spare_out", scope: !3686, file: !3687, line: 61, baseType: !1043, size: 32, offset: 1216)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !3686, file: !3687, line: 63, baseType: !1043, size: 32, offset: 1248)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "fill_hdr", scope: !3679, file: !3671, line: 12, baseType: !3723, size: 64, offset: 64)
!3723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3724, size: 64)
!3724 = !DISubroutineType(types: !3725)
!3725 = !{!206, !3110, !3685, !3033}
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "complete_rq", scope: !3679, file: !3671, line: 14, baseType: !3727, size: 64, offset: 128)
!3727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3728, size: 64)
!3728 = !DISubroutineType(types: !3729)
!3729 = !{!206, !3110, !3685}
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "free_rq", scope: !3679, file: !3671, line: 15, baseType: !3386, size: 64, offset: 192)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !3107, file: !82, line: 570, baseType: !1216, size: 128, align: 64, offset: 10944)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_wq", scope: !3107, file: !82, line: 571, baseType: !2385, size: 128, offset: 11072)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_lock", scope: !3107, file: !82, line: 576, baseType: !1568, size: 192, offset: 11200)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !3107, file: !82, line: 578, baseType: !3497, size: 64, offset: 11392)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set_list", scope: !3107, file: !82, line: 579, baseType: !976, size: 128, offset: 11456)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "bio_split", scope: !3107, file: !82, line: 580, baseType: !3737, size: 2368, offset: 11584)
!3737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_set", file: !2820, line: 682, size: 2368, elements: !3738)
!3738 = !{!3739, !3740, !3741, !3762, !3763, !3764, !3765, !3766, !3767, !3768}
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "bio_slab", scope: !3737, file: !2820, line: 683, baseType: !1847, size: 64)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "front_pad", scope: !3737, file: !2820, line: 684, baseType: !7, size: 32, offset: 64)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "bio_pool", scope: !3737, file: !2820, line: 686, baseType: !3742, size: 448, offset: 128)
!3742 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !3743, line: 26, baseType: !3744)
!3743 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!3744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !3743, line: 16, size: 448, elements: !3745)
!3745 = !{!3746, !3747, !3748, !3749, !3750, !3751, !3756, !3761}
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3744, file: !3743, line: 17, baseType: !1087)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !3744, file: !3743, line: 18, baseType: !206, size: 32)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !3744, file: !3743, line: 19, baseType: !206, size: 32, offset: 32)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !3744, file: !3743, line: 20, baseType: !1716, size: 64, offset: 64)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !3744, file: !3743, line: 22, baseType: !970, size: 64, offset: 128)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3744, file: !3743, line: 23, baseType: !3752, size: 64, offset: 192)
!3752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3753, size: 64)
!3753 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !3743, line: 13, baseType: !3754)
!3754 = !DISubroutineType(types: !3755)
!3755 = !{!970, !1638, !970}
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3744, file: !3743, line: 24, baseType: !3757, size: 64, offset: 256)
!3757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3758, size: 64)
!3758 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !3743, line: 14, baseType: !3759)
!3759 = !DISubroutineType(types: !3760)
!3760 = !{null, !970, !970}
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !3744, file: !3743, line: 25, baseType: !2385, size: 128, offset: 320)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_pool", scope: !3737, file: !2820, line: 687, baseType: !3742, size: 448, offset: 576)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "bio_integrity_pool", scope: !3737, file: !2820, line: 689, baseType: !3742, size: 448, offset: 1024)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_integrity_pool", scope: !3737, file: !2820, line: 690, baseType: !3742, size: 448, offset: 1472)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_lock", scope: !3737, file: !2820, line: 697, baseType: !1087, offset: 1920)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_list", scope: !3737, file: !2820, line: 698, baseType: !2819, size: 128, offset: 1920)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_work", scope: !3737, file: !2820, line: 699, baseType: !2897, size: 256, offset: 2048)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_workqueue", scope: !3737, file: !2820, line: 700, baseType: !2909, size: 64, offset: 2304)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_dir", scope: !3107, file: !82, line: 582, baseType: !1233, size: 64, offset: 13952)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "mq_sysfs_init_done", scope: !3107, file: !82, line: 589, baseType: !1333, size: 8, offset: 14016)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !3107, file: !82, line: 591, baseType: !1173, size: 64, offset: 14080)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "write_hints", scope: !3107, file: !82, line: 594, baseType: !3773, size: 320, offset: 14144)
!3773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1001, size: 320, elements: !3774)
!3774 = !{!3775}
!3775 = !DISubrange(count: 5)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !2830, file: !2831, line: 191, baseType: !970, size: 64, offset: 7168)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2830, file: !2831, line: 193, baseType: !206, size: 32, offset: 7232)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2830, file: !2831, line: 194, baseType: !1012, size: 64, offset: 7296)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !2830, file: !2831, line: 196, baseType: !1662, size: 256, offset: 7360)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !2830, file: !2831, line: 197, baseType: !1080, size: 64, offset: 7616)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !2830, file: !2831, line: 199, baseType: !3782, size: 64, offset: 7680)
!3782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3783, size: 64)
!3783 = !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !2831, line: 199, flags: DIFlagFwdDecl)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !2830, file: !2831, line: 200, baseType: !1642, size: 32, offset: 7744)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !2830, file: !2831, line: 201, baseType: !3786, size: 64, offset: 7808)
!3786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3787, size: 64)
!3787 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !2831, line: 156, flags: DIFlagFwdDecl)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !2830, file: !2831, line: 203, baseType: !1074, size: 512, offset: 7872)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !2830, file: !2831, line: 208, baseType: !206, size: 32, offset: 8384)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2830, file: !2831, line: 209, baseType: !3791, size: 64, offset: 8448)
!3791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3792, size: 64)
!3792 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !2831, line: 157, flags: DIFlagFwdDecl)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !2830, file: !2831, line: 210, baseType: !3794, offset: 8512)
!3794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !1491, line: 192, elements: !1101)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "bi_opf", scope: !2824, file: !2825, line: 206, baseType: !7, size: 32, offset: 128)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "bi_flags", scope: !2824, file: !2825, line: 210, baseType: !1066, size: 16, offset: 160)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "bi_ioprio", scope: !2824, file: !2825, line: 211, baseType: !1066, size: 16, offset: 176)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "bi_write_hint", scope: !2824, file: !2825, line: 212, baseType: !1066, size: 16, offset: 192)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "bi_status", scope: !2824, file: !2825, line: 213, baseType: !3277, size: 8, offset: 208)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "bi_partno", scope: !2824, file: !2825, line: 214, baseType: !2257, size: 8, offset: 216)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_remaining", scope: !2824, file: !2825, line: 215, baseType: !1642, size: 32, offset: 224)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "bi_iter", scope: !2824, file: !2825, line: 217, baseType: !3803, size: 192, offset: 256)
!3803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bvec_iter", file: !3222, line: 37, size: 192, elements: !3804)
!3804 = !{!3805, !3806, !3807, !3808}
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "bi_sector", scope: !3803, file: !3222, line: 38, baseType: !1725, size: 64)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "bi_size", scope: !3803, file: !3222, line: 40, baseType: !7, size: 32, offset: 64)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "bi_idx", scope: !3803, file: !3222, line: 42, baseType: !7, size: 32, offset: 96)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "bi_bvec_done", scope: !3803, file: !3222, line: 44, baseType: !7, size: 32, offset: 128)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "bi_end_io", scope: !2824, file: !2825, line: 219, baseType: !3810, size: 64, offset: 448)
!3810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3811, size: 64)
!3811 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_end_io_t", file: !2825, line: 19, baseType: !3812)
!3812 = !DISubroutineType(types: !3813)
!3813 = !{null, !2823}
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "bi_private", scope: !2824, file: !2825, line: 221, baseType: !970, size: 64, offset: 512)
!3815 = !DIDerivedType(tag: DW_TAG_member, scope: !2824, file: !2825, line: 240, baseType: !3816, size: 64, offset: 576)
!3816 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2824, file: !2825, line: 240, size: 64, elements: !3817)
!3817 = !{!3818}
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "bi_integrity", scope: !3816, file: !2825, line: 242, baseType: !3819, size: 64)
!3819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3820, size: 64)
!3820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_integrity_payload", file: !2820, line: 313, size: 832, elements: !3821)
!3821 = !{!3822, !3823, !3824, !3825, !3826, !3827, !3828, !3829, !3830, !3832}
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "bip_bio", scope: !3820, file: !2820, line: 314, baseType: !2823, size: 64)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "bip_iter", scope: !3820, file: !2820, line: 316, baseType: !3803, size: 192, offset: 64)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "bip_slab", scope: !3820, file: !2820, line: 318, baseType: !1066, size: 16, offset: 256)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vcnt", scope: !3820, file: !2820, line: 319, baseType: !1066, size: 16, offset: 272)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "bip_max_vcnt", scope: !3820, file: !2820, line: 320, baseType: !1066, size: 16, offset: 288)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "bip_flags", scope: !3820, file: !2820, line: 321, baseType: !1066, size: 16, offset: 304)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "bio_iter", scope: !3820, file: !2820, line: 323, baseType: !3803, size: 192, offset: 320)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "bip_work", scope: !3820, file: !2820, line: 325, baseType: !2897, size: 256, offset: 512)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vec", scope: !3820, file: !2820, line: 327, baseType: !3831, size: 64, offset: 768)
!3831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3221, size: 64)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "bip_inline_vecs", scope: !3820, file: !2820, line: 328, baseType: !3833, offset: 832)
!3833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3221, elements: !2913)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "bi_vcnt", scope: !2824, file: !2825, line: 246, baseType: !1066, size: 16, offset: 640)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "bi_max_vecs", scope: !2824, file: !2825, line: 252, baseType: !1066, size: 16, offset: 656)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_cnt", scope: !2824, file: !2825, line: 254, baseType: !1642, size: 32, offset: 672)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "bi_io_vec", scope: !2824, file: !2825, line: 256, baseType: !3831, size: 64, offset: 704)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "bi_pool", scope: !2824, file: !2825, line: 258, baseType: !3839, size: 64, offset: 768)
!3839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3737, size: 64)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "bi_inline_vecs", scope: !2824, file: !2825, line: 265, baseType: !3833, offset: 832)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2819, file: !2820, line: 556, baseType: !2823, size: 64, offset: 64)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !2122, file: !2123, line: 1050, baseType: !3843, size: 64, offset: 10688)
!3843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3844, size: 64)
!3844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !82, line: 1236, size: 320, elements: !3845)
!3845 = !{!3846, !3847, !3848, !3849, !3850}
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "mq_list", scope: !3844, file: !82, line: 1237, baseType: !976, size: 128)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !3844, file: !82, line: 1238, baseType: !976, size: 128, offset: 128)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "rq_count", scope: !3844, file: !82, line: 1239, baseType: !1066, size: 16, offset: 256)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_queues", scope: !3844, file: !82, line: 1240, baseType: !1333, size: 8, offset: 272)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "nowait", scope: !3844, file: !82, line: 1241, baseType: !1333, size: 8, offset: 280)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !2122, file: !2123, line: 1054, baseType: !3852, size: 64, offset: 10752)
!3852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3853, size: 64)
!3853 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !2123, line: 55, flags: DIFlagFwdDecl)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !2122, file: !2123, line: 1056, baseType: !2950, size: 64, offset: 10816)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !2122, file: !2123, line: 1058, baseType: !3242, size: 64, offset: 10880)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !2122, file: !2123, line: 1061, baseType: !3857, size: 64, offset: 10944)
!3857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3858, size: 64)
!3858 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !2123, line: 43, flags: DIFlagFwdDecl)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !2122, file: !2123, line: 1064, baseType: !1012, size: 64, offset: 11008)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !2122, file: !2123, line: 1065, baseType: !3861, size: 64, offset: 11072)
!3861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3862, size: 64)
!3862 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !2668, line: 14, baseType: !3863)
!3863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !2668, line: 12, size: 384, elements: !3864)
!3864 = !{!3865}
!3865 = !DIDerivedType(tag: DW_TAG_member, scope: !3863, file: !2668, line: 13, baseType: !3866, size: 384)
!3866 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3863, file: !2668, line: 13, size: 384, elements: !3867)
!3867 = !{!3868, !3869, !3870, !3871}
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !3866, file: !2668, line: 13, baseType: !206, size: 32)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !3866, file: !2668, line: 13, baseType: !206, size: 32, offset: 32)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !3866, file: !2668, line: 13, baseType: !206, size: 32, offset: 64)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !3866, file: !2668, line: 13, baseType: !3872, size: 256, offset: 128)
!3872 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !3873, line: 32, size: 256, elements: !3874)
!3873 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!3874 = !{!3875, !3880, !3893, !3899, !3908, !3928, !3933}
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !3872, file: !3873, line: 37, baseType: !3876, size: 64)
!3876 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3872, file: !3873, line: 34, size: 64, elements: !3877)
!3877 = !{!3878, !3879}
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3876, file: !3873, line: 35, baseType: !2364, size: 32)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3876, file: !3873, line: 36, baseType: !1284, size: 32, offset: 32)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !3872, file: !3873, line: 45, baseType: !3881, size: 192)
!3881 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3872, file: !3873, line: 40, size: 192, elements: !3882)
!3882 = !{!3883, !3885, !3886, !3892}
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !3881, file: !3873, line: 41, baseType: !3884, size: 32)
!3884 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !1161, line: 95, baseType: !206)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !3881, file: !3873, line: 42, baseType: !206, size: 32, offset: 32)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3881, file: !3873, line: 43, baseType: !3887, size: 64, offset: 64)
!3887 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !3873, line: 11, baseType: !3888)
!3888 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !3873, line: 8, size: 64, elements: !3889)
!3889 = !{!3890, !3891}
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !3888, file: !3873, line: 9, baseType: !206, size: 32)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !3888, file: !3873, line: 10, baseType: !970, size: 64)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !3881, file: !3873, line: 44, baseType: !206, size: 32, offset: 128)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !3872, file: !3873, line: 52, baseType: !3894, size: 128)
!3894 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3872, file: !3873, line: 48, size: 128, elements: !3895)
!3895 = !{!3896, !3897, !3898}
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3894, file: !3873, line: 49, baseType: !2364, size: 32)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3894, file: !3873, line: 50, baseType: !1284, size: 32, offset: 32)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3894, file: !3873, line: 51, baseType: !3887, size: 64, offset: 64)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !3872, file: !3873, line: 61, baseType: !3900, size: 256)
!3900 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3872, file: !3873, line: 55, size: 256, elements: !3901)
!3901 = !{!3902, !3903, !3904, !3905, !3907}
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3900, file: !3873, line: 56, baseType: !2364, size: 32)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3900, file: !3873, line: 57, baseType: !1284, size: 32, offset: 32)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !3900, file: !3873, line: 58, baseType: !206, size: 32, offset: 64)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !3900, file: !3873, line: 59, baseType: !3906, size: 64, offset: 128)
!3906 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !1161, line: 94, baseType: !1162)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !3900, file: !3873, line: 60, baseType: !3906, size: 64, offset: 192)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !3872, file: !3873, line: 95, baseType: !3909, size: 256)
!3909 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3872, file: !3873, line: 64, size: 256, elements: !3910)
!3910 = !{!3911, !3912}
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !3909, file: !3873, line: 65, baseType: !970, size: 64)
!3912 = !DIDerivedType(tag: DW_TAG_member, scope: !3909, file: !3873, line: 77, baseType: !3913, size: 192, offset: 64)
!3913 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3909, file: !3873, line: 77, size: 192, elements: !3914)
!3914 = !{!3915, !3916, !3923}
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !3913, file: !3873, line: 82, baseType: !2110, size: 16)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !3913, file: !3873, line: 88, baseType: !3917, size: 192)
!3917 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3913, file: !3873, line: 84, size: 192, elements: !3918)
!3918 = !{!3919, !3921, !3922}
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !3917, file: !3873, line: 85, baseType: !3920, size: 64)
!3920 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1010, size: 64, elements: !2235)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !3917, file: !3873, line: 86, baseType: !970, size: 64, offset: 64)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !3917, file: !3873, line: 87, baseType: !970, size: 64, offset: 128)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !3913, file: !3873, line: 93, baseType: !3924, size: 96)
!3924 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3913, file: !3873, line: 90, size: 96, elements: !3925)
!3925 = !{!3926, !3927}
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !3924, file: !3873, line: 91, baseType: !3920, size: 64)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !3924, file: !3873, line: 92, baseType: !1043, size: 32, offset: 64)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !3872, file: !3873, line: 101, baseType: !3929, size: 128)
!3929 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3872, file: !3873, line: 98, size: 128, elements: !3930)
!3930 = !{!3931, !3932}
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !3929, file: !3873, line: 99, baseType: !933, size: 64)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !3929, file: !3873, line: 100, baseType: !206, size: 32, offset: 64)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !3872, file: !3873, line: 108, baseType: !3934, size: 128)
!3934 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3872, file: !3873, line: 104, size: 128, elements: !3935)
!3935 = !{!3936, !3937, !3938}
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !3934, file: !3873, line: 105, baseType: !970, size: 64)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !3934, file: !3873, line: 106, baseType: !206, size: 32, offset: 64)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !3934, file: !3873, line: 107, baseType: !7, size: 32, offset: 96)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2122, file: !2123, line: 1067, baseType: !2740, offset: 11136)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !2122, file: !2123, line: 1099, baseType: !3941, size: 64, offset: 11136)
!3941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3942, size: 64)
!3942 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !2123, line: 56, flags: DIFlagFwdDecl)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !2122, file: !2123, line: 1103, baseType: !976, size: 128, offset: 11200)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !2122, file: !2123, line: 1104, baseType: !3945, size: 64, offset: 11328)
!3945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3946, size: 64)
!3946 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !2123, line: 46, flags: DIFlagFwdDecl)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !2122, file: !2123, line: 1105, baseType: !1568, size: 192, offset: 11392)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !2122, file: !2123, line: 1106, baseType: !7, size: 32, offset: 11584)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !2122, file: !2123, line: 1109, baseType: !3950, size: 128, offset: 11648)
!3950 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3951, size: 128, elements: !2472)
!3951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3952, size: 64)
!3952 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !2123, line: 51, flags: DIFlagFwdDecl)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !2122, file: !2123, line: 1110, baseType: !1568, size: 192, offset: 11776)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !2122, file: !2123, line: 1111, baseType: !976, size: 128, offset: 11968)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !2122, file: !2123, line: 1173, baseType: !3956, size: 64, offset: 12096)
!3956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3957, size: 64)
!3957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !3958, line: 62, size: 256, align: 256, elements: !3959)
!3958 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!3959 = !{!3960, !3961, !3962, !3967}
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !3957, file: !3958, line: 75, baseType: !1043, size: 32)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !3957, file: !3958, line: 90, baseType: !1043, size: 32, offset: 32)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !3957, file: !3958, line: 124, baseType: !3963, size: 64, offset: 64)
!3963 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3957, file: !3958, line: 109, size: 64, elements: !3964)
!3964 = !{!3965, !3966}
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !3963, file: !3958, line: 110, baseType: !1003, size: 64)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3963, file: !3958, line: 112, baseType: !1003, size: 64)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3957, file: !3958, line: 144, baseType: !1043, size: 32, offset: 128)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !2122, file: !2123, line: 1174, baseType: !1042, size: 32, offset: 12160)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !2122, file: !2123, line: 1179, baseType: !1012, size: 64, offset: 12224)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !2122, file: !2123, line: 1182, baseType: !3971, size: 128, offset: 12288)
!3971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !2064, line: 76, size: 128, elements: !3972)
!3972 = !{!3973, !3978, !3979}
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3971, file: !2064, line: 85, baseType: !3974, size: 64)
!3974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !3975, line: 7, size: 64, elements: !3976)
!3975 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!3976 = !{!3977}
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !3974, file: !3975, line: 12, baseType: !2272, size: 64)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !3971, file: !2064, line: 88, baseType: !1333, size: 8, offset: 64)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !3971, file: !2064, line: 95, baseType: !1333, size: 8, offset: 72)
!3980 = !DIDerivedType(tag: DW_TAG_member, scope: !2122, file: !2123, line: 1184, baseType: !3981, size: 128, offset: 12416)
!3981 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2122, file: !2123, line: 1184, size: 128, elements: !3982)
!3982 = !{!3983, !3984}
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !3981, file: !2123, line: 1185, baseType: !2135, size: 32)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3981, file: !2123, line: 1186, baseType: !1216, size: 128, align: 64)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !2122, file: !2123, line: 1190, baseType: !3986, size: 64, offset: 12544)
!3986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3987, size: 64)
!3987 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !2123, line: 53, flags: DIFlagFwdDecl)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !2122, file: !2123, line: 1192, baseType: !3989, size: 128, offset: 12608)
!3989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !2064, line: 64, size: 128, elements: !3990)
!3990 = !{!3991, !3992, !3993}
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !3989, file: !2064, line: 65, baseType: !1615, size: 64)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3989, file: !2064, line: 67, baseType: !1043, size: 32, offset: 64)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3989, file: !2064, line: 68, baseType: !1043, size: 32, offset: 96)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !2122, file: !2123, line: 1206, baseType: !206, size: 32, offset: 12736)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !2122, file: !2123, line: 1207, baseType: !206, size: 32, offset: 12768)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !2122, file: !2123, line: 1209, baseType: !1012, size: 64, offset: 12800)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !2122, file: !2123, line: 1219, baseType: !1001, size: 64, offset: 12864)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !2122, file: !2123, line: 1220, baseType: !1001, size: 64, offset: 12928)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !2122, file: !2123, line: 1317, baseType: !206, size: 32, offset: 12992)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !2122, file: !2123, line: 1319, baseType: !2121, size: 64, offset: 13056)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !2122, file: !2123, line: 1322, baseType: !4002, size: 64, offset: 13120)
!4002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4003, size: 64)
!4003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !4004, line: 56, size: 512, elements: !4005)
!4004 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!4005 = !{!4006, !4007, !4008, !4009, !4010, !4011, !4012, !4013}
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4003, file: !4004, line: 57, baseType: !4002, size: 64)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4003, file: !4004, line: 58, baseType: !970, size: 64, offset: 64)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4003, file: !4004, line: 59, baseType: !1012, size: 64, offset: 128)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4003, file: !4004, line: 60, baseType: !1012, size: 64, offset: 192)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !4003, file: !4004, line: 61, baseType: !1715, size: 64, offset: 256)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !4003, file: !4004, line: 62, baseType: !7, size: 32, offset: 320)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !4003, file: !4004, line: 63, baseType: !1000, size: 64, offset: 384)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !4003, file: !4004, line: 64, baseType: !4014, size: 64, offset: 448)
!4014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4015, size: 64)
!4015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !2122, file: !2123, line: 1326, baseType: !2135, size: 32, offset: 13184)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !2122, file: !2123, line: 1342, baseType: !970, size: 64, offset: 13248)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !2122, file: !2123, line: 1343, baseType: !1003, size: 64, offset: 13312)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !2122, file: !2123, line: 1344, baseType: !1001, size: 64, offset: 13376)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !2122, file: !2123, line: 1345, baseType: !1003, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !2122, file: !2123, line: 1346, baseType: !1003, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !2122, file: !2123, line: 1347, baseType: !1003, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !2122, file: !2123, line: 1348, baseType: !1216, size: 128, align: 64, offset: 13504)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !2122, file: !2123, line: 1358, baseType: !4025, size: 34816, offset: 13824)
!4025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !4026, line: 485, size: 34816, elements: !4027)
!4026 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!4027 = !{!4028, !4046, !4047, !4048, !4049, !4050, !4051, !4052, !4053, !4057, !4058, !4059, !4060, !4061, !4062, !4065, !4066, !4067}
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !4025, file: !4026, line: 487, baseType: !4029, size: 192)
!4029 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4030, size: 192, elements: !1129)
!4030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !4031, line: 16, size: 64, elements: !4032)
!4031 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!4032 = !{!4033, !4034, !4035, !4036, !4037, !4038, !4039, !4040, !4041, !4042, !4043, !4044, !4045}
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !4030, file: !4031, line: 17, baseType: !1754, size: 16)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !4030, file: !4031, line: 18, baseType: !1754, size: 16, offset: 16)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !4030, file: !4031, line: 19, baseType: !1754, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4030, file: !4031, line: 19, baseType: !1754, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !4030, file: !4031, line: 19, baseType: !1754, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !4030, file: !4031, line: 19, baseType: !1754, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4030, file: !4031, line: 19, baseType: !1754, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !4030, file: !4031, line: 20, baseType: !1754, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !4030, file: !4031, line: 20, baseType: !1754, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !4030, file: !4031, line: 20, baseType: !1754, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4030, file: !4031, line: 20, baseType: !1754, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !4030, file: !4031, line: 20, baseType: !1754, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !4030, file: !4031, line: 20, baseType: !1754, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4025, file: !4026, line: 491, baseType: !1012, size: 64, offset: 192)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !4025, file: !4026, line: 495, baseType: !1066, size: 16, offset: 256)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !4025, file: !4026, line: 496, baseType: !1066, size: 16, offset: 272)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !4025, file: !4026, line: 497, baseType: !1066, size: 16, offset: 288)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !4025, file: !4026, line: 498, baseType: !1066, size: 16, offset: 304)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !4025, file: !4026, line: 502, baseType: !1012, size: 64, offset: 320)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !4025, file: !4026, line: 503, baseType: !1012, size: 64, offset: 384)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !4025, file: !4026, line: 514, baseType: !4054, size: 256, offset: 448)
!4054 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4055, size: 256, elements: !1017)
!4055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4056, size: 64)
!4056 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !4026, line: 483, flags: DIFlagFwdDecl)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !4025, file: !4026, line: 516, baseType: !1012, size: 64, offset: 704)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !4025, file: !4026, line: 518, baseType: !1012, size: 64, offset: 768)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !4025, file: !4026, line: 520, baseType: !1012, size: 64, offset: 832)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !4025, file: !4026, line: 521, baseType: !1012, size: 64, offset: 896)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !4025, file: !4026, line: 522, baseType: !1012, size: 64, offset: 960)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !4025, file: !4026, line: 528, baseType: !4063, size: 64, offset: 1024)
!4063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4064, size: 64)
!4064 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !4026, line: 10, flags: DIFlagFwdDecl)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !4025, file: !4026, line: 535, baseType: !1012, size: 64, offset: 1088)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !4025, file: !4026, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !4025, file: !4026, line: 540, baseType: !4068, size: 33280, offset: 1536)
!4068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !4069, line: 317, size: 33280, elements: !4070)
!4069 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!4070 = !{!4071, !4072, !4073}
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !4068, file: !4069, line: 330, baseType: !7, size: 32)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !4068, file: !4069, line: 337, baseType: !1012, size: 64, offset: 64)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4068, file: !4069, line: 348, baseType: !4074, size: 32768, offset: 512)
!4074 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !4069, line: 304, size: 32768, elements: !4075)
!4075 = !{!4076, !4091, !4128, !4178, !4191}
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !4074, file: !4069, line: 305, baseType: !4077, size: 896)
!4077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !4069, line: 12, size: 896, elements: !4078)
!4078 = !{!4079, !4080, !4081, !4082, !4083, !4084, !4085, !4086, !4090}
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4077, file: !4069, line: 13, baseType: !1042, size: 32)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4077, file: !4069, line: 14, baseType: !1042, size: 32, offset: 32)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4077, file: !4069, line: 15, baseType: !1042, size: 32, offset: 64)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4077, file: !4069, line: 16, baseType: !1042, size: 32, offset: 96)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4077, file: !4069, line: 17, baseType: !1042, size: 32, offset: 128)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4077, file: !4069, line: 18, baseType: !1042, size: 32, offset: 160)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4077, file: !4069, line: 19, baseType: !1042, size: 32, offset: 192)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4077, file: !4069, line: 22, baseType: !4087, size: 640, offset: 224)
!4087 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1042, size: 640, elements: !4088)
!4088 = !{!4089}
!4089 = !DISubrange(count: 20)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4077, file: !4069, line: 25, baseType: !1042, size: 32, offset: 864)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !4074, file: !4069, line: 306, baseType: !4092, size: 4096, align: 128)
!4092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !4069, line: 34, size: 4096, align: 128, elements: !4093)
!4093 = !{!4094, !4095, !4096, !4097, !4098, !4113, !4114, !4115, !4117, !4119, !4123}
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4092, file: !4069, line: 35, baseType: !1754, size: 16)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4092, file: !4069, line: 36, baseType: !1754, size: 16, offset: 16)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4092, file: !4069, line: 37, baseType: !1754, size: 16, offset: 32)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !4092, file: !4069, line: 38, baseType: !1754, size: 16, offset: 48)
!4098 = !DIDerivedType(tag: DW_TAG_member, scope: !4092, file: !4069, line: 39, baseType: !4099, size: 128, offset: 64)
!4099 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4092, file: !4069, line: 39, size: 128, elements: !4100)
!4100 = !{!4101, !4106}
!4101 = !DIDerivedType(tag: DW_TAG_member, scope: !4099, file: !4069, line: 40, baseType: !4102, size: 128)
!4102 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4099, file: !4069, line: 40, size: 128, elements: !4103)
!4103 = !{!4104, !4105}
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !4102, file: !4069, line: 41, baseType: !1001, size: 64)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !4102, file: !4069, line: 42, baseType: !1001, size: 64, offset: 64)
!4106 = !DIDerivedType(tag: DW_TAG_member, scope: !4099, file: !4069, line: 44, baseType: !4107, size: 128)
!4107 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4099, file: !4069, line: 44, size: 128, elements: !4108)
!4108 = !{!4109, !4110, !4111, !4112}
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4107, file: !4069, line: 45, baseType: !1042, size: 32)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4107, file: !4069, line: 46, baseType: !1042, size: 32, offset: 32)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4107, file: !4069, line: 47, baseType: !1042, size: 32, offset: 64)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4107, file: !4069, line: 48, baseType: !1042, size: 32, offset: 96)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !4092, file: !4069, line: 51, baseType: !1042, size: 32, offset: 192)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !4092, file: !4069, line: 52, baseType: !1042, size: 32, offset: 224)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4092, file: !4069, line: 55, baseType: !4116, size: 1024, offset: 256)
!4116 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1042, size: 1024, elements: !2838)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !4092, file: !4069, line: 58, baseType: !4118, size: 2048, offset: 1280)
!4118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1042, size: 2048, elements: !1133)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !4092, file: !4069, line: 60, baseType: !4120, size: 384, offset: 3328)
!4120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1042, size: 384, elements: !4121)
!4121 = !{!4122}
!4122 = !DISubrange(count: 12)
!4123 = !DIDerivedType(tag: DW_TAG_member, scope: !4092, file: !4069, line: 62, baseType: !4124, size: 384, offset: 3712)
!4124 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4092, file: !4069, line: 62, size: 384, elements: !4125)
!4125 = !{!4126, !4127}
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !4124, file: !4069, line: 63, baseType: !4120, size: 384)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !4124, file: !4069, line: 64, baseType: !4120, size: 384)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !4074, file: !4069, line: 307, baseType: !4129, size: 1088)
!4129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !4069, line: 79, size: 1088, elements: !4130)
!4130 = !{!4131, !4132, !4133, !4134, !4135, !4136, !4137, !4138, !4139, !4140, !4141, !4142, !4143, !4144, !4145, !4177}
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4129, file: !4069, line: 80, baseType: !1042, size: 32)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4129, file: !4069, line: 81, baseType: !1042, size: 32, offset: 32)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4129, file: !4069, line: 82, baseType: !1042, size: 32, offset: 64)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4129, file: !4069, line: 83, baseType: !1042, size: 32, offset: 96)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4129, file: !4069, line: 84, baseType: !1042, size: 32, offset: 128)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4129, file: !4069, line: 85, baseType: !1042, size: 32, offset: 160)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4129, file: !4069, line: 86, baseType: !1042, size: 32, offset: 192)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4129, file: !4069, line: 88, baseType: !4087, size: 640, offset: 224)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !4129, file: !4069, line: 89, baseType: !2257, size: 8, offset: 864)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !4129, file: !4069, line: 90, baseType: !2257, size: 8, offset: 872)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !4129, file: !4069, line: 91, baseType: !2257, size: 8, offset: 880)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !4129, file: !4069, line: 92, baseType: !2257, size: 8, offset: 888)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !4129, file: !4069, line: 93, baseType: !2257, size: 8, offset: 896)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !4129, file: !4069, line: 94, baseType: !2257, size: 8, offset: 904)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4129, file: !4069, line: 95, baseType: !4146, size: 64, offset: 960)
!4146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4147, size: 64)
!4147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !4148, line: 11, size: 128, elements: !4149)
!4148 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!4149 = !{!4150, !4151}
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !4147, file: !4148, line: 12, baseType: !933, size: 64)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4147, file: !4148, line: 13, baseType: !4152, size: 64, offset: 64)
!4152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4153, size: 64)
!4153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !4154, line: 56, size: 1344, elements: !4155)
!4154 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!4155 = !{!4156, !4157, !4158, !4159, !4160, !4161, !4162, !4163, !4164, !4165, !4166, !4167, !4168, !4169, !4170, !4171, !4172, !4173, !4174, !4175, !4176}
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !4153, file: !4154, line: 61, baseType: !1012, size: 64)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !4153, file: !4154, line: 62, baseType: !1012, size: 64, offset: 64)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !4153, file: !4154, line: 63, baseType: !1012, size: 64, offset: 128)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !4153, file: !4154, line: 64, baseType: !1012, size: 64, offset: 192)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !4153, file: !4154, line: 65, baseType: !1012, size: 64, offset: 256)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !4153, file: !4154, line: 66, baseType: !1012, size: 64, offset: 320)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !4153, file: !4154, line: 68, baseType: !1012, size: 64, offset: 384)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !4153, file: !4154, line: 69, baseType: !1012, size: 64, offset: 448)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !4153, file: !4154, line: 70, baseType: !1012, size: 64, offset: 512)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !4153, file: !4154, line: 71, baseType: !1012, size: 64, offset: 576)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !4153, file: !4154, line: 72, baseType: !1012, size: 64, offset: 640)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !4153, file: !4154, line: 73, baseType: !1012, size: 64, offset: 704)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !4153, file: !4154, line: 74, baseType: !1012, size: 64, offset: 768)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !4153, file: !4154, line: 75, baseType: !1012, size: 64, offset: 832)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !4153, file: !4154, line: 76, baseType: !1012, size: 64, offset: 896)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !4153, file: !4154, line: 81, baseType: !1012, size: 64, offset: 960)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !4153, file: !4154, line: 83, baseType: !1012, size: 64, offset: 1024)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !4153, file: !4154, line: 84, baseType: !1012, size: 64, offset: 1088)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4153, file: !4154, line: 85, baseType: !1012, size: 64, offset: 1152)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4153, file: !4154, line: 86, baseType: !1012, size: 64, offset: 1216)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !4153, file: !4154, line: 87, baseType: !1012, size: 64, offset: 1280)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !4129, file: !4069, line: 96, baseType: !1042, size: 32, offset: 1024)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !4074, file: !4069, line: 308, baseType: !4179, size: 4608, align: 512)
!4179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !4069, line: 289, size: 4608, align: 512, elements: !4180)
!4180 = !{!4181, !4182, !4189}
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !4179, file: !4069, line: 290, baseType: !4092, size: 4096, align: 128)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !4179, file: !4069, line: 291, baseType: !4183, size: 512, offset: 4096)
!4183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !4069, line: 268, size: 512, elements: !4184)
!4184 = !{!4185, !4186, !4187}
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !4183, file: !4069, line: 269, baseType: !1001, size: 64)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !4183, file: !4069, line: 270, baseType: !1001, size: 64, offset: 64)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4183, file: !4069, line: 271, baseType: !4188, size: 384, offset: 128)
!4188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1001, size: 384, elements: !2528)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !4179, file: !4069, line: 292, baseType: !4190, offset: 4608)
!4190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2257, elements: !2626)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !4074, file: !4069, line: 309, baseType: !4192, size: 32768)
!4192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2257, size: 32768, elements: !4193)
!4193 = !{!4194}
!4194 = !DISubrange(count: 4096)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2118, file: !1617, line: 378, baseType: !4196, size: 64, offset: 64)
!4196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2118, size: 64)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !2114, file: !1617, line: 384, baseType: !2405, size: 192, offset: 192)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1891, file: !1617, line: 500, baseType: !1087, offset: 6656)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1891, file: !1617, line: 501, baseType: !4200, size: 64, offset: 6656)
!4200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4201, size: 64)
!4201 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !1617, line: 387, flags: DIFlagFwdDecl)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1891, file: !1617, line: 516, baseType: !2616, size: 64, offset: 6720)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1891, file: !1617, line: 519, baseType: !1203, size: 64, offset: 6784)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1891, file: !1617, line: 521, baseType: !4205, size: 64, offset: 6848)
!4205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4206, size: 64)
!4206 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !1617, line: 521, flags: DIFlagFwdDecl)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1891, file: !1617, line: 545, baseType: !1642, size: 32, offset: 6912)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1891, file: !1617, line: 548, baseType: !1333, size: 8, offset: 6944)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1891, file: !1617, line: 550, baseType: !4210, offset: 6952)
!4210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !4211, line: 142, elements: !1101)
!4211 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1891, file: !1617, line: 554, baseType: !2897, size: 256, offset: 6976)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1891, file: !1617, line: 557, baseType: !1042, size: 32, offset: 7232)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1888, file: !1617, line: 565, baseType: !4215, offset: 7296)
!4215 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1012, elements: !2913)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1884, file: !1617, line: 151, baseType: !1642, size: 32)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1876, file: !1617, line: 156, baseType: !1087, offset: 256)
!4218 = !DIDerivedType(tag: DW_TAG_member, scope: !1621, file: !1617, line: 159, baseType: !4219, size: 128)
!4219 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1621, file: !1617, line: 159, size: 128, elements: !4220)
!4220 = !{!4221, !4265}
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !4219, file: !1617, line: 161, baseType: !4222, size: 64)
!4222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4223, size: 64)
!4223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !123, line: 110, size: 1152, elements: !4224)
!4224 = !{!4225, !4235, !4236, !4237, !4238, !4239, !4240, !4252, !4253, !4254}
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !4223, file: !123, line: 111, baseType: !4226, size: 384)
!4226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !123, line: 19, size: 384, elements: !4227)
!4227 = !{!4228, !4230, !4231, !4232, !4233, !4234}
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !4226, file: !123, line: 20, baseType: !4229, size: 64)
!4229 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1012)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !4226, file: !123, line: 21, baseType: !4229, size: 64, offset: 64)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !4226, file: !123, line: 22, baseType: !4229, size: 64, offset: 128)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4226, file: !123, line: 23, baseType: !1012, size: 64, offset: 192)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !4226, file: !123, line: 24, baseType: !1012, size: 64, offset: 256)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4226, file: !123, line: 25, baseType: !1012, size: 64, offset: 320)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4223, file: !123, line: 112, baseType: !2873, size: 64, offset: 384)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !4223, file: !123, line: 113, baseType: !2859, size: 128, offset: 448)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !4223, file: !123, line: 114, baseType: !2405, size: 192, offset: 576)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4223, file: !123, line: 115, baseType: !122, size: 32, offset: 768)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4223, file: !123, line: 116, baseType: !7, size: 32, offset: 800)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4223, file: !123, line: 117, baseType: !4241, size: 64, offset: 832)
!4241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4242, size: 64)
!4242 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4243)
!4243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !123, line: 67, size: 256, elements: !4244)
!4244 = !{!4245, !4246, !4250, !4251}
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !4243, file: !123, line: 73, baseType: !1735, size: 64)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !4243, file: !123, line: 78, baseType: !4247, size: 64, offset: 64)
!4247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4248, size: 64)
!4248 = !DISubroutineType(types: !4249)
!4249 = !{null, !4222}
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !4243, file: !123, line: 83, baseType: !4247, size: 64, offset: 128)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !4243, file: !123, line: 89, baseType: !1940, size: 64, offset: 192)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4223, file: !123, line: 118, baseType: !970, size: 64, offset: 896)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !4223, file: !123, line: 119, baseType: !206, size: 32, offset: 960)
!4254 = !DIDerivedType(tag: DW_TAG_member, scope: !4223, file: !123, line: 120, baseType: !4255, size: 128, offset: 1024)
!4255 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4223, file: !123, line: 120, size: 128, elements: !4256)
!4256 = !{!4257, !4263}
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !4255, file: !123, line: 121, baseType: !4258, size: 128)
!4258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !4259, line: 6, size: 128, elements: !4260)
!4259 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!4260 = !{!4261, !4262}
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4258, file: !4259, line: 7, baseType: !1001, size: 64)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4258, file: !4259, line: 8, baseType: !1001, size: 64, offset: 64)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !4255, file: !123, line: 122, baseType: !4264)
!4264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4258, elements: !2626)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !4219, file: !1617, line: 162, baseType: !970, size: 64, offset: 64)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1621, file: !1617, line: 176, baseType: !1216, size: 128, align: 64)
!4267 = !DIDerivedType(tag: DW_TAG_member, scope: !1616, file: !1617, line: 179, baseType: !4268, size: 32, offset: 384)
!4268 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1616, file: !1617, line: 179, size: 32, elements: !4269)
!4269 = !{!4270, !4271, !4272, !4273}
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !4268, file: !1617, line: 184, baseType: !1642, size: 32)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !4268, file: !1617, line: 192, baseType: !7, size: 32)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4268, file: !1617, line: 194, baseType: !7, size: 32)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !4268, file: !1617, line: 195, baseType: !206, size: 32)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !1616, file: !1617, line: 199, baseType: !1642, size: 32, offset: 416)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !1502, file: !12, line: 1964, baseType: !4276, size: 64, offset: 1344)
!4276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4277, size: 64)
!4277 = !DISubroutineType(types: !4278)
!4278 = !{!933, !1442, !4279}
!4279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4280, size: 64)
!4280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !4281, line: 12, size: 256, elements: !4282)
!4281 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!4282 = !{!4283, !4284, !4285, !4286, !4287}
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !4280, file: !4281, line: 13, baseType: !1638, size: 32)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !4280, file: !4281, line: 16, baseType: !206, size: 32, offset: 32)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !4280, file: !4281, line: 23, baseType: !1012, size: 64, offset: 64)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !4280, file: !4281, line: 30, baseType: !1012, size: 64, offset: 128)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !4280, file: !4281, line: 33, baseType: !4288, size: 64, offset: 192)
!4288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4289, size: 64)
!4289 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !1617, line: 27, flags: DIFlagFwdDecl)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !1502, file: !12, line: 1966, baseType: !4276, size: 64, offset: 1408)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !1443, file: !12, line: 1424, baseType: !4292, size: 64, offset: 448)
!4292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4293, size: 64)
!4293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4294)
!4294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !29, line: 322, size: 704, elements: !4295)
!4295 = !{!4296, !4342, !4346, !4350, !4351, !4352, !4353, !4354, !4359, !4364, !4368}
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !4294, file: !29, line: 323, baseType: !4297, size: 64)
!4297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4298, size: 64)
!4298 = !DISubroutineType(types: !4299)
!4299 = !{!206, !4300}
!4300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4301, size: 64)
!4301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !29, line: 294, size: 1600, elements: !4302)
!4302 = !{!4303, !4304, !4305, !4306, !4307, !4308, !4309, !4310, !4311, !4327, !4328, !4329}
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !4301, file: !29, line: 295, baseType: !1484, size: 128)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !4301, file: !29, line: 296, baseType: !976, size: 128, offset: 128)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !4301, file: !29, line: 297, baseType: !976, size: 128, offset: 256)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !4301, file: !29, line: 298, baseType: !976, size: 128, offset: 384)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !4301, file: !29, line: 299, baseType: !1568, size: 192, offset: 512)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !4301, file: !29, line: 300, baseType: !1087, offset: 704)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !4301, file: !29, line: 301, baseType: !1642, size: 32, offset: 704)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !4301, file: !29, line: 302, baseType: !1442, size: 64, offset: 768)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !4301, file: !29, line: 303, baseType: !4312, size: 64, offset: 832)
!4312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !29, line: 68, size: 64, elements: !4313)
!4313 = !{!4314, !4326}
!4314 = !DIDerivedType(tag: DW_TAG_member, scope: !4312, file: !29, line: 69, baseType: !4315, size: 32)
!4315 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4312, file: !29, line: 69, size: 32, elements: !4316)
!4316 = !{!4317, !4318, !4319}
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4315, file: !29, line: 70, baseType: !1278, size: 32)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !4315, file: !29, line: 71, baseType: !1286, size: 32)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !4315, file: !29, line: 72, baseType: !4320, size: 32)
!4320 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !4321, line: 24, baseType: !4322)
!4321 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!4322 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4321, line: 22, size: 32, elements: !4323)
!4323 = !{!4324}
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4322, file: !4321, line: 23, baseType: !4325, size: 32)
!4325 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !4321, line: 20, baseType: !1284)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4312, file: !29, line: 74, baseType: !28, size: 32, offset: 32)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !4301, file: !29, line: 304, baseType: !1374, size: 64, offset: 896)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !4301, file: !29, line: 305, baseType: !1012, size: 64, offset: 960)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !4301, file: !29, line: 306, baseType: !4330, size: 576, offset: 1024)
!4330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !29, line: 205, size: 576, elements: !4331)
!4331 = !{!4332, !4334, !4335, !4336, !4337, !4338, !4339, !4340, !4341}
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !4330, file: !29, line: 206, baseType: !4333, size: 64)
!4333 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !29, line: 66, baseType: !1376)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !4330, file: !29, line: 207, baseType: !4333, size: 64, offset: 64)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !4330, file: !29, line: 208, baseType: !4333, size: 64, offset: 128)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !4330, file: !29, line: 209, baseType: !4333, size: 64, offset: 192)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !4330, file: !29, line: 210, baseType: !4333, size: 64, offset: 256)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !4330, file: !29, line: 211, baseType: !4333, size: 64, offset: 320)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !4330, file: !29, line: 212, baseType: !4333, size: 64, offset: 384)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !4330, file: !29, line: 213, baseType: !1382, size: 64, offset: 448)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !4330, file: !29, line: 214, baseType: !1382, size: 64, offset: 512)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !4294, file: !29, line: 324, baseType: !4343, size: 64, offset: 64)
!4343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4344, size: 64)
!4344 = !DISubroutineType(types: !4345)
!4345 = !{!4300, !1442, !206}
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !4294, file: !29, line: 325, baseType: !4347, size: 64, offset: 128)
!4347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4348, size: 64)
!4348 = !DISubroutineType(types: !4349)
!4349 = !{null, !4300}
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !4294, file: !29, line: 326, baseType: !4297, size: 64, offset: 192)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !4294, file: !29, line: 327, baseType: !4297, size: 64, offset: 256)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !4294, file: !29, line: 328, baseType: !4297, size: 64, offset: 320)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !4294, file: !29, line: 329, baseType: !1530, size: 64, offset: 384)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !4294, file: !29, line: 332, baseType: !4355, size: 64, offset: 448)
!4355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4356, size: 64)
!4356 = !DISubroutineType(types: !4357)
!4357 = !{!4358, !1272}
!4358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4333, size: 64)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !4294, file: !29, line: 333, baseType: !4360, size: 64, offset: 512)
!4360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4361, size: 64)
!4361 = !DISubroutineType(types: !4362)
!4362 = !{!206, !1272, !4363}
!4363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4320, size: 64)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !4294, file: !29, line: 335, baseType: !4365, size: 64, offset: 576)
!4365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4366, size: 64)
!4366 = !DISubroutineType(types: !4367)
!4367 = !{!206, !1272, !4358}
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4294, file: !29, line: 337, baseType: !4369, size: 64, offset: 640)
!4369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4370, size: 64)
!4370 = !DISubroutineType(types: !4371)
!4371 = !{!206, !1442, !4372}
!4372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4312, size: 64)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !1443, file: !12, line: 1425, baseType: !4374, size: 64, offset: 512)
!4374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4375, size: 64)
!4375 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4376)
!4376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !29, line: 428, size: 704, elements: !4377)
!4377 = !{!4378, !4382, !4383, !4387, !4388, !4389, !4404, !4427, !4431, !4432, !4455}
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !4376, file: !29, line: 429, baseType: !4379, size: 64)
!4379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4380, size: 64)
!4380 = !DISubroutineType(types: !4381)
!4381 = !{!206, !1442, !206, !206, !1392}
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !4376, file: !29, line: 430, baseType: !1530, size: 64, offset: 64)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !4376, file: !29, line: 431, baseType: !4384, size: 64, offset: 128)
!4384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4385, size: 64)
!4385 = !DISubroutineType(types: !4386)
!4386 = !{!206, !1442, !7}
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !4376, file: !29, line: 432, baseType: !4384, size: 64, offset: 192)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !4376, file: !29, line: 433, baseType: !1530, size: 64, offset: 256)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !4376, file: !29, line: 434, baseType: !4390, size: 64, offset: 320)
!4390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4391, size: 64)
!4391 = !DISubroutineType(types: !4392)
!4392 = !{!206, !1442, !206, !4393}
!4393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4394, size: 64)
!4394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !29, line: 415, size: 256, elements: !4395)
!4395 = !{!4396, !4397, !4398, !4399, !4400, !4401, !4402, !4403}
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !4394, file: !29, line: 416, baseType: !206, size: 32)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !4394, file: !29, line: 417, baseType: !7, size: 32, offset: 32)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !4394, file: !29, line: 418, baseType: !7, size: 32, offset: 64)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !4394, file: !29, line: 420, baseType: !7, size: 32, offset: 96)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !4394, file: !29, line: 421, baseType: !7, size: 32, offset: 128)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !4394, file: !29, line: 422, baseType: !7, size: 32, offset: 160)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !4394, file: !29, line: 423, baseType: !7, size: 32, offset: 192)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !4394, file: !29, line: 424, baseType: !7, size: 32, offset: 224)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !4376, file: !29, line: 435, baseType: !4405, size: 64, offset: 384)
!4405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4406, size: 64)
!4406 = !DISubroutineType(types: !4407)
!4407 = !{!206, !1442, !4312, !4408}
!4408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4409, size: 64)
!4409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !29, line: 343, size: 960, elements: !4410)
!4410 = !{!4411, !4412, !4413, !4414, !4415, !4416, !4417, !4418, !4419, !4420, !4421, !4422, !4423, !4424, !4425, !4426}
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !4409, file: !29, line: 344, baseType: !206, size: 32)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !4409, file: !29, line: 345, baseType: !1001, size: 64, offset: 64)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !4409, file: !29, line: 346, baseType: !1001, size: 64, offset: 128)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !4409, file: !29, line: 347, baseType: !1001, size: 64, offset: 192)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !4409, file: !29, line: 348, baseType: !1001, size: 64, offset: 256)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !4409, file: !29, line: 349, baseType: !1001, size: 64, offset: 320)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !4409, file: !29, line: 350, baseType: !1001, size: 64, offset: 384)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !4409, file: !29, line: 351, baseType: !1578, size: 64, offset: 448)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !4409, file: !29, line: 353, baseType: !1578, size: 64, offset: 512)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !4409, file: !29, line: 354, baseType: !206, size: 32, offset: 576)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !4409, file: !29, line: 355, baseType: !206, size: 32, offset: 608)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !4409, file: !29, line: 356, baseType: !1001, size: 64, offset: 640)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !4409, file: !29, line: 357, baseType: !1001, size: 64, offset: 704)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !4409, file: !29, line: 358, baseType: !1001, size: 64, offset: 768)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !4409, file: !29, line: 359, baseType: !1578, size: 64, offset: 832)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !4409, file: !29, line: 360, baseType: !206, size: 32, offset: 896)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !4376, file: !29, line: 436, baseType: !4428, size: 64, offset: 448)
!4428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4429, size: 64)
!4429 = !DISubroutineType(types: !4430)
!4430 = !{!206, !1442, !4372, !4408}
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !4376, file: !29, line: 438, baseType: !4405, size: 64, offset: 512)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !4376, file: !29, line: 439, baseType: !4433, size: 64, offset: 576)
!4433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4434, size: 64)
!4434 = !DISubroutineType(types: !4435)
!4435 = !{!206, !1442, !4436}
!4436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4437, size: 64)
!4437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !29, line: 409, size: 1408, elements: !4438)
!4438 = !{!4439, !4440}
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !4437, file: !29, line: 410, baseType: !7, size: 32)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !4437, file: !29, line: 411, baseType: !4441, size: 1344, offset: 64)
!4441 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4442, size: 1344, elements: !1129)
!4442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !29, line: 395, size: 448, elements: !4443)
!4443 = !{!4444, !4445, !4446, !4447, !4448, !4449, !4450, !4451, !4452, !4454}
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4442, file: !29, line: 396, baseType: !7, size: 32)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !4442, file: !29, line: 397, baseType: !7, size: 32, offset: 32)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !4442, file: !29, line: 399, baseType: !7, size: 32, offset: 64)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !4442, file: !29, line: 400, baseType: !7, size: 32, offset: 96)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !4442, file: !29, line: 401, baseType: !7, size: 32, offset: 128)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !4442, file: !29, line: 402, baseType: !7, size: 32, offset: 160)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !4442, file: !29, line: 403, baseType: !7, size: 32, offset: 192)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !4442, file: !29, line: 404, baseType: !1005, size: 64, offset: 256)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !4442, file: !29, line: 405, baseType: !4453, size: 64, offset: 320)
!4453 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !977, line: 126, baseType: !1001)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !4442, file: !29, line: 406, baseType: !4453, size: 64, offset: 384)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !4376, file: !29, line: 440, baseType: !4384, size: 64, offset: 640)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !1443, file: !12, line: 1426, baseType: !4457, size: 64, offset: 576)
!4457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4458, size: 64)
!4458 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4459)
!4459 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !12, line: 49, flags: DIFlagFwdDecl)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !1443, file: !12, line: 1427, baseType: !1012, size: 64, offset: 640)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !1443, file: !12, line: 1428, baseType: !1012, size: 64, offset: 704)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !1443, file: !12, line: 1429, baseType: !1012, size: 64, offset: 768)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !1443, file: !12, line: 1430, baseType: !1233, size: 64, offset: 832)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !1443, file: !12, line: 1431, baseType: !1662, size: 256, offset: 896)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !1443, file: !12, line: 1432, baseType: !206, size: 32, offset: 1152)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !1443, file: !12, line: 1433, baseType: !1642, size: 32, offset: 1184)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !1443, file: !12, line: 1437, baseType: !4468, size: 64, offset: 1216)
!4468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4469, size: 64)
!4469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4470, size: 64)
!4470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4471)
!4471 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !12, line: 1437, flags: DIFlagFwdDecl)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !1443, file: !12, line: 1449, baseType: !4473, size: 64, offset: 1280)
!4473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !1249, line: 34, size: 64, elements: !4474)
!4474 = !{!4475}
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !4473, file: !1249, line: 35, baseType: !1252, size: 64)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !1443, file: !12, line: 1450, baseType: !976, size: 128, offset: 1344)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !1443, file: !12, line: 1451, baseType: !2930, size: 64, offset: 1472)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !1443, file: !12, line: 1452, baseType: !2950, size: 64, offset: 1536)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !1443, file: !12, line: 1453, baseType: !4480, size: 64, offset: 1600)
!4480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4481, size: 64)
!4481 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !12, line: 1453, flags: DIFlagFwdDecl)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !1443, file: !12, line: 1454, baseType: !1484, size: 128, offset: 1664)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !1443, file: !12, line: 1455, baseType: !7, size: 32, offset: 1792)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !1443, file: !12, line: 1456, baseType: !4485, size: 2432, offset: 1856)
!4485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !29, line: 518, size: 2432, elements: !4486)
!4486 = !{!4487, !4488, !4489, !4491, !4523}
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4485, file: !29, line: 519, baseType: !7, size: 32)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !4485, file: !29, line: 520, baseType: !1662, size: 256, offset: 64)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !4485, file: !29, line: 521, baseType: !4490, size: 192, offset: 320)
!4490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1272, size: 192, elements: !1129)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4485, file: !29, line: 522, baseType: !4492, size: 1728, offset: 512)
!4492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4493, size: 1728, elements: !1129)
!4493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !29, line: 222, size: 576, elements: !4494)
!4494 = !{!4495, !4515, !4516, !4517, !4518, !4519, !4520, !4521, !4522}
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !4493, file: !29, line: 223, baseType: !4496, size: 64)
!4496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4497, size: 64)
!4497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !29, line: 443, size: 256, elements: !4498)
!4498 = !{!4499, !4500, !4513, !4514}
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !4497, file: !29, line: 444, baseType: !206, size: 32)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !4497, file: !29, line: 445, baseType: !4501, size: 64, offset: 64)
!4501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4502, size: 64)
!4502 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4503)
!4503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !29, line: 310, size: 512, elements: !4504)
!4504 = !{!4505, !4506, !4507, !4508, !4509, !4510, !4511, !4512}
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !4503, file: !29, line: 311, baseType: !1530, size: 64)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !4503, file: !29, line: 312, baseType: !1530, size: 64, offset: 64)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !4503, file: !29, line: 313, baseType: !1530, size: 64, offset: 128)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !4503, file: !29, line: 314, baseType: !1530, size: 64, offset: 192)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !4503, file: !29, line: 315, baseType: !4297, size: 64, offset: 256)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !4503, file: !29, line: 316, baseType: !4297, size: 64, offset: 320)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !4503, file: !29, line: 317, baseType: !4297, size: 64, offset: 384)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4503, file: !29, line: 318, baseType: !4369, size: 64, offset: 448)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !4497, file: !29, line: 446, baseType: !1475, size: 64, offset: 128)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !4497, file: !29, line: 447, baseType: !4496, size: 64, offset: 192)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !4493, file: !29, line: 224, baseType: !206, size: 32, offset: 64)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !4493, file: !29, line: 226, baseType: !976, size: 128, offset: 128)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !4493, file: !29, line: 227, baseType: !1012, size: 64, offset: 256)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !4493, file: !29, line: 228, baseType: !7, size: 32, offset: 320)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !4493, file: !29, line: 229, baseType: !7, size: 32, offset: 352)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !4493, file: !29, line: 230, baseType: !4333, size: 64, offset: 384)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !4493, file: !29, line: 231, baseType: !4333, size: 64, offset: 448)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !4493, file: !29, line: 232, baseType: !970, size: 64, offset: 512)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4485, file: !29, line: 523, baseType: !4524, size: 192, offset: 2240)
!4524 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4501, size: 192, elements: !1129)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !1443, file: !12, line: 1458, baseType: !4526, size: 2112, offset: 4288)
!4526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !12, line: 1410, size: 2112, elements: !4527)
!4527 = !{!4528, !4529, !4530}
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !4526, file: !12, line: 1411, baseType: !206, size: 32)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !4526, file: !12, line: 1412, baseType: !2385, size: 128, offset: 64)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !4526, file: !12, line: 1413, baseType: !4531, size: 1920, offset: 192)
!4531 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4532, size: 1920, elements: !1129)
!4532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !4533, line: 12, size: 640, elements: !4534)
!4533 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!4534 = !{!4535, !4543, !4544, !4549, !4550}
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !4532, file: !4533, line: 13, baseType: !4536, size: 320)
!4536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !4537, line: 17, size: 320, elements: !4538)
!4537 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!4538 = !{!4539, !4540, !4541, !4542}
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !4536, file: !4537, line: 18, baseType: !206, size: 32)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !4536, file: !4537, line: 19, baseType: !206, size: 32, offset: 32)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !4536, file: !4537, line: 20, baseType: !2385, size: 128, offset: 64)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !4536, file: !4537, line: 22, baseType: !1216, size: 128, align: 64, offset: 192)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !4532, file: !4533, line: 14, baseType: !3505, size: 64, offset: 320)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !4532, file: !4533, line: 15, baseType: !4545, size: 64, offset: 384)
!4545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !4546, line: 16, size: 64, elements: !4547)
!4546 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!4547 = !{!4548}
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !4545, file: !4546, line: 17, baseType: !2121, size: 64)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !4532, file: !4533, line: 16, baseType: !2385, size: 128, offset: 448)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !4532, file: !4533, line: 17, baseType: !1642, size: 32, offset: 576)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !1443, file: !12, line: 1465, baseType: !970, size: 64, offset: 6400)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !1443, file: !12, line: 1468, baseType: !1042, size: 32, offset: 6464)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !1443, file: !12, line: 1470, baseType: !1382, size: 64, offset: 6528)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !1443, file: !12, line: 1471, baseType: !1382, size: 64, offset: 6592)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !1443, file: !12, line: 1473, baseType: !1043, size: 32, offset: 6656)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !1443, file: !12, line: 1474, baseType: !4557, size: 64, offset: 6720)
!4557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4558, size: 64)
!4558 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !12, line: 603, flags: DIFlagFwdDecl)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !1443, file: !12, line: 1477, baseType: !2837, size: 256, offset: 6784)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !1443, file: !12, line: 1478, baseType: !4561, size: 128, offset: 7040)
!4561 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !4562, line: 18, baseType: !4563)
!4562 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!4563 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4562, line: 16, size: 128, elements: !4564)
!4564 = !{!4565}
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !4563, file: !4562, line: 17, baseType: !4566, size: 128)
!4566 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2258, size: 128, elements: !2638)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !1443, file: !12, line: 1480, baseType: !7, size: 32, offset: 7168)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !1443, file: !12, line: 1481, baseType: !3033, size: 32, offset: 7200)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !1443, file: !12, line: 1487, baseType: !1568, size: 192, offset: 7232)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !1443, file: !12, line: 1493, baseType: !1008, size: 64, offset: 7424)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !1443, file: !12, line: 1495, baseType: !4572, size: 64, offset: 7488)
!4572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4573, size: 64)
!4573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4574)
!4574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !1231, line: 135, size: 1024, align: 512, elements: !4575)
!4575 = !{!4576, !4580, !4581, !4588, !4594, !4598, !4602, !4606, !4607, !4611, !4615, !4620, !4624}
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !4574, file: !1231, line: 136, baseType: !4577, size: 64)
!4577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4578, size: 64)
!4578 = !DISubroutineType(types: !4579)
!4579 = !{!206, !1233, !7}
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !4574, file: !1231, line: 137, baseType: !4577, size: 64, offset: 64)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !4574, file: !1231, line: 138, baseType: !4582, size: 64, offset: 128)
!4582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4583, size: 64)
!4583 = !DISubroutineType(types: !4584)
!4584 = !{!206, !4585, !4587}
!4585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4586, size: 64)
!4586 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1234)
!4587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 64)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !4574, file: !1231, line: 139, baseType: !4589, size: 64, offset: 192)
!4589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4590, size: 64)
!4590 = !DISubroutineType(types: !4591)
!4591 = !{!206, !4585, !7, !1008, !4592}
!4592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4593, size: 64)
!4593 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1257)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !4574, file: !1231, line: 141, baseType: !4595, size: 64, offset: 256)
!4595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4596, size: 64)
!4596 = !DISubroutineType(types: !4597)
!4597 = !{!206, !4585}
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !4574, file: !1231, line: 142, baseType: !4599, size: 64, offset: 320)
!4599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4600, size: 64)
!4600 = !DISubroutineType(types: !4601)
!4601 = !{!206, !1233}
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !4574, file: !1231, line: 143, baseType: !4603, size: 64, offset: 384)
!4603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4604, size: 64)
!4604 = !DISubroutineType(types: !4605)
!4605 = !{null, !1233}
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !4574, file: !1231, line: 144, baseType: !4603, size: 64, offset: 448)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !4574, file: !1231, line: 145, baseType: !4608, size: 64, offset: 512)
!4608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4609, size: 64)
!4609 = !DISubroutineType(types: !4610)
!4610 = !{null, !1233, !1272}
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !4574, file: !1231, line: 146, baseType: !4612, size: 64, offset: 576)
!4612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4613, size: 64)
!4613 = !DISubroutineType(types: !4614)
!4614 = !{!1128, !1233, !1128, !206}
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !4574, file: !1231, line: 147, baseType: !4616, size: 64, offset: 640)
!4616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4617, size: 64)
!4617 = !DISubroutineType(types: !4618)
!4618 = !{!1229, !4619}
!4619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 64)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !4574, file: !1231, line: 148, baseType: !4621, size: 64, offset: 704)
!4621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4622, size: 64)
!4622 = !DISubroutineType(types: !4623)
!4623 = !{!206, !1392, !1333}
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !4574, file: !1231, line: 149, baseType: !4625, size: 64, offset: 768)
!4625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4626, size: 64)
!4626 = !DISubroutineType(types: !4627)
!4627 = !{!1233, !1233, !4628}
!4628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4629, size: 64)
!4629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1273)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !1443, file: !12, line: 1500, baseType: !206, size: 32, offset: 7552)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !1443, file: !12, line: 1502, baseType: !4632, size: 448, offset: 7616)
!4632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !4281, line: 60, size: 448, elements: !4633)
!4633 = !{!4634, !4639, !4640, !4641, !4642, !4643, !4644}
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !4632, file: !4281, line: 61, baseType: !4635, size: 64)
!4635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4636, size: 64)
!4636 = !DISubroutineType(types: !4637)
!4637 = !{!1012, !4638, !4279}
!4638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4632, size: 64)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !4632, file: !4281, line: 63, baseType: !4635, size: 64, offset: 64)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !4632, file: !4281, line: 66, baseType: !933, size: 64, offset: 128)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !4632, file: !4281, line: 67, baseType: !206, size: 32, offset: 192)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4632, file: !4281, line: 68, baseType: !7, size: 32, offset: 224)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4632, file: !4281, line: 71, baseType: !976, size: 128, offset: 256)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !4632, file: !4281, line: 77, baseType: !4645, size: 64, offset: 384)
!4645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !1443, file: !12, line: 1505, baseType: !1572, size: 64, offset: 8064)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !1443, file: !12, line: 1508, baseType: !1572, size: 64, offset: 8128)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !1443, file: !12, line: 1511, baseType: !206, size: 32, offset: 8192)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !1443, file: !12, line: 1514, baseType: !1821, size: 32, offset: 8224)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !1443, file: !12, line: 1517, baseType: !2909, size: 64, offset: 8256)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !1443, file: !12, line: 1518, baseType: !1480, size: 64, offset: 8320)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !1443, file: !12, line: 1525, baseType: !2616, size: 64, offset: 8384)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !1443, file: !12, line: 1532, baseType: !4654, size: 64, offset: 8448)
!4654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !4655, line: 52, size: 64, elements: !4656)
!4655 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!4656 = !{!4657}
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4654, file: !4655, line: 53, baseType: !4658, size: 64)
!4658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4659, size: 64)
!4659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !4655, line: 40, size: 256, elements: !4660)
!4660 = !{!4661, !4662, !4667}
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4659, file: !4655, line: 42, baseType: !1087)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !4659, file: !4655, line: 44, baseType: !4663, size: 192)
!4663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !4655, line: 28, size: 192, elements: !4664)
!4664 = !{!4665, !4666}
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4663, file: !4655, line: 29, baseType: !976, size: 128)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4663, file: !4655, line: 31, baseType: !933, size: 64, offset: 128)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4659, file: !4655, line: 49, baseType: !933, size: 64, offset: 192)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !1443, file: !12, line: 1533, baseType: !4654, size: 64, offset: 8512)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1443, file: !12, line: 1534, baseType: !1216, size: 128, align: 64, offset: 8576)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !1443, file: !12, line: 1535, baseType: !2897, size: 256, offset: 8704)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !1443, file: !12, line: 1537, baseType: !1568, size: 192, offset: 8960)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !1443, file: !12, line: 1542, baseType: !206, size: 32, offset: 9152)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !1443, file: !12, line: 1545, baseType: !1087, offset: 9184)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !1443, file: !12, line: 1546, baseType: !976, size: 128, offset: 9216)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !1443, file: !12, line: 1548, baseType: !1087, offset: 9344)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !1443, file: !12, line: 1549, baseType: !976, size: 128, offset: 9344)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !1273, file: !12, line: 624, baseType: !1628, size: 64, offset: 256)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !1273, file: !12, line: 631, baseType: !1012, size: 64, offset: 320)
!4679 = !DIDerivedType(tag: DW_TAG_member, scope: !1273, file: !12, line: 639, baseType: !4680, size: 32, offset: 384)
!4680 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1273, file: !12, line: 639, size: 32, elements: !4681)
!4681 = !{!4682, !4683}
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !4680, file: !12, line: 640, baseType: !3435, size: 32)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !4680, file: !12, line: 641, baseType: !7, size: 32)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !1273, file: !12, line: 643, baseType: !1356, size: 32, offset: 416)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !1273, file: !12, line: 644, baseType: !1374, size: 64, offset: 448)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !1273, file: !12, line: 645, baseType: !1378, size: 128, offset: 512)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !1273, file: !12, line: 646, baseType: !1378, size: 128, offset: 640)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !1273, file: !12, line: 647, baseType: !1378, size: 128, offset: 768)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !1273, file: !12, line: 648, baseType: !1087, offset: 896)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !1273, file: !12, line: 649, baseType: !1066, size: 16, offset: 896)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !1273, file: !12, line: 650, baseType: !2257, size: 8, offset: 912)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !1273, file: !12, line: 651, baseType: !2257, size: 8, offset: 920)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !1273, file: !12, line: 652, baseType: !4453, size: 64, offset: 960)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !1273, file: !12, line: 659, baseType: !1012, size: 64, offset: 1024)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !1273, file: !12, line: 660, baseType: !1662, size: 256, offset: 1088)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !1273, file: !12, line: 662, baseType: !1012, size: 64, offset: 1344)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !1273, file: !12, line: 663, baseType: !1012, size: 64, offset: 1408)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !1273, file: !12, line: 665, baseType: !1484, size: 128, offset: 1472)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !1273, file: !12, line: 666, baseType: !976, size: 128, offset: 1600)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !1273, file: !12, line: 675, baseType: !976, size: 128, offset: 1728)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !1273, file: !12, line: 676, baseType: !976, size: 128, offset: 1856)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !1273, file: !12, line: 677, baseType: !976, size: 128, offset: 1984)
!4703 = !DIDerivedType(tag: DW_TAG_member, scope: !1273, file: !12, line: 678, baseType: !4704, size: 128, offset: 2112)
!4704 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1273, file: !12, line: 678, size: 128, elements: !4705)
!4705 = !{!4706, !4707}
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !4704, file: !12, line: 679, baseType: !1480, size: 64)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !4704, file: !12, line: 680, baseType: !1216, size: 128, align: 64)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !1273, file: !12, line: 682, baseType: !1574, size: 64, offset: 2240)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !1273, file: !12, line: 683, baseType: !1574, size: 64, offset: 2304)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1273, file: !12, line: 684, baseType: !1642, size: 32, offset: 2368)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !1273, file: !12, line: 685, baseType: !1642, size: 32, offset: 2400)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !1273, file: !12, line: 686, baseType: !1642, size: 32, offset: 2432)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !1273, file: !12, line: 688, baseType: !1642, size: 32, offset: 2464)
!4714 = !DIDerivedType(tag: DW_TAG_member, scope: !1273, file: !12, line: 690, baseType: !4715, size: 64, offset: 2496)
!4715 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1273, file: !12, line: 690, size: 64, elements: !4716)
!4716 = !{!4717, !4939}
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !4715, file: !12, line: 691, baseType: !4718, size: 64)
!4718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4719, size: 64)
!4719 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4720)
!4720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !12, line: 1822, size: 2048, elements: !4721)
!4721 = !{!4722, !4723, !4727, !4731, !4735, !4736, !4737, !4741, !4754, !4755, !4763, !4767, !4768, !4772, !4773, !4777, !4782, !4783, !4787, !4791, !4899, !4903, !4904, !4908, !4909, !4913, !4917, !4922, !4926, !4930, !4934, !4938}
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4720, file: !12, line: 1823, baseType: !1475, size: 64)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !4720, file: !12, line: 1824, baseType: !4724, size: 64, offset: 64)
!4724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4725, size: 64)
!4725 = !DISubroutineType(types: !4726)
!4726 = !{!1374, !1203, !1374, !206}
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4720, file: !12, line: 1825, baseType: !4728, size: 64, offset: 128)
!4728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4729, size: 64)
!4729 = !DISubroutineType(types: !4730)
!4730 = !{!1159, !1203, !1128, !1173, !1590}
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4720, file: !12, line: 1826, baseType: !4732, size: 64, offset: 192)
!4732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4733, size: 64)
!4733 = !DISubroutineType(types: !4734)
!4734 = !{!1159, !1203, !1008, !1173, !1590}
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !4720, file: !12, line: 1827, baseType: !1739, size: 64, offset: 256)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !4720, file: !12, line: 1828, baseType: !1739, size: 64, offset: 320)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !4720, file: !12, line: 1829, baseType: !4738, size: 64, offset: 384)
!4738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4739, size: 64)
!4739 = !DISubroutineType(types: !4740)
!4740 = !{!206, !1742, !1333}
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !4720, file: !12, line: 1830, baseType: !4742, size: 64, offset: 448)
!4742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4743, size: 64)
!4743 = !DISubroutineType(types: !4744)
!4744 = !{!206, !1203, !4745}
!4745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4746, size: 64)
!4746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !12, line: 1776, size: 128, elements: !4747)
!4747 = !{!4748, !4753}
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !4746, file: !12, line: 1777, baseType: !4749, size: 64)
!4749 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !12, line: 1773, baseType: !4750)
!4750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4751, size: 64)
!4751 = !DISubroutineType(types: !4752)
!4752 = !{!206, !4745, !1008, !206, !1374, !1001, !7}
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !4746, file: !12, line: 1778, baseType: !1374, size: 64, offset: 64)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !4720, file: !12, line: 1831, baseType: !4742, size: 64, offset: 512)
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4720, file: !12, line: 1832, baseType: !4756, size: 64, offset: 576)
!4756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4757, size: 64)
!4757 = !DISubroutineType(types: !4758)
!4758 = !{!4759, !1203, !4761}
!4759 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !4760, line: 52, baseType: !7)
!4760 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!4761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4762, size: 64)
!4762 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !12, line: 56, flags: DIFlagFwdDecl)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !4720, file: !12, line: 1833, baseType: !4764, size: 64, offset: 640)
!4764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4765, size: 64)
!4765 = !DISubroutineType(types: !4766)
!4766 = !{!933, !1203, !7, !1012}
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !4720, file: !12, line: 1834, baseType: !4764, size: 64, offset: 704)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4720, file: !12, line: 1835, baseType: !4769, size: 64, offset: 768)
!4769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4770, size: 64)
!4770 = !DISubroutineType(types: !4771)
!4771 = !{!206, !1203, !1894}
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !4720, file: !12, line: 1836, baseType: !1012, size: 64, offset: 832)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4720, file: !12, line: 1837, baseType: !4774, size: 64, offset: 896)
!4774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4775, size: 64)
!4775 = !DISubroutineType(types: !4776)
!4776 = !{!206, !1272, !1203}
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !4720, file: !12, line: 1838, baseType: !4778, size: 64, offset: 960)
!4778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4779, size: 64)
!4779 = !DISubroutineType(types: !4780)
!4780 = !{!206, !1203, !4781}
!4781 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !12, line: 1007, baseType: !970)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4720, file: !12, line: 1839, baseType: !4774, size: 64, offset: 1024)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !4720, file: !12, line: 1840, baseType: !4784, size: 64, offset: 1088)
!4784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4785, size: 64)
!4785 = !DISubroutineType(types: !4786)
!4786 = !{!206, !1203, !1374, !1374, !206}
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !4720, file: !12, line: 1841, baseType: !4788, size: 64, offset: 1152)
!4788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4789, size: 64)
!4789 = !DISubroutineType(types: !4790)
!4790 = !{!206, !206, !1203, !206}
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4720, file: !12, line: 1842, baseType: !4792, size: 64, offset: 1216)
!4792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4793, size: 64)
!4793 = !DISubroutineType(types: !4794)
!4794 = !{!206, !1203, !206, !4795}
!4795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4796, size: 64)
!4796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !12, line: 1062, size: 1664, elements: !4797)
!4797 = !{!4798, !4799, !4800, !4801, !4802, !4803, !4804, !4805, !4806, !4807, !4808, !4809, !4810, !4811, !4812, !4829, !4830, !4831, !4844, !4875}
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !4796, file: !12, line: 1063, baseType: !4795, size: 64)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !4796, file: !12, line: 1064, baseType: !976, size: 128, offset: 64)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !4796, file: !12, line: 1065, baseType: !1484, size: 128, offset: 192)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !4796, file: !12, line: 1066, baseType: !976, size: 128, offset: 320)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !4796, file: !12, line: 1069, baseType: !976, size: 128, offset: 448)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !4796, file: !12, line: 1072, baseType: !4781, size: 64, offset: 576)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !4796, file: !12, line: 1073, baseType: !7, size: 32, offset: 640)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !4796, file: !12, line: 1074, baseType: !1057, size: 8, offset: 672)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !4796, file: !12, line: 1075, baseType: !7, size: 32, offset: 704)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !4796, file: !12, line: 1076, baseType: !206, size: 32, offset: 736)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !4796, file: !12, line: 1077, baseType: !2385, size: 128, offset: 768)
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !4796, file: !12, line: 1078, baseType: !1203, size: 64, offset: 896)
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !4796, file: !12, line: 1079, baseType: !1374, size: 64, offset: 960)
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !4796, file: !12, line: 1080, baseType: !1374, size: 64, offset: 1024)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !4796, file: !12, line: 1082, baseType: !4813, size: 64, offset: 1088)
!4813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4814, size: 64)
!4814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !12, line: 1314, size: 320, elements: !4815)
!4815 = !{!4816, !4824, !4825, !4826, !4827, !4828}
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !4814, file: !12, line: 1315, baseType: !4817)
!4817 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !4818, line: 20, baseType: !4819)
!4818 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!4819 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4818, line: 11, elements: !4820)
!4820 = !{!4821}
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !4819, file: !4818, line: 12, baseType: !4822)
!4822 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !1099, line: 33, baseType: !4823)
!4823 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1099, line: 31, elements: !1101)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !4814, file: !12, line: 1316, baseType: !206, size: 32)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !4814, file: !12, line: 1317, baseType: !206, size: 32, offset: 32)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !4814, file: !12, line: 1318, baseType: !4813, size: 64, offset: 64)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !4814, file: !12, line: 1319, baseType: !1203, size: 64, offset: 128)
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !4814, file: !12, line: 1320, baseType: !1216, size: 128, align: 64, offset: 192)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !4796, file: !12, line: 1084, baseType: !1012, size: 64, offset: 1152)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !4796, file: !12, line: 1085, baseType: !1012, size: 64, offset: 1216)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !4796, file: !12, line: 1087, baseType: !4832, size: 64, offset: 1280)
!4832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4833, size: 64)
!4833 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4834)
!4834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !12, line: 1011, size: 128, elements: !4835)
!4835 = !{!4836, !4840}
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !4834, file: !12, line: 1012, baseType: !4837, size: 64)
!4837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4838, size: 64)
!4838 = !DISubroutineType(types: !4839)
!4839 = !{null, !4795, !4795}
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !4834, file: !12, line: 1013, baseType: !4841, size: 64, offset: 64)
!4841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4842, size: 64)
!4842 = !DISubroutineType(types: !4843)
!4843 = !{null, !4795}
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !4796, file: !12, line: 1088, baseType: !4845, size: 64, offset: 1344)
!4845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4846, size: 64)
!4846 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4847)
!4847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !12, line: 1016, size: 512, elements: !4848)
!4848 = !{!4849, !4853, !4857, !4858, !4862, !4866, !4870, !4874}
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !4847, file: !12, line: 1017, baseType: !4850, size: 64)
!4850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4851, size: 64)
!4851 = !DISubroutineType(types: !4852)
!4852 = !{!4781, !4781}
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !4847, file: !12, line: 1018, baseType: !4854, size: 64, offset: 64)
!4854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4855, size: 64)
!4855 = !DISubroutineType(types: !4856)
!4856 = !{null, !4781}
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !4847, file: !12, line: 1019, baseType: !4841, size: 64, offset: 128)
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !4847, file: !12, line: 1020, baseType: !4859, size: 64, offset: 192)
!4859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4860, size: 64)
!4860 = !DISubroutineType(types: !4861)
!4861 = !{!206, !4795, !206}
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !4847, file: !12, line: 1021, baseType: !4863, size: 64, offset: 256)
!4863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4864, size: 64)
!4864 = !DISubroutineType(types: !4865)
!4865 = !{!1333, !4795}
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !4847, file: !12, line: 1022, baseType: !4867, size: 64, offset: 320)
!4867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4868, size: 64)
!4868 = !DISubroutineType(types: !4869)
!4869 = !{!206, !4795, !206, !980}
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !4847, file: !12, line: 1023, baseType: !4871, size: 64, offset: 384)
!4871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4872, size: 64)
!4872 = !DISubroutineType(types: !4873)
!4873 = !{null, !4795, !1716}
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !4847, file: !12, line: 1024, baseType: !4863, size: 64, offset: 448)
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !4796, file: !12, line: 1097, baseType: !4876, size: 256, offset: 1408)
!4876 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4796, file: !12, line: 1089, size: 256, elements: !4877)
!4877 = !{!4878, !4887, !4893}
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !4876, file: !12, line: 1090, baseType: !4879, size: 256)
!4879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !4880, line: 10, size: 256, elements: !4881)
!4880 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!4881 = !{!4882, !4883, !4886}
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4879, file: !4880, line: 11, baseType: !1042, size: 32)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4879, file: !4880, line: 12, baseType: !4884, size: 64, offset: 64)
!4884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4885, size: 64)
!4885 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !4880, line: 5, flags: DIFlagFwdDecl)
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4879, file: !4880, line: 13, baseType: !976, size: 128, offset: 128)
!4887 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !4876, file: !12, line: 1091, baseType: !4888, size: 64)
!4888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !4880, line: 17, size: 64, elements: !4889)
!4889 = !{!4890}
!4890 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4888, file: !4880, line: 18, baseType: !4891, size: 64)
!4891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4892, size: 64)
!4892 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !4880, line: 16, flags: DIFlagFwdDecl)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !4876, file: !12, line: 1096, baseType: !4894, size: 192)
!4894 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4876, file: !12, line: 1092, size: 192, elements: !4895)
!4895 = !{!4896, !4897, !4898}
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4894, file: !12, line: 1093, baseType: !976, size: 128)
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4894, file: !12, line: 1094, baseType: !206, size: 32, offset: 128)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !4894, file: !12, line: 1095, baseType: !7, size: 32, offset: 160)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !4720, file: !12, line: 1843, baseType: !4900, size: 64, offset: 1280)
!4900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4901, size: 64)
!4901 = !DISubroutineType(types: !4902)
!4902 = !{!1159, !1203, !1615, !206, !1173, !1590, !206}
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !4720, file: !12, line: 1844, baseType: !2014, size: 64, offset: 1344)
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !4720, file: !12, line: 1845, baseType: !4905, size: 64, offset: 1408)
!4905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4906, size: 64)
!4906 = !DISubroutineType(types: !4907)
!4907 = !{!206, !206}
!4908 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !4720, file: !12, line: 1846, baseType: !4792, size: 64, offset: 1472)
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !4720, file: !12, line: 1847, baseType: !4910, size: 64, offset: 1536)
!4910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4911, size: 64)
!4911 = !DISubroutineType(types: !4912)
!4912 = !{!1159, !3986, !1203, !1590, !1173, !7}
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !4720, file: !12, line: 1848, baseType: !4914, size: 64, offset: 1600)
!4914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4915, size: 64)
!4915 = !DISubroutineType(types: !4916)
!4916 = !{!1159, !1203, !1590, !3986, !1173, !7}
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !4720, file: !12, line: 1849, baseType: !4918, size: 64, offset: 1664)
!4918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4919, size: 64)
!4919 = !DISubroutineType(types: !4920)
!4920 = !{!206, !1203, !933, !4921, !1716}
!4921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4795, size: 64)
!4922 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !4720, file: !12, line: 1850, baseType: !4923, size: 64, offset: 1728)
!4923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4924, size: 64)
!4924 = !DISubroutineType(types: !4925)
!4925 = !{!933, !1203, !206, !1374, !1374}
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !4720, file: !12, line: 1852, baseType: !4927, size: 64, offset: 1792)
!4927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4928, size: 64)
!4928 = !DISubroutineType(types: !4929)
!4929 = !{null, !1556, !1203}
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !4720, file: !12, line: 1856, baseType: !4931, size: 64, offset: 1856)
!4931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4932, size: 64)
!4932 = !DISubroutineType(types: !4933)
!4933 = !{!1159, !1203, !1374, !1203, !1374, !1173, !7}
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !4720, file: !12, line: 1858, baseType: !4935, size: 64, offset: 1920)
!4935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4936, size: 64)
!4936 = !DISubroutineType(types: !4937)
!4937 = !{!1374, !1203, !1374, !1203, !1374, !1374, !7}
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !4720, file: !12, line: 1861, baseType: !4784, size: 64, offset: 1984)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !4715, file: !12, line: 692, baseType: !1509, size: 64)
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !1273, file: !12, line: 694, baseType: !4941, size: 64, offset: 2560)
!4941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4942, size: 64)
!4942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !12, line: 1100, size: 384, elements: !4943)
!4943 = !{!4944, !4945, !4946, !4947}
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !4942, file: !12, line: 1101, baseType: !1087)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !4942, file: !12, line: 1102, baseType: !976, size: 128)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !4942, file: !12, line: 1103, baseType: !976, size: 128, offset: 128)
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !4942, file: !12, line: 1104, baseType: !976, size: 128, offset: 256)
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !1273, file: !12, line: 695, baseType: !1629, size: 1216, align: 64, offset: 2624)
!4949 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !1273, file: !12, line: 696, baseType: !976, size: 128, offset: 3840)
!4950 = !DIDerivedType(tag: DW_TAG_member, scope: !1273, file: !12, line: 697, baseType: !4951, size: 64, offset: 3968)
!4951 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1273, file: !12, line: 697, size: 64, elements: !4952)
!4952 = !{!4953, !4954, !4955, !4958, !4959}
!4953 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !4951, file: !12, line: 698, baseType: !3986, size: 64)
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !4951, file: !12, line: 699, baseType: !2930, size: 64)
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !4951, file: !12, line: 700, baseType: !4956, size: 64)
!4956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4957, size: 64)
!4957 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !12, line: 700, flags: DIFlagFwdDecl)
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !4951, file: !12, line: 701, baseType: !1128, size: 64)
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !4951, file: !12, line: 702, baseType: !7, size: 32)
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !1273, file: !12, line: 705, baseType: !1043, size: 32, offset: 4032)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !1273, file: !12, line: 708, baseType: !1043, size: 32, offset: 4064)
!4962 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !1273, file: !12, line: 709, baseType: !4557, size: 64, offset: 4096)
!4963 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !1273, file: !12, line: 720, baseType: !970, size: 64, offset: 4160)
!4964 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !1234, file: !1231, line: 98, baseType: !4965, size: 256, offset: 448)
!4965 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1057, size: 256, elements: !2838)
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !1234, file: !1231, line: 101, baseType: !4967, size: 32, offset: 704)
!4967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !4968, line: 25, size: 32, elements: !4969)
!4968 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!4969 = !{!4970}
!4970 = !DIDerivedType(tag: DW_TAG_member, scope: !4967, file: !4968, line: 26, baseType: !4971, size: 32)
!4971 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4967, file: !4968, line: 26, size: 32, elements: !4972)
!4972 = !{!4973}
!4973 = !DIDerivedType(tag: DW_TAG_member, scope: !4971, file: !4968, line: 30, baseType: !4974, size: 32)
!4974 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4971, file: !4968, line: 30, size: 32, elements: !4975)
!4975 = !{!4976, !4977}
!4976 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4974, file: !4968, line: 31, baseType: !1087)
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4974, file: !4968, line: 32, baseType: !206, size: 32)
!4978 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !1234, file: !1231, line: 102, baseType: !4572, size: 64, offset: 768)
!4979 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !1234, file: !1231, line: 103, baseType: !1442, size: 64, offset: 832)
!4980 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !1234, file: !1231, line: 104, baseType: !1012, size: 64, offset: 896)
!4981 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !1234, file: !1231, line: 105, baseType: !970, size: 64, offset: 960)
!4982 = !DIDerivedType(tag: DW_TAG_member, scope: !1234, file: !1231, line: 107, baseType: !4983, size: 128, offset: 1024)
!4983 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1234, file: !1231, line: 107, size: 128, elements: !4984)
!4984 = !{!4985, !4986}
!4985 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !4983, file: !1231, line: 108, baseType: !976, size: 128)
!4986 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !4983, file: !1231, line: 109, baseType: !4987, size: 64)
!4987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2385, size: 64)
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !1234, file: !1231, line: 111, baseType: !976, size: 128, offset: 1152)
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !1234, file: !1231, line: 112, baseType: !976, size: 128, offset: 1280)
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !1234, file: !1231, line: 120, baseType: !4991, size: 128, offset: 1408)
!4991 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1234, file: !1231, line: 116, size: 128, elements: !4992)
!4992 = !{!4993, !4994, !4995}
!4993 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !4991, file: !1231, line: 117, baseType: !1484, size: 128)
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !4991, file: !1231, line: 118, baseType: !1248, size: 128)
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !4991, file: !1231, line: 119, baseType: !1216, size: 128, align: 64)
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !1204, file: !12, line: 922, baseType: !1272, size: 64, offset: 256)
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !1204, file: !12, line: 923, baseType: !4718, size: 64, offset: 320)
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !1204, file: !12, line: 929, baseType: !1087, offset: 384)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !1204, file: !12, line: 930, baseType: !11, size: 32, offset: 384)
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !1204, file: !12, line: 931, baseType: !1572, size: 64, offset: 448)
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !1204, file: !12, line: 932, baseType: !7, size: 32, offset: 512)
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !1204, file: !12, line: 933, baseType: !3033, size: 32, offset: 544)
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !1204, file: !12, line: 934, baseType: !1568, size: 192, offset: 576)
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !1204, file: !12, line: 935, baseType: !1374, size: 64, offset: 768)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !1204, file: !12, line: 936, baseType: !5006, size: 192, offset: 832)
!5006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !12, line: 885, size: 192, elements: !5007)
!5007 = !{!5008, !5009, !5010, !5011, !5012, !5013}
!5008 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5006, file: !12, line: 886, baseType: !4817)
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !5006, file: !12, line: 887, baseType: !2375, size: 64)
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !5006, file: !12, line: 888, baseType: !20, size: 32, offset: 64)
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !5006, file: !12, line: 889, baseType: !1278, size: 32, offset: 96)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !5006, file: !12, line: 889, baseType: !1278, size: 32, offset: 128)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !5006, file: !12, line: 890, baseType: !206, size: 32, offset: 160)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !1204, file: !12, line: 937, baseType: !2450, size: 64, offset: 1024)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !1204, file: !12, line: 938, baseType: !5016, size: 256, offset: 1088)
!5016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !12, line: 896, size: 256, elements: !5017)
!5017 = !{!5018, !5019, !5020, !5021, !5022, !5023}
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5016, file: !12, line: 897, baseType: !1012, size: 64)
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5016, file: !12, line: 898, baseType: !7, size: 32, offset: 64)
!5020 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !5016, file: !12, line: 899, baseType: !7, size: 32, offset: 96)
!5021 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !5016, file: !12, line: 902, baseType: !7, size: 32, offset: 128)
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !5016, file: !12, line: 903, baseType: !7, size: 32, offset: 160)
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !5016, file: !12, line: 904, baseType: !1374, size: 64, offset: 192)
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !1204, file: !12, line: 940, baseType: !1001, size: 64, offset: 1344)
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1204, file: !12, line: 945, baseType: !970, size: 64, offset: 1408)
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !1204, file: !12, line: 949, baseType: !976, size: 128, offset: 1472)
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !1204, file: !12, line: 950, baseType: !976, size: 128, offset: 1600)
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !1204, file: !12, line: 952, baseType: !1628, size: 64, offset: 1728)
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !1204, file: !12, line: 953, baseType: !1821, size: 32, offset: 1792)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !1204, file: !12, line: 954, baseType: !1821, size: 32, offset: 1824)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1194, file: !1153, line: 174, baseType: !1200, size: 64, offset: 320)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1194, file: !1153, line: 176, baseType: !5033, size: 64, offset: 384)
!5033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5034, size: 64)
!5034 = !DISubroutineType(types: !5035)
!5035 = !{!206, !1203, !1080, !1193, !1894}
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !1182, file: !1153, line: 90, baseType: !1177, size: 64, offset: 192)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !1182, file: !1153, line: 91, baseType: !5038, size: 64, offset: 256)
!5038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 64)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !1143, file: !1075, line: 143, baseType: !5040, size: 64, offset: 256)
!5040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5041, size: 64)
!5041 = !DISubroutineType(types: !5042)
!5042 = !{!5043, !1080}
!5043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5044, size: 64)
!5044 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5045)
!5045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !35, line: 39, size: 384, elements: !5046)
!5046 = !{!5047, !5048, !5052, !5056, !5062, !5066}
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5045, file: !35, line: 40, baseType: !34, size: 32)
!5048 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !5045, file: !35, line: 41, baseType: !5049, size: 64, offset: 64)
!5049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5050, size: 64)
!5050 = !DISubroutineType(types: !5051)
!5051 = !{!1333}
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !5045, file: !35, line: 42, baseType: !5053, size: 64, offset: 128)
!5053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5054, size: 64)
!5054 = !DISubroutineType(types: !5055)
!5055 = !{!970}
!5056 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !5045, file: !35, line: 43, baseType: !5057, size: 64, offset: 192)
!5057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5058, size: 64)
!5058 = !DISubroutineType(types: !5059)
!5059 = !{!4014, !5060}
!5060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5061, size: 64)
!5061 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !35, line: 19, flags: DIFlagFwdDecl)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !5045, file: !35, line: 44, baseType: !5063, size: 64, offset: 256)
!5063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5064, size: 64)
!5064 = !DISubroutineType(types: !5065)
!5065 = !{!4014}
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !5045, file: !35, line: 45, baseType: !1311, size: 64, offset: 320)
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !1143, file: !1075, line: 144, baseType: !5068, size: 64, offset: 320)
!5068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5069, size: 64)
!5069 = !DISubroutineType(types: !5070)
!5070 = !{!4014, !1080}
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !1143, file: !1075, line: 145, baseType: !5072, size: 64, offset: 384)
!5072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5073, size: 64)
!5073 = !DISubroutineType(types: !5074)
!5074 = !{null, !1080, !5075, !5076}
!5075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64)
!5076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 64)
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !1074, file: !1075, line: 70, baseType: !5078, size: 64, offset: 384)
!5078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5079, size: 64)
!5079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !5080, line: 123, size: 1024, elements: !5081)
!5080 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!5081 = !{!5082, !5083, !5084, !5085, !5086, !5087, !5088, !5089, !5198, !5199, !5200, !5201, !5202}
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5079, file: !5080, line: 124, baseType: !1642, size: 32)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !5079, file: !5080, line: 125, baseType: !1642, size: 32, offset: 32)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5079, file: !5080, line: 135, baseType: !5078, size: 64, offset: 64)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5079, file: !5080, line: 136, baseType: !1008, size: 64, offset: 128)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !5079, file: !5080, line: 138, baseType: !1655, size: 192, align: 64, offset: 192)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !5079, file: !5080, line: 140, baseType: !4014, size: 64, offset: 384)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !5079, file: !5080, line: 141, baseType: !7, size: 32, offset: 448)
!5089 = !DIDerivedType(tag: DW_TAG_member, scope: !5079, file: !5080, line: 142, baseType: !5090, size: 256, offset: 512)
!5090 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5079, file: !5080, line: 142, size: 256, elements: !5091)
!5091 = !{!5092, !5138, !5142}
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !5090, file: !5080, line: 143, baseType: !5093, size: 192)
!5093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !5080, line: 91, size: 192, elements: !5094)
!5094 = !{!5095, !5096, !5097}
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !5093, file: !5080, line: 92, baseType: !1012, size: 64)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5093, file: !5080, line: 94, baseType: !1651, size: 64, offset: 64)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !5093, file: !5080, line: 100, baseType: !5098, size: 64, offset: 128)
!5098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5099, size: 64)
!5099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !5080, line: 180, size: 704, elements: !5100)
!5100 = !{!5101, !5102, !5103, !5110, !5111, !5112, !5136, !5137}
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !5099, file: !5080, line: 182, baseType: !5078, size: 64)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5099, file: !5080, line: 183, baseType: !7, size: 32, offset: 64)
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !5099, file: !5080, line: 186, baseType: !5104, size: 192, offset: 128)
!5104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !5105, line: 19, size: 192, elements: !5106)
!5105 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!5106 = !{!5107, !5108, !5109}
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !5104, file: !5105, line: 20, baseType: !1633, size: 128)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !5104, file: !5105, line: 21, baseType: !7, size: 32, offset: 128)
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !5104, file: !5105, line: 22, baseType: !7, size: 32, offset: 160)
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !5099, file: !5080, line: 187, baseType: !1042, size: 32, offset: 320)
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !5099, file: !5080, line: 188, baseType: !1042, size: 32, offset: 352)
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !5099, file: !5080, line: 189, baseType: !5113, size: 64, offset: 384)
!5113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5114, size: 64)
!5114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !5080, line: 168, size: 320, elements: !5115)
!5115 = !{!5116, !5120, !5124, !5128, !5132}
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !5114, file: !5080, line: 169, baseType: !5117, size: 64)
!5117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5118, size: 64)
!5118 = !DISubroutineType(types: !5119)
!5119 = !{!206, !1556, !5098}
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !5114, file: !5080, line: 171, baseType: !5121, size: 64, offset: 64)
!5121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5122, size: 64)
!5122 = !DISubroutineType(types: !5123)
!5123 = !{!206, !5078, !1008, !1168}
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !5114, file: !5080, line: 173, baseType: !5125, size: 64, offset: 128)
!5125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5126, size: 64)
!5126 = !DISubroutineType(types: !5127)
!5127 = !{!206, !5078}
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !5114, file: !5080, line: 174, baseType: !5129, size: 64, offset: 192)
!5129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5130, size: 64)
!5130 = !DISubroutineType(types: !5131)
!5131 = !{!206, !5078, !5078, !1008}
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !5114, file: !5080, line: 176, baseType: !5133, size: 64, offset: 256)
!5133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5134, size: 64)
!5134 = !DISubroutineType(types: !5135)
!5135 = !{!206, !1556, !5078, !5098}
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !5099, file: !5080, line: 192, baseType: !976, size: 128, offset: 448)
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !5099, file: !5080, line: 194, baseType: !2385, size: 128, offset: 576)
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !5090, file: !5080, line: 144, baseType: !5139, size: 64)
!5139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !5080, line: 103, size: 64, elements: !5140)
!5140 = !{!5141}
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !5139, file: !5080, line: 104, baseType: !5078, size: 64)
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5090, file: !5080, line: 145, baseType: !5143, size: 256)
!5143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !5080, line: 107, size: 256, elements: !5144)
!5144 = !{!5145, !5193, !5196, !5197}
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5143, file: !5080, line: 108, baseType: !5146, size: 64)
!5146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5147, size: 64)
!5147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5148)
!5148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !5080, line: 217, size: 768, elements: !5149)
!5149 = !{!5150, !5170, !5174, !5175, !5176, !5177, !5178, !5182, !5183, !5184, !5185, !5189}
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !5148, file: !5080, line: 222, baseType: !5151, size: 64)
!5151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5152, size: 64)
!5152 = !DISubroutineType(types: !5153)
!5153 = !{!206, !5154}
!5154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5155, size: 64)
!5155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !5080, line: 197, size: 1088, elements: !5156)
!5156 = !{!5157, !5158, !5159, !5160, !5161, !5162, !5163, !5164, !5165, !5166, !5167, !5168, !5169}
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !5155, file: !5080, line: 199, baseType: !5078, size: 64)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !5155, file: !5080, line: 200, baseType: !1203, size: 64, offset: 64)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !5155, file: !5080, line: 201, baseType: !1556, size: 64, offset: 128)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !5155, file: !5080, line: 202, baseType: !970, size: 64, offset: 192)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !5155, file: !5080, line: 205, baseType: !1568, size: 192, offset: 256)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !5155, file: !5080, line: 206, baseType: !1568, size: 192, offset: 448)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !5155, file: !5080, line: 207, baseType: !206, size: 32, offset: 640)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5155, file: !5080, line: 208, baseType: !976, size: 128, offset: 704)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !5155, file: !5080, line: 209, baseType: !1128, size: 64, offset: 832)
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !5155, file: !5080, line: 211, baseType: !1173, size: 64, offset: 896)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !5155, file: !5080, line: 212, baseType: !1333, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !5155, file: !5080, line: 213, baseType: !1333, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !5155, file: !5080, line: 214, baseType: !1922, size: 64, offset: 1024)
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5148, file: !5080, line: 223, baseType: !5171, size: 64, offset: 64)
!5171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5172, size: 64)
!5172 = !DISubroutineType(types: !5173)
!5173 = !{null, !5154}
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !5148, file: !5080, line: 236, baseType: !1600, size: 64, offset: 128)
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !5148, file: !5080, line: 238, baseType: !1587, size: 64, offset: 192)
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !5148, file: !5080, line: 239, baseType: !1596, size: 64, offset: 256)
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !5148, file: !5080, line: 240, baseType: !1592, size: 64, offset: 320)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !5148, file: !5080, line: 242, baseType: !5179, size: 64, offset: 384)
!5179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5180, size: 64)
!5180 = !DISubroutineType(types: !5181)
!5181 = !{!1159, !5154, !1128, !1173, !1374}
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !5148, file: !5080, line: 252, baseType: !1173, size: 64, offset: 448)
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !5148, file: !5080, line: 259, baseType: !1333, size: 8, offset: 512)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !5148, file: !5080, line: 260, baseType: !5179, size: 64, offset: 576)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !5148, file: !5080, line: 263, baseType: !5186, size: 64, offset: 640)
!5186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5187, size: 64)
!5187 = !DISubroutineType(types: !5188)
!5188 = !{!4759, !5154, !4761}
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !5148, file: !5080, line: 266, baseType: !5190, size: 64, offset: 704)
!5190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5191, size: 64)
!5191 = !DISubroutineType(types: !5192)
!5192 = !{!206, !5154, !1894}
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !5143, file: !5080, line: 109, baseType: !5194, size: 64, offset: 64)
!5194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5195, size: 64)
!5195 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !5080, line: 31, flags: DIFlagFwdDecl)
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5143, file: !5080, line: 110, baseType: !1374, size: 64, offset: 128)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !5143, file: !5080, line: 111, baseType: !5078, size: 64, offset: 192)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !5079, file: !5080, line: 148, baseType: !970, size: 64, offset: 768)
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5079, file: !5080, line: 154, baseType: !1001, size: 64, offset: 832)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5079, file: !5080, line: 156, baseType: !1066, size: 16, offset: 896)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5079, file: !5080, line: 157, baseType: !1168, size: 16, offset: 912)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !5079, file: !5080, line: 158, baseType: !5203, size: 64, offset: 960)
!5203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5204, size: 64)
!5204 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !5080, line: 32, flags: DIFlagFwdDecl)
!5205 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !1074, file: !1075, line: 71, baseType: !2959, size: 32, offset: 448)
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !1074, file: !1075, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !1074, file: !1075, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !1074, file: !1075, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !1074, file: !1075, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !1074, file: !1075, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!5211 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1071, file: !47, line: 463, baseType: !1070, size: 64, offset: 512)
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1071, file: !47, line: 465, baseType: !5213, size: 64, offset: 576)
!5213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5214, size: 64)
!5214 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !47, line: 36, flags: DIFlagFwdDecl)
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !1071, file: !47, line: 467, baseType: !1008, size: 64, offset: 640)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1071, file: !47, line: 468, baseType: !5217, size: 64, offset: 704)
!5217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5218, size: 64)
!5218 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5219)
!5219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !47, line: 87, size: 384, elements: !5220)
!5220 = !{!5221, !5222, !5223, !5227, !5231, !5235}
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5219, file: !47, line: 88, baseType: !1008, size: 64)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !5219, file: !47, line: 89, baseType: !1179, size: 64, offset: 64)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !5219, file: !47, line: 90, baseType: !5224, size: 64, offset: 128)
!5224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5225, size: 64)
!5225 = !DISubroutineType(types: !5226)
!5226 = !{!206, !1070, !1123}
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !5219, file: !47, line: 91, baseType: !5228, size: 64, offset: 192)
!5228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5229, size: 64)
!5229 = !DISubroutineType(types: !5230)
!5230 = !{!1128, !1070, !3099, !5075, !5076}
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5219, file: !47, line: 93, baseType: !5232, size: 64, offset: 256)
!5232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5233, size: 64)
!5233 = !DISubroutineType(types: !5234)
!5234 = !{null, !1070}
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !5219, file: !47, line: 95, baseType: !5236, size: 64, offset: 320)
!5236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5237, size: 64)
!5237 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5238)
!5238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !54, line: 278, size: 1472, elements: !5239)
!5239 = !{!5240, !5244, !5245, !5246, !5247, !5248, !5249, !5250, !5251, !5252, !5253, !5254, !5255, !5256, !5257, !5258, !5259, !5260, !5261, !5262, !5263, !5264, !5265}
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !5238, file: !54, line: 279, baseType: !5241, size: 64)
!5241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5242, size: 64)
!5242 = !DISubroutineType(types: !5243)
!5243 = !{!206, !1070}
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !5238, file: !54, line: 280, baseType: !5232, size: 64, offset: 64)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !5238, file: !54, line: 281, baseType: !5241, size: 64, offset: 128)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !5238, file: !54, line: 282, baseType: !5241, size: 64, offset: 192)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !5238, file: !54, line: 283, baseType: !5241, size: 64, offset: 256)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !5238, file: !54, line: 284, baseType: !5241, size: 64, offset: 320)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !5238, file: !54, line: 285, baseType: !5241, size: 64, offset: 384)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !5238, file: !54, line: 286, baseType: !5241, size: 64, offset: 448)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !5238, file: !54, line: 287, baseType: !5241, size: 64, offset: 512)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !5238, file: !54, line: 288, baseType: !5241, size: 64, offset: 576)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !5238, file: !54, line: 289, baseType: !5241, size: 64, offset: 640)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !5238, file: !54, line: 290, baseType: !5241, size: 64, offset: 704)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !5238, file: !54, line: 291, baseType: !5241, size: 64, offset: 768)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !5238, file: !54, line: 292, baseType: !5241, size: 64, offset: 832)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !5238, file: !54, line: 293, baseType: !5241, size: 64, offset: 896)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !5238, file: !54, line: 294, baseType: !5241, size: 64, offset: 960)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !5238, file: !54, line: 295, baseType: !5241, size: 64, offset: 1024)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !5238, file: !54, line: 296, baseType: !5241, size: 64, offset: 1088)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !5238, file: !54, line: 297, baseType: !5241, size: 64, offset: 1152)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !5238, file: !54, line: 298, baseType: !5241, size: 64, offset: 1216)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !5238, file: !54, line: 299, baseType: !5241, size: 64, offset: 1280)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !5238, file: !54, line: 300, baseType: !5241, size: 64, offset: 1344)
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !5238, file: !54, line: 301, baseType: !5241, size: 64, offset: 1408)
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1071, file: !47, line: 470, baseType: !5267, size: 64, offset: 768)
!5267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5268, size: 64)
!5268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !5269, line: 82, size: 1408, elements: !5270)
!5269 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!5270 = !{!5271, !5272, !5273, !5274, !5275, !5276, !5277, !5336, !5337, !5338, !5339, !5340, !5341, !5342, !5343, !5344, !5345, !5346, !5347, !5348, !5352, !5355, !5356}
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5268, file: !5269, line: 83, baseType: !1008, size: 64)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !5268, file: !5269, line: 84, baseType: !1008, size: 64, offset: 64)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !5268, file: !5269, line: 85, baseType: !1070, size: 64, offset: 128)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !5268, file: !5269, line: 86, baseType: !1179, size: 64, offset: 192)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !5268, file: !5269, line: 87, baseType: !1179, size: 64, offset: 256)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !5268, file: !5269, line: 88, baseType: !1179, size: 64, offset: 320)
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !5268, file: !5269, line: 90, baseType: !5278, size: 64, offset: 384)
!5278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5279, size: 64)
!5279 = !DISubroutineType(types: !5280)
!5280 = !{!206, !1070, !5281}
!5281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5282, size: 64)
!5282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !41, line: 95, size: 1152, elements: !5283)
!5283 = !{!5284, !5285, !5286, !5287, !5288, !5289, !5290, !5303, !5316, !5317, !5318, !5319, !5320, !5328, !5329, !5330, !5331, !5332, !5333}
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5282, file: !41, line: 96, baseType: !1008, size: 64)
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !5282, file: !41, line: 97, baseType: !5267, size: 64, offset: 64)
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5282, file: !41, line: 99, baseType: !1475, size: 64, offset: 128)
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !5282, file: !41, line: 100, baseType: !1008, size: 64, offset: 192)
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !5282, file: !41, line: 102, baseType: !1333, size: 8, offset: 256)
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !5282, file: !41, line: 103, baseType: !40, size: 32, offset: 288)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !5282, file: !41, line: 105, baseType: !5291, size: 64, offset: 320)
!5291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5292, size: 64)
!5292 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5293)
!5293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !5294, line: 262, size: 1600, elements: !5295)
!5294 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!5295 = !{!5296, !5297, !5298, !5302}
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5293, file: !5294, line: 263, baseType: !2837, size: 256)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5293, file: !5294, line: 264, baseType: !2837, size: 256, offset: 256)
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !5293, file: !5294, line: 265, baseType: !5299, size: 1024, offset: 512)
!5299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1010, size: 1024, elements: !5300)
!5300 = !{!5301}
!5301 = !DISubrange(count: 128)
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5293, file: !5294, line: 266, baseType: !4014, size: 64, offset: 1536)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !5282, file: !41, line: 106, baseType: !5304, size: 64, offset: 384)
!5304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5305, size: 64)
!5305 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5306)
!5306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !5294, line: 210, size: 256, elements: !5307)
!5307 = !{!5308, !5312, !5314, !5315}
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5306, file: !5294, line: 211, baseType: !5309, size: 72)
!5309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2258, size: 72, elements: !5310)
!5310 = !{!5311}
!5311 = !DISubrange(count: 9)
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !5306, file: !5294, line: 212, baseType: !5313, size: 64, offset: 128)
!5313 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !5294, line: 14, baseType: !1012)
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !5306, file: !5294, line: 213, baseType: !1043, size: 32, offset: 192)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !5306, file: !5294, line: 214, baseType: !1043, size: 32, offset: 224)
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !5282, file: !41, line: 108, baseType: !5241, size: 64, offset: 448)
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !5282, file: !41, line: 109, baseType: !5232, size: 64, offset: 512)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !5282, file: !41, line: 110, baseType: !5241, size: 64, offset: 576)
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !5282, file: !41, line: 111, baseType: !5232, size: 64, offset: 640)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !5282, file: !41, line: 112, baseType: !5321, size: 64, offset: 704)
!5321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5322, size: 64)
!5322 = !DISubroutineType(types: !5323)
!5323 = !{!206, !1070, !5324}
!5324 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !54, line: 52, baseType: !5325)
!5325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !54, line: 50, size: 32, elements: !5326)
!5326 = !{!5327}
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !5325, file: !54, line: 51, baseType: !206, size: 32)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !5282, file: !41, line: 113, baseType: !5241, size: 64, offset: 768)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !5282, file: !41, line: 114, baseType: !1179, size: 64, offset: 832)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !5282, file: !41, line: 115, baseType: !1179, size: 64, offset: 896)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !5282, file: !41, line: 117, baseType: !5236, size: 64, offset: 960)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !5282, file: !41, line: 118, baseType: !5232, size: 64, offset: 1024)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5282, file: !41, line: 120, baseType: !5334, size: 64, offset: 1088)
!5334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5335, size: 64)
!5335 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !41, line: 120, flags: DIFlagFwdDecl)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !5268, file: !5269, line: 91, baseType: !5224, size: 64, offset: 448)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !5268, file: !5269, line: 92, baseType: !5241, size: 64, offset: 512)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !5268, file: !5269, line: 93, baseType: !5232, size: 64, offset: 576)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !5268, file: !5269, line: 94, baseType: !5241, size: 64, offset: 640)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !5268, file: !5269, line: 95, baseType: !5232, size: 64, offset: 704)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !5268, file: !5269, line: 97, baseType: !5241, size: 64, offset: 768)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !5268, file: !5269, line: 98, baseType: !5241, size: 64, offset: 832)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !5268, file: !5269, line: 100, baseType: !5321, size: 64, offset: 896)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !5268, file: !5269, line: 101, baseType: !5241, size: 64, offset: 960)
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !5268, file: !5269, line: 103, baseType: !5241, size: 64, offset: 1024)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !5268, file: !5269, line: 105, baseType: !5241, size: 64, offset: 1088)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !5268, file: !5269, line: 107, baseType: !5236, size: 64, offset: 1152)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !5268, file: !5269, line: 109, baseType: !5349, size: 64, offset: 1216)
!5349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5350, size: 64)
!5350 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5351)
!5351 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !5269, line: 109, flags: DIFlagFwdDecl)
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5268, file: !5269, line: 111, baseType: !5353, size: 64, offset: 1280)
!5353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5354, size: 64)
!5354 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !5269, line: 111, flags: DIFlagFwdDecl)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !5268, file: !5269, line: 112, baseType: !1490, offset: 1344)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !5268, file: !5269, line: 114, baseType: !1333, size: 8, offset: 1344)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !1071, file: !47, line: 471, baseType: !5281, size: 64, offset: 832)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !1071, file: !47, line: 473, baseType: !970, size: 64, offset: 896)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !1071, file: !47, line: 475, baseType: !970, size: 64, offset: 960)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1071, file: !47, line: 480, baseType: !1568, size: 192, offset: 1024)
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !1071, file: !47, line: 484, baseType: !5362, size: 576, offset: 1216)
!5362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !47, line: 361, size: 576, elements: !5363)
!5363 = !{!5364, !5365, !5366, !5367, !5368, !5369}
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !5362, file: !47, line: 362, baseType: !976, size: 128)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !5362, file: !47, line: 363, baseType: !976, size: 128, offset: 128)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !5362, file: !47, line: 364, baseType: !976, size: 128, offset: 256)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !5362, file: !47, line: 365, baseType: !976, size: 128, offset: 384)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !5362, file: !47, line: 366, baseType: !1333, size: 8, offset: 512)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !5362, file: !47, line: 367, baseType: !46, size: 32, offset: 544)
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !1071, file: !47, line: 485, baseType: !5371, size: 2304, offset: 1792)
!5371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !54, line: 565, size: 2304, elements: !5372)
!5372 = !{!5373, !5374, !5375, !5376, !5377, !5378, !5379, !5380, !5381, !5382, !5383, !5384, !5385, !5386, !5387, !5388, !5415, !5416, !5417, !5418, !5419, !5420, !5421, !5422, !5423, !5424, !5425, !5426, !5427, !5428, !5429, !5430, !5431, !5432, !5433, !5434, !5435, !5436, !5437, !5438, !5439, !5440, !5441, !5442, !5443, !5444, !5445, !5446, !5447, !5457, !5461}
!5373 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !5371, file: !54, line: 566, baseType: !5324, size: 32)
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !5371, file: !54, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !5371, file: !54, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !5371, file: !54, line: 569, baseType: !1333, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !5371, file: !54, line: 570, baseType: !1333, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !5371, file: !54, line: 571, baseType: !1333, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !5371, file: !54, line: 572, baseType: !1333, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !5371, file: !54, line: 573, baseType: !1333, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !5371, file: !54, line: 574, baseType: !1333, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !5371, file: !54, line: 575, baseType: !1333, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !5371, file: !54, line: 576, baseType: !1333, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !5371, file: !54, line: 577, baseType: !1042, size: 32, offset: 64)
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5371, file: !54, line: 578, baseType: !1087, offset: 96)
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !5371, file: !54, line: 580, baseType: !976, size: 128, offset: 128)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !5371, file: !54, line: 581, baseType: !2405, size: 192, offset: 256)
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !5371, file: !54, line: 582, baseType: !5389, size: 64, offset: 448)
!5389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5390, size: 64)
!5390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !5391, line: 43, size: 1472, elements: !5392)
!5391 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!5392 = !{!5393, !5394, !5395, !5396, !5397, !5400, !5401, !5402, !5403, !5404, !5405, !5406, !5407, !5408, !5409, !5410, !5411, !5412, !5413, !5414}
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5390, file: !5391, line: 44, baseType: !1008, size: 64)
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5390, file: !5391, line: 45, baseType: !206, size: 32, offset: 64)
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !5390, file: !5391, line: 46, baseType: !976, size: 128, offset: 128)
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5390, file: !5391, line: 47, baseType: !1087, offset: 256)
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !5390, file: !5391, line: 48, baseType: !5398, size: 64, offset: 256)
!5398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5399, size: 64)
!5399 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !54, line: 533, flags: DIFlagFwdDecl)
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !5390, file: !5391, line: 49, baseType: !3009, size: 320, offset: 320)
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !5390, file: !5391, line: 50, baseType: !1012, size: 64, offset: 640)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !5390, file: !5391, line: 51, baseType: !2205, size: 64, offset: 704)
!5403 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !5390, file: !5391, line: 52, baseType: !2205, size: 64, offset: 768)
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !5390, file: !5391, line: 53, baseType: !2205, size: 64, offset: 832)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !5390, file: !5391, line: 54, baseType: !2205, size: 64, offset: 896)
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !5390, file: !5391, line: 55, baseType: !2205, size: 64, offset: 960)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !5390, file: !5391, line: 56, baseType: !1012, size: 64, offset: 1024)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !5390, file: !5391, line: 57, baseType: !1012, size: 64, offset: 1088)
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !5390, file: !5391, line: 58, baseType: !1012, size: 64, offset: 1152)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !5390, file: !5391, line: 59, baseType: !1012, size: 64, offset: 1216)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !5390, file: !5391, line: 60, baseType: !1012, size: 64, offset: 1280)
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5390, file: !5391, line: 61, baseType: !1070, size: 64, offset: 1344)
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !5390, file: !5391, line: 62, baseType: !1333, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !5390, file: !5391, line: 63, baseType: !1333, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !5371, file: !54, line: 583, baseType: !1333, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!5416 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !5371, file: !54, line: 584, baseType: !1333, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!5417 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !5371, file: !54, line: 585, baseType: !1333, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !5371, file: !54, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !5371, file: !54, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !5371, file: !54, line: 592, baseType: !2197, size: 512, offset: 576)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !5371, file: !54, line: 593, baseType: !1001, size: 64, offset: 1088)
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !5371, file: !54, line: 594, baseType: !2897, size: 256, offset: 1152)
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !5371, file: !54, line: 595, baseType: !2385, size: 128, offset: 1408)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !5371, file: !54, line: 596, baseType: !5398, size: 64, offset: 1536)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !5371, file: !54, line: 597, baseType: !1642, size: 32, offset: 1600)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !5371, file: !54, line: 598, baseType: !1642, size: 32, offset: 1632)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !5371, file: !54, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !5371, file: !54, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !5371, file: !54, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !5371, file: !54, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !5371, file: !54, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !5371, file: !54, line: 604, baseType: !1333, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !5371, file: !54, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !5371, file: !54, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !5371, file: !54, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !5371, file: !54, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !5371, file: !54, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !5371, file: !54, line: 610, baseType: !7, size: 32, offset: 1696)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !5371, file: !54, line: 611, baseType: !53, size: 32, offset: 1728)
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !5371, file: !54, line: 612, baseType: !61, size: 32, offset: 1760)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !5371, file: !54, line: 613, baseType: !206, size: 32, offset: 1792)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !5371, file: !54, line: 614, baseType: !206, size: 32, offset: 1824)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !5371, file: !54, line: 615, baseType: !1001, size: 64, offset: 1856)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !5371, file: !54, line: 616, baseType: !1001, size: 64, offset: 1920)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !5371, file: !54, line: 617, baseType: !1001, size: 64, offset: 1984)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !5371, file: !54, line: 618, baseType: !1001, size: 64, offset: 2048)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !5371, file: !54, line: 620, baseType: !5448, size: 64, offset: 2112)
!5448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5449, size: 64)
!5449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !54, line: 536, size: 256, elements: !5450)
!5450 = !{!5451, !5452, !5453, !5454}
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5449, file: !54, line: 537, baseType: !1087)
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !5449, file: !54, line: 538, baseType: !7, size: 32)
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !5449, file: !54, line: 540, baseType: !976, size: 128, offset: 64)
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !5449, file: !54, line: 543, baseType: !5455, size: 64, offset: 192)
!5455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5456, size: 64)
!5456 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !54, line: 534, flags: DIFlagFwdDecl)
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !5371, file: !54, line: 621, baseType: !5458, size: 64, offset: 2176)
!5458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5459, size: 64)
!5459 = !DISubroutineType(types: !5460)
!5460 = !{null, !1070, !2348}
!5461 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !5371, file: !54, line: 622, baseType: !5462, size: 64, offset: 2240)
!5462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5463, size: 64)
!5463 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !54, line: 622, flags: DIFlagFwdDecl)
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !1071, file: !47, line: 486, baseType: !5465, size: 64, offset: 4096)
!5465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5466, size: 64)
!5466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !54, line: 642, size: 1792, elements: !5467)
!5467 = !{!5468, !5469, !5470, !5474, !5475, !5476}
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5466, file: !54, line: 643, baseType: !5238, size: 1472)
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5466, file: !54, line: 644, baseType: !5241, size: 64, offset: 1472)
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !5466, file: !54, line: 645, baseType: !5471, size: 64, offset: 1536)
!5471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5472, size: 64)
!5472 = !DISubroutineType(types: !5473)
!5473 = !{null, !1070, !1333}
!5474 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !5466, file: !54, line: 646, baseType: !5241, size: 64, offset: 1600)
!5475 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !5466, file: !54, line: 647, baseType: !5232, size: 64, offset: 1664)
!5476 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !5466, file: !54, line: 648, baseType: !5232, size: 64, offset: 1728)
!5477 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !1071, file: !47, line: 493, baseType: !5478, size: 64, offset: 4160)
!5478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5479, size: 64)
!5479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !68, line: 162, size: 1088, elements: !5480)
!5480 = !{!5481, !5482, !5483, !5656, !5657, !5658, !5659, !5660, !5661, !5664, !5665, !5666, !5667, !5668, !5669, !5670}
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !5479, file: !68, line: 163, baseType: !976, size: 128)
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5479, file: !68, line: 164, baseType: !1008, size: 64, offset: 128)
!5483 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5479, file: !68, line: 165, baseType: !5484, size: 64, offset: 192)
!5484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5485, size: 64)
!5485 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5486)
!5486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !68, line: 105, size: 640, elements: !5487)
!5487 = !{!5488, !5606, !5617, !5622, !5626, !5633, !5637, !5641, !5648, !5652}
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !5486, file: !68, line: 106, baseType: !5489, size: 64)
!5489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5490, size: 64)
!5490 = !DISubroutineType(types: !5491)
!5491 = !{!206, !5478, !5492, !67}
!5492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5493, size: 64)
!5493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !5494, line: 51, size: 1344, elements: !5495)
!5494 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!5495 = !{!5496, !5497, !5499, !5500, !5590, !5599, !5600, !5601, !5602, !5603, !5604, !5605}
!5496 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5493, file: !5494, line: 52, baseType: !1008, size: 64)
!5497 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !5493, file: !5494, line: 53, baseType: !5498, size: 32, offset: 64)
!5498 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !5494, line: 28, baseType: !1042)
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !5493, file: !5494, line: 54, baseType: !1008, size: 64, offset: 128)
!5500 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !5493, file: !5494, line: 55, baseType: !5501, size: 192, offset: 192)
!5501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !5502, line: 17, size: 192, elements: !5503)
!5502 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!5503 = !{!5504, !5506, !5589}
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !5501, file: !5502, line: 18, baseType: !5505, size: 64)
!5505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5501, size: 64)
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5501, file: !5502, line: 19, baseType: !5507, size: 64, offset: 64)
!5507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5508, size: 64)
!5508 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5509)
!5509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !5502, line: 110, size: 1152, elements: !5510)
!5510 = !{!5511, !5515, !5519, !5525, !5531, !5535, !5539, !5544, !5548, !5549, !5553, !5557, !5561, !5572, !5573, !5574, !5575, !5585}
!5511 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !5509, file: !5502, line: 111, baseType: !5512, size: 64)
!5512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5513, size: 64)
!5513 = !DISubroutineType(types: !5514)
!5514 = !{!5505, !5505}
!5515 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !5509, file: !5502, line: 112, baseType: !5516, size: 64, offset: 64)
!5516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5517, size: 64)
!5517 = !DISubroutineType(types: !5518)
!5518 = !{null, !5505}
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !5509, file: !5502, line: 113, baseType: !5520, size: 64, offset: 128)
!5520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5521, size: 64)
!5521 = !DISubroutineType(types: !5522)
!5522 = !{!1333, !5523}
!5523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5524, size: 64)
!5524 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5501)
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !5509, file: !5502, line: 114, baseType: !5526, size: 64, offset: 192)
!5526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5527, size: 64)
!5527 = !DISubroutineType(types: !5528)
!5528 = !{!4014, !5523, !5529}
!5529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5530, size: 64)
!5530 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1071)
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !5509, file: !5502, line: 116, baseType: !5532, size: 64, offset: 256)
!5532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5533, size: 64)
!5533 = !DISubroutineType(types: !5534)
!5534 = !{!1333, !5523, !1008}
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !5509, file: !5502, line: 118, baseType: !5536, size: 64, offset: 320)
!5536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5537, size: 64)
!5537 = !DISubroutineType(types: !5538)
!5538 = !{!206, !5523, !1008, !7, !970, !1173}
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !5509, file: !5502, line: 123, baseType: !5540, size: 64, offset: 384)
!5540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5541, size: 64)
!5541 = !DISubroutineType(types: !5542)
!5542 = !{!206, !5523, !1008, !5543, !1173}
!5543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !5509, file: !5502, line: 126, baseType: !5545, size: 64, offset: 448)
!5545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5546, size: 64)
!5546 = !DISubroutineType(types: !5547)
!5547 = !{!1008, !5523}
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !5509, file: !5502, line: 127, baseType: !5545, size: 64, offset: 512)
!5549 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !5509, file: !5502, line: 128, baseType: !5550, size: 64, offset: 576)
!5550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5551, size: 64)
!5551 = !DISubroutineType(types: !5552)
!5552 = !{!5505, !5523}
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !5509, file: !5502, line: 130, baseType: !5554, size: 64, offset: 640)
!5554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5555, size: 64)
!5555 = !DISubroutineType(types: !5556)
!5556 = !{!5505, !5523, !5505}
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !5509, file: !5502, line: 133, baseType: !5558, size: 64, offset: 704)
!5558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5559, size: 64)
!5559 = !DISubroutineType(types: !5560)
!5560 = !{!5505, !5523, !1008}
!5561 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !5509, file: !5502, line: 135, baseType: !5562, size: 64, offset: 768)
!5562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5563, size: 64)
!5563 = !DISubroutineType(types: !5564)
!5564 = !{!206, !5523, !1008, !1008, !7, !7, !5565}
!5565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5566, size: 64)
!5566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !5502, line: 43, size: 640, elements: !5567)
!5567 = !{!5568, !5569, !5570}
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !5566, file: !5502, line: 44, baseType: !5505, size: 64)
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !5566, file: !5502, line: 45, baseType: !7, size: 32, offset: 64)
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !5566, file: !5502, line: 46, baseType: !5571, size: 512, offset: 128)
!5571 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1001, size: 512, elements: !2235)
!5572 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !5509, file: !5502, line: 140, baseType: !5554, size: 64, offset: 832)
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !5509, file: !5502, line: 143, baseType: !5550, size: 64, offset: 896)
!5574 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !5509, file: !5502, line: 145, baseType: !5512, size: 64, offset: 960)
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !5509, file: !5502, line: 146, baseType: !5576, size: 64, offset: 1024)
!5576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5577, size: 64)
!5577 = !DISubroutineType(types: !5578)
!5578 = !{!206, !5523, !5579}
!5579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5580, size: 64)
!5580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !5502, line: 29, size: 128, elements: !5581)
!5581 = !{!5582, !5583, !5584}
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !5580, file: !5502, line: 30, baseType: !7, size: 32)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5580, file: !5502, line: 31, baseType: !7, size: 32, offset: 32)
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !5580, file: !5502, line: 32, baseType: !5523, size: 64, offset: 64)
!5585 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !5509, file: !5502, line: 148, baseType: !5586, size: 64, offset: 1088)
!5586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5587, size: 64)
!5587 = !DISubroutineType(types: !5588)
!5588 = !{!206, !5523, !1070}
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5501, file: !5502, line: 20, baseType: !1070, size: 64, offset: 128)
!5590 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !5493, file: !5494, line: 57, baseType: !5591, size: 64, offset: 384)
!5591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5592, size: 64)
!5592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !5494, line: 31, size: 704, elements: !5593)
!5593 = !{!5594, !5595, !5596, !5597, !5598}
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5592, file: !5494, line: 32, baseType: !1128, size: 64)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5592, file: !5494, line: 33, baseType: !206, size: 32, offset: 64)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5592, file: !5494, line: 34, baseType: !970, size: 64, offset: 128)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5592, file: !5494, line: 35, baseType: !5591, size: 64, offset: 192)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5592, file: !5494, line: 43, baseType: !1194, size: 448, offset: 256)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !5493, file: !5494, line: 58, baseType: !5591, size: 64, offset: 448)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5493, file: !5494, line: 59, baseType: !5492, size: 64, offset: 512)
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !5493, file: !5494, line: 60, baseType: !5492, size: 64, offset: 576)
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !5493, file: !5494, line: 61, baseType: !5492, size: 64, offset: 640)
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5493, file: !5494, line: 63, baseType: !1074, size: 512, offset: 704)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5493, file: !5494, line: 65, baseType: !1012, size: 64, offset: 1216)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5493, file: !5494, line: 66, baseType: !970, size: 64, offset: 1280)
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !5486, file: !68, line: 108, baseType: !5607, size: 64, offset: 64)
!5607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5608, size: 64)
!5608 = !DISubroutineType(types: !5609)
!5609 = !{!206, !5478, !5610, !67}
!5610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5611, size: 64)
!5611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !68, line: 63, size: 640, elements: !5612)
!5612 = !{!5613, !5614, !5615}
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !5611, file: !68, line: 64, baseType: !5505, size: 64)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !5611, file: !68, line: 65, baseType: !206, size: 32, offset: 64)
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !5611, file: !68, line: 66, baseType: !5616, size: 512, offset: 96)
!5616 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1042, size: 512, elements: !2638)
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !5486, file: !68, line: 110, baseType: !5618, size: 64, offset: 128)
!5618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5619, size: 64)
!5619 = !DISubroutineType(types: !5620)
!5620 = !{!206, !5478, !7, !5621}
!5621 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !977, line: 164, baseType: !1012)
!5622 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !5486, file: !68, line: 111, baseType: !5623, size: 64, offset: 192)
!5623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5624, size: 64)
!5624 = !DISubroutineType(types: !5625)
!5625 = !{null, !5478, !7}
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !5486, file: !68, line: 112, baseType: !5627, size: 64, offset: 256)
!5627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5628, size: 64)
!5628 = !DISubroutineType(types: !5629)
!5629 = !{!206, !5478, !5492, !5630, !7, !5632, !3505}
!5630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5631, size: 64)
!5631 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1042)
!5632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !5486, file: !68, line: 117, baseType: !5634, size: 64, offset: 320)
!5634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5635, size: 64)
!5635 = !DISubroutineType(types: !5636)
!5636 = !{!206, !5478, !7, !7, !970}
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !5486, file: !68, line: 119, baseType: !5638, size: 64, offset: 384)
!5638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5639, size: 64)
!5639 = !DISubroutineType(types: !5640)
!5640 = !{null, !5478, !7, !7}
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !5486, file: !68, line: 121, baseType: !5642, size: 64, offset: 448)
!5642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5643, size: 64)
!5643 = !DISubroutineType(types: !5644)
!5644 = !{!206, !5478, !5645, !1333}
!5645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5646, size: 64)
!5646 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !5647, line: 11, flags: DIFlagFwdDecl)
!5647 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!5648 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !5486, file: !68, line: 122, baseType: !5649, size: 64, offset: 512)
!5649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5650, size: 64)
!5650 = !DISubroutineType(types: !5651)
!5651 = !{null, !5478, !5645}
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !5486, file: !68, line: 123, baseType: !5653, size: 64, offset: 576)
!5653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5654, size: 64)
!5654 = !DISubroutineType(types: !5655)
!5655 = !{!206, !5478, !5610, !5632, !3505}
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !5479, file: !68, line: 166, baseType: !970, size: 64, offset: 256)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5479, file: !68, line: 167, baseType: !7, size: 32, offset: 320)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !5479, file: !68, line: 168, baseType: !7, size: 32, offset: 352)
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !5479, file: !68, line: 171, baseType: !5505, size: 64, offset: 384)
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !5479, file: !68, line: 172, baseType: !67, size: 32, offset: 448)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !5479, file: !68, line: 173, baseType: !5662, size: 64, offset: 512)
!5662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5663, size: 64)
!5663 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !68, line: 134, flags: DIFlagFwdDecl)
!5664 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5479, file: !68, line: 175, baseType: !5478, size: 64, offset: 576)
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !5479, file: !68, line: 182, baseType: !5621, size: 64, offset: 640)
!5666 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !5479, file: !68, line: 183, baseType: !7, size: 32, offset: 704)
!5667 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !5479, file: !68, line: 184, baseType: !7, size: 32, offset: 736)
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !5479, file: !68, line: 185, baseType: !1633, size: 128, offset: 768)
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !5479, file: !68, line: 186, baseType: !1568, size: 192, offset: 896)
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !5479, file: !68, line: 187, baseType: !5671, offset: 1088)
!5671 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !2913)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !1071, file: !47, line: 499, baseType: !976, size: 128, offset: 4224)
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !1071, file: !47, line: 502, baseType: !5674, size: 64, offset: 4352)
!5674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5675, size: 64)
!5675 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5676)
!5676 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !47, line: 502, flags: DIFlagFwdDecl)
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !1071, file: !47, line: 504, baseType: !5678, size: 64, offset: 4416)
!5678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 64)
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !1071, file: !47, line: 505, baseType: !1001, size: 64, offset: 4480)
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !1071, file: !47, line: 510, baseType: !1001, size: 64, offset: 4544)
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !1071, file: !47, line: 511, baseType: !5682, size: 64, offset: 4608)
!5682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5683, size: 64)
!5683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5684)
!5684 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !47, line: 511, flags: DIFlagFwdDecl)
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !1071, file: !47, line: 513, baseType: !5686, size: 64, offset: 4672)
!5686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5687, size: 64)
!5687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !47, line: 288, size: 128, elements: !5688)
!5688 = !{!5689, !5690}
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !5687, file: !47, line: 293, baseType: !7, size: 32)
!5690 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !5687, file: !47, line: 294, baseType: !1012, size: 64, offset: 64)
!5691 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !1071, file: !47, line: 515, baseType: !976, size: 128, offset: 4736)
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !1071, file: !47, line: 526, baseType: !5693, offset: 4864)
!5693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !5694, line: 5, elements: !1101)
!5694 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!5695 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !1071, file: !47, line: 528, baseType: !5492, size: 64, offset: 4864)
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !1071, file: !47, line: 529, baseType: !5505, size: 64, offset: 4928)
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !1071, file: !47, line: 534, baseType: !1356, size: 32, offset: 4992)
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1071, file: !47, line: 535, baseType: !1042, size: 32, offset: 5024)
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !1071, file: !47, line: 537, baseType: !1087, offset: 5056)
!5700 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !1071, file: !47, line: 538, baseType: !976, size: 128, offset: 5056)
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !1071, file: !47, line: 540, baseType: !5702, size: 64, offset: 5184)
!5702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5703, size: 64)
!5703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !5704, line: 54, size: 960, elements: !5705)
!5704 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!5705 = !{!5706, !5707, !5708, !5709, !5710, !5711, !5712, !5716, !5720, !5721, !5722, !5723, !5727, !5731, !5732}
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5703, file: !5704, line: 55, baseType: !1008, size: 64)
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5703, file: !5704, line: 56, baseType: !1475, size: 64, offset: 64)
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !5703, file: !5704, line: 58, baseType: !1179, size: 64, offset: 128)
!5709 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !5703, file: !5704, line: 59, baseType: !1179, size: 64, offset: 192)
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !5703, file: !5704, line: 60, baseType: !1080, size: 64, offset: 256)
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !5703, file: !5704, line: 62, baseType: !5224, size: 64, offset: 320)
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !5703, file: !5704, line: 63, baseType: !5713, size: 64, offset: 384)
!5713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5714, size: 64)
!5714 = !DISubroutineType(types: !5715)
!5715 = !{!1128, !1070, !3099}
!5716 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !5703, file: !5704, line: 65, baseType: !5717, size: 64, offset: 448)
!5717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5718, size: 64)
!5718 = !DISubroutineType(types: !5719)
!5719 = !{null, !5702}
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !5703, file: !5704, line: 66, baseType: !5232, size: 64, offset: 512)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !5703, file: !5704, line: 68, baseType: !5241, size: 64, offset: 576)
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !5703, file: !5704, line: 70, baseType: !5043, size: 64, offset: 640)
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !5703, file: !5704, line: 71, baseType: !5724, size: 64, offset: 704)
!5724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5725, size: 64)
!5725 = !DISubroutineType(types: !5726)
!5726 = !{!4014, !1070}
!5727 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !5703, file: !5704, line: 73, baseType: !5728, size: 64, offset: 768)
!5728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5729, size: 64)
!5729 = !DISubroutineType(types: !5730)
!5730 = !{null, !1070, !5075, !5076}
!5731 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !5703, file: !5704, line: 75, baseType: !5236, size: 64, offset: 832)
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5703, file: !5704, line: 77, baseType: !5353, size: 64, offset: 896)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !1071, file: !47, line: 541, baseType: !1179, size: 64, offset: 5248)
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1071, file: !47, line: 543, baseType: !5232, size: 64, offset: 5312)
!5735 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !1071, file: !47, line: 544, baseType: !5736, size: 64, offset: 5376)
!5736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5737, size: 64)
!5737 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !47, line: 45, flags: DIFlagFwdDecl)
!5738 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !1071, file: !47, line: 545, baseType: !5739, size: 64, offset: 5440)
!5739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5740, size: 64)
!5740 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !47, line: 47, flags: DIFlagFwdDecl)
!5741 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !1071, file: !47, line: 547, baseType: !1333, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!5742 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !1071, file: !47, line: 548, baseType: !1333, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!5743 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !1071, file: !47, line: 549, baseType: !1333, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!5744 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !1071, file: !47, line: 550, baseType: !1333, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!5745 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !984, file: !973, line: 635, baseType: !1071, size: 5568, offset: 2304)
!5746 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !984, file: !973, line: 636, baseType: !1193, size: 64, offset: 7872)
!5747 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !984, file: !973, line: 637, baseType: !1193, size: 64, offset: 7936)
!5748 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !984, file: !973, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!5749 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !972, file: !973, line: 312, baseType: !983, size: 64, offset: 192)
!5750 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !972, file: !973, line: 314, baseType: !970, size: 64, offset: 256)
!5751 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !972, file: !973, line: 315, baseType: !1053, size: 64, offset: 320)
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !972, file: !973, line: 316, baseType: !5753, size: 64, offset: 384)
!5753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5754, size: 64)
!5754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !973, line: 69, size: 832, elements: !5755)
!5755 = !{!5756, !5757, !5758, !5761, !5762}
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !5754, file: !973, line: 70, baseType: !983, size: 64)
!5757 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5754, file: !973, line: 71, baseType: !976, size: 128, offset: 64)
!5758 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !5754, file: !973, line: 72, baseType: !5759, size: 64, offset: 192)
!5759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5760, size: 64)
!5760 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !973, line: 72, flags: DIFlagFwdDecl)
!5761 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !5754, file: !973, line: 73, baseType: !1057, size: 8, offset: 256)
!5762 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5754, file: !973, line: 74, baseType: !1074, size: 512, offset: 320)
!5763 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !972, file: !973, line: 318, baseType: !7, size: 32, offset: 448)
!5764 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !972, file: !973, line: 319, baseType: !1066, size: 16, offset: 480)
!5765 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !972, file: !973, line: 320, baseType: !1066, size: 16, offset: 496)
!5766 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !972, file: !973, line: 321, baseType: !1066, size: 16, offset: 512)
!5767 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !972, file: !973, line: 322, baseType: !1066, size: 16, offset: 528)
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !972, file: !973, line: 323, baseType: !7, size: 32, offset: 544)
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !972, file: !973, line: 324, baseType: !2257, size: 8, offset: 576)
!5770 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !972, file: !973, line: 325, baseType: !2257, size: 8, offset: 584)
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !972, file: !973, line: 330, baseType: !2257, size: 8, offset: 592)
!5772 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !972, file: !973, line: 331, baseType: !2257, size: 8, offset: 600)
!5773 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !972, file: !973, line: 332, baseType: !2257, size: 8, offset: 608)
!5774 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !972, file: !973, line: 333, baseType: !2257, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!5775 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !972, file: !973, line: 334, baseType: !2257, size: 8, offset: 624)
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !972, file: !973, line: 335, baseType: !2257, size: 8, offset: 632)
!5777 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !972, file: !973, line: 336, baseType: !1754, size: 16, offset: 640)
!5778 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !972, file: !973, line: 337, baseType: !5632, size: 64, offset: 704)
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !972, file: !973, line: 339, baseType: !5780, size: 64, offset: 768)
!5780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5781, size: 64)
!5781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !973, line: 858, size: 2048, elements: !5782)
!5782 = !{!5783, !5784, !5785, !5797, !5801, !5805, !5809, !5813, !5814, !5818, !5837, !5838, !5839}
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5781, file: !973, line: 859, baseType: !976, size: 128)
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5781, file: !973, line: 860, baseType: !1008, size: 64, offset: 128)
!5785 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !5781, file: !973, line: 861, baseType: !5786, size: 64, offset: 192)
!5786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5787, size: 64)
!5787 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5788)
!5788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !5294, line: 38, size: 256, elements: !5789)
!5789 = !{!5790, !5791, !5792, !5793, !5794, !5795, !5796}
!5790 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !5788, file: !5294, line: 39, baseType: !1043, size: 32)
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !5788, file: !5294, line: 39, baseType: !1043, size: 32, offset: 32)
!5792 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !5788, file: !5294, line: 40, baseType: !1043, size: 32, offset: 64)
!5793 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !5788, file: !5294, line: 40, baseType: !1043, size: 32, offset: 96)
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !5788, file: !5294, line: 41, baseType: !1043, size: 32, offset: 128)
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !5788, file: !5294, line: 41, baseType: !1043, size: 32, offset: 160)
!5796 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !5788, file: !5294, line: 42, baseType: !5313, size: 64, offset: 192)
!5797 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !5781, file: !973, line: 862, baseType: !5798, size: 64, offset: 256)
!5798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5799, size: 64)
!5799 = !DISubroutineType(types: !5800)
!5800 = !{!206, !971, !5786}
!5801 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !5781, file: !973, line: 863, baseType: !5802, size: 64, offset: 320)
!5802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5803, size: 64)
!5803 = !DISubroutineType(types: !5804)
!5804 = !{null, !971}
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !5781, file: !973, line: 864, baseType: !5806, size: 64, offset: 384)
!5806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5807, size: 64)
!5807 = !DISubroutineType(types: !5808)
!5808 = !{!206, !971, !5324}
!5809 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !5781, file: !973, line: 865, baseType: !5810, size: 64, offset: 448)
!5810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5811, size: 64)
!5811 = !DISubroutineType(types: !5812)
!5812 = !{!206, !971}
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !5781, file: !973, line: 866, baseType: !5802, size: 64, offset: 512)
!5814 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !5781, file: !973, line: 867, baseType: !5815, size: 64, offset: 576)
!5815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5816, size: 64)
!5816 = !DISubroutineType(types: !5817)
!5817 = !{!206, !971, !206}
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !5781, file: !973, line: 868, baseType: !5819, size: 64, offset: 640)
!5819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5820, size: 64)
!5820 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5821)
!5821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !973, line: 795, size: 384, elements: !5822)
!5822 = !{!5823, !5829, !5833, !5834, !5835, !5836}
!5823 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !5821, file: !973, line: 797, baseType: !5824, size: 64)
!5824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5825, size: 64)
!5825 = !DISubroutineType(types: !5826)
!5826 = !{!5827, !971, !5828}
!5827 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !973, line: 772, baseType: !7)
!5828 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !973, line: 180, baseType: !7)
!5829 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !5821, file: !973, line: 801, baseType: !5830, size: 64, offset: 64)
!5830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5831, size: 64)
!5831 = !DISubroutineType(types: !5832)
!5832 = !{!5827, !971}
!5833 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !5821, file: !973, line: 804, baseType: !5830, size: 64, offset: 128)
!5834 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !5821, file: !973, line: 807, baseType: !5802, size: 64, offset: 192)
!5835 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !5821, file: !973, line: 808, baseType: !5802, size: 64, offset: 256)
!5836 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !5821, file: !973, line: 811, baseType: !5802, size: 64, offset: 320)
!5837 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !5781, file: !973, line: 869, baseType: !1179, size: 64, offset: 704)
!5838 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !5781, file: !973, line: 870, baseType: !5282, size: 1152, offset: 768)
!5839 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !5781, file: !973, line: 871, baseType: !5840, size: 128, offset: 1920)
!5840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !973, line: 759, size: 128, elements: !5841)
!5841 = !{!5842, !5843}
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5840, file: !973, line: 760, baseType: !1087)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5840, file: !973, line: 761, baseType: !976, size: 128)
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !972, file: !973, line: 340, baseType: !1001, size: 64, offset: 832)
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !972, file: !973, line: 346, baseType: !5687, size: 128, offset: 896)
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !972, file: !973, line: 348, baseType: !5847, size: 32, offset: 1024)
!5847 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !973, line: 155, baseType: !206)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !972, file: !973, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!5849 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !972, file: !973, line: 352, baseType: !2257, size: 8, offset: 1064)
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !972, file: !973, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !972, file: !973, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !972, file: !973, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !972, file: !973, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !972, file: !973, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !972, file: !973, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !972, file: !973, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !972, file: !973, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!5858 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !972, file: !973, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!5859 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !972, file: !973, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!5860 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !972, file: !973, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !972, file: !973, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !972, file: !973, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!5863 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !972, file: !973, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!5864 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !972, file: !973, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!5865 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !972, file: !973, line: 376, baseType: !7, size: 32, offset: 1120)
!5866 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !972, file: !973, line: 377, baseType: !7, size: 32, offset: 1152)
!5867 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !972, file: !973, line: 380, baseType: !5868, size: 64, offset: 1216)
!5868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5869, size: 64)
!5869 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !973, line: 303, flags: DIFlagFwdDecl)
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !972, file: !973, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!5871 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !972, file: !973, line: 383, baseType: !206, size: 32, offset: 1312)
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !972, file: !973, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !972, file: !973, line: 387, baseType: !5828, size: 32, offset: 1376)
!5874 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !972, file: !973, line: 388, baseType: !1071, size: 5568, offset: 1408)
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !972, file: !973, line: 390, baseType: !206, size: 32, offset: 6976)
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !972, file: !973, line: 396, baseType: !7, size: 32, offset: 7008)
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !972, file: !973, line: 397, baseType: !5878, size: 8704, offset: 7040)
!5878 = !DICompositeType(tag: DW_TAG_array_type, baseType: !995, size: 8704, elements: !5879)
!5879 = !{!5880}
!5880 = !DISubrange(count: 17)
!5881 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !972, file: !973, line: 399, baseType: !1333, size: 8, offset: 15744)
!5882 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !972, file: !973, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !972, file: !973, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !972, file: !973, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!5885 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !972, file: !973, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !972, file: !973, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !972, file: !973, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!5888 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !972, file: !973, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!5889 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !972, file: !973, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!5890 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !972, file: !973, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!5891 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !972, file: !973, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!5892 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !972, file: !973, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!5893 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !972, file: !973, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!5894 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !972, file: !973, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!5895 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !972, file: !973, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!5896 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !972, file: !973, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!5897 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !972, file: !973, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !972, file: !973, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !972, file: !973, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !972, file: !973, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!5901 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !972, file: !973, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !972, file: !973, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !972, file: !973, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !972, file: !973, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !972, file: !973, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!5906 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !972, file: !973, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!5907 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !972, file: !973, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!5908 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !972, file: !973, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!5909 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !972, file: !973, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !972, file: !973, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!5911 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !972, file: !973, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!5912 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !972, file: !973, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!5913 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !972, file: !973, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!5914 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !972, file: !973, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!5915 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !972, file: !973, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !972, file: !973, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !972, file: !973, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !972, file: !973, line: 450, baseType: !5919, size: 16, offset: 15792)
!5919 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !973, line: 206, baseType: !1066)
!5920 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !972, file: !973, line: 451, baseType: !1642, size: 32, offset: 15808)
!5921 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !972, file: !973, line: 453, baseType: !5616, size: 512, offset: 15840)
!5922 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !972, file: !973, line: 454, baseType: !1480, size: 64, offset: 16384)
!5923 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !972, file: !973, line: 455, baseType: !1193, size: 64, offset: 16448)
!5924 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !972, file: !973, line: 456, baseType: !206, size: 32, offset: 16512)
!5925 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !972, file: !973, line: 457, baseType: !5926, size: 1088, offset: 16576)
!5926 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1193, size: 1088, elements: !5879)
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !972, file: !973, line: 458, baseType: !5926, size: 1088, offset: 17664)
!5928 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !972, file: !973, line: 469, baseType: !1179, size: 64, offset: 18752)
!5929 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !972, file: !973, line: 471, baseType: !5930, size: 64, offset: 18816)
!5930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5931, size: 64)
!5931 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !973, line: 304, flags: DIFlagFwdDecl)
!5932 = !DIDerivedType(tag: DW_TAG_member, scope: !972, file: !973, line: 478, baseType: !5933, size: 64, offset: 18880)
!5933 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !972, file: !973, line: 478, size: 64, elements: !5934)
!5934 = !{!5935, !5938}
!5935 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !5933, file: !973, line: 479, baseType: !5936, size: 64)
!5936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5937, size: 64)
!5937 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !973, line: 305, flags: DIFlagFwdDecl)
!5938 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !5933, file: !973, line: 480, baseType: !971, size: 64)
!5939 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !972, file: !973, line: 482, baseType: !1754, size: 16, offset: 18944)
!5940 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !972, file: !973, line: 483, baseType: !2257, size: 8, offset: 18960)
!5941 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !972, file: !973, line: 497, baseType: !1754, size: 16, offset: 18976)
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !972, file: !973, line: 498, baseType: !1000, size: 64, offset: 19008)
!5943 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !972, file: !973, line: 499, baseType: !1173, size: 64, offset: 19072)
!5944 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !972, file: !973, line: 500, baseType: !1128, size: 64, offset: 19136)
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !972, file: !973, line: 502, baseType: !1012, size: 64, offset: 19200)
!5946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5947, size: 64)
!5947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_cmnd", file: !5948, line: 68, size: 3136, elements: !5949)
!5948 = !DIFile(filename: "./include/scsi/scsi_cmnd.h", directory: "/home/lizy2001/genbc/linux")
!5949 = !{!5950, !5964, !6313, !6314, !6315, !6316, !6317, !6318, !6319, !6320, !6321, !6322, !6323, !6324, !6325, !6326, !6345, !6347, !6348, !6349, !6350, !6351, !6355, !6369, !6370, !6371, !6372, !6373, !6374}
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "req", scope: !5947, file: !5948, line: 69, baseType: !5951, size: 448)
!5951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_request", file: !5952, line: 9, size: 448, elements: !5953)
!5952 = !DIFile(filename: "./include/scsi/scsi_request.h", directory: "/home/lizy2001/genbc/linux")
!5953 = !{!5954, !5956, !5958, !5959, !5960, !5961, !5962, !5963}
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "__cmd", scope: !5951, file: !5952, line: 10, baseType: !5955, size: 128)
!5955 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1057, size: 128, elements: !2638)
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5951, file: !5952, line: 11, baseType: !5957, size: 64, offset: 128)
!5957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 64)
!5958 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_len", scope: !5951, file: !5952, line: 12, baseType: !1066, size: 16, offset: 192)
!5959 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !5951, file: !5952, line: 13, baseType: !206, size: 32, offset: 224)
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "sense_len", scope: !5951, file: !5952, line: 14, baseType: !7, size: 32, offset: 256)
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "resid_len", scope: !5951, file: !5952, line: 15, baseType: !7, size: 32, offset: 288)
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !5951, file: !5952, line: 16, baseType: !206, size: 32, offset: 320)
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "sense", scope: !5951, file: !5952, line: 17, baseType: !970, size: 64, offset: 384)
!5964 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !5947, file: !5948, line: 70, baseType: !5965, size: 64, offset: 448)
!5965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5966, size: 64)
!5966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_device", file: !142, line: 101, size: 15232, align: 64, elements: !5967)
!5967 = !{!5968, !6192, !6193, !6194, !6195, !6196, !6197, !6198, !6199, !6200, !6201, !6202, !6203, !6204, !6205, !6206, !6207, !6208, !6209, !6210, !6211, !6212, !6213, !6214, !6215, !6216, !6217, !6218, !6219, !6220, !6221, !6222, !6230, !6231, !6232, !6233, !6234, !6235, !6237, !6238, !6239, !6240, !6241, !6242, !6243, !6244, !6245, !6246, !6247, !6248, !6249, !6250, !6251, !6252, !6253, !6254, !6255, !6256, !6257, !6258, !6259, !6260, !6261, !6262, !6263, !6264, !6265, !6266, !6267, !6268, !6269, !6270, !6271, !6272, !6273, !6274, !6275, !6276, !6277, !6278, !6279, !6280, !6281, !6282, !6283, !6284, !6285, !6286, !6287, !6288, !6289, !6290, !6291, !6292, !6293, !6294, !6295, !6296, !6297, !6301, !6302, !6305, !6306, !6307, !6308, !6309, !6310, !6311, !6312}
!5968 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !5966, file: !142, line: 102, baseType: !5969, size: 64)
!5969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5970, size: 64)
!5970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scsi_Host", file: !168, line: 524, size: 16256, elements: !5971)
!5971 = !{!5972, !5973, !5974, !5975, !5976, !5977, !5978, !5979, !5980, !5981, !5982, !6138, !6141, !6142, !6143, !6144, !6145, !6146, !6147, !6148, !6149, !6150, !6151, !6152, !6153, !6154, !6155, !6156, !6157, !6158, !6159, !6160, !6161, !6162, !6163, !6164, !6165, !6166, !6167, !6168, !6169, !6170, !6171, !6172, !6173, !6174, !6176, !6177, !6178, !6179, !6180, !6181, !6182, !6183, !6184, !6185, !6186, !6187, !6188, !6189, !6190, !6191}
!5972 = !DIDerivedType(tag: DW_TAG_member, name: "__devices", scope: !5970, file: !168, line: 533, baseType: !976, size: 128)
!5973 = !DIDerivedType(tag: DW_TAG_member, name: "__targets", scope: !5970, file: !168, line: 534, baseType: !976, size: 128, offset: 128)
!5974 = !DIDerivedType(tag: DW_TAG_member, name: "starved_list", scope: !5970, file: !168, line: 536, baseType: !976, size: 128, offset: 256)
!5975 = !DIDerivedType(tag: DW_TAG_member, name: "default_lock", scope: !5970, file: !168, line: 538, baseType: !1087, offset: 384)
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "host_lock", scope: !5970, file: !168, line: 539, baseType: !1977, size: 64, offset: 384)
!5977 = !DIDerivedType(tag: DW_TAG_member, name: "scan_mutex", scope: !5970, file: !168, line: 541, baseType: !1568, size: 192, offset: 448)
!5978 = !DIDerivedType(tag: DW_TAG_member, name: "eh_cmd_q", scope: !5970, file: !168, line: 543, baseType: !976, size: 128, offset: 640)
!5979 = !DIDerivedType(tag: DW_TAG_member, name: "ehandler", scope: !5970, file: !168, line: 544, baseType: !2121, size: 64, offset: 768)
!5980 = !DIDerivedType(tag: DW_TAG_member, name: "eh_action", scope: !5970, file: !168, line: 545, baseType: !2404, size: 64, offset: 832)
!5981 = !DIDerivedType(tag: DW_TAG_member, name: "host_wait", scope: !5970, file: !168, line: 547, baseType: !2385, size: 128, offset: 896)
!5982 = !DIDerivedType(tag: DW_TAG_member, name: "hostt", scope: !5970, file: !168, line: 548, baseType: !5983, size: 64, offset: 1024)
!5983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5984, size: 64)
!5984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_host_template", file: !168, line: 32, size: 2880, elements: !5985)
!5985 = !{!5986, !5987, !5988, !5992, !5996, !6000, !6001, !6002, !6006, !6010, !6011, !6012, !6013, !6014, !6018, !6019, !6023, !6050, !6054, !6058, !6062, !6066, !6070, !6074, !6078, !6079, !6083, !6087, !6091, !6095, !6096, !6097, !6098, !6099, !6100, !6101, !6102, !6103, !6104, !6105, !6106, !6107, !6108, !6109, !6110, !6111, !6112, !6113, !6114, !6115, !6116, !6130, !6131, !6132, !6133, !6134, !6137}
!5986 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !5984, file: !168, line: 33, baseType: !1475, size: 64)
!5987 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5984, file: !168, line: 34, baseType: !1008, size: 64, offset: 64)
!5988 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5984, file: !168, line: 43, baseType: !5989, size: 64, offset: 128)
!5989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5990, size: 64)
!5990 = !DISubroutineType(types: !5991)
!5991 = !{!1008, !5969}
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !5984, file: !168, line: 50, baseType: !5993, size: 64, offset: 192)
!5993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5994, size: 64)
!5994 = !DISubroutineType(types: !5995)
!5995 = !{!206, !5965, !7, !970}
!5996 = !DIDerivedType(tag: DW_TAG_member, name: "init_cmd_priv", scope: !5984, file: !168, line: 65, baseType: !5997, size: 64, offset: 256)
!5997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5998, size: 64)
!5998 = !DISubroutineType(types: !5999)
!5999 = !{!206, !5969, !5946}
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "exit_cmd_priv", scope: !5984, file: !168, line: 66, baseType: !5997, size: 64, offset: 320)
!6001 = !DIDerivedType(tag: DW_TAG_member, name: "queuecommand", scope: !5984, file: !168, line: 102, baseType: !5997, size: 64, offset: 384)
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "commit_rqs", scope: !5984, file: !168, line: 112, baseType: !6003, size: 64, offset: 448)
!6003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6004, size: 64)
!6004 = !DISubroutineType(types: !6005)
!6005 = !{null, !5969, !1754}
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "eh_abort_handler", scope: !5984, file: !168, line: 132, baseType: !6007, size: 64, offset: 512)
!6007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6008, size: 64)
!6008 = !DISubroutineType(types: !6009)
!6009 = !{!206, !5946}
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "eh_device_reset_handler", scope: !5984, file: !168, line: 133, baseType: !6007, size: 64, offset: 576)
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "eh_target_reset_handler", scope: !5984, file: !168, line: 134, baseType: !6007, size: 64, offset: 640)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "eh_bus_reset_handler", scope: !5984, file: !168, line: 135, baseType: !6007, size: 64, offset: 704)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "eh_host_reset_handler", scope: !5984, file: !168, line: 136, baseType: !6007, size: 64, offset: 768)
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "slave_alloc", scope: !5984, file: !168, line: 164, baseType: !6015, size: 64, offset: 832)
!6015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6016, size: 64)
!6016 = !DISubroutineType(types: !6017)
!6017 = !{!206, !5965}
!6018 = !DIDerivedType(tag: DW_TAG_member, name: "slave_configure", scope: !5984, file: !168, line: 195, baseType: !6015, size: 64, offset: 896)
!6019 = !DIDerivedType(tag: DW_TAG_member, name: "slave_destroy", scope: !5984, file: !168, line: 206, baseType: !6020, size: 64, offset: 960)
!6020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6021, size: 64)
!6021 = !DISubroutineType(types: !6022)
!6022 = !{null, !5965}
!6023 = !DIDerivedType(tag: DW_TAG_member, name: "target_alloc", scope: !5984, file: !168, line: 220, baseType: !6024, size: 64, offset: 1024)
!6024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6025, size: 64)
!6025 = !DISubroutineType(types: !6026)
!6026 = !{!206, !6027}
!6027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6028, size: 64)
!6028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_target", file: !142, line: 289, size: 6272, align: 64, elements: !6029)
!6029 = !{!6030, !6031, !6032, !6033, !6034, !6035, !6036, !6037, !6038, !6039, !6040, !6041, !6042, !6043, !6044, !6045, !6046, !6047, !6048, !6049}
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "starget_sdev_user", scope: !6028, file: !142, line: 290, baseType: !5965, size: 64)
!6031 = !DIDerivedType(tag: DW_TAG_member, name: "siblings", scope: !6028, file: !142, line: 291, baseType: !976, size: 128, offset: 64)
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !6028, file: !142, line: 292, baseType: !976, size: 128, offset: 192)
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6028, file: !142, line: 293, baseType: !1071, size: 5568, offset: 320)
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "reap_ref", scope: !6028, file: !142, line: 294, baseType: !2959, size: 32, offset: 5888)
!6035 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !6028, file: !142, line: 295, baseType: !7, size: 32, offset: 5920)
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6028, file: !142, line: 296, baseType: !7, size: 32, offset: 5952)
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !6028, file: !142, line: 298, baseType: !7, size: 1, offset: 5984, flags: DIFlagBitField, extraData: i64 5984)
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "single_lun", scope: !6028, file: !142, line: 299, baseType: !7, size: 1, offset: 5985, flags: DIFlagBitField, extraData: i64 5984)
!6039 = !DIDerivedType(tag: DW_TAG_member, name: "pdt_1f_for_no_lun", scope: !6028, file: !142, line: 302, baseType: !7, size: 1, offset: 5986, flags: DIFlagBitField, extraData: i64 5984)
!6040 = !DIDerivedType(tag: DW_TAG_member, name: "no_report_luns", scope: !6028, file: !142, line: 304, baseType: !7, size: 1, offset: 5987, flags: DIFlagBitField, extraData: i64 5984)
!6041 = !DIDerivedType(tag: DW_TAG_member, name: "expecting_lun_change", scope: !6028, file: !142, line: 306, baseType: !7, size: 1, offset: 5988, flags: DIFlagBitField, extraData: i64 5984)
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "target_busy", scope: !6028, file: !142, line: 310, baseType: !1642, size: 32, offset: 6016)
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "target_blocked", scope: !6028, file: !142, line: 311, baseType: !1642, size: 32, offset: 6048)
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !6028, file: !142, line: 317, baseType: !7, size: 32, offset: 6080)
!6045 = !DIDerivedType(tag: DW_TAG_member, name: "max_target_blocked", scope: !6028, file: !142, line: 318, baseType: !7, size: 32, offset: 6112)
!6046 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_level", scope: !6028, file: !142, line: 321, baseType: !1010, size: 8, offset: 6144)
!6047 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6028, file: !142, line: 322, baseType: !141, size: 32, offset: 6176)
!6048 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !6028, file: !142, line: 323, baseType: !970, size: 64, offset: 6208)
!6049 = !DIDerivedType(tag: DW_TAG_member, name: "starget_data", scope: !6028, file: !142, line: 324, baseType: !4215, offset: 6272)
!6050 = !DIDerivedType(tag: DW_TAG_member, name: "target_destroy", scope: !5984, file: !168, line: 230, baseType: !6051, size: 64, offset: 1088)
!6051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6052, size: 64)
!6052 = !DISubroutineType(types: !6053)
!6053 = !{null, !6027}
!6054 = !DIDerivedType(tag: DW_TAG_member, name: "scan_finished", scope: !5984, file: !168, line: 241, baseType: !6055, size: 64, offset: 1152)
!6055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6056, size: 64)
!6056 = !DISubroutineType(types: !6057)
!6057 = !{!206, !5969, !1012}
!6058 = !DIDerivedType(tag: DW_TAG_member, name: "scan_start", scope: !5984, file: !168, line: 250, baseType: !6059, size: 64, offset: 1216)
!6059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6060, size: 64)
!6060 = !DISubroutineType(types: !6061)
!6061 = !{null, !5969}
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "change_queue_depth", scope: !5984, file: !168, line: 263, baseType: !6063, size: 64, offset: 1280)
!6063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6064, size: 64)
!6064 = !DISubroutineType(types: !6065)
!6065 = !{!206, !5965, !206}
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "map_queues", scope: !5984, file: !168, line: 271, baseType: !6067, size: 64, offset: 1344)
!6067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6068, size: 64)
!6068 = !DISubroutineType(types: !6069)
!6069 = !{!206, !5969}
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "dma_need_drain", scope: !5984, file: !168, line: 278, baseType: !6071, size: 64, offset: 1408)
!6071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6072, size: 64)
!6072 = !DISubroutineType(types: !6073)
!6073 = !{!1333, !3110}
!6074 = !DIDerivedType(tag: DW_TAG_member, name: "bios_param", scope: !5984, file: !168, line: 288, baseType: !6075, size: 64, offset: 1472)
!6075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6076, size: 64)
!6076 = !DISubroutineType(types: !6077)
!6077 = !{!206, !5965, !2930, !1725, !1550}
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !5984, file: !168, line: 297, baseType: !6020, size: 64, offset: 1536)
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "show_info", scope: !5984, file: !168, line: 306, baseType: !6080, size: 64, offset: 1600)
!6080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6081, size: 64)
!6081 = !DISubroutineType(types: !6082)
!6082 = !{!206, !1556, !5969}
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !5984, file: !168, line: 307, baseType: !6084, size: 64, offset: 1664)
!6084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6085, size: 64)
!6085 = !DISubroutineType(types: !6086)
!6086 = !{!206, !5969, !1128, !206}
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "eh_timed_out", scope: !5984, file: !168, line: 316, baseType: !6088, size: 64, offset: 1728)
!6088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6089, size: 64)
!6089 = !DISubroutineType(types: !6090)
!6090 = !{!94, !5946}
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "host_reset", scope: !5984, file: !168, line: 326, baseType: !6092, size: 64, offset: 1792)
!6092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6093, size: 64)
!6093 = !DISubroutineType(types: !6094)
!6094 = !{!206, !5969, !206}
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "proc_name", scope: !5984, file: !168, line: 334, baseType: !1008, size: 64, offset: 1856)
!6096 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !5984, file: !168, line: 340, baseType: !1053, size: 64, offset: 1920)
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !5984, file: !168, line: 347, baseType: !206, size: 32, offset: 1984)
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "this_id", scope: !5984, file: !168, line: 356, baseType: !206, size: 32, offset: 2016)
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "sg_tablesize", scope: !5984, file: !168, line: 362, baseType: !1066, size: 16, offset: 2048)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "sg_prot_tablesize", scope: !5984, file: !168, line: 363, baseType: !1066, size: 16, offset: 2064)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !5984, file: !168, line: 368, baseType: !7, size: 32, offset: 2080)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !5984, file: !168, line: 373, baseType: !7, size: 32, offset: 2112)
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "dma_boundary", scope: !5984, file: !168, line: 379, baseType: !1012, size: 64, offset: 2176)
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !5984, file: !168, line: 381, baseType: !1012, size: 64, offset: 2240)
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_per_lun", scope: !5984, file: !168, line: 400, baseType: !2110, size: 16, offset: 2304)
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !5984, file: !168, line: 406, baseType: !1057, size: 8, offset: 2320)
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "tag_alloc_policy", scope: !5984, file: !168, line: 409, baseType: !206, size: 32, offset: 2336)
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "track_queue_depth", scope: !5984, file: !168, line: 414, baseType: !7, size: 1, offset: 2368, flags: DIFlagBitField, extraData: i64 2368)
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "supported_mode", scope: !5984, file: !168, line: 419, baseType: !7, size: 2, offset: 2369, flags: DIFlagBitField, extraData: i64 2368)
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "unchecked_isa_dma", scope: !5984, file: !168, line: 424, baseType: !7, size: 1, offset: 2371, flags: DIFlagBitField, extraData: i64 2368)
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "emulated", scope: !5984, file: !168, line: 429, baseType: !7, size: 1, offset: 2372, flags: DIFlagBitField, extraData: i64 2368)
!6112 = !DIDerivedType(tag: DW_TAG_member, name: "skip_settle_delay", scope: !5984, file: !168, line: 434, baseType: !7, size: 1, offset: 2373, flags: DIFlagBitField, extraData: i64 2368)
!6113 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !5984, file: !168, line: 437, baseType: !7, size: 1, offset: 2374, flags: DIFlagBitField, extraData: i64 2368)
!6114 = !DIDerivedType(tag: DW_TAG_member, name: "host_tagset", scope: !5984, file: !168, line: 440, baseType: !7, size: 1, offset: 2375, flags: DIFlagBitField, extraData: i64 2368)
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "max_host_blocked", scope: !5984, file: !168, line: 445, baseType: !7, size: 32, offset: 2400)
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "shost_attrs", scope: !5984, file: !168, line: 459, baseType: !6117, size: 64, offset: 2432)
!6117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6118, size: 64)
!6118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6119, size: 64)
!6119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !47, line: 99, size: 256, elements: !6120)
!6120 = !{!6121, !6122, !6126}
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6119, file: !47, line: 100, baseType: !1164, size: 128)
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !6119, file: !47, line: 101, baseType: !6123, size: 64, offset: 128)
!6123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6124, size: 64)
!6124 = !DISubroutineType(types: !6125)
!6125 = !{!1159, !1070, !6118, !1128}
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !6119, file: !47, line: 103, baseType: !6127, size: 64, offset: 192)
!6127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6128, size: 64)
!6128 = !DISubroutineType(types: !6129)
!6129 = !{!1159, !1070, !6118, !1008, !1173}
!6130 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_attrs", scope: !5984, file: !168, line: 464, baseType: !6117, size: 64, offset: 2496)
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_groups", scope: !5984, file: !168, line: 470, baseType: !1179, size: 64, offset: 2560)
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_id", scope: !5984, file: !168, line: 479, baseType: !1001, size: 64, offset: 2624)
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !5984, file: !168, line: 484, baseType: !7, size: 32, offset: 2688)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_pool", scope: !5984, file: !168, line: 485, baseType: !6135, size: 64, offset: 2752)
!6135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6136, size: 64)
!6136 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_host_cmd_pool", file: !168, line: 19, flags: DIFlagFwdDecl)
!6137 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_autosuspend_delay", scope: !5984, file: !168, line: 488, baseType: !206, size: 32, offset: 2816)
!6138 = !DIDerivedType(tag: DW_TAG_member, name: "transportt", scope: !5970, file: !168, line: 549, baseType: !6139, size: 64, offset: 1088)
!6139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6140, size: 64)
!6140 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_transport_template", file: !168, line: 23, flags: DIFlagFwdDecl)
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !5970, file: !168, line: 552, baseType: !3498, size: 2304, offset: 1152)
!6142 = !DIDerivedType(tag: DW_TAG_member, name: "host_blocked", scope: !5970, file: !168, line: 554, baseType: !1642, size: 32, offset: 3456)
!6143 = !DIDerivedType(tag: DW_TAG_member, name: "host_failed", scope: !5970, file: !168, line: 556, baseType: !7, size: 32, offset: 3488)
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "host_eh_scheduled", scope: !5970, file: !168, line: 558, baseType: !7, size: 32, offset: 3520)
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "host_no", scope: !5970, file: !168, line: 560, baseType: !7, size: 32, offset: 3552)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "eh_deadline", scope: !5970, file: !168, line: 563, baseType: !206, size: 32, offset: 3584)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "last_reset", scope: !5970, file: !168, line: 564, baseType: !1012, size: 64, offset: 3648)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "max_channel", scope: !5970, file: !168, line: 573, baseType: !7, size: 32, offset: 3712)
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "max_id", scope: !5970, file: !168, line: 574, baseType: !7, size: 32, offset: 3744)
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "max_lun", scope: !5970, file: !168, line: 575, baseType: !1001, size: 64, offset: 3776)
!6151 = !DIDerivedType(tag: DW_TAG_member, name: "unique_id", scope: !5970, file: !168, line: 584, baseType: !7, size: 32, offset: 3840)
!6152 = !DIDerivedType(tag: DW_TAG_member, name: "max_cmd_len", scope: !5970, file: !168, line: 593, baseType: !1066, size: 16, offset: 3872)
!6153 = !DIDerivedType(tag: DW_TAG_member, name: "this_id", scope: !5970, file: !168, line: 595, baseType: !206, size: 32, offset: 3904)
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "can_queue", scope: !5970, file: !168, line: 596, baseType: !206, size: 32, offset: 3936)
!6155 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_per_lun", scope: !5970, file: !168, line: 597, baseType: !2110, size: 16, offset: 3968)
!6156 = !DIDerivedType(tag: DW_TAG_member, name: "sg_tablesize", scope: !5970, file: !168, line: 598, baseType: !1066, size: 16, offset: 3984)
!6157 = !DIDerivedType(tag: DW_TAG_member, name: "sg_prot_tablesize", scope: !5970, file: !168, line: 599, baseType: !1066, size: 16, offset: 4000)
!6158 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !5970, file: !168, line: 600, baseType: !7, size: 32, offset: 4032)
!6159 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !5970, file: !168, line: 601, baseType: !7, size: 32, offset: 4064)
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "dma_boundary", scope: !5970, file: !168, line: 602, baseType: !1012, size: 64, offset: 4096)
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !5970, file: !168, line: 603, baseType: !1012, size: 64, offset: 4160)
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !5970, file: !168, line: 612, baseType: !7, size: 32, offset: 4224)
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "active_mode", scope: !5970, file: !168, line: 613, baseType: !7, size: 2, offset: 4256, flags: DIFlagBitField, extraData: i64 4256)
!6164 = !DIDerivedType(tag: DW_TAG_member, name: "unchecked_isa_dma", scope: !5970, file: !168, line: 614, baseType: !7, size: 1, offset: 4258, flags: DIFlagBitField, extraData: i64 4256)
!6165 = !DIDerivedType(tag: DW_TAG_member, name: "host_self_blocked", scope: !5970, file: !168, line: 620, baseType: !7, size: 1, offset: 4259, flags: DIFlagBitField, extraData: i64 4256)
!6166 = !DIDerivedType(tag: DW_TAG_member, name: "reverse_ordering", scope: !5970, file: !168, line: 627, baseType: !7, size: 1, offset: 4260, flags: DIFlagBitField, extraData: i64 4256)
!6167 = !DIDerivedType(tag: DW_TAG_member, name: "tmf_in_progress", scope: !5970, file: !168, line: 630, baseType: !7, size: 1, offset: 4261, flags: DIFlagBitField, extraData: i64 4256)
!6168 = !DIDerivedType(tag: DW_TAG_member, name: "async_scan", scope: !5970, file: !168, line: 633, baseType: !7, size: 1, offset: 4262, flags: DIFlagBitField, extraData: i64 4256)
!6169 = !DIDerivedType(tag: DW_TAG_member, name: "eh_noresume", scope: !5970, file: !168, line: 636, baseType: !7, size: 1, offset: 4263, flags: DIFlagBitField, extraData: i64 4256)
!6170 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !5970, file: !168, line: 639, baseType: !7, size: 1, offset: 4264, flags: DIFlagBitField, extraData: i64 4256)
!6171 = !DIDerivedType(tag: DW_TAG_member, name: "host_tagset", scope: !5970, file: !168, line: 642, baseType: !7, size: 1, offset: 4265, flags: DIFlagBitField, extraData: i64 4256)
!6172 = !DIDerivedType(tag: DW_TAG_member, name: "short_inquiry", scope: !5970, file: !168, line: 645, baseType: !7, size: 1, offset: 4266, flags: DIFlagBitField, extraData: i64 4256)
!6173 = !DIDerivedType(tag: DW_TAG_member, name: "no_scsi2_lun_in_cdb", scope: !5970, file: !168, line: 648, baseType: !7, size: 1, offset: 4267, flags: DIFlagBitField, extraData: i64 4256)
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "work_q_name", scope: !5970, file: !168, line: 653, baseType: !6175, size: 160, offset: 4272)
!6175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1010, size: 160, elements: !4088)
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "work_q", scope: !5970, file: !168, line: 654, baseType: !2909, size: 64, offset: 4480)
!6177 = !DIDerivedType(tag: DW_TAG_member, name: "tmf_work_q", scope: !5970, file: !168, line: 659, baseType: !2909, size: 64, offset: 4544)
!6178 = !DIDerivedType(tag: DW_TAG_member, name: "max_host_blocked", scope: !5970, file: !168, line: 664, baseType: !7, size: 32, offset: 4608)
!6179 = !DIDerivedType(tag: DW_TAG_member, name: "prot_capabilities", scope: !5970, file: !168, line: 667, baseType: !7, size: 32, offset: 4640)
!6180 = !DIDerivedType(tag: DW_TAG_member, name: "prot_guard_type", scope: !5970, file: !168, line: 668, baseType: !1057, size: 8, offset: 4672)
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5970, file: !168, line: 671, baseType: !1012, size: 64, offset: 4736)
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "io_port", scope: !5970, file: !168, line: 672, baseType: !1012, size: 64, offset: 4800)
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "n_io_port", scope: !5970, file: !168, line: 673, baseType: !1057, size: 8, offset: 4864)
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "dma_channel", scope: !5970, file: !168, line: 674, baseType: !1057, size: 8, offset: 4872)
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !5970, file: !168, line: 675, baseType: !7, size: 32, offset: 4896)
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "shost_state", scope: !5970, file: !168, line: 678, baseType: !167, size: 32, offset: 4928)
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "shost_gendev", scope: !5970, file: !168, line: 681, baseType: !1071, size: 5568, offset: 4992)
!6188 = !DIDerivedType(tag: DW_TAG_member, name: "shost_dev", scope: !5970, file: !168, line: 681, baseType: !1071, size: 5568, offset: 10560)
!6189 = !DIDerivedType(tag: DW_TAG_member, name: "shost_data", scope: !5970, file: !168, line: 687, baseType: !970, size: 64, offset: 16128)
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "dma_dev", scope: !5970, file: !168, line: 693, baseType: !1070, size: 64, offset: 16192)
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !5970, file: !168, line: 700, baseType: !4215, align: 64, offset: 16256)
!6192 = !DIDerivedType(tag: DW_TAG_member, name: "request_queue", scope: !5966, file: !142, line: 103, baseType: !3106, size: 64, offset: 64)
!6193 = !DIDerivedType(tag: DW_TAG_member, name: "siblings", scope: !5966, file: !142, line: 106, baseType: !976, size: 128, offset: 128)
!6194 = !DIDerivedType(tag: DW_TAG_member, name: "same_target_siblings", scope: !5966, file: !142, line: 107, baseType: !976, size: 128, offset: 256)
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "device_busy", scope: !5966, file: !142, line: 109, baseType: !1642, size: 32, offset: 384)
!6196 = !DIDerivedType(tag: DW_TAG_member, name: "device_blocked", scope: !5966, file: !142, line: 110, baseType: !1642, size: 32, offset: 416)
!6197 = !DIDerivedType(tag: DW_TAG_member, name: "restarts", scope: !5966, file: !142, line: 112, baseType: !1642, size: 32, offset: 448)
!6198 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !5966, file: !142, line: 113, baseType: !1087, offset: 480)
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "starved_entry", scope: !5966, file: !142, line: 114, baseType: !976, size: 128, offset: 512)
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !5966, file: !142, line: 115, baseType: !1066, size: 16, offset: 640)
!6201 = !DIDerivedType(tag: DW_TAG_member, name: "max_queue_depth", scope: !5966, file: !142, line: 116, baseType: !1066, size: 16, offset: 656)
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_depth", scope: !5966, file: !142, line: 117, baseType: !1066, size: 16, offset: 672)
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_count", scope: !5966, file: !142, line: 118, baseType: !1066, size: 16, offset: 688)
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_full_time", scope: !5966, file: !142, line: 119, baseType: !1012, size: 64, offset: 704)
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ramp_up_period", scope: !5966, file: !142, line: 120, baseType: !1012, size: 64, offset: 768)
!6206 = !DIDerivedType(tag: DW_TAG_member, name: "last_queue_ramp_up", scope: !5966, file: !142, line: 123, baseType: !1012, size: 64, offset: 832)
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5966, file: !142, line: 125, baseType: !7, size: 32, offset: 896)
!6208 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !5966, file: !142, line: 125, baseType: !7, size: 32, offset: 928)
!6209 = !DIDerivedType(tag: DW_TAG_member, name: "lun", scope: !5966, file: !142, line: 126, baseType: !1001, size: 64, offset: 960)
!6210 = !DIDerivedType(tag: DW_TAG_member, name: "manufacturer", scope: !5966, file: !142, line: 127, baseType: !7, size: 32, offset: 1024)
!6211 = !DIDerivedType(tag: DW_TAG_member, name: "sector_size", scope: !5966, file: !142, line: 129, baseType: !7, size: 32, offset: 1056)
!6212 = !DIDerivedType(tag: DW_TAG_member, name: "hostdata", scope: !5966, file: !142, line: 131, baseType: !970, size: 64, offset: 1088)
!6213 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5966, file: !142, line: 132, baseType: !1057, size: 8, offset: 1152)
!6214 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_level", scope: !5966, file: !142, line: 133, baseType: !1010, size: 8, offset: 1160)
!6215 = !DIDerivedType(tag: DW_TAG_member, name: "inq_periph_qual", scope: !5966, file: !142, line: 134, baseType: !1010, size: 8, offset: 1168)
!6216 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry_mutex", scope: !5966, file: !142, line: 135, baseType: !1568, size: 192, offset: 1216)
!6217 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry_len", scope: !5966, file: !142, line: 136, baseType: !1057, size: 8, offset: 1408)
!6218 = !DIDerivedType(tag: DW_TAG_member, name: "inquiry", scope: !5966, file: !142, line: 137, baseType: !5957, size: 64, offset: 1472)
!6219 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !5966, file: !142, line: 138, baseType: !1008, size: 64, offset: 1536)
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !5966, file: !142, line: 139, baseType: !1008, size: 64, offset: 1600)
!6221 = !DIDerivedType(tag: DW_TAG_member, name: "rev", scope: !5966, file: !142, line: 140, baseType: !1008, size: 64, offset: 1664)
!6222 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg0", scope: !5966, file: !142, line: 143, baseType: !6223, size: 64, offset: 1728)
!6223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6224, size: 64)
!6224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_vpd", file: !142, line: 95, size: 192, elements: !6225)
!6225 = !{!6226, !6227, !6228}
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !6224, file: !142, line: 96, baseType: !1216, size: 128, align: 64)
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6224, file: !142, line: 97, baseType: !206, size: 32, offset: 128)
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6224, file: !142, line: 98, baseType: !6229, offset: 160)
!6229 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1057, elements: !2913)
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg83", scope: !5966, file: !142, line: 144, baseType: !6223, size: 64, offset: 1792)
!6231 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg80", scope: !5966, file: !142, line: 145, baseType: !6223, size: 64, offset: 1856)
!6232 = !DIDerivedType(tag: DW_TAG_member, name: "vpd_pg89", scope: !5966, file: !142, line: 146, baseType: !6223, size: 64, offset: 1920)
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "current_tag", scope: !5966, file: !142, line: 147, baseType: !1057, size: 8, offset: 1984)
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_target", scope: !5966, file: !142, line: 148, baseType: !6027, size: 64, offset: 2048)
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_bflags", scope: !5966, file: !142, line: 150, baseType: !6236, size: 64, offset: 2112)
!6236 = !DIDerivedType(tag: DW_TAG_typedef, name: "blist_flags_t", file: !142, line: 18, baseType: !1003)
!6237 = !DIDerivedType(tag: DW_TAG_member, name: "eh_timeout", scope: !5966, file: !142, line: 154, baseType: !7, size: 32, offset: 2176)
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "removable", scope: !5966, file: !142, line: 155, baseType: !7, size: 1, offset: 2208, flags: DIFlagBitField, extraData: i64 2208)
!6239 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !5966, file: !142, line: 156, baseType: !7, size: 1, offset: 2209, flags: DIFlagBitField, extraData: i64 2208)
!6240 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !5966, file: !142, line: 157, baseType: !7, size: 1, offset: 2210, flags: DIFlagBitField, extraData: i64 2208)
!6241 = !DIDerivedType(tag: DW_TAG_member, name: "lockable", scope: !5966, file: !142, line: 158, baseType: !7, size: 1, offset: 2211, flags: DIFlagBitField, extraData: i64 2208)
!6242 = !DIDerivedType(tag: DW_TAG_member, name: "locked", scope: !5966, file: !142, line: 159, baseType: !7, size: 1, offset: 2212, flags: DIFlagBitField, extraData: i64 2208)
!6243 = !DIDerivedType(tag: DW_TAG_member, name: "borken", scope: !5966, file: !142, line: 160, baseType: !7, size: 1, offset: 2213, flags: DIFlagBitField, extraData: i64 2208)
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !5966, file: !142, line: 162, baseType: !7, size: 1, offset: 2214, flags: DIFlagBitField, extraData: i64 2208)
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "soft_reset", scope: !5966, file: !142, line: 163, baseType: !7, size: 1, offset: 2215, flags: DIFlagBitField, extraData: i64 2208)
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "sdtr", scope: !5966, file: !142, line: 164, baseType: !7, size: 1, offset: 2216, flags: DIFlagBitField, extraData: i64 2208)
!6247 = !DIDerivedType(tag: DW_TAG_member, name: "wdtr", scope: !5966, file: !142, line: 165, baseType: !7, size: 1, offset: 2217, flags: DIFlagBitField, extraData: i64 2208)
!6248 = !DIDerivedType(tag: DW_TAG_member, name: "ppr", scope: !5966, file: !142, line: 166, baseType: !7, size: 1, offset: 2218, flags: DIFlagBitField, extraData: i64 2208)
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_supported", scope: !5966, file: !142, line: 167, baseType: !7, size: 1, offset: 2219, flags: DIFlagBitField, extraData: i64 2208)
!6250 = !DIDerivedType(tag: DW_TAG_member, name: "simple_tags", scope: !5966, file: !142, line: 168, baseType: !7, size: 1, offset: 2220, flags: DIFlagBitField, extraData: i64 2208)
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "was_reset", scope: !5966, file: !142, line: 169, baseType: !7, size: 1, offset: 2221, flags: DIFlagBitField, extraData: i64 2208)
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "expecting_cc_ua", scope: !5966, file: !142, line: 171, baseType: !7, size: 1, offset: 2222, flags: DIFlagBitField, extraData: i64 2208)
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "use_10_for_rw", scope: !5966, file: !142, line: 173, baseType: !7, size: 1, offset: 2223, flags: DIFlagBitField, extraData: i64 2208)
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "use_10_for_ms", scope: !5966, file: !142, line: 174, baseType: !7, size: 1, offset: 2224, flags: DIFlagBitField, extraData: i64 2208)
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "set_dbd_for_ms", scope: !5966, file: !142, line: 175, baseType: !7, size: 1, offset: 2225, flags: DIFlagBitField, extraData: i64 2208)
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "no_report_opcodes", scope: !5966, file: !142, line: 176, baseType: !7, size: 1, offset: 2226, flags: DIFlagBitField, extraData: i64 2208)
!6257 = !DIDerivedType(tag: DW_TAG_member, name: "no_write_same", scope: !5966, file: !142, line: 177, baseType: !7, size: 1, offset: 2227, flags: DIFlagBitField, extraData: i64 2208)
!6258 = !DIDerivedType(tag: DW_TAG_member, name: "use_16_for_rw", scope: !5966, file: !142, line: 178, baseType: !7, size: 1, offset: 2228, flags: DIFlagBitField, extraData: i64 2208)
!6259 = !DIDerivedType(tag: DW_TAG_member, name: "skip_ms_page_8", scope: !5966, file: !142, line: 179, baseType: !7, size: 1, offset: 2229, flags: DIFlagBitField, extraData: i64 2208)
!6260 = !DIDerivedType(tag: DW_TAG_member, name: "skip_ms_page_3f", scope: !5966, file: !142, line: 180, baseType: !7, size: 1, offset: 2230, flags: DIFlagBitField, extraData: i64 2208)
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "skip_vpd_pages", scope: !5966, file: !142, line: 181, baseType: !7, size: 1, offset: 2231, flags: DIFlagBitField, extraData: i64 2208)
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "try_vpd_pages", scope: !5966, file: !142, line: 182, baseType: !7, size: 1, offset: 2232, flags: DIFlagBitField, extraData: i64 2208)
!6263 = !DIDerivedType(tag: DW_TAG_member, name: "use_192_bytes_for_3f", scope: !5966, file: !142, line: 183, baseType: !7, size: 1, offset: 2233, flags: DIFlagBitField, extraData: i64 2208)
!6264 = !DIDerivedType(tag: DW_TAG_member, name: "no_start_on_add", scope: !5966, file: !142, line: 184, baseType: !7, size: 1, offset: 2234, flags: DIFlagBitField, extraData: i64 2208)
!6265 = !DIDerivedType(tag: DW_TAG_member, name: "allow_restart", scope: !5966, file: !142, line: 185, baseType: !7, size: 1, offset: 2235, flags: DIFlagBitField, extraData: i64 2208)
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "manage_start_stop", scope: !5966, file: !142, line: 186, baseType: !7, size: 1, offset: 2236, flags: DIFlagBitField, extraData: i64 2208)
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "start_stop_pwr_cond", scope: !5966, file: !142, line: 187, baseType: !7, size: 1, offset: 2237, flags: DIFlagBitField, extraData: i64 2208)
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "no_uld_attach", scope: !5966, file: !142, line: 188, baseType: !7, size: 1, offset: 2238, flags: DIFlagBitField, extraData: i64 2208)
!6269 = !DIDerivedType(tag: DW_TAG_member, name: "select_no_atn", scope: !5966, file: !142, line: 189, baseType: !7, size: 1, offset: 2239, flags: DIFlagBitField, extraData: i64 2208)
!6270 = !DIDerivedType(tag: DW_TAG_member, name: "fix_capacity", scope: !5966, file: !142, line: 190, baseType: !7, size: 1, offset: 2240, flags: DIFlagBitField, extraData: i64 2208)
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "guess_capacity", scope: !5966, file: !142, line: 191, baseType: !7, size: 1, offset: 2241, flags: DIFlagBitField, extraData: i64 2208)
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "retry_hwerror", scope: !5966, file: !142, line: 192, baseType: !7, size: 1, offset: 2242, flags: DIFlagBitField, extraData: i64 2208)
!6273 = !DIDerivedType(tag: DW_TAG_member, name: "last_sector_bug", scope: !5966, file: !142, line: 193, baseType: !7, size: 1, offset: 2243, flags: DIFlagBitField, extraData: i64 2208)
!6274 = !DIDerivedType(tag: DW_TAG_member, name: "no_read_disc_info", scope: !5966, file: !142, line: 195, baseType: !7, size: 1, offset: 2244, flags: DIFlagBitField, extraData: i64 2208)
!6275 = !DIDerivedType(tag: DW_TAG_member, name: "no_read_capacity_16", scope: !5966, file: !142, line: 196, baseType: !7, size: 1, offset: 2245, flags: DIFlagBitField, extraData: i64 2208)
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "try_rc_10_first", scope: !5966, file: !142, line: 197, baseType: !7, size: 1, offset: 2246, flags: DIFlagBitField, extraData: i64 2208)
!6277 = !DIDerivedType(tag: DW_TAG_member, name: "security_supported", scope: !5966, file: !142, line: 198, baseType: !7, size: 1, offset: 2247, flags: DIFlagBitField, extraData: i64 2208)
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !5966, file: !142, line: 199, baseType: !7, size: 1, offset: 2248, flags: DIFlagBitField, extraData: i64 2208)
!6279 = !DIDerivedType(tag: DW_TAG_member, name: "wce_default_on", scope: !5966, file: !142, line: 200, baseType: !7, size: 1, offset: 2249, flags: DIFlagBitField, extraData: i64 2208)
!6280 = !DIDerivedType(tag: DW_TAG_member, name: "no_dif", scope: !5966, file: !142, line: 201, baseType: !7, size: 1, offset: 2250, flags: DIFlagBitField, extraData: i64 2208)
!6281 = !DIDerivedType(tag: DW_TAG_member, name: "broken_fua", scope: !5966, file: !142, line: 202, baseType: !7, size: 1, offset: 2251, flags: DIFlagBitField, extraData: i64 2208)
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "lun_in_cdb", scope: !5966, file: !142, line: 203, baseType: !7, size: 1, offset: 2252, flags: DIFlagBitField, extraData: i64 2208)
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "unmap_limit_for_ws", scope: !5966, file: !142, line: 204, baseType: !7, size: 1, offset: 2253, flags: DIFlagBitField, extraData: i64 2208)
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_autosuspend", scope: !5966, file: !142, line: 205, baseType: !7, size: 1, offset: 2254, flags: DIFlagBitField, extraData: i64 2208)
!6285 = !DIDerivedType(tag: DW_TAG_member, name: "offline_already", scope: !5966, file: !142, line: 208, baseType: !1333, size: 8, offset: 2256)
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "disk_events_disable_depth", scope: !5966, file: !142, line: 210, baseType: !1642, size: 32, offset: 2272)
!6287 = !DIDerivedType(tag: DW_TAG_member, name: "supported_events", scope: !5966, file: !142, line: 212, baseType: !2275, size: 64, offset: 2304)
!6288 = !DIDerivedType(tag: DW_TAG_member, name: "pending_events", scope: !5966, file: !142, line: 213, baseType: !2275, size: 64, offset: 2368)
!6289 = !DIDerivedType(tag: DW_TAG_member, name: "event_list", scope: !5966, file: !142, line: 214, baseType: !976, size: 128, offset: 2432)
!6290 = !DIDerivedType(tag: DW_TAG_member, name: "event_work", scope: !5966, file: !142, line: 215, baseType: !2897, size: 256, offset: 2560)
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "max_device_blocked", scope: !5966, file: !142, line: 217, baseType: !7, size: 32, offset: 2816)
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "iorequest_cnt", scope: !5966, file: !142, line: 220, baseType: !1642, size: 32, offset: 2848)
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "iodone_cnt", scope: !5966, file: !142, line: 221, baseType: !1642, size: 32, offset: 2880)
!6294 = !DIDerivedType(tag: DW_TAG_member, name: "ioerr_cnt", scope: !5966, file: !142, line: 222, baseType: !1642, size: 32, offset: 2912)
!6295 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_gendev", scope: !5966, file: !142, line: 224, baseType: !1071, size: 5568, offset: 2944)
!6296 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_dev", scope: !5966, file: !142, line: 225, baseType: !1071, size: 5568, offset: 8512)
!6297 = !DIDerivedType(tag: DW_TAG_member, name: "ew", scope: !5966, file: !142, line: 227, baseType: !6298, size: 256, offset: 14080)
!6298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "execute_work", file: !932, line: 168, size: 256, elements: !6299)
!6299 = !{!6300}
!6300 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !6298, file: !932, line: 169, baseType: !2897, size: 256)
!6301 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !5966, file: !142, line: 228, baseType: !2897, size: 256, offset: 14336)
!6302 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !5966, file: !142, line: 230, baseType: !6303, size: 64, offset: 14592)
!6303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6304, size: 64)
!6304 = !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_device_handler", file: !142, line: 230, flags: DIFlagFwdDecl)
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "handler_data", scope: !5966, file: !142, line: 231, baseType: !970, size: 64, offset: 14656)
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "dma_drain_len", scope: !5966, file: !142, line: 233, baseType: !1173, size: 64, offset: 14720)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "dma_drain_buf", scope: !5966, file: !142, line: 234, baseType: !970, size: 64, offset: 14784)
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "access_state", scope: !5966, file: !142, line: 236, baseType: !1057, size: 8, offset: 14848)
!6309 = !DIDerivedType(tag: DW_TAG_member, name: "state_mutex", scope: !5966, file: !142, line: 237, baseType: !1568, size: 192, offset: 14912)
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_state", scope: !5966, file: !142, line: 238, baseType: !149, size: 32, offset: 15104)
!6311 = !DIDerivedType(tag: DW_TAG_member, name: "quiesced_by", scope: !5966, file: !142, line: 239, baseType: !2121, size: 64, offset: 15168)
!6312 = !DIDerivedType(tag: DW_TAG_member, name: "sdev_data", scope: !5966, file: !142, line: 240, baseType: !4215, offset: 15232)
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "eh_entry", scope: !5947, file: !5948, line: 71, baseType: !976, size: 128, offset: 512)
!6314 = !DIDerivedType(tag: DW_TAG_member, name: "abort_work", scope: !5947, file: !5948, line: 72, baseType: !3005, size: 704, offset: 640)
!6315 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5947, file: !5948, line: 74, baseType: !1216, size: 128, align: 64, offset: 1344)
!6316 = !DIDerivedType(tag: DW_TAG_member, name: "eh_eflags", scope: !5947, file: !5948, line: 76, baseType: !206, size: 32, offset: 1472)
!6317 = !DIDerivedType(tag: DW_TAG_member, name: "jiffies_at_alloc", scope: !5947, file: !5948, line: 83, baseType: !1012, size: 64, offset: 1536)
!6318 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !5947, file: !5948, line: 85, baseType: !206, size: 32, offset: 1600)
!6319 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !5947, file: !5948, line: 86, baseType: !206, size: 32, offset: 1632)
!6320 = !DIDerivedType(tag: DW_TAG_member, name: "prot_op", scope: !5947, file: !5948, line: 88, baseType: !1057, size: 8, offset: 1664)
!6321 = !DIDerivedType(tag: DW_TAG_member, name: "prot_type", scope: !5947, file: !5948, line: 89, baseType: !1057, size: 8, offset: 1672)
!6322 = !DIDerivedType(tag: DW_TAG_member, name: "prot_flags", scope: !5947, file: !5948, line: 90, baseType: !1057, size: 8, offset: 1680)
!6323 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_len", scope: !5947, file: !5948, line: 92, baseType: !1066, size: 16, offset: 1696)
!6324 = !DIDerivedType(tag: DW_TAG_member, name: "sc_data_direction", scope: !5947, file: !5948, line: 93, baseType: !160, size: 32, offset: 1728)
!6325 = !DIDerivedType(tag: DW_TAG_member, name: "cmnd", scope: !5947, file: !5948, line: 96, baseType: !5957, size: 64, offset: 1792)
!6326 = !DIDerivedType(tag: DW_TAG_member, name: "sdb", scope: !5947, file: !5948, line: 100, baseType: !6327, size: 192, offset: 1856)
!6327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_data_buffer", file: !5948, line: 35, size: 192, elements: !6328)
!6328 = !{!6329, !6344}
!6329 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !6327, file: !5948, line: 36, baseType: !6330, size: 128)
!6330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_table", file: !6331, line: 42, size: 128, elements: !6332)
!6331 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!6332 = !{!6333, !6342, !6343}
!6333 = !DIDerivedType(tag: DW_TAG_member, name: "sgl", scope: !6330, file: !6331, line: 43, baseType: !6334, size: 64)
!6334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6335, size: 64)
!6335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !6331, line: 11, size: 256, elements: !6336)
!6336 = !{!6337, !6338, !6339, !6340, !6341}
!6337 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !6335, file: !6331, line: 12, baseType: !1012, size: 64)
!6338 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !6335, file: !6331, line: 13, baseType: !7, size: 32, offset: 64)
!6339 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !6335, file: !6331, line: 14, baseType: !7, size: 32, offset: 96)
!6340 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !6335, file: !6331, line: 15, baseType: !1832, size: 64, offset: 128)
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !6335, file: !6331, line: 17, baseType: !7, size: 32, offset: 192)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "nents", scope: !6330, file: !6331, line: 44, baseType: !7, size: 32, offset: 64)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "orig_nents", scope: !6330, file: !6331, line: 45, baseType: !7, size: 32, offset: 96)
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !6327, file: !5948, line: 37, baseType: !7, size: 32, offset: 128)
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "prot_sdb", scope: !5947, file: !5948, line: 101, baseType: !6346, size: 64, offset: 2048)
!6346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6327, size: 64)
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "underflow", scope: !5947, file: !5948, line: 103, baseType: !7, size: 32, offset: 2112)
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "transfersize", scope: !5947, file: !5948, line: 106, baseType: !7, size: 32, offset: 2144)
!6349 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !5947, file: !5948, line: 112, baseType: !3110, size: 64, offset: 2176)
!6350 = !DIDerivedType(tag: DW_TAG_member, name: "sense_buffer", scope: !5947, file: !5948, line: 115, baseType: !5957, size: 64, offset: 2240)
!6351 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_done", scope: !5947, file: !5948, line: 123, baseType: !6352, size: 64, offset: 2304)
!6352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6353, size: 64)
!6353 = !DISubroutineType(types: !6354)
!6354 = !{null, !5946}
!6355 = !DIDerivedType(tag: DW_TAG_member, name: "SCp", scope: !5947, file: !5948, line: 129, baseType: !6356, size: 512, offset: 2368)
!6356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scsi_pointer", file: !5948, line: 41, size: 512, elements: !6357)
!6357 = !{!6358, !6359, !6360, !6361, !6362, !6363, !6365, !6366, !6367, !6368}
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !6356, file: !5948, line: 42, baseType: !1128, size: 64)
!6359 = !DIDerivedType(tag: DW_TAG_member, name: "this_residual", scope: !6356, file: !5948, line: 43, baseType: !206, size: 32, offset: 64)
!6360 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !6356, file: !5948, line: 44, baseType: !6334, size: 64, offset: 128)
!6361 = !DIDerivedType(tag: DW_TAG_member, name: "buffers_residual", scope: !6356, file: !5948, line: 45, baseType: !206, size: 32, offset: 192)
!6362 = !DIDerivedType(tag: DW_TAG_member, name: "dma_handle", scope: !6356, file: !5948, line: 47, baseType: !1832, size: 64, offset: 256)
!6363 = !DIDerivedType(tag: DW_TAG_member, name: "Status", scope: !6356, file: !5948, line: 49, baseType: !6364, size: 32, offset: 320)
!6364 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !206)
!6365 = !DIDerivedType(tag: DW_TAG_member, name: "Message", scope: !6356, file: !5948, line: 50, baseType: !6364, size: 32, offset: 352)
!6366 = !DIDerivedType(tag: DW_TAG_member, name: "have_data_in", scope: !6356, file: !5948, line: 51, baseType: !6364, size: 32, offset: 384)
!6367 = !DIDerivedType(tag: DW_TAG_member, name: "sent_command", scope: !6356, file: !5948, line: 52, baseType: !6364, size: 32, offset: 416)
!6368 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !6356, file: !5948, line: 53, baseType: !6364, size: 32, offset: 448)
!6369 = !DIDerivedType(tag: DW_TAG_member, name: "host_scribble", scope: !5947, file: !5948, line: 131, baseType: !5957, size: 64, offset: 2880)
!6370 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !5947, file: !5948, line: 139, baseType: !206, size: 32, offset: 2944)
!6371 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5947, file: !5948, line: 140, baseType: !206, size: 32, offset: 2976)
!6372 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5947, file: !5948, line: 141, baseType: !1012, size: 64, offset: 3008)
!6373 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !5947, file: !5948, line: 143, baseType: !1057, size: 8, offset: 3072)
!6374 = !DIDerivedType(tag: DW_TAG_member, name: "extra_len", scope: !5947, file: !5948, line: 144, baseType: !7, size: 32, offset: 3104)
!6375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6376, size: 64)
!6376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_port", file: !178, line: 811, size: 120832, elements: !6377)
!6377 = !{!6378, !6379, !6776, !6777, !6778, !6779, !6780, !6781, !6782, !6800, !6801, !6802, !6803, !6804, !6811, !6812, !6813, !6814, !6815, !6816, !6820, !6821, !6822, !6823, !6824, !6825, !6826, !6827, !6828, !6829, !6835, !6836, !6837, !6838, !6839, !6840, !6841, !6842, !6843, !6844, !6845, !6846, !6847, !6848, !6849, !6850, !6851, !6854, !6855, !6856, !6866}
!6378 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_host", scope: !6376, file: !178, line: 812, baseType: !5969, size: 64)
!6379 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6376, file: !178, line: 813, baseType: !6380, size: 64, offset: 64)
!6380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6381, size: 64)
!6381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_port_operations", file: !178, line: 896, size: 3904, elements: !6382)
!6382 = !{!6383, !6597, !6598, !6602, !6606, !6610, !6614, !6618, !6622, !6623, !6628, !6634, !6638, !6642, !6643, !6648, !6653, !6654, !6659, !6660, !6661, !6662, !6663, !6664, !6665, !6666, !6667, !6668, !6672, !6676, !6677, !6678, !6682, !6686, !6687, !6688, !6689, !6712, !6716, !6720, !6724, !6725, !6731, !6735, !6736, !6740, !6741, !6745, !6746, !6747, !6748, !6749, !6750, !6751, !6755, !6759, !6763, !6767, !6771, !6772, !6773}
!6383 = !DIDerivedType(tag: DW_TAG_member, name: "qc_defer", scope: !6381, file: !178, line: 900, baseType: !6384, size: 64)
!6384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6385, size: 64)
!6385 = !DISubroutineType(types: !6386)
!6386 = !{!206, !6387}
!6387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6388, size: 64)
!6388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_queued_cmd", file: !178, line: 617, size: 1920, elements: !6389)
!6389 = !{!6390, !6391, !6551, !6552, !6553, !6572, !6574, !6575, !6576, !6577, !6578, !6579, !6580, !6581, !6582, !6583, !6584, !6585, !6586, !6587, !6588, !6589, !6590, !6595, !6596}
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !6388, file: !178, line: 618, baseType: !6375, size: 64)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6388, file: !178, line: 619, baseType: !6392, size: 64, offset: 64)
!6392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6393, size: 64)
!6393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_device", file: !178, line: 673, size: 16384, elements: !6394)
!6394 = !{!6395, !6445, !6446, !6447, !6448, !6449, !6450, !6502, !6503, !6504, !6505, !6506, !6507, !6508, !6509, !6510, !6511, !6512, !6513, !6514, !6515, !6516, !6517, !6518, !6519, !6520, !6521, !6530, !6532, !6534, !6535, !6536, !6537, !6538, !6539, !6540}
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !6393, file: !178, line: 674, baseType: !6396, size: 64)
!6396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6397, size: 64)
!6397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_link", file: !178, line: 783, size: 41984, elements: !6398)
!6398 = !{!6399, !6400, !6401, !6402, !6403, !6404, !6405, !6406, !6407, !6408, !6409, !6410, !6426, !6442, !6444}
!6399 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !6397, file: !178, line: 784, baseType: !6375, size: 64)
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "pmp", scope: !6397, file: !178, line: 785, baseType: !206, size: 32, offset: 64)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "tdev", scope: !6397, file: !178, line: 787, baseType: !1071, size: 5568, offset: 128)
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "active_tag", scope: !6397, file: !178, line: 788, baseType: !7, size: 32, offset: 5696)
!6403 = !DIDerivedType(tag: DW_TAG_member, name: "sactive", scope: !6397, file: !178, line: 789, baseType: !1042, size: 32, offset: 5728)
!6404 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6397, file: !178, line: 791, baseType: !7, size: 32, offset: 5760)
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "saved_scontrol", scope: !6397, file: !178, line: 793, baseType: !1042, size: 32, offset: 5792)
!6406 = !DIDerivedType(tag: DW_TAG_member, name: "hw_sata_spd_limit", scope: !6397, file: !178, line: 794, baseType: !7, size: 32, offset: 5824)
!6407 = !DIDerivedType(tag: DW_TAG_member, name: "sata_spd_limit", scope: !6397, file: !178, line: 795, baseType: !7, size: 32, offset: 5856)
!6408 = !DIDerivedType(tag: DW_TAG_member, name: "sata_spd", scope: !6397, file: !178, line: 796, baseType: !7, size: 32, offset: 5888)
!6409 = !DIDerivedType(tag: DW_TAG_member, name: "lpm_policy", scope: !6397, file: !178, line: 797, baseType: !192, size: 32, offset: 5920)
!6410 = !DIDerivedType(tag: DW_TAG_member, name: "eh_info", scope: !6397, file: !178, line: 800, baseType: !6411, size: 960, offset: 5952)
!6411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_eh_info", file: !178, line: 744, size: 960, elements: !6412)
!6412 = !{!6413, !6414, !6415, !6416, !6417, !6419, !6420, !6421, !6425}
!6413 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6411, file: !178, line: 745, baseType: !6392, size: 64)
!6414 = !DIDerivedType(tag: DW_TAG_member, name: "serror", scope: !6411, file: !178, line: 746, baseType: !1042, size: 32, offset: 64)
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "err_mask", scope: !6411, file: !178, line: 747, baseType: !7, size: 32, offset: 96)
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !6411, file: !178, line: 748, baseType: !7, size: 32, offset: 128)
!6417 = !DIDerivedType(tag: DW_TAG_member, name: "dev_action", scope: !6411, file: !178, line: 749, baseType: !6418, size: 64, offset: 160)
!6418 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !2472)
!6419 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6411, file: !178, line: 750, baseType: !7, size: 32, offset: 224)
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "probe_mask", scope: !6411, file: !178, line: 752, baseType: !7, size: 32, offset: 256)
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !6411, file: !178, line: 754, baseType: !6422, size: 640, offset: 288)
!6422 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1010, size: 640, elements: !6423)
!6423 = !{!6424}
!6424 = !DISubrange(count: 80)
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !6411, file: !178, line: 755, baseType: !206, size: 32, offset: 928)
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "eh_context", scope: !6397, file: !178, line: 802, baseType: !6427, size: 1664, offset: 6912)
!6427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_eh_context", file: !178, line: 758, size: 1664, elements: !6428)
!6428 = !{!6429, !6430, !6432, !6435, !6436, !6437, !6438, !6439, !6441}
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !6427, file: !178, line: 759, baseType: !6411, size: 960)
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "tries", scope: !6427, file: !178, line: 760, baseType: !6431, size: 64, offset: 960)
!6431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 64, elements: !2472)
!6432 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_timeout_idx", scope: !6427, file: !178, line: 761, baseType: !6433, size: 384, offset: 1024)
!6433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 384, elements: !6434)
!6434 = !{!2473, !2529}
!6435 = !DIDerivedType(tag: DW_TAG_member, name: "classes", scope: !6427, file: !178, line: 763, baseType: !6418, size: 64, offset: 1408)
!6436 = !DIDerivedType(tag: DW_TAG_member, name: "did_probe_mask", scope: !6427, file: !178, line: 764, baseType: !7, size: 32, offset: 1472)
!6437 = !DIDerivedType(tag: DW_TAG_member, name: "unloaded_mask", scope: !6427, file: !178, line: 765, baseType: !7, size: 32, offset: 1504)
!6438 = !DIDerivedType(tag: DW_TAG_member, name: "saved_ncq_enabled", scope: !6427, file: !178, line: 766, baseType: !7, size: 32, offset: 1536)
!6439 = !DIDerivedType(tag: DW_TAG_member, name: "saved_xfer_mode", scope: !6427, file: !178, line: 767, baseType: !6440, size: 16, offset: 1568)
!6440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2257, size: 16, elements: !2472)
!6441 = !DIDerivedType(tag: DW_TAG_member, name: "last_reset", scope: !6427, file: !178, line: 769, baseType: !1012, size: 64, offset: 1600)
!6442 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !6397, file: !178, line: 804, baseType: !6443, size: 32768, offset: 8704)
!6443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6393, size: 32768, elements: !2472)
!6444 = !DIDerivedType(tag: DW_TAG_member, name: "last_lpm_change", scope: !6397, file: !178, line: 806, baseType: !1012, size: 64, offset: 41472)
!6445 = !DIDerivedType(tag: DW_TAG_member, name: "devno", scope: !6393, file: !178, line: 675, baseType: !7, size: 32, offset: 64)
!6446 = !DIDerivedType(tag: DW_TAG_member, name: "horkage", scope: !6393, file: !178, line: 676, baseType: !7, size: 32, offset: 96)
!6447 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6393, file: !178, line: 677, baseType: !1012, size: 64, offset: 128)
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "sdev", scope: !6393, file: !178, line: 678, baseType: !5965, size: 64, offset: 192)
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !6393, file: !178, line: 679, baseType: !970, size: 64, offset: 256)
!6450 = !DIDerivedType(tag: DW_TAG_member, name: "gtf_cache", scope: !6393, file: !178, line: 681, baseType: !6451, size: 64, offset: 320)
!6451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6452, size: 64)
!6452 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "acpi_object", file: !6453, line: 899, size: 192, elements: !6454)
!6453 = !DIFile(filename: "./include/acpi/actypes.h", directory: "/home/lizy2001/genbc/linux")
!6454 = !{!6455, !6457, !6462, !6468, !6475, !6481, !6488, !6496}
!6455 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6452, file: !6453, line: 900, baseType: !6456, size: 32)
!6456 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_object_type", file: !6453, line: 635, baseType: !1042)
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "integer", scope: !6452, file: !6453, line: 904, baseType: !6458, size: 128)
!6458 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6452, file: !6453, line: 901, size: 128, elements: !6459)
!6459 = !{!6460, !6461}
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6458, file: !6453, line: 902, baseType: !6456, size: 32)
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !6458, file: !6453, line: 903, baseType: !1001, size: 64, offset: 64)
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !6452, file: !6453, line: 910, baseType: !6463, size: 128)
!6463 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6452, file: !6453, line: 906, size: 128, elements: !6464)
!6464 = !{!6465, !6466, !6467}
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6463, file: !6453, line: 907, baseType: !6456, size: 32)
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !6463, file: !6453, line: 908, baseType: !1042, size: 32, offset: 32)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !6463, file: !6453, line: 909, baseType: !1128, size: 64, offset: 64)
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !6452, file: !6453, line: 916, baseType: !6469, size: 128)
!6469 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6452, file: !6453, line: 912, size: 128, elements: !6470)
!6470 = !{!6471, !6472, !6473}
!6471 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6469, file: !6453, line: 913, baseType: !6456, size: 32)
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !6469, file: !6453, line: 914, baseType: !1042, size: 32, offset: 32)
!6473 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !6469, file: !6453, line: 915, baseType: !6474, size: 64, offset: 64)
!6474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 64)
!6475 = !DIDerivedType(tag: DW_TAG_member, name: "package", scope: !6452, file: !6453, line: 922, baseType: !6476, size: 128)
!6476 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6452, file: !6453, line: 918, size: 128, elements: !6477)
!6477 = !{!6478, !6479, !6480}
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6476, file: !6453, line: 919, baseType: !6456, size: 32)
!6479 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6476, file: !6453, line: 920, baseType: !1042, size: 32, offset: 32)
!6480 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !6476, file: !6453, line: 921, baseType: !6451, size: 64, offset: 64)
!6481 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !6452, file: !6453, line: 928, baseType: !6482, size: 128)
!6482 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6452, file: !6453, line: 924, size: 128, elements: !6483)
!6483 = !{!6484, !6485, !6486}
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6482, file: !6453, line: 925, baseType: !6456, size: 32)
!6485 = !DIDerivedType(tag: DW_TAG_member, name: "actual_type", scope: !6482, file: !6453, line: 926, baseType: !6456, size: 32, offset: 32)
!6486 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !6482, file: !6453, line: 927, baseType: !6487, size: 64, offset: 64)
!6487 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_handle", file: !6453, line: 424, baseType: !970)
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "processor", scope: !6452, file: !6453, line: 935, baseType: !6489, size: 192)
!6489 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6452, file: !6453, line: 930, size: 192, elements: !6490)
!6490 = !{!6491, !6492, !6493, !6495}
!6491 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6489, file: !6453, line: 931, baseType: !6456, size: 32)
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "proc_id", scope: !6489, file: !6453, line: 932, baseType: !1042, size: 32, offset: 32)
!6493 = !DIDerivedType(tag: DW_TAG_member, name: "pblk_address", scope: !6489, file: !6453, line: 933, baseType: !6494, size: 64, offset: 64)
!6494 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_io_address", file: !6453, line: 128, baseType: !1001)
!6495 = !DIDerivedType(tag: DW_TAG_member, name: "pblk_length", scope: !6489, file: !6453, line: 934, baseType: !1042, size: 32, offset: 128)
!6496 = !DIDerivedType(tag: DW_TAG_member, name: "power_resource", scope: !6452, file: !6453, line: 941, baseType: !6497, size: 96)
!6497 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6452, file: !6453, line: 937, size: 96, elements: !6498)
!6498 = !{!6499, !6500, !6501}
!6499 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6497, file: !6453, line: 938, baseType: !6456, size: 32)
!6500 = !DIDerivedType(tag: DW_TAG_member, name: "system_level", scope: !6497, file: !6453, line: 939, baseType: !1042, size: 32, offset: 32)
!6501 = !DIDerivedType(tag: DW_TAG_member, name: "resource_order", scope: !6497, file: !6453, line: 940, baseType: !1042, size: 32, offset: 64)
!6502 = !DIDerivedType(tag: DW_TAG_member, name: "gtf_filter", scope: !6393, file: !178, line: 682, baseType: !7, size: 32, offset: 384)
!6503 = !DIDerivedType(tag: DW_TAG_member, name: "tdev", scope: !6393, file: !178, line: 687, baseType: !1071, size: 5568, offset: 448)
!6504 = !DIDerivedType(tag: DW_TAG_member, name: "n_sectors", scope: !6393, file: !178, line: 689, baseType: !1001, size: 64, offset: 6016)
!6505 = !DIDerivedType(tag: DW_TAG_member, name: "n_native_sectors", scope: !6393, file: !178, line: 690, baseType: !1001, size: 64, offset: 6080)
!6506 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !6393, file: !178, line: 691, baseType: !7, size: 32, offset: 6144)
!6507 = !DIDerivedType(tag: DW_TAG_member, name: "unpark_deadline", scope: !6393, file: !178, line: 692, baseType: !1012, size: 64, offset: 6208)
!6508 = !DIDerivedType(tag: DW_TAG_member, name: "pio_mode", scope: !6393, file: !178, line: 694, baseType: !2257, size: 8, offset: 6272)
!6509 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mode", scope: !6393, file: !178, line: 695, baseType: !2257, size: 8, offset: 6280)
!6510 = !DIDerivedType(tag: DW_TAG_member, name: "xfer_mode", scope: !6393, file: !178, line: 696, baseType: !2257, size: 8, offset: 6288)
!6511 = !DIDerivedType(tag: DW_TAG_member, name: "xfer_shift", scope: !6393, file: !178, line: 697, baseType: !7, size: 32, offset: 6304)
!6512 = !DIDerivedType(tag: DW_TAG_member, name: "multi_count", scope: !6393, file: !178, line: 699, baseType: !7, size: 32, offset: 6336)
!6513 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !6393, file: !178, line: 701, baseType: !7, size: 32, offset: 6368)
!6514 = !DIDerivedType(tag: DW_TAG_member, name: "cdb_len", scope: !6393, file: !178, line: 702, baseType: !7, size: 32, offset: 6400)
!6515 = !DIDerivedType(tag: DW_TAG_member, name: "pio_mask", scope: !6393, file: !178, line: 705, baseType: !1012, size: 64, offset: 6464)
!6516 = !DIDerivedType(tag: DW_TAG_member, name: "mwdma_mask", scope: !6393, file: !178, line: 706, baseType: !1012, size: 64, offset: 6528)
!6517 = !DIDerivedType(tag: DW_TAG_member, name: "udma_mask", scope: !6393, file: !178, line: 707, baseType: !1012, size: 64, offset: 6592)
!6518 = !DIDerivedType(tag: DW_TAG_member, name: "cylinders", scope: !6393, file: !178, line: 710, baseType: !1754, size: 16, offset: 6656)
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !6393, file: !178, line: 711, baseType: !1754, size: 16, offset: 6672)
!6520 = !DIDerivedType(tag: DW_TAG_member, name: "sectors", scope: !6393, file: !178, line: 712, baseType: !1754, size: 16, offset: 6688)
!6521 = !DIDerivedType(tag: DW_TAG_member, scope: !6393, file: !178, line: 714, baseType: !6522, size: 4096, align: 512, offset: 7168)
!6522 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6393, file: !178, line: 714, size: 4096, align: 512, elements: !6523)
!6523 = !{!6524, !6528}
!6524 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6522, file: !178, line: 715, baseType: !6525, size: 4096)
!6525 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1754, size: 4096, elements: !6526)
!6526 = !{!6527}
!6527 = !DISubrange(count: 256)
!6528 = !DIDerivedType(tag: DW_TAG_member, name: "gscr", scope: !6522, file: !178, line: 716, baseType: !6529, size: 4096)
!6529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1042, size: 4096, elements: !5300)
!6530 = !DIDerivedType(tag: DW_TAG_member, name: "devslp_timing", scope: !6393, file: !178, line: 720, baseType: !6531, size: 64, offset: 11264)
!6531 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2257, size: 64, elements: !2235)
!6532 = !DIDerivedType(tag: DW_TAG_member, name: "ncq_send_recv_cmds", scope: !6393, file: !178, line: 723, baseType: !6533, size: 160, offset: 11328)
!6533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2257, size: 160, elements: !4088)
!6534 = !DIDerivedType(tag: DW_TAG_member, name: "ncq_non_data_cmds", scope: !6393, file: !178, line: 724, baseType: !2892, size: 512, offset: 11488)
!6535 = !DIDerivedType(tag: DW_TAG_member, name: "zac_zoned_cap", scope: !6393, file: !178, line: 727, baseType: !1042, size: 32, offset: 12000)
!6536 = !DIDerivedType(tag: DW_TAG_member, name: "zac_zones_optimal_open", scope: !6393, file: !178, line: 728, baseType: !1042, size: 32, offset: 12032)
!6537 = !DIDerivedType(tag: DW_TAG_member, name: "zac_zones_optimal_nonseq", scope: !6393, file: !178, line: 729, baseType: !1042, size: 32, offset: 12064)
!6538 = !DIDerivedType(tag: DW_TAG_member, name: "zac_zones_max_open", scope: !6393, file: !178, line: 730, baseType: !1042, size: 32, offset: 12096)
!6539 = !DIDerivedType(tag: DW_TAG_member, name: "spdn_cnt", scope: !6393, file: !178, line: 733, baseType: !206, size: 32, offset: 12128)
!6540 = !DIDerivedType(tag: DW_TAG_member, name: "ering", scope: !6393, file: !178, line: 735, baseType: !6541, size: 4160, offset: 12160)
!6541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_ering", file: !178, line: 668, size: 4160, elements: !6542)
!6542 = !{!6543, !6544}
!6543 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !6541, file: !178, line: 669, baseType: !206, size: 32)
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "ring", scope: !6541, file: !178, line: 670, baseType: !6545, size: 4096, offset: 64)
!6545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6546, size: 4096, elements: !2838)
!6546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_ering_entry", file: !178, line: 662, size: 128, elements: !6547)
!6547 = !{!6548, !6549, !6550}
!6548 = !DIDerivedType(tag: DW_TAG_member, name: "eflags", scope: !6546, file: !178, line: 663, baseType: !7, size: 32)
!6549 = !DIDerivedType(tag: DW_TAG_member, name: "err_mask", scope: !6546, file: !178, line: 664, baseType: !7, size: 32, offset: 32)
!6550 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !6546, file: !178, line: 665, baseType: !1001, size: 64, offset: 64)
!6551 = !DIDerivedType(tag: DW_TAG_member, name: "scsicmd", scope: !6388, file: !178, line: 621, baseType: !5946, size: 64, offset: 128)
!6552 = !DIDerivedType(tag: DW_TAG_member, name: "scsidone", scope: !6388, file: !178, line: 622, baseType: !6352, size: 64, offset: 192)
!6553 = !DIDerivedType(tag: DW_TAG_member, name: "tf", scope: !6388, file: !178, line: 624, baseType: !6554, size: 256, offset: 256)
!6554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_taskfile", file: !178, line: 550, size: 256, elements: !6555)
!6555 = !{!6556, !6557, !6558, !6559, !6560, !6561, !6562, !6563, !6564, !6565, !6566, !6567, !6568, !6569, !6570, !6571}
!6556 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6554, file: !178, line: 551, baseType: !1012, size: 64)
!6557 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !6554, file: !178, line: 552, baseType: !2257, size: 8, offset: 64)
!6558 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !6554, file: !178, line: 554, baseType: !2257, size: 8, offset: 72)
!6559 = !DIDerivedType(tag: DW_TAG_member, name: "hob_feature", scope: !6554, file: !178, line: 556, baseType: !2257, size: 8, offset: 80)
!6560 = !DIDerivedType(tag: DW_TAG_member, name: "hob_nsect", scope: !6554, file: !178, line: 557, baseType: !2257, size: 8, offset: 88)
!6561 = !DIDerivedType(tag: DW_TAG_member, name: "hob_lbal", scope: !6554, file: !178, line: 558, baseType: !2257, size: 8, offset: 96)
!6562 = !DIDerivedType(tag: DW_TAG_member, name: "hob_lbam", scope: !6554, file: !178, line: 559, baseType: !2257, size: 8, offset: 104)
!6563 = !DIDerivedType(tag: DW_TAG_member, name: "hob_lbah", scope: !6554, file: !178, line: 560, baseType: !2257, size: 8, offset: 112)
!6564 = !DIDerivedType(tag: DW_TAG_member, name: "feature", scope: !6554, file: !178, line: 562, baseType: !2257, size: 8, offset: 120)
!6565 = !DIDerivedType(tag: DW_TAG_member, name: "nsect", scope: !6554, file: !178, line: 563, baseType: !2257, size: 8, offset: 128)
!6566 = !DIDerivedType(tag: DW_TAG_member, name: "lbal", scope: !6554, file: !178, line: 564, baseType: !2257, size: 8, offset: 136)
!6567 = !DIDerivedType(tag: DW_TAG_member, name: "lbam", scope: !6554, file: !178, line: 565, baseType: !2257, size: 8, offset: 144)
!6568 = !DIDerivedType(tag: DW_TAG_member, name: "lbah", scope: !6554, file: !178, line: 566, baseType: !2257, size: 8, offset: 152)
!6569 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !6554, file: !178, line: 568, baseType: !2257, size: 8, offset: 160)
!6570 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !6554, file: !178, line: 570, baseType: !2257, size: 8, offset: 168)
!6571 = !DIDerivedType(tag: DW_TAG_member, name: "auxiliary", scope: !6554, file: !178, line: 572, baseType: !1042, size: 32, offset: 192)
!6572 = !DIDerivedType(tag: DW_TAG_member, name: "cdb", scope: !6388, file: !178, line: 625, baseType: !6573, size: 128, offset: 512)
!6573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2257, size: 128, elements: !2638)
!6574 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6388, file: !178, line: 627, baseType: !1012, size: 64, offset: 640)
!6575 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !6388, file: !178, line: 628, baseType: !7, size: 32, offset: 704)
!6576 = !DIDerivedType(tag: DW_TAG_member, name: "hw_tag", scope: !6388, file: !178, line: 629, baseType: !7, size: 32, offset: 736)
!6577 = !DIDerivedType(tag: DW_TAG_member, name: "n_elem", scope: !6388, file: !178, line: 630, baseType: !7, size: 32, offset: 768)
!6578 = !DIDerivedType(tag: DW_TAG_member, name: "orig_n_elem", scope: !6388, file: !178, line: 631, baseType: !7, size: 32, offset: 800)
!6579 = !DIDerivedType(tag: DW_TAG_member, name: "dma_dir", scope: !6388, file: !178, line: 633, baseType: !206, size: 32, offset: 832)
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "sect_size", scope: !6388, file: !178, line: 635, baseType: !7, size: 32, offset: 864)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "nbytes", scope: !6388, file: !178, line: 637, baseType: !7, size: 32, offset: 896)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "extrabytes", scope: !6388, file: !178, line: 638, baseType: !7, size: 32, offset: 928)
!6583 = !DIDerivedType(tag: DW_TAG_member, name: "curbytes", scope: !6388, file: !178, line: 639, baseType: !7, size: 32, offset: 960)
!6584 = !DIDerivedType(tag: DW_TAG_member, name: "sgent", scope: !6388, file: !178, line: 641, baseType: !6335, size: 256, offset: 1024)
!6585 = !DIDerivedType(tag: DW_TAG_member, name: "sg", scope: !6388, file: !178, line: 643, baseType: !6334, size: 64, offset: 1280)
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "cursg", scope: !6388, file: !178, line: 645, baseType: !6334, size: 64, offset: 1344)
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "cursg_ofs", scope: !6388, file: !178, line: 646, baseType: !7, size: 32, offset: 1408)
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "err_mask", scope: !6388, file: !178, line: 648, baseType: !7, size: 32, offset: 1440)
!6589 = !DIDerivedType(tag: DW_TAG_member, name: "result_tf", scope: !6388, file: !178, line: 649, baseType: !6554, size: 256, offset: 1472)
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !6388, file: !178, line: 650, baseType: !6591, size: 64, offset: 1728)
!6591 = !DIDerivedType(tag: DW_TAG_typedef, name: "ata_qc_cb_t", file: !178, line: 529, baseType: !6592)
!6592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6593, size: 64)
!6593 = !DISubroutineType(types: !6594)
!6594 = !{null, !6387}
!6595 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !6388, file: !178, line: 652, baseType: !970, size: 64, offset: 1792)
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "lldd_task", scope: !6388, file: !178, line: 653, baseType: !970, size: 64, offset: 1856)
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "check_atapi_dma", scope: !6381, file: !178, line: 901, baseType: !6384, size: 64, offset: 64)
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "qc_prep", scope: !6381, file: !178, line: 902, baseType: !6599, size: 64, offset: 128)
!6599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6600, size: 64)
!6600 = !DISubroutineType(types: !6601)
!6601 = !{!177, !6387}
!6602 = !DIDerivedType(tag: DW_TAG_member, name: "qc_issue", scope: !6381, file: !178, line: 903, baseType: !6603, size: 64, offset: 192)
!6603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6604, size: 64)
!6604 = !DISubroutineType(types: !6605)
!6605 = !{!7, !6387}
!6606 = !DIDerivedType(tag: DW_TAG_member, name: "qc_fill_rtf", scope: !6381, file: !178, line: 904, baseType: !6607, size: 64, offset: 256)
!6607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6608, size: 64)
!6608 = !DISubroutineType(types: !6609)
!6609 = !{!1333, !6387}
!6610 = !DIDerivedType(tag: DW_TAG_member, name: "cable_detect", scope: !6381, file: !178, line: 909, baseType: !6611, size: 64, offset: 320)
!6611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6612, size: 64)
!6612 = !DISubroutineType(types: !6613)
!6613 = !{!206, !6375}
!6614 = !DIDerivedType(tag: DW_TAG_member, name: "mode_filter", scope: !6381, file: !178, line: 910, baseType: !6615, size: 64, offset: 384)
!6615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6616, size: 64)
!6616 = !DISubroutineType(types: !6617)
!6617 = !{!1012, !6392, !1012}
!6618 = !DIDerivedType(tag: DW_TAG_member, name: "set_piomode", scope: !6381, file: !178, line: 911, baseType: !6619, size: 64, offset: 448)
!6619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6620, size: 64)
!6620 = !DISubroutineType(types: !6621)
!6621 = !{null, !6375, !6392}
!6622 = !DIDerivedType(tag: DW_TAG_member, name: "set_dmamode", scope: !6381, file: !178, line: 912, baseType: !6619, size: 64, offset: 512)
!6623 = !DIDerivedType(tag: DW_TAG_member, name: "set_mode", scope: !6381, file: !178, line: 913, baseType: !6624, size: 64, offset: 576)
!6624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6625, size: 64)
!6625 = !DISubroutineType(types: !6626)
!6626 = !{!206, !6396, !6627}
!6627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6392, size: 64)
!6628 = !DIDerivedType(tag: DW_TAG_member, name: "read_id", scope: !6381, file: !178, line: 914, baseType: !6629, size: 64, offset: 640)
!6629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6630, size: 64)
!6630 = !DISubroutineType(types: !6631)
!6631 = !{!7, !6392, !6632, !6633}
!6632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6554, size: 64)
!6633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1754, size: 64)
!6634 = !DIDerivedType(tag: DW_TAG_member, name: "dev_config", scope: !6381, file: !178, line: 916, baseType: !6635, size: 64, offset: 704)
!6635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6636, size: 64)
!6636 = !DISubroutineType(types: !6637)
!6637 = !{null, !6392}
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !6381, file: !178, line: 918, baseType: !6639, size: 64, offset: 768)
!6639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6640, size: 64)
!6640 = !DISubroutineType(types: !6641)
!6641 = !{null, !6375}
!6642 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !6381, file: !178, line: 919, baseType: !6639, size: 64, offset: 832)
!6643 = !DIDerivedType(tag: DW_TAG_member, name: "prereset", scope: !6381, file: !178, line: 920, baseType: !6644, size: 64, offset: 896)
!6644 = !DIDerivedType(tag: DW_TAG_typedef, name: "ata_prereset_fn_t", file: !178, line: 530, baseType: !6645)
!6645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6646, size: 64)
!6646 = !DISubroutineType(types: !6647)
!6647 = !{!206, !6396, !1012}
!6648 = !DIDerivedType(tag: DW_TAG_member, name: "softreset", scope: !6381, file: !178, line: 921, baseType: !6649, size: 64, offset: 960)
!6649 = !DIDerivedType(tag: DW_TAG_typedef, name: "ata_reset_fn_t", file: !178, line: 531, baseType: !6650)
!6650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6651, size: 64)
!6651 = !DISubroutineType(types: !6652)
!6652 = !{!206, !6396, !3505, !1012}
!6653 = !DIDerivedType(tag: DW_TAG_member, name: "hardreset", scope: !6381, file: !178, line: 922, baseType: !6649, size: 64, offset: 1024)
!6654 = !DIDerivedType(tag: DW_TAG_member, name: "postreset", scope: !6381, file: !178, line: 923, baseType: !6655, size: 64, offset: 1088)
!6655 = !DIDerivedType(tag: DW_TAG_typedef, name: "ata_postreset_fn_t", file: !178, line: 533, baseType: !6656)
!6656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6657, size: 64)
!6657 = !DISubroutineType(types: !6658)
!6658 = !{null, !6396, !3505}
!6659 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_prereset", scope: !6381, file: !178, line: 924, baseType: !6644, size: 64, offset: 1152)
!6660 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_softreset", scope: !6381, file: !178, line: 925, baseType: !6649, size: 64, offset: 1216)
!6661 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_hardreset", scope: !6381, file: !178, line: 926, baseType: !6649, size: 64, offset: 1280)
!6662 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_postreset", scope: !6381, file: !178, line: 927, baseType: !6655, size: 64, offset: 1344)
!6663 = !DIDerivedType(tag: DW_TAG_member, name: "error_handler", scope: !6381, file: !178, line: 928, baseType: !6639, size: 64, offset: 1408)
!6664 = !DIDerivedType(tag: DW_TAG_member, name: "lost_interrupt", scope: !6381, file: !178, line: 929, baseType: !6639, size: 64, offset: 1472)
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "post_internal_cmd", scope: !6381, file: !178, line: 930, baseType: !6592, size: 64, offset: 1536)
!6666 = !DIDerivedType(tag: DW_TAG_member, name: "sched_eh", scope: !6381, file: !178, line: 931, baseType: !6639, size: 64, offset: 1600)
!6667 = !DIDerivedType(tag: DW_TAG_member, name: "end_eh", scope: !6381, file: !178, line: 932, baseType: !6639, size: 64, offset: 1664)
!6668 = !DIDerivedType(tag: DW_TAG_member, name: "scr_read", scope: !6381, file: !178, line: 937, baseType: !6669, size: 64, offset: 1728)
!6669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6670, size: 64)
!6670 = !DISubroutineType(types: !6671)
!6671 = !{!206, !6396, !7, !1041}
!6672 = !DIDerivedType(tag: DW_TAG_member, name: "scr_write", scope: !6381, file: !178, line: 938, baseType: !6673, size: 64, offset: 1792)
!6673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6674, size: 64)
!6674 = !DISubroutineType(types: !6675)
!6675 = !{!206, !6396, !7, !1042}
!6676 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_attach", scope: !6381, file: !178, line: 939, baseType: !6639, size: 64, offset: 1856)
!6677 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_detach", scope: !6381, file: !178, line: 940, baseType: !6639, size: 64, offset: 1920)
!6678 = !DIDerivedType(tag: DW_TAG_member, name: "set_lpm", scope: !6381, file: !178, line: 941, baseType: !6679, size: 64, offset: 1984)
!6679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6680, size: 64)
!6680 = !DISubroutineType(types: !6681)
!6681 = !{!206, !6396, !192, !7}
!6682 = !DIDerivedType(tag: DW_TAG_member, name: "port_suspend", scope: !6381, file: !178, line: 947, baseType: !6683, size: 64, offset: 2048)
!6683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6684, size: 64)
!6684 = !DISubroutineType(types: !6685)
!6685 = !{!206, !6375, !5324}
!6686 = !DIDerivedType(tag: DW_TAG_member, name: "port_resume", scope: !6381, file: !178, line: 948, baseType: !6611, size: 64, offset: 2112)
!6687 = !DIDerivedType(tag: DW_TAG_member, name: "port_start", scope: !6381, file: !178, line: 949, baseType: !6611, size: 64, offset: 2176)
!6688 = !DIDerivedType(tag: DW_TAG_member, name: "port_stop", scope: !6381, file: !178, line: 950, baseType: !6639, size: 64, offset: 2240)
!6689 = !DIDerivedType(tag: DW_TAG_member, name: "host_stop", scope: !6381, file: !178, line: 951, baseType: !6690, size: 64, offset: 2304)
!6690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6691, size: 64)
!6691 = !DISubroutineType(types: !6692)
!6692 = !{null, !6693}
!6693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6694, size: 64)
!6694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_host", file: !178, line: 599, size: 768, elements: !6695)
!6695 = !{!6696, !6697, !6698, !6701, !6702, !6703, !6704, !6705, !6706, !6707, !6708, !6709, !6710}
!6696 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6694, file: !178, line: 600, baseType: !1087)
!6697 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6694, file: !178, line: 601, baseType: !1070, size: 64)
!6698 = !DIDerivedType(tag: DW_TAG_member, name: "iomap", scope: !6694, file: !178, line: 602, baseType: !6699, size: 64, offset: 64)
!6699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6700, size: 64)
!6700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !970)
!6701 = !DIDerivedType(tag: DW_TAG_member, name: "n_ports", scope: !6694, file: !178, line: 603, baseType: !7, size: 32, offset: 128)
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "n_tags", scope: !6694, file: !178, line: 604, baseType: !7, size: 32, offset: 160)
!6703 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !6694, file: !178, line: 605, baseType: !970, size: 64, offset: 192)
!6704 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6694, file: !178, line: 606, baseType: !6380, size: 64, offset: 256)
!6705 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6694, file: !178, line: 607, baseType: !1012, size: 64, offset: 320)
!6706 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !6694, file: !178, line: 608, baseType: !2959, size: 32, offset: 384)
!6707 = !DIDerivedType(tag: DW_TAG_member, name: "eh_mutex", scope: !6694, file: !178, line: 610, baseType: !1568, size: 192, offset: 448)
!6708 = !DIDerivedType(tag: DW_TAG_member, name: "eh_owner", scope: !6694, file: !178, line: 611, baseType: !2121, size: 64, offset: 640)
!6709 = !DIDerivedType(tag: DW_TAG_member, name: "simplex_claimed", scope: !6694, file: !178, line: 613, baseType: !6375, size: 64, offset: 704)
!6710 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !6694, file: !178, line: 614, baseType: !6711, offset: 768)
!6711 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6375, elements: !2913)
!6712 = !DIDerivedType(tag: DW_TAG_member, name: "sff_dev_select", scope: !6381, file: !178, line: 957, baseType: !6713, size: 64, offset: 2368)
!6713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6714, size: 64)
!6714 = !DISubroutineType(types: !6715)
!6715 = !{null, !6375, !7}
!6716 = !DIDerivedType(tag: DW_TAG_member, name: "sff_set_devctl", scope: !6381, file: !178, line: 958, baseType: !6717, size: 64, offset: 2432)
!6717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6718, size: 64)
!6718 = !DISubroutineType(types: !6719)
!6719 = !{null, !6375, !2257}
!6720 = !DIDerivedType(tag: DW_TAG_member, name: "sff_check_status", scope: !6381, file: !178, line: 959, baseType: !6721, size: 64, offset: 2496)
!6721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6722, size: 64)
!6722 = !DISubroutineType(types: !6723)
!6723 = !{!2257, !6375}
!6724 = !DIDerivedType(tag: DW_TAG_member, name: "sff_check_altstatus", scope: !6381, file: !178, line: 960, baseType: !6721, size: 64, offset: 2560)
!6725 = !DIDerivedType(tag: DW_TAG_member, name: "sff_tf_load", scope: !6381, file: !178, line: 961, baseType: !6726, size: 64, offset: 2624)
!6726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6727, size: 64)
!6727 = !DISubroutineType(types: !6728)
!6728 = !{null, !6375, !6729}
!6729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6730, size: 64)
!6730 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6554)
!6731 = !DIDerivedType(tag: DW_TAG_member, name: "sff_tf_read", scope: !6381, file: !178, line: 962, baseType: !6732, size: 64, offset: 2688)
!6732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6733, size: 64)
!6733 = !DISubroutineType(types: !6734)
!6734 = !{null, !6375, !6632}
!6735 = !DIDerivedType(tag: DW_TAG_member, name: "sff_exec_command", scope: !6381, file: !178, line: 963, baseType: !6726, size: 64, offset: 2752)
!6736 = !DIDerivedType(tag: DW_TAG_member, name: "sff_data_xfer", scope: !6381, file: !178, line: 965, baseType: !6737, size: 64, offset: 2816)
!6737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6738, size: 64)
!6738 = !DISubroutineType(types: !6739)
!6739 = !{!7, !6387, !5957, !7, !206}
!6740 = !DIDerivedType(tag: DW_TAG_member, name: "sff_irq_on", scope: !6381, file: !178, line: 967, baseType: !6639, size: 64, offset: 2880)
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "sff_irq_check", scope: !6381, file: !178, line: 968, baseType: !6742, size: 64, offset: 2944)
!6742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6743, size: 64)
!6743 = !DISubroutineType(types: !6744)
!6744 = !{!1333, !6375}
!6745 = !DIDerivedType(tag: DW_TAG_member, name: "sff_irq_clear", scope: !6381, file: !178, line: 969, baseType: !6639, size: 64, offset: 3008)
!6746 = !DIDerivedType(tag: DW_TAG_member, name: "sff_drain_fifo", scope: !6381, file: !178, line: 970, baseType: !6592, size: 64, offset: 3072)
!6747 = !DIDerivedType(tag: DW_TAG_member, name: "bmdma_setup", scope: !6381, file: !178, line: 973, baseType: !6592, size: 64, offset: 3136)
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "bmdma_start", scope: !6381, file: !178, line: 974, baseType: !6592, size: 64, offset: 3200)
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "bmdma_stop", scope: !6381, file: !178, line: 975, baseType: !6592, size: 64, offset: 3264)
!6750 = !DIDerivedType(tag: DW_TAG_member, name: "bmdma_status", scope: !6381, file: !178, line: 976, baseType: !6721, size: 64, offset: 3328)
!6751 = !DIDerivedType(tag: DW_TAG_member, name: "em_show", scope: !6381, file: !178, line: 980, baseType: !6752, size: 64, offset: 3392)
!6752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6753, size: 64)
!6753 = !DISubroutineType(types: !6754)
!6754 = !{!1159, !6375, !1128}
!6755 = !DIDerivedType(tag: DW_TAG_member, name: "em_store", scope: !6381, file: !178, line: 981, baseType: !6756, size: 64, offset: 3456)
!6756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6757, size: 64)
!6757 = !DISubroutineType(types: !6758)
!6758 = !{!1159, !6375, !1008, !1173}
!6759 = !DIDerivedType(tag: DW_TAG_member, name: "sw_activity_show", scope: !6381, file: !178, line: 983, baseType: !6760, size: 64, offset: 3520)
!6760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6761, size: 64)
!6761 = !DISubroutineType(types: !6762)
!6762 = !{!1159, !6392, !1128}
!6763 = !DIDerivedType(tag: DW_TAG_member, name: "sw_activity_store", scope: !6381, file: !178, line: 984, baseType: !6764, size: 64, offset: 3584)
!6764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6765, size: 64)
!6765 = !DISubroutineType(types: !6766)
!6766 = !{!1159, !6392, !200}
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "transmit_led_message", scope: !6381, file: !178, line: 986, baseType: !6768, size: 64, offset: 3648)
!6768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6769, size: 64)
!6769 = !DISubroutineType(types: !6770)
!6770 = !{!1159, !6375, !1042, !1159}
!6771 = !DIDerivedType(tag: DW_TAG_member, name: "phy_reset", scope: !6381, file: !178, line: 992, baseType: !6639, size: 64, offset: 3712)
!6772 = !DIDerivedType(tag: DW_TAG_member, name: "eng_timeout", scope: !6381, file: !178, line: 993, baseType: !6639, size: 64, offset: 3776)
!6773 = !DIDerivedType(tag: DW_TAG_member, name: "inherits", scope: !6381, file: !178, line: 999, baseType: !6774, size: 64, offset: 3840)
!6774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6775, size: 64)
!6775 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6381)
!6776 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6376, file: !178, line: 814, baseType: !1977, size: 64, offset: 128)
!6777 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6376, file: !178, line: 817, baseType: !1012, size: 64, offset: 192)
!6778 = !DIDerivedType(tag: DW_TAG_member, name: "pflags", scope: !6376, file: !178, line: 819, baseType: !7, size: 32, offset: 256)
!6779 = !DIDerivedType(tag: DW_TAG_member, name: "print_id", scope: !6376, file: !178, line: 820, baseType: !7, size: 32, offset: 288)
!6780 = !DIDerivedType(tag: DW_TAG_member, name: "local_port_no", scope: !6376, file: !178, line: 821, baseType: !7, size: 32, offset: 320)
!6781 = !DIDerivedType(tag: DW_TAG_member, name: "port_no", scope: !6376, file: !178, line: 822, baseType: !7, size: 32, offset: 352)
!6782 = !DIDerivedType(tag: DW_TAG_member, name: "ioaddr", scope: !6376, file: !178, line: 825, baseType: !6783, size: 960, offset: 384)
!6783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_ioports", file: !178, line: 578, size: 960, elements: !6784)
!6784 = !{!6785, !6786, !6787, !6788, !6789, !6790, !6791, !6792, !6793, !6794, !6795, !6796, !6797, !6798, !6799}
!6785 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_addr", scope: !6783, file: !178, line: 579, baseType: !970, size: 64)
!6786 = !DIDerivedType(tag: DW_TAG_member, name: "data_addr", scope: !6783, file: !178, line: 580, baseType: !970, size: 64, offset: 64)
!6787 = !DIDerivedType(tag: DW_TAG_member, name: "error_addr", scope: !6783, file: !178, line: 581, baseType: !970, size: 64, offset: 128)
!6788 = !DIDerivedType(tag: DW_TAG_member, name: "feature_addr", scope: !6783, file: !178, line: 582, baseType: !970, size: 64, offset: 192)
!6789 = !DIDerivedType(tag: DW_TAG_member, name: "nsect_addr", scope: !6783, file: !178, line: 583, baseType: !970, size: 64, offset: 256)
!6790 = !DIDerivedType(tag: DW_TAG_member, name: "lbal_addr", scope: !6783, file: !178, line: 584, baseType: !970, size: 64, offset: 320)
!6791 = !DIDerivedType(tag: DW_TAG_member, name: "lbam_addr", scope: !6783, file: !178, line: 585, baseType: !970, size: 64, offset: 384)
!6792 = !DIDerivedType(tag: DW_TAG_member, name: "lbah_addr", scope: !6783, file: !178, line: 586, baseType: !970, size: 64, offset: 448)
!6793 = !DIDerivedType(tag: DW_TAG_member, name: "device_addr", scope: !6783, file: !178, line: 587, baseType: !970, size: 64, offset: 512)
!6794 = !DIDerivedType(tag: DW_TAG_member, name: "status_addr", scope: !6783, file: !178, line: 588, baseType: !970, size: 64, offset: 576)
!6795 = !DIDerivedType(tag: DW_TAG_member, name: "command_addr", scope: !6783, file: !178, line: 589, baseType: !970, size: 64, offset: 640)
!6796 = !DIDerivedType(tag: DW_TAG_member, name: "altstatus_addr", scope: !6783, file: !178, line: 590, baseType: !970, size: 64, offset: 704)
!6797 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_addr", scope: !6783, file: !178, line: 591, baseType: !970, size: 64, offset: 768)
!6798 = !DIDerivedType(tag: DW_TAG_member, name: "bmdma_addr", scope: !6783, file: !178, line: 593, baseType: !970, size: 64, offset: 832)
!6799 = !DIDerivedType(tag: DW_TAG_member, name: "scr_addr", scope: !6783, file: !178, line: 595, baseType: !970, size: 64, offset: 896)
!6800 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !6376, file: !178, line: 826, baseType: !2257, size: 8, offset: 1344)
!6801 = !DIDerivedType(tag: DW_TAG_member, name: "last_ctl", scope: !6376, file: !178, line: 827, baseType: !2257, size: 8, offset: 1352)
!6802 = !DIDerivedType(tag: DW_TAG_member, name: "sff_pio_task_link", scope: !6376, file: !178, line: 828, baseType: !6396, size: 64, offset: 1408)
!6803 = !DIDerivedType(tag: DW_TAG_member, name: "sff_pio_task", scope: !6376, file: !178, line: 829, baseType: !3005, size: 704, offset: 1472)
!6804 = !DIDerivedType(tag: DW_TAG_member, name: "bmdma_prd", scope: !6376, file: !178, line: 831, baseType: !6805, size: 64, offset: 2176)
!6805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6806, size: 64)
!6806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_bmdma_prd", file: !500, line: 546, size: 64, elements: !6807)
!6807 = !{!6808, !6810}
!6808 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !6806, file: !500, line: 547, baseType: !6809, size: 32)
!6809 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le32", file: !4760, line: 31, baseType: !1043)
!6810 = !DIDerivedType(tag: DW_TAG_member, name: "flags_len", scope: !6806, file: !500, line: 548, baseType: !6809, size: 32, offset: 32)
!6811 = !DIDerivedType(tag: DW_TAG_member, name: "bmdma_prd_dma", scope: !6376, file: !178, line: 832, baseType: !1832, size: 64, offset: 2240)
!6812 = !DIDerivedType(tag: DW_TAG_member, name: "pio_mask", scope: !6376, file: !178, line: 836, baseType: !7, size: 32, offset: 2304)
!6813 = !DIDerivedType(tag: DW_TAG_member, name: "mwdma_mask", scope: !6376, file: !178, line: 837, baseType: !7, size: 32, offset: 2336)
!6814 = !DIDerivedType(tag: DW_TAG_member, name: "udma_mask", scope: !6376, file: !178, line: 838, baseType: !7, size: 32, offset: 2368)
!6815 = !DIDerivedType(tag: DW_TAG_member, name: "cbl", scope: !6376, file: !178, line: 839, baseType: !7, size: 32, offset: 2400)
!6816 = !DIDerivedType(tag: DW_TAG_member, name: "qcmd", scope: !6376, file: !178, line: 841, baseType: !6817, size: 63360, offset: 2432)
!6817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6388, size: 63360, elements: !6818)
!6818 = !{!6819}
!6819 = !DISubrange(count: 33)
!6820 = !DIDerivedType(tag: DW_TAG_member, name: "sas_tag_allocated", scope: !6376, file: !178, line: 842, baseType: !1012, size: 64, offset: 65792)
!6821 = !DIDerivedType(tag: DW_TAG_member, name: "qc_active", scope: !6376, file: !178, line: 843, baseType: !1001, size: 64, offset: 65856)
!6822 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_links", scope: !6376, file: !178, line: 844, baseType: !206, size: 32, offset: 65920)
!6823 = !DIDerivedType(tag: DW_TAG_member, name: "sas_last_tag", scope: !6376, file: !178, line: 845, baseType: !7, size: 32, offset: 65952)
!6824 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !6376, file: !178, line: 847, baseType: !6397, size: 41984, offset: 66048)
!6825 = !DIDerivedType(tag: DW_TAG_member, name: "slave_link", scope: !6376, file: !178, line: 848, baseType: !6396, size: 64, offset: 108032)
!6826 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pmp_links", scope: !6376, file: !178, line: 850, baseType: !206, size: 32, offset: 108096)
!6827 = !DIDerivedType(tag: DW_TAG_member, name: "pmp_link", scope: !6376, file: !178, line: 851, baseType: !6396, size: 64, offset: 108160)
!6828 = !DIDerivedType(tag: DW_TAG_member, name: "excl_link", scope: !6376, file: !178, line: 852, baseType: !6396, size: 64, offset: 108224)
!6829 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !6376, file: !178, line: 854, baseType: !6830, size: 192, offset: 108288)
!6830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_port_stats", file: !178, line: 656, size: 192, elements: !6831)
!6831 = !{!6832, !6833, !6834}
!6832 = !DIDerivedType(tag: DW_TAG_member, name: "unhandled_irq", scope: !6830, file: !178, line: 657, baseType: !1012, size: 64)
!6833 = !DIDerivedType(tag: DW_TAG_member, name: "idle_irq", scope: !6830, file: !178, line: 658, baseType: !1012, size: 64, offset: 64)
!6834 = !DIDerivedType(tag: DW_TAG_member, name: "rw_reqbuf", scope: !6830, file: !178, line: 659, baseType: !1012, size: 64, offset: 128)
!6835 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !6376, file: !178, line: 855, baseType: !6693, size: 64, offset: 108480)
!6836 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6376, file: !178, line: 856, baseType: !1070, size: 64, offset: 108544)
!6837 = !DIDerivedType(tag: DW_TAG_member, name: "tdev", scope: !6376, file: !178, line: 857, baseType: !1071, size: 5568, offset: 108608)
!6838 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_scan_mutex", scope: !6376, file: !178, line: 859, baseType: !1568, size: 192, offset: 114176)
!6839 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_task", scope: !6376, file: !178, line: 860, baseType: !3005, size: 704, offset: 114368)
!6840 = !DIDerivedType(tag: DW_TAG_member, name: "scsi_rescan_task", scope: !6376, file: !178, line: 861, baseType: !2897, size: 256, offset: 115072)
!6841 = !DIDerivedType(tag: DW_TAG_member, name: "hsm_task_state", scope: !6376, file: !178, line: 863, baseType: !7, size: 32, offset: 115328)
!6842 = !DIDerivedType(tag: DW_TAG_member, name: "msg_enable", scope: !6376, file: !178, line: 865, baseType: !1042, size: 32, offset: 115360)
!6843 = !DIDerivedType(tag: DW_TAG_member, name: "eh_done_q", scope: !6376, file: !178, line: 866, baseType: !976, size: 128, offset: 115392)
!6844 = !DIDerivedType(tag: DW_TAG_member, name: "eh_wait_q", scope: !6376, file: !178, line: 867, baseType: !2385, size: 128, offset: 115520)
!6845 = !DIDerivedType(tag: DW_TAG_member, name: "eh_tries", scope: !6376, file: !178, line: 868, baseType: !206, size: 32, offset: 115648)
!6846 = !DIDerivedType(tag: DW_TAG_member, name: "park_req_pending", scope: !6376, file: !178, line: 869, baseType: !2405, size: 192, offset: 115712)
!6847 = !DIDerivedType(tag: DW_TAG_member, name: "pm_mesg", scope: !6376, file: !178, line: 871, baseType: !5324, size: 32, offset: 115904)
!6848 = !DIDerivedType(tag: DW_TAG_member, name: "target_lpm_policy", scope: !6376, file: !178, line: 872, baseType: !192, size: 32, offset: 115936)
!6849 = !DIDerivedType(tag: DW_TAG_member, name: "fastdrain_timer", scope: !6376, file: !178, line: 874, baseType: !3009, size: 320, offset: 115968)
!6850 = !DIDerivedType(tag: DW_TAG_member, name: "fastdrain_cnt", scope: !6376, file: !178, line: 875, baseType: !1012, size: 64, offset: 116288)
!6851 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !6376, file: !178, line: 877, baseType: !6852, size: 64, offset: 116352)
!6852 = !DIDerivedType(tag: DW_TAG_typedef, name: "async_cookie_t", file: !6853, line: 16, baseType: !1001)
!6853 = !DIFile(filename: "./include/linux/async.h", directory: "/home/lizy2001/genbc/linux")
!6854 = !DIDerivedType(tag: DW_TAG_member, name: "em_message_type", scope: !6376, file: !178, line: 879, baseType: !206, size: 32, offset: 116416)
!6855 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !6376, file: !178, line: 880, baseType: !970, size: 64, offset: 116480)
!6856 = !DIDerivedType(tag: DW_TAG_member, name: "__acpi_init_gtm", scope: !6376, file: !178, line: 883, baseType: !6857, size: 160, offset: 116544)
!6857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_acpi_gtm", file: !178, line: 778, size: 160, elements: !6858)
!6858 = !{!6859, !6865}
!6859 = !DIDerivedType(tag: DW_TAG_member, name: "drive", scope: !6857, file: !178, line: 779, baseType: !6860, size: 128)
!6860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6861, size: 128, elements: !2472)
!6861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_acpi_drive", file: !178, line: 772, size: 64, elements: !6862)
!6862 = !{!6863, !6864}
!6863 = !DIDerivedType(tag: DW_TAG_member, name: "pio", scope: !6861, file: !178, line: 774, baseType: !1042, size: 32)
!6864 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !6861, file: !178, line: 775, baseType: !1042, size: 32, offset: 32)
!6865 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6857, file: !178, line: 780, baseType: !1042, size: 32, offset: 128)
!6866 = !DIDerivedType(tag: DW_TAG_member, name: "sector_buf", scope: !6376, file: !178, line: 886, baseType: !6867, size: 4096, align: 512, offset: 116736)
!6867 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2257, size: 4096, elements: !6868)
!6868 = !{!6869}
!6869 = !DISubrange(count: 512)
!6870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2121, size: 64)
!6871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6375, size: 64)
!6872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6873, size: 64)
!6873 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !980)
!6874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6875, size: 64)
!6875 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6873)
!6876 = !{!6877, !0, !6890, !6893, !6896, !6898, !6905, !6907, !6913}
!6877 = !DIGlobalVariableExpression(var: !6878, expr: !DIExpression())
!6878 = distinct !DIGlobalVariable(name: "cmd_descr", scope: !6879, file: !3, line: 2098, type: !6882, isLocal: true, isDefinition: true)
!6879 = distinct !DISubprogram(name: "ata_get_cmd_descript", scope: !3, file: !3, line: 2091, type: !6880, scopeLine: 2092, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!6880 = !DISubroutineType(types: !6881)
!6881 = !{!1008, !2257}
!6882 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6883, size: 11776, elements: !6888)
!6883 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6884)
!6884 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6879, file: !3, line: 2094, size: 128, elements: !6885)
!6885 = !{!6886, !6887}
!6886 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !6884, file: !3, line: 2096, baseType: !2257, size: 8)
!6887 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !6884, file: !3, line: 2097, baseType: !1008, size: 64, offset: 64)
!6888 = !{!6889}
!6889 = !DISubrange(count: 92)
!6890 = !DIGlobalVariableExpression(var: !6891, expr: !DIExpression())
!6891 = distinct !DIGlobalVariable(name: "ata_eh_identify_timeouts", scope: !2, file: !3, line: 89, type: !6892, isLocal: true, isDefinition: true)
!6892 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4229, size: 256, elements: !1017)
!6893 = !DIGlobalVariableExpression(var: !6894, expr: !DIExpression())
!6894 = distinct !DIGlobalVariable(name: "ata_eh_other_timeouts", scope: !2, file: !3, line: 103, type: !6895, isLocal: true, isDefinition: true)
!6895 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4229, size: 192, elements: !1129)
!6896 = !DIGlobalVariableExpression(var: !6897, expr: !DIExpression())
!6897 = distinct !DIGlobalVariable(name: "ata_eh_flush_timeouts", scope: !2, file: !3, line: 96, type: !6892, isLocal: true, isDefinition: true)
!6898 = !DIGlobalVariableExpression(var: !6899, expr: !DIExpression())
!6899 = distinct !DIGlobalVariable(name: "dma_dnxfer_sel", scope: !6900, file: !3, line: 1826, type: !6903, isLocal: true, isDefinition: true)
!6900 = distinct !DISubprogram(name: "ata_eh_speed_down", scope: !3, file: !3, line: 1791, type: !6901, scopeLine: 1793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!6901 = !DISubroutineType(types: !6902)
!6902 = !{!7, !6392, !7, !7}
!6903 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6904, size: 64, elements: !2472)
!6904 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !206)
!6905 = !DIGlobalVariableExpression(var: !6906, expr: !DIExpression())
!6906 = distinct !DIGlobalVariable(name: "pio_dnxfer_sel", scope: !6900, file: !3, line: 1828, type: !6903, isLocal: true, isDefinition: true)
!6907 = !DIGlobalVariableExpression(var: !6908, expr: !DIExpression())
!6908 = distinct !DIGlobalVariable(name: "dma_str", scope: !6909, file: !3, line: 2300, type: !6912, isLocal: true, isDefinition: true)
!6909 = distinct !DISubprogram(name: "ata_eh_link_report", scope: !3, file: !3, line: 2212, type: !6910, scopeLine: 2213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!6910 = !DISubroutineType(types: !6911)
!6911 = !{null, !6396}
!6912 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1008, size: 192, elements: !1129)
!6913 = !DIGlobalVariableExpression(var: !6914, expr: !DIExpression())
!6914 = distinct !DIGlobalVariable(name: "ata_eh_reset_timeouts", scope: !2, file: !3, line: 81, type: !6915, isLocal: true, isDefinition: true)
!6915 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4229, size: 320, elements: !3774)
!6916 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6917, size: 768, elements: !2528)
!6917 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6918)
!6918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ata_eh_cmd_timeout_ent", file: !3, line: 110, size: 128, elements: !6919)
!6919 = !{!6920, !6923}
!6920 = !DIDerivedType(tag: DW_TAG_member, name: "commands", scope: !6918, file: !3, line: 111, baseType: !6921, size: 64)
!6921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6922, size: 64)
!6922 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2257)
!6923 = !DIDerivedType(tag: DW_TAG_member, name: "timeouts", scope: !6918, file: !3, line: 112, baseType: !6924, size: 64, offset: 64)
!6924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4229, size: 64)
!6925 = !{!"rsp"}
!6926 = !{i32 7, !"Dwarf Version", i32 4}
!6927 = !{i32 2, !"Debug Info Version", i32 3}
!6928 = !{i32 1, !"wchar_size", i32 2}
!6929 = !{i32 1, !"Code Model", i32 2}
!6930 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!6931 = distinct !DISubprogram(name: "__ata_ehi_push_desc", scope: !3, file: !3, line: 175, type: !6932, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!6932 = !DISubroutineType(types: !6933)
!6933 = !{null, !6934, !1008, null}
!6934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6411, size: 64)
!6935 = !DILocalVariable(name: "ehi", arg: 1, scope: !6931, file: !3, line: 175, type: !6934)
!6936 = !DILocation(line: 175, column: 46, scope: !6931)
!6937 = !DILocalVariable(name: "fmt", arg: 2, scope: !6931, file: !3, line: 175, type: !1008)
!6938 = !DILocation(line: 175, column: 63, scope: !6931)
!6939 = !DILocalVariable(name: "args", scope: !6931, file: !3, line: 177, type: !6940)
!6940 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !6941, line: 99, baseType: !6942)
!6941 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h", directory: "")
!6942 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !6941, line: 40, baseType: !6943)
!6943 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3, line: 177, baseType: !6944)
!6944 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6945, size: 192, elements: !2276)
!6945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, line: 177, size: 192, elements: !6946)
!6946 = !{!6947, !6948, !6949, !6950}
!6947 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !6945, file: !3, line: 177, baseType: !7, size: 32)
!6948 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !6945, file: !3, line: 177, baseType: !7, size: 32, offset: 32)
!6949 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !6945, file: !3, line: 177, baseType: !970, size: 64, offset: 64)
!6950 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !6945, file: !3, line: 177, baseType: !970, size: 64, offset: 128)
!6951 = !DILocation(line: 177, column: 10, scope: !6931)
!6952 = !DILocation(line: 179, column: 2, scope: !6931)
!6953 = !DILocation(line: 180, column: 23, scope: !6931)
!6954 = !DILocation(line: 180, column: 28, scope: !6931)
!6955 = !DILocation(line: 180, column: 33, scope: !6931)
!6956 = !DILocation(line: 180, column: 2, scope: !6931)
!6957 = !DILocation(line: 181, column: 2, scope: !6931)
!6958 = !DILocation(line: 182, column: 1, scope: !6931)
!6959 = distinct !DISubprogram(name: "__ata_ehi_pushv_desc", scope: !3, file: !3, line: 157, type: !6960, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!6960 = !DISubroutineType(types: !6961)
!6961 = !{null, !6934, !1008, !6962}
!6962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6945, size: 64)
!6963 = !DILocalVariable(name: "ehi", arg: 1, scope: !6959, file: !3, line: 157, type: !6934)
!6964 = !DILocation(line: 157, column: 69, scope: !6959)
!6965 = !DILocalVariable(name: "fmt", arg: 2, scope: !6959, file: !3, line: 158, type: !1008)
!6966 = !DILocation(line: 158, column: 18, scope: !6959)
!6967 = !DILocalVariable(name: "args", arg: 3, scope: !6959, file: !3, line: 158, type: !6962)
!6968 = !DILocation(line: 158, column: 31, scope: !6959)
!6969 = !DILocation(line: 160, column: 30, scope: !6959)
!6970 = !DILocation(line: 160, column: 35, scope: !6959)
!6971 = !DILocation(line: 160, column: 42, scope: !6959)
!6972 = !DILocation(line: 160, column: 47, scope: !6959)
!6973 = !DILocation(line: 160, column: 40, scope: !6959)
!6974 = !DILocation(line: 161, column: 28, scope: !6959)
!6975 = !DILocation(line: 161, column: 33, scope: !6959)
!6976 = !DILocation(line: 161, column: 26, scope: !6959)
!6977 = !DILocation(line: 161, column: 10, scope: !6959)
!6978 = !DILocation(line: 162, column: 10, scope: !6959)
!6979 = !DILocation(line: 162, column: 15, scope: !6959)
!6980 = !DILocation(line: 160, column: 19, scope: !6959)
!6981 = !DILocation(line: 160, column: 2, scope: !6959)
!6982 = !DILocation(line: 160, column: 7, scope: !6959)
!6983 = !DILocation(line: 160, column: 16, scope: !6959)
!6984 = !DILocation(line: 163, column: 1, scope: !6959)
!6985 = distinct !DISubprogram(name: "ata_ehi_push_desc", scope: !3, file: !3, line: 196, type: !6932, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!6986 = !DILocalVariable(name: "ehi", arg: 1, scope: !6985, file: !3, line: 196, type: !6934)
!6987 = !DILocation(line: 196, column: 44, scope: !6985)
!6988 = !DILocalVariable(name: "fmt", arg: 2, scope: !6985, file: !3, line: 196, type: !1008)
!6989 = !DILocation(line: 196, column: 61, scope: !6985)
!6990 = !DILocalVariable(name: "args", scope: !6985, file: !3, line: 198, type: !6940)
!6991 = !DILocation(line: 198, column: 10, scope: !6985)
!6992 = !DILocation(line: 200, column: 6, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6985, file: !3, line: 200, column: 6)
!6994 = !DILocation(line: 200, column: 11, scope: !6993)
!6995 = !DILocation(line: 200, column: 6, scope: !6985)
!6996 = !DILocation(line: 201, column: 23, scope: !6993)
!6997 = !DILocation(line: 201, column: 3, scope: !6993)
!6998 = !DILocation(line: 203, column: 2, scope: !6985)
!6999 = !DILocation(line: 204, column: 23, scope: !6985)
!7000 = !DILocation(line: 204, column: 28, scope: !6985)
!7001 = !DILocation(line: 204, column: 33, scope: !6985)
!7002 = !DILocation(line: 204, column: 2, scope: !6985)
!7003 = !DILocation(line: 205, column: 2, scope: !6985)
!7004 = !DILocation(line: 206, column: 1, scope: !6985)
!7005 = distinct !DISubprogram(name: "ata_ehi_clear_desc", scope: !3, file: !3, line: 218, type: !7006, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!7006 = !DISubroutineType(types: !7007)
!7007 = !{null, !6934}
!7008 = !DILocalVariable(name: "ehi", arg: 1, scope: !7005, file: !3, line: 218, type: !6934)
!7009 = !DILocation(line: 218, column: 45, scope: !7005)
!7010 = !DILocation(line: 220, column: 2, scope: !7005)
!7011 = !DILocation(line: 220, column: 7, scope: !7005)
!7012 = !DILocation(line: 220, column: 15, scope: !7005)
!7013 = !DILocation(line: 221, column: 2, scope: !7005)
!7014 = !DILocation(line: 221, column: 7, scope: !7005)
!7015 = !DILocation(line: 221, column: 16, scope: !7005)
!7016 = !DILocation(line: 222, column: 1, scope: !7005)
!7017 = distinct !DISubprogram(name: "ata_port_desc", scope: !3, file: !3, line: 238, type: !7018, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!7018 = !DISubroutineType(types: !7019)
!7019 = !{null, !6375, !1008, null}
!7020 = !DILocalVariable(name: "ap", arg: 1, scope: !7017, file: !3, line: 238, type: !6375)
!7021 = !DILocation(line: 238, column: 37, scope: !7017)
!7022 = !DILocalVariable(name: "fmt", arg: 2, scope: !7017, file: !3, line: 238, type: !1008)
!7023 = !DILocation(line: 238, column: 53, scope: !7017)
!7024 = !DILocalVariable(name: "args", scope: !7017, file: !3, line: 240, type: !6940)
!7025 = !DILocation(line: 240, column: 10, scope: !7017)
!7026 = !DILocalVariable(name: "__ret_warn_on", scope: !7027, file: !3, line: 242, type: !206)
!7027 = distinct !DILexicalBlock(scope: !7017, file: !3, line: 242, column: 2)
!7028 = !DILocation(line: 242, column: 2, scope: !7027)
!7029 = !DILocation(line: 242, column: 2, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7027, file: !3, line: 242, column: 2)
!7031 = !DILocation(line: 242, column: 2, scope: !7032)
!7032 = distinct !DILexicalBlock(scope: !7030, file: !3, line: 242, column: 2)
!7033 = !DILocation(line: 242, column: 2, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !7032, file: !3, line: 242, column: 2)
!7035 = !DILocation(line: 242, column: 2, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !7032, file: !3, line: 242, column: 2)
!7037 = !{i32 -2140103168, i32 -2140103139, i32 -2140103093, i32 -2140103035, i32 -2140102981, i32 -2140102927, i32 -2140102872, i32 -2140102841}
!7038 = !DILocation(line: 242, column: 2, scope: !7039)
!7039 = distinct !DILexicalBlock(scope: !7032, file: !3, line: 242, column: 2)
!7040 = !{i32 -2140102436, i32 -2140102429, i32 -2140102377, i32 -2140102346, i32 -2140102316}
!7041 = !DILocation(line: 242, column: 2, scope: !7042)
!7042 = distinct !DILexicalBlock(scope: !7032, file: !3, line: 242, column: 2)
!7043 = !DILocation(line: 244, column: 6, scope: !7044)
!7044 = distinct !DILexicalBlock(scope: !7017, file: !3, line: 244, column: 6)
!7045 = !DILocation(line: 244, column: 10, scope: !7044)
!7046 = !DILocation(line: 244, column: 15, scope: !7044)
!7047 = !DILocation(line: 244, column: 23, scope: !7044)
!7048 = !DILocation(line: 244, column: 6, scope: !7017)
!7049 = !DILocation(line: 245, column: 24, scope: !7044)
!7050 = !DILocation(line: 245, column: 28, scope: !7044)
!7051 = !DILocation(line: 245, column: 33, scope: !7044)
!7052 = !DILocation(line: 245, column: 3, scope: !7044)
!7053 = !DILocation(line: 247, column: 2, scope: !7017)
!7054 = !DILocation(line: 248, column: 24, scope: !7017)
!7055 = !DILocation(line: 248, column: 28, scope: !7017)
!7056 = !DILocation(line: 248, column: 33, scope: !7017)
!7057 = !DILocation(line: 248, column: 42, scope: !7017)
!7058 = !DILocation(line: 248, column: 47, scope: !7017)
!7059 = !DILocation(line: 248, column: 2, scope: !7017)
!7060 = !DILocation(line: 249, column: 2, scope: !7017)
!7061 = !DILocation(line: 250, column: 1, scope: !7017)
!7062 = distinct !DISubprogram(name: "ata_port_pbar_desc", scope: !3, file: !3, line: 269, type: !7063, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!7063 = !DISubroutineType(types: !7064)
!7064 = !{null, !6375, !206, !1159, !1008}
!7065 = !DILocalVariable(name: "ap", arg: 1, scope: !7062, file: !3, line: 269, type: !6375)
!7066 = !DILocation(line: 269, column: 42, scope: !7062)
!7067 = !DILocalVariable(name: "bar", arg: 2, scope: !7062, file: !3, line: 269, type: !206)
!7068 = !DILocation(line: 269, column: 50, scope: !7062)
!7069 = !DILocalVariable(name: "offset", arg: 3, scope: !7062, file: !3, line: 269, type: !1159)
!7070 = !DILocation(line: 269, column: 63, scope: !7062)
!7071 = !DILocalVariable(name: "name", arg: 4, scope: !7062, file: !3, line: 270, type: !1008)
!7072 = !DILocation(line: 270, column: 16, scope: !7062)
!7073 = !DILocalVariable(name: "pdev", scope: !7062, file: !3, line: 272, type: !971)
!7074 = !DILocation(line: 272, column: 18, scope: !7062)
!7075 = !DILocalVariable(name: "__mptr", scope: !7076, file: !3, line: 272, type: !970)
!7076 = distinct !DILexicalBlock(scope: !7062, file: !3, line: 272, column: 25)
!7077 = !DILocation(line: 272, column: 25, scope: !7076)
!7078 = !DILocation(line: 272, column: 25, scope: !7079)
!7079 = distinct !DILexicalBlock(scope: !7076, file: !3, line: 272, column: 25)
!7080 = !DILocalVariable(name: "type", scope: !7062, file: !3, line: 273, type: !1128)
!7081 = !DILocation(line: 273, column: 8, scope: !7062)
!7082 = !DILocalVariable(name: "start", scope: !7062, file: !3, line: 274, type: !1005)
!7083 = !DILocation(line: 274, column: 21, scope: !7062)
!7084 = !DILocalVariable(name: "len", scope: !7062, file: !3, line: 274, type: !1005)
!7085 = !DILocation(line: 274, column: 28, scope: !7062)
!7086 = !DILocation(line: 276, column: 6, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !7062, file: !3, line: 276, column: 6)
!7088 = !DILocation(line: 276, column: 36, scope: !7087)
!7089 = !DILocation(line: 276, column: 6, scope: !7062)
!7090 = !DILocation(line: 277, column: 8, scope: !7087)
!7091 = !DILocation(line: 277, column: 3, scope: !7087)
!7092 = !DILocation(line: 278, column: 11, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !7087, file: !3, line: 278, column: 11)
!7094 = !DILocation(line: 278, column: 41, scope: !7093)
!7095 = !DILocation(line: 278, column: 11, scope: !7087)
!7096 = !DILocation(line: 279, column: 8, scope: !7093)
!7097 = !DILocation(line: 279, column: 3, scope: !7093)
!7098 = !DILocation(line: 281, column: 30, scope: !7062)
!7099 = !DILocation(line: 281, column: 8, scope: !7062)
!7100 = !DILocation(line: 282, column: 28, scope: !7062)
!7101 = !DILocation(line: 282, column: 6, scope: !7062)
!7102 = !DILocation(line: 284, column: 6, scope: !7103)
!7103 = distinct !DILexicalBlock(scope: !7062, file: !3, line: 284, column: 6)
!7104 = !DILocation(line: 284, column: 13, scope: !7103)
!7105 = !DILocation(line: 284, column: 6, scope: !7062)
!7106 = !DILocation(line: 285, column: 17, scope: !7103)
!7107 = !DILocation(line: 285, column: 41, scope: !7103)
!7108 = !DILocation(line: 285, column: 47, scope: !7103)
!7109 = !DILocation(line: 285, column: 53, scope: !7103)
!7110 = !DILocation(line: 285, column: 58, scope: !7103)
!7111 = !DILocation(line: 285, column: 3, scope: !7103)
!7112 = !DILocation(line: 287, column: 17, scope: !7103)
!7113 = !DILocation(line: 287, column: 34, scope: !7103)
!7114 = !DILocation(line: 288, column: 5, scope: !7103)
!7115 = !DILocation(line: 288, column: 33, scope: !7103)
!7116 = !DILocation(line: 288, column: 11, scope: !7103)
!7117 = !DILocation(line: 287, column: 3, scope: !7103)
!7118 = !DILocation(line: 289, column: 1, scope: !7062)
!7119 = distinct !DISubprogram(name: "ata_internal_cmd_timeout", scope: !3, file: !3, line: 321, type: !7120, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!7120 = !DISubroutineType(types: !7121)
!7121 = !{!1012, !6392, !2257}
!7122 = !DILocalVariable(name: "dev", arg: 1, scope: !7119, file: !3, line: 321, type: !6392)
!7123 = !DILocation(line: 321, column: 59, scope: !7119)
!7124 = !DILocalVariable(name: "cmd", arg: 2, scope: !7119, file: !3, line: 321, type: !2257)
!7125 = !DILocation(line: 321, column: 67, scope: !7119)
!7126 = !DILocalVariable(name: "ehc", scope: !7119, file: !3, line: 323, type: !7127)
!7127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6427, size: 64)
!7128 = !DILocation(line: 323, column: 25, scope: !7119)
!7129 = !DILocation(line: 323, column: 32, scope: !7119)
!7130 = !DILocation(line: 323, column: 37, scope: !7119)
!7131 = !DILocation(line: 323, column: 43, scope: !7119)
!7132 = !DILocalVariable(name: "ent", scope: !7119, file: !3, line: 324, type: !206)
!7133 = !DILocation(line: 324, column: 6, scope: !7119)
!7134 = !DILocation(line: 324, column: 37, scope: !7119)
!7135 = !DILocation(line: 324, column: 12, scope: !7119)
!7136 = !DILocalVariable(name: "idx", scope: !7119, file: !3, line: 325, type: !206)
!7137 = !DILocation(line: 325, column: 6, scope: !7119)
!7138 = !DILocation(line: 327, column: 6, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7119, file: !3, line: 327, column: 6)
!7140 = !DILocation(line: 327, column: 10, scope: !7139)
!7141 = !DILocation(line: 327, column: 6, scope: !7119)
!7142 = !DILocation(line: 328, column: 3, scope: !7139)
!7143 = !DILocation(line: 330, column: 8, scope: !7119)
!7144 = !DILocation(line: 330, column: 13, scope: !7119)
!7145 = !DILocation(line: 330, column: 29, scope: !7119)
!7146 = !DILocation(line: 330, column: 34, scope: !7119)
!7147 = !DILocation(line: 330, column: 41, scope: !7119)
!7148 = !DILocation(line: 330, column: 6, scope: !7119)
!7149 = !DILocation(line: 331, column: 34, scope: !7119)
!7150 = !DILocation(line: 331, column: 9, scope: !7119)
!7151 = !DILocation(line: 331, column: 39, scope: !7119)
!7152 = !DILocation(line: 331, column: 48, scope: !7119)
!7153 = !DILocation(line: 331, column: 2, scope: !7119)
!7154 = !DILocation(line: 332, column: 1, scope: !7119)
!7155 = distinct !DISubprogram(name: "ata_lookup_timeout_table", scope: !3, file: !3, line: 293, type: !7156, scopeLine: 294, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!7156 = !DISubroutineType(types: !7157)
!7157 = !{!206, !2257}
!7158 = !DILocalVariable(name: "cmd", arg: 1, scope: !7155, file: !3, line: 293, type: !2257)
!7159 = !DILocation(line: 293, column: 40, scope: !7155)
!7160 = !DILocalVariable(name: "i", scope: !7155, file: !3, line: 295, type: !206)
!7161 = !DILocation(line: 295, column: 6, scope: !7155)
!7162 = !DILocation(line: 297, column: 9, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7155, file: !3, line: 297, column: 2)
!7164 = !DILocation(line: 297, column: 7, scope: !7163)
!7165 = !DILocation(line: 297, column: 14, scope: !7166)
!7166 = distinct !DILexicalBlock(scope: !7163, file: !3, line: 297, column: 2)
!7167 = !DILocation(line: 297, column: 16, scope: !7166)
!7168 = !DILocation(line: 297, column: 2, scope: !7163)
!7169 = !DILocalVariable(name: "cur", scope: !7170, file: !3, line: 298, type: !6921)
!7170 = distinct !DILexicalBlock(scope: !7166, file: !3, line: 297, column: 54)
!7171 = !DILocation(line: 298, column: 13, scope: !7170)
!7172 = !DILocation(line: 300, column: 39, scope: !7173)
!7173 = distinct !DILexicalBlock(scope: !7170, file: !3, line: 300, column: 3)
!7174 = !DILocation(line: 300, column: 14, scope: !7173)
!7175 = !DILocation(line: 300, column: 42, scope: !7173)
!7176 = !DILocation(line: 300, column: 12, scope: !7173)
!7177 = !DILocation(line: 300, column: 8, scope: !7173)
!7178 = !DILocation(line: 300, column: 53, scope: !7179)
!7179 = distinct !DILexicalBlock(scope: !7173, file: !3, line: 300, column: 3)
!7180 = !DILocation(line: 300, column: 52, scope: !7179)
!7181 = !DILocation(line: 300, column: 3, scope: !7173)
!7182 = !DILocation(line: 301, column: 9, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !7179, file: !3, line: 301, column: 8)
!7184 = !DILocation(line: 301, column: 8, scope: !7183)
!7185 = !DILocation(line: 301, column: 16, scope: !7183)
!7186 = !DILocation(line: 301, column: 13, scope: !7183)
!7187 = !DILocation(line: 301, column: 8, scope: !7179)
!7188 = !DILocation(line: 302, column: 12, scope: !7183)
!7189 = !DILocation(line: 302, column: 5, scope: !7183)
!7190 = !DILocation(line: 300, column: 61, scope: !7179)
!7191 = !DILocation(line: 300, column: 3, scope: !7179)
!7192 = distinct !{!7192, !7181, !7193}
!7193 = !DILocation(line: 302, column: 12, scope: !7173)
!7194 = !DILocation(line: 303, column: 2, scope: !7170)
!7195 = !DILocation(line: 297, column: 50, scope: !7166)
!7196 = !DILocation(line: 297, column: 2, scope: !7166)
!7197 = distinct !{!7197, !7168, !7198}
!7198 = !DILocation(line: 303, column: 2, scope: !7163)
!7199 = !DILocation(line: 305, column: 2, scope: !7155)
!7200 = !DILocation(line: 306, column: 1, scope: !7155)
!7201 = distinct !DISubprogram(name: "ata_internal_cmd_timed_out", scope: !3, file: !3, line: 346, type: !7202, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!7202 = !DISubroutineType(types: !7203)
!7203 = !{null, !6392, !2257}
!7204 = !DILocalVariable(name: "dev", arg: 1, scope: !7201, file: !3, line: 346, type: !6392)
!7205 = !DILocation(line: 346, column: 52, scope: !7201)
!7206 = !DILocalVariable(name: "cmd", arg: 2, scope: !7201, file: !3, line: 346, type: !2257)
!7207 = !DILocation(line: 346, column: 60, scope: !7201)
!7208 = !DILocalVariable(name: "ehc", scope: !7201, file: !3, line: 348, type: !7127)
!7209 = !DILocation(line: 348, column: 25, scope: !7201)
!7210 = !DILocation(line: 348, column: 32, scope: !7201)
!7211 = !DILocation(line: 348, column: 37, scope: !7201)
!7212 = !DILocation(line: 348, column: 43, scope: !7201)
!7213 = !DILocalVariable(name: "ent", scope: !7201, file: !3, line: 349, type: !206)
!7214 = !DILocation(line: 349, column: 6, scope: !7201)
!7215 = !DILocation(line: 349, column: 37, scope: !7201)
!7216 = !DILocation(line: 349, column: 12, scope: !7201)
!7217 = !DILocalVariable(name: "idx", scope: !7201, file: !3, line: 350, type: !206)
!7218 = !DILocation(line: 350, column: 6, scope: !7201)
!7219 = !DILocation(line: 352, column: 6, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !7201, file: !3, line: 352, column: 6)
!7221 = !DILocation(line: 352, column: 10, scope: !7220)
!7222 = !DILocation(line: 352, column: 6, scope: !7201)
!7223 = !DILocation(line: 353, column: 3, scope: !7220)
!7224 = !DILocation(line: 355, column: 8, scope: !7201)
!7225 = !DILocation(line: 355, column: 13, scope: !7201)
!7226 = !DILocation(line: 355, column: 29, scope: !7201)
!7227 = !DILocation(line: 355, column: 34, scope: !7201)
!7228 = !DILocation(line: 355, column: 41, scope: !7201)
!7229 = !DILocation(line: 355, column: 6, scope: !7201)
!7230 = !DILocation(line: 356, column: 31, scope: !7231)
!7231 = distinct !DILexicalBlock(scope: !7201, file: !3, line: 356, column: 6)
!7232 = !DILocation(line: 356, column: 6, scope: !7231)
!7233 = !DILocation(line: 356, column: 36, scope: !7231)
!7234 = !DILocation(line: 356, column: 45, scope: !7231)
!7235 = !DILocation(line: 356, column: 49, scope: !7231)
!7236 = !DILocation(line: 356, column: 54, scope: !7231)
!7237 = !DILocation(line: 356, column: 6, scope: !7201)
!7238 = !DILocation(line: 357, column: 3, scope: !7231)
!7239 = !DILocation(line: 357, column: 8, scope: !7231)
!7240 = !DILocation(line: 357, column: 24, scope: !7231)
!7241 = !DILocation(line: 357, column: 29, scope: !7231)
!7242 = !DILocation(line: 357, column: 36, scope: !7231)
!7243 = !DILocation(line: 357, column: 40, scope: !7231)
!7244 = !DILocation(line: 358, column: 1, scope: !7201)
!7245 = distinct !DISubprogram(name: "ata_ering_map", scope: !3, file: !3, line: 385, type: !7246, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!7246 = !DISubroutineType(types: !7247)
!7247 = !{!206, !7248, !7249, !970}
!7248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6541, size: 64)
!7249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7250, size: 64)
!7250 = !DISubroutineType(types: !7251)
!7251 = !{!206, !7252, !970}
!7252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6546, size: 64)
!7253 = !DILocalVariable(name: "ering", arg: 1, scope: !7245, file: !3, line: 385, type: !7248)
!7254 = !DILocation(line: 385, column: 37, scope: !7245)
!7255 = !DILocalVariable(name: "map_fn", arg: 2, scope: !7245, file: !3, line: 386, type: !7249)
!7256 = !DILocation(line: 386, column: 11, scope: !7245)
!7257 = !DILocalVariable(name: "arg", arg: 3, scope: !7245, file: !3, line: 387, type: !970)
!7258 = !DILocation(line: 387, column: 11, scope: !7245)
!7259 = !DILocalVariable(name: "idx", scope: !7245, file: !3, line: 389, type: !206)
!7260 = !DILocation(line: 389, column: 6, scope: !7245)
!7261 = !DILocalVariable(name: "rc", scope: !7245, file: !3, line: 389, type: !206)
!7262 = !DILocation(line: 389, column: 11, scope: !7245)
!7263 = !DILocalVariable(name: "ent", scope: !7245, file: !3, line: 390, type: !7252)
!7264 = !DILocation(line: 390, column: 26, scope: !7245)
!7265 = !DILocation(line: 392, column: 8, scope: !7245)
!7266 = !DILocation(line: 392, column: 15, scope: !7245)
!7267 = !DILocation(line: 392, column: 6, scope: !7245)
!7268 = !DILocation(line: 393, column: 2, scope: !7245)
!7269 = !DILocation(line: 394, column: 10, scope: !7270)
!7270 = distinct !DILexicalBlock(scope: !7245, file: !3, line: 393, column: 5)
!7271 = !DILocation(line: 394, column: 17, scope: !7270)
!7272 = !DILocation(line: 394, column: 22, scope: !7270)
!7273 = !DILocation(line: 394, column: 7, scope: !7270)
!7274 = !DILocation(line: 395, column: 8, scope: !7275)
!7275 = distinct !DILexicalBlock(scope: !7270, file: !3, line: 395, column: 7)
!7276 = !DILocation(line: 395, column: 13, scope: !7275)
!7277 = !DILocation(line: 395, column: 7, scope: !7270)
!7278 = !DILocation(line: 396, column: 4, scope: !7275)
!7279 = !DILocation(line: 397, column: 8, scope: !7270)
!7280 = !DILocation(line: 397, column: 15, scope: !7270)
!7281 = !DILocation(line: 397, column: 20, scope: !7270)
!7282 = !DILocation(line: 397, column: 6, scope: !7270)
!7283 = !DILocation(line: 398, column: 7, scope: !7284)
!7284 = distinct !DILexicalBlock(scope: !7270, file: !3, line: 398, column: 7)
!7285 = !DILocation(line: 398, column: 7, scope: !7270)
!7286 = !DILocation(line: 399, column: 4, scope: !7284)
!7287 = !DILocation(line: 400, column: 10, scope: !7270)
!7288 = !DILocation(line: 400, column: 14, scope: !7270)
!7289 = !DILocation(line: 400, column: 18, scope: !7270)
!7290 = !DILocation(line: 400, column: 36, scope: !7270)
!7291 = !DILocation(line: 400, column: 7, scope: !7270)
!7292 = !DILocation(line: 401, column: 2, scope: !7270)
!7293 = !DILocation(line: 401, column: 11, scope: !7245)
!7294 = !DILocation(line: 401, column: 18, scope: !7245)
!7295 = !DILocation(line: 401, column: 25, scope: !7245)
!7296 = !DILocation(line: 401, column: 15, scope: !7245)
!7297 = distinct !{!7297, !7268, !7298}
!7298 = !DILocation(line: 401, column: 31, scope: !7245)
!7299 = !DILocation(line: 403, column: 9, scope: !7245)
!7300 = !DILocation(line: 403, column: 2, scope: !7245)
!7301 = distinct !DISubprogram(name: "ata_eh_acquire", scope: !3, file: !3, line: 461, type: !6640, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!7302 = !DILocalVariable(name: "pscr_ret__", scope: !7303, file: !7304, line: 15, type: !2121)
!7303 = distinct !DILexicalBlock(scope: !7305, file: !7304, line: 15, column: 9)
!7304 = !DIFile(filename: "./arch/x86/include/asm/current.h", directory: "/home/lizy2001/genbc/linux")
!7305 = distinct !DISubprogram(name: "get_current", scope: !7304, file: !7304, line: 13, type: !7306, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!7306 = !DISubroutineType(types: !7307)
!7307 = !{!2121}
!7308 = !DILocation(line: 15, column: 9, scope: !7303, inlinedAt: !7309)
!7309 = distinct !DILocation(line: 465, column: 23, scope: !7301)
!7310 = !DILocalVariable(name: "__vpp_verify", scope: !7311, file: !7304, line: 15, type: !4014)
!7311 = distinct !DILexicalBlock(scope: !7303, file: !7304, line: 15, column: 9)
!7312 = !DILocation(line: 15, column: 9, scope: !7311, inlinedAt: !7309)
!7313 = !DILocalVariable(name: "pfo_val__", scope: !7314, file: !7304, line: 15, type: !1001)
!7314 = distinct !DILexicalBlock(scope: !7303, file: !7304, line: 15, column: 9)
!7315 = !DILocation(line: 15, column: 9, scope: !7314, inlinedAt: !7309)
!7316 = !DILocalVariable(name: "ap", arg: 1, scope: !7301, file: !3, line: 461, type: !6375)
!7317 = !DILocation(line: 461, column: 38, scope: !7301)
!7318 = !DILocation(line: 463, column: 14, scope: !7301)
!7319 = !DILocation(line: 463, column: 18, scope: !7301)
!7320 = !DILocation(line: 463, column: 24, scope: !7301)
!7321 = !DILocation(line: 463, column: 2, scope: !7301)
!7322 = !DILocalVariable(name: "__ret_warn_on", scope: !7323, file: !3, line: 464, type: !206)
!7323 = distinct !DILexicalBlock(scope: !7301, file: !3, line: 464, column: 2)
!7324 = !DILocation(line: 464, column: 2, scope: !7323)
!7325 = !DILocation(line: 464, column: 2, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !7323, file: !3, line: 464, column: 2)
!7327 = !DILocation(line: 464, column: 2, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !7326, file: !3, line: 464, column: 2)
!7329 = !DILocation(line: 464, column: 2, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !7328, file: !3, line: 464, column: 2)
!7331 = !DILocation(line: 464, column: 2, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7328, file: !3, line: 464, column: 2)
!7333 = !{i32 -2140095905, i32 -2140095876, i32 -2140095830, i32 -2140095772, i32 -2140095718, i32 -2140095664, i32 -2140095609, i32 -2140095578}
!7334 = !DILocation(line: 464, column: 2, scope: !7335)
!7335 = distinct !DILexicalBlock(scope: !7328, file: !3, line: 464, column: 2)
!7336 = !{i32 -2140095162, i32 -2140095155, i32 -2140095103, i32 -2140095072, i32 -2140095042}
!7337 = !DILocation(line: 464, column: 2, scope: !7338)
!7338 = distinct !DILexicalBlock(scope: !7328, file: !3, line: 464, column: 2)
!7339 = !{i32 -2146703496}
!7340 = !DILocation(line: 465, column: 2, scope: !7301)
!7341 = !DILocation(line: 465, column: 6, scope: !7301)
!7342 = !DILocation(line: 465, column: 12, scope: !7301)
!7343 = !DILocation(line: 465, column: 21, scope: !7301)
!7344 = !DILocation(line: 466, column: 1, scope: !7301)
!7345 = distinct !DISubprogram(name: "ata_eh_release", scope: !3, file: !3, line: 478, type: !6640, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!7346 = !DILocation(line: 15, column: 9, scope: !7303, inlinedAt: !7347)
!7347 = distinct !DILocation(line: 480, column: 2, scope: !7348)
!7348 = distinct !DILexicalBlock(scope: !7345, file: !3, line: 480, column: 2)
!7349 = !DILocation(line: 15, column: 9, scope: !7311, inlinedAt: !7347)
!7350 = !DILocation(line: 15, column: 9, scope: !7314, inlinedAt: !7347)
!7351 = !DILocalVariable(name: "ap", arg: 1, scope: !7345, file: !3, line: 478, type: !6375)
!7352 = !DILocation(line: 478, column: 38, scope: !7345)
!7353 = !DILocalVariable(name: "__ret_warn_on", scope: !7348, file: !3, line: 480, type: !206)
!7354 = !DILocation(line: 480, column: 2, scope: !7348)
!7355 = !DILocation(line: 480, column: 2, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7348, file: !3, line: 480, column: 2)
!7357 = !DILocation(line: 480, column: 2, scope: !7358)
!7358 = distinct !DILexicalBlock(scope: !7356, file: !3, line: 480, column: 2)
!7359 = !DILocation(line: 480, column: 2, scope: !7360)
!7360 = distinct !DILexicalBlock(scope: !7358, file: !3, line: 480, column: 2)
!7361 = !DILocation(line: 480, column: 2, scope: !7362)
!7362 = distinct !DILexicalBlock(scope: !7358, file: !3, line: 480, column: 2)
!7363 = !{i32 -2140094379, i32 -2140094350, i32 -2140094304, i32 -2140094246, i32 -2140094192, i32 -2140094138, i32 -2140094083, i32 -2140094052}
!7364 = !DILocation(line: 480, column: 2, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7358, file: !3, line: 480, column: 2)
!7366 = !{i32 -2140093636, i32 -2140093629, i32 -2140093577, i32 -2140093546, i32 -2140093516}
!7367 = !DILocation(line: 480, column: 2, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7358, file: !3, line: 480, column: 2)
!7369 = !DILocation(line: 481, column: 2, scope: !7345)
!7370 = !DILocation(line: 481, column: 6, scope: !7345)
!7371 = !DILocation(line: 481, column: 12, scope: !7345)
!7372 = !DILocation(line: 481, column: 21, scope: !7345)
!7373 = !DILocation(line: 482, column: 16, scope: !7345)
!7374 = !DILocation(line: 482, column: 20, scope: !7345)
!7375 = !DILocation(line: 482, column: 26, scope: !7345)
!7376 = !DILocation(line: 482, column: 2, scope: !7345)
!7377 = !DILocation(line: 483, column: 1, scope: !7345)
!7378 = distinct !DISubprogram(name: "ata_scsi_error", scope: !3, file: !3, line: 522, type: !6060, scopeLine: 523, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!7379 = !DILocalVariable(name: "lock", arg: 1, scope: !7380, file: !7381, line: 407, type: !1977)
!7380 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !7381, file: !7381, line: 407, type: !7382, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!7381 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!7382 = !DISubroutineType(types: !7383)
!7383 = !{null, !1977, !1012}
!7384 = !DILocation(line: 407, column: 64, scope: !7380, inlinedAt: !7385)
!7385 = distinct !DILocation(line: 532, column: 2, scope: !7378)
!7386 = !DILocalVariable(name: "flags", arg: 2, scope: !7380, file: !7381, line: 407, type: !1012)
!7387 = !DILocation(line: 407, column: 84, scope: !7380, inlinedAt: !7385)
!7388 = !DILocalVariable(name: "lock", arg: 1, scope: !7389, file: !7381, line: 327, type: !1977)
!7389 = distinct !DISubprogram(name: "spinlock_check", scope: !7381, file: !7381, line: 327, type: !7390, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!7390 = !DISubroutineType(types: !7391)
!7391 = !{!7392, !1977}
!7392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1668, size: 64)
!7393 = !DILocation(line: 327, column: 67, scope: !7389, inlinedAt: !7394)
!7394 = distinct !DILocation(line: 530, column: 2, scope: !7395)
!7395 = distinct !DILexicalBlock(scope: !7396, file: !3, line: 530, column: 2)
!7396 = distinct !DILexicalBlock(scope: !7397, file: !3, line: 530, column: 2)
!7397 = distinct !DILexicalBlock(scope: !7398, file: !3, line: 530, column: 2)
!7398 = distinct !DILexicalBlock(scope: !7399, file: !3, line: 530, column: 2)
!7399 = distinct !DILexicalBlock(scope: !7378, file: !3, line: 530, column: 2)
!7400 = !DILocalVariable(name: "host", arg: 1, scope: !7378, file: !3, line: 522, type: !5969)
!7401 = !DILocation(line: 522, column: 39, scope: !7378)
!7402 = !DILocalVariable(name: "ap", scope: !7378, file: !3, line: 524, type: !6375)
!7403 = !DILocation(line: 524, column: 19, scope: !7378)
!7404 = !DILocation(line: 524, column: 42, scope: !7378)
!7405 = !DILocation(line: 524, column: 24, scope: !7378)
!7406 = !DILocalVariable(name: "flags", scope: !7378, file: !3, line: 525, type: !1012)
!7407 = !DILocation(line: 525, column: 16, scope: !7378)
!7408 = !DILocalVariable(name: "eh_work_q", scope: !7378, file: !3, line: 526, type: !976)
!7409 = !DILocation(line: 526, column: 2, scope: !7378)
!7410 = !DILocation(line: 530, column: 2, scope: !7378)
!7411 = !DILocation(line: 530, column: 2, scope: !7399)
!7412 = !DILocalVariable(name: "__dummy", scope: !7413, file: !3, line: 530, type: !1012)
!7413 = distinct !DILexicalBlock(scope: !7398, file: !3, line: 530, column: 2)
!7414 = !DILocation(line: 530, column: 2, scope: !7413)
!7415 = !DILocalVariable(name: "__dummy2", scope: !7413, file: !3, line: 530, type: !1012)
!7416 = !DILocation(line: 530, column: 2, scope: !7398)
!7417 = !DILocation(line: 530, column: 2, scope: !7397)
!7418 = !DILocation(line: 530, column: 2, scope: !7419)
!7419 = distinct !DILexicalBlock(scope: !7397, file: !3, line: 530, column: 2)
!7420 = !DILocalVariable(name: "__dummy", scope: !7421, file: !3, line: 530, type: !1012)
!7421 = distinct !DILexicalBlock(scope: !7422, file: !3, line: 530, column: 2)
!7422 = distinct !DILexicalBlock(scope: !7419, file: !3, line: 530, column: 2)
!7423 = !DILocation(line: 530, column: 2, scope: !7421)
!7424 = !DILocalVariable(name: "__dummy2", scope: !7421, file: !3, line: 530, type: !1012)
!7425 = !DILocation(line: 530, column: 2, scope: !7422)
!7426 = !DILocation(line: 530, column: 2, scope: !7396)
!7427 = !{i32 -2140090967}
!7428 = !DILocation(line: 530, column: 2, scope: !7395)
!7429 = !DILocation(line: 329, column: 10, scope: !7389, inlinedAt: !7394)
!7430 = !DILocation(line: 329, column: 16, scope: !7389, inlinedAt: !7394)
!7431 = !DILocation(line: 531, column: 20, scope: !7378)
!7432 = !DILocation(line: 531, column: 26, scope: !7378)
!7433 = !DILocation(line: 531, column: 2, scope: !7378)
!7434 = !DILocation(line: 532, column: 25, scope: !7378)
!7435 = !DILocation(line: 532, column: 31, scope: !7378)
!7436 = !DILocation(line: 532, column: 42, scope: !7378)
!7437 = !DILocalVariable(name: "__dummy", scope: !7438, file: !7381, line: 409, type: !1012)
!7438 = distinct !DILexicalBlock(scope: !7439, file: !7381, line: 409, column: 2)
!7439 = distinct !DILexicalBlock(scope: !7380, file: !7381, line: 409, column: 2)
!7440 = !DILocation(line: 409, column: 2, scope: !7438, inlinedAt: !7385)
!7441 = !DILocalVariable(name: "__dummy2", scope: !7438, file: !7381, line: 409, type: !1012)
!7442 = !DILocalVariable(name: "__dummy", scope: !7443, file: !7381, line: 409, type: !1012)
!7443 = distinct !DILexicalBlock(scope: !7444, file: !7381, line: 409, column: 2)
!7444 = distinct !DILexicalBlock(scope: !7445, file: !7381, line: 409, column: 2)
!7445 = distinct !DILexicalBlock(scope: !7446, file: !7381, line: 409, column: 2)
!7446 = distinct !DILexicalBlock(scope: !7439, file: !7381, line: 409, column: 2)
!7447 = !DILocation(line: 409, column: 2, scope: !7443, inlinedAt: !7385)
!7448 = !DILocalVariable(name: "__dummy2", scope: !7443, file: !7381, line: 409, type: !1012)
!7449 = !DILocation(line: 409, column: 2, scope: !7444, inlinedAt: !7385)
!7450 = !DILocation(line: 409, column: 2, scope: !7451, inlinedAt: !7385)
!7451 = distinct !DILexicalBlock(scope: !7446, file: !7381, line: 409, column: 2)
!7452 = !{i32 -2145174453}
!7453 = !DILocation(line: 409, column: 2, scope: !7454, inlinedAt: !7385)
!7454 = distinct !DILexicalBlock(scope: !7451, file: !7381, line: 409, column: 2)
!7455 = !DILocation(line: 534, column: 29, scope: !7378)
!7456 = !DILocation(line: 534, column: 35, scope: !7378)
!7457 = !DILocation(line: 534, column: 2, scope: !7378)
!7458 = !DILocation(line: 538, column: 30, scope: !7378)
!7459 = !DILocation(line: 538, column: 36, scope: !7378)
!7460 = !DILocation(line: 538, column: 2, scope: !7378)
!7461 = !DILocalVariable(name: "__ret_warn_on", scope: !7462, file: !3, line: 541, type: !206)
!7462 = distinct !DILexicalBlock(scope: !7378, file: !3, line: 541, column: 2)
!7463 = !DILocation(line: 541, column: 2, scope: !7462)
!7464 = !DILocation(line: 541, column: 2, scope: !7465)
!7465 = distinct !DILexicalBlock(scope: !7462, file: !3, line: 541, column: 2)
!7466 = !DILocation(line: 541, column: 2, scope: !7467)
!7467 = distinct !DILexicalBlock(scope: !7465, file: !3, line: 541, column: 2)
!7468 = !DILocation(line: 541, column: 2, scope: !7469)
!7469 = distinct !DILexicalBlock(scope: !7467, file: !3, line: 541, column: 2)
!7470 = !DILocation(line: 541, column: 2, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7467, file: !3, line: 541, column: 2)
!7472 = !{i32 -2140090326, i32 -2140090297, i32 -2140090251, i32 -2140090193, i32 -2140090139, i32 -2140090085, i32 -2140090030, i32 -2140089999}
!7473 = !DILocation(line: 541, column: 2, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !7467, file: !3, line: 541, column: 2)
!7475 = !{i32 -2140089594, i32 -2140089587, i32 -2140089535, i32 -2140089504, i32 -2140089474}
!7476 = !DILocation(line: 541, column: 2, scope: !7477)
!7477 = distinct !DILexicalBlock(scope: !7467, file: !3, line: 541, column: 2)
!7478 = !DILocation(line: 544, column: 1, scope: !7378)
!7479 = distinct !DISubprogram(name: "ata_shost_to_port", scope: !178, file: !178, line: 1818, type: !7480, scopeLine: 1819, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!7480 = !DISubroutineType(types: !7481)
!7481 = !{!6375, !5969}
!7482 = !DILocalVariable(name: "host", arg: 1, scope: !7479, file: !178, line: 1818, type: !5969)
!7483 = !DILocation(line: 1818, column: 68, scope: !7479)
!7484 = !DILocation(line: 1820, column: 31, scope: !7479)
!7485 = !DILocation(line: 1820, column: 37, scope: !7479)
!7486 = !DILocation(line: 1820, column: 9, scope: !7479)
!7487 = !DILocation(line: 1820, column: 2, scope: !7479)
!7488 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !7489, file: !7489, line: 666, type: !7490, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!7489 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!7490 = !DISubroutineType(types: !7491)
!7491 = !{!1012}
!7492 = !DILocalVariable(name: "f", scope: !7488, file: !7489, line: 668, type: !1012)
!7493 = !DILocation(line: 668, column: 16, scope: !7488)
!7494 = !DILocation(line: 670, column: 6, scope: !7488)
!7495 = !DILocation(line: 670, column: 4, scope: !7488)
!7496 = !DILocation(line: 671, column: 2, scope: !7488)
!7497 = !DILocation(line: 672, column: 9, scope: !7488)
!7498 = !DILocation(line: 672, column: 2, scope: !7488)
!7499 = distinct !DISubprogram(name: "list_splice_init", scope: !7500, file: !7500, line: 478, type: !7501, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!7500 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!7501 = !DISubroutineType(types: !7502)
!7502 = !{null, !980, !980}
!7503 = !DILocalVariable(name: "list", arg: 1, scope: !7499, file: !7500, line: 478, type: !980)
!7504 = !DILocation(line: 478, column: 55, scope: !7499)
!7505 = !DILocalVariable(name: "head", arg: 2, scope: !7499, file: !7500, line: 479, type: !980)
!7506 = !DILocation(line: 479, column: 27, scope: !7499)
!7507 = !DILocation(line: 481, column: 18, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7499, file: !7500, line: 481, column: 6)
!7509 = !DILocation(line: 481, column: 7, scope: !7508)
!7510 = !DILocation(line: 481, column: 6, scope: !7499)
!7511 = !DILocation(line: 482, column: 17, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7508, file: !7500, line: 481, column: 25)
!7513 = !DILocation(line: 482, column: 23, scope: !7512)
!7514 = !DILocation(line: 482, column: 29, scope: !7512)
!7515 = !DILocation(line: 482, column: 35, scope: !7512)
!7516 = !DILocation(line: 482, column: 3, scope: !7512)
!7517 = !DILocation(line: 483, column: 18, scope: !7512)
!7518 = !DILocation(line: 483, column: 3, scope: !7512)
!7519 = !DILocation(line: 484, column: 2, scope: !7512)
!7520 = !DILocation(line: 485, column: 1, scope: !7499)
!7521 = distinct !DISubprogram(name: "ata_scsi_cmd_error_handler", scope: !3, file: !3, line: 556, type: !7522, scopeLine: 558, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!7522 = !DISubroutineType(types: !7523)
!7523 = !{null, !5969, !6375, !980}
!7524 = !DILocation(line: 407, column: 64, scope: !7380, inlinedAt: !7525)
!7525 = distinct !DILocation(line: 636, column: 2, scope: !7521)
!7526 = !DILocation(line: 407, column: 84, scope: !7380, inlinedAt: !7525)
!7527 = !DILocation(line: 327, column: 67, scope: !7389, inlinedAt: !7528)
!7528 = distinct !DILocation(line: 579, column: 2, scope: !7529)
!7529 = distinct !DILexicalBlock(scope: !7530, file: !3, line: 579, column: 2)
!7530 = distinct !DILexicalBlock(scope: !7531, file: !3, line: 579, column: 2)
!7531 = distinct !DILexicalBlock(scope: !7532, file: !3, line: 579, column: 2)
!7532 = distinct !DILexicalBlock(scope: !7533, file: !3, line: 579, column: 2)
!7533 = distinct !DILexicalBlock(scope: !7521, file: !3, line: 579, column: 2)
!7534 = !DILocalVariable(name: "host", arg: 1, scope: !7521, file: !3, line: 556, type: !5969)
!7535 = !DILocation(line: 556, column: 51, scope: !7521)
!7536 = !DILocalVariable(name: "ap", arg: 2, scope: !7521, file: !3, line: 556, type: !6375)
!7537 = !DILocation(line: 556, column: 74, scope: !7521)
!7538 = !DILocalVariable(name: "eh_work_q", arg: 3, scope: !7521, file: !3, line: 557, type: !980)
!7539 = !DILocation(line: 557, column: 23, scope: !7521)
!7540 = !DILocalVariable(name: "i", scope: !7521, file: !3, line: 559, type: !206)
!7541 = !DILocation(line: 559, column: 6, scope: !7521)
!7542 = !DILocalVariable(name: "flags", scope: !7521, file: !3, line: 560, type: !1012)
!7543 = !DILocation(line: 560, column: 16, scope: !7521)
!7544 = !DILocation(line: 563, column: 25, scope: !7521)
!7545 = !DILocation(line: 563, column: 2, scope: !7521)
!7546 = !DILocation(line: 579, column: 2, scope: !7521)
!7547 = !DILocation(line: 579, column: 2, scope: !7533)
!7548 = !DILocalVariable(name: "__dummy", scope: !7549, file: !3, line: 579, type: !1012)
!7549 = distinct !DILexicalBlock(scope: !7532, file: !3, line: 579, column: 2)
!7550 = !DILocation(line: 579, column: 2, scope: !7549)
!7551 = !DILocalVariable(name: "__dummy2", scope: !7549, file: !3, line: 579, type: !1012)
!7552 = !DILocation(line: 579, column: 2, scope: !7532)
!7553 = !DILocation(line: 579, column: 2, scope: !7531)
!7554 = !DILocation(line: 579, column: 2, scope: !7555)
!7555 = distinct !DILexicalBlock(scope: !7531, file: !3, line: 579, column: 2)
!7556 = !DILocalVariable(name: "__dummy", scope: !7557, file: !3, line: 579, type: !1012)
!7557 = distinct !DILexicalBlock(scope: !7558, file: !3, line: 579, column: 2)
!7558 = distinct !DILexicalBlock(scope: !7555, file: !3, line: 579, column: 2)
!7559 = !DILocation(line: 579, column: 2, scope: !7557)
!7560 = !DILocalVariable(name: "__dummy2", scope: !7557, file: !3, line: 579, type: !1012)
!7561 = !DILocation(line: 579, column: 2, scope: !7558)
!7562 = !DILocation(line: 579, column: 2, scope: !7530)
!7563 = !{i32 -2140088508}
!7564 = !DILocation(line: 579, column: 2, scope: !7529)
!7565 = !DILocation(line: 329, column: 10, scope: !7389, inlinedAt: !7528)
!7566 = !DILocation(line: 329, column: 16, scope: !7389, inlinedAt: !7528)
!7567 = !DILocation(line: 580, column: 6, scope: !7568)
!7568 = distinct !DILexicalBlock(scope: !7521, file: !3, line: 580, column: 6)
!7569 = !DILocation(line: 580, column: 10, scope: !7568)
!7570 = !DILocation(line: 580, column: 15, scope: !7568)
!7571 = !DILocation(line: 580, column: 6, scope: !7521)
!7572 = !DILocalVariable(name: "scmd", scope: !7573, file: !3, line: 581, type: !5946)
!7573 = distinct !DILexicalBlock(scope: !7568, file: !3, line: 580, column: 30)
!7574 = !DILocation(line: 581, column: 21, scope: !7573)
!7575 = !DILocalVariable(name: "tmp", scope: !7573, file: !3, line: 581, type: !5946)
!7576 = !DILocation(line: 581, column: 28, scope: !7573)
!7577 = !DILocalVariable(name: "nr_timedout", scope: !7573, file: !3, line: 582, type: !206)
!7578 = !DILocation(line: 582, column: 7, scope: !7573)
!7579 = !DILocation(line: 593, column: 7, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7573, file: !3, line: 593, column: 7)
!7581 = !DILocation(line: 593, column: 11, scope: !7580)
!7582 = !DILocation(line: 593, column: 16, scope: !7580)
!7583 = !DILocation(line: 593, column: 7, scope: !7573)
!7584 = !DILocation(line: 594, column: 4, scope: !7580)
!7585 = !DILocation(line: 594, column: 8, scope: !7580)
!7586 = !DILocation(line: 594, column: 13, scope: !7580)
!7587 = !DILocation(line: 594, column: 28, scope: !7580)
!7588 = !DILocalVariable(name: "__mptr", scope: !7589, file: !3, line: 596, type: !970)
!7589 = distinct !DILexicalBlock(scope: !7590, file: !3, line: 596, column: 3)
!7590 = distinct !DILexicalBlock(scope: !7573, file: !3, line: 596, column: 3)
!7591 = !DILocation(line: 596, column: 3, scope: !7589)
!7592 = !DILocation(line: 596, column: 3, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7589, file: !3, line: 596, column: 3)
!7594 = !DILocation(line: 596, column: 3, scope: !7590)
!7595 = !DILocalVariable(name: "__mptr", scope: !7596, file: !3, line: 596, type: !970)
!7596 = distinct !DILexicalBlock(scope: !7590, file: !3, line: 596, column: 3)
!7597 = !DILocation(line: 596, column: 3, scope: !7596)
!7598 = !DILocation(line: 596, column: 3, scope: !7599)
!7599 = distinct !DILexicalBlock(scope: !7596, file: !3, line: 596, column: 3)
!7600 = !DILocation(line: 596, column: 3, scope: !7601)
!7601 = distinct !DILexicalBlock(scope: !7590, file: !3, line: 596, column: 3)
!7602 = !DILocalVariable(name: "qc", scope: !7603, file: !3, line: 597, type: !6387)
!7603 = distinct !DILexicalBlock(scope: !7601, file: !3, line: 596, column: 60)
!7604 = !DILocation(line: 597, column: 27, scope: !7603)
!7605 = !DILocation(line: 599, column: 4, scope: !7606)
!7606 = distinct !DILexicalBlock(scope: !7603, file: !3, line: 599, column: 4)
!7607 = !DILocation(line: 599, column: 4, scope: !7608)
!7608 = distinct !DILexicalBlock(scope: !7606, file: !3, line: 599, column: 4)
!7609 = !DILocation(line: 599, column: 4, scope: !7610)
!7610 = distinct !DILexicalBlock(scope: !7608, file: !3, line: 599, column: 4)
!7611 = !DILocation(line: 0, scope: !7608)
!7612 = !DILocation(line: 600, column: 9, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7614, file: !3, line: 600, column: 9)
!7614 = distinct !DILexicalBlock(scope: !7608, file: !3, line: 599, column: 35)
!7615 = !DILocation(line: 600, column: 13, scope: !7613)
!7616 = !DILocation(line: 600, column: 19, scope: !7613)
!7617 = !DILocation(line: 600, column: 39, scope: !7613)
!7618 = !DILocation(line: 601, column: 9, scope: !7613)
!7619 = !DILocation(line: 601, column: 13, scope: !7613)
!7620 = !DILocation(line: 601, column: 24, scope: !7613)
!7621 = !DILocation(line: 601, column: 21, scope: !7613)
!7622 = !DILocation(line: 600, column: 9, scope: !7614)
!7623 = !DILocation(line: 602, column: 6, scope: !7613)
!7624 = !DILocation(line: 603, column: 4, scope: !7614)
!7625 = distinct !{!7625, !7605, !7626}
!7626 = !DILocation(line: 603, column: 4, scope: !7606)
!7627 = !DILocation(line: 605, column: 8, scope: !7628)
!7628 = distinct !DILexicalBlock(scope: !7603, file: !3, line: 605, column: 8)
!7629 = !DILocation(line: 605, column: 10, scope: !7628)
!7630 = !DILocation(line: 605, column: 8, scope: !7603)
!7631 = !DILocation(line: 607, column: 11, scope: !7632)
!7632 = distinct !DILexicalBlock(scope: !7633, file: !3, line: 607, column: 9)
!7633 = distinct !DILexicalBlock(scope: !7628, file: !3, line: 605, column: 27)
!7634 = !DILocation(line: 607, column: 15, scope: !7632)
!7635 = !DILocation(line: 607, column: 21, scope: !7632)
!7636 = !DILocation(line: 607, column: 9, scope: !7633)
!7637 = !DILocation(line: 609, column: 6, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7632, file: !3, line: 607, column: 43)
!7639 = !DILocation(line: 609, column: 10, scope: !7638)
!7640 = !DILocation(line: 609, column: 19, scope: !7638)
!7641 = !DILocation(line: 610, column: 6, scope: !7638)
!7642 = !DILocation(line: 610, column: 10, scope: !7638)
!7643 = !DILocation(line: 610, column: 16, scope: !7638)
!7644 = !DILocation(line: 611, column: 17, scope: !7638)
!7645 = !DILocation(line: 612, column: 5, scope: !7638)
!7646 = !DILocation(line: 613, column: 4, scope: !7633)
!7647 = !DILocation(line: 618, column: 21, scope: !7648)
!7648 = distinct !DILexicalBlock(scope: !7628, file: !3, line: 613, column: 11)
!7649 = !DILocation(line: 618, column: 27, scope: !7648)
!7650 = !DILocation(line: 618, column: 5, scope: !7648)
!7651 = !DILocation(line: 618, column: 11, scope: !7648)
!7652 = !DILocation(line: 618, column: 19, scope: !7648)
!7653 = !DILocation(line: 619, column: 24, scope: !7648)
!7654 = !DILocation(line: 619, column: 31, scope: !7648)
!7655 = !DILocation(line: 619, column: 35, scope: !7648)
!7656 = !DILocation(line: 619, column: 5, scope: !7648)
!7657 = !DILocation(line: 621, column: 3, scope: !7603)
!7658 = !DILocalVariable(name: "__mptr", scope: !7659, file: !3, line: 596, type: !970)
!7659 = distinct !DILexicalBlock(scope: !7601, file: !3, line: 596, column: 3)
!7660 = !DILocation(line: 596, column: 3, scope: !7659)
!7661 = !DILocation(line: 596, column: 3, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7659, file: !3, line: 596, column: 3)
!7663 = distinct !{!7663, !7594, !7664}
!7664 = !DILocation(line: 621, column: 3, scope: !7590)
!7665 = !DILocation(line: 629, column: 7, scope: !7666)
!7666 = distinct !DILexicalBlock(scope: !7573, file: !3, line: 629, column: 7)
!7667 = !DILocation(line: 629, column: 7, scope: !7573)
!7668 = !DILocation(line: 630, column: 22, scope: !7666)
!7669 = !DILocation(line: 630, column: 4, scope: !7666)
!7670 = !DILocation(line: 634, column: 3, scope: !7573)
!7671 = !DILocation(line: 634, column: 7, scope: !7573)
!7672 = !DILocation(line: 634, column: 16, scope: !7573)
!7673 = !DILocation(line: 635, column: 2, scope: !7573)
!7674 = !DILocation(line: 636, column: 25, scope: !7521)
!7675 = !DILocation(line: 636, column: 29, scope: !7521)
!7676 = !DILocation(line: 636, column: 35, scope: !7521)
!7677 = !DILocation(line: 409, column: 2, scope: !7438, inlinedAt: !7525)
!7678 = !DILocation(line: 409, column: 2, scope: !7443, inlinedAt: !7525)
!7679 = !DILocation(line: 409, column: 2, scope: !7444, inlinedAt: !7525)
!7680 = !DILocation(line: 409, column: 2, scope: !7451, inlinedAt: !7525)
!7681 = !DILocation(line: 409, column: 2, scope: !7454, inlinedAt: !7525)
!7682 = !DILocation(line: 638, column: 1, scope: !7521)
!7683 = distinct !DISubprogram(name: "ata_scsi_port_error_handler", scope: !3, file: !3, line: 649, type: !7684, scopeLine: 650, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!7684 = !DISubroutineType(types: !7685)
!7685 = !{null, !5969, !6375}
!7686 = !DILocation(line: 327, column: 67, scope: !7389, inlinedAt: !7687)
!7687 = distinct !DILocation(line: 744, column: 2, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7689, file: !3, line: 744, column: 2)
!7689 = distinct !DILexicalBlock(scope: !7690, file: !3, line: 744, column: 2)
!7690 = distinct !DILexicalBlock(scope: !7691, file: !3, line: 744, column: 2)
!7691 = distinct !DILexicalBlock(scope: !7692, file: !3, line: 744, column: 2)
!7692 = distinct !DILexicalBlock(scope: !7683, file: !3, line: 744, column: 2)
!7693 = !DILocation(line: 407, column: 64, scope: !7380, inlinedAt: !7694)
!7694 = distinct !DILocation(line: 734, column: 3, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !7696, file: !3, line: 654, column: 30)
!7696 = distinct !DILexicalBlock(scope: !7683, file: !3, line: 654, column: 6)
!7697 = !DILocation(line: 407, column: 84, scope: !7380, inlinedAt: !7694)
!7698 = !DILocation(line: 407, column: 64, scope: !7380, inlinedAt: !7699)
!7699 = distinct !DILocation(line: 714, column: 5, scope: !7700)
!7700 = distinct !DILexicalBlock(scope: !7701, file: !3, line: 713, column: 24)
!7701 = distinct !DILexicalBlock(scope: !7702, file: !3, line: 713, column: 8)
!7702 = distinct !DILexicalBlock(scope: !7703, file: !3, line: 712, column: 42)
!7703 = distinct !DILexicalBlock(scope: !7695, file: !3, line: 712, column: 7)
!7704 = !DILocation(line: 407, column: 84, scope: !7380, inlinedAt: !7699)
!7705 = !DILocation(line: 327, column: 67, scope: !7389, inlinedAt: !7706)
!7706 = distinct !DILocation(line: 710, column: 3, scope: !7707)
!7707 = distinct !DILexicalBlock(scope: !7708, file: !3, line: 710, column: 3)
!7708 = distinct !DILexicalBlock(scope: !7709, file: !3, line: 710, column: 3)
!7709 = distinct !DILexicalBlock(scope: !7710, file: !3, line: 710, column: 3)
!7710 = distinct !DILexicalBlock(scope: !7711, file: !3, line: 710, column: 3)
!7711 = distinct !DILexicalBlock(scope: !7695, file: !3, line: 710, column: 3)
!7712 = !DILocation(line: 407, column: 64, scope: !7380, inlinedAt: !7713)
!7713 = distinct !DILocation(line: 690, column: 3, scope: !7695)
!7714 = !DILocation(line: 407, column: 84, scope: !7380, inlinedAt: !7713)
!7715 = !DILocation(line: 407, column: 64, scope: !7380, inlinedAt: !7716)
!7716 = distinct !DILocation(line: 761, column: 2, scope: !7683)
!7717 = !DILocation(line: 407, column: 84, scope: !7380, inlinedAt: !7716)
!7718 = !DILocation(line: 327, column: 67, scope: !7389, inlinedAt: !7719)
!7719 = distinct !DILocation(line: 667, column: 3, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7721, file: !3, line: 667, column: 3)
!7721 = distinct !DILexicalBlock(scope: !7722, file: !3, line: 667, column: 3)
!7722 = distinct !DILexicalBlock(scope: !7723, file: !3, line: 667, column: 3)
!7723 = distinct !DILexicalBlock(scope: !7724, file: !3, line: 667, column: 3)
!7724 = distinct !DILexicalBlock(scope: !7695, file: !3, line: 667, column: 3)
!7725 = !DILocalVariable(name: "host", arg: 1, scope: !7683, file: !3, line: 649, type: !5969)
!7726 = !DILocation(line: 649, column: 52, scope: !7683)
!7727 = !DILocalVariable(name: "ap", arg: 2, scope: !7683, file: !3, line: 649, type: !6375)
!7728 = !DILocation(line: 649, column: 75, scope: !7683)
!7729 = !DILocalVariable(name: "flags", scope: !7683, file: !3, line: 651, type: !1012)
!7730 = !DILocation(line: 651, column: 16, scope: !7683)
!7731 = !DILocation(line: 654, column: 6, scope: !7696)
!7732 = !DILocation(line: 654, column: 10, scope: !7696)
!7733 = !DILocation(line: 654, column: 15, scope: !7696)
!7734 = !DILocation(line: 654, column: 6, scope: !7683)
!7735 = !DILocalVariable(name: "link", scope: !7695, file: !3, line: 655, type: !6396)
!7736 = !DILocation(line: 655, column: 20, scope: !7695)
!7737 = !DILocation(line: 658, column: 18, scope: !7695)
!7738 = !DILocation(line: 658, column: 3, scope: !7695)
!7739 = !DILabel(scope: !7695, name: "repeat", file: !3, line: 659)
!7740 = !DILocation(line: 659, column: 2, scope: !7695)
!7741 = !DILocation(line: 661, column: 3, scope: !7695)
!7742 = !DILocation(line: 664, column: 29, scope: !7695)
!7743 = !DILocation(line: 664, column: 3, scope: !7695)
!7744 = !DILocation(line: 667, column: 3, scope: !7695)
!7745 = !DILocation(line: 667, column: 3, scope: !7724)
!7746 = !DILocalVariable(name: "__dummy", scope: !7747, file: !3, line: 667, type: !1012)
!7747 = distinct !DILexicalBlock(scope: !7723, file: !3, line: 667, column: 3)
!7748 = !DILocation(line: 667, column: 3, scope: !7747)
!7749 = !DILocalVariable(name: "__dummy2", scope: !7747, file: !3, line: 667, type: !1012)
!7750 = !DILocation(line: 667, column: 3, scope: !7723)
!7751 = !DILocation(line: 667, column: 3, scope: !7722)
!7752 = !DILocation(line: 667, column: 3, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7722, file: !3, line: 667, column: 3)
!7754 = !DILocalVariable(name: "__dummy", scope: !7755, file: !3, line: 667, type: !1012)
!7755 = distinct !DILexicalBlock(scope: !7756, file: !3, line: 667, column: 3)
!7756 = distinct !DILexicalBlock(scope: !7753, file: !3, line: 667, column: 3)
!7757 = !DILocation(line: 667, column: 3, scope: !7755)
!7758 = !DILocalVariable(name: "__dummy2", scope: !7755, file: !3, line: 667, type: !1012)
!7759 = !DILocation(line: 667, column: 3, scope: !7756)
!7760 = !DILocation(line: 667, column: 3, scope: !7721)
!7761 = !{i32 -2140081301}
!7762 = !DILocation(line: 667, column: 3, scope: !7720)
!7763 = !DILocation(line: 329, column: 10, scope: !7389, inlinedAt: !7719)
!7764 = !DILocation(line: 329, column: 16, scope: !7389, inlinedAt: !7719)
!7765 = !DILocation(line: 669, column: 3, scope: !7766)
!7766 = distinct !DILexicalBlock(scope: !7695, file: !3, line: 669, column: 3)
!7767 = !DILocation(line: 669, column: 3, scope: !7768)
!7768 = distinct !DILexicalBlock(scope: !7766, file: !3, line: 669, column: 3)
!7769 = !DILocalVariable(name: "ehc", scope: !7770, file: !3, line: 670, type: !7127)
!7770 = distinct !DILexicalBlock(scope: !7768, file: !3, line: 669, column: 43)
!7771 = !DILocation(line: 670, column: 27, scope: !7770)
!7772 = !DILocation(line: 670, column: 34, scope: !7770)
!7773 = !DILocation(line: 670, column: 40, scope: !7770)
!7774 = !DILocalVariable(name: "dev", scope: !7770, file: !3, line: 671, type: !6392)
!7775 = !DILocation(line: 671, column: 23, scope: !7770)
!7776 = !DILocation(line: 673, column: 12, scope: !7770)
!7777 = !DILocation(line: 673, column: 18, scope: !7770)
!7778 = !DILocation(line: 673, column: 4, scope: !7770)
!7779 = !DILocation(line: 674, column: 4, scope: !7770)
!7780 = !DILocation(line: 674, column: 10, scope: !7770)
!7781 = !DILocation(line: 674, column: 21, scope: !7770)
!7782 = !DILocation(line: 674, column: 25, scope: !7770)
!7783 = !DILocation(line: 674, column: 31, scope: !7770)
!7784 = !DILocation(line: 675, column: 12, scope: !7770)
!7785 = !DILocation(line: 675, column: 18, scope: !7770)
!7786 = !DILocation(line: 675, column: 4, scope: !7770)
!7787 = !DILocation(line: 677, column: 4, scope: !7788)
!7788 = distinct !DILexicalBlock(scope: !7770, file: !3, line: 677, column: 4)
!7789 = !DILocation(line: 677, column: 4, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7788, file: !3, line: 677, column: 4)
!7791 = !DILocalVariable(name: "devno", scope: !7792, file: !3, line: 678, type: !206)
!7792 = distinct !DILexicalBlock(scope: !7790, file: !3, line: 677, column: 41)
!7793 = !DILocation(line: 678, column: 9, scope: !7792)
!7794 = !DILocation(line: 678, column: 17, scope: !7792)
!7795 = !DILocation(line: 678, column: 22, scope: !7792)
!7796 = !DILocation(line: 680, column: 35, scope: !7792)
!7797 = !DILocation(line: 680, column: 40, scope: !7792)
!7798 = !DILocation(line: 680, column: 5, scope: !7792)
!7799 = !DILocation(line: 680, column: 10, scope: !7792)
!7800 = !DILocation(line: 680, column: 26, scope: !7792)
!7801 = !DILocation(line: 680, column: 33, scope: !7792)
!7802 = !DILocation(line: 681, column: 25, scope: !7803)
!7803 = distinct !DILexicalBlock(scope: !7792, file: !3, line: 681, column: 9)
!7804 = !DILocation(line: 681, column: 9, scope: !7803)
!7805 = !DILocation(line: 681, column: 9, scope: !7792)
!7806 = !DILocation(line: 682, column: 37, scope: !7803)
!7807 = !DILocation(line: 682, column: 34, scope: !7803)
!7808 = !DILocation(line: 682, column: 6, scope: !7803)
!7809 = !DILocation(line: 682, column: 11, scope: !7803)
!7810 = !DILocation(line: 682, column: 29, scope: !7803)
!7811 = !DILocation(line: 683, column: 4, scope: !7792)
!7812 = distinct !{!7812, !7787, !7813}
!7813 = !DILocation(line: 683, column: 4, scope: !7788)
!7814 = !DILocation(line: 684, column: 3, scope: !7770)
!7815 = distinct !{!7815, !7765, !7816}
!7816 = !DILocation(line: 684, column: 3, scope: !7766)
!7817 = !DILocation(line: 686, column: 3, scope: !7695)
!7818 = !DILocation(line: 686, column: 7, scope: !7695)
!7819 = !DILocation(line: 686, column: 14, scope: !7695)
!7820 = !DILocation(line: 687, column: 3, scope: !7695)
!7821 = !DILocation(line: 687, column: 7, scope: !7695)
!7822 = !DILocation(line: 687, column: 14, scope: !7695)
!7823 = !DILocation(line: 688, column: 3, scope: !7695)
!7824 = !DILocation(line: 688, column: 7, scope: !7695)
!7825 = !DILocation(line: 688, column: 17, scope: !7695)
!7826 = !DILocation(line: 690, column: 26, scope: !7695)
!7827 = !DILocation(line: 690, column: 30, scope: !7695)
!7828 = !DILocation(line: 690, column: 36, scope: !7695)
!7829 = !DILocation(line: 409, column: 2, scope: !7438, inlinedAt: !7713)
!7830 = !DILocation(line: 409, column: 2, scope: !7443, inlinedAt: !7713)
!7831 = !DILocation(line: 409, column: 2, scope: !7444, inlinedAt: !7713)
!7832 = !DILocation(line: 409, column: 2, scope: !7451, inlinedAt: !7713)
!7833 = !DILocation(line: 409, column: 2, scope: !7454, inlinedAt: !7713)
!7834 = !DILocation(line: 693, column: 9, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7695, file: !3, line: 693, column: 7)
!7836 = !DILocation(line: 693, column: 13, scope: !7835)
!7837 = !DILocation(line: 693, column: 20, scope: !7835)
!7838 = !DILocation(line: 693, column: 7, scope: !7695)
!7839 = !DILocation(line: 694, column: 4, scope: !7835)
!7840 = !DILocation(line: 694, column: 8, scope: !7835)
!7841 = !DILocation(line: 694, column: 13, scope: !7835)
!7842 = !DILocation(line: 694, column: 27, scope: !7835)
!7843 = !DILocation(line: 697, column: 9, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !7845, file: !3, line: 697, column: 8)
!7845 = distinct !DILexicalBlock(scope: !7835, file: !3, line: 695, column: 8)
!7846 = !DILocation(line: 697, column: 13, scope: !7844)
!7847 = !DILocation(line: 697, column: 20, scope: !7844)
!7848 = !DILocation(line: 697, column: 43, scope: !7844)
!7849 = !DILocation(line: 698, column: 10, scope: !7844)
!7850 = !DILocation(line: 698, column: 14, scope: !7844)
!7851 = !DILocation(line: 698, column: 21, scope: !7844)
!7852 = !DILocation(line: 697, column: 8, scope: !7845)
!7853 = !DILocation(line: 699, column: 19, scope: !7844)
!7854 = !DILocation(line: 699, column: 5, scope: !7844)
!7855 = !DILocation(line: 700, column: 18, scope: !7845)
!7856 = !DILocation(line: 700, column: 4, scope: !7845)
!7857 = !DILocation(line: 704, column: 30, scope: !7695)
!7858 = !DILocation(line: 704, column: 3, scope: !7695)
!7859 = !DILocation(line: 710, column: 3, scope: !7695)
!7860 = !DILocation(line: 710, column: 3, scope: !7711)
!7861 = !DILocalVariable(name: "__dummy", scope: !7862, file: !3, line: 710, type: !1012)
!7862 = distinct !DILexicalBlock(scope: !7710, file: !3, line: 710, column: 3)
!7863 = !DILocation(line: 710, column: 3, scope: !7862)
!7864 = !DILocalVariable(name: "__dummy2", scope: !7862, file: !3, line: 710, type: !1012)
!7865 = !DILocation(line: 710, column: 3, scope: !7710)
!7866 = !DILocation(line: 710, column: 3, scope: !7709)
!7867 = !DILocation(line: 710, column: 3, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7709, file: !3, line: 710, column: 3)
!7869 = !DILocalVariable(name: "__dummy", scope: !7870, file: !3, line: 710, type: !1012)
!7870 = distinct !DILexicalBlock(scope: !7871, file: !3, line: 710, column: 3)
!7871 = distinct !DILexicalBlock(scope: !7868, file: !3, line: 710, column: 3)
!7872 = !DILocation(line: 710, column: 3, scope: !7870)
!7873 = !DILocalVariable(name: "__dummy2", scope: !7870, file: !3, line: 710, type: !1012)
!7874 = !DILocation(line: 710, column: 3, scope: !7871)
!7875 = !DILocation(line: 710, column: 3, scope: !7708)
!7876 = !{i32 -2140079839}
!7877 = !DILocation(line: 710, column: 3, scope: !7707)
!7878 = !DILocation(line: 329, column: 10, scope: !7389, inlinedAt: !7706)
!7879 = !DILocation(line: 329, column: 16, scope: !7389, inlinedAt: !7706)
!7880 = !DILocation(line: 712, column: 7, scope: !7703)
!7881 = !DILocation(line: 712, column: 11, scope: !7703)
!7882 = !DILocation(line: 712, column: 18, scope: !7703)
!7883 = !DILocation(line: 712, column: 7, scope: !7695)
!7884 = !DILocation(line: 713, column: 10, scope: !7701)
!7885 = !DILocation(line: 713, column: 14, scope: !7701)
!7886 = !DILocation(line: 713, column: 8, scope: !7701)
!7887 = !DILocation(line: 713, column: 8, scope: !7702)
!7888 = !DILocation(line: 714, column: 28, scope: !7700)
!7889 = !DILocation(line: 714, column: 32, scope: !7700)
!7890 = !DILocation(line: 714, column: 38, scope: !7700)
!7891 = !DILocation(line: 409, column: 2, scope: !7438, inlinedAt: !7699)
!7892 = !DILocation(line: 409, column: 2, scope: !7443, inlinedAt: !7699)
!7893 = !DILocation(line: 409, column: 2, scope: !7444, inlinedAt: !7699)
!7894 = !DILocation(line: 409, column: 2, scope: !7451, inlinedAt: !7699)
!7895 = !DILocation(line: 409, column: 2, scope: !7454, inlinedAt: !7699)
!7896 = !DILocation(line: 715, column: 5, scope: !7700)
!7897 = !DILocation(line: 717, column: 4, scope: !7702)
!7898 = !DILocation(line: 720, column: 4, scope: !7702)
!7899 = !DILocation(line: 720, column: 8, scope: !7702)
!7900 = !DILocation(line: 720, column: 15, scope: !7702)
!7901 = !DILocation(line: 721, column: 3, scope: !7702)
!7902 = !DILocation(line: 724, column: 3, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7695, file: !3, line: 724, column: 3)
!7904 = !DILocation(line: 724, column: 3, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !7903, file: !3, line: 724, column: 3)
!7906 = !DILocation(line: 725, column: 12, scope: !7905)
!7907 = !DILocation(line: 725, column: 18, scope: !7905)
!7908 = !DILocation(line: 725, column: 4, scope: !7905)
!7909 = distinct !{!7909, !7902, !7910}
!7910 = !DILocation(line: 725, column: 51, scope: !7903)
!7911 = !DILocation(line: 732, column: 3, scope: !7695)
!7912 = !DILocation(line: 732, column: 7, scope: !7695)
!7913 = !DILocation(line: 732, column: 12, scope: !7695)
!7914 = !DILocation(line: 732, column: 19, scope: !7695)
!7915 = !DILocation(line: 734, column: 26, scope: !7695)
!7916 = !DILocation(line: 734, column: 30, scope: !7695)
!7917 = !DILocation(line: 734, column: 36, scope: !7695)
!7918 = !DILocation(line: 409, column: 2, scope: !7438, inlinedAt: !7694)
!7919 = !DILocation(line: 409, column: 2, scope: !7443, inlinedAt: !7694)
!7920 = !DILocation(line: 409, column: 2, scope: !7444, inlinedAt: !7694)
!7921 = !DILocation(line: 409, column: 2, scope: !7451, inlinedAt: !7694)
!7922 = !DILocation(line: 409, column: 2, scope: !7454, inlinedAt: !7694)
!7923 = !DILocation(line: 735, column: 18, scope: !7695)
!7924 = !DILocation(line: 735, column: 3, scope: !7695)
!7925 = !DILocation(line: 736, column: 2, scope: !7695)
!7926 = !DILocalVariable(name: "__ret_warn_on", scope: !7927, file: !3, line: 737, type: !206)
!7927 = distinct !DILexicalBlock(scope: !7928, file: !3, line: 737, column: 3)
!7928 = distinct !DILexicalBlock(scope: !7696, file: !3, line: 736, column: 9)
!7929 = !DILocation(line: 737, column: 3, scope: !7927)
!7930 = !DILocation(line: 737, column: 3, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7927, file: !3, line: 737, column: 3)
!7932 = !DILocation(line: 737, column: 3, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !7931, file: !3, line: 737, column: 3)
!7934 = !DILocation(line: 737, column: 3, scope: !7935)
!7935 = distinct !DILexicalBlock(scope: !7933, file: !3, line: 737, column: 3)
!7936 = !DILocation(line: 737, column: 3, scope: !7937)
!7937 = distinct !DILexicalBlock(scope: !7933, file: !3, line: 737, column: 3)
!7938 = !{i32 -2140078804, i32 -2140078775, i32 -2140078729, i32 -2140078671, i32 -2140078617, i32 -2140078563, i32 -2140078508, i32 -2140078477}
!7939 = !DILocation(line: 737, column: 3, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7933, file: !3, line: 737, column: 3)
!7941 = !{i32 -2140078072, i32 -2140078065, i32 -2140078013, i32 -2140077982, i32 -2140077952}
!7942 = !DILocation(line: 737, column: 3, scope: !7943)
!7943 = distinct !DILexicalBlock(scope: !7933, file: !3, line: 737, column: 3)
!7944 = !DILocation(line: 738, column: 3, scope: !7928)
!7945 = !DILocation(line: 738, column: 7, scope: !7928)
!7946 = !DILocation(line: 738, column: 12, scope: !7928)
!7947 = !DILocation(line: 738, column: 24, scope: !7928)
!7948 = !DILocation(line: 741, column: 24, scope: !7683)
!7949 = !DILocation(line: 741, column: 28, scope: !7683)
!7950 = !DILocation(line: 741, column: 2, scope: !7683)
!7951 = !DILocation(line: 744, column: 2, scope: !7683)
!7952 = !DILocation(line: 744, column: 2, scope: !7692)
!7953 = !DILocalVariable(name: "__dummy", scope: !7954, file: !3, line: 744, type: !1012)
!7954 = distinct !DILexicalBlock(scope: !7691, file: !3, line: 744, column: 2)
!7955 = !DILocation(line: 744, column: 2, scope: !7954)
!7956 = !DILocalVariable(name: "__dummy2", scope: !7954, file: !3, line: 744, type: !1012)
!7957 = !DILocation(line: 744, column: 2, scope: !7691)
!7958 = !DILocation(line: 744, column: 2, scope: !7690)
!7959 = !DILocation(line: 744, column: 2, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7690, file: !3, line: 744, column: 2)
!7961 = !DILocalVariable(name: "__dummy", scope: !7962, file: !3, line: 744, type: !1012)
!7962 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 744, column: 2)
!7963 = distinct !DILexicalBlock(scope: !7960, file: !3, line: 744, column: 2)
!7964 = !DILocation(line: 744, column: 2, scope: !7962)
!7965 = !DILocalVariable(name: "__dummy2", scope: !7962, file: !3, line: 744, type: !1012)
!7966 = !DILocation(line: 744, column: 2, scope: !7963)
!7967 = !DILocation(line: 744, column: 2, scope: !7689)
!7968 = !{i32 -2140076986}
!7969 = !DILocation(line: 744, column: 2, scope: !7688)
!7970 = !DILocation(line: 329, column: 10, scope: !7389, inlinedAt: !7687)
!7971 = !DILocation(line: 329, column: 16, scope: !7389, inlinedAt: !7687)
!7972 = !DILocation(line: 746, column: 6, scope: !7973)
!7973 = distinct !DILexicalBlock(scope: !7683, file: !3, line: 746, column: 6)
!7974 = !DILocation(line: 746, column: 10, scope: !7973)
!7975 = !DILocation(line: 746, column: 17, scope: !7973)
!7976 = !DILocation(line: 746, column: 6, scope: !7683)
!7977 = !DILocation(line: 747, column: 3, scope: !7973)
!7978 = !DILocation(line: 747, column: 7, scope: !7973)
!7979 = !DILocation(line: 747, column: 14, scope: !7973)
!7980 = !DILocation(line: 748, column: 12, scope: !7981)
!7981 = distinct !DILexicalBlock(scope: !7973, file: !3, line: 748, column: 11)
!7982 = !DILocation(line: 748, column: 16, scope: !7981)
!7983 = !DILocation(line: 748, column: 23, scope: !7981)
!7984 = !DILocation(line: 748, column: 49, scope: !7981)
!7985 = !DILocation(line: 749, column: 5, scope: !7981)
!7986 = !DILocation(line: 749, column: 9, scope: !7981)
!7987 = !DILocation(line: 749, column: 15, scope: !7981)
!7988 = !DILocation(line: 748, column: 11, scope: !7973)
!7989 = !DILocation(line: 750, column: 26, scope: !7981)
!7990 = !DILocation(line: 750, column: 30, scope: !7981)
!7991 = !DILocation(line: 750, column: 3, scope: !7981)
!7992 = !DILocation(line: 752, column: 6, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !7683, file: !3, line: 752, column: 6)
!7994 = !DILocation(line: 752, column: 10, scope: !7993)
!7995 = !DILocation(line: 752, column: 17, scope: !7993)
!7996 = !DILocation(line: 752, column: 6, scope: !7683)
!7997 = !DILocation(line: 753, column: 3, scope: !7993)
!7998 = !DILocation(line: 755, column: 2, scope: !7683)
!7999 = !DILocation(line: 755, column: 6, scope: !7683)
!8000 = !DILocation(line: 755, column: 13, scope: !7683)
!8001 = !DILocation(line: 758, column: 2, scope: !7683)
!8002 = !DILocation(line: 758, column: 6, scope: !7683)
!8003 = !DILocation(line: 758, column: 13, scope: !7683)
!8004 = !DILocation(line: 759, column: 2, scope: !7683)
!8005 = !DILocation(line: 761, column: 25, scope: !7683)
!8006 = !DILocation(line: 761, column: 29, scope: !7683)
!8007 = !DILocation(line: 761, column: 35, scope: !7683)
!8008 = !DILocation(line: 409, column: 2, scope: !7438, inlinedAt: !7716)
!8009 = !DILocation(line: 409, column: 2, scope: !7443, inlinedAt: !7716)
!8010 = !DILocation(line: 409, column: 2, scope: !7444, inlinedAt: !7716)
!8011 = !DILocation(line: 409, column: 2, scope: !7451, inlinedAt: !7716)
!8012 = !DILocation(line: 409, column: 2, scope: !7454, inlinedAt: !7716)
!8013 = !DILocation(line: 762, column: 1, scope: !7683)
!8014 = distinct !DISubprogram(name: "list_empty", scope: !7500, file: !7500, line: 280, type: !8015, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!8015 = !DISubroutineType(types: !8016)
!8016 = !{!206, !8017}
!8017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8018, size: 64)
!8018 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !976)
!8019 = !DILocalVariable(name: "head", arg: 1, scope: !8014, file: !7500, line: 280, type: !8017)
!8020 = !DILocation(line: 280, column: 54, scope: !8014)
!8021 = !DILocation(line: 282, column: 9, scope: !8022)
!8022 = distinct !DILexicalBlock(scope: !8014, file: !7500, line: 282, column: 9)
!8023 = !DILocation(line: 282, column: 9, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !8022, file: !7500, line: 282, column: 9)
!8025 = !DILocation(line: 282, column: 34, scope: !8014)
!8026 = !DILocation(line: 282, column: 31, scope: !8014)
!8027 = !DILocation(line: 282, column: 2, scope: !8014)
!8028 = distinct !DISubprogram(name: "__ata_qc_from_tag", scope: !178, file: !178, line: 1732, type: !8029, scopeLine: 1734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!8029 = !DISubroutineType(types: !8030)
!8030 = !{!6387, !6375, !7}
!8031 = !DILocalVariable(name: "ap", arg: 1, scope: !8028, file: !178, line: 1732, type: !6375)
!8032 = !DILocation(line: 1732, column: 73, scope: !8028)
!8033 = !DILocalVariable(name: "tag", arg: 2, scope: !8028, file: !178, line: 1733, type: !7)
!8034 = !DILocation(line: 1733, column: 27, scope: !8028)
!8035 = !DILocation(line: 1735, column: 20, scope: !8036)
!8036 = distinct !DILexicalBlock(scope: !8028, file: !178, line: 1735, column: 6)
!8037 = !DILocation(line: 1735, column: 6, scope: !8036)
!8038 = !DILocation(line: 1735, column: 6, scope: !8028)
!8039 = !DILocation(line: 1736, column: 11, scope: !8036)
!8040 = !DILocation(line: 1736, column: 15, scope: !8036)
!8041 = !DILocation(line: 1736, column: 20, scope: !8036)
!8042 = !DILocation(line: 1736, column: 3, scope: !8036)
!8043 = !DILocation(line: 1737, column: 2, scope: !8028)
!8044 = !DILocation(line: 1738, column: 1, scope: !8028)
!8045 = distinct !DISubprogram(name: "__ata_port_freeze", scope: !3, file: !3, line: 1056, type: !6640, scopeLine: 1057, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!8046 = !DILocalVariable(name: "ap", arg: 1, scope: !8045, file: !3, line: 1056, type: !6375)
!8047 = !DILocation(line: 1056, column: 48, scope: !8045)
!8048 = !DILocalVariable(name: "__ret_warn_on", scope: !8049, file: !3, line: 1058, type: !206)
!8049 = distinct !DILexicalBlock(scope: !8045, file: !3, line: 1058, column: 2)
!8050 = !DILocation(line: 1058, column: 2, scope: !8049)
!8051 = !DILocation(line: 1058, column: 2, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !8049, file: !3, line: 1058, column: 2)
!8053 = !DILocation(line: 1058, column: 2, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !8052, file: !3, line: 1058, column: 2)
!8055 = !DILocation(line: 1058, column: 2, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !8054, file: !3, line: 1058, column: 2)
!8057 = !DILocation(line: 1058, column: 2, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !8054, file: !3, line: 1058, column: 2)
!8059 = !{i32 -2140065599, i32 -2140065570, i32 -2140065524, i32 -2140065466, i32 -2140065412, i32 -2140065358, i32 -2140065303, i32 -2140065272}
!8060 = !DILocation(line: 1058, column: 2, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !8054, file: !3, line: 1058, column: 2)
!8062 = !{i32 -2140064866, i32 -2140064859, i32 -2140064807, i32 -2140064776, i32 -2140064746}
!8063 = !DILocation(line: 1058, column: 2, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !8054, file: !3, line: 1058, column: 2)
!8065 = !DILocation(line: 1060, column: 6, scope: !8066)
!8066 = distinct !DILexicalBlock(scope: !8045, file: !3, line: 1060, column: 6)
!8067 = !DILocation(line: 1060, column: 10, scope: !8066)
!8068 = !DILocation(line: 1060, column: 15, scope: !8066)
!8069 = !DILocation(line: 1060, column: 6, scope: !8045)
!8070 = !DILocation(line: 1061, column: 3, scope: !8066)
!8071 = !DILocation(line: 1061, column: 7, scope: !8066)
!8072 = !DILocation(line: 1061, column: 12, scope: !8066)
!8073 = !DILocation(line: 1061, column: 19, scope: !8066)
!8074 = !DILocation(line: 1063, column: 2, scope: !8045)
!8075 = !DILocation(line: 1063, column: 6, scope: !8045)
!8076 = !DILocation(line: 1063, column: 13, scope: !8045)
!8077 = !DILocation(line: 1066, column: 1, scope: !8045)
!8078 = distinct !DISubprogram(name: "ata_eh_handle_port_resume", scope: !3, file: !3, line: 3935, type: !6640, scopeLine: 3936, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!8079 = !DILocation(line: 327, column: 67, scope: !7389, inlinedAt: !8080)
!8080 = distinct !DILocation(line: 3972, column: 2, scope: !8081)
!8081 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 3972, column: 2)
!8082 = distinct !DILexicalBlock(scope: !8083, file: !3, line: 3972, column: 2)
!8083 = distinct !DILexicalBlock(scope: !8084, file: !3, line: 3972, column: 2)
!8084 = distinct !DILexicalBlock(scope: !8085, file: !3, line: 3972, column: 2)
!8085 = distinct !DILexicalBlock(scope: !8078, file: !3, line: 3972, column: 2)
!8086 = !DILocation(line: 407, column: 64, scope: !7380, inlinedAt: !8087)
!8087 = distinct !DILocation(line: 3948, column: 2, scope: !8078)
!8088 = !DILocation(line: 407, column: 84, scope: !7380, inlinedAt: !8087)
!8089 = !DILocation(line: 407, column: 64, scope: !7380, inlinedAt: !8090)
!8090 = distinct !DILocation(line: 3945, column: 3, scope: !8091)
!8091 = distinct !DILexicalBlock(scope: !8092, file: !3, line: 3944, column: 46)
!8092 = distinct !DILexicalBlock(scope: !8078, file: !3, line: 3943, column: 6)
!8093 = !DILocation(line: 407, column: 84, scope: !7380, inlinedAt: !8090)
!8094 = !DILocation(line: 407, column: 64, scope: !7380, inlinedAt: !8095)
!8095 = distinct !DILocation(line: 3974, column: 2, scope: !8078)
!8096 = !DILocation(line: 407, column: 84, scope: !7380, inlinedAt: !8095)
!8097 = !DILocation(line: 327, column: 67, scope: !7389, inlinedAt: !8098)
!8098 = distinct !DILocation(line: 3942, column: 2, scope: !8099)
!8099 = distinct !DILexicalBlock(scope: !8100, file: !3, line: 3942, column: 2)
!8100 = distinct !DILexicalBlock(scope: !8101, file: !3, line: 3942, column: 2)
!8101 = distinct !DILexicalBlock(scope: !8102, file: !3, line: 3942, column: 2)
!8102 = distinct !DILexicalBlock(scope: !8103, file: !3, line: 3942, column: 2)
!8103 = distinct !DILexicalBlock(scope: !8078, file: !3, line: 3942, column: 2)
!8104 = !DILocalVariable(name: "ap", arg: 1, scope: !8078, file: !3, line: 3935, type: !6375)
!8105 = !DILocation(line: 3935, column: 56, scope: !8078)
!8106 = !DILocalVariable(name: "link", scope: !8078, file: !3, line: 3937, type: !6396)
!8107 = !DILocation(line: 3937, column: 19, scope: !8078)
!8108 = !DILocalVariable(name: "dev", scope: !8078, file: !3, line: 3938, type: !6392)
!8109 = !DILocation(line: 3938, column: 21, scope: !8078)
!8110 = !DILocalVariable(name: "flags", scope: !8078, file: !3, line: 3939, type: !1012)
!8111 = !DILocation(line: 3939, column: 16, scope: !8078)
!8112 = !DILocation(line: 3942, column: 2, scope: !8078)
!8113 = !DILocation(line: 3942, column: 2, scope: !8103)
!8114 = !DILocalVariable(name: "__dummy", scope: !8115, file: !3, line: 3942, type: !1012)
!8115 = distinct !DILexicalBlock(scope: !8102, file: !3, line: 3942, column: 2)
!8116 = !DILocation(line: 3942, column: 2, scope: !8115)
!8117 = !DILocalVariable(name: "__dummy2", scope: !8115, file: !3, line: 3942, type: !1012)
!8118 = !DILocation(line: 3942, column: 2, scope: !8102)
!8119 = !DILocation(line: 3942, column: 2, scope: !8101)
!8120 = !DILocation(line: 3942, column: 2, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !8101, file: !3, line: 3942, column: 2)
!8122 = !DILocalVariable(name: "__dummy", scope: !8123, file: !3, line: 3942, type: !1012)
!8123 = distinct !DILexicalBlock(scope: !8124, file: !3, line: 3942, column: 2)
!8124 = distinct !DILexicalBlock(scope: !8121, file: !3, line: 3942, column: 2)
!8125 = !DILocation(line: 3942, column: 2, scope: !8123)
!8126 = !DILocalVariable(name: "__dummy2", scope: !8123, file: !3, line: 3942, type: !1012)
!8127 = !DILocation(line: 3942, column: 2, scope: !8124)
!8128 = !DILocation(line: 3942, column: 2, scope: !8100)
!8129 = !{i32 -2140011833}
!8130 = !DILocation(line: 3942, column: 2, scope: !8099)
!8131 = !DILocation(line: 329, column: 10, scope: !7389, inlinedAt: !8098)
!8132 = !DILocation(line: 329, column: 16, scope: !7389, inlinedAt: !8098)
!8133 = !DILocation(line: 3943, column: 8, scope: !8092)
!8134 = !DILocation(line: 3943, column: 12, scope: !8092)
!8135 = !DILocation(line: 3943, column: 19, scope: !8092)
!8136 = !DILocation(line: 3943, column: 43, scope: !8092)
!8137 = !DILocation(line: 3944, column: 8, scope: !8092)
!8138 = !DILocation(line: 3944, column: 12, scope: !8092)
!8139 = !DILocation(line: 3944, column: 20, scope: !8092)
!8140 = !DILocation(line: 3944, column: 26, scope: !8092)
!8141 = !DILocation(line: 3943, column: 6, scope: !8078)
!8142 = !DILocation(line: 3945, column: 26, scope: !8091)
!8143 = !DILocation(line: 3945, column: 30, scope: !8091)
!8144 = !DILocation(line: 3945, column: 36, scope: !8091)
!8145 = !DILocation(line: 409, column: 2, scope: !7438, inlinedAt: !8090)
!8146 = !DILocation(line: 409, column: 2, scope: !7443, inlinedAt: !8090)
!8147 = !DILocation(line: 409, column: 2, scope: !7444, inlinedAt: !8090)
!8148 = !DILocation(line: 409, column: 2, scope: !7451, inlinedAt: !8090)
!8149 = !DILocation(line: 409, column: 2, scope: !7454, inlinedAt: !8090)
!8150 = !DILocation(line: 3946, column: 3, scope: !8091)
!8151 = !DILocation(line: 3948, column: 25, scope: !8078)
!8152 = !DILocation(line: 3948, column: 29, scope: !8078)
!8153 = !DILocation(line: 3948, column: 35, scope: !8078)
!8154 = !DILocation(line: 409, column: 2, scope: !7438, inlinedAt: !8087)
!8155 = !DILocation(line: 409, column: 2, scope: !7443, inlinedAt: !8087)
!8156 = !DILocation(line: 409, column: 2, scope: !7444, inlinedAt: !8087)
!8157 = !DILocation(line: 409, column: 2, scope: !7451, inlinedAt: !8087)
!8158 = !DILocation(line: 409, column: 2, scope: !7454, inlinedAt: !8087)
!8159 = !DILocalVariable(name: "__ret_warn_on", scope: !8160, file: !3, line: 3950, type: !206)
!8160 = distinct !DILexicalBlock(scope: !8078, file: !3, line: 3950, column: 2)
!8161 = !DILocation(line: 3950, column: 2, scope: !8160)
!8162 = !DILocation(line: 3950, column: 2, scope: !8163)
!8163 = distinct !DILexicalBlock(scope: !8160, file: !3, line: 3950, column: 2)
!8164 = !DILocation(line: 3950, column: 2, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8163, file: !3, line: 3950, column: 2)
!8166 = !DILocation(line: 3950, column: 2, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !8165, file: !3, line: 3950, column: 2)
!8168 = !DILocation(line: 3950, column: 2, scope: !8169)
!8169 = distinct !DILexicalBlock(scope: !8165, file: !3, line: 3950, column: 2)
!8170 = !{i32 -2140011187, i32 -2140011158, i32 -2140011112, i32 -2140011054, i32 -2140011000, i32 -2140010946, i32 -2140010891, i32 -2140010860}
!8171 = !DILocation(line: 3950, column: 2, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8165, file: !3, line: 3950, column: 2)
!8173 = !{i32 -2140010454, i32 -2140010447, i32 -2140010395, i32 -2140010364, i32 -2140010334}
!8174 = !DILocation(line: 3950, column: 2, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !8165, file: !3, line: 3950, column: 2)
!8176 = !DILocation(line: 3959, column: 2, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8078, file: !3, line: 3959, column: 2)
!8178 = !DILocation(line: 3959, column: 2, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8177, file: !3, line: 3959, column: 2)
!8180 = !DILocation(line: 3960, column: 3, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8179, file: !3, line: 3960, column: 3)
!8182 = !DILocation(line: 3960, column: 3, scope: !8183)
!8183 = distinct !DILexicalBlock(scope: !8181, file: !3, line: 3960, column: 3)
!8184 = !DILocation(line: 3961, column: 21, scope: !8183)
!8185 = !DILocation(line: 3961, column: 26, scope: !8183)
!8186 = !DILocation(line: 3961, column: 4, scope: !8183)
!8187 = distinct !{!8187, !8180, !8188}
!8188 = !DILocation(line: 3961, column: 31, scope: !8181)
!8189 = distinct !{!8189, !8176, !8190}
!8190 = !DILocation(line: 3961, column: 31, scope: !8177)
!8191 = !DILocation(line: 3963, column: 21, scope: !8078)
!8192 = !DILocation(line: 3963, column: 25, scope: !8078)
!8193 = !DILocation(line: 3963, column: 29, scope: !8078)
!8194 = !DILocation(line: 3963, column: 2, scope: !8078)
!8195 = !DILocation(line: 3965, column: 6, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !8078, file: !3, line: 3965, column: 6)
!8197 = !DILocation(line: 3965, column: 10, scope: !8196)
!8198 = !DILocation(line: 3965, column: 15, scope: !8196)
!8199 = !DILocation(line: 3965, column: 6, scope: !8078)
!8200 = !DILocation(line: 3966, column: 3, scope: !8196)
!8201 = !DILocation(line: 3966, column: 7, scope: !8196)
!8202 = !DILocation(line: 3966, column: 12, scope: !8196)
!8203 = !DILocation(line: 3966, column: 24, scope: !8196)
!8204 = !DILocation(line: 3969, column: 21, scope: !8078)
!8205 = !DILocation(line: 3969, column: 2, scope: !8078)
!8206 = !DILocation(line: 3972, column: 2, scope: !8078)
!8207 = !DILocation(line: 3972, column: 2, scope: !8085)
!8208 = !DILocalVariable(name: "__dummy", scope: !8209, file: !3, line: 3972, type: !1012)
!8209 = distinct !DILexicalBlock(scope: !8084, file: !3, line: 3972, column: 2)
!8210 = !DILocation(line: 3972, column: 2, scope: !8209)
!8211 = !DILocalVariable(name: "__dummy2", scope: !8209, file: !3, line: 3972, type: !1012)
!8212 = !DILocation(line: 3972, column: 2, scope: !8084)
!8213 = !DILocation(line: 3972, column: 2, scope: !8083)
!8214 = !DILocation(line: 3972, column: 2, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8083, file: !3, line: 3972, column: 2)
!8216 = !DILocalVariable(name: "__dummy", scope: !8217, file: !3, line: 3972, type: !1012)
!8217 = distinct !DILexicalBlock(scope: !8218, file: !3, line: 3972, column: 2)
!8218 = distinct !DILexicalBlock(scope: !8215, file: !3, line: 3972, column: 2)
!8219 = !DILocation(line: 3972, column: 2, scope: !8217)
!8220 = !DILocalVariable(name: "__dummy2", scope: !8217, file: !3, line: 3972, type: !1012)
!8221 = !DILocation(line: 3972, column: 2, scope: !8218)
!8222 = !DILocation(line: 3972, column: 2, scope: !8082)
!8223 = !{i32 -2140008932}
!8224 = !DILocation(line: 3972, column: 2, scope: !8081)
!8225 = !DILocation(line: 329, column: 10, scope: !7389, inlinedAt: !8080)
!8226 = !DILocation(line: 329, column: 16, scope: !7389, inlinedAt: !8080)
!8227 = !DILocation(line: 3973, column: 2, scope: !8078)
!8228 = !DILocation(line: 3973, column: 6, scope: !8078)
!8229 = !DILocation(line: 3973, column: 13, scope: !8078)
!8230 = !DILocation(line: 3974, column: 25, scope: !8078)
!8231 = !DILocation(line: 3974, column: 29, scope: !8078)
!8232 = !DILocation(line: 3974, column: 35, scope: !8078)
!8233 = !DILocation(line: 409, column: 2, scope: !7438, inlinedAt: !8095)
!8234 = !DILocation(line: 409, column: 2, scope: !7443, inlinedAt: !8095)
!8235 = !DILocation(line: 409, column: 2, scope: !7444, inlinedAt: !8095)
!8236 = !DILocation(line: 409, column: 2, scope: !7451, inlinedAt: !8095)
!8237 = !DILocation(line: 409, column: 2, scope: !7454, inlinedAt: !8095)
!8238 = !DILocation(line: 3975, column: 1, scope: !8078)
!8239 = distinct !DISubprogram(name: "ata_ncq_enabled", scope: !178, file: !178, line: 1692, type: !8240, scopeLine: 1693, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!8240 = !DISubroutineType(types: !8241)
!8241 = !{!206, !6392}
!8242 = !DILocalVariable(name: "dev", arg: 1, scope: !8239, file: !178, line: 1692, type: !6392)
!8243 = !DILocation(line: 1692, column: 54, scope: !8239)
!8244 = !DILocation(line: 1696, column: 10, scope: !8239)
!8245 = !DILocation(line: 1696, column: 15, scope: !8239)
!8246 = !DILocation(line: 1696, column: 21, scope: !8239)
!8247 = !DILocation(line: 1697, column: 26, scope: !8239)
!8248 = !DILocation(line: 1696, column: 2, scope: !8239)
!8249 = distinct !DISubprogram(name: "ata_eh_unload", scope: !3, file: !3, line: 485, type: !6640, scopeLine: 486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!8250 = !DILocation(line: 407, column: 64, scope: !7380, inlinedAt: !8251)
!8251 = distinct !DILocation(line: 507, column: 2, scope: !8249)
!8252 = !DILocation(line: 407, column: 84, scope: !7380, inlinedAt: !8251)
!8253 = !DILocation(line: 327, column: 67, scope: !7389, inlinedAt: !8254)
!8254 = distinct !DILocation(line: 501, column: 2, scope: !8255)
!8255 = distinct !DILexicalBlock(scope: !8256, file: !3, line: 501, column: 2)
!8256 = distinct !DILexicalBlock(scope: !8257, file: !3, line: 501, column: 2)
!8257 = distinct !DILexicalBlock(scope: !8258, file: !3, line: 501, column: 2)
!8258 = distinct !DILexicalBlock(scope: !8259, file: !3, line: 501, column: 2)
!8259 = distinct !DILexicalBlock(scope: !8249, file: !3, line: 501, column: 2)
!8260 = !DILocalVariable(name: "ap", arg: 1, scope: !8249, file: !3, line: 485, type: !6375)
!8261 = !DILocation(line: 485, column: 44, scope: !8249)
!8262 = !DILocalVariable(name: "link", scope: !8249, file: !3, line: 487, type: !6396)
!8263 = !DILocation(line: 487, column: 19, scope: !8249)
!8264 = !DILocalVariable(name: "dev", scope: !8249, file: !3, line: 488, type: !6392)
!8265 = !DILocation(line: 488, column: 21, scope: !8249)
!8266 = !DILocalVariable(name: "flags", scope: !8249, file: !3, line: 489, type: !1012)
!8267 = !DILocation(line: 489, column: 16, scope: !8249)
!8268 = !DILocation(line: 494, column: 2, scope: !8269)
!8269 = distinct !DILexicalBlock(scope: !8249, file: !3, line: 494, column: 2)
!8270 = !DILocation(line: 494, column: 2, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !8269, file: !3, line: 494, column: 2)
!8272 = !DILocation(line: 495, column: 18, scope: !8273)
!8273 = distinct !DILexicalBlock(scope: !8271, file: !3, line: 494, column: 41)
!8274 = !DILocation(line: 495, column: 37, scope: !8273)
!8275 = !DILocation(line: 495, column: 43, scope: !8273)
!8276 = !DILocation(line: 495, column: 58, scope: !8273)
!8277 = !DILocation(line: 495, column: 3, scope: !8273)
!8278 = !DILocation(line: 496, column: 3, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8273, file: !3, line: 496, column: 3)
!8280 = !DILocation(line: 496, column: 3, scope: !8281)
!8281 = distinct !DILexicalBlock(scope: !8279, file: !3, line: 496, column: 3)
!8282 = !DILocation(line: 497, column: 20, scope: !8281)
!8283 = !DILocation(line: 497, column: 4, scope: !8281)
!8284 = distinct !{!8284, !8278, !8285}
!8285 = !DILocation(line: 497, column: 23, scope: !8279)
!8286 = !DILocation(line: 498, column: 2, scope: !8273)
!8287 = distinct !{!8287, !8268, !8288}
!8288 = !DILocation(line: 498, column: 2, scope: !8269)
!8289 = !DILocation(line: 501, column: 2, scope: !8249)
!8290 = !DILocation(line: 501, column: 2, scope: !8259)
!8291 = !DILocalVariable(name: "__dummy", scope: !8292, file: !3, line: 501, type: !1012)
!8292 = distinct !DILexicalBlock(scope: !8258, file: !3, line: 501, column: 2)
!8293 = !DILocation(line: 501, column: 2, scope: !8292)
!8294 = !DILocalVariable(name: "__dummy2", scope: !8292, file: !3, line: 501, type: !1012)
!8295 = !DILocation(line: 501, column: 2, scope: !8258)
!8296 = !DILocation(line: 501, column: 2, scope: !8257)
!8297 = !DILocation(line: 501, column: 2, scope: !8298)
!8298 = distinct !DILexicalBlock(scope: !8257, file: !3, line: 501, column: 2)
!8299 = !DILocalVariable(name: "__dummy", scope: !8300, file: !3, line: 501, type: !1012)
!8300 = distinct !DILexicalBlock(scope: !8301, file: !3, line: 501, column: 2)
!8301 = distinct !DILexicalBlock(scope: !8298, file: !3, line: 501, column: 2)
!8302 = !DILocation(line: 501, column: 2, scope: !8300)
!8303 = !DILocalVariable(name: "__dummy2", scope: !8300, file: !3, line: 501, type: !1012)
!8304 = !DILocation(line: 501, column: 2, scope: !8301)
!8305 = !DILocation(line: 501, column: 2, scope: !8256)
!8306 = !{i32 -2140092106}
!8307 = !DILocation(line: 501, column: 2, scope: !8255)
!8308 = !DILocation(line: 329, column: 10, scope: !7389, inlinedAt: !8254)
!8309 = !DILocation(line: 329, column: 16, scope: !7389, inlinedAt: !8254)
!8310 = !DILocation(line: 503, column: 18, scope: !8249)
!8311 = !DILocation(line: 503, column: 2, scope: !8249)
!8312 = !DILocation(line: 504, column: 2, scope: !8249)
!8313 = !DILocation(line: 504, column: 6, scope: !8249)
!8314 = !DILocation(line: 504, column: 13, scope: !8249)
!8315 = !DILocation(line: 505, column: 2, scope: !8249)
!8316 = !DILocation(line: 505, column: 6, scope: !8249)
!8317 = !DILocation(line: 505, column: 13, scope: !8249)
!8318 = !DILocation(line: 507, column: 25, scope: !8249)
!8319 = !DILocation(line: 507, column: 29, scope: !8249)
!8320 = !DILocation(line: 507, column: 35, scope: !8249)
!8321 = !DILocation(line: 409, column: 2, scope: !7438, inlinedAt: !8251)
!8322 = !DILocation(line: 409, column: 2, scope: !7443, inlinedAt: !8251)
!8323 = !DILocation(line: 409, column: 2, scope: !7444, inlinedAt: !8251)
!8324 = !DILocation(line: 409, column: 2, scope: !7451, inlinedAt: !8251)
!8325 = !DILocation(line: 409, column: 2, scope: !7454, inlinedAt: !8251)
!8326 = !DILocation(line: 508, column: 1, scope: !8249)
!8327 = distinct !DISubprogram(name: "ata_eh_finish", scope: !3, file: !3, line: 3769, type: !6640, scopeLine: 3770, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!8328 = !DILocalVariable(name: "ap", arg: 1, scope: !8327, file: !3, line: 3769, type: !6375)
!8329 = !DILocation(line: 3769, column: 37, scope: !8327)
!8330 = !DILocalVariable(name: "qc", scope: !8327, file: !3, line: 3771, type: !6387)
!8331 = !DILocation(line: 3771, column: 25, scope: !8327)
!8332 = !DILocalVariable(name: "tag", scope: !8327, file: !3, line: 3772, type: !206)
!8333 = !DILocation(line: 3772, column: 6, scope: !8327)
!8334 = !DILocation(line: 3775, column: 2, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8327, file: !3, line: 3775, column: 2)
!8336 = !DILocation(line: 3775, column: 2, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8335, file: !3, line: 3775, column: 2)
!8338 = !DILocation(line: 3775, column: 2, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8337, file: !3, line: 3775, column: 2)
!8340 = !DILocation(line: 0, scope: !8337)
!8341 = !DILocation(line: 3776, column: 9, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8343, file: !3, line: 3776, column: 7)
!8343 = distinct !DILexicalBlock(scope: !8337, file: !3, line: 3775, column: 35)
!8344 = !DILocation(line: 3776, column: 13, scope: !8342)
!8345 = !DILocation(line: 3776, column: 19, scope: !8342)
!8346 = !DILocation(line: 3776, column: 7, scope: !8343)
!8347 = !DILocation(line: 3777, column: 4, scope: !8342)
!8348 = !DILocation(line: 3779, column: 7, scope: !8349)
!8349 = distinct !DILexicalBlock(scope: !8343, file: !3, line: 3779, column: 7)
!8350 = !DILocation(line: 3779, column: 11, scope: !8349)
!8351 = !DILocation(line: 3779, column: 7, scope: !8343)
!8352 = !DILocation(line: 3784, column: 8, scope: !8353)
!8353 = distinct !DILexicalBlock(scope: !8354, file: !3, line: 3784, column: 8)
!8354 = distinct !DILexicalBlock(scope: !8349, file: !3, line: 3779, column: 21)
!8355 = !DILocation(line: 3784, column: 12, scope: !8353)
!8356 = !DILocation(line: 3784, column: 18, scope: !8353)
!8357 = !DILocation(line: 3784, column: 8, scope: !8354)
!8358 = !DILocation(line: 3785, column: 21, scope: !8353)
!8359 = !DILocation(line: 3785, column: 5, scope: !8353)
!8360 = !DILocation(line: 3787, column: 24, scope: !8353)
!8361 = !DILocation(line: 3787, column: 5, scope: !8353)
!8362 = !DILocation(line: 3788, column: 3, scope: !8354)
!8363 = !DILocation(line: 3789, column: 8, scope: !8364)
!8364 = distinct !DILexicalBlock(scope: !8365, file: !3, line: 3789, column: 8)
!8365 = distinct !DILexicalBlock(scope: !8349, file: !3, line: 3788, column: 10)
!8366 = !DILocation(line: 3789, column: 12, scope: !8364)
!8367 = !DILocation(line: 3789, column: 18, scope: !8364)
!8368 = !DILocation(line: 3789, column: 8, scope: !8365)
!8369 = !DILocation(line: 3790, column: 24, scope: !8370)
!8370 = distinct !DILexicalBlock(scope: !8364, file: !3, line: 3789, column: 44)
!8371 = !DILocation(line: 3790, column: 5, scope: !8370)
!8372 = !DILocation(line: 3791, column: 4, scope: !8370)
!8373 = !DILocation(line: 3793, column: 13, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8364, file: !3, line: 3791, column: 11)
!8375 = !DILocation(line: 3793, column: 17, scope: !8374)
!8376 = !DILocation(line: 3793, column: 5, scope: !8374)
!8377 = !DILocation(line: 3794, column: 21, scope: !8374)
!8378 = !DILocation(line: 3794, column: 5, scope: !8374)
!8379 = !DILocation(line: 3797, column: 2, scope: !8343)
!8380 = distinct !{!8380, !8334, !8381}
!8381 = !DILocation(line: 3797, column: 2, scope: !8335)
!8382 = !DILocalVariable(name: "__ret_warn_on", scope: !8383, file: !3, line: 3800, type: !206)
!8383 = distinct !DILexicalBlock(scope: !8327, file: !3, line: 3800, column: 2)
!8384 = !DILocation(line: 3800, column: 2, scope: !8383)
!8385 = !DILocation(line: 3800, column: 2, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !8383, file: !3, line: 3800, column: 2)
!8387 = !DILocation(line: 3800, column: 2, scope: !8388)
!8388 = distinct !DILexicalBlock(scope: !8386, file: !3, line: 3800, column: 2)
!8389 = !DILocation(line: 3800, column: 2, scope: !8390)
!8390 = distinct !DILexicalBlock(scope: !8388, file: !3, line: 3800, column: 2)
!8391 = !DILocation(line: 3800, column: 2, scope: !8392)
!8392 = distinct !DILexicalBlock(scope: !8388, file: !3, line: 3800, column: 2)
!8393 = !{i32 -2140017743, i32 -2140017714, i32 -2140017668, i32 -2140017610, i32 -2140017556, i32 -2140017502, i32 -2140017447, i32 -2140017416}
!8394 = !DILocation(line: 3800, column: 2, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8388, file: !3, line: 3800, column: 2)
!8396 = !{i32 -2140017010, i32 -2140017003, i32 -2140016951, i32 -2140016920, i32 -2140016890}
!8397 = !DILocation(line: 3800, column: 2, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8388, file: !3, line: 3800, column: 2)
!8399 = !DILocation(line: 3801, column: 2, scope: !8327)
!8400 = !DILocation(line: 3801, column: 6, scope: !8327)
!8401 = !DILocation(line: 3801, column: 22, scope: !8327)
!8402 = !DILocation(line: 3802, column: 1, scope: !8327)
!8403 = distinct !DISubprogram(name: "ata_eh_handle_port_suspend", scope: !3, file: !3, line: 3870, type: !6640, scopeLine: 3871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!8404 = !DILocation(line: 327, column: 67, scope: !7389, inlinedAt: !8405)
!8405 = distinct !DILocation(line: 3913, column: 2, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8407, file: !3, line: 3913, column: 2)
!8407 = distinct !DILexicalBlock(scope: !8408, file: !3, line: 3913, column: 2)
!8408 = distinct !DILexicalBlock(scope: !8409, file: !3, line: 3913, column: 2)
!8409 = distinct !DILexicalBlock(scope: !8410, file: !3, line: 3913, column: 2)
!8410 = distinct !DILexicalBlock(scope: !8403, file: !3, line: 3913, column: 2)
!8411 = !DILocation(line: 407, column: 64, scope: !7380, inlinedAt: !8412)
!8412 = distinct !DILocation(line: 3883, column: 2, scope: !8403)
!8413 = !DILocation(line: 407, column: 84, scope: !7380, inlinedAt: !8412)
!8414 = !DILocation(line: 407, column: 64, scope: !7380, inlinedAt: !8415)
!8415 = distinct !DILocation(line: 3880, column: 3, scope: !8416)
!8416 = distinct !DILexicalBlock(scope: !8417, file: !3, line: 3879, column: 43)
!8417 = distinct !DILexicalBlock(scope: !8403, file: !3, line: 3878, column: 6)
!8418 = !DILocation(line: 407, column: 84, scope: !7380, inlinedAt: !8415)
!8419 = !DILocation(line: 407, column: 64, scope: !7380, inlinedAt: !8420)
!8420 = distinct !DILocation(line: 3921, column: 2, scope: !8403)
!8421 = !DILocation(line: 407, column: 84, scope: !7380, inlinedAt: !8420)
!8422 = !DILocation(line: 327, column: 67, scope: !7389, inlinedAt: !8423)
!8423 = distinct !DILocation(line: 3877, column: 2, scope: !8424)
!8424 = distinct !DILexicalBlock(scope: !8425, file: !3, line: 3877, column: 2)
!8425 = distinct !DILexicalBlock(scope: !8426, file: !3, line: 3877, column: 2)
!8426 = distinct !DILexicalBlock(scope: !8427, file: !3, line: 3877, column: 2)
!8427 = distinct !DILexicalBlock(scope: !8428, file: !3, line: 3877, column: 2)
!8428 = distinct !DILexicalBlock(scope: !8403, file: !3, line: 3877, column: 2)
!8429 = !DILocalVariable(name: "ap", arg: 1, scope: !8403, file: !3, line: 3870, type: !6375)
!8430 = !DILocation(line: 3870, column: 57, scope: !8403)
!8431 = !DILocalVariable(name: "flags", scope: !8403, file: !3, line: 3872, type: !1012)
!8432 = !DILocation(line: 3872, column: 16, scope: !8403)
!8433 = !DILocalVariable(name: "rc", scope: !8403, file: !3, line: 3873, type: !206)
!8434 = !DILocation(line: 3873, column: 6, scope: !8403)
!8435 = !DILocalVariable(name: "dev", scope: !8403, file: !3, line: 3874, type: !6392)
!8436 = !DILocation(line: 3874, column: 21, scope: !8403)
!8437 = !DILocation(line: 3877, column: 2, scope: !8403)
!8438 = !DILocation(line: 3877, column: 2, scope: !8428)
!8439 = !DILocalVariable(name: "__dummy", scope: !8440, file: !3, line: 3877, type: !1012)
!8440 = distinct !DILexicalBlock(scope: !8427, file: !3, line: 3877, column: 2)
!8441 = !DILocation(line: 3877, column: 2, scope: !8440)
!8442 = !DILocalVariable(name: "__dummy2", scope: !8440, file: !3, line: 3877, type: !1012)
!8443 = !DILocation(line: 3877, column: 2, scope: !8427)
!8444 = !DILocation(line: 3877, column: 2, scope: !8426)
!8445 = !DILocation(line: 3877, column: 2, scope: !8446)
!8446 = distinct !DILexicalBlock(scope: !8426, file: !3, line: 3877, column: 2)
!8447 = !DILocalVariable(name: "__dummy", scope: !8448, file: !3, line: 3877, type: !1012)
!8448 = distinct !DILexicalBlock(scope: !8449, file: !3, line: 3877, column: 2)
!8449 = distinct !DILexicalBlock(scope: !8446, file: !3, line: 3877, column: 2)
!8450 = !DILocation(line: 3877, column: 2, scope: !8448)
!8451 = !DILocalVariable(name: "__dummy2", scope: !8448, file: !3, line: 3877, type: !1012)
!8452 = !DILocation(line: 3877, column: 2, scope: !8449)
!8453 = !DILocation(line: 3877, column: 2, scope: !8425)
!8454 = !{i32 -2140015578}
!8455 = !DILocation(line: 3877, column: 2, scope: !8424)
!8456 = !DILocation(line: 329, column: 10, scope: !7389, inlinedAt: !8423)
!8457 = !DILocation(line: 329, column: 16, scope: !7389, inlinedAt: !8423)
!8458 = !DILocation(line: 3878, column: 8, scope: !8417)
!8459 = !DILocation(line: 3878, column: 12, scope: !8417)
!8460 = !DILocation(line: 3878, column: 19, scope: !8417)
!8461 = !DILocation(line: 3878, column: 43, scope: !8417)
!8462 = !DILocation(line: 3879, column: 6, scope: !8417)
!8463 = !DILocation(line: 3879, column: 10, scope: !8417)
!8464 = !DILocation(line: 3879, column: 18, scope: !8417)
!8465 = !DILocation(line: 3879, column: 24, scope: !8417)
!8466 = !DILocation(line: 3878, column: 6, scope: !8403)
!8467 = !DILocation(line: 3880, column: 26, scope: !8416)
!8468 = !DILocation(line: 3880, column: 30, scope: !8416)
!8469 = !DILocation(line: 3880, column: 36, scope: !8416)
!8470 = !DILocation(line: 409, column: 2, scope: !7438, inlinedAt: !8415)
!8471 = !DILocation(line: 409, column: 2, scope: !7443, inlinedAt: !8415)
!8472 = !DILocation(line: 409, column: 2, scope: !7444, inlinedAt: !8415)
!8473 = !DILocation(line: 409, column: 2, scope: !7451, inlinedAt: !8415)
!8474 = !DILocation(line: 409, column: 2, scope: !7454, inlinedAt: !8415)
!8475 = !DILocation(line: 3881, column: 3, scope: !8416)
!8476 = !DILocation(line: 3883, column: 25, scope: !8403)
!8477 = !DILocation(line: 3883, column: 29, scope: !8403)
!8478 = !DILocation(line: 3883, column: 35, scope: !8403)
!8479 = !DILocation(line: 409, column: 2, scope: !7438, inlinedAt: !8412)
!8480 = !DILocation(line: 409, column: 2, scope: !7443, inlinedAt: !8412)
!8481 = !DILocation(line: 409, column: 2, scope: !7444, inlinedAt: !8412)
!8482 = !DILocation(line: 409, column: 2, scope: !7451, inlinedAt: !8412)
!8483 = !DILocation(line: 409, column: 2, scope: !7454, inlinedAt: !8412)
!8484 = !DILocalVariable(name: "__ret_warn_on", scope: !8485, file: !3, line: 3885, type: !206)
!8485 = distinct !DILexicalBlock(scope: !8403, file: !3, line: 3885, column: 2)
!8486 = !DILocation(line: 3885, column: 2, scope: !8485)
!8487 = !DILocation(line: 3885, column: 2, scope: !8488)
!8488 = distinct !DILexicalBlock(scope: !8485, file: !3, line: 3885, column: 2)
!8489 = !DILocation(line: 3885, column: 2, scope: !8490)
!8490 = distinct !DILexicalBlock(scope: !8488, file: !3, line: 3885, column: 2)
!8491 = !DILocation(line: 3885, column: 2, scope: !8492)
!8492 = distinct !DILexicalBlock(scope: !8490, file: !3, line: 3885, column: 2)
!8493 = !DILocation(line: 3885, column: 2, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8490, file: !3, line: 3885, column: 2)
!8495 = !{i32 -2140014935, i32 -2140014906, i32 -2140014860, i32 -2140014802, i32 -2140014748, i32 -2140014694, i32 -2140014639, i32 -2140014608}
!8496 = !DILocation(line: 3885, column: 2, scope: !8497)
!8497 = distinct !DILexicalBlock(scope: !8490, file: !3, line: 3885, column: 2)
!8498 = !{i32 -2140014202, i32 -2140014195, i32 -2140014143, i32 -2140014112, i32 -2140014082}
!8499 = !DILocation(line: 3885, column: 2, scope: !8500)
!8500 = distinct !DILexicalBlock(scope: !8490, file: !3, line: 3885, column: 2)
!8501 = !DILocation(line: 3892, column: 6, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8403, file: !3, line: 3892, column: 6)
!8503 = !DILocation(line: 3892, column: 6, scope: !8403)
!8504 = !DILocation(line: 3893, column: 3, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !8506, file: !3, line: 3893, column: 3)
!8506 = distinct !DILexicalBlock(scope: !8502, file: !3, line: 3892, column: 33)
!8507 = !DILocation(line: 3893, column: 3, scope: !8508)
!8508 = distinct !DILexicalBlock(scope: !8505, file: !3, line: 3893, column: 3)
!8509 = !DILocation(line: 3894, column: 26, scope: !8510)
!8510 = distinct !DILexicalBlock(scope: !8511, file: !3, line: 3894, column: 8)
!8511 = distinct !DILexicalBlock(scope: !8508, file: !3, line: 3893, column: 45)
!8512 = !DILocation(line: 3894, column: 8, scope: !8510)
!8513 = !DILocation(line: 3894, column: 8, scope: !8511)
!8514 = !DILocation(line: 3895, column: 22, scope: !8510)
!8515 = !DILocation(line: 3895, column: 5, scope: !8510)
!8516 = !DILocation(line: 3896, column: 3, scope: !8511)
!8517 = distinct !{!8517, !8504, !8518}
!8518 = !DILocation(line: 3896, column: 3, scope: !8505)
!8519 = !DILocation(line: 3897, column: 2, scope: !8506)
!8520 = !DILocation(line: 3900, column: 27, scope: !8403)
!8521 = !DILocation(line: 3900, column: 7, scope: !8403)
!8522 = !DILocation(line: 3900, column: 5, scope: !8403)
!8523 = !DILocation(line: 3901, column: 6, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8403, file: !3, line: 3901, column: 6)
!8525 = !DILocation(line: 3901, column: 6, scope: !8403)
!8526 = !DILocation(line: 3902, column: 3, scope: !8524)
!8527 = !DILocation(line: 3905, column: 21, scope: !8403)
!8528 = !DILocation(line: 3905, column: 2, scope: !8403)
!8529 = !DILocation(line: 3907, column: 6, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !8403, file: !3, line: 3907, column: 6)
!8531 = !DILocation(line: 3907, column: 10, scope: !8530)
!8532 = !DILocation(line: 3907, column: 15, scope: !8530)
!8533 = !DILocation(line: 3907, column: 6, scope: !8403)
!8534 = !DILocation(line: 3908, column: 8, scope: !8530)
!8535 = !DILocation(line: 3908, column: 12, scope: !8530)
!8536 = !DILocation(line: 3908, column: 17, scope: !8530)
!8537 = !DILocation(line: 3908, column: 30, scope: !8530)
!8538 = !DILocation(line: 3908, column: 34, scope: !8530)
!8539 = !DILocation(line: 3908, column: 38, scope: !8530)
!8540 = !DILocation(line: 3908, column: 6, scope: !8530)
!8541 = !DILocation(line: 3908, column: 3, scope: !8530)
!8542 = !DILocation(line: 3910, column: 21, scope: !8403)
!8543 = !DILocation(line: 3910, column: 25, scope: !8403)
!8544 = !DILocation(line: 3910, column: 29, scope: !8403)
!8545 = !DILocation(line: 3910, column: 2, scope: !8403)
!8546 = !DILabel(scope: !8403, name: "out", file: !3, line: 3911)
!8547 = !DILocation(line: 3911, column: 2, scope: !8403)
!8548 = !DILocation(line: 3913, column: 2, scope: !8403)
!8549 = !DILocation(line: 3913, column: 2, scope: !8410)
!8550 = !DILocalVariable(name: "__dummy", scope: !8551, file: !3, line: 3913, type: !1012)
!8551 = distinct !DILexicalBlock(scope: !8409, file: !3, line: 3913, column: 2)
!8552 = !DILocation(line: 3913, column: 2, scope: !8551)
!8553 = !DILocalVariable(name: "__dummy2", scope: !8551, file: !3, line: 3913, type: !1012)
!8554 = !DILocation(line: 3913, column: 2, scope: !8409)
!8555 = !DILocation(line: 3913, column: 2, scope: !8408)
!8556 = !DILocation(line: 3913, column: 2, scope: !8557)
!8557 = distinct !DILexicalBlock(scope: !8408, file: !3, line: 3913, column: 2)
!8558 = !DILocalVariable(name: "__dummy", scope: !8559, file: !3, line: 3913, type: !1012)
!8559 = distinct !DILexicalBlock(scope: !8560, file: !3, line: 3913, column: 2)
!8560 = distinct !DILexicalBlock(scope: !8557, file: !3, line: 3913, column: 2)
!8561 = !DILocation(line: 3913, column: 2, scope: !8559)
!8562 = !DILocalVariable(name: "__dummy2", scope: !8559, file: !3, line: 3913, type: !1012)
!8563 = !DILocation(line: 3913, column: 2, scope: !8560)
!8564 = !DILocation(line: 3913, column: 2, scope: !8407)
!8565 = !{i32 -2140012831}
!8566 = !DILocation(line: 3913, column: 2, scope: !8406)
!8567 = !DILocation(line: 329, column: 10, scope: !7389, inlinedAt: !8405)
!8568 = !DILocation(line: 329, column: 16, scope: !7389, inlinedAt: !8405)
!8569 = !DILocation(line: 3915, column: 2, scope: !8403)
!8570 = !DILocation(line: 3915, column: 6, scope: !8403)
!8571 = !DILocation(line: 3915, column: 13, scope: !8403)
!8572 = !DILocation(line: 3916, column: 6, scope: !8573)
!8573 = distinct !DILexicalBlock(scope: !8403, file: !3, line: 3916, column: 6)
!8574 = !DILocation(line: 3916, column: 9, scope: !8573)
!8575 = !DILocation(line: 3916, column: 6, scope: !8403)
!8576 = !DILocation(line: 3917, column: 3, scope: !8573)
!8577 = !DILocation(line: 3917, column: 7, scope: !8573)
!8578 = !DILocation(line: 3917, column: 14, scope: !8573)
!8579 = !DILocation(line: 3918, column: 11, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !8573, file: !3, line: 3918, column: 11)
!8581 = !DILocation(line: 3918, column: 15, scope: !8580)
!8582 = !DILocation(line: 3918, column: 22, scope: !8580)
!8583 = !DILocation(line: 3918, column: 11, scope: !8573)
!8584 = !DILocation(line: 3919, column: 24, scope: !8580)
!8585 = !DILocation(line: 3919, column: 3, scope: !8580)
!8586 = !DILocation(line: 3921, column: 25, scope: !8403)
!8587 = !DILocation(line: 3921, column: 29, scope: !8403)
!8588 = !DILocation(line: 3921, column: 35, scope: !8403)
!8589 = !DILocation(line: 409, column: 2, scope: !7438, inlinedAt: !8420)
!8590 = !DILocation(line: 409, column: 2, scope: !7443, inlinedAt: !8420)
!8591 = !DILocation(line: 409, column: 2, scope: !7444, inlinedAt: !8420)
!8592 = !DILocation(line: 409, column: 2, scope: !7451, inlinedAt: !8420)
!8593 = !DILocation(line: 409, column: 2, scope: !7454, inlinedAt: !8420)
!8594 = !DILocation(line: 3923, column: 2, scope: !8403)
!8595 = !DILocation(line: 3924, column: 1, scope: !8403)
!8596 = distinct !DISubprogram(name: "ata_qc_from_tag", scope: !178, file: !178, line: 1740, type: !8029, scopeLine: 1742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!8597 = !DILocalVariable(name: "ap", arg: 1, scope: !8596, file: !178, line: 1740, type: !6375)
!8598 = !DILocation(line: 1740, column: 71, scope: !8596)
!8599 = !DILocalVariable(name: "tag", arg: 2, scope: !8596, file: !178, line: 1741, type: !7)
!8600 = !DILocation(line: 1741, column: 25, scope: !8596)
!8601 = !DILocalVariable(name: "qc", scope: !8596, file: !178, line: 1743, type: !6387)
!8602 = !DILocation(line: 1743, column: 25, scope: !8596)
!8603 = !DILocation(line: 1743, column: 48, scope: !8596)
!8604 = !DILocation(line: 1743, column: 52, scope: !8596)
!8605 = !DILocation(line: 1743, column: 30, scope: !8596)
!8606 = !DILocation(line: 1745, column: 6, scope: !8607)
!8607 = distinct !DILexicalBlock(scope: !8596, file: !178, line: 1745, column: 6)
!8608 = !DILocation(line: 1745, column: 20, scope: !8607)
!8609 = !DILocation(line: 1745, column: 24, scope: !8607)
!8610 = !DILocation(line: 1745, column: 28, scope: !8607)
!8611 = !DILocation(line: 1745, column: 33, scope: !8607)
!8612 = !DILocation(line: 1745, column: 6, scope: !8596)
!8613 = !DILocation(line: 1746, column: 10, scope: !8607)
!8614 = !DILocation(line: 1746, column: 3, scope: !8607)
!8615 = !DILocation(line: 1748, column: 7, scope: !8616)
!8616 = distinct !DILexicalBlock(scope: !8596, file: !178, line: 1748, column: 6)
!8617 = !DILocation(line: 1748, column: 11, scope: !8616)
!8618 = !DILocation(line: 1748, column: 17, scope: !8616)
!8619 = !DILocation(line: 1749, column: 26, scope: !8616)
!8620 = !DILocation(line: 1748, column: 6, scope: !8596)
!8621 = !DILocation(line: 1750, column: 10, scope: !8616)
!8622 = !DILocation(line: 1750, column: 3, scope: !8616)
!8623 = !DILocation(line: 1752, column: 2, scope: !8596)
!8624 = !DILocation(line: 1753, column: 1, scope: !8596)
!8625 = distinct !DISubprogram(name: "schedule_delayed_work", scope: !932, file: !932, line: 623, type: !8626, scopeLine: 625, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!8626 = !DISubroutineType(types: !8627)
!8627 = !{!1333, !8628, !1012}
!8628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3005, size: 64)
!8629 = !DILocalVariable(name: "dwork", arg: 1, scope: !8625, file: !932, line: 623, type: !8628)
!8630 = !DILocation(line: 623, column: 63, scope: !8625)
!8631 = !DILocalVariable(name: "delay", arg: 2, scope: !8625, file: !932, line: 624, type: !1012)
!8632 = !DILocation(line: 624, column: 21, scope: !8625)
!8633 = !DILocation(line: 626, column: 28, scope: !8625)
!8634 = !DILocation(line: 626, column: 39, scope: !8625)
!8635 = !DILocation(line: 626, column: 46, scope: !8625)
!8636 = !DILocation(line: 626, column: 9, scope: !8625)
!8637 = !DILocation(line: 626, column: 2, scope: !8625)
!8638 = distinct !DISubprogram(name: "ata_port_wait_eh", scope: !3, file: !3, line: 774, type: !6640, scopeLine: 775, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!8639 = !DILocation(line: 407, column: 64, scope: !7380, inlinedAt: !8640)
!8640 = distinct !DILocation(line: 790, column: 2, scope: !8638)
!8641 = !DILocation(line: 407, column: 84, scope: !7380, inlinedAt: !8640)
!8642 = !DILocation(line: 327, column: 67, scope: !7389, inlinedAt: !8643)
!8643 = distinct !DILocation(line: 786, column: 3, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8645, file: !3, line: 786, column: 3)
!8645 = distinct !DILexicalBlock(scope: !8646, file: !3, line: 786, column: 3)
!8646 = distinct !DILexicalBlock(scope: !8647, file: !3, line: 786, column: 3)
!8647 = distinct !DILexicalBlock(scope: !8648, file: !3, line: 786, column: 3)
!8648 = distinct !DILexicalBlock(scope: !8649, file: !3, line: 786, column: 3)
!8649 = distinct !DILexicalBlock(scope: !8638, file: !3, line: 782, column: 73)
!8650 = !DILocation(line: 407, column: 64, scope: !7380, inlinedAt: !8651)
!8651 = distinct !DILocation(line: 784, column: 3, scope: !8649)
!8652 = !DILocation(line: 407, column: 84, scope: !7380, inlinedAt: !8651)
!8653 = !DILocation(line: 327, column: 67, scope: !7389, inlinedAt: !8654)
!8654 = distinct !DILocation(line: 780, column: 2, scope: !8655)
!8655 = distinct !DILexicalBlock(scope: !8656, file: !3, line: 780, column: 2)
!8656 = distinct !DILexicalBlock(scope: !8657, file: !3, line: 780, column: 2)
!8657 = distinct !DILexicalBlock(scope: !8658, file: !3, line: 780, column: 2)
!8658 = distinct !DILexicalBlock(scope: !8659, file: !3, line: 780, column: 2)
!8659 = distinct !DILexicalBlock(scope: !8638, file: !3, line: 780, column: 2)
!8660 = !DILocation(line: 15, column: 9, scope: !7303, inlinedAt: !8661)
!8661 = distinct !DILocation(line: 777, column: 2, scope: !8638)
!8662 = !DILocation(line: 15, column: 9, scope: !7311, inlinedAt: !8661)
!8663 = !DILocation(line: 15, column: 9, scope: !7314, inlinedAt: !8661)
!8664 = !DILocalVariable(name: "ap", arg: 1, scope: !8638, file: !3, line: 774, type: !6375)
!8665 = !DILocation(line: 774, column: 40, scope: !8638)
!8666 = !DILocalVariable(name: "flags", scope: !8638, file: !3, line: 776, type: !1012)
!8667 = !DILocation(line: 776, column: 16, scope: !8638)
!8668 = !DILocalVariable(name: "wait", scope: !8638, file: !3, line: 777, type: !1770)
!8669 = !DILocation(line: 777, column: 2, scope: !8638)
!8670 = !DILabel(scope: !8638, name: "retry", file: !3, line: 779)
!8671 = !DILocation(line: 779, column: 2, scope: !8638)
!8672 = !DILocation(line: 780, column: 2, scope: !8638)
!8673 = !DILocation(line: 780, column: 2, scope: !8659)
!8674 = !DILocalVariable(name: "__dummy", scope: !8675, file: !3, line: 780, type: !1012)
!8675 = distinct !DILexicalBlock(scope: !8658, file: !3, line: 780, column: 2)
!8676 = !DILocation(line: 780, column: 2, scope: !8675)
!8677 = !DILocalVariable(name: "__dummy2", scope: !8675, file: !3, line: 780, type: !1012)
!8678 = !DILocation(line: 780, column: 2, scope: !8658)
!8679 = !DILocation(line: 780, column: 2, scope: !8657)
!8680 = !DILocation(line: 780, column: 2, scope: !8681)
!8681 = distinct !DILexicalBlock(scope: !8657, file: !3, line: 780, column: 2)
!8682 = !DILocalVariable(name: "__dummy", scope: !8683, file: !3, line: 780, type: !1012)
!8683 = distinct !DILexicalBlock(scope: !8684, file: !3, line: 780, column: 2)
!8684 = distinct !DILexicalBlock(scope: !8681, file: !3, line: 780, column: 2)
!8685 = !DILocation(line: 780, column: 2, scope: !8683)
!8686 = !DILocalVariable(name: "__dummy2", scope: !8683, file: !3, line: 780, type: !1012)
!8687 = !DILocation(line: 780, column: 2, scope: !8684)
!8688 = !DILocation(line: 780, column: 2, scope: !8656)
!8689 = !{i32 -2140075360}
!8690 = !DILocation(line: 780, column: 2, scope: !8655)
!8691 = !DILocation(line: 329, column: 10, scope: !7389, inlinedAt: !8654)
!8692 = !DILocation(line: 329, column: 16, scope: !7389, inlinedAt: !8654)
!8693 = !DILocation(line: 782, column: 2, scope: !8638)
!8694 = !DILocation(line: 782, column: 9, scope: !8638)
!8695 = !DILocation(line: 782, column: 13, scope: !8638)
!8696 = !DILocation(line: 782, column: 20, scope: !8638)
!8697 = !DILocation(line: 783, column: 20, scope: !8649)
!8698 = !DILocation(line: 783, column: 24, scope: !8649)
!8699 = !DILocation(line: 783, column: 3, scope: !8649)
!8700 = !DILocation(line: 784, column: 26, scope: !8649)
!8701 = !DILocation(line: 784, column: 30, scope: !8649)
!8702 = !DILocation(line: 784, column: 36, scope: !8649)
!8703 = !DILocation(line: 409, column: 2, scope: !7438, inlinedAt: !8651)
!8704 = !DILocation(line: 409, column: 2, scope: !7443, inlinedAt: !8651)
!8705 = !DILocation(line: 409, column: 2, scope: !7444, inlinedAt: !8651)
!8706 = !DILocation(line: 409, column: 2, scope: !7451, inlinedAt: !8651)
!8707 = !DILocation(line: 409, column: 2, scope: !7454, inlinedAt: !8651)
!8708 = !DILocation(line: 785, column: 3, scope: !8649)
!8709 = !DILocation(line: 786, column: 3, scope: !8649)
!8710 = !DILocation(line: 786, column: 3, scope: !8648)
!8711 = !DILocalVariable(name: "__dummy", scope: !8712, file: !3, line: 786, type: !1012)
!8712 = distinct !DILexicalBlock(scope: !8647, file: !3, line: 786, column: 3)
!8713 = !DILocation(line: 786, column: 3, scope: !8712)
!8714 = !DILocalVariable(name: "__dummy2", scope: !8712, file: !3, line: 786, type: !1012)
!8715 = !DILocation(line: 786, column: 3, scope: !8647)
!8716 = !DILocation(line: 786, column: 3, scope: !8646)
!8717 = !DILocation(line: 786, column: 3, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !8646, file: !3, line: 786, column: 3)
!8719 = !DILocalVariable(name: "__dummy", scope: !8720, file: !3, line: 786, type: !1012)
!8720 = distinct !DILexicalBlock(scope: !8721, file: !3, line: 786, column: 3)
!8721 = distinct !DILexicalBlock(scope: !8718, file: !3, line: 786, column: 3)
!8722 = !DILocation(line: 786, column: 3, scope: !8720)
!8723 = !DILocalVariable(name: "__dummy2", scope: !8720, file: !3, line: 786, type: !1012)
!8724 = !DILocation(line: 786, column: 3, scope: !8721)
!8725 = !DILocation(line: 786, column: 3, scope: !8645)
!8726 = !{i32 -2140074355}
!8727 = !DILocation(line: 786, column: 3, scope: !8644)
!8728 = !DILocation(line: 329, column: 10, scope: !7389, inlinedAt: !8643)
!8729 = !DILocation(line: 329, column: 16, scope: !7389, inlinedAt: !8643)
!8730 = distinct !{!8730, !8693, !8731}
!8731 = !DILocation(line: 787, column: 2, scope: !8638)
!8732 = !DILocation(line: 788, column: 15, scope: !8638)
!8733 = !DILocation(line: 788, column: 19, scope: !8638)
!8734 = !DILocation(line: 788, column: 2, scope: !8638)
!8735 = !DILocation(line: 790, column: 25, scope: !8638)
!8736 = !DILocation(line: 790, column: 29, scope: !8638)
!8737 = !DILocation(line: 790, column: 35, scope: !8638)
!8738 = !DILocation(line: 409, column: 2, scope: !7438, inlinedAt: !8640)
!8739 = !DILocation(line: 409, column: 2, scope: !7443, inlinedAt: !8640)
!8740 = !DILocation(line: 409, column: 2, scope: !7444, inlinedAt: !8640)
!8741 = !DILocation(line: 409, column: 2, scope: !7451, inlinedAt: !8640)
!8742 = !DILocation(line: 409, column: 2, scope: !7454, inlinedAt: !8640)
!8743 = !DILocation(line: 793, column: 28, scope: !8744)
!8744 = distinct !DILexicalBlock(scope: !8638, file: !3, line: 793, column: 6)
!8745 = !DILocation(line: 793, column: 32, scope: !8744)
!8746 = !DILocation(line: 793, column: 6, scope: !8744)
!8747 = !DILocation(line: 793, column: 6, scope: !8638)
!8748 = !DILocation(line: 794, column: 14, scope: !8749)
!8749 = distinct !DILexicalBlock(scope: !8744, file: !3, line: 793, column: 44)
!8750 = !DILocation(line: 794, column: 3, scope: !8749)
!8751 = !DILocation(line: 795, column: 3, scope: !8749)
!8752 = !DILocation(line: 797, column: 1, scope: !8638)
!8753 = distinct !DISubprogram(name: "scsi_host_in_recovery", scope: !168, file: !168, line: 727, type: !6068, scopeLine: 728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!8754 = !DILocalVariable(name: "shost", arg: 1, scope: !8753, file: !168, line: 727, type: !5969)
!8755 = !DILocation(line: 727, column: 59, scope: !8753)
!8756 = !DILocation(line: 729, column: 9, scope: !8753)
!8757 = !DILocation(line: 729, column: 16, scope: !8753)
!8758 = !DILocation(line: 729, column: 28, scope: !8753)
!8759 = !DILocation(line: 729, column: 46, scope: !8753)
!8760 = !DILocation(line: 730, column: 3, scope: !8753)
!8761 = !DILocation(line: 730, column: 10, scope: !8753)
!8762 = !DILocation(line: 730, column: 22, scope: !8753)
!8763 = !DILocation(line: 730, column: 47, scope: !8753)
!8764 = !DILocation(line: 731, column: 3, scope: !8753)
!8765 = !DILocation(line: 731, column: 10, scope: !8753)
!8766 = !DILocation(line: 731, column: 22, scope: !8753)
!8767 = !DILocation(line: 731, column: 44, scope: !8753)
!8768 = !DILocation(line: 732, column: 3, scope: !8753)
!8769 = !DILocation(line: 732, column: 10, scope: !8753)
!8770 = !DILocation(line: 729, column: 2, scope: !8753)
!8771 = distinct !DISubprogram(name: "ata_eh_fastdrain_timerfn", scope: !3, file: !3, line: 815, type: !3016, scopeLine: 816, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!8772 = !DILocation(line: 407, column: 64, scope: !7380, inlinedAt: !8773)
!8773 = distinct !DILocation(line: 851, column: 2, scope: !8771)
!8774 = !DILocation(line: 407, column: 84, scope: !7380, inlinedAt: !8773)
!8775 = !DILocation(line: 327, column: 67, scope: !7389, inlinedAt: !8776)
!8776 = distinct !DILocation(line: 821, column: 2, scope: !8777)
!8777 = distinct !DILexicalBlock(scope: !8778, file: !3, line: 821, column: 2)
!8778 = distinct !DILexicalBlock(scope: !8779, file: !3, line: 821, column: 2)
!8779 = distinct !DILexicalBlock(scope: !8780, file: !3, line: 821, column: 2)
!8780 = distinct !DILexicalBlock(scope: !8781, file: !3, line: 821, column: 2)
!8781 = distinct !DILexicalBlock(scope: !8771, file: !3, line: 821, column: 2)
!8782 = !DILocalVariable(name: "t", arg: 1, scope: !8771, file: !3, line: 815, type: !3018)
!8783 = !DILocation(line: 815, column: 50, scope: !8771)
!8784 = !DILocalVariable(name: "ap", scope: !8771, file: !3, line: 817, type: !6375)
!8785 = !DILocation(line: 817, column: 19, scope: !8771)
!8786 = !DILocalVariable(name: "__mptr", scope: !8787, file: !3, line: 817, type: !970)
!8787 = distinct !DILexicalBlock(scope: !8771, file: !3, line: 817, column: 24)
!8788 = !DILocation(line: 817, column: 24, scope: !8787)
!8789 = !DILocation(line: 817, column: 24, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !8787, file: !3, line: 817, column: 24)
!8791 = !DILocalVariable(name: "flags", scope: !8771, file: !3, line: 818, type: !1012)
!8792 = !DILocation(line: 818, column: 16, scope: !8771)
!8793 = !DILocalVariable(name: "cnt", scope: !8771, file: !3, line: 819, type: !206)
!8794 = !DILocation(line: 819, column: 6, scope: !8771)
!8795 = !DILocation(line: 821, column: 2, scope: !8771)
!8796 = !DILocation(line: 821, column: 2, scope: !8781)
!8797 = !DILocalVariable(name: "__dummy", scope: !8798, file: !3, line: 821, type: !1012)
!8798 = distinct !DILexicalBlock(scope: !8780, file: !3, line: 821, column: 2)
!8799 = !DILocation(line: 821, column: 2, scope: !8798)
!8800 = !DILocalVariable(name: "__dummy2", scope: !8798, file: !3, line: 821, type: !1012)
!8801 = !DILocation(line: 821, column: 2, scope: !8780)
!8802 = !DILocation(line: 821, column: 2, scope: !8779)
!8803 = !DILocation(line: 821, column: 2, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8779, file: !3, line: 821, column: 2)
!8805 = !DILocalVariable(name: "__dummy", scope: !8806, file: !3, line: 821, type: !1012)
!8806 = distinct !DILexicalBlock(scope: !8807, file: !3, line: 821, column: 2)
!8807 = distinct !DILexicalBlock(scope: !8804, file: !3, line: 821, column: 2)
!8808 = !DILocation(line: 821, column: 2, scope: !8806)
!8809 = !DILocalVariable(name: "__dummy2", scope: !8806, file: !3, line: 821, type: !1012)
!8810 = !DILocation(line: 821, column: 2, scope: !8807)
!8811 = !DILocation(line: 821, column: 2, scope: !8778)
!8812 = !{i32 -2140071496}
!8813 = !DILocation(line: 821, column: 2, scope: !8777)
!8814 = !DILocation(line: 329, column: 10, scope: !7389, inlinedAt: !8776)
!8815 = !DILocation(line: 329, column: 16, scope: !7389, inlinedAt: !8776)
!8816 = !DILocation(line: 823, column: 28, scope: !8771)
!8817 = !DILocation(line: 823, column: 8, scope: !8771)
!8818 = !DILocation(line: 823, column: 6, scope: !8771)
!8819 = !DILocation(line: 826, column: 7, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8771, file: !3, line: 826, column: 6)
!8821 = !DILocation(line: 826, column: 6, scope: !8771)
!8822 = !DILocation(line: 827, column: 3, scope: !8820)
!8823 = !DILocation(line: 829, column: 6, scope: !8824)
!8824 = distinct !DILexicalBlock(scope: !8771, file: !3, line: 829, column: 6)
!8825 = !DILocation(line: 829, column: 13, scope: !8824)
!8826 = !DILocation(line: 829, column: 17, scope: !8824)
!8827 = !DILocation(line: 829, column: 10, scope: !8824)
!8828 = !DILocation(line: 829, column: 6, scope: !8771)
!8829 = !DILocalVariable(name: "qc", scope: !8830, file: !3, line: 830, type: !6387)
!8830 = distinct !DILexicalBlock(scope: !8824, file: !3, line: 829, column: 32)
!8831 = !DILocation(line: 830, column: 26, scope: !8830)
!8832 = !DILocalVariable(name: "tag", scope: !8830, file: !3, line: 831, type: !7)
!8833 = !DILocation(line: 831, column: 16, scope: !8830)
!8834 = !DILocation(line: 836, column: 3, scope: !8835)
!8835 = distinct !DILexicalBlock(scope: !8830, file: !3, line: 836, column: 3)
!8836 = !DILocation(line: 836, column: 3, scope: !8837)
!8837 = distinct !DILexicalBlock(scope: !8835, file: !3, line: 836, column: 3)
!8838 = !DILocation(line: 836, column: 3, scope: !8839)
!8839 = distinct !DILexicalBlock(scope: !8837, file: !3, line: 836, column: 3)
!8840 = !DILocation(line: 0, scope: !8837)
!8841 = !DILocation(line: 837, column: 8, scope: !8842)
!8842 = distinct !DILexicalBlock(scope: !8843, file: !3, line: 837, column: 8)
!8843 = distinct !DILexicalBlock(scope: !8837, file: !3, line: 836, column: 32)
!8844 = !DILocation(line: 837, column: 8, scope: !8843)
!8845 = !DILocation(line: 838, column: 5, scope: !8842)
!8846 = !DILocation(line: 838, column: 9, scope: !8842)
!8847 = !DILocation(line: 838, column: 18, scope: !8842)
!8848 = !DILocation(line: 839, column: 3, scope: !8843)
!8849 = distinct !{!8849, !8834, !8850}
!8850 = !DILocation(line: 839, column: 3, scope: !8835)
!8851 = !DILocation(line: 841, column: 19, scope: !8830)
!8852 = !DILocation(line: 841, column: 3, scope: !8830)
!8853 = !DILocation(line: 842, column: 2, scope: !8830)
!8854 = !DILocation(line: 844, column: 23, scope: !8855)
!8855 = distinct !DILexicalBlock(scope: !8824, file: !3, line: 842, column: 9)
!8856 = !DILocation(line: 844, column: 3, scope: !8855)
!8857 = !DILocation(line: 844, column: 7, scope: !8855)
!8858 = !DILocation(line: 844, column: 21, scope: !8855)
!8859 = !DILocation(line: 846, column: 17, scope: !8855)
!8860 = !DILocation(line: 846, column: 4, scope: !8855)
!8861 = !DILocation(line: 845, column: 3, scope: !8855)
!8862 = !DILocation(line: 845, column: 7, scope: !8855)
!8863 = !DILocation(line: 845, column: 23, scope: !8855)
!8864 = !DILocation(line: 845, column: 31, scope: !8855)
!8865 = !DILocation(line: 847, column: 14, scope: !8855)
!8866 = !DILocation(line: 847, column: 18, scope: !8855)
!8867 = !DILocation(line: 847, column: 3, scope: !8855)
!8868 = !DILabel(scope: !8771, name: "out_unlock", file: !3, line: 850)
!8869 = !DILocation(line: 850, column: 2, scope: !8771)
!8870 = !DILocation(line: 851, column: 25, scope: !8771)
!8871 = !DILocation(line: 851, column: 29, scope: !8771)
!8872 = !DILocation(line: 851, column: 35, scope: !8771)
!8873 = !DILocation(line: 409, column: 2, scope: !7438, inlinedAt: !8773)
!8874 = !DILocation(line: 409, column: 2, scope: !7443, inlinedAt: !8773)
!8875 = !DILocation(line: 409, column: 2, scope: !7444, inlinedAt: !8773)
!8876 = !DILocation(line: 409, column: 2, scope: !7451, inlinedAt: !8773)
!8877 = !DILocation(line: 409, column: 2, scope: !7454, inlinedAt: !8773)
!8878 = !DILocation(line: 852, column: 1, scope: !8771)
!8879 = distinct !DISubprogram(name: "ata_eh_nr_in_flight", scope: !3, file: !3, line: 800, type: !6612, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!8880 = !DILocalVariable(name: "ap", arg: 1, scope: !8879, file: !3, line: 800, type: !6375)
!8881 = !DILocation(line: 800, column: 49, scope: !8879)
!8882 = !DILocalVariable(name: "qc", scope: !8879, file: !3, line: 802, type: !6387)
!8883 = !DILocation(line: 802, column: 25, scope: !8879)
!8884 = !DILocalVariable(name: "tag", scope: !8879, file: !3, line: 803, type: !7)
!8885 = !DILocation(line: 803, column: 15, scope: !8879)
!8886 = !DILocalVariable(name: "nr", scope: !8879, file: !3, line: 804, type: !206)
!8887 = !DILocation(line: 804, column: 6, scope: !8879)
!8888 = !DILocation(line: 807, column: 2, scope: !8889)
!8889 = distinct !DILexicalBlock(scope: !8879, file: !3, line: 807, column: 2)
!8890 = !DILocation(line: 807, column: 2, scope: !8891)
!8891 = distinct !DILexicalBlock(scope: !8889, file: !3, line: 807, column: 2)
!8892 = !DILocation(line: 807, column: 2, scope: !8893)
!8893 = distinct !DILexicalBlock(scope: !8891, file: !3, line: 807, column: 2)
!8894 = !DILocation(line: 0, scope: !8891)
!8895 = !DILocation(line: 808, column: 7, scope: !8896)
!8896 = distinct !DILexicalBlock(scope: !8897, file: !3, line: 808, column: 7)
!8897 = distinct !DILexicalBlock(scope: !8891, file: !3, line: 807, column: 31)
!8898 = !DILocation(line: 808, column: 7, scope: !8897)
!8899 = !DILocation(line: 809, column: 6, scope: !8896)
!8900 = !DILocation(line: 809, column: 4, scope: !8896)
!8901 = !DILocation(line: 810, column: 2, scope: !8897)
!8902 = distinct !{!8902, !8888, !8903}
!8903 = !DILocation(line: 810, column: 2, scope: !8889)
!8904 = !DILocation(line: 812, column: 9, scope: !8879)
!8905 = !DILocation(line: 812, column: 2, scope: !8879)
!8906 = distinct !DISubprogram(name: "ata_port_freeze", scope: !3, file: !3, line: 1082, type: !6612, scopeLine: 1083, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!8907 = !DILocalVariable(name: "ap", arg: 1, scope: !8906, file: !3, line: 1082, type: !6375)
!8908 = !DILocation(line: 1082, column: 38, scope: !8906)
!8909 = !DILocalVariable(name: "nr_aborted", scope: !8906, file: !3, line: 1084, type: !206)
!8910 = !DILocation(line: 1084, column: 6, scope: !8906)
!8911 = !DILocalVariable(name: "__ret_warn_on", scope: !8912, file: !3, line: 1086, type: !206)
!8912 = distinct !DILexicalBlock(scope: !8906, file: !3, line: 1086, column: 2)
!8913 = !DILocation(line: 1086, column: 2, scope: !8912)
!8914 = !DILocation(line: 1086, column: 2, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8912, file: !3, line: 1086, column: 2)
!8916 = !DILocation(line: 1086, column: 2, scope: !8917)
!8917 = distinct !DILexicalBlock(scope: !8915, file: !3, line: 1086, column: 2)
!8918 = !DILocation(line: 1086, column: 2, scope: !8919)
!8919 = distinct !DILexicalBlock(scope: !8917, file: !3, line: 1086, column: 2)
!8920 = !DILocation(line: 1086, column: 2, scope: !8921)
!8921 = distinct !DILexicalBlock(scope: !8917, file: !3, line: 1086, column: 2)
!8922 = !{i32 -2140064151, i32 -2140064122, i32 -2140064076, i32 -2140064018, i32 -2140063964, i32 -2140063910, i32 -2140063855, i32 -2140063824}
!8923 = !DILocation(line: 1086, column: 2, scope: !8924)
!8924 = distinct !DILexicalBlock(scope: !8917, file: !3, line: 1086, column: 2)
!8925 = !{i32 -2140063418, i32 -2140063411, i32 -2140063359, i32 -2140063328, i32 -2140063298}
!8926 = !DILocation(line: 1086, column: 2, scope: !8927)
!8927 = distinct !DILexicalBlock(scope: !8917, file: !3, line: 1086, column: 2)
!8928 = !DILocation(line: 1088, column: 20, scope: !8906)
!8929 = !DILocation(line: 1088, column: 2, scope: !8906)
!8930 = !DILocation(line: 1089, column: 30, scope: !8906)
!8931 = !DILocation(line: 1089, column: 15, scope: !8906)
!8932 = !DILocation(line: 1089, column: 13, scope: !8906)
!8933 = !DILocation(line: 1091, column: 9, scope: !8906)
!8934 = !DILocation(line: 1091, column: 2, scope: !8906)
!8935 = distinct !DISubprogram(name: "ata_deadline", scope: !178, file: !178, line: 1835, type: !8936, scopeLine: 1837, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!8936 = !DISubroutineType(types: !8937)
!8937 = !{!1012, !1012, !1012}
!8938 = !DILocalVariable(name: "m", arg: 1, scope: !8939, file: !8940, line: 363, type: !3435)
!8939 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !8940, file: !8940, line: 363, type: !8941, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!8940 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!8941 = !DISubroutineType(types: !8942)
!8942 = !{!1012, !3435}
!8943 = !DILocation(line: 363, column: 74, scope: !8939, inlinedAt: !8944)
!8944 = distinct !DILocation(line: 1838, column: 24, scope: !8935)
!8945 = !DILocalVariable(name: "from_jiffies", arg: 1, scope: !8935, file: !178, line: 1835, type: !1012)
!8946 = !DILocation(line: 1835, column: 56, scope: !8935)
!8947 = !DILocalVariable(name: "timeout_msecs", arg: 2, scope: !8935, file: !178, line: 1836, type: !1012)
!8948 = !DILocation(line: 1836, column: 21, scope: !8935)
!8949 = !DILocation(line: 1838, column: 9, scope: !8935)
!8950 = !DILocation(line: 1838, column: 41, scope: !8935)
!8951 = !DILocation(line: 365, column: 27, scope: !8952, inlinedAt: !8944)
!8952 = distinct !DILexicalBlock(scope: !8939, file: !8940, line: 365, column: 6)
!8953 = !DILocation(line: 365, column: 6, scope: !8952, inlinedAt: !8944)
!8954 = !DILocation(line: 365, column: 6, scope: !8939, inlinedAt: !8944)
!8955 = !DILocation(line: 366, column: 12, scope: !8956, inlinedAt: !8944)
!8956 = distinct !DILexicalBlock(scope: !8957, file: !8940, line: 366, column: 7)
!8957 = distinct !DILexicalBlock(scope: !8952, file: !8940, line: 365, column: 31)
!8958 = !DILocation(line: 366, column: 14, scope: !8956, inlinedAt: !8944)
!8959 = !DILocation(line: 366, column: 7, scope: !8957, inlinedAt: !8944)
!8960 = !DILocation(line: 367, column: 4, scope: !8956, inlinedAt: !8944)
!8961 = !DILocation(line: 368, column: 28, scope: !8957, inlinedAt: !8944)
!8962 = !DILocation(line: 368, column: 10, scope: !8957, inlinedAt: !8944)
!8963 = !DILocation(line: 368, column: 3, scope: !8957, inlinedAt: !8944)
!8964 = !DILocation(line: 370, column: 29, scope: !8965, inlinedAt: !8944)
!8965 = distinct !DILexicalBlock(scope: !8952, file: !8940, line: 369, column: 9)
!8966 = !DILocation(line: 370, column: 10, scope: !8965, inlinedAt: !8944)
!8967 = !DILocation(line: 370, column: 3, scope: !8965, inlinedAt: !8944)
!8968 = !DILocation(line: 372, column: 1, scope: !8939, inlinedAt: !8944)
!8969 = !DILocation(line: 1838, column: 22, scope: !8935)
!8970 = !DILocation(line: 1838, column: 2, scope: !8935)
!8971 = distinct !DISubprogram(name: "ata_qc_schedule_eh", scope: !3, file: !3, line: 901, type: !6593, scopeLine: 902, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!8972 = !DILocalVariable(name: "qc", arg: 1, scope: !8971, file: !3, line: 901, type: !6387)
!8973 = !DILocation(line: 901, column: 48, scope: !8971)
!8974 = !DILocalVariable(name: "ap", scope: !8971, file: !3, line: 903, type: !6375)
!8975 = !DILocation(line: 903, column: 19, scope: !8971)
!8976 = !DILocation(line: 903, column: 24, scope: !8971)
!8977 = !DILocation(line: 903, column: 28, scope: !8971)
!8978 = !DILocalVariable(name: "__ret_warn_on", scope: !8979, file: !3, line: 905, type: !206)
!8979 = distinct !DILexicalBlock(scope: !8971, file: !3, line: 905, column: 2)
!8980 = !DILocation(line: 905, column: 2, scope: !8979)
!8981 = !DILocation(line: 905, column: 2, scope: !8982)
!8982 = distinct !DILexicalBlock(scope: !8979, file: !3, line: 905, column: 2)
!8983 = !DILocation(line: 905, column: 2, scope: !8984)
!8984 = distinct !DILexicalBlock(scope: !8982, file: !3, line: 905, column: 2)
!8985 = !DILocation(line: 905, column: 2, scope: !8986)
!8986 = distinct !DILexicalBlock(scope: !8984, file: !3, line: 905, column: 2)
!8987 = !DILocation(line: 905, column: 2, scope: !8988)
!8988 = distinct !DILexicalBlock(scope: !8984, file: !3, line: 905, column: 2)
!8989 = !{i32 -2140070656, i32 -2140070627, i32 -2140070581, i32 -2140070523, i32 -2140070469, i32 -2140070415, i32 -2140070360, i32 -2140070329}
!8990 = !DILocation(line: 905, column: 2, scope: !8991)
!8991 = distinct !DILexicalBlock(scope: !8984, file: !3, line: 905, column: 2)
!8992 = !{i32 -2140069924, i32 -2140069917, i32 -2140069865, i32 -2140069834, i32 -2140069804}
!8993 = !DILocation(line: 905, column: 2, scope: !8994)
!8994 = distinct !DILexicalBlock(scope: !8984, file: !3, line: 905, column: 2)
!8995 = !DILocation(line: 907, column: 2, scope: !8971)
!8996 = !DILocation(line: 907, column: 6, scope: !8971)
!8997 = !DILocation(line: 907, column: 12, scope: !8971)
!8998 = !DILocation(line: 908, column: 21, scope: !8971)
!8999 = !DILocation(line: 908, column: 2, scope: !8971)
!9000 = !DILocation(line: 915, column: 20, scope: !8971)
!9001 = !DILocation(line: 915, column: 24, scope: !8971)
!9002 = !DILocation(line: 915, column: 33, scope: !8971)
!9003 = !DILocation(line: 915, column: 2, scope: !8971)
!9004 = !DILocation(line: 916, column: 1, scope: !8971)
!9005 = distinct !DISubprogram(name: "ata_eh_set_pending", scope: !3, file: !3, line: 866, type: !9006, scopeLine: 867, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!9006 = !DISubroutineType(types: !9007)
!9007 = !{null, !6375, !206}
!9008 = !DILocalVariable(name: "ap", arg: 1, scope: !9005, file: !3, line: 866, type: !6375)
!9009 = !DILocation(line: 866, column: 49, scope: !9005)
!9010 = !DILocalVariable(name: "fastdrain", arg: 2, scope: !9005, file: !3, line: 866, type: !206)
!9011 = !DILocation(line: 866, column: 57, scope: !9005)
!9012 = !DILocalVariable(name: "cnt", scope: !9005, file: !3, line: 868, type: !206)
!9013 = !DILocation(line: 868, column: 6, scope: !9005)
!9014 = !DILocation(line: 871, column: 6, scope: !9015)
!9015 = distinct !DILexicalBlock(scope: !9005, file: !3, line: 871, column: 6)
!9016 = !DILocation(line: 871, column: 10, scope: !9015)
!9017 = !DILocation(line: 871, column: 17, scope: !9015)
!9018 = !DILocation(line: 871, column: 6, scope: !9005)
!9019 = !DILocation(line: 872, column: 3, scope: !9015)
!9020 = !DILocation(line: 874, column: 2, scope: !9005)
!9021 = !DILocation(line: 874, column: 6, scope: !9005)
!9022 = !DILocation(line: 874, column: 13, scope: !9005)
!9023 = !DILocation(line: 876, column: 7, scope: !9024)
!9024 = distinct !DILexicalBlock(scope: !9005, file: !3, line: 876, column: 6)
!9025 = !DILocation(line: 876, column: 6, scope: !9005)
!9026 = !DILocation(line: 877, column: 3, scope: !9024)
!9027 = !DILocation(line: 880, column: 28, scope: !9005)
!9028 = !DILocation(line: 880, column: 8, scope: !9005)
!9029 = !DILocation(line: 880, column: 6, scope: !9005)
!9030 = !DILocation(line: 881, column: 7, scope: !9031)
!9031 = distinct !DILexicalBlock(scope: !9005, file: !3, line: 881, column: 6)
!9032 = !DILocation(line: 881, column: 6, scope: !9005)
!9033 = !DILocation(line: 882, column: 3, scope: !9031)
!9034 = !DILocation(line: 885, column: 22, scope: !9005)
!9035 = !DILocation(line: 885, column: 2, scope: !9005)
!9036 = !DILocation(line: 885, column: 6, scope: !9005)
!9037 = !DILocation(line: 885, column: 20, scope: !9005)
!9038 = !DILocation(line: 887, column: 16, scope: !9005)
!9039 = !DILocation(line: 887, column: 3, scope: !9005)
!9040 = !DILocation(line: 886, column: 2, scope: !9005)
!9041 = !DILocation(line: 886, column: 6, scope: !9005)
!9042 = !DILocation(line: 886, column: 22, scope: !9005)
!9043 = !DILocation(line: 886, column: 30, scope: !9005)
!9044 = !DILocation(line: 888, column: 13, scope: !9005)
!9045 = !DILocation(line: 888, column: 17, scope: !9005)
!9046 = !DILocation(line: 888, column: 2, scope: !9005)
!9047 = !DILocation(line: 889, column: 1, scope: !9005)
!9048 = distinct !DISubprogram(name: "ata_std_sched_eh", scope: !3, file: !3, line: 925, type: !6640, scopeLine: 926, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!9049 = !DILocalVariable(name: "ap", arg: 1, scope: !9048, file: !3, line: 925, type: !6375)
!9050 = !DILocation(line: 925, column: 40, scope: !9048)
!9051 = !DILocalVariable(name: "__ret_warn_on", scope: !9052, file: !3, line: 927, type: !206)
!9052 = distinct !DILexicalBlock(scope: !9048, file: !3, line: 927, column: 2)
!9053 = !DILocation(line: 927, column: 2, scope: !9052)
!9054 = !DILocation(line: 927, column: 2, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !9052, file: !3, line: 927, column: 2)
!9056 = !DILocation(line: 927, column: 2, scope: !9057)
!9057 = distinct !DILexicalBlock(scope: !9055, file: !3, line: 927, column: 2)
!9058 = !DILocation(line: 927, column: 2, scope: !9059)
!9059 = distinct !DILexicalBlock(scope: !9057, file: !3, line: 927, column: 2)
!9060 = !DILocation(line: 927, column: 2, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9057, file: !3, line: 927, column: 2)
!9062 = !{i32 -2140069209, i32 -2140069180, i32 -2140069134, i32 -2140069076, i32 -2140069022, i32 -2140068968, i32 -2140068913, i32 -2140068882}
!9063 = !DILocation(line: 927, column: 2, scope: !9064)
!9064 = distinct !DILexicalBlock(scope: !9057, file: !3, line: 927, column: 2)
!9065 = !{i32 -2140068477, i32 -2140068470, i32 -2140068418, i32 -2140068387, i32 -2140068357}
!9066 = !DILocation(line: 927, column: 2, scope: !9067)
!9067 = distinct !DILexicalBlock(scope: !9057, file: !3, line: 927, column: 2)
!9068 = !DILocation(line: 929, column: 6, scope: !9069)
!9069 = distinct !DILexicalBlock(scope: !9048, file: !3, line: 929, column: 6)
!9070 = !DILocation(line: 929, column: 10, scope: !9069)
!9071 = !DILocation(line: 929, column: 17, scope: !9069)
!9072 = !DILocation(line: 929, column: 6, scope: !9048)
!9073 = !DILocation(line: 930, column: 3, scope: !9069)
!9074 = !DILocation(line: 932, column: 21, scope: !9048)
!9075 = !DILocation(line: 932, column: 2, scope: !9048)
!9076 = !DILocation(line: 933, column: 19, scope: !9048)
!9077 = !DILocation(line: 933, column: 23, scope: !9048)
!9078 = !DILocation(line: 933, column: 2, scope: !9048)
!9079 = !DILocation(line: 936, column: 1, scope: !9048)
!9080 = distinct !DISubprogram(name: "ata_std_end_eh", scope: !3, file: !3, line: 951, type: !6640, scopeLine: 952, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!9081 = !DILocalVariable(name: "ap", arg: 1, scope: !9080, file: !3, line: 951, type: !6375)
!9082 = !DILocation(line: 951, column: 38, scope: !9080)
!9083 = !DILocalVariable(name: "host", scope: !9080, file: !3, line: 953, type: !5969)
!9084 = !DILocation(line: 953, column: 20, scope: !9080)
!9085 = !DILocation(line: 953, column: 27, scope: !9080)
!9086 = !DILocation(line: 953, column: 31, scope: !9080)
!9087 = !DILocation(line: 955, column: 2, scope: !9080)
!9088 = !DILocation(line: 955, column: 8, scope: !9080)
!9089 = !DILocation(line: 955, column: 26, scope: !9080)
!9090 = !DILocation(line: 956, column: 1, scope: !9080)
!9091 = distinct !DISubprogram(name: "ata_port_schedule_eh", scope: !3, file: !3, line: 970, type: !6640, scopeLine: 971, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!9092 = !DILocalVariable(name: "ap", arg: 1, scope: !9091, file: !3, line: 970, type: !6375)
!9093 = !DILocation(line: 970, column: 44, scope: !9091)
!9094 = !DILocation(line: 973, column: 2, scope: !9091)
!9095 = !DILocation(line: 973, column: 6, scope: !9091)
!9096 = !DILocation(line: 973, column: 11, scope: !9091)
!9097 = !DILocation(line: 973, column: 20, scope: !9091)
!9098 = !DILocation(line: 974, column: 1, scope: !9091)
!9099 = distinct !DISubprogram(name: "ata_link_abort", scope: !3, file: !3, line: 1014, type: !9100, scopeLine: 1015, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!9100 = !DISubroutineType(types: !9101)
!9101 = !{!206, !6396}
!9102 = !DILocalVariable(name: "link", arg: 1, scope: !9099, file: !3, line: 1014, type: !6396)
!9103 = !DILocation(line: 1014, column: 37, scope: !9099)
!9104 = !DILocation(line: 1016, column: 27, scope: !9099)
!9105 = !DILocation(line: 1016, column: 33, scope: !9099)
!9106 = !DILocation(line: 1016, column: 37, scope: !9099)
!9107 = !DILocation(line: 1016, column: 9, scope: !9099)
!9108 = !DILocation(line: 1016, column: 2, scope: !9099)
!9109 = distinct !DISubprogram(name: "ata_do_link_abort", scope: !3, file: !3, line: 977, type: !9110, scopeLine: 978, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!9110 = !DISubroutineType(types: !9111)
!9111 = !{!206, !6375, !6396}
!9112 = !DILocalVariable(name: "ap", arg: 1, scope: !9109, file: !3, line: 977, type: !6375)
!9113 = !DILocation(line: 977, column: 47, scope: !9109)
!9114 = !DILocalVariable(name: "link", arg: 2, scope: !9109, file: !3, line: 977, type: !6396)
!9115 = !DILocation(line: 977, column: 68, scope: !9109)
!9116 = !DILocalVariable(name: "qc", scope: !9109, file: !3, line: 979, type: !6387)
!9117 = !DILocation(line: 979, column: 25, scope: !9109)
!9118 = !DILocalVariable(name: "tag", scope: !9109, file: !3, line: 980, type: !206)
!9119 = !DILocation(line: 980, column: 6, scope: !9109)
!9120 = !DILocalVariable(name: "nr_aborted", scope: !9109, file: !3, line: 980, type: !206)
!9121 = !DILocation(line: 980, column: 11, scope: !9109)
!9122 = !DILocalVariable(name: "__ret_warn_on", scope: !9123, file: !3, line: 982, type: !206)
!9123 = distinct !DILexicalBlock(scope: !9109, file: !3, line: 982, column: 2)
!9124 = !DILocation(line: 982, column: 2, scope: !9123)
!9125 = !DILocation(line: 982, column: 2, scope: !9126)
!9126 = distinct !DILexicalBlock(scope: !9123, file: !3, line: 982, column: 2)
!9127 = !DILocation(line: 982, column: 2, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9126, file: !3, line: 982, column: 2)
!9129 = !DILocation(line: 982, column: 2, scope: !9130)
!9130 = distinct !DILexicalBlock(scope: !9128, file: !3, line: 982, column: 2)
!9131 = !DILocation(line: 982, column: 2, scope: !9132)
!9132 = distinct !DILexicalBlock(scope: !9128, file: !3, line: 982, column: 2)
!9133 = !{i32 -2140067469, i32 -2140067440, i32 -2140067394, i32 -2140067336, i32 -2140067282, i32 -2140067228, i32 -2140067173, i32 -2140067142}
!9134 = !DILocation(line: 982, column: 2, scope: !9135)
!9135 = distinct !DILexicalBlock(scope: !9128, file: !3, line: 982, column: 2)
!9136 = !{i32 -2140066737, i32 -2140066730, i32 -2140066678, i32 -2140066647, i32 -2140066617}
!9137 = !DILocation(line: 982, column: 2, scope: !9138)
!9138 = distinct !DILexicalBlock(scope: !9128, file: !3, line: 982, column: 2)
!9139 = !DILocation(line: 985, column: 21, scope: !9109)
!9140 = !DILocation(line: 985, column: 2, scope: !9109)
!9141 = !DILocation(line: 988, column: 2, scope: !9142)
!9142 = distinct !DILexicalBlock(scope: !9109, file: !3, line: 988, column: 2)
!9143 = !DILocation(line: 988, column: 2, scope: !9144)
!9144 = distinct !DILexicalBlock(scope: !9142, file: !3, line: 988, column: 2)
!9145 = !DILocation(line: 988, column: 2, scope: !9146)
!9146 = distinct !DILexicalBlock(scope: !9144, file: !3, line: 988, column: 2)
!9147 = !DILocation(line: 0, scope: !9144)
!9148 = !DILocation(line: 989, column: 7, scope: !9149)
!9149 = distinct !DILexicalBlock(scope: !9150, file: !3, line: 989, column: 7)
!9150 = distinct !DILexicalBlock(scope: !9144, file: !3, line: 988, column: 45)
!9151 = !DILocation(line: 989, column: 10, scope: !9149)
!9152 = !DILocation(line: 989, column: 15, scope: !9149)
!9153 = !DILocation(line: 989, column: 20, scope: !9149)
!9154 = !DILocation(line: 989, column: 23, scope: !9149)
!9155 = !DILocation(line: 989, column: 27, scope: !9149)
!9156 = !DILocation(line: 989, column: 32, scope: !9149)
!9157 = !DILocation(line: 989, column: 40, scope: !9149)
!9158 = !DILocation(line: 989, column: 37, scope: !9149)
!9159 = !DILocation(line: 989, column: 7, scope: !9150)
!9160 = !DILocation(line: 990, column: 4, scope: !9161)
!9161 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 989, column: 47)
!9162 = !DILocation(line: 990, column: 8, scope: !9161)
!9163 = !DILocation(line: 990, column: 14, scope: !9161)
!9164 = !DILocation(line: 991, column: 20, scope: !9161)
!9165 = !DILocation(line: 991, column: 4, scope: !9161)
!9166 = !DILocation(line: 992, column: 14, scope: !9161)
!9167 = !DILocation(line: 993, column: 3, scope: !9161)
!9168 = !DILocation(line: 994, column: 2, scope: !9150)
!9169 = distinct !{!9169, !9141, !9170}
!9170 = !DILocation(line: 994, column: 2, scope: !9142)
!9171 = !DILocation(line: 996, column: 7, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9109, file: !3, line: 996, column: 6)
!9173 = !DILocation(line: 996, column: 6, scope: !9109)
!9174 = !DILocation(line: 997, column: 24, scope: !9172)
!9175 = !DILocation(line: 997, column: 3, scope: !9172)
!9176 = !DILocation(line: 999, column: 9, scope: !9109)
!9177 = !DILocation(line: 999, column: 2, scope: !9109)
!9178 = distinct !DISubprogram(name: "ata_port_abort", scope: !3, file: !3, line: 1032, type: !6612, scopeLine: 1033, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!9179 = !DILocalVariable(name: "ap", arg: 1, scope: !9178, file: !3, line: 1032, type: !6375)
!9180 = !DILocation(line: 1032, column: 37, scope: !9178)
!9181 = !DILocation(line: 1034, column: 27, scope: !9178)
!9182 = !DILocation(line: 1034, column: 9, scope: !9178)
!9183 = !DILocation(line: 1034, column: 2, scope: !9178)
!9184 = distinct !DISubprogram(name: "ata_eh_freeze_port", scope: !3, file: !3, line: 1104, type: !6640, scopeLine: 1105, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!9185 = !DILocation(line: 407, column: 64, scope: !7380, inlinedAt: !9186)
!9186 = distinct !DILocation(line: 1113, column: 2, scope: !9184)
!9187 = !DILocation(line: 407, column: 84, scope: !7380, inlinedAt: !9186)
!9188 = !DILocation(line: 327, column: 67, scope: !7389, inlinedAt: !9189)
!9189 = distinct !DILocation(line: 1111, column: 2, scope: !9190)
!9190 = distinct !DILexicalBlock(scope: !9191, file: !3, line: 1111, column: 2)
!9191 = distinct !DILexicalBlock(scope: !9192, file: !3, line: 1111, column: 2)
!9192 = distinct !DILexicalBlock(scope: !9193, file: !3, line: 1111, column: 2)
!9193 = distinct !DILexicalBlock(scope: !9194, file: !3, line: 1111, column: 2)
!9194 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 1111, column: 2)
!9195 = !DILocalVariable(name: "ap", arg: 1, scope: !9184, file: !3, line: 1104, type: !6375)
!9196 = !DILocation(line: 1104, column: 42, scope: !9184)
!9197 = !DILocalVariable(name: "flags", scope: !9184, file: !3, line: 1106, type: !1012)
!9198 = !DILocation(line: 1106, column: 16, scope: !9184)
!9199 = !DILocation(line: 1108, column: 7, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 1108, column: 6)
!9201 = !DILocation(line: 1108, column: 11, scope: !9200)
!9202 = !DILocation(line: 1108, column: 16, scope: !9200)
!9203 = !DILocation(line: 1108, column: 6, scope: !9184)
!9204 = !DILocation(line: 1109, column: 3, scope: !9200)
!9205 = !DILocation(line: 1111, column: 2, scope: !9184)
!9206 = !DILocation(line: 1111, column: 2, scope: !9194)
!9207 = !DILocalVariable(name: "__dummy", scope: !9208, file: !3, line: 1111, type: !1012)
!9208 = distinct !DILexicalBlock(scope: !9193, file: !3, line: 1111, column: 2)
!9209 = !DILocation(line: 1111, column: 2, scope: !9208)
!9210 = !DILocalVariable(name: "__dummy2", scope: !9208, file: !3, line: 1111, type: !1012)
!9211 = !DILocation(line: 1111, column: 2, scope: !9193)
!9212 = !DILocation(line: 1111, column: 2, scope: !9192)
!9213 = !DILocation(line: 1111, column: 2, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9192, file: !3, line: 1111, column: 2)
!9215 = !DILocalVariable(name: "__dummy", scope: !9216, file: !3, line: 1111, type: !1012)
!9216 = distinct !DILexicalBlock(scope: !9217, file: !3, line: 1111, column: 2)
!9217 = distinct !DILexicalBlock(scope: !9214, file: !3, line: 1111, column: 2)
!9218 = !DILocation(line: 1111, column: 2, scope: !9216)
!9219 = !DILocalVariable(name: "__dummy2", scope: !9216, file: !3, line: 1111, type: !1012)
!9220 = !DILocation(line: 1111, column: 2, scope: !9217)
!9221 = !DILocation(line: 1111, column: 2, scope: !9191)
!9222 = !{i32 -2140062235}
!9223 = !DILocation(line: 1111, column: 2, scope: !9190)
!9224 = !DILocation(line: 329, column: 10, scope: !7389, inlinedAt: !9189)
!9225 = !DILocation(line: 329, column: 16, scope: !7389, inlinedAt: !9189)
!9226 = !DILocation(line: 1112, column: 20, scope: !9184)
!9227 = !DILocation(line: 1112, column: 2, scope: !9184)
!9228 = !DILocation(line: 1113, column: 25, scope: !9184)
!9229 = !DILocation(line: 1113, column: 29, scope: !9184)
!9230 = !DILocation(line: 1113, column: 35, scope: !9184)
!9231 = !DILocation(line: 409, column: 2, scope: !7438, inlinedAt: !9186)
!9232 = !DILocation(line: 409, column: 2, scope: !7443, inlinedAt: !9186)
!9233 = !DILocation(line: 409, column: 2, scope: !7444, inlinedAt: !9186)
!9234 = !DILocation(line: 409, column: 2, scope: !7451, inlinedAt: !9186)
!9235 = !DILocation(line: 409, column: 2, scope: !7454, inlinedAt: !9186)
!9236 = !DILocation(line: 1114, column: 1, scope: !9184)
!9237 = distinct !DISubprogram(name: "ata_eh_thaw_port", scope: !3, file: !3, line: 1126, type: !6640, scopeLine: 1127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!9238 = !DILocation(line: 407, column: 64, scope: !7380, inlinedAt: !9239)
!9239 = distinct !DILocation(line: 1140, column: 2, scope: !9237)
!9240 = !DILocation(line: 407, column: 84, scope: !7380, inlinedAt: !9239)
!9241 = !DILocation(line: 327, column: 67, scope: !7389, inlinedAt: !9242)
!9242 = distinct !DILocation(line: 1133, column: 2, scope: !9243)
!9243 = distinct !DILexicalBlock(scope: !9244, file: !3, line: 1133, column: 2)
!9244 = distinct !DILexicalBlock(scope: !9245, file: !3, line: 1133, column: 2)
!9245 = distinct !DILexicalBlock(scope: !9246, file: !3, line: 1133, column: 2)
!9246 = distinct !DILexicalBlock(scope: !9247, file: !3, line: 1133, column: 2)
!9247 = distinct !DILexicalBlock(scope: !9237, file: !3, line: 1133, column: 2)
!9248 = !DILocalVariable(name: "ap", arg: 1, scope: !9237, file: !3, line: 1126, type: !6375)
!9249 = !DILocation(line: 1126, column: 40, scope: !9237)
!9250 = !DILocalVariable(name: "flags", scope: !9237, file: !3, line: 1128, type: !1012)
!9251 = !DILocation(line: 1128, column: 16, scope: !9237)
!9252 = !DILocation(line: 1130, column: 7, scope: !9253)
!9253 = distinct !DILexicalBlock(scope: !9237, file: !3, line: 1130, column: 6)
!9254 = !DILocation(line: 1130, column: 11, scope: !9253)
!9255 = !DILocation(line: 1130, column: 16, scope: !9253)
!9256 = !DILocation(line: 1130, column: 6, scope: !9237)
!9257 = !DILocation(line: 1131, column: 3, scope: !9253)
!9258 = !DILocation(line: 1133, column: 2, scope: !9237)
!9259 = !DILocation(line: 1133, column: 2, scope: !9247)
!9260 = !DILocalVariable(name: "__dummy", scope: !9261, file: !3, line: 1133, type: !1012)
!9261 = distinct !DILexicalBlock(scope: !9246, file: !3, line: 1133, column: 2)
!9262 = !DILocation(line: 1133, column: 2, scope: !9261)
!9263 = !DILocalVariable(name: "__dummy2", scope: !9261, file: !3, line: 1133, type: !1012)
!9264 = !DILocation(line: 1133, column: 2, scope: !9246)
!9265 = !DILocation(line: 1133, column: 2, scope: !9245)
!9266 = !DILocation(line: 1133, column: 2, scope: !9267)
!9267 = distinct !DILexicalBlock(scope: !9245, file: !3, line: 1133, column: 2)
!9268 = !DILocalVariable(name: "__dummy", scope: !9269, file: !3, line: 1133, type: !1012)
!9269 = distinct !DILexicalBlock(scope: !9270, file: !3, line: 1133, column: 2)
!9270 = distinct !DILexicalBlock(scope: !9267, file: !3, line: 1133, column: 2)
!9271 = !DILocation(line: 1133, column: 2, scope: !9269)
!9272 = !DILocalVariable(name: "__dummy2", scope: !9269, file: !3, line: 1133, type: !1012)
!9273 = !DILocation(line: 1133, column: 2, scope: !9270)
!9274 = !DILocation(line: 1133, column: 2, scope: !9244)
!9275 = !{i32 -2140061134}
!9276 = !DILocation(line: 1133, column: 2, scope: !9243)
!9277 = !DILocation(line: 329, column: 10, scope: !7389, inlinedAt: !9242)
!9278 = !DILocation(line: 329, column: 16, scope: !7389, inlinedAt: !9242)
!9279 = !DILocation(line: 1135, column: 2, scope: !9237)
!9280 = !DILocation(line: 1135, column: 6, scope: !9237)
!9281 = !DILocation(line: 1135, column: 13, scope: !9237)
!9282 = !DILocation(line: 1137, column: 6, scope: !9283)
!9283 = distinct !DILexicalBlock(scope: !9237, file: !3, line: 1137, column: 6)
!9284 = !DILocation(line: 1137, column: 10, scope: !9283)
!9285 = !DILocation(line: 1137, column: 15, scope: !9283)
!9286 = !DILocation(line: 1137, column: 6, scope: !9237)
!9287 = !DILocation(line: 1138, column: 3, scope: !9283)
!9288 = !DILocation(line: 1138, column: 7, scope: !9283)
!9289 = !DILocation(line: 1138, column: 12, scope: !9283)
!9290 = !DILocation(line: 1138, column: 17, scope: !9283)
!9291 = !DILocation(line: 1140, column: 25, scope: !9237)
!9292 = !DILocation(line: 1140, column: 29, scope: !9237)
!9293 = !DILocation(line: 1140, column: 35, scope: !9237)
!9294 = !DILocation(line: 409, column: 2, scope: !7438, inlinedAt: !9239)
!9295 = !DILocation(line: 409, column: 2, scope: !7443, inlinedAt: !9239)
!9296 = !DILocation(line: 409, column: 2, scope: !7444, inlinedAt: !9239)
!9297 = !DILocation(line: 409, column: 2, scope: !7451, inlinedAt: !9239)
!9298 = !DILocation(line: 409, column: 2, scope: !7454, inlinedAt: !9239)
!9299 = !DILocation(line: 1143, column: 1, scope: !9237)
!9300 = distinct !DISubprogram(name: "ata_eh_qc_complete", scope: !3, file: !3, line: 1172, type: !6593, scopeLine: 1173, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!9301 = !DILocalVariable(name: "qc", arg: 1, scope: !9300, file: !3, line: 1172, type: !6387)
!9302 = !DILocation(line: 1172, column: 48, scope: !9300)
!9303 = !DILocalVariable(name: "scmd", scope: !9300, file: !3, line: 1174, type: !5946)
!9304 = !DILocation(line: 1174, column: 20, scope: !9300)
!9305 = !DILocation(line: 1174, column: 27, scope: !9300)
!9306 = !DILocation(line: 1174, column: 31, scope: !9300)
!9307 = !DILocation(line: 1175, column: 18, scope: !9300)
!9308 = !DILocation(line: 1175, column: 24, scope: !9300)
!9309 = !DILocation(line: 1175, column: 2, scope: !9300)
!9310 = !DILocation(line: 1175, column: 8, scope: !9300)
!9311 = !DILocation(line: 1175, column: 16, scope: !9300)
!9312 = !DILocation(line: 1176, column: 23, scope: !9300)
!9313 = !DILocation(line: 1176, column: 2, scope: !9300)
!9314 = !DILocation(line: 1177, column: 1, scope: !9300)
!9315 = distinct !DISubprogram(name: "__ata_eh_qc_complete", scope: !3, file: !3, line: 1150, type: !6593, scopeLine: 1151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!9316 = !DILocation(line: 407, column: 64, scope: !7380, inlinedAt: !9317)
!9317 = distinct !DILocation(line: 1160, column: 2, scope: !9315)
!9318 = !DILocation(line: 407, column: 84, scope: !7380, inlinedAt: !9317)
!9319 = !DILocation(line: 327, column: 67, scope: !7389, inlinedAt: !9320)
!9320 = distinct !DILocation(line: 1156, column: 2, scope: !9321)
!9321 = distinct !DILexicalBlock(scope: !9322, file: !3, line: 1156, column: 2)
!9322 = distinct !DILexicalBlock(scope: !9323, file: !3, line: 1156, column: 2)
!9323 = distinct !DILexicalBlock(scope: !9324, file: !3, line: 1156, column: 2)
!9324 = distinct !DILexicalBlock(scope: !9325, file: !3, line: 1156, column: 2)
!9325 = distinct !DILexicalBlock(scope: !9315, file: !3, line: 1156, column: 2)
!9326 = !DILocalVariable(name: "qc", arg: 1, scope: !9315, file: !3, line: 1150, type: !6387)
!9327 = !DILocation(line: 1150, column: 57, scope: !9315)
!9328 = !DILocalVariable(name: "ap", scope: !9315, file: !3, line: 1152, type: !6375)
!9329 = !DILocation(line: 1152, column: 19, scope: !9315)
!9330 = !DILocation(line: 1152, column: 24, scope: !9315)
!9331 = !DILocation(line: 1152, column: 28, scope: !9315)
!9332 = !DILocalVariable(name: "scmd", scope: !9315, file: !3, line: 1153, type: !5946)
!9333 = !DILocation(line: 1153, column: 20, scope: !9315)
!9334 = !DILocation(line: 1153, column: 27, scope: !9315)
!9335 = !DILocation(line: 1153, column: 31, scope: !9315)
!9336 = !DILocalVariable(name: "flags", scope: !9315, file: !3, line: 1154, type: !1012)
!9337 = !DILocation(line: 1154, column: 16, scope: !9315)
!9338 = !DILocation(line: 1156, column: 2, scope: !9315)
!9339 = !DILocation(line: 1156, column: 2, scope: !9325)
!9340 = !DILocalVariable(name: "__dummy", scope: !9341, file: !3, line: 1156, type: !1012)
!9341 = distinct !DILexicalBlock(scope: !9324, file: !3, line: 1156, column: 2)
!9342 = !DILocation(line: 1156, column: 2, scope: !9341)
!9343 = !DILocalVariable(name: "__dummy2", scope: !9341, file: !3, line: 1156, type: !1012)
!9344 = !DILocation(line: 1156, column: 2, scope: !9324)
!9345 = !DILocation(line: 1156, column: 2, scope: !9323)
!9346 = !DILocation(line: 1156, column: 2, scope: !9347)
!9347 = distinct !DILexicalBlock(scope: !9323, file: !3, line: 1156, column: 2)
!9348 = !DILocalVariable(name: "__dummy", scope: !9349, file: !3, line: 1156, type: !1012)
!9349 = distinct !DILexicalBlock(scope: !9350, file: !3, line: 1156, column: 2)
!9350 = distinct !DILexicalBlock(scope: !9347, file: !3, line: 1156, column: 2)
!9351 = !DILocation(line: 1156, column: 2, scope: !9349)
!9352 = !DILocalVariable(name: "__dummy2", scope: !9349, file: !3, line: 1156, type: !1012)
!9353 = !DILocation(line: 1156, column: 2, scope: !9350)
!9354 = !DILocation(line: 1156, column: 2, scope: !9322)
!9355 = !{i32 -2140060136}
!9356 = !DILocation(line: 1156, column: 2, scope: !9321)
!9357 = !DILocation(line: 329, column: 10, scope: !7389, inlinedAt: !9320)
!9358 = !DILocation(line: 329, column: 16, scope: !7389, inlinedAt: !9320)
!9359 = !DILocation(line: 1157, column: 2, scope: !9315)
!9360 = !DILocation(line: 1157, column: 6, scope: !9315)
!9361 = !DILocation(line: 1157, column: 15, scope: !9315)
!9362 = !DILocation(line: 1158, column: 20, scope: !9315)
!9363 = !DILocation(line: 1158, column: 2, scope: !9315)
!9364 = !DILocalVariable(name: "__ret_warn_on", scope: !9365, file: !3, line: 1159, type: !206)
!9365 = distinct !DILexicalBlock(scope: !9315, file: !3, line: 1159, column: 2)
!9366 = !DILocation(line: 1159, column: 2, scope: !9365)
!9367 = !DILocation(line: 1159, column: 2, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 1159, column: 2)
!9369 = !DILocation(line: 1159, column: 2, scope: !9370)
!9370 = distinct !DILexicalBlock(scope: !9368, file: !3, line: 1159, column: 2)
!9371 = !DILocation(line: 1159, column: 2, scope: !9372)
!9372 = distinct !DILexicalBlock(scope: !9370, file: !3, line: 1159, column: 2)
!9373 = !DILocation(line: 1159, column: 2, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9370, file: !3, line: 1159, column: 2)
!9375 = !{i32 -2140059510, i32 -2140059481, i32 -2140059435, i32 -2140059377, i32 -2140059323, i32 -2140059269, i32 -2140059214, i32 -2140059183}
!9376 = !DILocation(line: 1159, column: 2, scope: !9377)
!9377 = distinct !DILexicalBlock(scope: !9370, file: !3, line: 1159, column: 2)
!9378 = !{i32 -2140058777, i32 -2140058770, i32 -2140058718, i32 -2140058687, i32 -2140058657}
!9379 = !DILocation(line: 1159, column: 2, scope: !9380)
!9380 = distinct !DILexicalBlock(scope: !9370, file: !3, line: 1159, column: 2)
!9381 = !DILocation(line: 1160, column: 25, scope: !9315)
!9382 = !DILocation(line: 1160, column: 29, scope: !9315)
!9383 = !DILocation(line: 1160, column: 35, scope: !9315)
!9384 = !DILocation(line: 409, column: 2, scope: !7438, inlinedAt: !9317)
!9385 = !DILocation(line: 409, column: 2, scope: !7443, inlinedAt: !9317)
!9386 = !DILocation(line: 409, column: 2, scope: !7444, inlinedAt: !9317)
!9387 = !DILocation(line: 409, column: 2, scope: !7451, inlinedAt: !9317)
!9388 = !DILocation(line: 409, column: 2, scope: !7454, inlinedAt: !9317)
!9389 = !DILocation(line: 1162, column: 21, scope: !9315)
!9390 = !DILocation(line: 1162, column: 28, scope: !9315)
!9391 = !DILocation(line: 1162, column: 32, scope: !9315)
!9392 = !DILocation(line: 1162, column: 2, scope: !9315)
!9393 = !DILocation(line: 1163, column: 1, scope: !9315)
!9394 = distinct !DISubprogram(name: "ata_eh_qc_retry", scope: !3, file: !3, line: 1190, type: !6593, scopeLine: 1191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!9395 = !DILocalVariable(name: "qc", arg: 1, scope: !9394, file: !3, line: 1190, type: !6387)
!9396 = !DILocation(line: 1190, column: 45, scope: !9394)
!9397 = !DILocalVariable(name: "scmd", scope: !9394, file: !3, line: 1192, type: !5946)
!9398 = !DILocation(line: 1192, column: 20, scope: !9394)
!9399 = !DILocation(line: 1192, column: 27, scope: !9394)
!9400 = !DILocation(line: 1192, column: 31, scope: !9394)
!9401 = !DILocation(line: 1193, column: 7, scope: !9402)
!9402 = distinct !DILexicalBlock(scope: !9394, file: !3, line: 1193, column: 6)
!9403 = !DILocation(line: 1193, column: 11, scope: !9402)
!9404 = !DILocation(line: 1193, column: 6, scope: !9394)
!9405 = !DILocation(line: 1194, column: 3, scope: !9402)
!9406 = !DILocation(line: 1194, column: 9, scope: !9402)
!9407 = !DILocation(line: 1194, column: 16, scope: !9402)
!9408 = !DILocation(line: 1195, column: 23, scope: !9394)
!9409 = !DILocation(line: 1195, column: 2, scope: !9394)
!9410 = !DILocation(line: 1196, column: 1, scope: !9394)
!9411 = distinct !DISubprogram(name: "ata_dev_disable", scope: !3, file: !3, line: 1207, type: !6636, scopeLine: 1208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!9412 = !DILocalVariable(name: "dev", arg: 1, scope: !9411, file: !3, line: 1207, type: !6392)
!9413 = !DILocation(line: 1207, column: 41, scope: !9411)
!9414 = !DILocation(line: 1209, column: 23, scope: !9415)
!9415 = distinct !DILexicalBlock(scope: !9411, file: !3, line: 1209, column: 6)
!9416 = !DILocation(line: 1209, column: 7, scope: !9415)
!9417 = !DILocation(line: 1209, column: 6, scope: !9411)
!9418 = !DILocation(line: 1210, column: 3, scope: !9415)
!9419 = !DILocation(line: 1212, column: 6, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !9411, file: !3, line: 1212, column: 6)
!9421 = !DILocation(line: 1212, column: 6, scope: !9411)
!9422 = !DILocation(line: 1213, column: 3, scope: !9420)
!9423 = !DILocation(line: 1214, column: 22, scope: !9411)
!9424 = !DILocation(line: 1214, column: 2, scope: !9411)
!9425 = !DILocation(line: 1215, column: 26, scope: !9411)
!9426 = !DILocation(line: 1215, column: 2, scope: !9411)
!9427 = !DILocation(line: 1216, column: 2, scope: !9411)
!9428 = !DILocation(line: 1216, column: 7, scope: !9411)
!9429 = !DILocation(line: 1216, column: 12, scope: !9411)
!9430 = !DILocation(line: 1221, column: 19, scope: !9411)
!9431 = !DILocation(line: 1221, column: 24, scope: !9411)
!9432 = !DILocation(line: 1221, column: 2, scope: !9411)
!9433 = !DILocation(line: 1222, column: 1, scope: !9411)
!9434 = distinct !DISubprogram(name: "ata_dev_enabled", scope: !178, file: !178, line: 1595, type: !9435, scopeLine: 1596, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!9435 = !DISubroutineType(types: !9436)
!9436 = !{!7, !9437}
!9437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9438, size: 64)
!9438 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6393)
!9439 = !DILocalVariable(name: "dev", arg: 1, scope: !9434, file: !178, line: 1595, type: !9437)
!9440 = !DILocation(line: 1595, column: 69, scope: !9434)
!9441 = !DILocation(line: 1597, column: 27, scope: !9434)
!9442 = !DILocation(line: 1597, column: 32, scope: !9434)
!9443 = !DILocation(line: 1597, column: 9, scope: !9434)
!9444 = !DILocation(line: 1597, column: 2, scope: !9434)
!9445 = distinct !DISubprogram(name: "ata_ering_clear", scope: !3, file: !3, line: 412, type: !9446, scopeLine: 413, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!9446 = !DISubroutineType(types: !9447)
!9447 = !{null, !7248}
!9448 = !DILocalVariable(name: "ering", arg: 1, scope: !9445, file: !3, line: 412, type: !7248)
!9449 = !DILocation(line: 412, column: 47, scope: !9445)
!9450 = !DILocation(line: 414, column: 16, scope: !9445)
!9451 = !DILocation(line: 414, column: 2, scope: !9445)
!9452 = !DILocation(line: 415, column: 1, scope: !9445)
!9453 = distinct !DISubprogram(name: "ata_eh_detach_dev", scope: !3, file: !3, line: 1234, type: !6636, scopeLine: 1235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!9454 = !DILocation(line: 407, column: 64, scope: !7380, inlinedAt: !9455)
!9455 = distinct !DILocation(line: 1258, column: 2, scope: !9453)
!9456 = !DILocation(line: 407, column: 84, scope: !7380, inlinedAt: !9455)
!9457 = !DILocation(line: 327, column: 67, scope: !7389, inlinedAt: !9458)
!9458 = distinct !DILocation(line: 1243, column: 2, scope: !9459)
!9459 = distinct !DILexicalBlock(scope: !9460, file: !3, line: 1243, column: 2)
!9460 = distinct !DILexicalBlock(scope: !9461, file: !3, line: 1243, column: 2)
!9461 = distinct !DILexicalBlock(scope: !9462, file: !3, line: 1243, column: 2)
!9462 = distinct !DILexicalBlock(scope: !9463, file: !3, line: 1243, column: 2)
!9463 = distinct !DILexicalBlock(scope: !9453, file: !3, line: 1243, column: 2)
!9464 = !DILocalVariable(name: "dev", arg: 1, scope: !9453, file: !3, line: 1234, type: !6392)
!9465 = !DILocation(line: 1234, column: 43, scope: !9453)
!9466 = !DILocalVariable(name: "link", scope: !9453, file: !3, line: 1236, type: !6396)
!9467 = !DILocation(line: 1236, column: 19, scope: !9453)
!9468 = !DILocation(line: 1236, column: 26, scope: !9453)
!9469 = !DILocation(line: 1236, column: 31, scope: !9453)
!9470 = !DILocalVariable(name: "ap", scope: !9453, file: !3, line: 1237, type: !6375)
!9471 = !DILocation(line: 1237, column: 19, scope: !9453)
!9472 = !DILocation(line: 1237, column: 24, scope: !9453)
!9473 = !DILocation(line: 1237, column: 30, scope: !9453)
!9474 = !DILocalVariable(name: "ehc", scope: !9453, file: !3, line: 1238, type: !7127)
!9475 = !DILocation(line: 1238, column: 25, scope: !9453)
!9476 = !DILocation(line: 1238, column: 32, scope: !9453)
!9477 = !DILocation(line: 1238, column: 38, scope: !9453)
!9478 = !DILocalVariable(name: "flags", scope: !9453, file: !3, line: 1239, type: !1012)
!9479 = !DILocation(line: 1239, column: 16, scope: !9453)
!9480 = !DILocation(line: 1241, column: 18, scope: !9453)
!9481 = !DILocation(line: 1241, column: 2, scope: !9453)
!9482 = !DILocation(line: 1243, column: 2, scope: !9453)
!9483 = !DILocation(line: 1243, column: 2, scope: !9463)
!9484 = !DILocalVariable(name: "__dummy", scope: !9485, file: !3, line: 1243, type: !1012)
!9485 = distinct !DILexicalBlock(scope: !9462, file: !3, line: 1243, column: 2)
!9486 = !DILocation(line: 1243, column: 2, scope: !9485)
!9487 = !DILocalVariable(name: "__dummy2", scope: !9485, file: !3, line: 1243, type: !1012)
!9488 = !DILocation(line: 1243, column: 2, scope: !9462)
!9489 = !DILocation(line: 1243, column: 2, scope: !9461)
!9490 = !DILocation(line: 1243, column: 2, scope: !9491)
!9491 = distinct !DILexicalBlock(scope: !9461, file: !3, line: 1243, column: 2)
!9492 = !DILocalVariable(name: "__dummy", scope: !9493, file: !3, line: 1243, type: !1012)
!9493 = distinct !DILexicalBlock(scope: !9494, file: !3, line: 1243, column: 2)
!9494 = distinct !DILexicalBlock(scope: !9491, file: !3, line: 1243, column: 2)
!9495 = !DILocation(line: 1243, column: 2, scope: !9493)
!9496 = !DILocalVariable(name: "__dummy2", scope: !9493, file: !3, line: 1243, type: !1012)
!9497 = !DILocation(line: 1243, column: 2, scope: !9494)
!9498 = !DILocation(line: 1243, column: 2, scope: !9460)
!9499 = !{i32 -2140057457}
!9500 = !DILocation(line: 1243, column: 2, scope: !9459)
!9501 = !DILocation(line: 329, column: 10, scope: !7389, inlinedAt: !9458)
!9502 = !DILocation(line: 329, column: 16, scope: !7389, inlinedAt: !9458)
!9503 = !DILocation(line: 1245, column: 2, scope: !9453)
!9504 = !DILocation(line: 1245, column: 7, scope: !9453)
!9505 = !DILocation(line: 1245, column: 13, scope: !9453)
!9506 = !DILocation(line: 1247, column: 27, scope: !9507)
!9507 = distinct !DILexicalBlock(scope: !9453, file: !3, line: 1247, column: 6)
!9508 = !DILocation(line: 1247, column: 6, scope: !9507)
!9509 = !DILocation(line: 1247, column: 6, scope: !9453)
!9510 = !DILocation(line: 1248, column: 3, scope: !9511)
!9511 = distinct !DILexicalBlock(scope: !9507, file: !3, line: 1247, column: 33)
!9512 = !DILocation(line: 1248, column: 8, scope: !9511)
!9513 = !DILocation(line: 1248, column: 14, scope: !9511)
!9514 = !DILocation(line: 1249, column: 3, scope: !9511)
!9515 = !DILocation(line: 1249, column: 7, scope: !9511)
!9516 = !DILocation(line: 1249, column: 14, scope: !9511)
!9517 = !DILocation(line: 1250, column: 2, scope: !9511)
!9518 = !DILocation(line: 1253, column: 22, scope: !9453)
!9519 = !DILocation(line: 1253, column: 28, scope: !9453)
!9520 = !DILocation(line: 1253, column: 34, scope: !9453)
!9521 = !DILocation(line: 1253, column: 40, scope: !9453)
!9522 = !DILocation(line: 1253, column: 2, scope: !9453)
!9523 = !DILocation(line: 1254, column: 22, scope: !9453)
!9524 = !DILocation(line: 1254, column: 28, scope: !9453)
!9525 = !DILocation(line: 1254, column: 34, scope: !9453)
!9526 = !DILocation(line: 1254, column: 40, scope: !9453)
!9527 = !DILocation(line: 1254, column: 51, scope: !9453)
!9528 = !DILocation(line: 1254, column: 2, scope: !9453)
!9529 = !DILocation(line: 1255, column: 2, scope: !9453)
!9530 = !DILocation(line: 1255, column: 7, scope: !9453)
!9531 = !DILocation(line: 1255, column: 23, scope: !9453)
!9532 = !DILocation(line: 1255, column: 28, scope: !9453)
!9533 = !DILocation(line: 1255, column: 35, scope: !9453)
!9534 = !DILocation(line: 1256, column: 35, scope: !9453)
!9535 = !DILocation(line: 1256, column: 40, scope: !9453)
!9536 = !DILocation(line: 1256, column: 32, scope: !9453)
!9537 = !DILocation(line: 1256, column: 28, scope: !9453)
!9538 = !DILocation(line: 1256, column: 2, scope: !9453)
!9539 = !DILocation(line: 1256, column: 7, scope: !9453)
!9540 = !DILocation(line: 1256, column: 25, scope: !9453)
!9541 = !DILocation(line: 1258, column: 25, scope: !9453)
!9542 = !DILocation(line: 1258, column: 29, scope: !9453)
!9543 = !DILocation(line: 1258, column: 35, scope: !9453)
!9544 = !DILocation(line: 409, column: 2, scope: !7438, inlinedAt: !9455)
!9545 = !DILocation(line: 409, column: 2, scope: !7443, inlinedAt: !9455)
!9546 = !DILocation(line: 409, column: 2, scope: !7444, inlinedAt: !9455)
!9547 = !DILocation(line: 409, column: 2, scope: !7451, inlinedAt: !9455)
!9548 = !DILocation(line: 409, column: 2, scope: !7454, inlinedAt: !9455)
!9549 = !DILocation(line: 1259, column: 1, scope: !9453)
!9550 = distinct !DISubprogram(name: "ata_eh_clear_action", scope: !3, file: !3, line: 424, type: !9551, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!9551 = !DISubroutineType(types: !9552)
!9552 = !{null, !6396, !6392, !6934, !7}
!9553 = !DILocalVariable(name: "link", arg: 1, scope: !9550, file: !3, line: 424, type: !6396)
!9554 = !DILocation(line: 424, column: 50, scope: !9550)
!9555 = !DILocalVariable(name: "dev", arg: 2, scope: !9550, file: !3, line: 424, type: !6392)
!9556 = !DILocation(line: 424, column: 75, scope: !9550)
!9557 = !DILocalVariable(name: "ehi", arg: 3, scope: !9550, file: !3, line: 425, type: !6934)
!9558 = !DILocation(line: 425, column: 25, scope: !9550)
!9559 = !DILocalVariable(name: "action", arg: 4, scope: !9550, file: !3, line: 425, type: !7)
!9560 = !DILocation(line: 425, column: 43, scope: !9550)
!9561 = !DILocalVariable(name: "tdev", scope: !9550, file: !3, line: 427, type: !6392)
!9562 = !DILocation(line: 427, column: 21, scope: !9550)
!9563 = !DILocation(line: 429, column: 7, scope: !9564)
!9564 = distinct !DILexicalBlock(scope: !9550, file: !3, line: 429, column: 6)
!9565 = !DILocation(line: 429, column: 6, scope: !9550)
!9566 = !DILocation(line: 430, column: 19, scope: !9567)
!9567 = distinct !DILexicalBlock(scope: !9564, file: !3, line: 429, column: 12)
!9568 = !DILocation(line: 430, column: 18, scope: !9567)
!9569 = !DILocation(line: 430, column: 3, scope: !9567)
!9570 = !DILocation(line: 430, column: 8, scope: !9567)
!9571 = !DILocation(line: 430, column: 15, scope: !9567)
!9572 = !DILocation(line: 431, column: 3, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9567, file: !3, line: 431, column: 3)
!9574 = !DILocation(line: 431, column: 3, scope: !9575)
!9575 = distinct !DILexicalBlock(scope: !9573, file: !3, line: 431, column: 3)
!9576 = !DILocation(line: 432, column: 37, scope: !9575)
!9577 = !DILocation(line: 432, column: 36, scope: !9575)
!9578 = !DILocation(line: 432, column: 4, scope: !9575)
!9579 = !DILocation(line: 432, column: 9, scope: !9575)
!9580 = !DILocation(line: 432, column: 20, scope: !9575)
!9581 = !DILocation(line: 432, column: 26, scope: !9575)
!9582 = !DILocation(line: 432, column: 33, scope: !9575)
!9583 = distinct !{!9583, !9572, !9584}
!9584 = !DILocation(line: 432, column: 37, scope: !9573)
!9585 = !DILocation(line: 433, column: 2, scope: !9567)
!9586 = !DILocalVariable(name: "__ret_warn_on", scope: !9587, file: !3, line: 435, type: !206)
!9587 = distinct !DILexicalBlock(scope: !9588, file: !3, line: 435, column: 3)
!9588 = distinct !DILexicalBlock(scope: !9564, file: !3, line: 433, column: 9)
!9589 = !DILocation(line: 435, column: 3, scope: !9587)
!9590 = !DILocation(line: 435, column: 3, scope: !9591)
!9591 = distinct !DILexicalBlock(scope: !9587, file: !3, line: 435, column: 3)
!9592 = !DILocation(line: 435, column: 3, scope: !9593)
!9593 = distinct !DILexicalBlock(scope: !9591, file: !3, line: 435, column: 3)
!9594 = !DILocation(line: 435, column: 3, scope: !9595)
!9595 = distinct !DILexicalBlock(scope: !9593, file: !3, line: 435, column: 3)
!9596 = !DILocation(line: 435, column: 3, scope: !9597)
!9597 = distinct !DILexicalBlock(scope: !9593, file: !3, line: 435, column: 3)
!9598 = !{i32 -2140097582, i32 -2140097553, i32 -2140097507, i32 -2140097449, i32 -2140097395, i32 -2140097341, i32 -2140097286, i32 -2140097255}
!9599 = !DILocation(line: 435, column: 3, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9593, file: !3, line: 435, column: 3)
!9601 = !{i32 -2140096850, i32 -2140096843, i32 -2140096791, i32 -2140096760, i32 -2140096730}
!9602 = !DILocation(line: 435, column: 3, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !9593, file: !3, line: 435, column: 3)
!9604 = !DILocation(line: 438, column: 7, scope: !9605)
!9605 = distinct !DILexicalBlock(scope: !9588, file: !3, line: 438, column: 7)
!9606 = !DILocation(line: 438, column: 12, scope: !9605)
!9607 = !DILocation(line: 438, column: 21, scope: !9605)
!9608 = !DILocation(line: 438, column: 19, scope: !9605)
!9609 = !DILocation(line: 438, column: 7, scope: !9588)
!9610 = !DILocation(line: 439, column: 4, scope: !9611)
!9611 = distinct !DILexicalBlock(scope: !9612, file: !3, line: 439, column: 4)
!9612 = distinct !DILexicalBlock(scope: !9605, file: !3, line: 438, column: 29)
!9613 = !DILocation(line: 439, column: 4, scope: !9614)
!9614 = distinct !DILexicalBlock(scope: !9611, file: !3, line: 439, column: 4)
!9615 = !DILocation(line: 441, column: 6, scope: !9614)
!9616 = !DILocation(line: 441, column: 11, scope: !9614)
!9617 = !DILocation(line: 441, column: 20, scope: !9614)
!9618 = !DILocation(line: 441, column: 18, scope: !9614)
!9619 = !DILocation(line: 440, column: 5, scope: !9614)
!9620 = !DILocation(line: 440, column: 10, scope: !9614)
!9621 = !DILocation(line: 440, column: 21, scope: !9614)
!9622 = !DILocation(line: 440, column: 27, scope: !9614)
!9623 = !DILocation(line: 440, column: 34, scope: !9614)
!9624 = distinct !{!9624, !9610, !9625}
!9625 = !DILocation(line: 441, column: 20, scope: !9611)
!9626 = !DILocation(line: 442, column: 20, scope: !9612)
!9627 = !DILocation(line: 442, column: 19, scope: !9612)
!9628 = !DILocation(line: 442, column: 4, scope: !9612)
!9629 = !DILocation(line: 442, column: 9, scope: !9612)
!9630 = !DILocation(line: 442, column: 16, scope: !9612)
!9631 = !DILocation(line: 443, column: 3, scope: !9612)
!9632 = !DILocation(line: 446, column: 35, scope: !9588)
!9633 = !DILocation(line: 446, column: 34, scope: !9588)
!9634 = !DILocation(line: 446, column: 3, scope: !9588)
!9635 = !DILocation(line: 446, column: 8, scope: !9588)
!9636 = !DILocation(line: 446, column: 19, scope: !9588)
!9637 = !DILocation(line: 446, column: 24, scope: !9588)
!9638 = !DILocation(line: 446, column: 31, scope: !9588)
!9639 = !DILocation(line: 448, column: 1, scope: !9550)
!9640 = distinct !DISubprogram(name: "ata_eh_about_to_do", scope: !3, file: !3, line: 1274, type: !9641, scopeLine: 1276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!9641 = !DISubroutineType(types: !9642)
!9642 = !{null, !6396, !6392, !7}
!9643 = !DILocation(line: 407, column: 64, scope: !7380, inlinedAt: !9644)
!9644 = distinct !DILocation(line: 1292, column: 2, scope: !9640)
!9645 = !DILocation(line: 407, column: 84, scope: !7380, inlinedAt: !9644)
!9646 = !DILocation(line: 327, column: 67, scope: !7389, inlinedAt: !9647)
!9647 = distinct !DILocation(line: 1282, column: 2, scope: !9648)
!9648 = distinct !DILexicalBlock(scope: !9649, file: !3, line: 1282, column: 2)
!9649 = distinct !DILexicalBlock(scope: !9650, file: !3, line: 1282, column: 2)
!9650 = distinct !DILexicalBlock(scope: !9651, file: !3, line: 1282, column: 2)
!9651 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 1282, column: 2)
!9652 = distinct !DILexicalBlock(scope: !9640, file: !3, line: 1282, column: 2)
!9653 = !DILocalVariable(name: "link", arg: 1, scope: !9640, file: !3, line: 1274, type: !6396)
!9654 = !DILocation(line: 1274, column: 42, scope: !9640)
!9655 = !DILocalVariable(name: "dev", arg: 2, scope: !9640, file: !3, line: 1274, type: !6392)
!9656 = !DILocation(line: 1274, column: 67, scope: !9640)
!9657 = !DILocalVariable(name: "action", arg: 3, scope: !9640, file: !3, line: 1275, type: !7)
!9658 = !DILocation(line: 1275, column: 17, scope: !9640)
!9659 = !DILocalVariable(name: "ap", scope: !9640, file: !3, line: 1277, type: !6375)
!9660 = !DILocation(line: 1277, column: 19, scope: !9640)
!9661 = !DILocation(line: 1277, column: 24, scope: !9640)
!9662 = !DILocation(line: 1277, column: 30, scope: !9640)
!9663 = !DILocalVariable(name: "ehi", scope: !9640, file: !3, line: 1278, type: !6934)
!9664 = !DILocation(line: 1278, column: 22, scope: !9640)
!9665 = !DILocation(line: 1278, column: 29, scope: !9640)
!9666 = !DILocation(line: 1278, column: 35, scope: !9640)
!9667 = !DILocalVariable(name: "ehc", scope: !9640, file: !3, line: 1279, type: !7127)
!9668 = !DILocation(line: 1279, column: 25, scope: !9640)
!9669 = !DILocation(line: 1279, column: 32, scope: !9640)
!9670 = !DILocation(line: 1279, column: 38, scope: !9640)
!9671 = !DILocalVariable(name: "flags", scope: !9640, file: !3, line: 1280, type: !1012)
!9672 = !DILocation(line: 1280, column: 16, scope: !9640)
!9673 = !DILocation(line: 1282, column: 2, scope: !9640)
!9674 = !DILocation(line: 1282, column: 2, scope: !9652)
!9675 = !DILocalVariable(name: "__dummy", scope: !9676, file: !3, line: 1282, type: !1012)
!9676 = distinct !DILexicalBlock(scope: !9651, file: !3, line: 1282, column: 2)
!9677 = !DILocation(line: 1282, column: 2, scope: !9676)
!9678 = !DILocalVariable(name: "__dummy2", scope: !9676, file: !3, line: 1282, type: !1012)
!9679 = !DILocation(line: 1282, column: 2, scope: !9651)
!9680 = !DILocation(line: 1282, column: 2, scope: !9650)
!9681 = !DILocation(line: 1282, column: 2, scope: !9682)
!9682 = distinct !DILexicalBlock(scope: !9650, file: !3, line: 1282, column: 2)
!9683 = !DILocalVariable(name: "__dummy", scope: !9684, file: !3, line: 1282, type: !1012)
!9684 = distinct !DILexicalBlock(scope: !9685, file: !3, line: 1282, column: 2)
!9685 = distinct !DILexicalBlock(scope: !9682, file: !3, line: 1282, column: 2)
!9686 = !DILocation(line: 1282, column: 2, scope: !9684)
!9687 = !DILocalVariable(name: "__dummy2", scope: !9684, file: !3, line: 1282, type: !1012)
!9688 = !DILocation(line: 1282, column: 2, scope: !9685)
!9689 = !DILocation(line: 1282, column: 2, scope: !9649)
!9690 = !{i32 -2140056459}
!9691 = !DILocation(line: 1282, column: 2, scope: !9648)
!9692 = !DILocation(line: 329, column: 10, scope: !7389, inlinedAt: !9647)
!9693 = !DILocation(line: 329, column: 16, scope: !7389, inlinedAt: !9647)
!9694 = !DILocation(line: 1284, column: 22, scope: !9640)
!9695 = !DILocation(line: 1284, column: 28, scope: !9640)
!9696 = !DILocation(line: 1284, column: 33, scope: !9640)
!9697 = !DILocation(line: 1284, column: 38, scope: !9640)
!9698 = !DILocation(line: 1284, column: 2, scope: !9640)
!9699 = !DILocation(line: 1289, column: 8, scope: !9700)
!9700 = distinct !DILexicalBlock(scope: !9640, file: !3, line: 1289, column: 6)
!9701 = !DILocation(line: 1289, column: 13, scope: !9700)
!9702 = !DILocation(line: 1289, column: 15, scope: !9700)
!9703 = !DILocation(line: 1289, column: 21, scope: !9700)
!9704 = !DILocation(line: 1289, column: 38, scope: !9700)
!9705 = !DILocation(line: 1289, column: 41, scope: !9700)
!9706 = !DILocation(line: 1289, column: 49, scope: !9700)
!9707 = !DILocation(line: 1289, column: 53, scope: !9700)
!9708 = !DILocation(line: 1289, column: 46, scope: !9700)
!9709 = !DILocation(line: 1289, column: 6, scope: !9640)
!9710 = !DILocation(line: 1290, column: 3, scope: !9700)
!9711 = !DILocation(line: 1290, column: 7, scope: !9700)
!9712 = !DILocation(line: 1290, column: 14, scope: !9700)
!9713 = !DILocation(line: 1292, column: 25, scope: !9640)
!9714 = !DILocation(line: 1292, column: 29, scope: !9640)
!9715 = !DILocation(line: 1292, column: 35, scope: !9640)
!9716 = !DILocation(line: 409, column: 2, scope: !7438, inlinedAt: !9644)
!9717 = !DILocation(line: 409, column: 2, scope: !7443, inlinedAt: !9644)
!9718 = !DILocation(line: 409, column: 2, scope: !7444, inlinedAt: !9644)
!9719 = !DILocation(line: 409, column: 2, scope: !7451, inlinedAt: !9644)
!9720 = !DILocation(line: 409, column: 2, scope: !7454, inlinedAt: !9644)
!9721 = !DILocation(line: 1293, column: 1, scope: !9640)
!9722 = distinct !DISubprogram(name: "ata_eh_done", scope: !3, file: !3, line: 1307, type: !9641, scopeLine: 1309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!9723 = !DILocalVariable(name: "link", arg: 1, scope: !9722, file: !3, line: 1307, type: !6396)
!9724 = !DILocation(line: 1307, column: 35, scope: !9722)
!9725 = !DILocalVariable(name: "dev", arg: 2, scope: !9722, file: !3, line: 1307, type: !6392)
!9726 = !DILocation(line: 1307, column: 60, scope: !9722)
!9727 = !DILocalVariable(name: "action", arg: 3, scope: !9722, file: !3, line: 1308, type: !7)
!9728 = !DILocation(line: 1308, column: 17, scope: !9722)
!9729 = !DILocalVariable(name: "ehc", scope: !9722, file: !3, line: 1310, type: !7127)
!9730 = !DILocation(line: 1310, column: 25, scope: !9722)
!9731 = !DILocation(line: 1310, column: 32, scope: !9722)
!9732 = !DILocation(line: 1310, column: 38, scope: !9722)
!9733 = !DILocation(line: 1312, column: 22, scope: !9722)
!9734 = !DILocation(line: 1312, column: 28, scope: !9722)
!9735 = !DILocation(line: 1312, column: 34, scope: !9722)
!9736 = !DILocation(line: 1312, column: 39, scope: !9722)
!9737 = !DILocation(line: 1312, column: 42, scope: !9722)
!9738 = !DILocation(line: 1312, column: 2, scope: !9722)
!9739 = !DILocation(line: 1313, column: 1, scope: !9722)
!9740 = distinct !DISubprogram(name: "atapi_eh_tur", scope: !3, file: !3, line: 1367, type: !9741, scopeLine: 1368, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!9741 = !DISubroutineType(types: !9742)
!9742 = !{!7, !6392, !6474}
!9743 = !DILocalVariable(name: "dev", arg: 1, scope: !9740, file: !3, line: 1367, type: !6392)
!9744 = !DILocation(line: 1367, column: 46, scope: !9740)
!9745 = !DILocalVariable(name: "r_sense_key", arg: 2, scope: !9740, file: !3, line: 1367, type: !6474)
!9746 = !DILocation(line: 1367, column: 55, scope: !9740)
!9747 = !DILocalVariable(name: "cdb", scope: !9740, file: !3, line: 1369, type: !6573)
!9748 = !DILocation(line: 1369, column: 5, scope: !9740)
!9749 = !DILocalVariable(name: "tf", scope: !9740, file: !3, line: 1370, type: !6554)
!9750 = !DILocation(line: 1370, column: 22, scope: !9740)
!9751 = !DILocalVariable(name: "err_mask", scope: !9740, file: !3, line: 1371, type: !7)
!9752 = !DILocation(line: 1371, column: 15, scope: !9740)
!9753 = !DILocation(line: 1373, column: 14, scope: !9740)
!9754 = !DILocation(line: 1373, column: 2, scope: !9740)
!9755 = !DILocation(line: 1375, column: 5, scope: !9740)
!9756 = !DILocation(line: 1375, column: 11, scope: !9740)
!9757 = !DILocation(line: 1376, column: 5, scope: !9740)
!9758 = !DILocation(line: 1376, column: 13, scope: !9740)
!9759 = !DILocation(line: 1377, column: 5, scope: !9740)
!9760 = !DILocation(line: 1377, column: 14, scope: !9740)
!9761 = !DILocation(line: 1379, column: 31, scope: !9740)
!9762 = !DILocation(line: 1379, column: 41, scope: !9740)
!9763 = !DILocation(line: 1379, column: 13, scope: !9740)
!9764 = !DILocation(line: 1379, column: 11, scope: !9740)
!9765 = !DILocation(line: 1380, column: 6, scope: !9766)
!9766 = distinct !DILexicalBlock(scope: !9740, file: !3, line: 1380, column: 6)
!9767 = !DILocation(line: 1380, column: 15, scope: !9766)
!9768 = !DILocation(line: 1380, column: 6, scope: !9740)
!9769 = !DILocation(line: 1381, column: 21, scope: !9766)
!9770 = !DILocation(line: 1381, column: 18, scope: !9766)
!9771 = !DILocation(line: 1381, column: 29, scope: !9766)
!9772 = !DILocation(line: 1381, column: 4, scope: !9766)
!9773 = !DILocation(line: 1381, column: 16, scope: !9766)
!9774 = !DILocation(line: 1381, column: 3, scope: !9766)
!9775 = !DILocation(line: 1382, column: 9, scope: !9740)
!9776 = !DILocation(line: 1382, column: 2, scope: !9740)
!9777 = distinct !DISubprogram(name: "ata_tf_init", scope: !178, file: !178, line: 1760, type: !9778, scopeLine: 1761, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!9778 = !DISubroutineType(types: !9779)
!9779 = !{null, !6392, !6632}
!9780 = !DILocalVariable(name: "dev", arg: 1, scope: !9777, file: !178, line: 1760, type: !6392)
!9781 = !DILocation(line: 1760, column: 51, scope: !9777)
!9782 = !DILocalVariable(name: "tf", arg: 2, scope: !9777, file: !178, line: 1760, type: !6632)
!9783 = !DILocation(line: 1760, column: 77, scope: !9777)
!9784 = !DILocation(line: 1762, column: 9, scope: !9777)
!9785 = !DILocation(line: 1762, column: 2, scope: !9777)
!9786 = !DILocation(line: 1765, column: 12, scope: !9777)
!9787 = !DILocation(line: 1765, column: 17, scope: !9777)
!9788 = !DILocation(line: 1765, column: 23, scope: !9777)
!9789 = !DILocation(line: 1765, column: 27, scope: !9777)
!9790 = !DILocation(line: 1765, column: 2, scope: !9777)
!9791 = !DILocation(line: 1765, column: 6, scope: !9777)
!9792 = !DILocation(line: 1765, column: 10, scope: !9777)
!9793 = !DILocation(line: 1769, column: 6, scope: !9794)
!9794 = distinct !DILexicalBlock(scope: !9777, file: !178, line: 1769, column: 6)
!9795 = !DILocation(line: 1769, column: 11, scope: !9794)
!9796 = !DILocation(line: 1769, column: 17, scope: !9794)
!9797 = !DILocation(line: 1769, column: 6, scope: !9777)
!9798 = !DILocation(line: 1770, column: 3, scope: !9794)
!9799 = !DILocation(line: 1770, column: 7, scope: !9794)
!9800 = !DILocation(line: 1770, column: 14, scope: !9794)
!9801 = !DILocation(line: 1772, column: 3, scope: !9794)
!9802 = !DILocation(line: 1772, column: 7, scope: !9794)
!9803 = !DILocation(line: 1772, column: 14, scope: !9794)
!9804 = !DILocation(line: 1773, column: 1, scope: !9777)
!9805 = distinct !DISubprogram(name: "atapi_eh_request_sense", scope: !3, file: !3, line: 1450, type: !9806, scopeLine: 1452, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!9806 = !DISubroutineType(types: !9807)
!9807 = !{!7, !6392, !6474, !2257}
!9808 = !DILocalVariable(name: "dev", arg: 1, scope: !9805, file: !3, line: 1450, type: !6392)
!9809 = !DILocation(line: 1450, column: 56, scope: !9805)
!9810 = !DILocalVariable(name: "sense_buf", arg: 2, scope: !9805, file: !3, line: 1451, type: !6474)
!9811 = !DILocation(line: 1451, column: 13, scope: !9805)
!9812 = !DILocalVariable(name: "dfl_sense_key", arg: 3, scope: !9805, file: !3, line: 1451, type: !2257)
!9813 = !DILocation(line: 1451, column: 27, scope: !9805)
!9814 = !DILocalVariable(name: "cdb", scope: !9805, file: !3, line: 1453, type: !6573)
!9815 = !DILocation(line: 1453, column: 5, scope: !9805)
!9816 = !DILocalVariable(name: "ap", scope: !9805, file: !3, line: 1455, type: !6375)
!9817 = !DILocation(line: 1455, column: 19, scope: !9805)
!9818 = !DILocation(line: 1455, column: 24, scope: !9805)
!9819 = !DILocation(line: 1455, column: 29, scope: !9805)
!9820 = !DILocation(line: 1455, column: 35, scope: !9805)
!9821 = !DILocalVariable(name: "tf", scope: !9805, file: !3, line: 1456, type: !6554)
!9822 = !DILocation(line: 1456, column: 22, scope: !9805)
!9823 = !DILocation(line: 1460, column: 9, scope: !9805)
!9824 = !DILocation(line: 1460, column: 2, scope: !9805)
!9825 = !DILocation(line: 1465, column: 2, scope: !9805)
!9826 = !DILocation(line: 1465, column: 15, scope: !9805)
!9827 = !DILocation(line: 1466, column: 17, scope: !9805)
!9828 = !DILocation(line: 1466, column: 2, scope: !9805)
!9829 = !DILocation(line: 1466, column: 15, scope: !9805)
!9830 = !DILocation(line: 1469, column: 14, scope: !9805)
!9831 = !DILocation(line: 1469, column: 2, scope: !9805)
!9832 = !DILocation(line: 1471, column: 5, scope: !9805)
!9833 = !DILocation(line: 1471, column: 11, scope: !9805)
!9834 = !DILocation(line: 1472, column: 5, scope: !9805)
!9835 = !DILocation(line: 1472, column: 13, scope: !9805)
!9836 = !DILocation(line: 1475, column: 6, scope: !9837)
!9837 = distinct !DILexicalBlock(scope: !9805, file: !3, line: 1475, column: 6)
!9838 = !DILocation(line: 1475, column: 10, scope: !9837)
!9839 = !DILocation(line: 1475, column: 16, scope: !9837)
!9840 = !DILocation(line: 1475, column: 6, scope: !9805)
!9841 = !DILocation(line: 1476, column: 6, scope: !9842)
!9842 = distinct !DILexicalBlock(scope: !9837, file: !3, line: 1475, column: 36)
!9843 = !DILocation(line: 1476, column: 15, scope: !9842)
!9844 = !DILocation(line: 1477, column: 6, scope: !9842)
!9845 = !DILocation(line: 1477, column: 14, scope: !9842)
!9846 = !DILocation(line: 1478, column: 2, scope: !9842)
!9847 = !DILocation(line: 1479, column: 6, scope: !9848)
!9848 = distinct !DILexicalBlock(scope: !9837, file: !3, line: 1478, column: 9)
!9849 = !DILocation(line: 1479, column: 15, scope: !9848)
!9850 = !DILocation(line: 1480, column: 6, scope: !9848)
!9851 = !DILocation(line: 1480, column: 11, scope: !9848)
!9852 = !DILocation(line: 1481, column: 6, scope: !9848)
!9853 = !DILocation(line: 1481, column: 11, scope: !9848)
!9854 = !DILocation(line: 1484, column: 27, scope: !9805)
!9855 = !DILocation(line: 1484, column: 37, scope: !9805)
!9856 = !DILocation(line: 1485, column: 6, scope: !9805)
!9857 = !DILocation(line: 1484, column: 9, scope: !9805)
!9858 = !DILocation(line: 1484, column: 2, scope: !9805)
!9859 = distinct !DISubprogram(name: "ata_eh_autopsy", scope: !3, file: !3, line: 2045, type: !6640, scopeLine: 2046, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!9860 = !DILocalVariable(name: "ap", arg: 1, scope: !9859, file: !3, line: 2045, type: !6375)
!9861 = !DILocation(line: 2045, column: 38, scope: !9859)
!9862 = !DILocalVariable(name: "link", scope: !9859, file: !3, line: 2047, type: !6396)
!9863 = !DILocation(line: 2047, column: 19, scope: !9859)
!9864 = !DILocation(line: 2049, column: 2, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !9859, file: !3, line: 2049, column: 2)
!9866 = !DILocation(line: 2049, column: 2, scope: !9867)
!9867 = distinct !DILexicalBlock(scope: !9865, file: !3, line: 2049, column: 2)
!9868 = !DILocation(line: 2050, column: 23, scope: !9867)
!9869 = !DILocation(line: 2050, column: 3, scope: !9867)
!9870 = distinct !{!9870, !9864, !9871}
!9871 = !DILocation(line: 2050, column: 27, scope: !9865)
!9872 = !DILocation(line: 2056, column: 6, scope: !9873)
!9873 = distinct !DILexicalBlock(scope: !9859, file: !3, line: 2056, column: 6)
!9874 = !DILocation(line: 2056, column: 10, scope: !9873)
!9875 = !DILocation(line: 2056, column: 6, scope: !9859)
!9876 = !DILocalVariable(name: "mehc", scope: !9877, file: !3, line: 2057, type: !7127)
!9877 = distinct !DILexicalBlock(scope: !9873, file: !3, line: 2056, column: 22)
!9878 = !DILocation(line: 2057, column: 26, scope: !9877)
!9879 = !DILocation(line: 2057, column: 34, scope: !9877)
!9880 = !DILocation(line: 2057, column: 38, scope: !9877)
!9881 = !DILocation(line: 2057, column: 43, scope: !9877)
!9882 = !DILocalVariable(name: "sehc", scope: !9877, file: !3, line: 2058, type: !7127)
!9883 = !DILocation(line: 2058, column: 26, scope: !9877)
!9884 = !DILocation(line: 2058, column: 34, scope: !9877)
!9885 = !DILocation(line: 2058, column: 38, scope: !9877)
!9886 = !DILocation(line: 2058, column: 50, scope: !9877)
!9887 = !DILocation(line: 2061, column: 20, scope: !9877)
!9888 = !DILocation(line: 2061, column: 26, scope: !9877)
!9889 = !DILocation(line: 2061, column: 28, scope: !9877)
!9890 = !DILocation(line: 2061, column: 34, scope: !9877)
!9891 = !DILocation(line: 2061, column: 3, scope: !9877)
!9892 = !DILocation(line: 2061, column: 9, scope: !9877)
!9893 = !DILocation(line: 2061, column: 11, scope: !9877)
!9894 = !DILocation(line: 2061, column: 17, scope: !9877)
!9895 = !DILocation(line: 2064, column: 23, scope: !9877)
!9896 = !DILocation(line: 2064, column: 27, scope: !9877)
!9897 = !DILocation(line: 2064, column: 3, scope: !9877)
!9898 = !DILocation(line: 2067, column: 22, scope: !9877)
!9899 = !DILocation(line: 2067, column: 26, scope: !9877)
!9900 = !DILocation(line: 2067, column: 3, scope: !9877)
!9901 = !DILocation(line: 2068, column: 22, scope: !9877)
!9902 = !DILocation(line: 2068, column: 28, scope: !9877)
!9903 = !DILocation(line: 2068, column: 30, scope: !9877)
!9904 = !DILocation(line: 2068, column: 3, scope: !9877)
!9905 = !DILocation(line: 2068, column: 9, scope: !9877)
!9906 = !DILocation(line: 2068, column: 11, scope: !9877)
!9907 = !DILocation(line: 2068, column: 19, scope: !9877)
!9908 = !DILocation(line: 2069, column: 28, scope: !9877)
!9909 = !DILocation(line: 2069, column: 34, scope: !9877)
!9910 = !DILocation(line: 2069, column: 36, scope: !9877)
!9911 = !DILocation(line: 2069, column: 3, scope: !9877)
!9912 = !DILocation(line: 2069, column: 9, scope: !9877)
!9913 = !DILocation(line: 2069, column: 11, scope: !9877)
!9914 = !DILocation(line: 2069, column: 25, scope: !9877)
!9915 = !DILocation(line: 2070, column: 21, scope: !9877)
!9916 = !DILocation(line: 2070, column: 27, scope: !9877)
!9917 = !DILocation(line: 2070, column: 29, scope: !9877)
!9918 = !DILocation(line: 2070, column: 3, scope: !9877)
!9919 = !DILocation(line: 2070, column: 9, scope: !9877)
!9920 = !DILocation(line: 2070, column: 11, scope: !9877)
!9921 = !DILocation(line: 2070, column: 18, scope: !9877)
!9922 = !DILocation(line: 2071, column: 15, scope: !9877)
!9923 = !DILocation(line: 2071, column: 19, scope: !9877)
!9924 = !DILocation(line: 2071, column: 3, scope: !9877)
!9925 = !DILocation(line: 2072, column: 2, scope: !9877)
!9926 = !DILocation(line: 2077, column: 24, scope: !9927)
!9927 = distinct !DILexicalBlock(scope: !9859, file: !3, line: 2077, column: 6)
!9928 = !DILocation(line: 2077, column: 6, scope: !9927)
!9929 = !DILocation(line: 2077, column: 6, scope: !9859)
!9930 = !DILocation(line: 2078, column: 24, scope: !9927)
!9931 = !DILocation(line: 2078, column: 28, scope: !9927)
!9932 = !DILocation(line: 2078, column: 3, scope: !9927)
!9933 = !DILocation(line: 2079, column: 1, scope: !9859)
!9934 = distinct !DISubprogram(name: "ata_eh_link_autopsy", scope: !3, file: !3, line: 1913, type: !6910, scopeLine: 1914, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!9935 = !DILocalVariable(name: "link", arg: 1, scope: !9934, file: !3, line: 1913, type: !6396)
!9936 = !DILocation(line: 1913, column: 50, scope: !9934)
!9937 = !DILocalVariable(name: "ap", scope: !9934, file: !3, line: 1915, type: !6375)
!9938 = !DILocation(line: 1915, column: 19, scope: !9934)
!9939 = !DILocation(line: 1915, column: 24, scope: !9934)
!9940 = !DILocation(line: 1915, column: 30, scope: !9934)
!9941 = !DILocalVariable(name: "ehc", scope: !9934, file: !3, line: 1916, type: !7127)
!9942 = !DILocation(line: 1916, column: 25, scope: !9934)
!9943 = !DILocation(line: 1916, column: 32, scope: !9934)
!9944 = !DILocation(line: 1916, column: 38, scope: !9934)
!9945 = !DILocalVariable(name: "qc", scope: !9934, file: !3, line: 1917, type: !6387)
!9946 = !DILocation(line: 1917, column: 25, scope: !9934)
!9947 = !DILocalVariable(name: "dev", scope: !9934, file: !3, line: 1918, type: !6392)
!9948 = !DILocation(line: 1918, column: 21, scope: !9934)
!9949 = !DILocalVariable(name: "all_err_mask", scope: !9934, file: !3, line: 1919, type: !7)
!9950 = !DILocation(line: 1919, column: 15, scope: !9934)
!9951 = !DILocalVariable(name: "eflags", scope: !9934, file: !3, line: 1919, type: !7)
!9952 = !DILocation(line: 1919, column: 33, scope: !9934)
!9953 = !DILocalVariable(name: "tag", scope: !9934, file: !3, line: 1920, type: !206)
!9954 = !DILocation(line: 1920, column: 6, scope: !9934)
!9955 = !DILocalVariable(name: "nr_failed", scope: !9934, file: !3, line: 1920, type: !206)
!9956 = !DILocation(line: 1920, column: 11, scope: !9934)
!9957 = !DILocalVariable(name: "nr_quiet", scope: !9934, file: !3, line: 1920, type: !206)
!9958 = !DILocation(line: 1920, column: 26, scope: !9934)
!9959 = !DILocalVariable(name: "serror", scope: !9934, file: !3, line: 1921, type: !1042)
!9960 = !DILocation(line: 1921, column: 6, scope: !9934)
!9961 = !DILocalVariable(name: "rc", scope: !9934, file: !3, line: 1922, type: !206)
!9962 = !DILocation(line: 1922, column: 6, scope: !9934)
!9963 = !DILocation(line: 1926, column: 6, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !9934, file: !3, line: 1926, column: 6)
!9965 = !DILocation(line: 1926, column: 11, scope: !9964)
!9966 = !DILocation(line: 1926, column: 13, scope: !9964)
!9967 = !DILocation(line: 1926, column: 19, scope: !9964)
!9968 = !DILocation(line: 1926, column: 6, scope: !9934)
!9969 = !DILocation(line: 1927, column: 3, scope: !9964)
!9970 = !DILocation(line: 1930, column: 21, scope: !9934)
!9971 = !DILocation(line: 1930, column: 7, scope: !9934)
!9972 = !DILocation(line: 1930, column: 5, scope: !9934)
!9973 = !DILocation(line: 1931, column: 6, scope: !9974)
!9974 = distinct !DILexicalBlock(scope: !9934, file: !3, line: 1931, column: 6)
!9975 = !DILocation(line: 1931, column: 9, scope: !9974)
!9976 = !DILocation(line: 1931, column: 6, scope: !9934)
!9977 = !DILocation(line: 1932, column: 20, scope: !9978)
!9978 = distinct !DILexicalBlock(scope: !9974, file: !3, line: 1931, column: 15)
!9979 = !DILocation(line: 1932, column: 3, scope: !9978)
!9980 = !DILocation(line: 1932, column: 8, scope: !9978)
!9981 = !DILocation(line: 1932, column: 10, scope: !9978)
!9982 = !DILocation(line: 1932, column: 17, scope: !9978)
!9983 = !DILocation(line: 1933, column: 25, scope: !9978)
!9984 = !DILocation(line: 1933, column: 3, scope: !9978)
!9985 = !DILocation(line: 1934, column: 2, scope: !9978)
!9986 = !DILocation(line: 1934, column: 13, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9974, file: !3, line: 1934, column: 13)
!9988 = !DILocation(line: 1934, column: 16, scope: !9987)
!9989 = !DILocation(line: 1934, column: 13, scope: !9974)
!9990 = !DILocation(line: 1936, column: 3, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !9987, file: !3, line: 1934, column: 32)
!9992 = !DILocation(line: 1936, column: 8, scope: !9991)
!9993 = !DILocation(line: 1936, column: 10, scope: !9991)
!9994 = !DILocation(line: 1936, column: 21, scope: !9991)
!9995 = !DILocation(line: 1937, column: 3, scope: !9991)
!9996 = !DILocation(line: 1937, column: 8, scope: !9991)
!9997 = !DILocation(line: 1937, column: 10, scope: !9991)
!9998 = !DILocation(line: 1937, column: 17, scope: !9991)
!9999 = !DILocation(line: 1938, column: 3, scope: !9991)
!10000 = !DILocation(line: 1938, column: 8, scope: !9991)
!10001 = !DILocation(line: 1938, column: 10, scope: !9991)
!10002 = !DILocation(line: 1938, column: 19, scope: !9991)
!10003 = !DILocation(line: 1939, column: 2, scope: !9991)
!10004 = !DILocation(line: 1942, column: 27, scope: !9934)
!10005 = !DILocation(line: 1942, column: 2, scope: !9934)
!10006 = !DILocation(line: 1945, column: 6, scope: !10007)
!10007 = distinct !DILexicalBlock(scope: !9934, file: !3, line: 1945, column: 6)
!10008 = !DILocation(line: 1945, column: 11, scope: !10007)
!10009 = !DILocation(line: 1945, column: 13, scope: !10007)
!10010 = !DILocation(line: 1945, column: 22, scope: !10007)
!10011 = !DILocation(line: 1945, column: 6, scope: !9934)
!10012 = !DILocation(line: 1946, column: 3, scope: !10007)
!10013 = !DILocation(line: 1946, column: 8, scope: !10007)
!10014 = !DILocation(line: 1946, column: 10, scope: !10007)
!10015 = !DILocation(line: 1946, column: 19, scope: !10007)
!10016 = !DILocation(line: 1948, column: 18, scope: !9934)
!10017 = !DILocation(line: 1948, column: 23, scope: !9934)
!10018 = !DILocation(line: 1948, column: 25, scope: !9934)
!10019 = !DILocation(line: 1948, column: 15, scope: !9934)
!10020 = !DILocation(line: 1950, column: 2, scope: !10021)
!10021 = distinct !DILexicalBlock(scope: !9934, file: !3, line: 1950, column: 2)
!10022 = !DILocation(line: 1950, column: 2, scope: !10023)
!10023 = distinct !DILexicalBlock(scope: !10021, file: !3, line: 1950, column: 2)
!10024 = !DILocation(line: 1950, column: 2, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !10023, file: !3, line: 1950, column: 2)
!10026 = !DILocation(line: 0, scope: !10023)
!10027 = !DILocation(line: 1951, column: 9, scope: !10028)
!10028 = distinct !DILexicalBlock(scope: !10029, file: !3, line: 1951, column: 7)
!10029 = distinct !DILexicalBlock(scope: !10023, file: !3, line: 1950, column: 35)
!10030 = !DILocation(line: 1951, column: 13, scope: !10028)
!10031 = !DILocation(line: 1951, column: 19, scope: !10028)
!10032 = !DILocation(line: 1951, column: 40, scope: !10028)
!10033 = !DILocation(line: 1952, column: 25, scope: !10028)
!10034 = !DILocation(line: 1952, column: 29, scope: !10028)
!10035 = !DILocation(line: 1952, column: 7, scope: !10028)
!10036 = !DILocation(line: 1952, column: 37, scope: !10028)
!10037 = !DILocation(line: 1952, column: 34, scope: !10028)
!10038 = !DILocation(line: 1951, column: 7, scope: !10029)
!10039 = !DILocation(line: 1953, column: 4, scope: !10028)
!10040 = !DILocation(line: 1956, column: 19, scope: !10029)
!10041 = !DILocation(line: 1956, column: 24, scope: !10029)
!10042 = !DILocation(line: 1956, column: 26, scope: !10029)
!10043 = !DILocation(line: 1956, column: 3, scope: !10029)
!10044 = !DILocation(line: 1956, column: 7, scope: !10029)
!10045 = !DILocation(line: 1956, column: 16, scope: !10029)
!10046 = !DILocation(line: 1959, column: 38, scope: !10029)
!10047 = !DILocation(line: 1959, column: 43, scope: !10029)
!10048 = !DILocation(line: 1959, column: 47, scope: !10029)
!10049 = !DILocation(line: 1959, column: 20, scope: !10029)
!10050 = !DILocation(line: 1959, column: 3, scope: !10029)
!10051 = !DILocation(line: 1959, column: 8, scope: !10029)
!10052 = !DILocation(line: 1959, column: 10, scope: !10029)
!10053 = !DILocation(line: 1959, column: 17, scope: !10029)
!10054 = !DILocation(line: 1962, column: 7, scope: !10055)
!10055 = distinct !DILexicalBlock(scope: !10029, file: !3, line: 1962, column: 7)
!10056 = !DILocation(line: 1962, column: 11, scope: !10055)
!10057 = !DILocation(line: 1962, column: 20, scope: !10055)
!10058 = !DILocation(line: 1962, column: 7, scope: !10029)
!10059 = !DILocation(line: 1963, column: 4, scope: !10055)
!10060 = !DILocation(line: 1963, column: 8, scope: !10055)
!10061 = !DILocation(line: 1963, column: 17, scope: !10055)
!10062 = !DILocation(line: 1967, column: 7, scope: !10063)
!10063 = distinct !DILexicalBlock(scope: !10029, file: !3, line: 1967, column: 7)
!10064 = !DILocation(line: 1967, column: 11, scope: !10063)
!10065 = !DILocation(line: 1967, column: 20, scope: !10063)
!10066 = !DILocation(line: 1967, column: 7, scope: !10029)
!10067 = !DILocation(line: 1968, column: 4, scope: !10063)
!10068 = !DILocation(line: 1968, column: 8, scope: !10063)
!10069 = !DILocation(line: 1968, column: 17, scope: !10063)
!10070 = !DILocation(line: 1977, column: 7, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10029, file: !3, line: 1977, column: 7)
!10072 = !DILocation(line: 1977, column: 11, scope: !10071)
!10073 = !DILocation(line: 1977, column: 17, scope: !10071)
!10074 = !DILocation(line: 1977, column: 7, scope: !10029)
!10075 = !DILocation(line: 1978, column: 4, scope: !10071)
!10076 = !DILocation(line: 1978, column: 8, scope: !10071)
!10077 = !DILocation(line: 1978, column: 17, scope: !10071)
!10078 = !DILocation(line: 1979, column: 31, scope: !10079)
!10079 = distinct !DILexicalBlock(scope: !10071, file: !3, line: 1979, column: 12)
!10080 = !DILocation(line: 1979, column: 12, scope: !10079)
!10081 = !DILocation(line: 1979, column: 12, scope: !10071)
!10082 = !DILocation(line: 1980, column: 4, scope: !10079)
!10083 = !DILocation(line: 1980, column: 8, scope: !10079)
!10084 = !DILocation(line: 1980, column: 14, scope: !10079)
!10085 = !DILocation(line: 1983, column: 16, scope: !10029)
!10086 = !DILocation(line: 1983, column: 20, scope: !10029)
!10087 = !DILocation(line: 1983, column: 3, scope: !10029)
!10088 = !DILocation(line: 1983, column: 8, scope: !10029)
!10089 = !DILocation(line: 1983, column: 10, scope: !10029)
!10090 = !DILocation(line: 1983, column: 14, scope: !10029)
!10091 = !DILocation(line: 1984, column: 19, scope: !10029)
!10092 = !DILocation(line: 1984, column: 23, scope: !10029)
!10093 = !DILocation(line: 1984, column: 16, scope: !10029)
!10094 = !DILocation(line: 1985, column: 7, scope: !10095)
!10095 = distinct !DILexicalBlock(scope: !10029, file: !3, line: 1985, column: 7)
!10096 = !DILocation(line: 1985, column: 11, scope: !10095)
!10097 = !DILocation(line: 1985, column: 17, scope: !10095)
!10098 = !DILocation(line: 1985, column: 7, scope: !10029)
!10099 = !DILocation(line: 1986, column: 11, scope: !10095)
!10100 = !DILocation(line: 1986, column: 4, scope: !10095)
!10101 = !DILocation(line: 1987, column: 32, scope: !10029)
!10102 = !DILocation(line: 1987, column: 3, scope: !10029)
!10103 = !DILocation(line: 1990, column: 20, scope: !10104)
!10104 = distinct !DILexicalBlock(scope: !10029, file: !3, line: 1990, column: 7)
!10105 = !DILocation(line: 1990, column: 7, scope: !10104)
!10106 = !DILocation(line: 1990, column: 7, scope: !10029)
!10107 = !DILocation(line: 1991, column: 12, scope: !10104)
!10108 = !DILocation(line: 1991, column: 4, scope: !10104)
!10109 = !DILocation(line: 1992, column: 12, scope: !10029)
!10110 = !DILocation(line: 1993, column: 2, scope: !10029)
!10111 = distinct !{!10111, !10020, !10112}
!10112 = !DILocation(line: 1993, column: 2, scope: !10021)
!10113 = !DILocation(line: 1996, column: 6, scope: !10114)
!10114 = distinct !DILexicalBlock(scope: !9934, file: !3, line: 1996, column: 6)
!10115 = !DILocation(line: 1996, column: 18, scope: !10114)
!10116 = !DILocation(line: 1996, column: 15, scope: !10114)
!10117 = !DILocation(line: 1996, column: 6, scope: !9934)
!10118 = !DILocation(line: 1997, column: 3, scope: !10114)
!10119 = !DILocation(line: 1997, column: 8, scope: !10114)
!10120 = !DILocation(line: 1997, column: 10, scope: !10114)
!10121 = !DILocation(line: 1997, column: 16, scope: !10114)
!10122 = !DILocation(line: 2000, column: 6, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !9934, file: !3, line: 2000, column: 6)
!10124 = !DILocation(line: 2000, column: 10, scope: !10123)
!10125 = !DILocation(line: 2000, column: 17, scope: !10123)
!10126 = !DILocation(line: 2000, column: 36, scope: !10123)
!10127 = !DILocation(line: 2001, column: 6, scope: !10123)
!10128 = !DILocation(line: 2001, column: 19, scope: !10123)
!10129 = !DILocation(line: 2000, column: 6, scope: !9934)
!10130 = !DILocation(line: 2002, column: 3, scope: !10123)
!10131 = !DILocation(line: 2002, column: 8, scope: !10123)
!10132 = !DILocation(line: 2002, column: 10, scope: !10123)
!10133 = !DILocation(line: 2002, column: 17, scope: !10123)
!10134 = !DILocation(line: 2003, column: 13, scope: !10135)
!10135 = distinct !DILexicalBlock(scope: !10123, file: !3, line: 2003, column: 11)
!10136 = !DILocation(line: 2003, column: 20, scope: !10135)
!10137 = !DILocation(line: 2003, column: 39, scope: !10135)
!10138 = !DILocation(line: 2003, column: 42, scope: !10135)
!10139 = !DILocation(line: 2003, column: 56, scope: !10135)
!10140 = !DILocation(line: 2004, column: 7, scope: !10135)
!10141 = !DILocation(line: 2004, column: 14, scope: !10135)
!10142 = !DILocation(line: 2004, column: 33, scope: !10135)
!10143 = !DILocation(line: 2004, column: 37, scope: !10135)
!10144 = !DILocation(line: 2004, column: 50, scope: !10135)
!10145 = !DILocation(line: 2003, column: 11, scope: !10123)
!10146 = !DILocation(line: 2005, column: 3, scope: !10135)
!10147 = !DILocation(line: 2005, column: 8, scope: !10135)
!10148 = !DILocation(line: 2005, column: 10, scope: !10135)
!10149 = !DILocation(line: 2005, column: 17, scope: !10135)
!10150 = !DILocation(line: 2010, column: 6, scope: !10151)
!10151 = distinct !DILexicalBlock(scope: !9934, file: !3, line: 2010, column: 6)
!10152 = !DILocation(line: 2010, column: 11, scope: !10151)
!10153 = !DILocation(line: 2010, column: 13, scope: !10151)
!10154 = !DILocation(line: 2010, column: 6, scope: !9934)
!10155 = !DILocation(line: 2012, column: 4, scope: !10156)
!10156 = distinct !DILexicalBlock(scope: !10151, file: !3, line: 2010, column: 18)
!10157 = !DILocation(line: 2012, column: 9, scope: !10156)
!10158 = !DILocation(line: 2012, column: 11, scope: !10156)
!10159 = !DILocation(line: 2012, column: 18, scope: !10156)
!10160 = !DILocation(line: 2011, column: 3, scope: !10156)
!10161 = !DILocation(line: 2011, column: 8, scope: !10156)
!10162 = !DILocation(line: 2011, column: 10, scope: !10156)
!10163 = !DILocation(line: 2011, column: 21, scope: !10156)
!10164 = !DILocation(line: 2011, column: 26, scope: !10156)
!10165 = !DILocation(line: 2011, column: 28, scope: !10156)
!10166 = !DILocation(line: 2011, column: 33, scope: !10156)
!10167 = !DILocation(line: 2011, column: 40, scope: !10156)
!10168 = !DILocation(line: 2013, column: 3, scope: !10156)
!10169 = !DILocation(line: 2013, column: 8, scope: !10156)
!10170 = !DILocation(line: 2013, column: 10, scope: !10156)
!10171 = !DILocation(line: 2013, column: 17, scope: !10156)
!10172 = !DILocation(line: 2014, column: 2, scope: !10156)
!10173 = !DILocation(line: 2017, column: 7, scope: !10174)
!10174 = distinct !DILexicalBlock(scope: !9934, file: !3, line: 2017, column: 6)
!10175 = !DILocation(line: 2017, column: 20, scope: !10174)
!10176 = !DILocation(line: 2017, column: 38, scope: !10174)
!10177 = !DILocation(line: 2017, column: 59, scope: !10174)
!10178 = !DILocation(line: 2017, column: 42, scope: !10174)
!10179 = !DILocation(line: 2017, column: 6, scope: !9934)
!10180 = !DILocation(line: 2018, column: 3, scope: !10174)
!10181 = !DILocation(line: 2018, column: 7, scope: !10174)
!10182 = !DILocation(line: 2018, column: 12, scope: !10174)
!10183 = !DILocation(line: 2018, column: 23, scope: !10174)
!10184 = !DILocation(line: 2018, column: 25, scope: !10174)
!10185 = !DILocation(line: 2018, column: 34, scope: !10174)
!10186 = !DILocation(line: 2021, column: 8, scope: !9934)
!10187 = !DILocation(line: 2021, column: 13, scope: !9934)
!10188 = !DILocation(line: 2021, column: 15, scope: !9934)
!10189 = !DILocation(line: 2021, column: 6, scope: !9934)
!10190 = !DILocation(line: 2022, column: 7, scope: !10191)
!10191 = distinct !DILexicalBlock(scope: !9934, file: !3, line: 2022, column: 6)
!10192 = !DILocation(line: 2022, column: 11, scope: !10191)
!10193 = !DILocation(line: 2022, column: 37, scope: !10191)
!10194 = !DILocation(line: 2022, column: 16, scope: !10191)
!10195 = !DILocation(line: 2022, column: 43, scope: !10191)
!10196 = !DILocation(line: 2022, column: 48, scope: !10191)
!10197 = !DILocation(line: 2023, column: 25, scope: !10191)
!10198 = !DILocation(line: 2023, column: 31, scope: !10191)
!10199 = !DILocation(line: 2023, column: 9, scope: !10191)
!10200 = !DILocation(line: 2022, column: 6, scope: !9934)
!10201 = !DILocation(line: 2024, column: 12, scope: !10191)
!10202 = !DILocation(line: 2024, column: 18, scope: !10191)
!10203 = !DILocation(line: 2024, column: 10, scope: !10191)
!10204 = !DILocation(line: 2024, column: 6, scope: !10191)
!10205 = !DILocation(line: 2026, column: 6, scope: !10206)
!10206 = distinct !DILexicalBlock(scope: !9934, file: !3, line: 2026, column: 6)
!10207 = !DILocation(line: 2026, column: 6, scope: !9934)
!10208 = !DILocation(line: 2027, column: 7, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10210, file: !3, line: 2027, column: 7)
!10210 = distinct !DILexicalBlock(scope: !10206, file: !3, line: 2026, column: 11)
!10211 = !DILocation(line: 2027, column: 12, scope: !10209)
!10212 = !DILocation(line: 2027, column: 18, scope: !10209)
!10213 = !DILocation(line: 2027, column: 7, scope: !10210)
!10214 = !DILocation(line: 2028, column: 11, scope: !10209)
!10215 = !DILocation(line: 2028, column: 4, scope: !10209)
!10216 = !DILocation(line: 2029, column: 38, scope: !10210)
!10217 = !DILocation(line: 2029, column: 43, scope: !10210)
!10218 = !DILocation(line: 2029, column: 51, scope: !10210)
!10219 = !DILocation(line: 2029, column: 20, scope: !10210)
!10220 = !DILocation(line: 2029, column: 3, scope: !10210)
!10221 = !DILocation(line: 2029, column: 8, scope: !10210)
!10222 = !DILocation(line: 2029, column: 10, scope: !10210)
!10223 = !DILocation(line: 2029, column: 17, scope: !10210)
!10224 = !DILocation(line: 2030, column: 29, scope: !10210)
!10225 = !DILocation(line: 2030, column: 34, scope: !10210)
!10226 = !DILocation(line: 2030, column: 39, scope: !10210)
!10227 = !DILocation(line: 2030, column: 41, scope: !10210)
!10228 = !DILocation(line: 2030, column: 49, scope: !10210)
!10229 = !DILocation(line: 2030, column: 3, scope: !10210)
!10230 = !DILocation(line: 2031, column: 2, scope: !10210)
!10231 = !DILocation(line: 2033, column: 1, scope: !9934)
!10232 = distinct !DISubprogram(name: "sata_pmp_attached", scope: !178, file: !178, line: 1432, type: !6743, scopeLine: 1433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!10233 = !DILocalVariable(name: "ap", arg: 1, scope: !10232, file: !178, line: 1432, type: !6375)
!10234 = !DILocation(line: 1432, column: 55, scope: !10232)
!10235 = !DILocation(line: 1434, column: 9, scope: !10232)
!10236 = !DILocation(line: 1434, column: 13, scope: !10232)
!10237 = !DILocation(line: 1434, column: 26, scope: !10232)
!10238 = !DILocation(line: 1434, column: 2, scope: !10232)
!10239 = !DILocalVariable(name: "command", arg: 1, scope: !6879, file: !3, line: 2091, type: !2257)
!10240 = !DILocation(line: 2091, column: 37, scope: !6879)
!10241 = !DILocalVariable(name: "i", scope: !6879, file: !3, line: 2193, type: !7)
!10242 = !DILocation(line: 2193, column: 15, scope: !6879)
!10243 = !DILocation(line: 2194, column: 9, scope: !10244)
!10244 = distinct !DILexicalBlock(scope: !6879, file: !3, line: 2194, column: 2)
!10245 = !DILocation(line: 2194, column: 7, scope: !10244)
!10246 = !DILocation(line: 2194, column: 24, scope: !10247)
!10247 = distinct !DILexicalBlock(scope: !10244, file: !3, line: 2194, column: 2)
!10248 = !DILocation(line: 2194, column: 14, scope: !10247)
!10249 = !DILocation(line: 2194, column: 27, scope: !10247)
!10250 = !DILocation(line: 2194, column: 2, scope: !10244)
!10251 = !DILocation(line: 2195, column: 17, scope: !10252)
!10252 = distinct !DILexicalBlock(scope: !10247, file: !3, line: 2195, column: 7)
!10253 = !DILocation(line: 2195, column: 7, scope: !10252)
!10254 = !DILocation(line: 2195, column: 20, scope: !10252)
!10255 = !DILocation(line: 2195, column: 31, scope: !10252)
!10256 = !DILocation(line: 2195, column: 28, scope: !10252)
!10257 = !DILocation(line: 2195, column: 7, scope: !10247)
!10258 = !DILocation(line: 2196, column: 21, scope: !10252)
!10259 = !DILocation(line: 2196, column: 11, scope: !10252)
!10260 = !DILocation(line: 2196, column: 24, scope: !10252)
!10261 = !DILocation(line: 2196, column: 4, scope: !10252)
!10262 = !DILocation(line: 2194, column: 34, scope: !10247)
!10263 = !DILocation(line: 2194, column: 2, scope: !10247)
!10264 = distinct !{!10264, !10250, !10265}
!10265 = !DILocation(line: 2196, column: 24, scope: !10244)
!10266 = !DILocation(line: 2199, column: 2, scope: !6879)
!10267 = !DILocation(line: 2200, column: 1, scope: !6879)
!10268 = distinct !DISubprogram(name: "ata_eh_report", scope: !3, file: !3, line: 2410, type: !6640, scopeLine: 2411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!10269 = !DILocalVariable(name: "ap", arg: 1, scope: !10268, file: !3, line: 2410, type: !6375)
!10270 = !DILocation(line: 2410, column: 37, scope: !10268)
!10271 = !DILocalVariable(name: "link", scope: !10268, file: !3, line: 2412, type: !6396)
!10272 = !DILocation(line: 2412, column: 19, scope: !10268)
!10273 = !DILocation(line: 2414, column: 2, scope: !10274)
!10274 = distinct !DILexicalBlock(scope: !10268, file: !3, line: 2414, column: 2)
!10275 = !DILocation(line: 2414, column: 2, scope: !10276)
!10276 = distinct !DILexicalBlock(scope: !10274, file: !3, line: 2414, column: 2)
!10277 = !DILocation(line: 2415, column: 22, scope: !10276)
!10278 = !DILocation(line: 2415, column: 3, scope: !10276)
!10279 = distinct !{!10279, !10273, !10280}
!10280 = !DILocation(line: 2415, column: 26, scope: !10274)
!10281 = !DILocation(line: 2416, column: 1, scope: !10268)
!10282 = !DILocalVariable(name: "link", arg: 1, scope: !6909, file: !3, line: 2212, type: !6396)
!10283 = !DILocation(line: 2212, column: 49, scope: !6909)
!10284 = !DILocalVariable(name: "ap", scope: !6909, file: !3, line: 2214, type: !6375)
!10285 = !DILocation(line: 2214, column: 19, scope: !6909)
!10286 = !DILocation(line: 2214, column: 24, scope: !6909)
!10287 = !DILocation(line: 2214, column: 30, scope: !6909)
!10288 = !DILocalVariable(name: "ehc", scope: !6909, file: !3, line: 2215, type: !7127)
!10289 = !DILocation(line: 2215, column: 25, scope: !6909)
!10290 = !DILocation(line: 2215, column: 32, scope: !6909)
!10291 = !DILocation(line: 2215, column: 38, scope: !6909)
!10292 = !DILocalVariable(name: "qc", scope: !6909, file: !3, line: 2216, type: !6387)
!10293 = !DILocation(line: 2216, column: 25, scope: !6909)
!10294 = !DILocalVariable(name: "frozen", scope: !6909, file: !3, line: 2217, type: !1008)
!10295 = !DILocation(line: 2217, column: 14, scope: !6909)
!10296 = !DILocalVariable(name: "desc", scope: !6909, file: !3, line: 2217, type: !1008)
!10297 = !DILocation(line: 2217, column: 23, scope: !6909)
!10298 = !DILocalVariable(name: "tries_buf", scope: !6909, file: !3, line: 2218, type: !2527)
!10299 = !DILocation(line: 2218, column: 7, scope: !6909)
!10300 = !DILocalVariable(name: "tag", scope: !6909, file: !3, line: 2219, type: !206)
!10301 = !DILocation(line: 2219, column: 6, scope: !6909)
!10302 = !DILocalVariable(name: "nr_failed", scope: !6909, file: !3, line: 2219, type: !206)
!10303 = !DILocation(line: 2219, column: 11, scope: !6909)
!10304 = !DILocation(line: 2221, column: 6, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 2221, column: 6)
!10306 = !DILocation(line: 2221, column: 11, scope: !10305)
!10307 = !DILocation(line: 2221, column: 13, scope: !10305)
!10308 = !DILocation(line: 2221, column: 19, scope: !10305)
!10309 = !DILocation(line: 2221, column: 6, scope: !6909)
!10310 = !DILocation(line: 2222, column: 3, scope: !10305)
!10311 = !DILocation(line: 2224, column: 7, scope: !6909)
!10312 = !DILocation(line: 2225, column: 6, scope: !10313)
!10313 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 2225, column: 6)
!10314 = !DILocation(line: 2225, column: 11, scope: !10313)
!10315 = !DILocation(line: 2225, column: 13, scope: !10313)
!10316 = !DILocation(line: 2225, column: 21, scope: !10313)
!10317 = !DILocation(line: 2225, column: 6, scope: !6909)
!10318 = !DILocation(line: 2226, column: 10, scope: !10313)
!10319 = !DILocation(line: 2226, column: 15, scope: !10313)
!10320 = !DILocation(line: 2226, column: 17, scope: !10313)
!10321 = !DILocation(line: 2226, column: 8, scope: !10313)
!10322 = !DILocation(line: 2226, column: 3, scope: !10313)
!10323 = !DILocation(line: 2228, column: 2, scope: !10324)
!10324 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 2228, column: 2)
!10325 = !DILocation(line: 2228, column: 2, scope: !10326)
!10326 = distinct !DILexicalBlock(scope: !10324, file: !3, line: 2228, column: 2)
!10327 = !DILocation(line: 2228, column: 2, scope: !10328)
!10328 = distinct !DILexicalBlock(scope: !10326, file: !3, line: 2228, column: 2)
!10329 = !DILocation(line: 0, scope: !10326)
!10330 = !DILocation(line: 2229, column: 9, scope: !10331)
!10331 = distinct !DILexicalBlock(scope: !10332, file: !3, line: 2229, column: 7)
!10332 = distinct !DILexicalBlock(scope: !10326, file: !3, line: 2228, column: 35)
!10333 = !DILocation(line: 2229, column: 13, scope: !10331)
!10334 = !DILocation(line: 2229, column: 19, scope: !10331)
!10335 = !DILocation(line: 2229, column: 40, scope: !10331)
!10336 = !DILocation(line: 2230, column: 25, scope: !10331)
!10337 = !DILocation(line: 2230, column: 29, scope: !10331)
!10338 = !DILocation(line: 2230, column: 7, scope: !10331)
!10339 = !DILocation(line: 2230, column: 37, scope: !10331)
!10340 = !DILocation(line: 2230, column: 34, scope: !10331)
!10341 = !DILocation(line: 2230, column: 42, scope: !10331)
!10342 = !DILocation(line: 2231, column: 9, scope: !10331)
!10343 = !DILocation(line: 2231, column: 13, scope: !10331)
!10344 = !DILocation(line: 2231, column: 19, scope: !10331)
!10345 = !DILocation(line: 2231, column: 39, scope: !10331)
!10346 = !DILocation(line: 2232, column: 8, scope: !10331)
!10347 = !DILocation(line: 2232, column: 12, scope: !10331)
!10348 = !DILocation(line: 2232, column: 21, scope: !10331)
!10349 = !DILocation(line: 2229, column: 7, scope: !10332)
!10350 = !DILocation(line: 2233, column: 4, scope: !10331)
!10351 = !DILocation(line: 2234, column: 7, scope: !10352)
!10352 = distinct !DILexicalBlock(scope: !10332, file: !3, line: 2234, column: 7)
!10353 = !DILocation(line: 2234, column: 11, scope: !10352)
!10354 = !DILocation(line: 2234, column: 17, scope: !10352)
!10355 = !DILocation(line: 2234, column: 42, scope: !10352)
!10356 = !DILocation(line: 2234, column: 46, scope: !10352)
!10357 = !DILocation(line: 2234, column: 50, scope: !10352)
!10358 = !DILocation(line: 2234, column: 7, scope: !10332)
!10359 = !DILocation(line: 2235, column: 4, scope: !10352)
!10360 = !DILocation(line: 2237, column: 12, scope: !10332)
!10361 = !DILocation(line: 2238, column: 2, scope: !10332)
!10362 = distinct !{!10362, !10323, !10363}
!10363 = !DILocation(line: 2238, column: 2, scope: !10324)
!10364 = !DILocation(line: 2240, column: 7, scope: !10365)
!10365 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 2240, column: 6)
!10366 = !DILocation(line: 2240, column: 17, scope: !10365)
!10367 = !DILocation(line: 2240, column: 21, scope: !10365)
!10368 = !DILocation(line: 2240, column: 26, scope: !10365)
!10369 = !DILocation(line: 2240, column: 28, scope: !10365)
!10370 = !DILocation(line: 2240, column: 6, scope: !6909)
!10371 = !DILocation(line: 2241, column: 3, scope: !10365)
!10372 = !DILocation(line: 2243, column: 9, scope: !6909)
!10373 = !DILocation(line: 2244, column: 6, scope: !10374)
!10374 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 2244, column: 6)
!10375 = !DILocation(line: 2244, column: 10, scope: !10374)
!10376 = !DILocation(line: 2244, column: 17, scope: !10374)
!10377 = !DILocation(line: 2244, column: 6, scope: !6909)
!10378 = !DILocation(line: 2245, column: 10, scope: !10374)
!10379 = !DILocation(line: 2245, column: 3, scope: !10374)
!10380 = !DILocation(line: 2247, column: 6, scope: !10381)
!10381 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 2247, column: 6)
!10382 = !DILocation(line: 2247, column: 10, scope: !10381)
!10383 = !DILocation(line: 2247, column: 19, scope: !10381)
!10384 = !DILocation(line: 2247, column: 6, scope: !6909)
!10385 = !DILocation(line: 2248, column: 12, scope: !10381)
!10386 = !DILocation(line: 2249, column: 5, scope: !10381)
!10387 = !DILocation(line: 2249, column: 9, scope: !10381)
!10388 = !DILocation(line: 2248, column: 3, scope: !10381)
!10389 = !DILocation(line: 2251, column: 6, scope: !10390)
!10390 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 2251, column: 6)
!10391 = !DILocation(line: 2251, column: 11, scope: !10390)
!10392 = !DILocation(line: 2251, column: 13, scope: !10390)
!10393 = !DILocation(line: 2251, column: 6, scope: !6909)
!10394 = !DILocation(line: 2252, column: 3, scope: !10395)
!10395 = distinct !DILexicalBlock(scope: !10390, file: !3, line: 2251, column: 18)
!10396 = !DILocation(line: 2256, column: 7, scope: !10397)
!10397 = distinct !DILexicalBlock(scope: !10395, file: !3, line: 2256, column: 7)
!10398 = !DILocation(line: 2256, column: 7, scope: !10395)
!10399 = !DILocation(line: 2257, column: 4, scope: !10397)
!10400 = !DILocation(line: 2258, column: 2, scope: !10395)
!10401 = !DILocation(line: 2259, column: 3, scope: !10402)
!10402 = distinct !DILexicalBlock(scope: !10390, file: !3, line: 2258, column: 9)
!10403 = !DILocation(line: 2263, column: 7, scope: !10404)
!10404 = distinct !DILexicalBlock(scope: !10402, file: !3, line: 2263, column: 7)
!10405 = !DILocation(line: 2263, column: 7, scope: !10402)
!10406 = !DILocation(line: 2264, column: 4, scope: !10404)
!10407 = !DILocation(line: 2268, column: 6, scope: !10408)
!10408 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 2268, column: 6)
!10409 = !DILocation(line: 2268, column: 11, scope: !10408)
!10410 = !DILocation(line: 2268, column: 13, scope: !10408)
!10411 = !DILocation(line: 2268, column: 6, scope: !6909)
!10412 = !DILocation(line: 2269, column: 3, scope: !10408)
!10413 = !DILocation(line: 2290, column: 2, scope: !10414)
!10414 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 2290, column: 2)
!10415 = !DILocation(line: 2290, column: 2, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10414, file: !3, line: 2290, column: 2)
!10417 = !DILocation(line: 2290, column: 2, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10416, file: !3, line: 2290, column: 2)
!10419 = !DILocation(line: 0, scope: !10416)
!10420 = !DILocalVariable(name: "cmd", scope: !10421, file: !3, line: 2291, type: !6632)
!10421 = distinct !DILexicalBlock(scope: !10416, file: !3, line: 2290, column: 35)
!10422 = !DILocation(line: 2291, column: 24, scope: !10421)
!10423 = !DILocation(line: 2291, column: 31, scope: !10421)
!10424 = !DILocation(line: 2291, column: 35, scope: !10421)
!10425 = !DILocalVariable(name: "res", scope: !10421, file: !3, line: 2291, type: !6632)
!10426 = !DILocation(line: 2291, column: 40, scope: !10421)
!10427 = !DILocation(line: 2291, column: 47, scope: !10421)
!10428 = !DILocation(line: 2291, column: 51, scope: !10421)
!10429 = !DILocalVariable(name: "data_buf", scope: !10421, file: !3, line: 2292, type: !6175)
!10430 = !DILocation(line: 2292, column: 8, scope: !10421)
!10431 = !DILocalVariable(name: "cdb_buf", scope: !10421, file: !3, line: 2293, type: !10432)
!10432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1010, size: 560, elements: !10433)
!10433 = !{!10434}
!10434 = !DISubrange(count: 70)
!10435 = !DILocation(line: 2293, column: 8, scope: !10421)
!10436 = !DILocation(line: 2295, column: 9, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10421, file: !3, line: 2295, column: 7)
!10438 = !DILocation(line: 2295, column: 13, scope: !10437)
!10439 = !DILocation(line: 2295, column: 19, scope: !10437)
!10440 = !DILocation(line: 2295, column: 40, scope: !10437)
!10441 = !DILocation(line: 2296, column: 25, scope: !10437)
!10442 = !DILocation(line: 2296, column: 29, scope: !10437)
!10443 = !DILocation(line: 2296, column: 7, scope: !10437)
!10444 = !DILocation(line: 2296, column: 37, scope: !10437)
!10445 = !DILocation(line: 2296, column: 34, scope: !10437)
!10446 = !DILocation(line: 2296, column: 42, scope: !10437)
!10447 = !DILocation(line: 2296, column: 46, scope: !10437)
!10448 = !DILocation(line: 2296, column: 50, scope: !10437)
!10449 = !DILocation(line: 2295, column: 7, scope: !10421)
!10450 = !DILocation(line: 2297, column: 4, scope: !10437)
!10451 = !DILocation(line: 2299, column: 7, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !10421, file: !3, line: 2299, column: 7)
!10453 = !DILocation(line: 2299, column: 11, scope: !10452)
!10454 = !DILocation(line: 2299, column: 19, scope: !10452)
!10455 = !DILocation(line: 2299, column: 7, scope: !10421)
!10456 = !DILocalVariable(name: "prot_str", scope: !10457, file: !3, line: 2305, type: !1008)
!10457 = distinct !DILexicalBlock(scope: !10452, file: !3, line: 2299, column: 32)
!10458 = !DILocation(line: 2305, column: 16, scope: !10457)
!10459 = !DILocation(line: 2307, column: 12, scope: !10457)
!10460 = !DILocation(line: 2307, column: 16, scope: !10457)
!10461 = !DILocation(line: 2307, column: 19, scope: !10457)
!10462 = !DILocation(line: 2307, column: 4, scope: !10457)
!10463 = !DILocation(line: 2309, column: 14, scope: !10464)
!10464 = distinct !DILexicalBlock(scope: !10457, file: !3, line: 2307, column: 29)
!10465 = !DILocation(line: 2310, column: 5, scope: !10464)
!10466 = !DILocation(line: 2312, column: 14, scope: !10464)
!10467 = !DILocation(line: 2313, column: 5, scope: !10464)
!10468 = !DILocation(line: 2315, column: 14, scope: !10464)
!10469 = !DILocation(line: 2316, column: 5, scope: !10464)
!10470 = !DILocation(line: 2318, column: 14, scope: !10464)
!10471 = !DILocation(line: 2319, column: 5, scope: !10464)
!10472 = !DILocation(line: 2321, column: 14, scope: !10464)
!10473 = !DILocation(line: 2322, column: 5, scope: !10464)
!10474 = !DILocation(line: 2324, column: 14, scope: !10464)
!10475 = !DILocation(line: 2325, column: 5, scope: !10464)
!10476 = !DILocation(line: 2327, column: 14, scope: !10464)
!10477 = !DILocation(line: 2328, column: 5, scope: !10464)
!10478 = !DILocation(line: 2330, column: 14, scope: !10464)
!10479 = !DILocation(line: 2331, column: 5, scope: !10464)
!10480 = !DILocation(line: 2333, column: 14, scope: !10464)
!10481 = !DILocation(line: 2334, column: 5, scope: !10464)
!10482 = !DILocation(line: 2336, column: 13, scope: !10457)
!10483 = !DILocation(line: 2337, column: 6, scope: !10457)
!10484 = !DILocation(line: 2337, column: 16, scope: !10457)
!10485 = !DILocation(line: 2337, column: 20, scope: !10457)
!10486 = !DILocation(line: 2337, column: 36, scope: !10457)
!10487 = !DILocation(line: 2337, column: 40, scope: !10457)
!10488 = !DILocation(line: 2337, column: 28, scope: !10457)
!10489 = !DILocation(line: 2336, column: 4, scope: !10457)
!10490 = !DILocation(line: 2338, column: 3, scope: !10457)
!10491 = !DILocation(line: 2340, column: 20, scope: !10492)
!10492 = distinct !DILexicalBlock(scope: !10421, file: !3, line: 2340, column: 7)
!10493 = !DILocation(line: 2340, column: 24, scope: !10492)
!10494 = !DILocation(line: 2340, column: 27, scope: !10492)
!10495 = !DILocation(line: 2340, column: 7, scope: !10492)
!10496 = !DILocation(line: 2340, column: 7, scope: !10421)
!10497 = !DILocalVariable(name: "cdb", scope: !10498, file: !3, line: 2341, type: !6921)
!10498 = distinct !DILexicalBlock(scope: !10492, file: !3, line: 2340, column: 38)
!10499 = !DILocation(line: 2341, column: 14, scope: !10498)
!10500 = !DILocation(line: 2341, column: 20, scope: !10498)
!10501 = !DILocation(line: 2341, column: 24, scope: !10498)
!10502 = !DILocalVariable(name: "cdb_len", scope: !10498, file: !3, line: 2342, type: !1173)
!10503 = !DILocation(line: 2342, column: 11, scope: !10498)
!10504 = !DILocation(line: 2342, column: 21, scope: !10498)
!10505 = !DILocation(line: 2342, column: 25, scope: !10498)
!10506 = !DILocation(line: 2342, column: 30, scope: !10498)
!10507 = !DILocation(line: 2344, column: 8, scope: !10508)
!10508 = distinct !DILexicalBlock(scope: !10498, file: !3, line: 2344, column: 8)
!10509 = !DILocation(line: 2344, column: 12, scope: !10508)
!10510 = !DILocation(line: 2344, column: 8, scope: !10498)
!10511 = !DILocation(line: 2345, column: 11, scope: !10512)
!10512 = distinct !DILexicalBlock(scope: !10508, file: !3, line: 2344, column: 21)
!10513 = !DILocation(line: 2345, column: 15, scope: !10512)
!10514 = !DILocation(line: 2345, column: 24, scope: !10512)
!10515 = !DILocation(line: 2345, column: 9, scope: !10512)
!10516 = !DILocation(line: 2346, column: 15, scope: !10512)
!10517 = !DILocation(line: 2346, column: 19, scope: !10512)
!10518 = !DILocation(line: 2346, column: 28, scope: !10512)
!10519 = !DILocation(line: 2346, column: 13, scope: !10512)
!10520 = !DILocation(line: 2347, column: 4, scope: !10512)
!10521 = !DILocation(line: 2348, column: 26, scope: !10498)
!10522 = !DILocation(line: 2349, column: 12, scope: !10498)
!10523 = !DILocation(line: 2349, column: 17, scope: !10498)
!10524 = !DILocation(line: 2348, column: 4, scope: !10498)
!10525 = !DILocation(line: 2350, column: 3, scope: !10498)
!10526 = !DILocalVariable(name: "descr", scope: !10527, file: !3, line: 2351, type: !1008)
!10527 = distinct !DILexicalBlock(scope: !10492, file: !3, line: 2350, column: 10)
!10528 = !DILocation(line: 2351, column: 16, scope: !10527)
!10529 = !DILocation(line: 2351, column: 45, scope: !10527)
!10530 = !DILocation(line: 2351, column: 50, scope: !10527)
!10531 = !DILocation(line: 2351, column: 24, scope: !10527)
!10532 = !DILocation(line: 2352, column: 8, scope: !10533)
!10533 = distinct !DILexicalBlock(scope: !10527, file: !3, line: 2352, column: 8)
!10534 = !DILocation(line: 2352, column: 8, scope: !10527)
!10535 = !DILocation(line: 2353, column: 5, scope: !10533)
!10536 = !DILocation(line: 2357, column: 3, scope: !10421)
!10537 = !DILocation(line: 2375, column: 7, scope: !10538)
!10538 = distinct !DILexicalBlock(scope: !10421, file: !3, line: 2375, column: 7)
!10539 = !DILocation(line: 2375, column: 12, scope: !10538)
!10540 = !DILocation(line: 2375, column: 20, scope: !10538)
!10541 = !DILocation(line: 2375, column: 7, scope: !10421)
!10542 = !DILocation(line: 2377, column: 8, scope: !10543)
!10543 = distinct !DILexicalBlock(scope: !10544, file: !3, line: 2377, column: 8)
!10544 = distinct !DILexicalBlock(scope: !10538, file: !3, line: 2376, column: 31)
!10545 = !DILocation(line: 2377, column: 13, scope: !10543)
!10546 = !DILocation(line: 2377, column: 21, scope: !10543)
!10547 = !DILocation(line: 2377, column: 8, scope: !10544)
!10548 = !DILocation(line: 2378, column: 5, scope: !10543)
!10549 = !DILocation(line: 2380, column: 5, scope: !10543)
!10550 = !DILocation(line: 2386, column: 3, scope: !10544)
!10551 = !DILocation(line: 2388, column: 7, scope: !10552)
!10552 = distinct !DILexicalBlock(scope: !10421, file: !3, line: 2388, column: 7)
!10553 = !DILocation(line: 2388, column: 12, scope: !10552)
!10554 = !DILocation(line: 2388, column: 20, scope: !10552)
!10555 = !DILocation(line: 2388, column: 38, scope: !10552)
!10556 = !DILocation(line: 2389, column: 8, scope: !10552)
!10557 = !DILocation(line: 2389, column: 13, scope: !10552)
!10558 = !DILocation(line: 2389, column: 21, scope: !10552)
!10559 = !DILocation(line: 2388, column: 7, scope: !10421)
!10560 = !DILocation(line: 2391, column: 4, scope: !10552)
!10561 = !DILocation(line: 2398, column: 2, scope: !10421)
!10562 = distinct !{!10562, !10413, !10563}
!10563 = !DILocation(line: 2398, column: 2, scope: !10414)
!10564 = !DILocation(line: 2399, column: 1, scope: !6909)
!10565 = distinct !DISubprogram(name: "ata_eh_reset", scope: !3, file: !3, line: 2442, type: !10566, scopeLine: 2445, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!10566 = !DISubroutineType(types: !10567)
!10567 = !{!206, !6396, !206, !6644, !6649, !6649, !6655}
!10568 = !DILocation(line: 407, column: 64, scope: !7380, inlinedAt: !10569)
!10569 = distinct !DILocation(line: 2774, column: 2, scope: !10565)
!10570 = !DILocation(line: 407, column: 84, scope: !7380, inlinedAt: !10569)
!10571 = !DILocation(line: 327, column: 67, scope: !7389, inlinedAt: !10572)
!10572 = distinct !DILocation(line: 2772, column: 2, scope: !10573)
!10573 = distinct !DILexicalBlock(scope: !10574, file: !3, line: 2772, column: 2)
!10574 = distinct !DILexicalBlock(scope: !10575, file: !3, line: 2772, column: 2)
!10575 = distinct !DILexicalBlock(scope: !10576, file: !3, line: 2772, column: 2)
!10576 = distinct !DILexicalBlock(scope: !10577, file: !3, line: 2772, column: 2)
!10577 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 2772, column: 2)
!10578 = !DILocation(line: 407, column: 64, scope: !7380, inlinedAt: !10579)
!10579 = distinct !DILocation(line: 2709, column: 2, scope: !10565)
!10580 = !DILocation(line: 407, column: 84, scope: !7380, inlinedAt: !10579)
!10581 = !DILocation(line: 327, column: 67, scope: !7389, inlinedAt: !10582)
!10582 = distinct !DILocation(line: 2704, column: 2, scope: !10583)
!10583 = distinct !DILexicalBlock(scope: !10584, file: !3, line: 2704, column: 2)
!10584 = distinct !DILexicalBlock(scope: !10585, file: !3, line: 2704, column: 2)
!10585 = distinct !DILexicalBlock(scope: !10586, file: !3, line: 2704, column: 2)
!10586 = distinct !DILexicalBlock(scope: !10587, file: !3, line: 2704, column: 2)
!10587 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 2704, column: 2)
!10588 = !DILocation(line: 407, column: 64, scope: !7380, inlinedAt: !10589)
!10589 = distinct !DILocation(line: 2486, column: 2, scope: !10565)
!10590 = !DILocation(line: 407, column: 84, scope: !7380, inlinedAt: !10589)
!10591 = !DILocation(line: 327, column: 67, scope: !7389, inlinedAt: !10592)
!10592 = distinct !DILocation(line: 2484, column: 2, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10594, file: !3, line: 2484, column: 2)
!10594 = distinct !DILexicalBlock(scope: !10595, file: !3, line: 2484, column: 2)
!10595 = distinct !DILexicalBlock(scope: !10596, file: !3, line: 2484, column: 2)
!10596 = distinct !DILexicalBlock(scope: !10597, file: !3, line: 2484, column: 2)
!10597 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 2484, column: 2)
!10598 = !DILocalVariable(name: "link", arg: 1, scope: !10565, file: !3, line: 2442, type: !6396)
!10599 = !DILocation(line: 2442, column: 35, scope: !10565)
!10600 = !DILocalVariable(name: "classify", arg: 2, scope: !10565, file: !3, line: 2442, type: !206)
!10601 = !DILocation(line: 2442, column: 45, scope: !10565)
!10602 = !DILocalVariable(name: "prereset", arg: 3, scope: !10565, file: !3, line: 2443, type: !6644)
!10603 = !DILocation(line: 2443, column: 22, scope: !10565)
!10604 = !DILocalVariable(name: "softreset", arg: 4, scope: !10565, file: !3, line: 2443, type: !6649)
!10605 = !DILocation(line: 2443, column: 47, scope: !10565)
!10606 = !DILocalVariable(name: "hardreset", arg: 5, scope: !10565, file: !3, line: 2444, type: !6649)
!10607 = !DILocation(line: 2444, column: 19, scope: !10565)
!10608 = !DILocalVariable(name: "postreset", arg: 6, scope: !10565, file: !3, line: 2444, type: !6655)
!10609 = !DILocation(line: 2444, column: 49, scope: !10565)
!10610 = !DILocalVariable(name: "ap", scope: !10565, file: !3, line: 2446, type: !6375)
!10611 = !DILocation(line: 2446, column: 19, scope: !10565)
!10612 = !DILocation(line: 2446, column: 24, scope: !10565)
!10613 = !DILocation(line: 2446, column: 30, scope: !10565)
!10614 = !DILocalVariable(name: "slave", scope: !10565, file: !3, line: 2447, type: !6396)
!10615 = !DILocation(line: 2447, column: 19, scope: !10565)
!10616 = !DILocation(line: 2447, column: 27, scope: !10565)
!10617 = !DILocation(line: 2447, column: 31, scope: !10565)
!10618 = !DILocalVariable(name: "ehc", scope: !10565, file: !3, line: 2448, type: !7127)
!10619 = !DILocation(line: 2448, column: 25, scope: !10565)
!10620 = !DILocation(line: 2448, column: 32, scope: !10565)
!10621 = !DILocation(line: 2448, column: 38, scope: !10565)
!10622 = !DILocalVariable(name: "sehc", scope: !10565, file: !3, line: 2449, type: !7127)
!10623 = !DILocation(line: 2449, column: 25, scope: !10565)
!10624 = !DILocation(line: 2449, column: 32, scope: !10565)
!10625 = !DILocation(line: 2449, column: 41, scope: !10565)
!10626 = !DILocation(line: 2449, column: 48, scope: !10565)
!10627 = !DILocalVariable(name: "classes", scope: !10565, file: !3, line: 2450, type: !3505)
!10628 = !DILocation(line: 2450, column: 16, scope: !10565)
!10629 = !DILocation(line: 2450, column: 26, scope: !10565)
!10630 = !DILocation(line: 2450, column: 31, scope: !10565)
!10631 = !DILocalVariable(name: "lflags", scope: !10565, file: !3, line: 2451, type: !7)
!10632 = !DILocation(line: 2451, column: 15, scope: !10565)
!10633 = !DILocation(line: 2451, column: 24, scope: !10565)
!10634 = !DILocation(line: 2451, column: 30, scope: !10565)
!10635 = !DILocalVariable(name: "verbose", scope: !10565, file: !3, line: 2452, type: !206)
!10636 = !DILocation(line: 2452, column: 6, scope: !10565)
!10637 = !DILocation(line: 2452, column: 18, scope: !10565)
!10638 = !DILocation(line: 2452, column: 23, scope: !10565)
!10639 = !DILocation(line: 2452, column: 25, scope: !10565)
!10640 = !DILocation(line: 2452, column: 31, scope: !10565)
!10641 = !DILocation(line: 2452, column: 16, scope: !10565)
!10642 = !DILocalVariable(name: "max_tries", scope: !10565, file: !3, line: 2453, type: !206)
!10643 = !DILocation(line: 2453, column: 6, scope: !10565)
!10644 = !DILocalVariable(name: "try", scope: !10565, file: !3, line: 2453, type: !206)
!10645 = !DILocation(line: 2453, column: 21, scope: !10565)
!10646 = !DILocalVariable(name: "failed_link", scope: !10565, file: !3, line: 2454, type: !6396)
!10647 = !DILocation(line: 2454, column: 19, scope: !10565)
!10648 = !DILocalVariable(name: "dev", scope: !10565, file: !3, line: 2455, type: !6392)
!10649 = !DILocation(line: 2455, column: 21, scope: !10565)
!10650 = !DILocalVariable(name: "deadline", scope: !10565, file: !3, line: 2456, type: !1012)
!10651 = !DILocation(line: 2456, column: 16, scope: !10565)
!10652 = !DILocalVariable(name: "now", scope: !10565, file: !3, line: 2456, type: !1012)
!10653 = !DILocation(line: 2456, column: 26, scope: !10565)
!10654 = !DILocalVariable(name: "reset", scope: !10565, file: !3, line: 2457, type: !6649)
!10655 = !DILocation(line: 2457, column: 17, scope: !10565)
!10656 = !DILocalVariable(name: "flags", scope: !10565, file: !3, line: 2458, type: !1012)
!10657 = !DILocation(line: 2458, column: 16, scope: !10565)
!10658 = !DILocalVariable(name: "sstatus", scope: !10565, file: !3, line: 2459, type: !1042)
!10659 = !DILocation(line: 2459, column: 6, scope: !10565)
!10660 = !DILocalVariable(name: "nr_unknown", scope: !10565, file: !3, line: 2460, type: !206)
!10661 = !DILocation(line: 2460, column: 6, scope: !10565)
!10662 = !DILocalVariable(name: "rc", scope: !10565, file: !3, line: 2460, type: !206)
!10663 = !DILocation(line: 2460, column: 18, scope: !10565)
!10664 = !DILocation(line: 2465, column: 2, scope: !10565)
!10665 = !DILocation(line: 2465, column: 31, scope: !10565)
!10666 = !DILocation(line: 2465, column: 9, scope: !10565)
!10667 = !DILocation(line: 2465, column: 42, scope: !10565)
!10668 = !DILocation(line: 2466, column: 12, scope: !10565)
!10669 = distinct !{!10669, !10664, !10668}
!10670 = !DILocation(line: 2467, column: 6, scope: !10671)
!10671 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 2467, column: 6)
!10672 = !DILocation(line: 2467, column: 12, scope: !10671)
!10673 = !DILocation(line: 2467, column: 18, scope: !10671)
!10674 = !DILocation(line: 2467, column: 6, scope: !10565)
!10675 = !DILocation(line: 2468, column: 13, scope: !10671)
!10676 = !DILocation(line: 2468, column: 3, scope: !10671)
!10677 = !DILocation(line: 2469, column: 6, scope: !10678)
!10678 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 2469, column: 6)
!10679 = !DILocation(line: 2469, column: 12, scope: !10678)
!10680 = !DILocation(line: 2469, column: 18, scope: !10678)
!10681 = !DILocation(line: 2469, column: 6, scope: !10565)
!10682 = !DILocation(line: 2470, column: 13, scope: !10678)
!10683 = !DILocation(line: 2470, column: 3, scope: !10678)
!10684 = !DILocation(line: 2471, column: 6, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 2471, column: 6)
!10686 = !DILocation(line: 2471, column: 12, scope: !10685)
!10687 = !DILocation(line: 2471, column: 18, scope: !10685)
!10688 = !DILocation(line: 2471, column: 6, scope: !10565)
!10689 = !DILocation(line: 2472, column: 13, scope: !10685)
!10690 = !DILocation(line: 2472, column: 3, scope: !10685)
!10691 = !DILocation(line: 2475, column: 6, scope: !10692)
!10692 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 2475, column: 6)
!10693 = !DILocation(line: 2475, column: 11, scope: !10692)
!10694 = !DILocation(line: 2475, column: 13, scope: !10692)
!10695 = !DILocation(line: 2475, column: 19, scope: !10692)
!10696 = !DILocation(line: 2475, column: 6, scope: !10565)
!10697 = !DILocation(line: 2476, column: 9, scope: !10698)
!10698 = distinct !DILexicalBlock(scope: !10692, file: !3, line: 2475, column: 40)
!10699 = !DILocation(line: 2476, column: 7, scope: !10698)
!10700 = !DILocalVariable(name: "__ret_warn_on", scope: !10701, file: !3, line: 2477, type: !206)
!10701 = distinct !DILexicalBlock(scope: !10698, file: !3, line: 2477, column: 3)
!10702 = !DILocation(line: 2477, column: 3, scope: !10701)
!10703 = !DILocation(line: 2477, column: 3, scope: !10704)
!10704 = distinct !DILexicalBlock(scope: !10701, file: !3, line: 2477, column: 3)
!10705 = !DILocation(line: 2477, column: 3, scope: !10706)
!10706 = distinct !DILexicalBlock(scope: !10704, file: !3, line: 2477, column: 3)
!10707 = !DILocation(line: 2477, column: 3, scope: !10708)
!10708 = distinct !DILexicalBlock(scope: !10706, file: !3, line: 2477, column: 3)
!10709 = !DILocation(line: 2477, column: 3, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !10706, file: !3, line: 2477, column: 3)
!10711 = !{i32 -2140046807, i32 -2140046778, i32 -2140046732, i32 -2140046674, i32 -2140046620, i32 -2140046566, i32 -2140046511, i32 -2140046480}
!10712 = !DILocation(line: 2477, column: 3, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10706, file: !3, line: 2477, column: 3)
!10714 = !{i32 -2140046074, i32 -2140046067, i32 -2140046015, i32 -2140045984, i32 -2140045954}
!10715 = !DILocation(line: 2477, column: 3, scope: !10716)
!10716 = distinct !DILexicalBlock(scope: !10706, file: !3, line: 2477, column: 3)
!10717 = !DILocation(line: 2478, column: 27, scope: !10698)
!10718 = !DILocation(line: 2478, column: 32, scope: !10698)
!10719 = !DILocation(line: 2478, column: 14, scope: !10698)
!10720 = !DILocation(line: 2478, column: 12, scope: !10698)
!10721 = !DILocation(line: 2480, column: 7, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !10698, file: !3, line: 2480, column: 7)
!10723 = !DILocation(line: 2480, column: 7, scope: !10698)
!10724 = !DILocation(line: 2481, column: 37, scope: !10722)
!10725 = !DILocation(line: 2481, column: 48, scope: !10722)
!10726 = !DILocation(line: 2481, column: 46, scope: !10722)
!10727 = !DILocation(line: 2481, column: 4, scope: !10722)
!10728 = !DILocation(line: 2482, column: 2, scope: !10698)
!10729 = !DILocation(line: 2484, column: 2, scope: !10565)
!10730 = !DILocation(line: 2484, column: 2, scope: !10597)
!10731 = !DILocalVariable(name: "__dummy", scope: !10732, file: !3, line: 2484, type: !1012)
!10732 = distinct !DILexicalBlock(scope: !10596, file: !3, line: 2484, column: 2)
!10733 = !DILocation(line: 2484, column: 2, scope: !10732)
!10734 = !DILocalVariable(name: "__dummy2", scope: !10732, file: !3, line: 2484, type: !1012)
!10735 = !DILocation(line: 2484, column: 2, scope: !10596)
!10736 = !DILocation(line: 2484, column: 2, scope: !10595)
!10737 = !DILocation(line: 2484, column: 2, scope: !10738)
!10738 = distinct !DILexicalBlock(scope: !10595, file: !3, line: 2484, column: 2)
!10739 = !DILocalVariable(name: "__dummy", scope: !10740, file: !3, line: 2484, type: !1012)
!10740 = distinct !DILexicalBlock(scope: !10741, file: !3, line: 2484, column: 2)
!10741 = distinct !DILexicalBlock(scope: !10738, file: !3, line: 2484, column: 2)
!10742 = !DILocation(line: 2484, column: 2, scope: !10740)
!10743 = !DILocalVariable(name: "__dummy2", scope: !10740, file: !3, line: 2484, type: !1012)
!10744 = !DILocation(line: 2484, column: 2, scope: !10741)
!10745 = !DILocation(line: 2484, column: 2, scope: !10594)
!10746 = !{i32 -2140044622}
!10747 = !DILocation(line: 2484, column: 2, scope: !10593)
!10748 = !DILocation(line: 329, column: 10, scope: !7389, inlinedAt: !10592)
!10749 = !DILocation(line: 329, column: 16, scope: !7389, inlinedAt: !10592)
!10750 = !DILocation(line: 2485, column: 2, scope: !10565)
!10751 = !DILocation(line: 2485, column: 6, scope: !10565)
!10752 = !DILocation(line: 2485, column: 13, scope: !10565)
!10753 = !DILocation(line: 2486, column: 25, scope: !10565)
!10754 = !DILocation(line: 2486, column: 29, scope: !10565)
!10755 = !DILocation(line: 2486, column: 35, scope: !10565)
!10756 = !DILocation(line: 409, column: 2, scope: !7438, inlinedAt: !10589)
!10757 = !DILocation(line: 409, column: 2, scope: !7443, inlinedAt: !10589)
!10758 = !DILocation(line: 409, column: 2, scope: !7444, inlinedAt: !10589)
!10759 = !DILocation(line: 409, column: 2, scope: !7451, inlinedAt: !10589)
!10760 = !DILocation(line: 409, column: 2, scope: !7454, inlinedAt: !10589)
!10761 = !DILocation(line: 2488, column: 21, scope: !10565)
!10762 = !DILocation(line: 2488, column: 2, scope: !10565)
!10763 = !DILocation(line: 2490, column: 2, scope: !10764)
!10764 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 2490, column: 2)
!10765 = !DILocation(line: 2490, column: 2, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10764, file: !3, line: 2490, column: 2)
!10767 = !DILocation(line: 2498, column: 3, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10766, file: !3, line: 2490, column: 35)
!10769 = !DILocation(line: 2498, column: 8, scope: !10768)
!10770 = !DILocation(line: 2498, column: 17, scope: !10768)
!10771 = !DILocation(line: 2499, column: 3, scope: !10768)
!10772 = !DILocation(line: 2499, column: 8, scope: !10768)
!10773 = !DILocation(line: 2499, column: 17, scope: !10768)
!10774 = !DILocation(line: 2506, column: 7, scope: !10775)
!10775 = distinct !DILexicalBlock(scope: !10768, file: !3, line: 2506, column: 7)
!10776 = !DILocation(line: 2506, column: 11, scope: !10775)
!10777 = !DILocation(line: 2506, column: 16, scope: !10775)
!10778 = !DILocation(line: 2506, column: 7, scope: !10768)
!10779 = !DILocation(line: 2507, column: 4, scope: !10775)
!10780 = !DILocation(line: 2507, column: 8, scope: !10775)
!10781 = !DILocation(line: 2507, column: 13, scope: !10775)
!10782 = !DILocation(line: 2507, column: 25, scope: !10775)
!10783 = !DILocation(line: 2507, column: 29, scope: !10775)
!10784 = !DILocation(line: 2508, column: 2, scope: !10768)
!10785 = distinct !{!10785, !10763, !10786}
!10786 = !DILocation(line: 2508, column: 2, scope: !10764)
!10787 = !DILocation(line: 2511, column: 8, scope: !10565)
!10788 = !DILocation(line: 2512, column: 2, scope: !10565)
!10789 = !DILocation(line: 2512, column: 7, scope: !10565)
!10790 = !DILocation(line: 2512, column: 9, scope: !10565)
!10791 = !DILocation(line: 2512, column: 16, scope: !10565)
!10792 = !DILocation(line: 2513, column: 6, scope: !10793)
!10793 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 2513, column: 6)
!10794 = !DILocation(line: 2513, column: 6, scope: !10565)
!10795 = !DILocation(line: 2514, column: 11, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10793, file: !3, line: 2513, column: 17)
!10797 = !DILocation(line: 2514, column: 9, scope: !10796)
!10798 = !DILocation(line: 2515, column: 3, scope: !10796)
!10799 = !DILocation(line: 2515, column: 8, scope: !10796)
!10800 = !DILocation(line: 2515, column: 10, scope: !10796)
!10801 = !DILocation(line: 2515, column: 17, scope: !10796)
!10802 = !DILocation(line: 2516, column: 2, scope: !10796)
!10803 = !DILocation(line: 2516, column: 13, scope: !10804)
!10804 = distinct !DILexicalBlock(scope: !10793, file: !3, line: 2516, column: 13)
!10805 = !DILocation(line: 2516, column: 13, scope: !10793)
!10806 = !DILocation(line: 2517, column: 11, scope: !10807)
!10807 = distinct !DILexicalBlock(scope: !10804, file: !3, line: 2516, column: 24)
!10808 = !DILocation(line: 2517, column: 9, scope: !10807)
!10809 = !DILocation(line: 2518, column: 3, scope: !10807)
!10810 = !DILocation(line: 2518, column: 8, scope: !10807)
!10811 = !DILocation(line: 2518, column: 10, scope: !10807)
!10812 = !DILocation(line: 2518, column: 17, scope: !10807)
!10813 = !DILocation(line: 2519, column: 2, scope: !10807)
!10814 = !DILocation(line: 2521, column: 6, scope: !10815)
!10815 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 2521, column: 6)
!10816 = !DILocation(line: 2521, column: 6, scope: !10565)
!10817 = !DILocalVariable(name: "deadline", scope: !10818, file: !3, line: 2522, type: !1012)
!10818 = distinct !DILexicalBlock(scope: !10815, file: !3, line: 2521, column: 16)
!10819 = !DILocation(line: 2522, column: 17, scope: !10818)
!10820 = !DILocation(line: 2522, column: 41, scope: !10818)
!10821 = !DILocation(line: 2522, column: 28, scope: !10818)
!10822 = !DILocation(line: 2525, column: 7, scope: !10823)
!10823 = distinct !DILexicalBlock(scope: !10818, file: !3, line: 2525, column: 7)
!10824 = !DILocation(line: 2525, column: 7, scope: !10818)
!10825 = !DILocation(line: 2526, column: 4, scope: !10826)
!10826 = distinct !DILexicalBlock(scope: !10823, file: !3, line: 2525, column: 14)
!10827 = !DILocation(line: 2526, column: 10, scope: !10826)
!10828 = !DILocation(line: 2526, column: 12, scope: !10826)
!10829 = !DILocation(line: 2526, column: 19, scope: !10826)
!10830 = !DILocation(line: 2527, column: 22, scope: !10826)
!10831 = !DILocation(line: 2527, column: 27, scope: !10826)
!10832 = !DILocation(line: 2527, column: 29, scope: !10826)
!10833 = !DILocation(line: 2527, column: 4, scope: !10826)
!10834 = !DILocation(line: 2527, column: 10, scope: !10826)
!10835 = !DILocation(line: 2527, column: 12, scope: !10826)
!10836 = !DILocation(line: 2527, column: 19, scope: !10826)
!10837 = !DILocation(line: 2528, column: 3, scope: !10826)
!10838 = !DILocation(line: 2530, column: 8, scope: !10818)
!10839 = !DILocation(line: 2530, column: 17, scope: !10818)
!10840 = !DILocation(line: 2530, column: 23, scope: !10818)
!10841 = !DILocation(line: 2530, column: 6, scope: !10818)
!10842 = !DILocation(line: 2536, column: 7, scope: !10843)
!10843 = distinct !DILexicalBlock(scope: !10818, file: !3, line: 2536, column: 7)
!10844 = !DILocation(line: 2536, column: 13, scope: !10843)
!10845 = !DILocation(line: 2536, column: 17, scope: !10843)
!10846 = !DILocation(line: 2536, column: 20, scope: !10843)
!10847 = !DILocation(line: 2536, column: 25, scope: !10843)
!10848 = !DILocation(line: 2536, column: 28, scope: !10843)
!10849 = !DILocation(line: 2536, column: 31, scope: !10843)
!10850 = !DILocation(line: 2536, column: 7, scope: !10818)
!10851 = !DILocalVariable(name: "tmp", scope: !10852, file: !3, line: 2537, type: !206)
!10852 = distinct !DILexicalBlock(scope: !10843, file: !3, line: 2536, column: 44)
!10853 = !DILocation(line: 2537, column: 8, scope: !10852)
!10854 = !DILocation(line: 2539, column: 10, scope: !10852)
!10855 = !DILocation(line: 2539, column: 19, scope: !10852)
!10856 = !DILocation(line: 2539, column: 26, scope: !10852)
!10857 = !DILocation(line: 2539, column: 8, scope: !10852)
!10858 = !DILocation(line: 2540, column: 8, scope: !10859)
!10859 = distinct !DILexicalBlock(scope: !10852, file: !3, line: 2540, column: 8)
!10860 = !DILocation(line: 2540, column: 12, scope: !10859)
!10861 = !DILocation(line: 2540, column: 8, scope: !10852)
!10862 = !DILocation(line: 2541, column: 10, scope: !10859)
!10863 = !DILocation(line: 2541, column: 8, scope: !10859)
!10864 = !DILocation(line: 2541, column: 5, scope: !10859)
!10865 = !DILocation(line: 2543, column: 21, scope: !10852)
!10866 = !DILocation(line: 2543, column: 27, scope: !10852)
!10867 = !DILocation(line: 2543, column: 29, scope: !10852)
!10868 = !DILocation(line: 2543, column: 4, scope: !10852)
!10869 = !DILocation(line: 2543, column: 9, scope: !10852)
!10870 = !DILocation(line: 2543, column: 11, scope: !10852)
!10871 = !DILocation(line: 2543, column: 18, scope: !10852)
!10872 = !DILocation(line: 2544, column: 3, scope: !10852)
!10873 = !DILocation(line: 2546, column: 7, scope: !10874)
!10874 = distinct !DILexicalBlock(scope: !10818, file: !3, line: 2546, column: 7)
!10875 = !DILocation(line: 2546, column: 7, scope: !10818)
!10876 = !DILocation(line: 2547, column: 8, scope: !10877)
!10877 = distinct !DILexicalBlock(scope: !10878, file: !3, line: 2547, column: 8)
!10878 = distinct !DILexicalBlock(scope: !10874, file: !3, line: 2546, column: 11)
!10879 = !DILocation(line: 2547, column: 11, scope: !10877)
!10880 = !DILocation(line: 2547, column: 8, scope: !10878)
!10881 = !DILocation(line: 2548, column: 5, scope: !10882)
!10882 = distinct !DILexicalBlock(scope: !10877, file: !3, line: 2547, column: 23)
!10883 = !DILocation(line: 2549, column: 5, scope: !10882)
!10884 = !DILocation(line: 2549, column: 10, scope: !10882)
!10885 = !DILocation(line: 2549, column: 12, scope: !10882)
!10886 = !DILocation(line: 2549, column: 19, scope: !10882)
!10887 = !DILocation(line: 2551, column: 5, scope: !10888)
!10888 = distinct !DILexicalBlock(scope: !10882, file: !3, line: 2551, column: 5)
!10889 = !DILocation(line: 2551, column: 5, scope: !10890)
!10890 = distinct !DILexicalBlock(scope: !10888, file: !3, line: 2551, column: 5)
!10891 = !DILocation(line: 2552, column: 6, scope: !10890)
!10892 = !DILocation(line: 2552, column: 14, scope: !10890)
!10893 = !DILocation(line: 2552, column: 19, scope: !10890)
!10894 = !DILocation(line: 2552, column: 26, scope: !10890)
!10895 = distinct !{!10895, !10887, !10896}
!10896 = !DILocation(line: 2552, column: 28, scope: !10888)
!10897 = !DILocation(line: 2554, column: 8, scope: !10882)
!10898 = !DILocation(line: 2555, column: 4, scope: !10882)
!10899 = !DILocation(line: 2556, column: 5, scope: !10877)
!10900 = !DILocation(line: 2559, column: 4, scope: !10878)
!10901 = !DILocation(line: 2565, column: 7, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !10818, file: !3, line: 2565, column: 7)
!10903 = !DILocation(line: 2565, column: 13, scope: !10902)
!10904 = !DILocation(line: 2565, column: 18, scope: !10902)
!10905 = !DILocation(line: 2565, column: 23, scope: !10902)
!10906 = !DILocation(line: 2565, column: 25, scope: !10902)
!10907 = !DILocation(line: 2565, column: 32, scope: !10902)
!10908 = !DILocation(line: 2565, column: 7, scope: !10818)
!10909 = !DILocation(line: 2566, column: 4, scope: !10910)
!10910 = distinct !DILexicalBlock(scope: !10911, file: !3, line: 2566, column: 4)
!10911 = distinct !DILexicalBlock(scope: !10902, file: !3, line: 2565, column: 49)
!10912 = !DILocation(line: 2566, column: 4, scope: !10913)
!10913 = distinct !DILexicalBlock(scope: !10910, file: !3, line: 2566, column: 4)
!10914 = !DILocation(line: 2567, column: 5, scope: !10913)
!10915 = !DILocation(line: 2567, column: 13, scope: !10913)
!10916 = !DILocation(line: 2567, column: 18, scope: !10913)
!10917 = !DILocation(line: 2567, column: 25, scope: !10913)
!10918 = distinct !{!10918, !10909, !10919}
!10919 = !DILocation(line: 2567, column: 27, scope: !10910)
!10920 = !DILocation(line: 2568, column: 9, scope: !10921)
!10921 = distinct !DILexicalBlock(scope: !10911, file: !3, line: 2568, column: 8)
!10922 = !DILocation(line: 2568, column: 13, scope: !10921)
!10923 = !DILocation(line: 2568, column: 20, scope: !10921)
!10924 = !DILocation(line: 2568, column: 40, scope: !10921)
!10925 = !DILocation(line: 2569, column: 25, scope: !10921)
!10926 = !DILocation(line: 2569, column: 8, scope: !10921)
!10927 = !DILocation(line: 2568, column: 8, scope: !10911)
!10928 = !DILocation(line: 2570, column: 22, scope: !10921)
!10929 = !DILocation(line: 2570, column: 5, scope: !10921)
!10930 = !DILocation(line: 2571, column: 7, scope: !10911)
!10931 = !DILocation(line: 2572, column: 4, scope: !10911)
!10932 = !DILocation(line: 2574, column: 2, scope: !10818)
!10933 = !DILabel(scope: !10565, name: "retry", file: !3, line: 2576)
!10934 = !DILocation(line: 2576, column: 2, scope: !10565)
!10935 = !DILocation(line: 2580, column: 23, scope: !10936)
!10936 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 2580, column: 6)
!10937 = !DILocation(line: 2580, column: 6, scope: !10936)
!10938 = !DILocation(line: 2580, column: 6, scope: !10565)
!10939 = !DILocation(line: 2581, column: 22, scope: !10936)
!10940 = !DILocation(line: 2581, column: 3, scope: !10936)
!10941 = !DILocation(line: 2583, column: 26, scope: !10565)
!10942 = !DILocation(line: 2583, column: 60, scope: !10565)
!10943 = !DILocation(line: 2583, column: 35, scope: !10565)
!10944 = !DILocation(line: 2583, column: 13, scope: !10565)
!10945 = !DILocation(line: 2583, column: 11, scope: !10565)
!10946 = !DILocation(line: 2585, column: 6, scope: !10947)
!10947 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 2585, column: 6)
!10948 = !DILocation(line: 2585, column: 6, scope: !10565)
!10949 = !DILocation(line: 2586, column: 7, scope: !10950)
!10950 = distinct !DILexicalBlock(scope: !10951, file: !3, line: 2586, column: 7)
!10951 = distinct !DILexicalBlock(scope: !10947, file: !3, line: 2585, column: 13)
!10952 = !DILocation(line: 2586, column: 7, scope: !10951)
!10953 = !DILocation(line: 2587, column: 4, scope: !10950)
!10954 = !DILocation(line: 2591, column: 21, scope: !10951)
!10955 = !DILocation(line: 2591, column: 3, scope: !10951)
!10956 = !DILocation(line: 2591, column: 8, scope: !10951)
!10957 = !DILocation(line: 2591, column: 19, scope: !10951)
!10958 = !DILocation(line: 2592, column: 7, scope: !10959)
!10959 = distinct !DILexicalBlock(scope: !10951, file: !3, line: 2592, column: 7)
!10960 = !DILocation(line: 2592, column: 16, scope: !10959)
!10961 = !DILocation(line: 2592, column: 13, scope: !10959)
!10962 = !DILocation(line: 2592, column: 7, scope: !10951)
!10963 = !DILocation(line: 2593, column: 4, scope: !10959)
!10964 = !DILocation(line: 2593, column: 9, scope: !10959)
!10965 = !DILocation(line: 2593, column: 11, scope: !10959)
!10966 = !DILocation(line: 2593, column: 17, scope: !10959)
!10967 = !DILocation(line: 2595, column: 4, scope: !10959)
!10968 = !DILocation(line: 2595, column: 9, scope: !10959)
!10969 = !DILocation(line: 2595, column: 11, scope: !10959)
!10970 = !DILocation(line: 2595, column: 17, scope: !10959)
!10971 = !DILocation(line: 2597, column: 21, scope: !10951)
!10972 = !DILocation(line: 2597, column: 27, scope: !10951)
!10973 = !DILocation(line: 2597, column: 34, scope: !10951)
!10974 = !DILocation(line: 2597, column: 43, scope: !10951)
!10975 = !DILocation(line: 2597, column: 8, scope: !10951)
!10976 = !DILocation(line: 2597, column: 6, scope: !10951)
!10977 = !DILocation(line: 2598, column: 7, scope: !10978)
!10978 = distinct !DILexicalBlock(scope: !10951, file: !3, line: 2598, column: 7)
!10979 = !DILocation(line: 2598, column: 10, scope: !10978)
!10980 = !DILocation(line: 2598, column: 13, scope: !10978)
!10981 = !DILocation(line: 2598, column: 16, scope: !10978)
!10982 = !DILocation(line: 2598, column: 7, scope: !10951)
!10983 = !DILocation(line: 2599, column: 18, scope: !10984)
!10984 = distinct !DILexicalBlock(scope: !10978, file: !3, line: 2598, column: 28)
!10985 = !DILocation(line: 2599, column: 16, scope: !10984)
!10986 = !DILocation(line: 2600, column: 4, scope: !10984)
!10987 = !DILocation(line: 2604, column: 7, scope: !10988)
!10988 = distinct !DILexicalBlock(scope: !10951, file: !3, line: 2604, column: 7)
!10989 = !DILocation(line: 2604, column: 13, scope: !10988)
!10990 = !DILocation(line: 2604, column: 16, scope: !10988)
!10991 = !DILocation(line: 2604, column: 25, scope: !10988)
!10992 = !DILocation(line: 2604, column: 22, scope: !10988)
!10993 = !DILocation(line: 2604, column: 7, scope: !10951)
!10994 = !DILocalVariable(name: "tmp", scope: !10995, file: !3, line: 2605, type: !206)
!10995 = distinct !DILexicalBlock(scope: !10988, file: !3, line: 2604, column: 36)
!10996 = !DILocation(line: 2605, column: 8, scope: !10995)
!10997 = !DILocation(line: 2607, column: 8, scope: !10998)
!10998 = distinct !DILexicalBlock(scope: !10995, file: !3, line: 2607, column: 8)
!10999 = !DILocation(line: 2607, column: 8, scope: !10995)
!11000 = !DILocation(line: 2608, column: 5, scope: !10998)
!11001 = !DILocation(line: 2610, column: 23, scope: !10995)
!11002 = !DILocation(line: 2610, column: 4, scope: !10995)
!11003 = !DILocation(line: 2611, column: 23, scope: !10995)
!11004 = !DILocation(line: 2611, column: 30, scope: !10995)
!11005 = !DILocation(line: 2611, column: 37, scope: !10995)
!11006 = !DILocation(line: 2611, column: 46, scope: !10995)
!11007 = !DILocation(line: 2611, column: 10, scope: !10995)
!11008 = !DILocation(line: 2611, column: 8, scope: !10995)
!11009 = !DILocation(line: 2613, column: 12, scope: !10995)
!11010 = !DILocation(line: 2613, column: 4, scope: !10995)
!11011 = !DILocation(line: 2615, column: 8, scope: !11012)
!11012 = distinct !DILexicalBlock(scope: !10995, file: !3, line: 2613, column: 17)
!11013 = !DILocation(line: 2615, column: 5, scope: !11012)
!11014 = !DILocation(line: 2617, column: 5, scope: !11012)
!11015 = !DILocation(line: 2619, column: 19, scope: !11012)
!11016 = !DILocation(line: 2619, column: 17, scope: !11012)
!11017 = !DILocation(line: 2620, column: 10, scope: !11012)
!11018 = !DILocation(line: 2620, column: 8, scope: !11012)
!11019 = !DILocation(line: 2621, column: 5, scope: !11012)
!11020 = !DILocation(line: 2623, column: 3, scope: !10995)
!11021 = !DILocation(line: 2626, column: 7, scope: !11022)
!11022 = distinct !DILexicalBlock(scope: !10951, file: !3, line: 2626, column: 7)
!11023 = !DILocation(line: 2626, column: 16, scope: !11022)
!11024 = !DILocation(line: 2626, column: 13, scope: !11022)
!11025 = !DILocation(line: 2626, column: 26, scope: !11022)
!11026 = !DILocation(line: 2627, column: 35, scope: !11022)
!11027 = !DILocation(line: 2627, column: 41, scope: !11022)
!11028 = !DILocation(line: 2627, column: 7, scope: !11022)
!11029 = !DILocation(line: 2626, column: 7, scope: !10951)
!11030 = !DILocation(line: 2628, column: 12, scope: !11031)
!11031 = distinct !DILexicalBlock(scope: !11022, file: !3, line: 2627, column: 46)
!11032 = !DILocation(line: 2628, column: 10, scope: !11031)
!11033 = !DILocation(line: 2630, column: 9, scope: !11034)
!11034 = distinct !DILexicalBlock(scope: !11031, file: !3, line: 2630, column: 8)
!11035 = !DILocation(line: 2630, column: 8, scope: !11031)
!11036 = !DILocation(line: 2631, column: 5, scope: !11037)
!11037 = distinct !DILexicalBlock(scope: !11034, file: !3, line: 2630, column: 16)
!11038 = !DILocation(line: 2633, column: 19, scope: !11037)
!11039 = !DILocation(line: 2633, column: 17, scope: !11037)
!11040 = !DILocation(line: 2634, column: 8, scope: !11037)
!11041 = !DILocation(line: 2635, column: 5, scope: !11037)
!11042 = !DILocation(line: 2638, column: 23, scope: !11031)
!11043 = !DILocation(line: 2638, column: 4, scope: !11031)
!11044 = !DILocation(line: 2639, column: 22, scope: !11031)
!11045 = !DILocation(line: 2639, column: 28, scope: !11031)
!11046 = !DILocation(line: 2639, column: 35, scope: !11031)
!11047 = !DILocation(line: 2639, column: 44, scope: !11031)
!11048 = !DILocation(line: 2639, column: 9, scope: !11031)
!11049 = !DILocation(line: 2639, column: 7, scope: !11031)
!11050 = !DILocation(line: 2640, column: 8, scope: !11051)
!11051 = distinct !DILexicalBlock(scope: !11031, file: !3, line: 2640, column: 8)
!11052 = !DILocation(line: 2640, column: 8, scope: !11031)
!11053 = !DILocation(line: 2641, column: 19, scope: !11054)
!11054 = distinct !DILexicalBlock(scope: !11051, file: !3, line: 2640, column: 12)
!11055 = !DILocation(line: 2641, column: 17, scope: !11054)
!11056 = !DILocation(line: 2642, column: 5, scope: !11054)
!11057 = !DILocation(line: 2644, column: 3, scope: !11031)
!11058 = !DILocation(line: 2645, column: 2, scope: !10951)
!11059 = !DILocation(line: 2646, column: 7, scope: !11060)
!11060 = distinct !DILexicalBlock(scope: !11061, file: !3, line: 2646, column: 7)
!11061 = distinct !DILexicalBlock(scope: !10947, file: !3, line: 2645, column: 9)
!11062 = !DILocation(line: 2646, column: 7, scope: !11061)
!11063 = !DILocation(line: 2647, column: 4, scope: !11060)
!11064 = !DILocation(line: 2649, column: 9, scope: !11065)
!11065 = distinct !DILexicalBlock(scope: !11061, file: !3, line: 2649, column: 7)
!11066 = !DILocation(line: 2649, column: 16, scope: !11065)
!11067 = !DILocation(line: 2649, column: 7, scope: !11061)
!11068 = !DILocation(line: 2650, column: 11, scope: !11065)
!11069 = !DILocation(line: 2650, column: 4, scope: !11065)
!11070 = !DILocation(line: 2656, column: 2, scope: !11071)
!11071 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 2656, column: 2)
!11072 = !DILocation(line: 2656, column: 2, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !11071, file: !3, line: 2656, column: 2)
!11074 = !DILocation(line: 2661, column: 3, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11073, file: !3, line: 2656, column: 35)
!11076 = !DILocation(line: 2661, column: 8, scope: !11075)
!11077 = !DILocation(line: 2661, column: 17, scope: !11075)
!11078 = !DILocation(line: 2662, column: 3, scope: !11075)
!11079 = !DILocation(line: 2662, column: 8, scope: !11075)
!11080 = !DILocation(line: 2662, column: 14, scope: !11075)
!11081 = !DILocation(line: 2664, column: 47, scope: !11082)
!11082 = distinct !DILexicalBlock(scope: !11075, file: !3, line: 2664, column: 7)
!11083 = !DILocation(line: 2664, column: 29, scope: !11082)
!11084 = !DILocation(line: 2664, column: 7, scope: !11082)
!11085 = !DILocation(line: 2664, column: 7, scope: !11075)
!11086 = !DILocation(line: 2665, column: 4, scope: !11082)
!11087 = !DILocation(line: 2668, column: 7, scope: !11088)
!11088 = distinct !DILexicalBlock(scope: !11075, file: !3, line: 2668, column: 7)
!11089 = !DILocation(line: 2668, column: 14, scope: !11088)
!11090 = !DILocation(line: 2668, column: 7, scope: !11075)
!11091 = !DILocation(line: 2669, column: 4, scope: !11088)
!11092 = !DILocation(line: 2669, column: 12, scope: !11088)
!11093 = !DILocation(line: 2669, column: 17, scope: !11088)
!11094 = !DILocation(line: 2669, column: 24, scope: !11088)
!11095 = !DILocation(line: 2670, column: 12, scope: !11096)
!11096 = distinct !DILexicalBlock(scope: !11088, file: !3, line: 2670, column: 12)
!11097 = !DILocation(line: 2670, column: 19, scope: !11096)
!11098 = !DILocation(line: 2670, column: 12, scope: !11088)
!11099 = !DILocation(line: 2671, column: 4, scope: !11096)
!11100 = !DILocation(line: 2671, column: 12, scope: !11096)
!11101 = !DILocation(line: 2671, column: 17, scope: !11096)
!11102 = !DILocation(line: 2671, column: 24, scope: !11096)
!11103 = !DILocation(line: 2672, column: 2, scope: !11075)
!11104 = distinct !{!11104, !11070, !11105}
!11105 = !DILocation(line: 2672, column: 2, scope: !11071)
!11106 = !DILocation(line: 2675, column: 20, scope: !11107)
!11107 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 2675, column: 6)
!11108 = !DILocation(line: 2675, column: 6, scope: !11107)
!11109 = !DILocation(line: 2675, column: 48, scope: !11107)
!11110 = !DILocation(line: 2675, column: 6, scope: !10565)
!11111 = !DILocation(line: 2676, column: 21, scope: !11107)
!11112 = !DILocation(line: 2676, column: 29, scope: !11107)
!11113 = !DILocation(line: 2676, column: 35, scope: !11107)
!11114 = !DILocation(line: 2676, column: 3, scope: !11107)
!11115 = !DILocation(line: 2676, column: 9, scope: !11107)
!11116 = !DILocation(line: 2676, column: 18, scope: !11107)
!11117 = !DILocation(line: 2677, column: 6, scope: !11118)
!11118 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 2677, column: 6)
!11119 = !DILocation(line: 2677, column: 12, scope: !11118)
!11120 = !DILocation(line: 2677, column: 29, scope: !11118)
!11121 = !DILocation(line: 2677, column: 15, scope: !11118)
!11122 = !DILocation(line: 2677, column: 58, scope: !11118)
!11123 = !DILocation(line: 2677, column: 6, scope: !10565)
!11124 = !DILocation(line: 2678, column: 22, scope: !11118)
!11125 = !DILocation(line: 2678, column: 30, scope: !11118)
!11126 = !DILocation(line: 2678, column: 36, scope: !11118)
!11127 = !DILocation(line: 2678, column: 3, scope: !11118)
!11128 = !DILocation(line: 2678, column: 10, scope: !11118)
!11129 = !DILocation(line: 2678, column: 19, scope: !11118)
!11130 = !DILocation(line: 2681, column: 23, scope: !11131)
!11131 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 2681, column: 6)
!11132 = !DILocation(line: 2681, column: 6, scope: !11131)
!11133 = !DILocation(line: 2681, column: 6, scope: !10565)
!11134 = !DILocation(line: 2682, column: 20, scope: !11131)
!11135 = !DILocation(line: 2682, column: 3, scope: !11131)
!11136 = !DILocation(line: 2691, column: 6, scope: !11137)
!11137 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 2691, column: 6)
!11138 = !DILocation(line: 2691, column: 6, scope: !10565)
!11139 = !DILocation(line: 2692, column: 3, scope: !11140)
!11140 = distinct !DILexicalBlock(scope: !11137, file: !3, line: 2691, column: 17)
!11141 = !DILocation(line: 2692, column: 13, scope: !11140)
!11142 = !DILocation(line: 2692, column: 19, scope: !11140)
!11143 = !DILocation(line: 2693, column: 7, scope: !11144)
!11144 = distinct !DILexicalBlock(scope: !11140, file: !3, line: 2693, column: 7)
!11145 = !DILocation(line: 2693, column: 7, scope: !11140)
!11146 = !DILocation(line: 2694, column: 4, scope: !11144)
!11147 = !DILocation(line: 2694, column: 14, scope: !11144)
!11148 = !DILocation(line: 2694, column: 21, scope: !11144)
!11149 = !DILocation(line: 2695, column: 2, scope: !11140)
!11150 = !DILocation(line: 2704, column: 2, scope: !10565)
!11151 = !DILocation(line: 2704, column: 2, scope: !10587)
!11152 = !DILocalVariable(name: "__dummy", scope: !11153, file: !3, line: 2704, type: !1012)
!11153 = distinct !DILexicalBlock(scope: !10586, file: !3, line: 2704, column: 2)
!11154 = !DILocation(line: 2704, column: 2, scope: !11153)
!11155 = !DILocalVariable(name: "__dummy2", scope: !11153, file: !3, line: 2704, type: !1012)
!11156 = !DILocation(line: 2704, column: 2, scope: !10586)
!11157 = !DILocation(line: 2704, column: 2, scope: !10585)
!11158 = !DILocation(line: 2704, column: 2, scope: !11159)
!11159 = distinct !DILexicalBlock(scope: !10585, file: !3, line: 2704, column: 2)
!11160 = !DILocalVariable(name: "__dummy", scope: !11161, file: !3, line: 2704, type: !1012)
!11161 = distinct !DILexicalBlock(scope: !11162, file: !3, line: 2704, column: 2)
!11162 = distinct !DILexicalBlock(scope: !11159, file: !3, line: 2704, column: 2)
!11163 = !DILocation(line: 2704, column: 2, scope: !11161)
!11164 = !DILocalVariable(name: "__dummy2", scope: !11161, file: !3, line: 2704, type: !1012)
!11165 = !DILocation(line: 2704, column: 2, scope: !11162)
!11166 = !DILocation(line: 2704, column: 2, scope: !10584)
!11167 = !{i32 -2140041997}
!11168 = !DILocation(line: 2704, column: 2, scope: !10583)
!11169 = !DILocation(line: 329, column: 10, scope: !7389, inlinedAt: !10582)
!11170 = !DILocation(line: 329, column: 16, scope: !7389, inlinedAt: !10582)
!11171 = !DILocation(line: 2705, column: 10, scope: !10565)
!11172 = !DILocation(line: 2705, column: 16, scope: !10565)
!11173 = !DILocation(line: 2705, column: 2, scope: !10565)
!11174 = !DILocation(line: 2706, column: 6, scope: !11175)
!11175 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 2706, column: 6)
!11176 = !DILocation(line: 2706, column: 6, scope: !10565)
!11177 = !DILocation(line: 2707, column: 11, scope: !11175)
!11178 = !DILocation(line: 2707, column: 18, scope: !11175)
!11179 = !DILocation(line: 2707, column: 3, scope: !11175)
!11180 = !DILocation(line: 2708, column: 2, scope: !10565)
!11181 = !DILocation(line: 2708, column: 6, scope: !10565)
!11182 = !DILocation(line: 2708, column: 13, scope: !10565)
!11183 = !DILocation(line: 2709, column: 25, scope: !10565)
!11184 = !DILocation(line: 2709, column: 31, scope: !10565)
!11185 = !DILocation(line: 2709, column: 35, scope: !10565)
!11186 = !DILocation(line: 2709, column: 41, scope: !10565)
!11187 = !DILocation(line: 409, column: 2, scope: !7438, inlinedAt: !10579)
!11188 = !DILocation(line: 409, column: 2, scope: !7443, inlinedAt: !10579)
!11189 = !DILocation(line: 409, column: 2, scope: !7444, inlinedAt: !10579)
!11190 = !DILocation(line: 409, column: 2, scope: !7451, inlinedAt: !10579)
!11191 = !DILocation(line: 409, column: 2, scope: !7454, inlinedAt: !10579)
!11192 = !DILocation(line: 2711, column: 6, scope: !11193)
!11193 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 2711, column: 6)
!11194 = !DILocation(line: 2711, column: 10, scope: !11193)
!11195 = !DILocation(line: 2711, column: 17, scope: !11193)
!11196 = !DILocation(line: 2711, column: 6, scope: !10565)
!11197 = !DILocation(line: 2712, column: 20, scope: !11193)
!11198 = !DILocation(line: 2712, column: 3, scope: !11193)
!11199 = !DILocation(line: 2722, column: 13, scope: !10565)
!11200 = !DILocation(line: 2723, column: 2, scope: !11201)
!11201 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 2723, column: 2)
!11202 = !DILocation(line: 2723, column: 2, scope: !11203)
!11203 = distinct !DILexicalBlock(scope: !11201, file: !3, line: 2723, column: 2)
!11204 = !DILocation(line: 2724, column: 46, scope: !11205)
!11205 = distinct !DILexicalBlock(scope: !11206, file: !3, line: 2724, column: 7)
!11206 = distinct !DILexicalBlock(scope: !11203, file: !3, line: 2723, column: 35)
!11207 = !DILocation(line: 2724, column: 28, scope: !11205)
!11208 = !DILocation(line: 2724, column: 7, scope: !11205)
!11209 = !DILocation(line: 2724, column: 7, scope: !11206)
!11210 = !DILocation(line: 2725, column: 8, scope: !11211)
!11211 = distinct !DILexicalBlock(scope: !11212, file: !3, line: 2725, column: 8)
!11212 = distinct !DILexicalBlock(scope: !11205, file: !3, line: 2724, column: 53)
!11213 = !DILocation(line: 2725, column: 16, scope: !11211)
!11214 = !DILocation(line: 2725, column: 21, scope: !11211)
!11215 = !DILocation(line: 2725, column: 28, scope: !11211)
!11216 = !DILocation(line: 2725, column: 8, scope: !11212)
!11217 = !DILocation(line: 2726, column: 5, scope: !11218)
!11218 = distinct !DILexicalBlock(scope: !11211, file: !3, line: 2725, column: 48)
!11219 = !DILocation(line: 2727, column: 5, scope: !11218)
!11220 = !DILocation(line: 2727, column: 13, scope: !11218)
!11221 = !DILocation(line: 2727, column: 18, scope: !11218)
!11222 = !DILocation(line: 2727, column: 25, scope: !11218)
!11223 = !DILocation(line: 2728, column: 15, scope: !11218)
!11224 = !DILocation(line: 2729, column: 4, scope: !11218)
!11225 = !DILocation(line: 2730, column: 3, scope: !11212)
!11226 = !DILocation(line: 2730, column: 54, scope: !11227)
!11227 = distinct !DILexicalBlock(scope: !11205, file: !3, line: 2730, column: 14)
!11228 = !DILocation(line: 2730, column: 36, scope: !11227)
!11229 = !DILocation(line: 2730, column: 14, scope: !11227)
!11230 = !DILocation(line: 2730, column: 14, scope: !11205)
!11231 = !DILocation(line: 2731, column: 26, scope: !11232)
!11232 = distinct !DILexicalBlock(scope: !11233, file: !3, line: 2731, column: 8)
!11233 = distinct !DILexicalBlock(scope: !11227, file: !3, line: 2730, column: 61)
!11234 = !DILocation(line: 2731, column: 34, scope: !11232)
!11235 = !DILocation(line: 2731, column: 39, scope: !11232)
!11236 = !DILocation(line: 2731, column: 8, scope: !11232)
!11237 = !DILocation(line: 2731, column: 8, scope: !11233)
!11238 = !DILocation(line: 2732, column: 5, scope: !11232)
!11239 = !DILocation(line: 2735, column: 4, scope: !11233)
!11240 = !DILocation(line: 2735, column: 12, scope: !11233)
!11241 = !DILocation(line: 2735, column: 17, scope: !11233)
!11242 = !DILocation(line: 2735, column: 24, scope: !11233)
!11243 = !DILocation(line: 2736, column: 3, scope: !11233)
!11244 = !DILocation(line: 2736, column: 14, scope: !11245)
!11245 = distinct !DILexicalBlock(scope: !11227, file: !3, line: 2736, column: 14)
!11246 = !DILocation(line: 2736, column: 22, scope: !11245)
!11247 = !DILocation(line: 2736, column: 27, scope: !11245)
!11248 = !DILocation(line: 2736, column: 34, scope: !11245)
!11249 = !DILocation(line: 2736, column: 14, scope: !11227)
!11250 = !DILocation(line: 2737, column: 4, scope: !11251)
!11251 = distinct !DILexicalBlock(scope: !11245, file: !3, line: 2736, column: 54)
!11252 = !DILocation(line: 2739, column: 4, scope: !11251)
!11253 = !DILocation(line: 2739, column: 12, scope: !11251)
!11254 = !DILocation(line: 2739, column: 17, scope: !11251)
!11255 = !DILocation(line: 2739, column: 24, scope: !11251)
!11256 = !DILocation(line: 2740, column: 3, scope: !11251)
!11257 = !DILocation(line: 2741, column: 2, scope: !11206)
!11258 = distinct !{!11258, !11200, !11259}
!11259 = !DILocation(line: 2741, column: 2, scope: !11201)
!11260 = !DILocation(line: 2743, column: 6, scope: !11261)
!11261 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 2743, column: 6)
!11262 = !DILocation(line: 2743, column: 15, scope: !11261)
!11263 = !DILocation(line: 2743, column: 18, scope: !11261)
!11264 = !DILocation(line: 2743, column: 6, scope: !10565)
!11265 = !DILocation(line: 2744, column: 7, scope: !11266)
!11266 = distinct !DILexicalBlock(scope: !11267, file: !3, line: 2744, column: 7)
!11267 = distinct !DILexicalBlock(scope: !11261, file: !3, line: 2743, column: 30)
!11268 = !DILocation(line: 2744, column: 13, scope: !11266)
!11269 = !DILocation(line: 2744, column: 11, scope: !11266)
!11270 = !DILocation(line: 2744, column: 7, scope: !11267)
!11271 = !DILocation(line: 2745, column: 4, scope: !11272)
!11272 = distinct !DILexicalBlock(scope: !11266, file: !3, line: 2744, column: 24)
!11273 = !DILocation(line: 2748, column: 18, scope: !11272)
!11274 = !DILocation(line: 2748, column: 16, scope: !11272)
!11275 = !DILocation(line: 2749, column: 7, scope: !11272)
!11276 = !DILocation(line: 2750, column: 4, scope: !11272)
!11277 = !DILocation(line: 2752, column: 3, scope: !11267)
!11278 = !DILocation(line: 2755, column: 2, scope: !11267)
!11279 = !DILocation(line: 2758, column: 14, scope: !10565)
!11280 = !DILocation(line: 2758, column: 2, scope: !10565)
!11281 = !DILocation(line: 2759, column: 6, scope: !11282)
!11282 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 2759, column: 6)
!11283 = !DILocation(line: 2759, column: 6, scope: !10565)
!11284 = !DILocation(line: 2760, column: 15, scope: !11282)
!11285 = !DILocation(line: 2760, column: 3, scope: !11282)
!11286 = !DILocation(line: 2761, column: 20, scope: !10565)
!11287 = !DILocation(line: 2761, column: 2, scope: !10565)
!11288 = !DILocation(line: 2761, column: 7, scope: !10565)
!11289 = !DILocation(line: 2761, column: 18, scope: !10565)
!11290 = !DILocation(line: 2762, column: 2, scope: !10565)
!11291 = !DILocation(line: 2762, column: 7, scope: !10565)
!11292 = !DILocation(line: 2762, column: 9, scope: !10565)
!11293 = !DILocation(line: 2762, column: 16, scope: !10565)
!11294 = !DILocation(line: 2763, column: 2, scope: !10565)
!11295 = !DILocation(line: 2763, column: 8, scope: !10565)
!11296 = !DILocation(line: 2763, column: 19, scope: !10565)
!11297 = !DILocation(line: 2765, column: 5, scope: !10565)
!11298 = !DILocation(line: 2765, column: 2, scope: !10565)
!11299 = !DILabel(scope: !10565, name: "out", file: !3, line: 2766)
!11300 = !DILocation(line: 2766, column: 2, scope: !10565)
!11301 = !DILocation(line: 2768, column: 2, scope: !10565)
!11302 = !DILocation(line: 2768, column: 7, scope: !10565)
!11303 = !DILocation(line: 2768, column: 9, scope: !10565)
!11304 = !DILocation(line: 2768, column: 15, scope: !10565)
!11305 = !DILocation(line: 2769, column: 6, scope: !11306)
!11306 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 2769, column: 6)
!11307 = !DILocation(line: 2769, column: 6, scope: !10565)
!11308 = !DILocation(line: 2770, column: 3, scope: !11306)
!11309 = !DILocation(line: 2770, column: 9, scope: !11306)
!11310 = !DILocation(line: 2770, column: 11, scope: !11306)
!11311 = !DILocation(line: 2770, column: 17, scope: !11306)
!11312 = !DILocation(line: 2772, column: 2, scope: !10565)
!11313 = !DILocation(line: 2772, column: 2, scope: !10577)
!11314 = !DILocalVariable(name: "__dummy", scope: !11315, file: !3, line: 2772, type: !1012)
!11315 = distinct !DILexicalBlock(scope: !10576, file: !3, line: 2772, column: 2)
!11316 = !DILocation(line: 2772, column: 2, scope: !11315)
!11317 = !DILocalVariable(name: "__dummy2", scope: !11315, file: !3, line: 2772, type: !1012)
!11318 = !DILocation(line: 2772, column: 2, scope: !10576)
!11319 = !DILocation(line: 2772, column: 2, scope: !10575)
!11320 = !DILocation(line: 2772, column: 2, scope: !11321)
!11321 = distinct !DILexicalBlock(scope: !10575, file: !3, line: 2772, column: 2)
!11322 = !DILocalVariable(name: "__dummy", scope: !11323, file: !3, line: 2772, type: !1012)
!11323 = distinct !DILexicalBlock(scope: !11324, file: !3, line: 2772, column: 2)
!11324 = distinct !DILexicalBlock(scope: !11321, file: !3, line: 2772, column: 2)
!11325 = !DILocation(line: 2772, column: 2, scope: !11323)
!11326 = !DILocalVariable(name: "__dummy2", scope: !11323, file: !3, line: 2772, type: !1012)
!11327 = !DILocation(line: 2772, column: 2, scope: !11324)
!11328 = !DILocation(line: 2772, column: 2, scope: !10574)
!11329 = !{i32 -2140040058}
!11330 = !DILocation(line: 2772, column: 2, scope: !10573)
!11331 = !DILocation(line: 329, column: 10, scope: !7389, inlinedAt: !10572)
!11332 = !DILocation(line: 329, column: 16, scope: !7389, inlinedAt: !10572)
!11333 = !DILocation(line: 2773, column: 2, scope: !10565)
!11334 = !DILocation(line: 2773, column: 6, scope: !10565)
!11335 = !DILocation(line: 2773, column: 13, scope: !10565)
!11336 = !DILocation(line: 2774, column: 25, scope: !10565)
!11337 = !DILocation(line: 2774, column: 29, scope: !10565)
!11338 = !DILocation(line: 2774, column: 35, scope: !10565)
!11339 = !DILocation(line: 409, column: 2, scope: !7438, inlinedAt: !10569)
!11340 = !DILocation(line: 409, column: 2, scope: !7443, inlinedAt: !10569)
!11341 = !DILocation(line: 409, column: 2, scope: !7444, inlinedAt: !10569)
!11342 = !DILocation(line: 409, column: 2, scope: !7451, inlinedAt: !10569)
!11343 = !DILocation(line: 409, column: 2, scope: !7454, inlinedAt: !10569)
!11344 = !DILocation(line: 2776, column: 9, scope: !10565)
!11345 = !DILocation(line: 2776, column: 2, scope: !10565)
!11346 = !DILabel(scope: !10565, name: "fail", file: !3, line: 2778)
!11347 = !DILocation(line: 2778, column: 2, scope: !10565)
!11348 = !DILocation(line: 2780, column: 24, scope: !11349)
!11349 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 2780, column: 6)
!11350 = !DILocation(line: 2780, column: 7, scope: !11349)
!11351 = !DILocation(line: 2780, column: 30, scope: !11349)
!11352 = !DILocation(line: 2781, column: 20, scope: !11349)
!11353 = !DILocation(line: 2781, column: 6, scope: !11349)
!11354 = !DILocation(line: 2780, column: 6, scope: !10565)
!11355 = !DILocation(line: 2782, column: 6, scope: !11349)
!11356 = !DILocation(line: 2782, column: 3, scope: !11349)
!11357 = !DILocation(line: 2784, column: 6, scope: !11358)
!11358 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 2784, column: 6)
!11359 = !DILocation(line: 2784, column: 13, scope: !11358)
!11360 = !DILocation(line: 2784, column: 10, scope: !11358)
!11361 = !DILocation(line: 2784, column: 6, scope: !10565)
!11362 = !DILocation(line: 2791, column: 24, scope: !11363)
!11363 = distinct !DILexicalBlock(scope: !11364, file: !3, line: 2791, column: 7)
!11364 = distinct !DILexicalBlock(scope: !11358, file: !3, line: 2784, column: 24)
!11365 = !DILocation(line: 2791, column: 7, scope: !11363)
!11366 = !DILocation(line: 2791, column: 7, scope: !11364)
!11367 = !DILocation(line: 2792, column: 21, scope: !11363)
!11368 = !DILocation(line: 2792, column: 4, scope: !11363)
!11369 = !DILocation(line: 2793, column: 3, scope: !11364)
!11370 = !DILocation(line: 2796, column: 8, scope: !10565)
!11371 = !DILocation(line: 2796, column: 6, scope: !10565)
!11372 = !DILocation(line: 2797, column: 6, scope: !11373)
!11373 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 2797, column: 6)
!11374 = !DILocation(line: 2797, column: 6, scope: !10565)
!11375 = !DILocalVariable(name: "delta", scope: !11376, file: !3, line: 2798, type: !1012)
!11376 = distinct !DILexicalBlock(scope: !11373, file: !3, line: 2797, column: 34)
!11377 = !DILocation(line: 2798, column: 17, scope: !11376)
!11378 = !DILocation(line: 2798, column: 25, scope: !11376)
!11379 = !DILocation(line: 2798, column: 36, scope: !11376)
!11380 = !DILocation(line: 2798, column: 34, scope: !11376)
!11381 = !DILocation(line: 2800, column: 3, scope: !11376)
!11382 = !DILocation(line: 2804, column: 18, scope: !11376)
!11383 = !DILocation(line: 2804, column: 3, scope: !11376)
!11384 = !DILocation(line: 2805, column: 3, scope: !11376)
!11385 = !DILocation(line: 2805, column: 10, scope: !11376)
!11386 = !DILocation(line: 2806, column: 45, scope: !11376)
!11387 = !DILocation(line: 2806, column: 12, scope: !11376)
!11388 = !DILocation(line: 2806, column: 10, scope: !11376)
!11389 = distinct !{!11389, !11384, !11390}
!11390 = !DILocation(line: 2806, column: 50, scope: !11376)
!11391 = !DILocation(line: 2807, column: 18, scope: !11376)
!11392 = !DILocation(line: 2807, column: 3, scope: !11376)
!11393 = !DILocation(line: 2808, column: 2, scope: !11376)
!11394 = !DILocation(line: 2814, column: 6, scope: !11395)
!11395 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 2814, column: 6)
!11396 = !DILocation(line: 2814, column: 9, scope: !11395)
!11397 = !DILocation(line: 2814, column: 6, scope: !10565)
!11398 = !DILocation(line: 2815, column: 24, scope: !11399)
!11399 = distinct !DILexicalBlock(scope: !11400, file: !3, line: 2815, column: 7)
!11400 = distinct !DILexicalBlock(scope: !11395, file: !3, line: 2814, column: 23)
!11401 = !DILocation(line: 2815, column: 7, scope: !11399)
!11402 = !DILocation(line: 2815, column: 7, scope: !11400)
!11403 = !DILocation(line: 2816, column: 21, scope: !11399)
!11404 = !DILocation(line: 2816, column: 4, scope: !11399)
!11405 = !DILocation(line: 2817, column: 3, scope: !11400)
!11406 = !DILocation(line: 2820, column: 6, scope: !11407)
!11407 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 2820, column: 6)
!11408 = !DILocation(line: 2820, column: 13, scope: !11407)
!11409 = !DILocation(line: 2820, column: 23, scope: !11407)
!11410 = !DILocation(line: 2820, column: 10, scope: !11407)
!11411 = !DILocation(line: 2820, column: 6, scope: !10565)
!11412 = !DILocation(line: 2821, column: 23, scope: !11413)
!11413 = distinct !DILexicalBlock(scope: !11407, file: !3, line: 2820, column: 28)
!11414 = !DILocation(line: 2821, column: 3, scope: !11413)
!11415 = !DILocation(line: 2822, column: 7, scope: !11416)
!11416 = distinct !DILexicalBlock(scope: !11413, file: !3, line: 2822, column: 7)
!11417 = !DILocation(line: 2822, column: 7, scope: !11413)
!11418 = !DILocation(line: 2823, column: 24, scope: !11416)
!11419 = !DILocation(line: 2823, column: 4, scope: !11416)
!11420 = !DILocation(line: 2824, column: 2, scope: !11413)
!11421 = !DILocation(line: 2824, column: 13, scope: !11422)
!11422 = distinct !DILexicalBlock(scope: !11407, file: !3, line: 2824, column: 13)
!11423 = !DILocation(line: 2824, column: 16, scope: !11422)
!11424 = !DILocation(line: 2824, column: 13, scope: !11407)
!11425 = !DILocation(line: 2825, column: 23, scope: !11422)
!11426 = !DILocation(line: 2825, column: 3, scope: !11422)
!11427 = !DILocation(line: 2827, column: 6, scope: !11428)
!11428 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 2827, column: 6)
!11429 = !DILocation(line: 2827, column: 6, scope: !10565)
!11430 = !DILocation(line: 2828, column: 11, scope: !11428)
!11431 = !DILocation(line: 2828, column: 9, scope: !11428)
!11432 = !DILocation(line: 2828, column: 3, scope: !11428)
!11433 = !DILocation(line: 2829, column: 2, scope: !10565)
!11434 = distinct !DISubprogram(name: "ata_is_host_link", scope: !178, file: !178, line: 1437, type: !11435, scopeLine: 1438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!11435 = !DISubroutineType(types: !11436)
!11436 = !{!1333, !11437}
!11437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11438, size: 64)
!11438 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6397)
!11439 = !DILocalVariable(name: "link", arg: 1, scope: !11434, file: !178, line: 1437, type: !11437)
!11440 = !DILocation(line: 1437, column: 60, scope: !11434)
!11441 = !DILocation(line: 1439, column: 9, scope: !11434)
!11442 = !DILocation(line: 1439, column: 18, scope: !11434)
!11443 = !DILocation(line: 1439, column: 24, scope: !11434)
!11444 = !DILocation(line: 1439, column: 28, scope: !11434)
!11445 = !DILocation(line: 1439, column: 14, scope: !11434)
!11446 = !DILocation(line: 1439, column: 33, scope: !11434)
!11447 = !DILocation(line: 1439, column: 36, scope: !11434)
!11448 = !DILocation(line: 1439, column: 44, scope: !11434)
!11449 = !DILocation(line: 1439, column: 50, scope: !11434)
!11450 = !DILocation(line: 1439, column: 54, scope: !11434)
!11451 = !DILocation(line: 1439, column: 41, scope: !11434)
!11452 = !DILocation(line: 1439, column: 2, scope: !11434)
!11453 = distinct !DISubprogram(name: "ata_do_reset", scope: !3, file: !3, line: 2418, type: !11454, scopeLine: 2421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!11454 = !DISubroutineType(types: !11455)
!11455 = !{!206, !6396, !6649, !3505, !1012, !1333}
!11456 = !DILocalVariable(name: "link", arg: 1, scope: !11453, file: !3, line: 2418, type: !6396)
!11457 = !DILocation(line: 2418, column: 42, scope: !11453)
!11458 = !DILocalVariable(name: "reset", arg: 2, scope: !11453, file: !3, line: 2418, type: !6649)
!11459 = !DILocation(line: 2418, column: 63, scope: !11453)
!11460 = !DILocalVariable(name: "classes", arg: 3, scope: !11453, file: !3, line: 2419, type: !3505)
!11461 = !DILocation(line: 2419, column: 18, scope: !11453)
!11462 = !DILocalVariable(name: "deadline", arg: 4, scope: !11453, file: !3, line: 2419, type: !1012)
!11463 = !DILocation(line: 2419, column: 41, scope: !11453)
!11464 = !DILocalVariable(name: "clear_classes", arg: 5, scope: !11453, file: !3, line: 2420, type: !1333)
!11465 = !DILocation(line: 2420, column: 9, scope: !11453)
!11466 = !DILocalVariable(name: "dev", scope: !11453, file: !3, line: 2422, type: !6392)
!11467 = !DILocation(line: 2422, column: 21, scope: !11453)
!11468 = !DILocation(line: 2424, column: 6, scope: !11469)
!11469 = distinct !DILexicalBlock(scope: !11453, file: !3, line: 2424, column: 6)
!11470 = !DILocation(line: 2424, column: 6, scope: !11453)
!11471 = !DILocation(line: 2425, column: 3, scope: !11472)
!11472 = distinct !DILexicalBlock(scope: !11469, file: !3, line: 2425, column: 3)
!11473 = !DILocation(line: 2425, column: 3, scope: !11474)
!11474 = distinct !DILexicalBlock(scope: !11472, file: !3, line: 2425, column: 3)
!11475 = !DILocation(line: 2426, column: 4, scope: !11474)
!11476 = !DILocation(line: 2426, column: 12, scope: !11474)
!11477 = !DILocation(line: 2426, column: 17, scope: !11474)
!11478 = !DILocation(line: 2426, column: 24, scope: !11474)
!11479 = distinct !{!11479, !11471, !11480}
!11480 = !DILocation(line: 2426, column: 26, scope: !11472)
!11481 = !DILocation(line: 2428, column: 9, scope: !11453)
!11482 = !DILocation(line: 2428, column: 15, scope: !11453)
!11483 = !DILocation(line: 2428, column: 21, scope: !11453)
!11484 = !DILocation(line: 2428, column: 30, scope: !11453)
!11485 = !DILocation(line: 2428, column: 2, scope: !11453)
!11486 = distinct !DISubprogram(name: "ata_eh_followup_srst_needed", scope: !3, file: !3, line: 2431, type: !11487, scopeLine: 2432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!11487 = !DISubroutineType(types: !11488)
!11488 = !{!206, !6396, !206}
!11489 = !DILocalVariable(name: "link", arg: 1, scope: !11486, file: !3, line: 2431, type: !6396)
!11490 = !DILocation(line: 2431, column: 57, scope: !11486)
!11491 = !DILocalVariable(name: "rc", arg: 2, scope: !11486, file: !3, line: 2431, type: !206)
!11492 = !DILocation(line: 2431, column: 67, scope: !11486)
!11493 = !DILocation(line: 2433, column: 7, scope: !11494)
!11494 = distinct !DILexicalBlock(scope: !11486, file: !3, line: 2433, column: 6)
!11495 = !DILocation(line: 2433, column: 13, scope: !11494)
!11496 = !DILocation(line: 2433, column: 19, scope: !11494)
!11497 = !DILocation(line: 2433, column: 40, scope: !11494)
!11498 = !DILocation(line: 2433, column: 60, scope: !11494)
!11499 = !DILocation(line: 2433, column: 43, scope: !11494)
!11500 = !DILocation(line: 2433, column: 6, scope: !11486)
!11501 = !DILocation(line: 2434, column: 3, scope: !11494)
!11502 = !DILocation(line: 2435, column: 6, scope: !11503)
!11503 = distinct !DILexicalBlock(scope: !11486, file: !3, line: 2435, column: 6)
!11504 = !DILocation(line: 2435, column: 9, scope: !11503)
!11505 = !DILocation(line: 2435, column: 6, scope: !11486)
!11506 = !DILocation(line: 2436, column: 3, scope: !11503)
!11507 = !DILocation(line: 2437, column: 25, scope: !11508)
!11508 = distinct !DILexicalBlock(scope: !11486, file: !3, line: 2437, column: 6)
!11509 = !DILocation(line: 2437, column: 31, scope: !11508)
!11510 = !DILocation(line: 2437, column: 6, scope: !11508)
!11511 = !DILocation(line: 2437, column: 35, scope: !11508)
!11512 = !DILocation(line: 2437, column: 55, scope: !11508)
!11513 = !DILocation(line: 2437, column: 38, scope: !11508)
!11514 = !DILocation(line: 2437, column: 6, scope: !11486)
!11515 = !DILocation(line: 2438, column: 3, scope: !11508)
!11516 = !DILocation(line: 2439, column: 2, scope: !11486)
!11517 = !DILocation(line: 2440, column: 1, scope: !11486)
!11518 = distinct !DISubprogram(name: "ata_class_enabled", scope: !178, file: !178, line: 1576, type: !11519, scopeLine: 1577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!11519 = !DISubroutineType(types: !11520)
!11520 = !{!7, !7}
!11521 = !DILocalVariable(name: "class", arg: 1, scope: !11518, file: !178, line: 1576, type: !7)
!11522 = !DILocation(line: 1576, column: 59, scope: !11518)
!11523 = !DILocation(line: 1578, column: 9, scope: !11518)
!11524 = !DILocation(line: 1578, column: 15, scope: !11518)
!11525 = !DILocation(line: 1578, column: 30, scope: !11518)
!11526 = !DILocation(line: 1578, column: 33, scope: !11518)
!11527 = !DILocation(line: 1578, column: 39, scope: !11518)
!11528 = !DILocation(line: 1578, column: 56, scope: !11518)
!11529 = !DILocation(line: 1579, column: 3, scope: !11518)
!11530 = !DILocation(line: 1579, column: 9, scope: !11518)
!11531 = !DILocation(line: 1579, column: 24, scope: !11518)
!11532 = !DILocation(line: 1579, column: 27, scope: !11518)
!11533 = !DILocation(line: 1579, column: 33, scope: !11518)
!11534 = !DILocation(line: 1579, column: 49, scope: !11518)
!11535 = !DILocation(line: 1580, column: 3, scope: !11518)
!11536 = !DILocation(line: 1580, column: 9, scope: !11518)
!11537 = !DILocation(line: 1578, column: 2, scope: !11518)
!11538 = distinct !DISubprogram(name: "ata_set_mode", scope: !3, file: !3, line: 3050, type: !6625, scopeLine: 3051, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!11539 = !DILocalVariable(name: "link", arg: 1, scope: !11538, file: !3, line: 3050, type: !6396)
!11540 = !DILocation(line: 3050, column: 35, scope: !11538)
!11541 = !DILocalVariable(name: "r_failed_dev", arg: 2, scope: !11538, file: !3, line: 3050, type: !6627)
!11542 = !DILocation(line: 3050, column: 61, scope: !11538)
!11543 = !DILocalVariable(name: "ap", scope: !11538, file: !3, line: 3052, type: !6375)
!11544 = !DILocation(line: 3052, column: 19, scope: !11538)
!11545 = !DILocation(line: 3052, column: 24, scope: !11538)
!11546 = !DILocation(line: 3052, column: 30, scope: !11538)
!11547 = !DILocalVariable(name: "dev", scope: !11538, file: !3, line: 3053, type: !6392)
!11548 = !DILocation(line: 3053, column: 21, scope: !11538)
!11549 = !DILocalVariable(name: "rc", scope: !11538, file: !3, line: 3054, type: !206)
!11550 = !DILocation(line: 3054, column: 6, scope: !11538)
!11551 = !DILocation(line: 3057, column: 2, scope: !11552)
!11552 = distinct !DILexicalBlock(scope: !11538, file: !3, line: 3057, column: 2)
!11553 = !DILocation(line: 3057, column: 2, scope: !11554)
!11554 = distinct !DILexicalBlock(scope: !11552, file: !3, line: 3057, column: 2)
!11555 = !DILocation(line: 3058, column: 9, scope: !11556)
!11556 = distinct !DILexicalBlock(scope: !11557, file: !3, line: 3058, column: 7)
!11557 = distinct !DILexicalBlock(scope: !11554, file: !3, line: 3057, column: 39)
!11558 = !DILocation(line: 3058, column: 14, scope: !11556)
!11559 = !DILocation(line: 3058, column: 20, scope: !11556)
!11560 = !DILocation(line: 3058, column: 7, scope: !11557)
!11561 = !DILocalVariable(name: "ent", scope: !11562, file: !3, line: 3059, type: !7252)
!11562 = distinct !DILexicalBlock(scope: !11556, file: !3, line: 3058, column: 47)
!11563 = !DILocation(line: 3059, column: 28, scope: !11562)
!11564 = !DILocation(line: 3061, column: 25, scope: !11562)
!11565 = !DILocation(line: 3061, column: 30, scope: !11562)
!11566 = !DILocation(line: 3061, column: 10, scope: !11562)
!11567 = !DILocation(line: 3061, column: 8, scope: !11562)
!11568 = !DILocation(line: 3062, column: 8, scope: !11569)
!11569 = distinct !DILexicalBlock(scope: !11562, file: !3, line: 3062, column: 8)
!11570 = !DILocation(line: 3062, column: 8, scope: !11562)
!11571 = !DILocation(line: 3063, column: 5, scope: !11569)
!11572 = !DILocation(line: 3063, column: 10, scope: !11569)
!11573 = !DILocation(line: 3063, column: 17, scope: !11569)
!11574 = !DILocation(line: 3064, column: 3, scope: !11562)
!11575 = !DILocation(line: 3065, column: 2, scope: !11557)
!11576 = distinct !{!11576, !11551, !11577}
!11577 = !DILocation(line: 3065, column: 2, scope: !11552)
!11578 = !DILocation(line: 3068, column: 6, scope: !11579)
!11579 = distinct !DILexicalBlock(scope: !11538, file: !3, line: 3068, column: 6)
!11580 = !DILocation(line: 3068, column: 10, scope: !11579)
!11581 = !DILocation(line: 3068, column: 15, scope: !11579)
!11582 = !DILocation(line: 3068, column: 6, scope: !11538)
!11583 = !DILocation(line: 3069, column: 8, scope: !11579)
!11584 = !DILocation(line: 3069, column: 12, scope: !11579)
!11585 = !DILocation(line: 3069, column: 17, scope: !11579)
!11586 = !DILocation(line: 3069, column: 26, scope: !11579)
!11587 = !DILocation(line: 3069, column: 32, scope: !11579)
!11588 = !DILocation(line: 3069, column: 6, scope: !11579)
!11589 = !DILocation(line: 3069, column: 3, scope: !11579)
!11590 = !DILocation(line: 3071, column: 24, scope: !11579)
!11591 = !DILocation(line: 3071, column: 30, scope: !11579)
!11592 = !DILocation(line: 3071, column: 8, scope: !11579)
!11593 = !DILocation(line: 3071, column: 6, scope: !11579)
!11594 = !DILocation(line: 3074, column: 2, scope: !11595)
!11595 = distinct !DILexicalBlock(scope: !11538, file: !3, line: 3074, column: 2)
!11596 = !DILocation(line: 3074, column: 2, scope: !11597)
!11597 = distinct !DILexicalBlock(scope: !11595, file: !3, line: 3074, column: 2)
!11598 = !DILocalVariable(name: "ehc", scope: !11599, file: !3, line: 3075, type: !7127)
!11599 = distinct !DILexicalBlock(scope: !11597, file: !3, line: 3074, column: 39)
!11600 = !DILocation(line: 3075, column: 26, scope: !11599)
!11601 = !DILocation(line: 3075, column: 33, scope: !11599)
!11602 = !DILocation(line: 3075, column: 39, scope: !11599)
!11603 = !DILocalVariable(name: "saved_xfer_mode", scope: !11599, file: !3, line: 3076, type: !2257)
!11604 = !DILocation(line: 3076, column: 6, scope: !11599)
!11605 = !DILocation(line: 3076, column: 24, scope: !11599)
!11606 = !DILocation(line: 3076, column: 29, scope: !11599)
!11607 = !DILocation(line: 3076, column: 45, scope: !11599)
!11608 = !DILocation(line: 3076, column: 50, scope: !11599)
!11609 = !DILocalVariable(name: "saved_ncq", scope: !11599, file: !3, line: 3077, type: !2257)
!11610 = !DILocation(line: 3077, column: 6, scope: !11599)
!11611 = !DILocation(line: 3077, column: 21, scope: !11599)
!11612 = !DILocation(line: 3077, column: 26, scope: !11599)
!11613 = !DILocation(line: 3077, column: 52, scope: !11599)
!11614 = !DILocation(line: 3077, column: 57, scope: !11599)
!11615 = !DILocation(line: 3077, column: 49, scope: !11599)
!11616 = !DILocation(line: 3077, column: 44, scope: !11599)
!11617 = !DILocation(line: 3077, column: 19, scope: !11599)
!11618 = !DILocation(line: 3077, column: 18, scope: !11599)
!11619 = !DILocation(line: 3079, column: 7, scope: !11620)
!11620 = distinct !DILexicalBlock(scope: !11599, file: !3, line: 3079, column: 7)
!11621 = !DILocation(line: 3079, column: 12, scope: !11620)
!11622 = !DILocation(line: 3079, column: 25, scope: !11620)
!11623 = !DILocation(line: 3079, column: 22, scope: !11620)
!11624 = !DILocation(line: 3079, column: 41, scope: !11620)
!11625 = !DILocation(line: 3080, column: 23, scope: !11620)
!11626 = !DILocation(line: 3080, column: 7, scope: !11620)
!11627 = !DILocation(line: 3080, column: 31, scope: !11620)
!11628 = !DILocation(line: 3080, column: 28, scope: !11620)
!11629 = !DILocation(line: 3079, column: 7, scope: !11599)
!11630 = !DILocation(line: 3081, column: 4, scope: !11620)
!11631 = !DILocation(line: 3081, column: 9, scope: !11620)
!11632 = !DILocation(line: 3081, column: 15, scope: !11620)
!11633 = !DILocation(line: 3082, column: 2, scope: !11599)
!11634 = distinct !{!11634, !11594, !11635}
!11635 = !DILocation(line: 3082, column: 2, scope: !11595)
!11636 = !DILocation(line: 3084, column: 9, scope: !11538)
!11637 = !DILocation(line: 3084, column: 2, scope: !11538)
!11638 = distinct !DISubprogram(name: "ata_ering_top", scope: !3, file: !3, line: 376, type: !11639, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!11639 = !DISubroutineType(types: !11640)
!11640 = !{!7252, !7248}
!11641 = !DILocalVariable(name: "ering", arg: 1, scope: !11638, file: !3, line: 376, type: !7248)
!11642 = !DILocation(line: 376, column: 64, scope: !11638)
!11643 = !DILocalVariable(name: "ent", scope: !11638, file: !3, line: 378, type: !7252)
!11644 = !DILocation(line: 378, column: 26, scope: !11638)
!11645 = !DILocation(line: 378, column: 33, scope: !11638)
!11646 = !DILocation(line: 378, column: 40, scope: !11638)
!11647 = !DILocation(line: 378, column: 45, scope: !11638)
!11648 = !DILocation(line: 378, column: 52, scope: !11638)
!11649 = !DILocation(line: 380, column: 6, scope: !11650)
!11650 = distinct !DILexicalBlock(scope: !11638, file: !3, line: 380, column: 6)
!11651 = !DILocation(line: 380, column: 11, scope: !11650)
!11652 = !DILocation(line: 380, column: 6, scope: !11638)
!11653 = !DILocation(line: 381, column: 10, scope: !11650)
!11654 = !DILocation(line: 381, column: 3, scope: !11650)
!11655 = !DILocation(line: 382, column: 2, scope: !11638)
!11656 = !DILocation(line: 383, column: 1, scope: !11638)
!11657 = distinct !DISubprogram(name: "ata_link_nr_enabled", scope: !3, file: !3, line: 3345, type: !9100, scopeLine: 3346, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!11658 = !DILocalVariable(name: "link", arg: 1, scope: !11657, file: !3, line: 3345, type: !6396)
!11659 = !DILocation(line: 3345, column: 42, scope: !11657)
!11660 = !DILocalVariable(name: "dev", scope: !11657, file: !3, line: 3347, type: !6392)
!11661 = !DILocation(line: 3347, column: 21, scope: !11657)
!11662 = !DILocalVariable(name: "cnt", scope: !11657, file: !3, line: 3348, type: !206)
!11663 = !DILocation(line: 3348, column: 6, scope: !11657)
!11664 = !DILocation(line: 3350, column: 2, scope: !11665)
!11665 = distinct !DILexicalBlock(scope: !11657, file: !3, line: 3350, column: 2)
!11666 = !DILocation(line: 3350, column: 2, scope: !11667)
!11667 = distinct !DILexicalBlock(scope: !11665, file: !3, line: 3350, column: 2)
!11668 = !DILocation(line: 3351, column: 6, scope: !11667)
!11669 = !DILocation(line: 3351, column: 3, scope: !11667)
!11670 = distinct !{!11670, !11664, !11671}
!11671 = !DILocation(line: 3351, column: 6, scope: !11665)
!11672 = !DILocation(line: 3352, column: 9, scope: !11657)
!11673 = !DILocation(line: 3352, column: 2, scope: !11657)
!11674 = distinct !DISubprogram(name: "ata_eh_recover", scope: !3, file: !3, line: 3536, type: !11675, scopeLine: 3540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!11675 = !DISubroutineType(types: !11676)
!11676 = !{!206, !6375, !6644, !6649, !6649, !6655, !11677}
!11677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6396, size: 64)
!11678 = !DILocation(line: 407, column: 64, scope: !7380, inlinedAt: !11679)
!11679 = distinct !DILocation(line: 3557, column: 4, scope: !11680)
!11680 = distinct !DILexicalBlock(scope: !11681, file: !3, line: 3553, column: 43)
!11681 = distinct !DILexicalBlock(scope: !11682, file: !3, line: 3553, column: 7)
!11682 = distinct !DILexicalBlock(scope: !11683, file: !3, line: 3549, column: 36)
!11683 = distinct !DILexicalBlock(scope: !11684, file: !3, line: 3549, column: 2)
!11684 = distinct !DILexicalBlock(scope: !11674, file: !3, line: 3549, column: 2)
!11685 = !DILocation(line: 407, column: 84, scope: !7380, inlinedAt: !11679)
!11686 = !DILocation(line: 327, column: 67, scope: !7389, inlinedAt: !11687)
!11687 = distinct !DILocation(line: 3555, column: 4, scope: !11688)
!11688 = distinct !DILexicalBlock(scope: !11689, file: !3, line: 3555, column: 4)
!11689 = distinct !DILexicalBlock(scope: !11690, file: !3, line: 3555, column: 4)
!11690 = distinct !DILexicalBlock(scope: !11691, file: !3, line: 3555, column: 4)
!11691 = distinct !DILexicalBlock(scope: !11692, file: !3, line: 3555, column: 4)
!11692 = distinct !DILexicalBlock(scope: !11680, file: !3, line: 3555, column: 4)
!11693 = !DILocalVariable(name: "ap", arg: 1, scope: !11674, file: !3, line: 3536, type: !6375)
!11694 = !DILocation(line: 3536, column: 37, scope: !11674)
!11695 = !DILocalVariable(name: "prereset", arg: 2, scope: !11674, file: !3, line: 3536, type: !6644)
!11696 = !DILocation(line: 3536, column: 59, scope: !11674)
!11697 = !DILocalVariable(name: "softreset", arg: 3, scope: !11674, file: !3, line: 3537, type: !6649)
!11698 = !DILocation(line: 3537, column: 21, scope: !11674)
!11699 = !DILocalVariable(name: "hardreset", arg: 4, scope: !11674, file: !3, line: 3537, type: !6649)
!11700 = !DILocation(line: 3537, column: 47, scope: !11674)
!11701 = !DILocalVariable(name: "postreset", arg: 5, scope: !11674, file: !3, line: 3538, type: !6655)
!11702 = !DILocation(line: 3538, column: 25, scope: !11674)
!11703 = !DILocalVariable(name: "r_failed_link", arg: 6, scope: !11674, file: !3, line: 3539, type: !11677)
!11704 = !DILocation(line: 3539, column: 24, scope: !11674)
!11705 = !DILocalVariable(name: "link", scope: !11674, file: !3, line: 3541, type: !6396)
!11706 = !DILocation(line: 3541, column: 19, scope: !11674)
!11707 = !DILocalVariable(name: "dev", scope: !11674, file: !3, line: 3542, type: !6392)
!11708 = !DILocation(line: 3542, column: 21, scope: !11674)
!11709 = !DILocalVariable(name: "rc", scope: !11674, file: !3, line: 3543, type: !206)
!11710 = !DILocation(line: 3543, column: 6, scope: !11674)
!11711 = !DILocalVariable(name: "nr_fails", scope: !11674, file: !3, line: 3543, type: !206)
!11712 = !DILocation(line: 3543, column: 10, scope: !11674)
!11713 = !DILocalVariable(name: "flags", scope: !11674, file: !3, line: 3544, type: !1012)
!11714 = !DILocation(line: 3544, column: 16, scope: !11674)
!11715 = !DILocalVariable(name: "deadline", scope: !11674, file: !3, line: 3544, type: !1012)
!11716 = !DILocation(line: 3544, column: 23, scope: !11674)
!11717 = !DILocation(line: 3549, column: 2, scope: !11684)
!11718 = !DILocation(line: 3549, column: 2, scope: !11683)
!11719 = !DILocalVariable(name: "ehc", scope: !11682, file: !3, line: 3550, type: !7127)
!11720 = !DILocation(line: 3550, column: 26, scope: !11682)
!11721 = !DILocation(line: 3550, column: 33, scope: !11682)
!11722 = !DILocation(line: 3550, column: 39, scope: !11682)
!11723 = !DILocation(line: 3553, column: 7, scope: !11681)
!11724 = !DILocation(line: 3553, column: 12, scope: !11681)
!11725 = !DILocation(line: 3553, column: 14, scope: !11681)
!11726 = !DILocation(line: 3553, column: 21, scope: !11681)
!11727 = !DILocation(line: 3553, column: 7, scope: !11682)
!11728 = !DILocation(line: 3554, column: 23, scope: !11680)
!11729 = !DILocation(line: 3554, column: 4, scope: !11680)
!11730 = !DILocation(line: 3555, column: 4, scope: !11680)
!11731 = !DILocation(line: 3555, column: 4, scope: !11692)
!11732 = !DILocalVariable(name: "__dummy", scope: !11733, file: !3, line: 3555, type: !1012)
!11733 = distinct !DILexicalBlock(scope: !11691, file: !3, line: 3555, column: 4)
!11734 = !DILocation(line: 3555, column: 4, scope: !11733)
!11735 = !DILocalVariable(name: "__dummy2", scope: !11733, file: !3, line: 3555, type: !1012)
!11736 = !DILocation(line: 3555, column: 4, scope: !11691)
!11737 = !DILocation(line: 3555, column: 4, scope: !11690)
!11738 = !DILocation(line: 3555, column: 4, scope: !11739)
!11739 = distinct !DILexicalBlock(scope: !11690, file: !3, line: 3555, column: 4)
!11740 = !DILocalVariable(name: "__dummy", scope: !11741, file: !3, line: 3555, type: !1012)
!11741 = distinct !DILexicalBlock(scope: !11742, file: !3, line: 3555, column: 4)
!11742 = distinct !DILexicalBlock(scope: !11739, file: !3, line: 3555, column: 4)
!11743 = !DILocation(line: 3555, column: 4, scope: !11741)
!11744 = !DILocalVariable(name: "__dummy2", scope: !11741, file: !3, line: 3555, type: !1012)
!11745 = !DILocation(line: 3555, column: 4, scope: !11742)
!11746 = !DILocation(line: 3555, column: 4, scope: !11689)
!11747 = !{i32 -2140022085}
!11748 = !DILocation(line: 3555, column: 4, scope: !11688)
!11749 = !DILocation(line: 329, column: 10, scope: !7389, inlinedAt: !11687)
!11750 = !DILocation(line: 329, column: 16, scope: !7389, inlinedAt: !11687)
!11751 = !DILocation(line: 3556, column: 4, scope: !11680)
!11752 = !DILocation(line: 3556, column: 10, scope: !11680)
!11753 = !DILocation(line: 3556, column: 16, scope: !11680)
!11754 = !DILocation(line: 3557, column: 27, scope: !11680)
!11755 = !DILocation(line: 3557, column: 31, scope: !11680)
!11756 = !DILocation(line: 3557, column: 37, scope: !11680)
!11757 = !DILocation(line: 409, column: 2, scope: !7438, inlinedAt: !11679)
!11758 = !DILocation(line: 409, column: 2, scope: !7443, inlinedAt: !11679)
!11759 = !DILocation(line: 409, column: 2, scope: !7444, inlinedAt: !11679)
!11760 = !DILocation(line: 409, column: 2, scope: !7451, inlinedAt: !11679)
!11761 = !DILocation(line: 409, column: 2, scope: !7454, inlinedAt: !11679)
!11762 = !DILocation(line: 3558, column: 16, scope: !11680)
!11763 = !DILocation(line: 3558, column: 4, scope: !11680)
!11764 = !DILocation(line: 3559, column: 3, scope: !11680)
!11765 = !DILocation(line: 3561, column: 3, scope: !11766)
!11766 = distinct !DILexicalBlock(scope: !11682, file: !3, line: 3561, column: 3)
!11767 = !DILocation(line: 3561, column: 3, scope: !11768)
!11768 = distinct !DILexicalBlock(scope: !11766, file: !3, line: 3561, column: 3)
!11769 = !DILocation(line: 3562, column: 8, scope: !11770)
!11770 = distinct !DILexicalBlock(scope: !11771, file: !3, line: 3562, column: 8)
!11771 = distinct !DILexicalBlock(scope: !11768, file: !3, line: 3561, column: 36)
!11772 = !DILocation(line: 3562, column: 14, scope: !11770)
!11773 = !DILocation(line: 3562, column: 20, scope: !11770)
!11774 = !DILocation(line: 3562, column: 8, scope: !11771)
!11775 = !DILocation(line: 3563, column: 5, scope: !11770)
!11776 = !DILocation(line: 3563, column: 10, scope: !11770)
!11777 = !DILocation(line: 3563, column: 16, scope: !11770)
!11778 = !DILocation(line: 3563, column: 21, scope: !11770)
!11779 = !DILocation(line: 3563, column: 28, scope: !11770)
!11780 = !DILocation(line: 3565, column: 5, scope: !11770)
!11781 = !DILocation(line: 3565, column: 10, scope: !11770)
!11782 = !DILocation(line: 3565, column: 16, scope: !11770)
!11783 = !DILocation(line: 3565, column: 21, scope: !11770)
!11784 = !DILocation(line: 3565, column: 28, scope: !11770)
!11785 = !DILocation(line: 3568, column: 21, scope: !11771)
!11786 = !DILocation(line: 3568, column: 26, scope: !11771)
!11787 = !DILocation(line: 3568, column: 28, scope: !11771)
!11788 = !DILocation(line: 3568, column: 39, scope: !11771)
!11789 = !DILocation(line: 3568, column: 44, scope: !11771)
!11790 = !DILocation(line: 3568, column: 51, scope: !11771)
!11791 = !DILocation(line: 3568, column: 4, scope: !11771)
!11792 = !DILocation(line: 3568, column: 9, scope: !11771)
!11793 = !DILocation(line: 3568, column: 11, scope: !11771)
!11794 = !DILocation(line: 3568, column: 18, scope: !11771)
!11795 = !DILocation(line: 3570, column: 4, scope: !11771)
!11796 = !DILocation(line: 3570, column: 9, scope: !11771)
!11797 = !DILocation(line: 3570, column: 11, scope: !11771)
!11798 = !DILocation(line: 3570, column: 22, scope: !11771)
!11799 = !DILocation(line: 3570, column: 27, scope: !11771)
!11800 = !DILocation(line: 3570, column: 34, scope: !11771)
!11801 = !DILocation(line: 3573, column: 8, scope: !11802)
!11802 = distinct !DILexicalBlock(scope: !11771, file: !3, line: 3573, column: 8)
!11803 = !DILocation(line: 3573, column: 13, scope: !11802)
!11804 = !DILocation(line: 3573, column: 19, scope: !11802)
!11805 = !DILocation(line: 3573, column: 8, scope: !11771)
!11806 = !DILocation(line: 3574, column: 23, scope: !11802)
!11807 = !DILocation(line: 3574, column: 5, scope: !11802)
!11808 = !DILocation(line: 3577, column: 25, scope: !11809)
!11809 = distinct !DILexicalBlock(scope: !11771, file: !3, line: 3577, column: 8)
!11810 = !DILocation(line: 3577, column: 9, scope: !11809)
!11811 = !DILocation(line: 3577, column: 8, scope: !11771)
!11812 = !DILocation(line: 3578, column: 27, scope: !11809)
!11813 = !DILocation(line: 3578, column: 5, scope: !11809)
!11814 = !DILocation(line: 3579, column: 3, scope: !11771)
!11815 = distinct !{!11815, !11765, !11816}
!11816 = !DILocation(line: 3579, column: 3, scope: !11766)
!11817 = !DILocation(line: 3580, column: 2, scope: !11682)
!11818 = distinct !{!11818, !11717, !11819}
!11819 = !DILocation(line: 3580, column: 2, scope: !11684)
!11820 = !DILabel(scope: !11674, name: "retry", file: !3, line: 3582)
!11821 = !DILocation(line: 3582, column: 2, scope: !11674)
!11822 = !DILocation(line: 3583, column: 5, scope: !11674)
!11823 = !DILocation(line: 3586, column: 6, scope: !11824)
!11824 = distinct !DILexicalBlock(scope: !11674, file: !3, line: 3586, column: 6)
!11825 = !DILocation(line: 3586, column: 10, scope: !11824)
!11826 = !DILocation(line: 3586, column: 17, scope: !11824)
!11827 = !DILocation(line: 3586, column: 6, scope: !11674)
!11828 = !DILocation(line: 3587, column: 3, scope: !11824)
!11829 = !DILocation(line: 3590, column: 2, scope: !11830)
!11830 = distinct !DILexicalBlock(scope: !11674, file: !3, line: 3590, column: 2)
!11831 = !DILocation(line: 3590, column: 2, scope: !11832)
!11832 = distinct !DILexicalBlock(scope: !11830, file: !3, line: 3590, column: 2)
!11833 = !DILocalVariable(name: "ehc", scope: !11834, file: !3, line: 3591, type: !7127)
!11834 = distinct !DILexicalBlock(scope: !11832, file: !3, line: 3590, column: 36)
!11835 = !DILocation(line: 3591, column: 26, scope: !11834)
!11836 = !DILocation(line: 3591, column: 33, scope: !11834)
!11837 = !DILocation(line: 3591, column: 39, scope: !11834)
!11838 = !DILocation(line: 3594, column: 28, scope: !11839)
!11839 = distinct !DILexicalBlock(scope: !11834, file: !3, line: 3594, column: 7)
!11840 = !DILocation(line: 3594, column: 7, scope: !11839)
!11841 = !DILocation(line: 3594, column: 7, scope: !11834)
!11842 = !DILocation(line: 3595, column: 4, scope: !11839)
!11843 = !DILocation(line: 3595, column: 9, scope: !11839)
!11844 = !DILocation(line: 3595, column: 11, scope: !11839)
!11845 = !DILocation(line: 3595, column: 18, scope: !11839)
!11846 = !DILocation(line: 3597, column: 3, scope: !11847)
!11847 = distinct !DILexicalBlock(scope: !11834, file: !3, line: 3597, column: 3)
!11848 = !DILocation(line: 3597, column: 3, scope: !11849)
!11849 = distinct !DILexicalBlock(scope: !11847, file: !3, line: 3597, column: 3)
!11850 = !DILocation(line: 3598, column: 4, scope: !11849)
!11851 = !DILocation(line: 3598, column: 9, scope: !11849)
!11852 = !DILocation(line: 3598, column: 17, scope: !11849)
!11853 = !DILocation(line: 3598, column: 22, scope: !11849)
!11854 = !DILocation(line: 3598, column: 29, scope: !11849)
!11855 = distinct !{!11855, !11846, !11856}
!11856 = !DILocation(line: 3598, column: 31, scope: !11847)
!11857 = !DILocation(line: 3599, column: 2, scope: !11834)
!11858 = distinct !{!11858, !11829, !11859}
!11859 = !DILocation(line: 3599, column: 2, scope: !11830)
!11860 = !DILocation(line: 3602, column: 2, scope: !11861)
!11861 = distinct !DILexicalBlock(scope: !11674, file: !3, line: 3602, column: 2)
!11862 = !DILocation(line: 3602, column: 2, scope: !11863)
!11863 = distinct !DILexicalBlock(scope: !11861, file: !3, line: 3602, column: 2)
!11864 = !DILocalVariable(name: "ehc", scope: !11865, file: !3, line: 3603, type: !7127)
!11865 = distinct !DILexicalBlock(scope: !11863, file: !3, line: 3602, column: 36)
!11866 = !DILocation(line: 3603, column: 26, scope: !11865)
!11867 = !DILocation(line: 3603, column: 33, scope: !11865)
!11868 = !DILocation(line: 3603, column: 39, scope: !11865)
!11869 = !DILocation(line: 3605, column: 9, scope: !11870)
!11870 = distinct !DILexicalBlock(scope: !11865, file: !3, line: 3605, column: 7)
!11871 = !DILocation(line: 3605, column: 14, scope: !11870)
!11872 = !DILocation(line: 3605, column: 16, scope: !11870)
!11873 = !DILocation(line: 3605, column: 23, scope: !11870)
!11874 = !DILocation(line: 3605, column: 7, scope: !11865)
!11875 = !DILocation(line: 3606, column: 4, scope: !11870)
!11876 = !DILocation(line: 3608, column: 21, scope: !11865)
!11877 = !DILocation(line: 3608, column: 46, scope: !11865)
!11878 = !DILocation(line: 3608, column: 27, scope: !11865)
!11879 = !DILocation(line: 3609, column: 7, scope: !11865)
!11880 = !DILocation(line: 3609, column: 17, scope: !11865)
!11881 = !DILocation(line: 3609, column: 28, scope: !11865)
!11882 = !DILocation(line: 3609, column: 39, scope: !11865)
!11883 = !DILocation(line: 3608, column: 8, scope: !11865)
!11884 = !DILocation(line: 3608, column: 6, scope: !11865)
!11885 = !DILocation(line: 3610, column: 7, scope: !11886)
!11886 = distinct !DILexicalBlock(scope: !11865, file: !3, line: 3610, column: 7)
!11887 = !DILocation(line: 3610, column: 7, scope: !11865)
!11888 = !DILocation(line: 3611, column: 4, scope: !11889)
!11889 = distinct !DILexicalBlock(scope: !11886, file: !3, line: 3610, column: 11)
!11890 = !DILocation(line: 3612, column: 4, scope: !11889)
!11891 = !DILocation(line: 3614, column: 2, scope: !11865)
!11892 = distinct !{!11892, !11860, !11893}
!11893 = !DILocation(line: 3614, column: 2, scope: !11861)
!11894 = !DILocation(line: 3616, column: 2, scope: !11674)
!11895 = !DILocalVariable(name: "now", scope: !11896, file: !3, line: 3617, type: !1012)
!11896 = distinct !DILexicalBlock(scope: !11674, file: !3, line: 3616, column: 5)
!11897 = !DILocation(line: 3617, column: 17, scope: !11896)
!11898 = !DILocation(line: 3623, column: 27, scope: !11896)
!11899 = !DILocation(line: 3623, column: 3, scope: !11896)
!11900 = !DILocation(line: 3625, column: 14, scope: !11896)
!11901 = !DILocation(line: 3625, column: 12, scope: !11896)
!11902 = !DILocation(line: 3626, column: 3, scope: !11903)
!11903 = distinct !DILexicalBlock(scope: !11896, file: !3, line: 3626, column: 3)
!11904 = !DILocation(line: 3626, column: 3, scope: !11905)
!11905 = distinct !DILexicalBlock(scope: !11903, file: !3, line: 3626, column: 3)
!11906 = !DILocation(line: 3627, column: 4, scope: !11907)
!11907 = distinct !DILexicalBlock(scope: !11908, file: !3, line: 3627, column: 4)
!11908 = distinct !DILexicalBlock(scope: !11905, file: !3, line: 3626, column: 37)
!11909 = !DILocation(line: 3627, column: 4, scope: !11910)
!11910 = distinct !DILexicalBlock(scope: !11907, file: !3, line: 3627, column: 4)
!11911 = !DILocalVariable(name: "ehc", scope: !11912, file: !3, line: 3628, type: !7127)
!11912 = distinct !DILexicalBlock(scope: !11910, file: !3, line: 3627, column: 37)
!11913 = !DILocation(line: 3628, column: 28, scope: !11912)
!11914 = !DILocation(line: 3628, column: 35, scope: !11912)
!11915 = !DILocation(line: 3628, column: 41, scope: !11912)
!11916 = !DILocalVariable(name: "tmp", scope: !11912, file: !3, line: 3629, type: !1012)
!11917 = !DILocation(line: 3629, column: 19, scope: !11912)
!11918 = !DILocation(line: 3631, column: 9, scope: !11919)
!11919 = distinct !DILexicalBlock(scope: !11912, file: !3, line: 3631, column: 9)
!11920 = !DILocation(line: 3631, column: 14, scope: !11919)
!11921 = !DILocation(line: 3631, column: 20, scope: !11919)
!11922 = !DILocation(line: 3631, column: 35, scope: !11919)
!11923 = !DILocation(line: 3632, column: 9, scope: !11919)
!11924 = !DILocation(line: 3632, column: 14, scope: !11919)
!11925 = !DILocation(line: 3632, column: 20, scope: !11919)
!11926 = !DILocation(line: 3631, column: 9, scope: !11912)
!11927 = !DILocation(line: 3633, column: 6, scope: !11919)
!11928 = !DILocation(line: 3634, column: 11, scope: !11929)
!11929 = distinct !DILexicalBlock(scope: !11912, file: !3, line: 3634, column: 9)
!11930 = !DILocation(line: 3634, column: 16, scope: !11929)
!11931 = !DILocation(line: 3634, column: 18, scope: !11929)
!11932 = !DILocation(line: 3634, column: 29, scope: !11929)
!11933 = !DILocation(line: 3634, column: 34, scope: !11929)
!11934 = !DILocation(line: 3634, column: 41, scope: !11929)
!11935 = !DILocation(line: 3634, column: 9, scope: !11912)
!11936 = !DILocation(line: 3636, column: 6, scope: !11929)
!11937 = !DILocation(line: 3637, column: 11, scope: !11912)
!11938 = !DILocation(line: 3637, column: 16, scope: !11912)
!11939 = !DILocation(line: 3637, column: 9, scope: !11912)
!11940 = !DILocation(line: 3638, column: 9, scope: !11941)
!11941 = distinct !DILexicalBlock(scope: !11912, file: !3, line: 3638, column: 9)
!11942 = !DILocation(line: 3638, column: 9, scope: !11912)
!11943 = !DILocation(line: 3639, column: 17, scope: !11941)
!11944 = !DILocation(line: 3639, column: 15, scope: !11941)
!11945 = !DILocation(line: 3639, column: 6, scope: !11941)
!11946 = !DILocation(line: 3640, column: 14, scope: !11947)
!11947 = distinct !DILexicalBlock(scope: !11941, file: !3, line: 3640, column: 14)
!11948 = !DILocation(line: 3640, column: 14, scope: !11941)
!11949 = !DILocation(line: 3641, column: 6, scope: !11947)
!11950 = !DILocation(line: 3642, column: 9, scope: !11951)
!11951 = distinct !DILexicalBlock(scope: !11912, file: !3, line: 3642, column: 9)
!11952 = !DILocation(line: 3642, column: 14, scope: !11951)
!11953 = !DILocation(line: 3642, column: 36, scope: !11951)
!11954 = !DILocation(line: 3642, column: 41, scope: !11951)
!11955 = !DILocation(line: 3642, column: 33, scope: !11951)
!11956 = !DILocation(line: 3642, column: 28, scope: !11951)
!11957 = !DILocation(line: 3642, column: 9, scope: !11912)
!11958 = !DILocation(line: 3643, column: 6, scope: !11951)
!11959 = !DILocation(line: 3645, column: 27, scope: !11912)
!11960 = !DILocation(line: 3645, column: 5, scope: !11912)
!11961 = !DILocation(line: 3646, column: 4, scope: !11912)
!11962 = distinct !{!11962, !11906, !11963}
!11963 = !DILocation(line: 3646, column: 4, scope: !11907)
!11964 = !DILocation(line: 3647, column: 3, scope: !11908)
!11965 = distinct !{!11965, !11902, !11966}
!11966 = !DILocation(line: 3647, column: 3, scope: !11903)
!11967 = !DILocation(line: 3649, column: 9, scope: !11896)
!11968 = !DILocation(line: 3649, column: 7, scope: !11896)
!11969 = !DILocation(line: 3650, column: 7, scope: !11970)
!11970 = distinct !DILexicalBlock(scope: !11896, file: !3, line: 3650, column: 7)
!11971 = !DILocation(line: 3650, column: 7, scope: !11896)
!11972 = !DILocation(line: 3651, column: 4, scope: !11970)
!11973 = !DILocation(line: 3653, column: 18, scope: !11896)
!11974 = !DILocation(line: 3653, column: 3, scope: !11896)
!11975 = !DILocation(line: 3654, column: 43, scope: !11896)
!11976 = !DILocation(line: 3654, column: 47, scope: !11896)
!11977 = !DILocation(line: 3655, column: 14, scope: !11896)
!11978 = !DILocation(line: 3655, column: 25, scope: !11896)
!11979 = !DILocation(line: 3655, column: 23, scope: !11896)
!11980 = !DILocation(line: 3654, column: 14, scope: !11896)
!11981 = !DILocation(line: 3654, column: 12, scope: !11896)
!11982 = !DILocation(line: 3656, column: 18, scope: !11896)
!11983 = !DILocation(line: 3656, column: 3, scope: !11896)
!11984 = !DILocation(line: 3657, column: 2, scope: !11896)
!11985 = !DILocation(line: 3657, column: 11, scope: !11674)
!11986 = distinct !{!11986, !11894, !11987}
!11987 = !DILocation(line: 3657, column: 19, scope: !11674)
!11988 = !DILocation(line: 3658, column: 2, scope: !11989)
!11989 = distinct !DILexicalBlock(scope: !11674, file: !3, line: 3658, column: 2)
!11990 = !DILocation(line: 3658, column: 2, scope: !11991)
!11991 = distinct !DILexicalBlock(scope: !11989, file: !3, line: 3658, column: 2)
!11992 = !DILocation(line: 3659, column: 3, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 3659, column: 3)
!11994 = distinct !DILexicalBlock(scope: !11991, file: !3, line: 3658, column: 36)
!11995 = !DILocation(line: 3659, column: 3, scope: !11996)
!11996 = distinct !DILexicalBlock(scope: !11993, file: !3, line: 3659, column: 3)
!11997 = !DILocation(line: 3660, column: 10, scope: !11998)
!11998 = distinct !DILexicalBlock(scope: !11999, file: !3, line: 3660, column: 8)
!11999 = distinct !DILexicalBlock(scope: !11996, file: !3, line: 3659, column: 36)
!12000 = !DILocation(line: 3660, column: 16, scope: !11998)
!12001 = !DILocation(line: 3660, column: 27, scope: !11998)
!12002 = !DILocation(line: 3661, column: 16, scope: !11998)
!12003 = !DILocation(line: 3661, column: 21, scope: !11998)
!12004 = !DILocation(line: 3661, column: 13, scope: !11998)
!12005 = !DILocation(line: 3660, column: 41, scope: !11998)
!12006 = !DILocation(line: 3660, column: 8, scope: !11999)
!12007 = !DILocation(line: 3662, column: 5, scope: !11998)
!12008 = !DILocation(line: 3664, column: 26, scope: !11999)
!12009 = !DILocation(line: 3664, column: 4, scope: !11999)
!12010 = !DILocation(line: 3665, column: 16, scope: !11999)
!12011 = !DILocation(line: 3665, column: 22, scope: !11999)
!12012 = !DILocation(line: 3665, column: 4, scope: !11999)
!12013 = !DILocation(line: 3666, column: 3, scope: !11999)
!12014 = distinct !{!12014, !11992, !12015}
!12015 = !DILocation(line: 3666, column: 3, scope: !11993)
!12016 = !DILocation(line: 3667, column: 2, scope: !11994)
!12017 = distinct !{!12017, !11988, !12018}
!12018 = !DILocation(line: 3667, column: 2, scope: !11989)
!12019 = !DILocation(line: 3670, column: 11, scope: !11674)
!12020 = !DILocation(line: 3671, column: 2, scope: !12021)
!12021 = distinct !DILexicalBlock(scope: !11674, file: !3, line: 3671, column: 2)
!12022 = !DILocation(line: 3671, column: 2, scope: !12023)
!12023 = distinct !DILexicalBlock(scope: !12021, file: !3, line: 3671, column: 2)
!12024 = !DILocalVariable(name: "ehc", scope: !12025, file: !3, line: 3672, type: !7127)
!12025 = distinct !DILexicalBlock(scope: !12023, file: !3, line: 3671, column: 41)
!12026 = !DILocation(line: 3672, column: 26, scope: !12025)
!12027 = !DILocation(line: 3672, column: 33, scope: !12025)
!12028 = !DILocation(line: 3672, column: 39, scope: !12025)
!12029 = !DILocation(line: 3674, column: 25, scope: !12030)
!12030 = distinct !DILexicalBlock(scope: !12025, file: !3, line: 3674, column: 7)
!12031 = !DILocation(line: 3674, column: 7, scope: !12030)
!12032 = !DILocation(line: 3674, column: 29, scope: !12030)
!12033 = !DILocation(line: 3674, column: 49, scope: !12030)
!12034 = !DILocation(line: 3674, column: 32, scope: !12030)
!12035 = !DILocation(line: 3674, column: 7, scope: !12025)
!12036 = !DILocation(line: 3675, column: 4, scope: !12030)
!12037 = !DILocation(line: 3678, column: 37, scope: !12025)
!12038 = !DILocation(line: 3678, column: 8, scope: !12025)
!12039 = !DILocation(line: 3678, column: 6, scope: !12025)
!12040 = !DILocation(line: 3679, column: 7, scope: !12041)
!12041 = distinct !DILexicalBlock(scope: !12025, file: !3, line: 3679, column: 7)
!12042 = !DILocation(line: 3679, column: 7, scope: !12025)
!12043 = !DILocation(line: 3680, column: 4, scope: !12041)
!12044 = !DILocation(line: 3683, column: 7, scope: !12045)
!12045 = distinct !DILexicalBlock(scope: !12025, file: !3, line: 3683, column: 7)
!12046 = !DILocation(line: 3683, column: 13, scope: !12045)
!12047 = !DILocation(line: 3683, column: 21, scope: !12045)
!12048 = !DILocation(line: 3683, column: 27, scope: !12045)
!12049 = !DILocation(line: 3683, column: 7, scope: !12025)
!12050 = !DILocation(line: 3684, column: 4, scope: !12051)
!12051 = distinct !DILexicalBlock(scope: !12045, file: !3, line: 3683, column: 43)
!12052 = !DILocation(line: 3684, column: 9, scope: !12051)
!12053 = !DILocation(line: 3684, column: 11, scope: !12051)
!12054 = !DILocation(line: 3684, column: 18, scope: !12051)
!12055 = !DILocation(line: 3685, column: 4, scope: !12051)
!12056 = !DILocation(line: 3689, column: 7, scope: !12057)
!12057 = distinct !DILexicalBlock(scope: !12025, file: !3, line: 3689, column: 7)
!12058 = !DILocation(line: 3689, column: 12, scope: !12057)
!12059 = !DILocation(line: 3689, column: 14, scope: !12057)
!12060 = !DILocation(line: 3689, column: 20, scope: !12057)
!12061 = !DILocation(line: 3689, column: 7, scope: !12025)
!12062 = !DILocation(line: 3690, column: 22, scope: !12063)
!12063 = distinct !DILexicalBlock(scope: !12057, file: !3, line: 3689, column: 39)
!12064 = !DILocation(line: 3690, column: 9, scope: !12063)
!12065 = !DILocation(line: 3690, column: 7, scope: !12063)
!12066 = !DILocation(line: 3691, column: 8, scope: !12067)
!12067 = distinct !DILexicalBlock(scope: !12063, file: !3, line: 3691, column: 8)
!12068 = !DILocation(line: 3691, column: 8, scope: !12063)
!12069 = !DILocation(line: 3692, column: 5, scope: !12067)
!12070 = !DILocation(line: 3693, column: 4, scope: !12063)
!12071 = !DILocation(line: 3693, column: 9, scope: !12063)
!12072 = !DILocation(line: 3693, column: 11, scope: !12063)
!12073 = !DILocation(line: 3693, column: 17, scope: !12063)
!12074 = !DILocation(line: 3694, column: 3, scope: !12063)
!12075 = !DILocation(line: 3699, column: 7, scope: !12076)
!12076 = distinct !DILexicalBlock(scope: !12025, file: !3, line: 3699, column: 7)
!12077 = !DILocation(line: 3699, column: 12, scope: !12076)
!12078 = !DILocation(line: 3699, column: 14, scope: !12076)
!12079 = !DILocation(line: 3699, column: 20, scope: !12076)
!12080 = !DILocation(line: 3699, column: 7, scope: !12025)
!12081 = !DILocation(line: 3700, column: 4, scope: !12082)
!12082 = distinct !DILexicalBlock(scope: !12083, file: !3, line: 3700, column: 4)
!12083 = distinct !DILexicalBlock(scope: !12076, file: !3, line: 3699, column: 41)
!12084 = !DILocation(line: 3700, column: 4, scope: !12085)
!12085 = distinct !DILexicalBlock(scope: !12082, file: !3, line: 3700, column: 4)
!12086 = !DILocation(line: 3701, column: 9, scope: !12087)
!12087 = distinct !DILexicalBlock(scope: !12088, file: !3, line: 3701, column: 9)
!12088 = distinct !DILexicalBlock(scope: !12085, file: !3, line: 3700, column: 37)
!12089 = !DILocation(line: 3701, column: 14, scope: !12087)
!12090 = !DILocation(line: 3701, column: 20, scope: !12087)
!12091 = !DILocation(line: 3701, column: 9, scope: !12088)
!12092 = !DILocation(line: 3702, column: 6, scope: !12087)
!12093 = !DILocation(line: 3703, column: 28, scope: !12088)
!12094 = !DILocation(line: 3703, column: 10, scope: !12088)
!12095 = !DILocation(line: 3703, column: 8, scope: !12088)
!12096 = !DILocation(line: 3704, column: 9, scope: !12097)
!12097 = distinct !DILexicalBlock(scope: !12088, file: !3, line: 3704, column: 9)
!12098 = !DILocation(line: 3704, column: 9, scope: !12088)
!12099 = !DILocation(line: 3705, column: 6, scope: !12097)
!12100 = !DILocation(line: 3706, column: 27, scope: !12101)
!12101 = distinct !DILexicalBlock(scope: !12088, file: !3, line: 3706, column: 9)
!12102 = !DILocation(line: 3706, column: 9, scope: !12101)
!12103 = !DILocation(line: 3706, column: 9, scope: !12088)
!12104 = !DILocation(line: 3707, column: 25, scope: !12101)
!12105 = !DILocation(line: 3707, column: 6, scope: !12101)
!12106 = !DILocation(line: 3708, column: 4, scope: !12088)
!12107 = distinct !{!12107, !12081, !12108}
!12108 = !DILocation(line: 3708, column: 4, scope: !12082)
!12109 = !DILocation(line: 3709, column: 3, scope: !12083)
!12110 = !DILocation(line: 3712, column: 3, scope: !12111)
!12111 = distinct !DILexicalBlock(scope: !12025, file: !3, line: 3712, column: 3)
!12112 = !DILocation(line: 3712, column: 3, scope: !12113)
!12113 = distinct !DILexicalBlock(scope: !12111, file: !3, line: 3712, column: 3)
!12114 = !DILocation(line: 3713, column: 8, scope: !12115)
!12115 = distinct !DILexicalBlock(scope: !12116, file: !3, line: 3713, column: 8)
!12116 = distinct !DILexicalBlock(scope: !12113, file: !3, line: 3712, column: 36)
!12117 = !DILocation(line: 3713, column: 13, scope: !12115)
!12118 = !DILocation(line: 3713, column: 19, scope: !12115)
!12119 = !DILocation(line: 3713, column: 34, scope: !12115)
!12120 = !DILocation(line: 3714, column: 8, scope: !12115)
!12121 = !DILocation(line: 3714, column: 13, scope: !12115)
!12122 = !DILocation(line: 3714, column: 19, scope: !12115)
!12123 = !DILocation(line: 3713, column: 8, scope: !12116)
!12124 = !DILocation(line: 3715, column: 5, scope: !12115)
!12125 = !DILocation(line: 3716, column: 34, scope: !12116)
!12126 = !DILocation(line: 3716, column: 9, scope: !12116)
!12127 = !DILocation(line: 3716, column: 7, scope: !12116)
!12128 = !DILocation(line: 3717, column: 8, scope: !12129)
!12129 = distinct !DILexicalBlock(scope: !12116, file: !3, line: 3717, column: 8)
!12130 = !DILocation(line: 3717, column: 8, scope: !12116)
!12131 = !DILocation(line: 3718, column: 5, scope: !12129)
!12132 = !DILocation(line: 3719, column: 3, scope: !12116)
!12133 = distinct !{!12133, !12110, !12134}
!12134 = !DILocation(line: 3719, column: 3, scope: !12111)
!12135 = !DILabel(scope: !12025, name: "config_lpm", file: !3, line: 3721)
!12136 = !DILocation(line: 3721, column: 2, scope: !12025)
!12137 = !DILocation(line: 3723, column: 7, scope: !12138)
!12138 = distinct !DILexicalBlock(scope: !12025, file: !3, line: 3723, column: 7)
!12139 = !DILocation(line: 3723, column: 13, scope: !12138)
!12140 = !DILocation(line: 3723, column: 27, scope: !12138)
!12141 = !DILocation(line: 3723, column: 31, scope: !12138)
!12142 = !DILocation(line: 3723, column: 24, scope: !12138)
!12143 = !DILocation(line: 3723, column: 7, scope: !12025)
!12144 = !DILocation(line: 3724, column: 24, scope: !12145)
!12145 = distinct !DILexicalBlock(scope: !12138, file: !3, line: 3723, column: 50)
!12146 = !DILocation(line: 3724, column: 30, scope: !12145)
!12147 = !DILocation(line: 3724, column: 34, scope: !12145)
!12148 = !DILocation(line: 3724, column: 9, scope: !12145)
!12149 = !DILocation(line: 3724, column: 7, scope: !12145)
!12150 = !DILocation(line: 3725, column: 8, scope: !12151)
!12151 = distinct !DILexicalBlock(scope: !12145, file: !3, line: 3725, column: 8)
!12152 = !DILocation(line: 3725, column: 8, scope: !12145)
!12153 = !DILocation(line: 3726, column: 5, scope: !12151)
!12154 = !DILocation(line: 3727, column: 3, scope: !12145)
!12155 = !DILocation(line: 3730, column: 3, scope: !12025)
!12156 = !DILocation(line: 3730, column: 8, scope: !12025)
!12157 = !DILocation(line: 3730, column: 10, scope: !12025)
!12158 = !DILocation(line: 3730, column: 16, scope: !12025)
!12159 = !DILocation(line: 3731, column: 3, scope: !12025)
!12160 = !DILabel(scope: !12025, name: "rest_fail", file: !3, line: 3733)
!12161 = !DILocation(line: 3733, column: 2, scope: !12025)
!12162 = !DILocation(line: 3734, column: 11, scope: !12025)
!12163 = !DILocation(line: 3735, column: 7, scope: !12164)
!12164 = distinct !DILexicalBlock(scope: !12025, file: !3, line: 3735, column: 7)
!12165 = !DILocation(line: 3735, column: 7, scope: !12025)
!12166 = !DILocation(line: 3736, column: 27, scope: !12164)
!12167 = !DILocation(line: 3736, column: 32, scope: !12164)
!12168 = !DILocation(line: 3736, column: 4, scope: !12164)
!12169 = !DILocation(line: 3738, column: 7, scope: !12170)
!12170 = distinct !DILexicalBlock(scope: !12025, file: !3, line: 3738, column: 7)
!12171 = !DILocation(line: 3738, column: 11, scope: !12170)
!12172 = !DILocation(line: 3738, column: 18, scope: !12170)
!12173 = !DILocation(line: 3738, column: 7, scope: !12025)
!12174 = !DILocation(line: 3742, column: 26, scope: !12175)
!12175 = distinct !DILexicalBlock(scope: !12176, file: !3, line: 3742, column: 8)
!12176 = distinct !DILexicalBlock(scope: !12170, file: !3, line: 3738, column: 38)
!12177 = !DILocation(line: 3742, column: 8, scope: !12175)
!12178 = !DILocation(line: 3742, column: 8, scope: !12176)
!12179 = !DILocation(line: 3743, column: 5, scope: !12175)
!12180 = !DILocation(line: 3744, column: 4, scope: !12176)
!12181 = !DILocation(line: 3746, column: 2, scope: !12025)
!12182 = distinct !{!12182, !12020, !12183}
!12183 = !DILocation(line: 3746, column: 2, scope: !12021)
!12184 = !DILocation(line: 3748, column: 6, scope: !12185)
!12185 = distinct !DILexicalBlock(scope: !11674, file: !3, line: 3748, column: 6)
!12186 = !DILocation(line: 3748, column: 6, scope: !11674)
!12187 = !DILocation(line: 3749, column: 3, scope: !12185)
!12188 = !DILabel(scope: !11674, name: "out", file: !3, line: 3751)
!12189 = !DILocation(line: 3751, column: 2, scope: !11674)
!12190 = !DILocation(line: 3752, column: 6, scope: !12191)
!12191 = distinct !DILexicalBlock(scope: !11674, file: !3, line: 3752, column: 6)
!12192 = !DILocation(line: 3752, column: 9, scope: !12191)
!12193 = !DILocation(line: 3752, column: 12, scope: !12191)
!12194 = !DILocation(line: 3752, column: 6, scope: !11674)
!12195 = !DILocation(line: 3753, column: 20, scope: !12191)
!12196 = !DILocation(line: 3753, column: 4, scope: !12191)
!12197 = !DILocation(line: 3753, column: 18, scope: !12191)
!12198 = !DILocation(line: 3753, column: 3, scope: !12191)
!12199 = !DILocation(line: 3756, column: 9, scope: !11674)
!12200 = !DILocation(line: 3756, column: 2, scope: !11674)
!12201 = !DILocation(line: 3757, column: 1, scope: !11674)
!12202 = distinct !DISubprogram(name: "ata_eh_schedule_probe", scope: !3, file: !3, line: 3413, type: !8240, scopeLine: 3414, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!12203 = !DILocalVariable(name: "dev", arg: 1, scope: !12202, file: !3, line: 3413, type: !6392)
!12204 = !DILocation(line: 3413, column: 53, scope: !12202)
!12205 = !DILocalVariable(name: "ehc", scope: !12202, file: !3, line: 3415, type: !7127)
!12206 = !DILocation(line: 3415, column: 25, scope: !12202)
!12207 = !DILocation(line: 3415, column: 32, scope: !12202)
!12208 = !DILocation(line: 3415, column: 37, scope: !12202)
!12209 = !DILocation(line: 3415, column: 43, scope: !12202)
!12210 = !DILocalVariable(name: "link", scope: !12202, file: !3, line: 3416, type: !6396)
!12211 = !DILocation(line: 3416, column: 19, scope: !12202)
!12212 = !DILocation(line: 3416, column: 44, scope: !12202)
!12213 = !DILocation(line: 3416, column: 26, scope: !12202)
!12214 = !DILocalVariable(name: "trials", scope: !12202, file: !3, line: 3417, type: !206)
!12215 = !DILocation(line: 3417, column: 6, scope: !12202)
!12216 = !DILocation(line: 3419, column: 8, scope: !12217)
!12217 = distinct !DILexicalBlock(scope: !12202, file: !3, line: 3419, column: 6)
!12218 = !DILocation(line: 3419, column: 13, scope: !12217)
!12219 = !DILocation(line: 3419, column: 15, scope: !12217)
!12220 = !DILocation(line: 3419, column: 34, scope: !12217)
!12221 = !DILocation(line: 3419, column: 39, scope: !12217)
!12222 = !DILocation(line: 3419, column: 31, scope: !12217)
!12223 = !DILocation(line: 3419, column: 26, scope: !12217)
!12224 = !DILocation(line: 3419, column: 47, scope: !12217)
!12225 = !DILocation(line: 3420, column: 7, scope: !12217)
!12226 = !DILocation(line: 3420, column: 12, scope: !12217)
!12227 = !DILocation(line: 3420, column: 35, scope: !12217)
!12228 = !DILocation(line: 3420, column: 40, scope: !12217)
!12229 = !DILocation(line: 3420, column: 32, scope: !12217)
!12230 = !DILocation(line: 3420, column: 27, scope: !12217)
!12231 = !DILocation(line: 3419, column: 6, scope: !12202)
!12232 = !DILocation(line: 3421, column: 3, scope: !12217)
!12233 = !DILocation(line: 3423, column: 20, scope: !12202)
!12234 = !DILocation(line: 3423, column: 2, scope: !12202)
!12235 = !DILocation(line: 3424, column: 15, scope: !12202)
!12236 = !DILocation(line: 3424, column: 2, scope: !12202)
!12237 = !DILocation(line: 3425, column: 31, scope: !12202)
!12238 = !DILocation(line: 3425, column: 36, scope: !12202)
!12239 = !DILocation(line: 3425, column: 28, scope: !12202)
!12240 = !DILocation(line: 3425, column: 2, scope: !12202)
!12241 = !DILocation(line: 3425, column: 7, scope: !12202)
!12242 = !DILocation(line: 3425, column: 22, scope: !12202)
!12243 = !DILocation(line: 3426, column: 2, scope: !12202)
!12244 = !DILocation(line: 3426, column: 7, scope: !12202)
!12245 = !DILocation(line: 3426, column: 9, scope: !12202)
!12246 = !DILocation(line: 3426, column: 16, scope: !12202)
!12247 = !DILocation(line: 3427, column: 2, scope: !12202)
!12248 = !DILocation(line: 3427, column: 7, scope: !12202)
!12249 = !DILocation(line: 3427, column: 23, scope: !12202)
!12250 = !DILocation(line: 3427, column: 28, scope: !12202)
!12251 = !DILocation(line: 3427, column: 35, scope: !12202)
!12252 = !DILocation(line: 3428, column: 35, scope: !12202)
!12253 = !DILocation(line: 3428, column: 40, scope: !12202)
!12254 = !DILocation(line: 3428, column: 32, scope: !12202)
!12255 = !DILocation(line: 3428, column: 28, scope: !12202)
!12256 = !DILocation(line: 3428, column: 2, scope: !12202)
!12257 = !DILocation(line: 3428, column: 7, scope: !12202)
!12258 = !DILocation(line: 3428, column: 25, scope: !12202)
!12259 = !DILocation(line: 3431, column: 6, scope: !12260)
!12260 = distinct !DILexicalBlock(scope: !12202, file: !3, line: 3431, column: 6)
!12261 = !DILocation(line: 3431, column: 12, scope: !12260)
!12262 = !DILocation(line: 3431, column: 23, scope: !12260)
!12263 = !DILocation(line: 3431, column: 6, scope: !12202)
!12264 = !DILocation(line: 3432, column: 24, scope: !12265)
!12265 = distinct !DILexicalBlock(scope: !12266, file: !3, line: 3432, column: 7)
!12266 = distinct !DILexicalBlock(scope: !12260, file: !3, line: 3431, column: 44)
!12267 = !DILocation(line: 3432, column: 7, scope: !12265)
!12268 = !DILocation(line: 3432, column: 7, scope: !12266)
!12269 = !DILocation(line: 3433, column: 4, scope: !12265)
!12270 = !DILocation(line: 3433, column: 10, scope: !12265)
!12271 = !DILocation(line: 3433, column: 14, scope: !12265)
!12272 = !DILocation(line: 3433, column: 19, scope: !12265)
!12273 = !DILocation(line: 3433, column: 27, scope: !12265)
!12274 = !DILocation(line: 3436, column: 21, scope: !12265)
!12275 = !DILocation(line: 3436, column: 4, scope: !12265)
!12276 = !DILocation(line: 3438, column: 2, scope: !12266)
!12277 = !DILocation(line: 3453, column: 20, scope: !12202)
!12278 = !DILocation(line: 3453, column: 25, scope: !12202)
!12279 = !DILocation(line: 3453, column: 2, scope: !12202)
!12280 = !DILocation(line: 3454, column: 17, scope: !12202)
!12281 = !DILocation(line: 3454, column: 22, scope: !12202)
!12282 = !DILocation(line: 3454, column: 56, scope: !12202)
!12283 = !DILocation(line: 3454, column: 2, scope: !12202)
!12284 = !DILocation(line: 3456, column: 6, scope: !12285)
!12285 = distinct !DILexicalBlock(scope: !12202, file: !3, line: 3456, column: 6)
!12286 = !DILocation(line: 3456, column: 13, scope: !12285)
!12287 = !DILocation(line: 3456, column: 6, scope: !12202)
!12288 = !DILocation(line: 3457, column: 23, scope: !12285)
!12289 = !DILocation(line: 3457, column: 3, scope: !12285)
!12290 = !DILocation(line: 3459, column: 2, scope: !12202)
!12291 = !DILocation(line: 3460, column: 1, scope: !12202)
!12292 = distinct !DISubprogram(name: "ata_eh_skip_recovery", scope: !3, file: !3, line: 3366, type: !9100, scopeLine: 3367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!12293 = !DILocalVariable(name: "link", arg: 1, scope: !12292, file: !3, line: 3366, type: !6396)
!12294 = !DILocation(line: 3366, column: 50, scope: !12292)
!12295 = !DILocalVariable(name: "ap", scope: !12292, file: !3, line: 3368, type: !6375)
!12296 = !DILocation(line: 3368, column: 19, scope: !12292)
!12297 = !DILocation(line: 3368, column: 24, scope: !12292)
!12298 = !DILocation(line: 3368, column: 30, scope: !12292)
!12299 = !DILocalVariable(name: "ehc", scope: !12292, file: !3, line: 3369, type: !7127)
!12300 = !DILocation(line: 3369, column: 25, scope: !12292)
!12301 = !DILocation(line: 3369, column: 32, scope: !12292)
!12302 = !DILocation(line: 3369, column: 38, scope: !12292)
!12303 = !DILocalVariable(name: "dev", scope: !12292, file: !3, line: 3370, type: !6392)
!12304 = !DILocation(line: 3370, column: 21, scope: !12292)
!12305 = !DILocation(line: 3373, column: 6, scope: !12306)
!12306 = distinct !DILexicalBlock(scope: !12292, file: !3, line: 3373, column: 6)
!12307 = !DILocation(line: 3373, column: 12, scope: !12306)
!12308 = !DILocation(line: 3373, column: 18, scope: !12306)
!12309 = !DILocation(line: 3373, column: 6, scope: !12292)
!12310 = !DILocation(line: 3374, column: 3, scope: !12306)
!12311 = !DILocation(line: 3377, column: 6, scope: !12312)
!12312 = distinct !DILexicalBlock(scope: !12292, file: !3, line: 3377, column: 6)
!12313 = !DILocation(line: 3377, column: 11, scope: !12312)
!12314 = !DILocation(line: 3377, column: 13, scope: !12312)
!12315 = !DILocation(line: 3377, column: 19, scope: !12312)
!12316 = !DILocation(line: 3377, column: 6, scope: !12292)
!12317 = !DILocation(line: 3378, column: 3, scope: !12312)
!12318 = !DILocation(line: 3381, column: 7, scope: !12319)
!12319 = distinct !DILexicalBlock(scope: !12292, file: !3, line: 3381, column: 6)
!12320 = !DILocation(line: 3381, column: 11, scope: !12319)
!12321 = !DILocation(line: 3381, column: 18, scope: !12319)
!12322 = !DILocation(line: 3381, column: 38, scope: !12319)
!12323 = !DILocation(line: 3381, column: 61, scope: !12319)
!12324 = !DILocation(line: 3381, column: 41, scope: !12319)
!12325 = !DILocation(line: 3381, column: 6, scope: !12292)
!12326 = !DILocation(line: 3382, column: 3, scope: !12319)
!12327 = !DILocation(line: 3385, column: 7, scope: !12328)
!12328 = distinct !DILexicalBlock(scope: !12292, file: !3, line: 3385, column: 6)
!12329 = !DILocation(line: 3385, column: 12, scope: !12328)
!12330 = !DILocation(line: 3385, column: 14, scope: !12328)
!12331 = !DILocation(line: 3385, column: 21, scope: !12328)
!12332 = !DILocation(line: 3385, column: 37, scope: !12328)
!12333 = !DILocation(line: 3386, column: 8, scope: !12328)
!12334 = !DILocation(line: 3386, column: 13, scope: !12328)
!12335 = !DILocation(line: 3386, column: 15, scope: !12328)
!12336 = !DILocation(line: 3386, column: 21, scope: !12328)
!12337 = !DILocation(line: 3385, column: 6, scope: !12292)
!12338 = !DILocation(line: 3387, column: 3, scope: !12328)
!12339 = !DILocation(line: 3390, column: 2, scope: !12340)
!12340 = distinct !DILexicalBlock(scope: !12292, file: !3, line: 3390, column: 2)
!12341 = !DILocation(line: 3390, column: 2, scope: !12342)
!12342 = distinct !DILexicalBlock(scope: !12340, file: !3, line: 3390, column: 2)
!12343 = !DILocation(line: 3391, column: 7, scope: !12344)
!12344 = distinct !DILexicalBlock(scope: !12345, file: !3, line: 3391, column: 7)
!12345 = distinct !DILexicalBlock(scope: !12342, file: !3, line: 3390, column: 35)
!12346 = !DILocation(line: 3391, column: 12, scope: !12344)
!12347 = !DILocation(line: 3391, column: 18, scope: !12344)
!12348 = !DILocation(line: 3391, column: 37, scope: !12344)
!12349 = !DILocation(line: 3392, column: 7, scope: !12344)
!12350 = !DILocation(line: 3392, column: 12, scope: !12344)
!12351 = !DILocation(line: 3392, column: 20, scope: !12344)
!12352 = !DILocation(line: 3392, column: 25, scope: !12344)
!12353 = !DILocation(line: 3392, column: 32, scope: !12344)
!12354 = !DILocation(line: 3391, column: 7, scope: !12345)
!12355 = !DILocation(line: 3393, column: 4, scope: !12344)
!12356 = !DILocation(line: 3394, column: 2, scope: !12345)
!12357 = distinct !{!12357, !12339, !12358}
!12358 = !DILocation(line: 3394, column: 2, scope: !12340)
!12359 = !DILocation(line: 3396, column: 2, scope: !12292)
!12360 = !DILocation(line: 3397, column: 1, scope: !12292)
!12361 = distinct !DISubprogram(name: "ata_link_nr_vacant", scope: !3, file: !3, line: 3355, type: !9100, scopeLine: 3356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!12362 = !DILocalVariable(name: "link", arg: 1, scope: !12361, file: !3, line: 3355, type: !6396)
!12363 = !DILocation(line: 3355, column: 48, scope: !12361)
!12364 = !DILocalVariable(name: "dev", scope: !12361, file: !3, line: 3357, type: !6392)
!12365 = !DILocation(line: 3357, column: 21, scope: !12361)
!12366 = !DILocalVariable(name: "cnt", scope: !12361, file: !3, line: 3358, type: !206)
!12367 = !DILocation(line: 3358, column: 6, scope: !12361)
!12368 = !DILocation(line: 3360, column: 2, scope: !12369)
!12369 = distinct !DILexicalBlock(scope: !12361, file: !3, line: 3360, column: 2)
!12370 = !DILocation(line: 3360, column: 2, scope: !12371)
!12371 = distinct !DILexicalBlock(scope: !12369, file: !3, line: 3360, column: 2)
!12372 = !DILocation(line: 3361, column: 7, scope: !12373)
!12373 = distinct !DILexicalBlock(scope: !12371, file: !3, line: 3361, column: 7)
!12374 = !DILocation(line: 3361, column: 12, scope: !12373)
!12375 = !DILocation(line: 3361, column: 18, scope: !12373)
!12376 = !DILocation(line: 3361, column: 7, scope: !12371)
!12377 = !DILocation(line: 3362, column: 7, scope: !12373)
!12378 = !DILocation(line: 3362, column: 4, scope: !12373)
!12379 = !DILocation(line: 3361, column: 21, scope: !12373)
!12380 = distinct !{!12380, !12368, !12381}
!12381 = !DILocation(line: 3362, column: 7, scope: !12369)
!12382 = !DILocation(line: 3363, column: 9, scope: !12361)
!12383 = !DILocation(line: 3363, column: 2, scope: !12361)
!12384 = distinct !DISubprogram(name: "ata_eh_pull_park_action", scope: !3, file: !3, line: 2832, type: !6640, scopeLine: 2833, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!12385 = !DILocation(line: 407, column: 64, scope: !7380, inlinedAt: !12386)
!12386 = distinct !DILocation(line: 2875, column: 2, scope: !12384)
!12387 = !DILocation(line: 407, column: 84, scope: !7380, inlinedAt: !12386)
!12388 = !DILocation(line: 327, column: 67, scope: !7389, inlinedAt: !12389)
!12389 = distinct !DILocation(line: 2864, column: 2, scope: !12390)
!12390 = distinct !DILexicalBlock(scope: !12391, file: !3, line: 2864, column: 2)
!12391 = distinct !DILexicalBlock(scope: !12392, file: !3, line: 2864, column: 2)
!12392 = distinct !DILexicalBlock(scope: !12393, file: !3, line: 2864, column: 2)
!12393 = distinct !DILexicalBlock(scope: !12394, file: !3, line: 2864, column: 2)
!12394 = distinct !DILexicalBlock(scope: !12384, file: !3, line: 2864, column: 2)
!12395 = !DILocalVariable(name: "ap", arg: 1, scope: !12384, file: !3, line: 2832, type: !6375)
!12396 = !DILocation(line: 2832, column: 61, scope: !12384)
!12397 = !DILocalVariable(name: "link", scope: !12384, file: !3, line: 2834, type: !6396)
!12398 = !DILocation(line: 2834, column: 19, scope: !12384)
!12399 = !DILocalVariable(name: "dev", scope: !12384, file: !3, line: 2835, type: !6392)
!12400 = !DILocation(line: 2835, column: 21, scope: !12384)
!12401 = !DILocalVariable(name: "flags", scope: !12384, file: !3, line: 2836, type: !1012)
!12402 = !DILocation(line: 2836, column: 16, scope: !12384)
!12403 = !DILocation(line: 2864, column: 2, scope: !12384)
!12404 = !DILocation(line: 2864, column: 2, scope: !12394)
!12405 = !DILocalVariable(name: "__dummy", scope: !12406, file: !3, line: 2864, type: !1012)
!12406 = distinct !DILexicalBlock(scope: !12393, file: !3, line: 2864, column: 2)
!12407 = !DILocation(line: 2864, column: 2, scope: !12406)
!12408 = !DILocalVariable(name: "__dummy2", scope: !12406, file: !3, line: 2864, type: !1012)
!12409 = !DILocation(line: 2864, column: 2, scope: !12393)
!12410 = !DILocation(line: 2864, column: 2, scope: !12392)
!12411 = !DILocation(line: 2864, column: 2, scope: !12412)
!12412 = distinct !DILexicalBlock(scope: !12392, file: !3, line: 2864, column: 2)
!12413 = !DILocalVariable(name: "__dummy", scope: !12414, file: !3, line: 2864, type: !1012)
!12414 = distinct !DILexicalBlock(scope: !12415, file: !3, line: 2864, column: 2)
!12415 = distinct !DILexicalBlock(scope: !12412, file: !3, line: 2864, column: 2)
!12416 = !DILocation(line: 2864, column: 2, scope: !12414)
!12417 = !DILocalVariable(name: "__dummy2", scope: !12414, file: !3, line: 2864, type: !1012)
!12418 = !DILocation(line: 2864, column: 2, scope: !12415)
!12419 = !DILocation(line: 2864, column: 2, scope: !12391)
!12420 = !{i32 -2140038255}
!12421 = !DILocation(line: 2864, column: 2, scope: !12390)
!12422 = !DILocation(line: 329, column: 10, scope: !7389, inlinedAt: !12389)
!12423 = !DILocation(line: 329, column: 16, scope: !7389, inlinedAt: !12389)
!12424 = !DILocation(line: 2865, column: 21, scope: !12384)
!12425 = !DILocation(line: 2865, column: 25, scope: !12384)
!12426 = !DILocation(line: 2865, column: 2, scope: !12384)
!12427 = !DILocation(line: 2866, column: 2, scope: !12428)
!12428 = distinct !DILexicalBlock(scope: !12384, file: !3, line: 2866, column: 2)
!12429 = !DILocation(line: 2866, column: 2, scope: !12430)
!12430 = distinct !DILexicalBlock(scope: !12428, file: !3, line: 2866, column: 2)
!12431 = !DILocation(line: 2867, column: 3, scope: !12432)
!12432 = distinct !DILexicalBlock(scope: !12433, file: !3, line: 2867, column: 3)
!12433 = distinct !DILexicalBlock(scope: !12430, file: !3, line: 2866, column: 36)
!12434 = !DILocation(line: 2867, column: 3, scope: !12435)
!12435 = distinct !DILexicalBlock(scope: !12432, file: !3, line: 2867, column: 3)
!12436 = !DILocalVariable(name: "ehi", scope: !12437, file: !3, line: 2868, type: !6934)
!12437 = distinct !DILexicalBlock(scope: !12435, file: !3, line: 2867, column: 36)
!12438 = !DILocation(line: 2868, column: 24, scope: !12437)
!12439 = !DILocation(line: 2868, column: 31, scope: !12437)
!12440 = !DILocation(line: 2868, column: 37, scope: !12437)
!12441 = !DILocation(line: 2871, column: 5, scope: !12437)
!12442 = !DILocation(line: 2871, column: 10, scope: !12437)
!12443 = !DILocation(line: 2871, column: 21, scope: !12437)
!12444 = !DILocation(line: 2871, column: 26, scope: !12437)
!12445 = !DILocation(line: 2871, column: 33, scope: !12437)
!12446 = !DILocation(line: 2870, column: 4, scope: !12437)
!12447 = !DILocation(line: 2870, column: 10, scope: !12437)
!12448 = !DILocation(line: 2870, column: 21, scope: !12437)
!12449 = !DILocation(line: 2870, column: 23, scope: !12437)
!12450 = !DILocation(line: 2870, column: 34, scope: !12437)
!12451 = !DILocation(line: 2870, column: 39, scope: !12437)
!12452 = !DILocation(line: 2870, column: 46, scope: !12437)
!12453 = !DILocation(line: 2872, column: 24, scope: !12437)
!12454 = !DILocation(line: 2872, column: 30, scope: !12437)
!12455 = !DILocation(line: 2872, column: 35, scope: !12437)
!12456 = !DILocation(line: 2872, column: 4, scope: !12437)
!12457 = !DILocation(line: 2873, column: 3, scope: !12437)
!12458 = distinct !{!12458, !12431, !12459}
!12459 = !DILocation(line: 2873, column: 3, scope: !12432)
!12460 = !DILocation(line: 2874, column: 2, scope: !12433)
!12461 = distinct !{!12461, !12427, !12462}
!12462 = !DILocation(line: 2874, column: 2, scope: !12428)
!12463 = !DILocation(line: 2875, column: 25, scope: !12384)
!12464 = !DILocation(line: 2875, column: 29, scope: !12384)
!12465 = !DILocation(line: 2875, column: 35, scope: !12384)
!12466 = !DILocation(line: 409, column: 2, scope: !7438, inlinedAt: !12386)
!12467 = !DILocation(line: 409, column: 2, scope: !7443, inlinedAt: !12386)
!12468 = !DILocation(line: 409, column: 2, scope: !7444, inlinedAt: !12386)
!12469 = !DILocation(line: 409, column: 2, scope: !7451, inlinedAt: !12386)
!12470 = !DILocation(line: 409, column: 2, scope: !7454, inlinedAt: !12386)
!12471 = !DILocation(line: 2876, column: 1, scope: !12384)
!12472 = distinct !DISubprogram(name: "ata_eh_park_issue_cmd", scope: !3, file: !3, line: 2878, type: !12473, scopeLine: 2879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!12473 = !DISubroutineType(types: !12474)
!12474 = !{null, !6392, !206}
!12475 = !DILocalVariable(name: "dev", arg: 1, scope: !12472, file: !3, line: 2878, type: !6392)
!12476 = !DILocation(line: 2878, column: 54, scope: !12472)
!12477 = !DILocalVariable(name: "park", arg: 2, scope: !12472, file: !3, line: 2878, type: !206)
!12478 = !DILocation(line: 2878, column: 63, scope: !12472)
!12479 = !DILocalVariable(name: "ehc", scope: !12472, file: !3, line: 2880, type: !7127)
!12480 = !DILocation(line: 2880, column: 25, scope: !12472)
!12481 = !DILocation(line: 2880, column: 32, scope: !12472)
!12482 = !DILocation(line: 2880, column: 37, scope: !12472)
!12483 = !DILocation(line: 2880, column: 43, scope: !12472)
!12484 = !DILocalVariable(name: "tf", scope: !12472, file: !3, line: 2881, type: !6554)
!12485 = !DILocation(line: 2881, column: 22, scope: !12472)
!12486 = !DILocalVariable(name: "err_mask", scope: !12472, file: !3, line: 2882, type: !7)
!12487 = !DILocation(line: 2882, column: 15, scope: !12472)
!12488 = !DILocation(line: 2884, column: 14, scope: !12472)
!12489 = !DILocation(line: 2884, column: 2, scope: !12472)
!12490 = !DILocation(line: 2885, column: 6, scope: !12491)
!12491 = distinct !DILexicalBlock(scope: !12472, file: !3, line: 2885, column: 6)
!12492 = !DILocation(line: 2885, column: 6, scope: !12472)
!12493 = !DILocation(line: 2886, column: 30, scope: !12494)
!12494 = distinct !DILexicalBlock(scope: !12491, file: !3, line: 2885, column: 12)
!12495 = !DILocation(line: 2886, column: 35, scope: !12494)
!12496 = !DILocation(line: 2886, column: 27, scope: !12494)
!12497 = !DILocation(line: 2886, column: 3, scope: !12494)
!12498 = !DILocation(line: 2886, column: 8, scope: !12494)
!12499 = !DILocation(line: 2886, column: 22, scope: !12494)
!12500 = !DILocation(line: 2887, column: 6, scope: !12494)
!12501 = !DILocation(line: 2887, column: 14, scope: !12494)
!12502 = !DILocation(line: 2888, column: 6, scope: !12494)
!12503 = !DILocation(line: 2888, column: 14, scope: !12494)
!12504 = !DILocation(line: 2889, column: 6, scope: !12494)
!12505 = !DILocation(line: 2889, column: 11, scope: !12494)
!12506 = !DILocation(line: 2890, column: 6, scope: !12494)
!12507 = !DILocation(line: 2890, column: 11, scope: !12494)
!12508 = !DILocation(line: 2891, column: 6, scope: !12494)
!12509 = !DILocation(line: 2891, column: 11, scope: !12494)
!12510 = !DILocation(line: 2892, column: 2, scope: !12494)
!12511 = !DILocation(line: 2893, column: 32, scope: !12512)
!12512 = distinct !DILexicalBlock(scope: !12491, file: !3, line: 2892, column: 9)
!12513 = !DILocation(line: 2893, column: 37, scope: !12512)
!12514 = !DILocation(line: 2893, column: 29, scope: !12512)
!12515 = !DILocation(line: 2893, column: 25, scope: !12512)
!12516 = !DILocation(line: 2893, column: 3, scope: !12512)
!12517 = !DILocation(line: 2893, column: 8, scope: !12512)
!12518 = !DILocation(line: 2893, column: 22, scope: !12512)
!12519 = !DILocation(line: 2894, column: 6, scope: !12512)
!12520 = !DILocation(line: 2894, column: 14, scope: !12512)
!12521 = !DILocation(line: 2897, column: 5, scope: !12472)
!12522 = !DILocation(line: 2897, column: 11, scope: !12472)
!12523 = !DILocation(line: 2898, column: 5, scope: !12472)
!12524 = !DILocation(line: 2898, column: 14, scope: !12472)
!12525 = !DILocation(line: 2899, column: 31, scope: !12472)
!12526 = !DILocation(line: 2899, column: 13, scope: !12472)
!12527 = !DILocation(line: 2899, column: 11, scope: !12472)
!12528 = !DILocation(line: 2900, column: 6, scope: !12529)
!12529 = distinct !DILexicalBlock(scope: !12472, file: !3, line: 2900, column: 6)
!12530 = !DILocation(line: 2900, column: 11, scope: !12529)
!12531 = !DILocation(line: 2900, column: 15, scope: !12529)
!12532 = !DILocation(line: 2900, column: 24, scope: !12529)
!12533 = !DILocation(line: 2900, column: 30, scope: !12529)
!12534 = !DILocation(line: 2900, column: 27, scope: !12529)
!12535 = !DILocation(line: 2900, column: 35, scope: !12529)
!12536 = !DILocation(line: 2900, column: 6, scope: !12472)
!12537 = !DILocation(line: 2901, column: 3, scope: !12538)
!12538 = distinct !DILexicalBlock(scope: !12529, file: !3, line: 2900, column: 45)
!12539 = !DILocation(line: 2902, column: 32, scope: !12538)
!12540 = !DILocation(line: 2902, column: 37, scope: !12538)
!12541 = !DILocation(line: 2902, column: 29, scope: !12538)
!12542 = !DILocation(line: 2902, column: 25, scope: !12538)
!12543 = !DILocation(line: 2902, column: 3, scope: !12538)
!12544 = !DILocation(line: 2902, column: 8, scope: !12538)
!12545 = !DILocation(line: 2902, column: 22, scope: !12538)
!12546 = !DILocation(line: 2903, column: 2, scope: !12538)
!12547 = !DILocation(line: 2904, column: 1, scope: !12472)
!12548 = distinct !DISubprogram(name: "ata_eh_revalidate_and_attach", scope: !3, file: !3, line: 2906, type: !6625, scopeLine: 2908, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!12549 = !DILocation(line: 407, column: 64, scope: !7380, inlinedAt: !12550)
!12550 = distinct !DILocation(line: 3021, column: 3, scope: !12551)
!12551 = distinct !DILexicalBlock(scope: !12552, file: !3, line: 3002, column: 35)
!12552 = distinct !DILexicalBlock(scope: !12553, file: !3, line: 3002, column: 2)
!12553 = distinct !DILexicalBlock(scope: !12548, file: !3, line: 3002, column: 2)
!12554 = !DILocation(line: 407, column: 84, scope: !7380, inlinedAt: !12550)
!12555 = !DILocation(line: 327, column: 67, scope: !7389, inlinedAt: !12556)
!12556 = distinct !DILocation(line: 3019, column: 3, scope: !12557)
!12557 = distinct !DILexicalBlock(scope: !12558, file: !3, line: 3019, column: 3)
!12558 = distinct !DILexicalBlock(scope: !12559, file: !3, line: 3019, column: 3)
!12559 = distinct !DILexicalBlock(scope: !12560, file: !3, line: 3019, column: 3)
!12560 = distinct !DILexicalBlock(scope: !12561, file: !3, line: 3019, column: 3)
!12561 = distinct !DILexicalBlock(scope: !12551, file: !3, line: 3019, column: 3)
!12562 = !DILocalVariable(name: "link", arg: 1, scope: !12548, file: !3, line: 2906, type: !6396)
!12563 = !DILocation(line: 2906, column: 58, scope: !12548)
!12564 = !DILocalVariable(name: "r_failed_dev", arg: 2, scope: !12548, file: !3, line: 2907, type: !6627)
!12565 = !DILocation(line: 2907, column: 26, scope: !12548)
!12566 = !DILocalVariable(name: "ap", scope: !12548, file: !3, line: 2909, type: !6375)
!12567 = !DILocation(line: 2909, column: 19, scope: !12548)
!12568 = !DILocation(line: 2909, column: 24, scope: !12548)
!12569 = !DILocation(line: 2909, column: 30, scope: !12548)
!12570 = !DILocalVariable(name: "ehc", scope: !12548, file: !3, line: 2910, type: !7127)
!12571 = !DILocation(line: 2910, column: 25, scope: !12548)
!12572 = !DILocation(line: 2910, column: 32, scope: !12548)
!12573 = !DILocation(line: 2910, column: 38, scope: !12548)
!12574 = !DILocalVariable(name: "dev", scope: !12548, file: !3, line: 2911, type: !6392)
!12575 = !DILocation(line: 2911, column: 21, scope: !12548)
!12576 = !DILocalVariable(name: "new_mask", scope: !12548, file: !3, line: 2912, type: !7)
!12577 = !DILocation(line: 2912, column: 15, scope: !12548)
!12578 = !DILocalVariable(name: "flags", scope: !12548, file: !3, line: 2913, type: !1012)
!12579 = !DILocation(line: 2913, column: 16, scope: !12548)
!12580 = !DILocalVariable(name: "rc", scope: !12548, file: !3, line: 2914, type: !206)
!12581 = !DILocation(line: 2914, column: 6, scope: !12548)
!12582 = !DILocation(line: 2922, column: 2, scope: !12583)
!12583 = distinct !DILexicalBlock(scope: !12548, file: !3, line: 2922, column: 2)
!12584 = !DILocation(line: 2922, column: 2, scope: !12585)
!12585 = distinct !DILexicalBlock(scope: !12583, file: !3, line: 2922, column: 2)
!12586 = !DILocalVariable(name: "action", scope: !12587, file: !3, line: 2923, type: !7)
!12587 = distinct !DILexicalBlock(scope: !12585, file: !3, line: 2922, column: 43)
!12588 = !DILocation(line: 2923, column: 16, scope: !12587)
!12589 = !DILocation(line: 2923, column: 43, scope: !12587)
!12590 = !DILocation(line: 2923, column: 25, scope: !12587)
!12591 = !DILocalVariable(name: "readid_flags", scope: !12587, file: !3, line: 2924, type: !7)
!12592 = !DILocation(line: 2924, column: 16, scope: !12587)
!12593 = !DILocation(line: 2926, column: 7, scope: !12594)
!12594 = distinct !DILexicalBlock(scope: !12587, file: !3, line: 2926, column: 7)
!12595 = !DILocation(line: 2926, column: 12, scope: !12594)
!12596 = !DILocation(line: 2926, column: 14, scope: !12594)
!12597 = !DILocation(line: 2926, column: 20, scope: !12594)
!12598 = !DILocation(line: 2926, column: 7, scope: !12587)
!12599 = !DILocation(line: 2927, column: 17, scope: !12594)
!12600 = !DILocation(line: 2927, column: 4, scope: !12594)
!12601 = !DILocation(line: 2929, column: 8, scope: !12602)
!12602 = distinct !DILexicalBlock(scope: !12587, file: !3, line: 2929, column: 7)
!12603 = !DILocation(line: 2929, column: 15, scope: !12602)
!12604 = !DILocation(line: 2929, column: 36, scope: !12602)
!12605 = !DILocation(line: 2929, column: 55, scope: !12602)
!12606 = !DILocation(line: 2929, column: 39, scope: !12602)
!12607 = !DILocation(line: 2929, column: 7, scope: !12587)
!12608 = !DILocalVariable(name: "__ret_warn_on", scope: !12609, file: !3, line: 2930, type: !206)
!12609 = distinct !DILexicalBlock(scope: !12610, file: !3, line: 2930, column: 4)
!12610 = distinct !DILexicalBlock(scope: !12602, file: !3, line: 2929, column: 61)
!12611 = !DILocation(line: 2930, column: 4, scope: !12609)
!12612 = !DILocation(line: 2930, column: 4, scope: !12613)
!12613 = distinct !DILexicalBlock(scope: !12609, file: !3, line: 2930, column: 4)
!12614 = !DILocation(line: 2930, column: 4, scope: !12615)
!12615 = distinct !DILexicalBlock(scope: !12613, file: !3, line: 2930, column: 4)
!12616 = !DILocation(line: 2930, column: 4, scope: !12617)
!12617 = distinct !DILexicalBlock(scope: !12615, file: !3, line: 2930, column: 4)
!12618 = !DILocation(line: 2930, column: 4, scope: !12619)
!12619 = distinct !DILexicalBlock(scope: !12615, file: !3, line: 2930, column: 4)
!12620 = !{i32 -2140032796, i32 -2140032767, i32 -2140032721, i32 -2140032663, i32 -2140032609, i32 -2140032555, i32 -2140032500, i32 -2140032469}
!12621 = !DILocation(line: 2930, column: 4, scope: !12622)
!12622 = distinct !DILexicalBlock(scope: !12615, file: !3, line: 2930, column: 4)
!12623 = !{i32 -2140032063, i32 -2140032056, i32 -2140032004, i32 -2140031973, i32 -2140031943}
!12624 = !DILocation(line: 2930, column: 4, scope: !12625)
!12625 = distinct !DILexicalBlock(scope: !12615, file: !3, line: 2930, column: 4)
!12626 = !DILocation(line: 2932, column: 48, scope: !12627)
!12627 = distinct !DILexicalBlock(scope: !12610, file: !3, line: 2932, column: 8)
!12628 = !DILocation(line: 2932, column: 30, scope: !12627)
!12629 = !DILocation(line: 2932, column: 8, scope: !12627)
!12630 = !DILocation(line: 2932, column: 8, scope: !12610)
!12631 = !DILocation(line: 2933, column: 8, scope: !12632)
!12632 = distinct !DILexicalBlock(scope: !12627, file: !3, line: 2932, column: 55)
!12633 = !DILocation(line: 2934, column: 5, scope: !12632)
!12634 = !DILocation(line: 2937, column: 23, scope: !12610)
!12635 = !DILocation(line: 2937, column: 29, scope: !12610)
!12636 = !DILocation(line: 2937, column: 4, scope: !12610)
!12637 = !DILocation(line: 2938, column: 28, scope: !12610)
!12638 = !DILocation(line: 2938, column: 33, scope: !12610)
!12639 = !DILocation(line: 2938, column: 38, scope: !12610)
!12640 = !DILocation(line: 2938, column: 46, scope: !12610)
!12641 = !DILocation(line: 2938, column: 51, scope: !12610)
!12642 = !DILocation(line: 2939, column: 7, scope: !12610)
!12643 = !DILocation(line: 2938, column: 9, scope: !12610)
!12644 = !DILocation(line: 2938, column: 7, scope: !12610)
!12645 = !DILocation(line: 2940, column: 8, scope: !12646)
!12646 = distinct !DILexicalBlock(scope: !12610, file: !3, line: 2940, column: 8)
!12647 = !DILocation(line: 2940, column: 8, scope: !12610)
!12648 = !DILocation(line: 2941, column: 5, scope: !12646)
!12649 = !DILocation(line: 2943, column: 16, scope: !12610)
!12650 = !DILocation(line: 2943, column: 22, scope: !12610)
!12651 = !DILocation(line: 2943, column: 4, scope: !12610)
!12652 = !DILocation(line: 2948, column: 4, scope: !12610)
!12653 = !DILocation(line: 2948, column: 9, scope: !12610)
!12654 = !DILocation(line: 2948, column: 11, scope: !12610)
!12655 = !DILocation(line: 2948, column: 17, scope: !12610)
!12656 = !DILocation(line: 2951, column: 20, scope: !12610)
!12657 = !DILocation(line: 2951, column: 24, scope: !12610)
!12658 = !DILocation(line: 2951, column: 4, scope: !12610)
!12659 = !DILocation(line: 2952, column: 3, scope: !12610)
!12660 = !DILocation(line: 2952, column: 14, scope: !12661)
!12661 = distinct !DILexicalBlock(scope: !12602, file: !3, line: 2952, column: 14)
!12662 = !DILocation(line: 2952, column: 19, scope: !12661)
!12663 = !DILocation(line: 2952, column: 25, scope: !12661)
!12664 = !DILocation(line: 2952, column: 44, scope: !12661)
!12665 = !DILocation(line: 2953, column: 7, scope: !12661)
!12666 = !DILocation(line: 2953, column: 12, scope: !12661)
!12667 = !DILocation(line: 2953, column: 18, scope: !12661)
!12668 = !DILocation(line: 2953, column: 23, scope: !12661)
!12669 = !DILocation(line: 2953, column: 30, scope: !12661)
!12670 = !DILocation(line: 2954, column: 25, scope: !12661)
!12671 = !DILocation(line: 2954, column: 30, scope: !12661)
!12672 = !DILocation(line: 2954, column: 38, scope: !12661)
!12673 = !DILocation(line: 2954, column: 43, scope: !12661)
!12674 = !DILocation(line: 2954, column: 7, scope: !12661)
!12675 = !DILocation(line: 2952, column: 14, scope: !12602)
!12676 = !DILocation(line: 2961, column: 17, scope: !12677)
!12677 = distinct !DILexicalBlock(scope: !12661, file: !3, line: 2954, column: 52)
!12678 = !DILocation(line: 2961, column: 22, scope: !12677)
!12679 = !DILocation(line: 2961, column: 30, scope: !12677)
!12680 = !DILocation(line: 2961, column: 35, scope: !12677)
!12681 = !DILocation(line: 2961, column: 4, scope: !12677)
!12682 = !DILocation(line: 2961, column: 9, scope: !12677)
!12683 = !DILocation(line: 2961, column: 15, scope: !12677)
!12684 = !DILocation(line: 2963, column: 8, scope: !12685)
!12685 = distinct !DILexicalBlock(scope: !12677, file: !3, line: 2963, column: 8)
!12686 = !DILocation(line: 2963, column: 13, scope: !12685)
!12687 = !DILocation(line: 2963, column: 19, scope: !12685)
!12688 = !DILocation(line: 2963, column: 8, scope: !12677)
!12689 = !DILocation(line: 2964, column: 26, scope: !12685)
!12690 = !DILocation(line: 2964, column: 10, scope: !12685)
!12691 = !DILocation(line: 2964, column: 8, scope: !12685)
!12692 = !DILocation(line: 2964, column: 5, scope: !12685)
!12693 = !DILocation(line: 2966, column: 26, scope: !12685)
!12694 = !DILocation(line: 2966, column: 32, scope: !12685)
!12695 = !DILocation(line: 2966, column: 37, scope: !12685)
!12696 = !DILocation(line: 2967, column: 12, scope: !12685)
!12697 = !DILocation(line: 2967, column: 26, scope: !12685)
!12698 = !DILocation(line: 2967, column: 31, scope: !12685)
!12699 = !DILocation(line: 2966, column: 10, scope: !12685)
!12700 = !DILocation(line: 2966, column: 8, scope: !12685)
!12701 = !DILocation(line: 2970, column: 31, scope: !12677)
!12702 = !DILocation(line: 2970, column: 36, scope: !12677)
!12703 = !DILocation(line: 2970, column: 4, scope: !12677)
!12704 = !DILocation(line: 2970, column: 9, scope: !12677)
!12705 = !DILocation(line: 2970, column: 17, scope: !12677)
!12706 = !DILocation(line: 2970, column: 22, scope: !12677)
!12707 = !DILocation(line: 2970, column: 29, scope: !12677)
!12708 = !DILocation(line: 2971, column: 4, scope: !12677)
!12709 = !DILocation(line: 2971, column: 9, scope: !12677)
!12710 = !DILocation(line: 2971, column: 15, scope: !12677)
!12711 = !DILocation(line: 2973, column: 12, scope: !12677)
!12712 = !DILocation(line: 2973, column: 4, scope: !12677)
!12713 = !DILocation(line: 2976, column: 22, scope: !12714)
!12714 = distinct !DILexicalBlock(scope: !12677, file: !3, line: 2973, column: 16)
!12715 = !DILocation(line: 2976, column: 27, scope: !12714)
!12716 = !DILocation(line: 2976, column: 5, scope: !12714)
!12717 = !DILocation(line: 2977, column: 22, scope: !12714)
!12718 = !DILocation(line: 2977, column: 27, scope: !12714)
!12719 = !DILocation(line: 2977, column: 19, scope: !12714)
!12720 = !DILocation(line: 2977, column: 14, scope: !12714)
!12721 = !DILocation(line: 2978, column: 5, scope: !12714)
!12722 = !DILocation(line: 2984, column: 22, scope: !12714)
!12723 = !DILocation(line: 2984, column: 5, scope: !12714)
!12724 = !DILocation(line: 2985, column: 5, scope: !12714)
!12725 = !DILocation(line: 2987, column: 5, scope: !12714)
!12726 = !DILocation(line: 2989, column: 3, scope: !12677)
!12727 = !DILocation(line: 2990, column: 2, scope: !12587)
!12728 = distinct !{!12728, !12582, !12729}
!12729 = !DILocation(line: 2990, column: 2, scope: !12583)
!12730 = !DILocation(line: 2993, column: 7, scope: !12731)
!12731 = distinct !DILexicalBlock(scope: !12548, file: !3, line: 2993, column: 6)
!12732 = !DILocation(line: 2993, column: 12, scope: !12731)
!12733 = !DILocation(line: 2993, column: 14, scope: !12731)
!12734 = !DILocation(line: 2993, column: 20, scope: !12731)
!12735 = !DILocation(line: 2993, column: 41, scope: !12731)
!12736 = !DILocation(line: 2993, column: 61, scope: !12731)
!12737 = !DILocation(line: 2993, column: 44, scope: !12731)
!12738 = !DILocation(line: 2993, column: 6, scope: !12548)
!12739 = !DILocation(line: 2994, column: 7, scope: !12740)
!12740 = distinct !DILexicalBlock(scope: !12741, file: !3, line: 2994, column: 7)
!12741 = distinct !DILexicalBlock(scope: !12731, file: !3, line: 2993, column: 68)
!12742 = !DILocation(line: 2994, column: 11, scope: !12740)
!12743 = !DILocation(line: 2994, column: 16, scope: !12740)
!12744 = !DILocation(line: 2994, column: 7, scope: !12741)
!12745 = !DILocation(line: 2995, column: 14, scope: !12740)
!12746 = !DILocation(line: 2995, column: 18, scope: !12740)
!12747 = !DILocation(line: 2995, column: 23, scope: !12740)
!12748 = !DILocation(line: 2995, column: 36, scope: !12740)
!12749 = !DILocation(line: 2995, column: 4, scope: !12740)
!12750 = !DILocation(line: 2995, column: 8, scope: !12740)
!12751 = !DILocation(line: 2995, column: 12, scope: !12740)
!12752 = !DILocation(line: 2996, column: 17, scope: !12741)
!12753 = !DILocation(line: 2996, column: 3, scope: !12741)
!12754 = !DILocation(line: 2997, column: 2, scope: !12741)
!12755 = !DILocation(line: 3002, column: 2, scope: !12553)
!12756 = !DILocation(line: 3002, column: 2, scope: !12552)
!12757 = !DILocation(line: 3003, column: 9, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12551, file: !3, line: 3003, column: 7)
!12759 = !DILocation(line: 3003, column: 26, scope: !12758)
!12760 = !DILocation(line: 3003, column: 31, scope: !12758)
!12761 = !DILocation(line: 3003, column: 23, scope: !12758)
!12762 = !DILocation(line: 3003, column: 18, scope: !12758)
!12763 = !DILocation(line: 3003, column: 7, scope: !12551)
!12764 = !DILocation(line: 3004, column: 4, scope: !12758)
!12765 = !DILocation(line: 3006, column: 16, scope: !12551)
!12766 = !DILocation(line: 3006, column: 21, scope: !12551)
!12767 = !DILocation(line: 3006, column: 29, scope: !12551)
!12768 = !DILocation(line: 3006, column: 34, scope: !12551)
!12769 = !DILocation(line: 3006, column: 3, scope: !12551)
!12770 = !DILocation(line: 3006, column: 8, scope: !12551)
!12771 = !DILocation(line: 3006, column: 14, scope: !12551)
!12772 = !DILocation(line: 3008, column: 7, scope: !12773)
!12773 = distinct !DILexicalBlock(scope: !12551, file: !3, line: 3008, column: 7)
!12774 = !DILocation(line: 3008, column: 12, scope: !12773)
!12775 = !DILocation(line: 3008, column: 18, scope: !12773)
!12776 = !DILocation(line: 3008, column: 7, scope: !12551)
!12777 = !DILocation(line: 3009, column: 4, scope: !12773)
!12778 = !DILocation(line: 3011, column: 3, scope: !12551)
!12779 = !DILocation(line: 3011, column: 8, scope: !12551)
!12780 = !DILocation(line: 3011, column: 10, scope: !12551)
!12781 = !DILocation(line: 3011, column: 16, scope: !12551)
!12782 = !DILocation(line: 3012, column: 26, scope: !12551)
!12783 = !DILocation(line: 3012, column: 8, scope: !12551)
!12784 = !DILocation(line: 3012, column: 6, scope: !12551)
!12785 = !DILocation(line: 3013, column: 3, scope: !12551)
!12786 = !DILocation(line: 3013, column: 8, scope: !12551)
!12787 = !DILocation(line: 3013, column: 10, scope: !12551)
!12788 = !DILocation(line: 3013, column: 16, scope: !12551)
!12789 = !DILocation(line: 3014, column: 7, scope: !12790)
!12790 = distinct !DILexicalBlock(scope: !12551, file: !3, line: 3014, column: 7)
!12791 = !DILocation(line: 3014, column: 7, scope: !12551)
!12792 = !DILocation(line: 3015, column: 4, scope: !12793)
!12793 = distinct !DILexicalBlock(scope: !12790, file: !3, line: 3014, column: 11)
!12794 = !DILocation(line: 3015, column: 9, scope: !12793)
!12795 = !DILocation(line: 3015, column: 15, scope: !12793)
!12796 = !DILocation(line: 3016, column: 4, scope: !12793)
!12797 = !DILocation(line: 3019, column: 3, scope: !12551)
!12798 = !DILocation(line: 3019, column: 3, scope: !12561)
!12799 = !DILocalVariable(name: "__dummy", scope: !12800, file: !3, line: 3019, type: !1012)
!12800 = distinct !DILexicalBlock(scope: !12560, file: !3, line: 3019, column: 3)
!12801 = !DILocation(line: 3019, column: 3, scope: !12800)
!12802 = !DILocalVariable(name: "__dummy2", scope: !12800, file: !3, line: 3019, type: !1012)
!12803 = !DILocation(line: 3019, column: 3, scope: !12560)
!12804 = !DILocation(line: 3019, column: 3, scope: !12559)
!12805 = !DILocation(line: 3019, column: 3, scope: !12806)
!12806 = distinct !DILexicalBlock(scope: !12559, file: !3, line: 3019, column: 3)
!12807 = !DILocalVariable(name: "__dummy", scope: !12808, file: !3, line: 3019, type: !1012)
!12808 = distinct !DILexicalBlock(scope: !12809, file: !3, line: 3019, column: 3)
!12809 = distinct !DILexicalBlock(scope: !12806, file: !3, line: 3019, column: 3)
!12810 = !DILocation(line: 3019, column: 3, scope: !12808)
!12811 = !DILocalVariable(name: "__dummy2", scope: !12808, file: !3, line: 3019, type: !1012)
!12812 = !DILocation(line: 3019, column: 3, scope: !12809)
!12813 = !DILocation(line: 3019, column: 3, scope: !12558)
!12814 = !{i32 -2140030770}
!12815 = !DILocation(line: 3019, column: 3, scope: !12557)
!12816 = !DILocation(line: 329, column: 10, scope: !7389, inlinedAt: !12556)
!12817 = !DILocation(line: 329, column: 16, scope: !7389, inlinedAt: !12556)
!12818 = !DILocation(line: 3020, column: 3, scope: !12551)
!12819 = !DILocation(line: 3020, column: 7, scope: !12551)
!12820 = !DILocation(line: 3020, column: 14, scope: !12551)
!12821 = !DILocation(line: 3021, column: 26, scope: !12551)
!12822 = !DILocation(line: 3021, column: 30, scope: !12551)
!12823 = !DILocation(line: 3021, column: 36, scope: !12551)
!12824 = !DILocation(line: 409, column: 2, scope: !7438, inlinedAt: !12550)
!12825 = !DILocation(line: 409, column: 2, scope: !7443, inlinedAt: !12550)
!12826 = !DILocation(line: 409, column: 2, scope: !7444, inlinedAt: !12550)
!12827 = !DILocation(line: 409, column: 2, scope: !7451, inlinedAt: !12550)
!12828 = !DILocation(line: 409, column: 2, scope: !7454, inlinedAt: !12550)
!12829 = !DILocation(line: 3024, column: 3, scope: !12551)
!12830 = !DILocation(line: 3024, column: 8, scope: !12551)
!12831 = !DILocation(line: 3024, column: 10, scope: !12551)
!12832 = !DILocation(line: 3024, column: 16, scope: !12551)
!12833 = !DILocation(line: 3025, column: 2, scope: !12551)
!12834 = distinct !{!12834, !12755, !12835}
!12835 = !DILocation(line: 3025, column: 2, scope: !12553)
!12836 = !DILocation(line: 3027, column: 2, scope: !12548)
!12837 = !DILabel(scope: !12548, name: "err", file: !3, line: 3029)
!12838 = !DILocation(line: 3029, column: 2, scope: !12548)
!12839 = !DILocation(line: 3030, column: 18, scope: !12548)
!12840 = !DILocation(line: 3030, column: 3, scope: !12548)
!12841 = !DILocation(line: 3030, column: 16, scope: !12548)
!12842 = !DILocation(line: 3032, column: 9, scope: !12548)
!12843 = !DILocation(line: 3032, column: 2, scope: !12548)
!12844 = !DILocation(line: 3033, column: 1, scope: !12548)
!12845 = distinct !DISubprogram(name: "atapi_eh_clear_ua", scope: !3, file: !3, line: 3101, type: !8240, scopeLine: 3102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!12846 = !DILocalVariable(name: "dev", arg: 1, scope: !12845, file: !3, line: 3101, type: !6392)
!12847 = !DILocation(line: 3101, column: 49, scope: !12845)
!12848 = !DILocalVariable(name: "i", scope: !12845, file: !3, line: 3103, type: !206)
!12849 = !DILocation(line: 3103, column: 6, scope: !12845)
!12850 = !DILocation(line: 3105, column: 9, scope: !12851)
!12851 = distinct !DILexicalBlock(scope: !12845, file: !3, line: 3105, column: 2)
!12852 = !DILocation(line: 3105, column: 7, scope: !12851)
!12853 = !DILocation(line: 3105, column: 14, scope: !12854)
!12854 = distinct !DILexicalBlock(scope: !12851, file: !3, line: 3105, column: 2)
!12855 = !DILocation(line: 3105, column: 16, scope: !12854)
!12856 = !DILocation(line: 3105, column: 2, scope: !12851)
!12857 = !DILocalVariable(name: "sense_buffer", scope: !12858, file: !3, line: 3106, type: !6474)
!12858 = distinct !DILexicalBlock(scope: !12854, file: !3, line: 3105, column: 40)
!12859 = !DILocation(line: 3106, column: 7, scope: !12858)
!12860 = !DILocation(line: 3106, column: 22, scope: !12858)
!12861 = !DILocation(line: 3106, column: 27, scope: !12858)
!12862 = !DILocation(line: 3106, column: 33, scope: !12858)
!12863 = !DILocation(line: 3106, column: 37, scope: !12858)
!12864 = !DILocalVariable(name: "sense_key", scope: !12858, file: !3, line: 3107, type: !2257)
!12865 = !DILocation(line: 3107, column: 6, scope: !12858)
!12866 = !DILocalVariable(name: "err_mask", scope: !12858, file: !3, line: 3108, type: !7)
!12867 = !DILocation(line: 3108, column: 16, scope: !12858)
!12868 = !DILocation(line: 3110, column: 27, scope: !12858)
!12869 = !DILocation(line: 3110, column: 14, scope: !12858)
!12870 = !DILocation(line: 3110, column: 12, scope: !12858)
!12871 = !DILocation(line: 3111, column: 7, scope: !12872)
!12872 = distinct !DILexicalBlock(scope: !12858, file: !3, line: 3111, column: 7)
!12873 = !DILocation(line: 3111, column: 16, scope: !12872)
!12874 = !DILocation(line: 3111, column: 21, scope: !12872)
!12875 = !DILocation(line: 3111, column: 24, scope: !12872)
!12876 = !DILocation(line: 3111, column: 33, scope: !12872)
!12877 = !DILocation(line: 3111, column: 7, scope: !12858)
!12878 = !DILocation(line: 3112, column: 4, scope: !12879)
!12879 = distinct !DILexicalBlock(scope: !12872, file: !3, line: 3111, column: 48)
!12880 = !DILocation(line: 3115, column: 4, scope: !12879)
!12881 = !DILocation(line: 3118, column: 8, scope: !12882)
!12882 = distinct !DILexicalBlock(scope: !12858, file: !3, line: 3118, column: 7)
!12883 = !DILocation(line: 3118, column: 17, scope: !12882)
!12884 = !DILocation(line: 3118, column: 20, scope: !12882)
!12885 = !DILocation(line: 3118, column: 30, scope: !12882)
!12886 = !DILocation(line: 3118, column: 7, scope: !12858)
!12887 = !DILocation(line: 3119, column: 4, scope: !12882)
!12888 = !DILocation(line: 3121, column: 37, scope: !12858)
!12889 = !DILocation(line: 3121, column: 42, scope: !12858)
!12890 = !DILocation(line: 3121, column: 56, scope: !12858)
!12891 = !DILocation(line: 3121, column: 14, scope: !12858)
!12892 = !DILocation(line: 3121, column: 12, scope: !12858)
!12893 = !DILocation(line: 3122, column: 7, scope: !12894)
!12894 = distinct !DILexicalBlock(scope: !12858, file: !3, line: 3122, column: 7)
!12895 = !DILocation(line: 3122, column: 7, scope: !12858)
!12896 = !DILocation(line: 3123, column: 4, scope: !12897)
!12897 = distinct !DILexicalBlock(scope: !12894, file: !3, line: 3122, column: 17)
!12898 = !DILocation(line: 3125, column: 4, scope: !12897)
!12899 = !DILocation(line: 3127, column: 2, scope: !12858)
!12900 = !DILocation(line: 3105, column: 36, scope: !12854)
!12901 = !DILocation(line: 3105, column: 2, scope: !12854)
!12902 = distinct !{!12902, !12856, !12903}
!12903 = !DILocation(line: 3127, column: 2, scope: !12851)
!12904 = !DILocation(line: 3129, column: 2, scope: !12845)
!12905 = !DILocation(line: 3132, column: 2, scope: !12845)
!12906 = !DILocation(line: 3133, column: 1, scope: !12845)
!12907 = distinct !DISubprogram(name: "zpodd_dev_enabled", scope: !490, file: !490, line: 250, type: !12908, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!12908 = !DISubroutineType(types: !12909)
!12909 = !{!1333, !6392}
!12910 = !DILocalVariable(name: "dev", arg: 1, scope: !12907, file: !490, line: 250, type: !6392)
!12911 = !DILocation(line: 250, column: 57, scope: !12907)
!12912 = !DILocation(line: 250, column: 64, scope: !12907)
!12913 = distinct !DISubprogram(name: "zpodd_post_poweron", scope: !490, file: !490, line: 255, type: !6636, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!12914 = !DILocalVariable(name: "dev", arg: 1, scope: !12913, file: !490, line: 255, type: !6392)
!12915 = !DILocation(line: 255, column: 58, scope: !12913)
!12916 = !DILocation(line: 255, column: 64, scope: !12913)
!12917 = distinct !DISubprogram(name: "ata_eh_maybe_retry_flush", scope: !3, file: !3, line: 3152, type: !8240, scopeLine: 3153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!12918 = !DILocalVariable(name: "dev", arg: 1, scope: !12917, file: !3, line: 3152, type: !6392)
!12919 = !DILocation(line: 3152, column: 56, scope: !12917)
!12920 = !DILocalVariable(name: "link", scope: !12917, file: !3, line: 3154, type: !6396)
!12921 = !DILocation(line: 3154, column: 19, scope: !12917)
!12922 = !DILocation(line: 3154, column: 26, scope: !12917)
!12923 = !DILocation(line: 3154, column: 31, scope: !12917)
!12924 = !DILocalVariable(name: "ap", scope: !12917, file: !3, line: 3155, type: !6375)
!12925 = !DILocation(line: 3155, column: 19, scope: !12917)
!12926 = !DILocation(line: 3155, column: 24, scope: !12917)
!12927 = !DILocation(line: 3155, column: 30, scope: !12917)
!12928 = !DILocalVariable(name: "qc", scope: !12917, file: !3, line: 3156, type: !6387)
!12929 = !DILocation(line: 3156, column: 25, scope: !12917)
!12930 = !DILocalVariable(name: "tf", scope: !12917, file: !3, line: 3157, type: !6554)
!12931 = !DILocation(line: 3157, column: 22, scope: !12917)
!12932 = !DILocalVariable(name: "err_mask", scope: !12917, file: !3, line: 3158, type: !7)
!12933 = !DILocation(line: 3158, column: 15, scope: !12917)
!12934 = !DILocalVariable(name: "rc", scope: !12917, file: !3, line: 3159, type: !206)
!12935 = !DILocation(line: 3159, column: 6, scope: !12917)
!12936 = !DILocation(line: 3162, column: 21, scope: !12937)
!12937 = distinct !DILexicalBlock(scope: !12917, file: !3, line: 3162, column: 6)
!12938 = !DILocation(line: 3162, column: 27, scope: !12937)
!12939 = !DILocation(line: 3162, column: 7, scope: !12937)
!12940 = !DILocation(line: 3162, column: 6, scope: !12917)
!12941 = !DILocation(line: 3163, column: 3, scope: !12937)
!12942 = !DILocation(line: 3165, column: 25, scope: !12917)
!12943 = !DILocation(line: 3165, column: 29, scope: !12917)
!12944 = !DILocation(line: 3165, column: 35, scope: !12917)
!12945 = !DILocation(line: 3165, column: 7, scope: !12917)
!12946 = !DILocation(line: 3165, column: 5, scope: !12917)
!12947 = !DILocation(line: 3166, column: 6, scope: !12948)
!12948 = distinct !DILexicalBlock(scope: !12917, file: !3, line: 3166, column: 6)
!12949 = !DILocation(line: 3166, column: 10, scope: !12948)
!12950 = !DILocation(line: 3166, column: 17, scope: !12948)
!12951 = !DILocation(line: 3166, column: 14, scope: !12948)
!12952 = !DILocation(line: 3166, column: 21, scope: !12948)
!12953 = !DILocation(line: 3166, column: 25, scope: !12948)
!12954 = !DILocation(line: 3166, column: 29, scope: !12948)
!12955 = !DILocation(line: 3166, column: 32, scope: !12948)
!12956 = !DILocation(line: 3166, column: 40, scope: !12948)
!12957 = !DILocation(line: 3166, column: 61, scope: !12948)
!12958 = !DILocation(line: 3167, column: 11, scope: !12948)
!12959 = !DILocation(line: 3167, column: 15, scope: !12948)
!12960 = !DILocation(line: 3167, column: 18, scope: !12948)
!12961 = !DILocation(line: 3167, column: 26, scope: !12948)
!12962 = !DILocation(line: 3166, column: 6, scope: !12917)
!12963 = !DILocation(line: 3168, column: 3, scope: !12948)
!12964 = !DILocation(line: 3171, column: 6, scope: !12965)
!12965 = distinct !DILexicalBlock(scope: !12917, file: !3, line: 3171, column: 6)
!12966 = !DILocation(line: 3171, column: 10, scope: !12965)
!12967 = !DILocation(line: 3171, column: 19, scope: !12965)
!12968 = !DILocation(line: 3171, column: 6, scope: !12917)
!12969 = !DILocation(line: 3172, column: 3, scope: !12965)
!12970 = !DILocation(line: 3175, column: 14, scope: !12917)
!12971 = !DILocation(line: 3175, column: 2, scope: !12917)
!12972 = !DILocation(line: 3177, column: 15, scope: !12917)
!12973 = !DILocation(line: 3177, column: 19, scope: !12917)
!12974 = !DILocation(line: 3177, column: 22, scope: !12917)
!12975 = !DILocation(line: 3177, column: 5, scope: !12917)
!12976 = !DILocation(line: 3177, column: 13, scope: !12917)
!12977 = !DILocation(line: 3178, column: 5, scope: !12917)
!12978 = !DILocation(line: 3178, column: 11, scope: !12917)
!12979 = !DILocation(line: 3179, column: 5, scope: !12917)
!12980 = !DILocation(line: 3179, column: 14, scope: !12917)
!12981 = !DILocation(line: 3181, column: 2, scope: !12917)
!12982 = !DILocation(line: 3184, column: 31, scope: !12917)
!12983 = !DILocation(line: 3184, column: 13, scope: !12917)
!12984 = !DILocation(line: 3184, column: 11, scope: !12917)
!12985 = !DILocation(line: 3185, column: 7, scope: !12986)
!12986 = distinct !DILexicalBlock(scope: !12917, file: !3, line: 3185, column: 6)
!12987 = !DILocation(line: 3185, column: 6, scope: !12917)
!12988 = !DILocalVariable(name: "__UNIQUE_ID___x331", scope: !12989, file: !3, line: 3194, type: !206)
!12989 = distinct !DILexicalBlock(scope: !12990, file: !3, line: 3194, column: 26)
!12990 = distinct !DILexicalBlock(scope: !12986, file: !3, line: 3185, column: 17)
!12991 = !DILocation(line: 3194, column: 26, scope: !12989)
!12992 = !DILocalVariable(name: "__UNIQUE_ID___y332", scope: !12989, file: !3, line: 3194, type: !206)
!12993 = !DILocation(line: 3194, column: 3, scope: !12990)
!12994 = !DILocation(line: 3194, column: 7, scope: !12990)
!12995 = !DILocation(line: 3194, column: 16, scope: !12990)
!12996 = !DILocation(line: 3194, column: 24, scope: !12990)
!12997 = !DILocation(line: 3195, column: 2, scope: !12990)
!12998 = !DILocation(line: 3196, column: 3, scope: !12999)
!12999 = distinct !DILexicalBlock(scope: !12986, file: !3, line: 3195, column: 9)
!13000 = !DILocation(line: 3198, column: 6, scope: !12999)
!13001 = !DILocation(line: 3201, column: 7, scope: !13002)
!13002 = distinct !DILexicalBlock(scope: !12999, file: !3, line: 3201, column: 7)
!13003 = !DILocation(line: 3201, column: 16, scope: !13002)
!13004 = !DILocation(line: 3201, column: 7, scope: !12999)
!13005 = !DILocation(line: 3202, column: 4, scope: !13006)
!13006 = distinct !DILexicalBlock(scope: !13002, file: !3, line: 3201, column: 30)
!13007 = !DILocation(line: 3202, column: 8, scope: !13006)
!13008 = !DILocation(line: 3202, column: 17, scope: !13006)
!13009 = !DILocation(line: 3203, column: 4, scope: !13006)
!13010 = !DILocation(line: 3203, column: 8, scope: !13006)
!13011 = !DILocation(line: 3203, column: 20, scope: !13006)
!13012 = !DILocation(line: 3204, column: 10, scope: !13013)
!13013 = distinct !DILexicalBlock(scope: !13006, file: !3, line: 3204, column: 8)
!13014 = !DILocation(line: 3204, column: 14, scope: !13013)
!13015 = !DILocation(line: 3204, column: 21, scope: !13013)
!13016 = !DILocation(line: 3204, column: 8, scope: !13006)
!13017 = !DILocation(line: 3205, column: 8, scope: !13013)
!13018 = !DILocation(line: 3205, column: 5, scope: !13013)
!13019 = !DILocation(line: 3206, column: 3, scope: !13006)
!13020 = !DILocation(line: 3208, column: 9, scope: !12917)
!13021 = !DILocation(line: 3208, column: 2, scope: !12917)
!13022 = !DILocation(line: 3209, column: 1, scope: !12917)
!13023 = distinct !DISubprogram(name: "ata_eh_set_lpm", scope: !3, file: !3, line: 3228, type: !13024, scopeLine: 3230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!13024 = !DISubroutineType(types: !13025)
!13025 = !{!206, !6396, !192, !6627}
!13026 = !DILocalVariable(name: "link", arg: 1, scope: !13023, file: !3, line: 3228, type: !6396)
!13027 = !DILocation(line: 3228, column: 44, scope: !13023)
!13028 = !DILocalVariable(name: "policy", arg: 2, scope: !13023, file: !3, line: 3228, type: !192)
!13029 = !DILocation(line: 3228, column: 70, scope: !13023)
!13030 = !DILocalVariable(name: "r_failed_dev", arg: 3, scope: !13023, file: !3, line: 3229, type: !6627)
!13031 = !DILocation(line: 3229, column: 26, scope: !13023)
!13032 = !DILocalVariable(name: "ap", scope: !13023, file: !3, line: 3231, type: !6375)
!13033 = !DILocation(line: 3231, column: 19, scope: !13023)
!13034 = !DILocation(line: 3231, column: 41, scope: !13023)
!13035 = !DILocation(line: 3231, column: 24, scope: !13023)
!13036 = !DILocation(line: 3231, column: 49, scope: !13023)
!13037 = !DILocation(line: 3231, column: 55, scope: !13023)
!13038 = !DILocalVariable(name: "ehc", scope: !13023, file: !3, line: 3232, type: !7127)
!13039 = !DILocation(line: 3232, column: 25, scope: !13023)
!13040 = !DILocation(line: 3232, column: 32, scope: !13023)
!13041 = !DILocation(line: 3232, column: 38, scope: !13023)
!13042 = !DILocalVariable(name: "dev", scope: !13023, file: !3, line: 3233, type: !6392)
!13043 = !DILocation(line: 3233, column: 21, scope: !13023)
!13044 = !DILocalVariable(name: "link_dev", scope: !13023, file: !3, line: 3233, type: !6392)
!13045 = !DILocation(line: 3233, column: 27, scope: !13023)
!13046 = !DILocalVariable(name: "lpm_dev", scope: !13023, file: !3, line: 3233, type: !6392)
!13047 = !DILocation(line: 3233, column: 45, scope: !13023)
!13048 = !DILocalVariable(name: "old_policy", scope: !13023, file: !3, line: 3234, type: !192)
!13049 = !DILocation(line: 3234, column: 22, scope: !13023)
!13050 = !DILocation(line: 3234, column: 35, scope: !13023)
!13051 = !DILocation(line: 3234, column: 41, scope: !13023)
!13052 = !DILocalVariable(name: "no_dipm", scope: !13023, file: !3, line: 3235, type: !1333)
!13053 = !DILocation(line: 3235, column: 7, scope: !13023)
!13054 = !DILocation(line: 3235, column: 17, scope: !13023)
!13055 = !DILocation(line: 3235, column: 23, scope: !13023)
!13056 = !DILocation(line: 3235, column: 27, scope: !13023)
!13057 = !DILocation(line: 3235, column: 33, scope: !13023)
!13058 = !DILocalVariable(name: "hints", scope: !13023, file: !3, line: 3236, type: !7)
!13059 = !DILocation(line: 3236, column: 15, scope: !13023)
!13060 = !DILocalVariable(name: "err_mask", scope: !13023, file: !3, line: 3237, type: !7)
!13061 = !DILocation(line: 3237, column: 15, scope: !13023)
!13062 = !DILocalVariable(name: "rc", scope: !13023, file: !3, line: 3238, type: !206)
!13063 = !DILocation(line: 3238, column: 6, scope: !13023)
!13064 = !DILocation(line: 3242, column: 7, scope: !13065)
!13065 = distinct !DILexicalBlock(scope: !13023, file: !3, line: 3241, column: 6)
!13066 = !DILocation(line: 3242, column: 13, scope: !13065)
!13067 = !DILocation(line: 3242, column: 19, scope: !13065)
!13068 = !DILocation(line: 3242, column: 39, scope: !13065)
!13069 = !DILocation(line: 3242, column: 43, scope: !13065)
!13070 = !DILocation(line: 3242, column: 46, scope: !13065)
!13071 = !DILocation(line: 3242, column: 50, scope: !13065)
!13072 = !DILocation(line: 3242, column: 54, scope: !13065)
!13073 = !DILocation(line: 3242, column: 59, scope: !13065)
!13074 = !DILocation(line: 3241, column: 6, scope: !13023)
!13075 = !DILocation(line: 3243, column: 3, scope: !13065)
!13076 = !DILocation(line: 3251, column: 2, scope: !13077)
!13077 = distinct !DILexicalBlock(scope: !13023, file: !3, line: 3251, column: 2)
!13078 = !DILocation(line: 3251, column: 2, scope: !13079)
!13079 = distinct !DILexicalBlock(scope: !13077, file: !3, line: 3251, column: 2)
!13080 = !DILocalVariable(name: "hipm", scope: !13081, file: !3, line: 3252, type: !1333)
!13081 = distinct !DILexicalBlock(scope: !13079, file: !3, line: 3251, column: 39)
!13082 = !DILocation(line: 3252, column: 8, scope: !13081)
!13083 = !DILocation(line: 3252, column: 31, scope: !13081)
!13084 = !DILocation(line: 3252, column: 36, scope: !13081)
!13085 = !DILocation(line: 3252, column: 15, scope: !13081)
!13086 = !DILocalVariable(name: "dipm", scope: !13081, file: !3, line: 3253, type: !1333)
!13087 = !DILocation(line: 3253, column: 8, scope: !13081)
!13088 = !DILocation(line: 3253, column: 31, scope: !13081)
!13089 = !DILocation(line: 3253, column: 36, scope: !13081)
!13090 = !DILocation(line: 3253, column: 15, scope: !13081)
!13091 = !DILocation(line: 3253, column: 40, scope: !13081)
!13092 = !DILocation(line: 3253, column: 44, scope: !13081)
!13093 = !DILocation(line: 3253, column: 43, scope: !13081)
!13094 = !DILocation(line: 0, scope: !13081)
!13095 = !DILocation(line: 3256, column: 8, scope: !13096)
!13096 = distinct !DILexicalBlock(scope: !13081, file: !3, line: 3256, column: 7)
!13097 = !DILocation(line: 3256, column: 7, scope: !13081)
!13098 = !DILocation(line: 3257, column: 15, scope: !13096)
!13099 = !DILocation(line: 3257, column: 13, scope: !13096)
!13100 = !DILocation(line: 3257, column: 4, scope: !13096)
!13101 = !DILocation(line: 3259, column: 8, scope: !13102)
!13102 = distinct !DILexicalBlock(scope: !13081, file: !3, line: 3259, column: 7)
!13103 = !DILocation(line: 3259, column: 16, scope: !13102)
!13104 = !DILocation(line: 3259, column: 20, scope: !13102)
!13105 = !DILocation(line: 3259, column: 25, scope: !13102)
!13106 = !DILocation(line: 3259, column: 28, scope: !13102)
!13107 = !DILocation(line: 3259, column: 7, scope: !13081)
!13108 = !DILocation(line: 3260, column: 14, scope: !13102)
!13109 = !DILocation(line: 3260, column: 12, scope: !13102)
!13110 = !DILocation(line: 3260, column: 4, scope: !13102)
!13111 = !DILocation(line: 3262, column: 9, scope: !13081)
!13112 = !DILocation(line: 3263, column: 8, scope: !13113)
!13113 = distinct !DILexicalBlock(scope: !13081, file: !3, line: 3263, column: 7)
!13114 = !DILocation(line: 3263, column: 7, scope: !13081)
!13115 = !DILocation(line: 3264, column: 10, scope: !13113)
!13116 = !DILocation(line: 3264, column: 4, scope: !13113)
!13117 = !DILocation(line: 3267, column: 7, scope: !13118)
!13118 = distinct !DILexicalBlock(scope: !13081, file: !3, line: 3267, column: 7)
!13119 = !DILocation(line: 3267, column: 14, scope: !13118)
!13120 = !DILocation(line: 3267, column: 44, scope: !13118)
!13121 = !DILocation(line: 3267, column: 47, scope: !13118)
!13122 = !DILocation(line: 3267, column: 7, scope: !13081)
!13123 = !DILocation(line: 3268, column: 35, scope: !13124)
!13124 = distinct !DILexicalBlock(scope: !13118, file: !3, line: 3267, column: 53)
!13125 = !DILocation(line: 3268, column: 15, scope: !13124)
!13126 = !DILocation(line: 3268, column: 13, scope: !13124)
!13127 = !DILocation(line: 3270, column: 8, scope: !13128)
!13128 = distinct !DILexicalBlock(scope: !13124, file: !3, line: 3270, column: 8)
!13129 = !DILocation(line: 3270, column: 17, scope: !13128)
!13130 = !DILocation(line: 3270, column: 20, scope: !13128)
!13131 = !DILocation(line: 3270, column: 29, scope: !13128)
!13132 = !DILocation(line: 3270, column: 8, scope: !13124)
!13133 = !DILocation(line: 3271, column: 5, scope: !13134)
!13134 = distinct !DILexicalBlock(scope: !13128, file: !3, line: 3270, column: 44)
!13135 = !DILocation(line: 3274, column: 8, scope: !13134)
!13136 = !DILocation(line: 3275, column: 5, scope: !13134)
!13137 = !DILocation(line: 3277, column: 3, scope: !13124)
!13138 = !DILocation(line: 3278, column: 2, scope: !13081)
!13139 = distinct !{!13139, !13076, !13140}
!13140 = !DILocation(line: 3278, column: 2, scope: !13077)
!13141 = !DILocation(line: 3280, column: 6, scope: !13142)
!13142 = distinct !DILexicalBlock(scope: !13023, file: !3, line: 3280, column: 6)
!13143 = !DILocation(line: 3280, column: 6, scope: !13023)
!13144 = !DILocation(line: 3281, column: 8, scope: !13145)
!13145 = distinct !DILexicalBlock(scope: !13142, file: !3, line: 3280, column: 10)
!13146 = !DILocation(line: 3281, column: 12, scope: !13145)
!13147 = !DILocation(line: 3281, column: 17, scope: !13145)
!13148 = !DILocation(line: 3281, column: 25, scope: !13145)
!13149 = !DILocation(line: 3281, column: 31, scope: !13145)
!13150 = !DILocation(line: 3281, column: 39, scope: !13145)
!13151 = !DILocation(line: 3281, column: 6, scope: !13145)
!13152 = !DILocation(line: 3282, column: 8, scope: !13153)
!13153 = distinct !DILexicalBlock(scope: !13145, file: !3, line: 3282, column: 7)
!13154 = !DILocation(line: 3282, column: 11, scope: !13153)
!13155 = !DILocation(line: 3282, column: 14, scope: !13153)
!13156 = !DILocation(line: 3282, column: 18, scope: !13153)
!13157 = !DILocation(line: 3282, column: 7, scope: !13145)
!13158 = !DILocation(line: 3283, column: 9, scope: !13153)
!13159 = !DILocation(line: 3283, column: 13, scope: !13153)
!13160 = !DILocation(line: 3283, column: 18, scope: !13153)
!13161 = !DILocation(line: 3283, column: 26, scope: !13153)
!13162 = !DILocation(line: 3283, column: 30, scope: !13153)
!13163 = !DILocation(line: 3283, column: 42, scope: !13153)
!13164 = !DILocation(line: 3283, column: 50, scope: !13153)
!13165 = !DILocation(line: 3283, column: 7, scope: !13153)
!13166 = !DILocation(line: 3283, column: 4, scope: !13153)
!13167 = !DILocation(line: 3284, column: 2, scope: !13145)
!13168 = !DILocation(line: 3285, column: 25, scope: !13142)
!13169 = !DILocation(line: 3285, column: 31, scope: !13142)
!13170 = !DILocation(line: 3285, column: 39, scope: !13142)
!13171 = !DILocation(line: 3285, column: 8, scope: !13142)
!13172 = !DILocation(line: 3285, column: 6, scope: !13142)
!13173 = !DILocation(line: 3291, column: 6, scope: !13174)
!13174 = distinct !DILexicalBlock(scope: !13023, file: !3, line: 3291, column: 6)
!13175 = !DILocation(line: 3291, column: 6, scope: !13023)
!13176 = !DILocation(line: 3292, column: 7, scope: !13177)
!13177 = distinct !DILexicalBlock(scope: !13178, file: !3, line: 3292, column: 7)
!13178 = distinct !DILexicalBlock(scope: !13174, file: !3, line: 3291, column: 10)
!13179 = !DILocation(line: 3292, column: 10, scope: !13177)
!13180 = !DILocation(line: 3292, column: 7, scope: !13178)
!13181 = !DILocation(line: 3293, column: 4, scope: !13182)
!13182 = distinct !DILexicalBlock(scope: !13177, file: !3, line: 3292, column: 26)
!13183 = !DILocation(line: 3293, column: 10, scope: !13182)
!13184 = !DILocation(line: 3293, column: 16, scope: !13182)
!13185 = !DILocation(line: 3294, column: 4, scope: !13182)
!13186 = !DILocation(line: 3296, column: 9, scope: !13178)
!13187 = !DILocation(line: 3296, column: 19, scope: !13178)
!13188 = !DILocation(line: 3296, column: 29, scope: !13178)
!13189 = !DILocation(line: 3296, column: 7, scope: !13178)
!13190 = !DILocation(line: 3297, column: 3, scope: !13178)
!13191 = !DILocation(line: 3304, column: 21, scope: !13023)
!13192 = !DILocation(line: 3304, column: 2, scope: !13023)
!13193 = !DILocation(line: 3304, column: 8, scope: !13023)
!13194 = !DILocation(line: 3304, column: 19, scope: !13023)
!13195 = !DILocation(line: 3305, column: 6, scope: !13196)
!13196 = distinct !DILexicalBlock(scope: !13023, file: !3, line: 3305, column: 6)
!13197 = !DILocation(line: 3305, column: 9, scope: !13196)
!13198 = !DILocation(line: 3305, column: 12, scope: !13196)
!13199 = !DILocation(line: 3305, column: 16, scope: !13196)
!13200 = !DILocation(line: 3305, column: 6, scope: !13023)
!13201 = !DILocation(line: 3306, column: 32, scope: !13196)
!13202 = !DILocation(line: 3306, column: 3, scope: !13196)
!13203 = !DILocation(line: 3306, column: 7, scope: !13196)
!13204 = !DILocation(line: 3306, column: 19, scope: !13196)
!13205 = !DILocation(line: 3306, column: 30, scope: !13196)
!13206 = !DILocation(line: 3309, column: 2, scope: !13207)
!13207 = distinct !DILexicalBlock(scope: !13023, file: !3, line: 3309, column: 2)
!13208 = !DILocation(line: 3309, column: 2, scope: !13209)
!13209 = distinct !DILexicalBlock(scope: !13207, file: !3, line: 3309, column: 2)
!13210 = !DILocation(line: 3310, column: 7, scope: !13211)
!13211 = distinct !DILexicalBlock(scope: !13212, file: !3, line: 3310, column: 7)
!13212 = distinct !DILexicalBlock(scope: !13209, file: !3, line: 3309, column: 39)
!13213 = !DILocation(line: 3310, column: 14, scope: !13211)
!13214 = !DILocation(line: 3310, column: 45, scope: !13211)
!13215 = !DILocation(line: 3310, column: 49, scope: !13211)
!13216 = !DILocation(line: 3310, column: 57, scope: !13211)
!13217 = !DILocation(line: 3311, column: 23, scope: !13211)
!13218 = !DILocation(line: 3311, column: 28, scope: !13211)
!13219 = !DILocation(line: 3311, column: 7, scope: !13211)
!13220 = !DILocation(line: 3310, column: 7, scope: !13212)
!13221 = !DILocation(line: 3312, column: 35, scope: !13222)
!13222 = distinct !DILexicalBlock(scope: !13211, file: !3, line: 3311, column: 33)
!13223 = !DILocation(line: 3312, column: 15, scope: !13222)
!13224 = !DILocation(line: 3312, column: 13, scope: !13222)
!13225 = !DILocation(line: 3314, column: 8, scope: !13226)
!13226 = distinct !DILexicalBlock(scope: !13222, file: !3, line: 3314, column: 8)
!13227 = !DILocation(line: 3314, column: 17, scope: !13226)
!13228 = !DILocation(line: 3314, column: 20, scope: !13226)
!13229 = !DILocation(line: 3314, column: 29, scope: !13226)
!13230 = !DILocation(line: 3314, column: 8, scope: !13222)
!13231 = !DILocation(line: 3315, column: 5, scope: !13232)
!13232 = distinct !DILexicalBlock(scope: !13226, file: !3, line: 3314, column: 44)
!13233 = !DILocation(line: 3318, column: 8, scope: !13232)
!13234 = !DILocation(line: 3319, column: 5, scope: !13232)
!13235 = !DILocation(line: 3321, column: 3, scope: !13222)
!13236 = !DILocation(line: 3322, column: 2, scope: !13212)
!13237 = distinct !{!13237, !13206, !13238}
!13238 = !DILocation(line: 3322, column: 2, scope: !13207)
!13239 = !DILocation(line: 3324, column: 26, scope: !13023)
!13240 = !DILocation(line: 3324, column: 2, scope: !13023)
!13241 = !DILocation(line: 3324, column: 8, scope: !13023)
!13242 = !DILocation(line: 3324, column: 24, scope: !13023)
!13243 = !DILocation(line: 3325, column: 2, scope: !13023)
!13244 = !DILocation(line: 3325, column: 8, scope: !13023)
!13245 = !DILocation(line: 3325, column: 14, scope: !13023)
!13246 = !DILocation(line: 3327, column: 2, scope: !13023)
!13247 = !DILabel(scope: !13023, name: "fail", file: !3, line: 3329)
!13248 = !DILocation(line: 3329, column: 1, scope: !13023)
!13249 = !DILocation(line: 3331, column: 21, scope: !13023)
!13250 = !DILocation(line: 3331, column: 2, scope: !13023)
!13251 = !DILocation(line: 3331, column: 8, scope: !13023)
!13252 = !DILocation(line: 3331, column: 19, scope: !13023)
!13253 = !DILocation(line: 3332, column: 6, scope: !13254)
!13254 = distinct !DILexicalBlock(scope: !13023, file: !3, line: 3332, column: 6)
!13255 = !DILocation(line: 3332, column: 9, scope: !13254)
!13256 = !DILocation(line: 3332, column: 12, scope: !13254)
!13257 = !DILocation(line: 3332, column: 16, scope: !13254)
!13258 = !DILocation(line: 3332, column: 6, scope: !13023)
!13259 = !DILocation(line: 3333, column: 32, scope: !13254)
!13260 = !DILocation(line: 3333, column: 3, scope: !13254)
!13261 = !DILocation(line: 3333, column: 7, scope: !13254)
!13262 = !DILocation(line: 3333, column: 19, scope: !13254)
!13263 = !DILocation(line: 3333, column: 30, scope: !13254)
!13264 = !DILocation(line: 3336, column: 7, scope: !13265)
!13265 = distinct !DILexicalBlock(scope: !13023, file: !3, line: 3336, column: 6)
!13266 = !DILocation(line: 3336, column: 11, scope: !13265)
!13267 = !DILocation(line: 3336, column: 14, scope: !13265)
!13268 = !DILocation(line: 3336, column: 19, scope: !13265)
!13269 = !DILocation(line: 3336, column: 25, scope: !13265)
!13270 = !DILocation(line: 3336, column: 30, scope: !13265)
!13271 = !DILocation(line: 3336, column: 37, scope: !13265)
!13272 = !DILocation(line: 3336, column: 6, scope: !13023)
!13273 = !DILocation(line: 3337, column: 3, scope: !13274)
!13274 = distinct !DILexicalBlock(scope: !13265, file: !3, line: 3336, column: 43)
!13275 = !DILocation(line: 3338, column: 3, scope: !13274)
!13276 = !DILocation(line: 3338, column: 9, scope: !13274)
!13277 = !DILocation(line: 3338, column: 15, scope: !13274)
!13278 = !DILocation(line: 3339, column: 2, scope: !13274)
!13279 = !DILocation(line: 3340, column: 6, scope: !13280)
!13280 = distinct !DILexicalBlock(scope: !13023, file: !3, line: 3340, column: 6)
!13281 = !DILocation(line: 3340, column: 6, scope: !13023)
!13282 = !DILocation(line: 3341, column: 19, scope: !13280)
!13283 = !DILocation(line: 3341, column: 4, scope: !13280)
!13284 = !DILocation(line: 3341, column: 17, scope: !13280)
!13285 = !DILocation(line: 3341, column: 3, scope: !13280)
!13286 = !DILocation(line: 3342, column: 9, scope: !13023)
!13287 = !DILocation(line: 3342, column: 2, scope: !13023)
!13288 = !DILocation(line: 3343, column: 1, scope: !13023)
!13289 = distinct !DISubprogram(name: "ata_eh_handle_dev_fail", scope: !3, file: !3, line: 3462, type: !13290, scopeLine: 3463, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!13290 = !DISubroutineType(types: !13291)
!13291 = !{!206, !6392, !206}
!13292 = !DILocalVariable(name: "dev", arg: 1, scope: !13289, file: !3, line: 3462, type: !6392)
!13293 = !DILocation(line: 3462, column: 54, scope: !13289)
!13294 = !DILocalVariable(name: "err", arg: 2, scope: !13289, file: !3, line: 3462, type: !206)
!13295 = !DILocation(line: 3462, column: 63, scope: !13289)
!13296 = !DILocalVariable(name: "ehc", scope: !13289, file: !3, line: 3464, type: !7127)
!13297 = !DILocation(line: 3464, column: 25, scope: !13289)
!13298 = !DILocation(line: 3464, column: 32, scope: !13289)
!13299 = !DILocation(line: 3464, column: 37, scope: !13289)
!13300 = !DILocation(line: 3464, column: 43, scope: !13289)
!13301 = !DILocation(line: 3469, column: 6, scope: !13302)
!13302 = distinct !DILexicalBlock(scope: !13289, file: !3, line: 3469, column: 6)
!13303 = !DILocation(line: 3469, column: 10, scope: !13302)
!13304 = !DILocation(line: 3469, column: 6, scope: !13289)
!13305 = !DILocation(line: 3470, column: 3, scope: !13302)
!13306 = !DILocation(line: 3470, column: 8, scope: !13302)
!13307 = !DILocation(line: 3470, column: 14, scope: !13302)
!13308 = !DILocation(line: 3470, column: 19, scope: !13302)
!13309 = !DILocation(line: 3470, column: 25, scope: !13302)
!13310 = !DILocation(line: 3472, column: 10, scope: !13289)
!13311 = !DILocation(line: 3472, column: 2, scope: !13289)
!13312 = !DILocation(line: 3475, column: 30, scope: !13313)
!13313 = distinct !DILexicalBlock(scope: !13289, file: !3, line: 3472, column: 15)
!13314 = !DILocation(line: 3475, column: 35, scope: !13313)
!13315 = !DILocation(line: 3475, column: 27, scope: !13313)
!13316 = !DILocation(line: 3475, column: 3, scope: !13313)
!13317 = !DILocation(line: 3475, column: 8, scope: !13313)
!13318 = !DILocation(line: 3475, column: 10, scope: !13313)
!13319 = !DILocation(line: 3475, column: 21, scope: !13313)
!13320 = !DILocalVariable(name: "__UNIQUE_ID___x335", scope: !13321, file: !3, line: 3479, type: !206)
!13321 = distinct !DILexicalBlock(scope: !13313, file: !3, line: 3479, column: 28)
!13322 = !DILocation(line: 3479, column: 28, scope: !13321)
!13323 = !DILocalVariable(name: "__UNIQUE_ID___y336", scope: !13321, file: !3, line: 3479, type: !206)
!13324 = !DILocation(line: 3479, column: 3, scope: !13313)
!13325 = !DILocation(line: 3479, column: 8, scope: !13313)
!13326 = !DILocation(line: 3479, column: 14, scope: !13313)
!13327 = !DILocation(line: 3479, column: 19, scope: !13313)
!13328 = !DILocation(line: 3479, column: 26, scope: !13313)
!13329 = !DILocation(line: 3482, column: 7, scope: !13330)
!13330 = distinct !DILexicalBlock(scope: !13313, file: !3, line: 3482, column: 7)
!13331 = !DILocation(line: 3482, column: 12, scope: !13330)
!13332 = !DILocation(line: 3482, column: 18, scope: !13330)
!13333 = !DILocation(line: 3482, column: 23, scope: !13330)
!13334 = !DILocation(line: 3482, column: 30, scope: !13330)
!13335 = !DILocation(line: 3482, column: 7, scope: !13313)
!13336 = !DILocation(line: 3486, column: 42, scope: !13337)
!13337 = distinct !DILexicalBlock(scope: !13330, file: !3, line: 3482, column: 36)
!13338 = !DILocation(line: 3486, column: 24, scope: !13337)
!13339 = !DILocation(line: 3486, column: 4, scope: !13337)
!13340 = !DILocation(line: 3487, column: 8, scope: !13341)
!13341 = distinct !DILexicalBlock(scope: !13337, file: !3, line: 3487, column: 8)
!13342 = !DILocation(line: 3487, column: 13, scope: !13341)
!13343 = !DILocation(line: 3487, column: 22, scope: !13341)
!13344 = !DILocation(line: 3487, column: 8, scope: !13337)
!13345 = !DILocation(line: 3488, column: 29, scope: !13341)
!13346 = !DILocation(line: 3488, column: 5, scope: !13341)
!13347 = !DILocation(line: 3489, column: 3, scope: !13337)
!13348 = !DILocation(line: 3490, column: 2, scope: !13313)
!13349 = !DILocation(line: 3492, column: 22, scope: !13350)
!13350 = distinct !DILexicalBlock(scope: !13289, file: !3, line: 3492, column: 6)
!13351 = !DILocation(line: 3492, column: 6, scope: !13350)
!13352 = !DILocation(line: 3492, column: 27, scope: !13350)
!13353 = !DILocation(line: 3492, column: 31, scope: !13350)
!13354 = !DILocation(line: 3492, column: 36, scope: !13350)
!13355 = !DILocation(line: 3492, column: 42, scope: !13350)
!13356 = !DILocation(line: 3492, column: 47, scope: !13350)
!13357 = !DILocation(line: 3492, column: 6, scope: !13289)
!13358 = !DILocation(line: 3494, column: 19, scope: !13359)
!13359 = distinct !DILexicalBlock(scope: !13350, file: !3, line: 3492, column: 55)
!13360 = !DILocation(line: 3494, column: 3, scope: !13359)
!13361 = !DILocation(line: 3497, column: 47, scope: !13362)
!13362 = distinct !DILexicalBlock(scope: !13359, file: !3, line: 3497, column: 7)
!13363 = !DILocation(line: 3497, column: 29, scope: !13362)
!13364 = !DILocation(line: 3497, column: 7, scope: !13362)
!13365 = !DILocation(line: 3497, column: 7, scope: !13359)
!13366 = !DILocation(line: 3498, column: 22, scope: !13362)
!13367 = !DILocation(line: 3498, column: 4, scope: !13362)
!13368 = !DILocation(line: 3501, column: 29, scope: !13369)
!13369 = distinct !DILexicalBlock(scope: !13359, file: !3, line: 3501, column: 7)
!13370 = !DILocation(line: 3501, column: 7, scope: !13369)
!13371 = !DILocation(line: 3501, column: 7, scope: !13359)
!13372 = !DILocation(line: 3502, column: 4, scope: !13373)
!13373 = distinct !DILexicalBlock(scope: !13369, file: !3, line: 3501, column: 35)
!13374 = !DILocation(line: 3502, column: 9, scope: !13373)
!13375 = !DILocation(line: 3502, column: 15, scope: !13373)
!13376 = !DILocation(line: 3502, column: 20, scope: !13373)
!13377 = !DILocation(line: 3502, column: 27, scope: !13373)
!13378 = !DILocation(line: 3503, column: 11, scope: !13373)
!13379 = !DILocation(line: 3503, column: 16, scope: !13373)
!13380 = !DILocation(line: 3503, column: 32, scope: !13373)
!13381 = !DILocation(line: 3503, column: 37, scope: !13373)
!13382 = !DILocation(line: 3503, column: 4, scope: !13373)
!13383 = !DILocation(line: 3505, column: 3, scope: !13373)
!13384 = !DILocation(line: 3507, column: 3, scope: !13359)
!13385 = !DILocation(line: 3509, column: 3, scope: !13386)
!13386 = distinct !DILexicalBlock(scope: !13350, file: !3, line: 3508, column: 9)
!13387 = !DILocation(line: 3509, column: 8, scope: !13386)
!13388 = !DILocation(line: 3509, column: 10, scope: !13386)
!13389 = !DILocation(line: 3509, column: 17, scope: !13386)
!13390 = !DILocation(line: 3510, column: 3, scope: !13386)
!13391 = !DILocation(line: 3512, column: 1, scope: !13289)
!13392 = distinct !DISubprogram(name: "ata_do_eh", scope: !3, file: !3, line: 3818, type: !13393, scopeLine: 3821, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!13393 = !DISubroutineType(types: !13394)
!13394 = !{null, !6375, !6644, !6649, !6649, !6655}
!13395 = !DILocalVariable(name: "ap", arg: 1, scope: !13392, file: !3, line: 3818, type: !6375)
!13396 = !DILocation(line: 3818, column: 33, scope: !13392)
!13397 = !DILocalVariable(name: "prereset", arg: 2, scope: !13392, file: !3, line: 3818, type: !6644)
!13398 = !DILocation(line: 3818, column: 55, scope: !13392)
!13399 = !DILocalVariable(name: "softreset", arg: 3, scope: !13392, file: !3, line: 3819, type: !6649)
!13400 = !DILocation(line: 3819, column: 24, scope: !13392)
!13401 = !DILocalVariable(name: "hardreset", arg: 4, scope: !13392, file: !3, line: 3819, type: !6649)
!13402 = !DILocation(line: 3819, column: 50, scope: !13392)
!13403 = !DILocalVariable(name: "postreset", arg: 5, scope: !13392, file: !3, line: 3820, type: !6655)
!13404 = !DILocation(line: 3820, column: 28, scope: !13392)
!13405 = !DILocalVariable(name: "dev", scope: !13392, file: !3, line: 3822, type: !6392)
!13406 = !DILocation(line: 3822, column: 21, scope: !13392)
!13407 = !DILocalVariable(name: "rc", scope: !13392, file: !3, line: 3823, type: !206)
!13408 = !DILocation(line: 3823, column: 6, scope: !13392)
!13409 = !DILocation(line: 3825, column: 17, scope: !13392)
!13410 = !DILocation(line: 3825, column: 2, scope: !13392)
!13411 = !DILocation(line: 3826, column: 16, scope: !13392)
!13412 = !DILocation(line: 3826, column: 2, scope: !13392)
!13413 = !DILocation(line: 3828, column: 22, scope: !13392)
!13414 = !DILocation(line: 3828, column: 26, scope: !13392)
!13415 = !DILocation(line: 3828, column: 36, scope: !13392)
!13416 = !DILocation(line: 3828, column: 47, scope: !13392)
!13417 = !DILocation(line: 3828, column: 58, scope: !13392)
!13418 = !DILocation(line: 3828, column: 7, scope: !13392)
!13419 = !DILocation(line: 3828, column: 5, scope: !13392)
!13420 = !DILocation(line: 3830, column: 6, scope: !13421)
!13421 = distinct !DILexicalBlock(scope: !13392, file: !3, line: 3830, column: 6)
!13422 = !DILocation(line: 3830, column: 6, scope: !13392)
!13423 = !DILocation(line: 3831, column: 3, scope: !13424)
!13424 = distinct !DILexicalBlock(scope: !13425, file: !3, line: 3831, column: 3)
!13425 = distinct !DILexicalBlock(scope: !13421, file: !3, line: 3830, column: 10)
!13426 = !DILocation(line: 3831, column: 3, scope: !13427)
!13427 = distinct !DILexicalBlock(scope: !13424, file: !3, line: 3831, column: 3)
!13428 = !DILocation(line: 3832, column: 20, scope: !13427)
!13429 = !DILocation(line: 3832, column: 4, scope: !13427)
!13430 = distinct !{!13430, !13423, !13431}
!13431 = !DILocation(line: 3832, column: 23, scope: !13424)
!13432 = !DILocation(line: 3833, column: 2, scope: !13425)
!13433 = !DILocation(line: 3835, column: 16, scope: !13392)
!13434 = !DILocation(line: 3835, column: 2, scope: !13392)
!13435 = !DILocation(line: 3836, column: 1, scope: !13392)
!13436 = distinct !DISubprogram(name: "ata_std_error_handler", scope: !3, file: !3, line: 3847, type: !6640, scopeLine: 3848, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!13437 = !DILocalVariable(name: "ap", arg: 1, scope: !13436, file: !3, line: 3847, type: !6375)
!13438 = !DILocation(line: 3847, column: 45, scope: !13436)
!13439 = !DILocalVariable(name: "ops", scope: !13436, file: !3, line: 3849, type: !6380)
!13440 = !DILocation(line: 3849, column: 30, scope: !13436)
!13441 = !DILocation(line: 3849, column: 36, scope: !13436)
!13442 = !DILocation(line: 3849, column: 40, scope: !13436)
!13443 = !DILocalVariable(name: "hardreset", scope: !13436, file: !3, line: 3850, type: !6649)
!13444 = !DILocation(line: 3850, column: 17, scope: !13436)
!13445 = !DILocation(line: 3850, column: 29, scope: !13436)
!13446 = !DILocation(line: 3850, column: 34, scope: !13436)
!13447 = !DILocation(line: 3853, column: 6, scope: !13448)
!13448 = distinct !DILexicalBlock(scope: !13436, file: !3, line: 3853, column: 6)
!13449 = !DILocation(line: 3853, column: 16, scope: !13448)
!13450 = !DILocation(line: 3853, column: 38, scope: !13448)
!13451 = !DILocation(line: 3853, column: 58, scope: !13448)
!13452 = !DILocation(line: 3853, column: 62, scope: !13448)
!13453 = !DILocation(line: 3853, column: 42, scope: !13448)
!13454 = !DILocation(line: 3853, column: 6, scope: !13436)
!13455 = !DILocation(line: 3854, column: 13, scope: !13448)
!13456 = !DILocation(line: 3854, column: 3, scope: !13448)
!13457 = !DILocation(line: 3856, column: 12, scope: !13436)
!13458 = !DILocation(line: 3856, column: 16, scope: !13436)
!13459 = !DILocation(line: 3856, column: 21, scope: !13436)
!13460 = !DILocation(line: 3856, column: 31, scope: !13436)
!13461 = !DILocation(line: 3856, column: 36, scope: !13436)
!13462 = !DILocation(line: 3856, column: 47, scope: !13436)
!13463 = !DILocation(line: 3856, column: 58, scope: !13436)
!13464 = !DILocation(line: 3856, column: 63, scope: !13436)
!13465 = !DILocation(line: 3856, column: 2, scope: !13436)
!13466 = !DILocation(line: 3857, column: 1, scope: !13436)
!13467 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !7489, file: !7489, line: 646, type: !7490, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!13468 = !DILocalVariable(name: "__ret", scope: !13469, file: !7489, line: 648, type: !1012)
!13469 = distinct !DILexicalBlock(scope: !13467, file: !7489, line: 648, column: 9)
!13470 = !DILocation(line: 648, column: 9, scope: !13469)
!13471 = !DILocalVariable(name: "__edi", scope: !13469, file: !7489, line: 648, type: !1012)
!13472 = !DILocalVariable(name: "__esi", scope: !13469, file: !7489, line: 648, type: !1012)
!13473 = !DILocalVariable(name: "__edx", scope: !13469, file: !7489, line: 648, type: !1012)
!13474 = !DILocalVariable(name: "__ecx", scope: !13469, file: !7489, line: 648, type: !1012)
!13475 = !DILocalVariable(name: "__eax", scope: !13469, file: !7489, line: 648, type: !1012)
!13476 = !DILocation(line: 648, column: 9, scope: !13477)
!13477 = distinct !DILexicalBlock(scope: !13478, file: !7489, line: 648, column: 9)
!13478 = distinct !DILexicalBlock(scope: !13469, file: !7489, line: 648, column: 9)
!13479 = !{i32 -2145651296, i32 -2145648981, i32 -2145648747, i32 -2145648696, i32 -2145648668, i32 -2145648643, i32 -2145648959, i32 -2145648946, i32 -2145648508, i32 -2145648389, i32 -2145648854, i32 -2145648827, i32 -2145648799, i32 -2145648769}
!13480 = !DILocalVariable(name: "__mask", scope: !13481, file: !7489, line: 648, type: !1012)
!13481 = distinct !DILexicalBlock(scope: !13477, file: !7489, line: 648, column: 9)
!13482 = !DILocation(line: 648, column: 9, scope: !13481)
!13483 = !DILocation(line: 648, column: 9, scope: !13478)
!13484 = !DILocation(line: 648, column: 2, scope: !13467)
!13485 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !7489, file: !7489, line: 656, type: !2782, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!13486 = !DILocalVariable(name: "__edi", scope: !13487, file: !7489, line: 658, type: !1012)
!13487 = distinct !DILexicalBlock(scope: !13485, file: !7489, line: 658, column: 2)
!13488 = !DILocation(line: 658, column: 2, scope: !13487)
!13489 = !DILocalVariable(name: "__esi", scope: !13487, file: !7489, line: 658, type: !1012)
!13490 = !DILocalVariable(name: "__edx", scope: !13487, file: !7489, line: 658, type: !1012)
!13491 = !DILocalVariable(name: "__ecx", scope: !13487, file: !7489, line: 658, type: !1012)
!13492 = !DILocalVariable(name: "__eax", scope: !13487, file: !7489, line: 658, type: !1012)
!13493 = !{i32 -2145644202, i32 -2145643470, i32 -2145643236, i32 -2145643185, i32 -2145643157, i32 -2145643132, i32 -2145643448, i32 -2145643435, i32 -2145642997, i32 -2145642878, i32 -2145643343, i32 -2145643316, i32 -2145643288, i32 -2145643258}
!13494 = !DILocation(line: 659, column: 1, scope: !13485)
!13495 = distinct !DISubprogram(name: "__list_splice", scope: !7500, file: !7500, line: 433, type: !13496, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!13496 = !DISubroutineType(types: !13497)
!13497 = !{null, !8017, !980, !980}
!13498 = !DILocalVariable(name: "list", arg: 1, scope: !13495, file: !7500, line: 433, type: !8017)
!13499 = !DILocation(line: 433, column: 58, scope: !13495)
!13500 = !DILocalVariable(name: "prev", arg: 2, scope: !13495, file: !7500, line: 434, type: !980)
!13501 = !DILocation(line: 434, column: 24, scope: !13495)
!13502 = !DILocalVariable(name: "next", arg: 3, scope: !13495, file: !7500, line: 435, type: !980)
!13503 = !DILocation(line: 435, column: 24, scope: !13495)
!13504 = !DILocalVariable(name: "first", scope: !13495, file: !7500, line: 437, type: !980)
!13505 = !DILocation(line: 437, column: 20, scope: !13495)
!13506 = !DILocation(line: 437, column: 28, scope: !13495)
!13507 = !DILocation(line: 437, column: 34, scope: !13495)
!13508 = !DILocalVariable(name: "last", scope: !13495, file: !7500, line: 438, type: !980)
!13509 = !DILocation(line: 438, column: 20, scope: !13495)
!13510 = !DILocation(line: 438, column: 27, scope: !13495)
!13511 = !DILocation(line: 438, column: 33, scope: !13495)
!13512 = !DILocation(line: 440, column: 16, scope: !13495)
!13513 = !DILocation(line: 440, column: 2, scope: !13495)
!13514 = !DILocation(line: 440, column: 9, scope: !13495)
!13515 = !DILocation(line: 440, column: 14, scope: !13495)
!13516 = !DILocation(line: 441, column: 15, scope: !13495)
!13517 = !DILocation(line: 441, column: 2, scope: !13495)
!13518 = !DILocation(line: 441, column: 8, scope: !13495)
!13519 = !DILocation(line: 441, column: 13, scope: !13495)
!13520 = !DILocation(line: 443, column: 15, scope: !13495)
!13521 = !DILocation(line: 443, column: 2, scope: !13495)
!13522 = !DILocation(line: 443, column: 8, scope: !13495)
!13523 = !DILocation(line: 443, column: 13, scope: !13495)
!13524 = !DILocation(line: 444, column: 15, scope: !13495)
!13525 = !DILocation(line: 444, column: 2, scope: !13495)
!13526 = !DILocation(line: 444, column: 8, scope: !13495)
!13527 = !DILocation(line: 444, column: 13, scope: !13495)
!13528 = !DILocation(line: 445, column: 1, scope: !13495)
!13529 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !7500, file: !7500, line: 33, type: !13530, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!13530 = !DISubroutineType(types: !13531)
!13531 = !{null, !980}
!13532 = !DILocalVariable(name: "list", arg: 1, scope: !13529, file: !7500, line: 33, type: !980)
!13533 = !DILocation(line: 33, column: 53, scope: !13529)
!13534 = !DILocation(line: 35, column: 2, scope: !13529)
!13535 = !DILocation(line: 35, column: 2, scope: !13536)
!13536 = distinct !DILexicalBlock(scope: !13529, file: !7500, line: 35, column: 2)
!13537 = !DILocation(line: 35, column: 2, scope: !13538)
!13538 = distinct !DILexicalBlock(scope: !13536, file: !7500, line: 35, column: 2)
!13539 = !DILocation(line: 35, column: 2, scope: !13540)
!13540 = distinct !DILexicalBlock(scope: !13536, file: !7500, line: 35, column: 2)
!13541 = !DILocation(line: 36, column: 15, scope: !13529)
!13542 = !DILocation(line: 36, column: 2, scope: !13529)
!13543 = !DILocation(line: 36, column: 8, scope: !13529)
!13544 = !DILocation(line: 36, column: 13, scope: !13529)
!13545 = !DILocation(line: 37, column: 1, scope: !13529)
!13546 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !7489, file: !7489, line: 651, type: !13547, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!13547 = !DISubroutineType(types: !13548)
!13548 = !{null, !1012}
!13549 = !DILocalVariable(name: "f", arg: 1, scope: !13546, file: !7489, line: 651, type: !1012)
!13550 = !DILocation(line: 651, column: 65, scope: !13546)
!13551 = !DILocalVariable(name: "__edi", scope: !13552, file: !7489, line: 653, type: !1012)
!13552 = distinct !DILexicalBlock(scope: !13546, file: !7489, line: 653, column: 2)
!13553 = !DILocation(line: 653, column: 2, scope: !13552)
!13554 = !DILocalVariable(name: "__esi", scope: !13552, file: !7489, line: 653, type: !1012)
!13555 = !DILocalVariable(name: "__edx", scope: !13552, file: !7489, line: 653, type: !1012)
!13556 = !DILocalVariable(name: "__ecx", scope: !13552, file: !7489, line: 653, type: !1012)
!13557 = !DILocalVariable(name: "__eax", scope: !13552, file: !7489, line: 653, type: !1012)
!13558 = !{i32 -2145646829, i32 -2145646079, i32 -2145645845, i32 -2145645794, i32 -2145645766, i32 -2145645741, i32 -2145646057, i32 -2145646044, i32 -2145645606, i32 -2145645487, i32 -2145645952, i32 -2145645925, i32 -2145645897, i32 -2145645867}
!13559 = !DILocation(line: 654, column: 1, scope: !13546)
!13560 = distinct !DISubprogram(name: "ata_tag_valid", scope: !178, file: !178, line: 1545, type: !13561, scopeLine: 1546, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!13561 = !DISubroutineType(types: !13562)
!13562 = !{!1333, !7}
!13563 = !DILocalVariable(name: "tag", arg: 1, scope: !13560, file: !178, line: 1545, type: !7)
!13564 = !DILocation(line: 1545, column: 47, scope: !13560)
!13565 = !DILocation(line: 1547, column: 9, scope: !13560)
!13566 = !DILocation(line: 1547, column: 13, scope: !13560)
!13567 = !DILocation(line: 1547, column: 29, scope: !13560)
!13568 = !DILocation(line: 1547, column: 49, scope: !13560)
!13569 = !DILocation(line: 1547, column: 32, scope: !13560)
!13570 = !DILocation(line: 1547, column: 2, scope: !13560)
!13571 = distinct !DISubprogram(name: "ata_tag_internal", scope: !178, file: !178, line: 1540, type: !13561, scopeLine: 1541, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!13572 = !DILocalVariable(name: "tag", arg: 1, scope: !13571, file: !178, line: 1540, type: !7)
!13573 = !DILocation(line: 1540, column: 50, scope: !13571)
!13574 = !DILocation(line: 1542, column: 9, scope: !13571)
!13575 = !DILocation(line: 1542, column: 13, scope: !13571)
!13576 = !DILocation(line: 1542, column: 2, scope: !13571)
!13577 = distinct !DISubprogram(name: "queue_delayed_work", scope: !932, file: !932, line: 518, type: !13578, scopeLine: 521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!13578 = !DISubroutineType(types: !13579)
!13579 = !{!1333, !2909, !8628, !1012}
!13580 = !DILocalVariable(name: "wq", arg: 1, scope: !13577, file: !932, line: 518, type: !2909)
!13581 = !DILocation(line: 518, column: 64, scope: !13577)
!13582 = !DILocalVariable(name: "dwork", arg: 2, scope: !13577, file: !932, line: 519, type: !8628)
!13583 = !DILocation(line: 519, column: 32, scope: !13577)
!13584 = !DILocalVariable(name: "delay", arg: 3, scope: !13577, file: !932, line: 520, type: !1012)
!13585 = !DILocation(line: 520, column: 25, scope: !13577)
!13586 = !DILocation(line: 522, column: 49, scope: !13577)
!13587 = !DILocation(line: 522, column: 53, scope: !13577)
!13588 = !DILocation(line: 522, column: 60, scope: !13577)
!13589 = !DILocation(line: 522, column: 9, scope: !13577)
!13590 = !DILocation(line: 522, column: 2, scope: !13577)
!13591 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !8940, file: !8940, line: 308, type: !8941, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!13592 = !DILocalVariable(name: "m", arg: 1, scope: !13591, file: !8940, line: 308, type: !3435)
!13593 = !DILocation(line: 308, column: 66, scope: !13591)
!13594 = !DILocation(line: 310, column: 10, scope: !13591)
!13595 = !DILocation(line: 310, column: 12, scope: !13591)
!13596 = !DILocation(line: 310, column: 34, scope: !13591)
!13597 = !DILocation(line: 310, column: 39, scope: !13591)
!13598 = !DILocation(line: 310, column: 2, scope: !13591)
!13599 = distinct !DISubprogram(name: "ata_eh_scsidone", scope: !3, file: !3, line: 1145, type: !6353, scopeLine: 1146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!13600 = !DILocalVariable(name: "scmd", arg: 1, scope: !13599, file: !3, line: 1145, type: !5946)
!13601 = !DILocation(line: 1145, column: 47, scope: !13599)
!13602 = !DILocation(line: 1148, column: 1, scope: !13599)
!13603 = distinct !DISubprogram(name: "ata_ering_clear_cb", scope: !3, file: !3, line: 406, type: !7250, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!13604 = !DILocalVariable(name: "ent", arg: 1, scope: !13603, file: !3, line: 406, type: !7252)
!13605 = !DILocation(line: 406, column: 55, scope: !13603)
!13606 = !DILocalVariable(name: "void_arg", arg: 2, scope: !13603, file: !3, line: 406, type: !970)
!13607 = !DILocation(line: 406, column: 66, scope: !13603)
!13608 = !DILocation(line: 408, column: 2, scope: !13603)
!13609 = !DILocation(line: 408, column: 7, scope: !13603)
!13610 = !DILocation(line: 408, column: 14, scope: !13603)
!13611 = !DILocation(line: 409, column: 2, scope: !13603)
!13612 = distinct !DISubprogram(name: "ata_eh_analyze_serror", scope: !3, file: !3, line: 1498, type: !6910, scopeLine: 1499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!13613 = !DILocalVariable(name: "link", arg: 1, scope: !13612, file: !3, line: 1498, type: !6396)
!13614 = !DILocation(line: 1498, column: 52, scope: !13612)
!13615 = !DILocalVariable(name: "ehc", scope: !13612, file: !3, line: 1500, type: !7127)
!13616 = !DILocation(line: 1500, column: 25, scope: !13612)
!13617 = !DILocation(line: 1500, column: 32, scope: !13612)
!13618 = !DILocation(line: 1500, column: 38, scope: !13612)
!13619 = !DILocalVariable(name: "serror", scope: !13612, file: !3, line: 1501, type: !1042)
!13620 = !DILocation(line: 1501, column: 6, scope: !13612)
!13621 = !DILocation(line: 1501, column: 15, scope: !13612)
!13622 = !DILocation(line: 1501, column: 20, scope: !13612)
!13623 = !DILocation(line: 1501, column: 22, scope: !13612)
!13624 = !DILocalVariable(name: "err_mask", scope: !13612, file: !3, line: 1502, type: !7)
!13625 = !DILocation(line: 1502, column: 15, scope: !13612)
!13626 = !DILocalVariable(name: "action", scope: !13612, file: !3, line: 1502, type: !7)
!13627 = !DILocation(line: 1502, column: 29, scope: !13612)
!13628 = !DILocalVariable(name: "hotplug_mask", scope: !13612, file: !3, line: 1503, type: !1042)
!13629 = !DILocation(line: 1503, column: 6, scope: !13612)
!13630 = !DILocation(line: 1505, column: 6, scope: !13631)
!13631 = distinct !DILexicalBlock(scope: !13612, file: !3, line: 1505, column: 6)
!13632 = !DILocation(line: 1505, column: 13, scope: !13631)
!13633 = !DILocation(line: 1505, column: 6, scope: !13612)
!13634 = !DILocation(line: 1506, column: 12, scope: !13635)
!13635 = distinct !DILexicalBlock(scope: !13631, file: !3, line: 1505, column: 46)
!13636 = !DILocation(line: 1507, column: 10, scope: !13635)
!13637 = !DILocation(line: 1508, column: 2, scope: !13635)
!13638 = !DILocation(line: 1509, column: 6, scope: !13639)
!13639 = distinct !DILexicalBlock(scope: !13612, file: !3, line: 1509, column: 6)
!13640 = !DILocation(line: 1509, column: 13, scope: !13639)
!13641 = !DILocation(line: 1509, column: 6, scope: !13612)
!13642 = !DILocation(line: 1510, column: 12, scope: !13643)
!13643 = distinct !DILexicalBlock(scope: !13639, file: !3, line: 1509, column: 30)
!13644 = !DILocation(line: 1511, column: 10, scope: !13643)
!13645 = !DILocation(line: 1512, column: 2, scope: !13643)
!13646 = !DILocation(line: 1513, column: 6, scope: !13647)
!13647 = distinct !DILexicalBlock(scope: !13612, file: !3, line: 1513, column: 6)
!13648 = !DILocation(line: 1513, column: 13, scope: !13647)
!13649 = !DILocation(line: 1513, column: 6, scope: !13612)
!13650 = !DILocation(line: 1514, column: 12, scope: !13651)
!13651 = distinct !DILexicalBlock(scope: !13647, file: !3, line: 1513, column: 30)
!13652 = !DILocation(line: 1515, column: 10, scope: !13651)
!13653 = !DILocation(line: 1516, column: 2, scope: !13651)
!13654 = !DILocation(line: 1523, column: 6, scope: !13655)
!13655 = distinct !DILexicalBlock(scope: !13612, file: !3, line: 1523, column: 6)
!13656 = !DILocation(line: 1523, column: 12, scope: !13655)
!13657 = !DILocation(line: 1523, column: 23, scope: !13655)
!13658 = !DILocation(line: 1523, column: 6, scope: !13612)
!13659 = !DILocation(line: 1524, column: 16, scope: !13655)
!13660 = !DILocation(line: 1524, column: 3, scope: !13655)
!13661 = !DILocation(line: 1525, column: 13, scope: !13662)
!13662 = distinct !DILexicalBlock(scope: !13655, file: !3, line: 1525, column: 11)
!13663 = !DILocation(line: 1525, column: 19, scope: !13662)
!13664 = !DILocation(line: 1525, column: 25, scope: !13662)
!13665 = !DILocation(line: 1525, column: 47, scope: !13662)
!13666 = !DILocation(line: 1525, column: 67, scope: !13662)
!13667 = !DILocation(line: 1525, column: 50, scope: !13662)
!13668 = !DILocation(line: 1525, column: 11, scope: !13655)
!13669 = !DILocation(line: 1526, column: 16, scope: !13662)
!13670 = !DILocation(line: 1526, column: 3, scope: !13662)
!13671 = !DILocation(line: 1528, column: 16, scope: !13662)
!13672 = !DILocation(line: 1530, column: 6, scope: !13673)
!13673 = distinct !DILexicalBlock(scope: !13612, file: !3, line: 1530, column: 6)
!13674 = !DILocation(line: 1530, column: 15, scope: !13673)
!13675 = !DILocation(line: 1530, column: 13, scope: !13673)
!13676 = !DILocation(line: 1530, column: 6, scope: !13612)
!13677 = !DILocation(line: 1531, column: 23, scope: !13673)
!13678 = !DILocation(line: 1531, column: 28, scope: !13673)
!13679 = !DILocation(line: 1531, column: 3, scope: !13673)
!13680 = !DILocation(line: 1533, column: 21, scope: !13612)
!13681 = !DILocation(line: 1533, column: 2, scope: !13612)
!13682 = !DILocation(line: 1533, column: 7, scope: !13612)
!13683 = !DILocation(line: 1533, column: 9, scope: !13612)
!13684 = !DILocation(line: 1533, column: 18, scope: !13612)
!13685 = !DILocation(line: 1534, column: 19, scope: !13612)
!13686 = !DILocation(line: 1534, column: 2, scope: !13612)
!13687 = !DILocation(line: 1534, column: 7, scope: !13612)
!13688 = !DILocation(line: 1534, column: 9, scope: !13612)
!13689 = !DILocation(line: 1534, column: 16, scope: !13612)
!13690 = !DILocation(line: 1535, column: 1, scope: !13612)
!13691 = distinct !DISubprogram(name: "ata_eh_analyze_tf", scope: !3, file: !3, line: 1552, type: !13692, scopeLine: 1554, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!13692 = !DISubroutineType(types: !13693)
!13693 = !{!7, !6387, !6729}
!13694 = !DILocalVariable(name: "qc", arg: 1, scope: !13691, file: !3, line: 1552, type: !6387)
!13695 = !DILocation(line: 1552, column: 62, scope: !13691)
!13696 = !DILocalVariable(name: "tf", arg: 2, scope: !13691, file: !3, line: 1553, type: !6729)
!13697 = !DILocation(line: 1553, column: 38, scope: !13691)
!13698 = !DILocalVariable(name: "tmp", scope: !13691, file: !3, line: 1555, type: !7)
!13699 = !DILocation(line: 1555, column: 15, scope: !13691)
!13700 = !DILocalVariable(name: "action", scope: !13691, file: !3, line: 1555, type: !7)
!13701 = !DILocation(line: 1555, column: 20, scope: !13691)
!13702 = !DILocalVariable(name: "stat", scope: !13691, file: !3, line: 1556, type: !2257)
!13703 = !DILocation(line: 1556, column: 5, scope: !13691)
!13704 = !DILocation(line: 1556, column: 12, scope: !13691)
!13705 = !DILocation(line: 1556, column: 16, scope: !13691)
!13706 = !DILocalVariable(name: "err", scope: !13691, file: !3, line: 1556, type: !2257)
!13707 = !DILocation(line: 1556, column: 25, scope: !13691)
!13708 = !DILocation(line: 1556, column: 31, scope: !13691)
!13709 = !DILocation(line: 1556, column: 35, scope: !13691)
!13710 = !DILocation(line: 1558, column: 7, scope: !13711)
!13711 = distinct !DILexicalBlock(scope: !13691, file: !3, line: 1558, column: 6)
!13712 = !DILocation(line: 1558, column: 12, scope: !13711)
!13713 = !DILocation(line: 1558, column: 47, scope: !13711)
!13714 = !DILocation(line: 1558, column: 6, scope: !13691)
!13715 = !DILocation(line: 1559, column: 3, scope: !13716)
!13716 = distinct !DILexicalBlock(scope: !13711, file: !3, line: 1558, column: 60)
!13717 = !DILocation(line: 1559, column: 7, scope: !13716)
!13718 = !DILocation(line: 1559, column: 16, scope: !13716)
!13719 = !DILocation(line: 1560, column: 3, scope: !13716)
!13720 = !DILocation(line: 1563, column: 6, scope: !13721)
!13721 = distinct !DILexicalBlock(scope: !13691, file: !3, line: 1563, column: 6)
!13722 = !DILocation(line: 1563, column: 11, scope: !13721)
!13723 = !DILocation(line: 1563, column: 6, scope: !13691)
!13724 = !DILocation(line: 1564, column: 3, scope: !13725)
!13725 = distinct !DILexicalBlock(scope: !13721, file: !3, line: 1563, column: 33)
!13726 = !DILocation(line: 1564, column: 7, scope: !13725)
!13727 = !DILocation(line: 1564, column: 16, scope: !13725)
!13728 = !DILocation(line: 1569, column: 7, scope: !13729)
!13729 = distinct !DILexicalBlock(scope: !13725, file: !3, line: 1569, column: 7)
!13730 = !DILocation(line: 1569, column: 12, scope: !13729)
!13731 = !DILocation(line: 1569, column: 7, scope: !13725)
!13732 = !DILocation(line: 1570, column: 9, scope: !13729)
!13733 = !DILocation(line: 1570, column: 4, scope: !13729)
!13734 = !DILocation(line: 1571, column: 2, scope: !13725)
!13735 = !DILocation(line: 1572, column: 3, scope: !13736)
!13736 = distinct !DILexicalBlock(scope: !13721, file: !3, line: 1571, column: 9)
!13737 = !DILocation(line: 1575, column: 10, scope: !13691)
!13738 = !DILocation(line: 1575, column: 14, scope: !13691)
!13739 = !DILocation(line: 1575, column: 19, scope: !13691)
!13740 = !DILocation(line: 1575, column: 2, scope: !13691)
!13741 = !DILocation(line: 1577, column: 7, scope: !13742)
!13742 = distinct !DILexicalBlock(scope: !13743, file: !3, line: 1577, column: 7)
!13743 = distinct !DILexicalBlock(scope: !13691, file: !3, line: 1575, column: 26)
!13744 = !DILocation(line: 1577, column: 12, scope: !13742)
!13745 = !DILocation(line: 1577, column: 7, scope: !13743)
!13746 = !DILocation(line: 1578, column: 25, scope: !13742)
!13747 = !DILocation(line: 1578, column: 29, scope: !13742)
!13748 = !DILocation(line: 1578, column: 33, scope: !13742)
!13749 = !DILocation(line: 1578, column: 4, scope: !13742)
!13750 = !DILocation(line: 1577, column: 14, scope: !13742)
!13751 = !DILocation(line: 1581, column: 7, scope: !13752)
!13752 = distinct !DILexicalBlock(scope: !13743, file: !3, line: 1581, column: 7)
!13753 = !DILocation(line: 1581, column: 11, scope: !13752)
!13754 = !DILocation(line: 1581, column: 7, scope: !13743)
!13755 = !DILocation(line: 1582, column: 4, scope: !13752)
!13756 = !DILocation(line: 1582, column: 8, scope: !13752)
!13757 = !DILocation(line: 1582, column: 17, scope: !13752)
!13758 = !DILocation(line: 1583, column: 7, scope: !13759)
!13759 = distinct !DILexicalBlock(scope: !13743, file: !3, line: 1583, column: 7)
!13760 = !DILocation(line: 1583, column: 11, scope: !13759)
!13761 = !DILocation(line: 1583, column: 7, scope: !13743)
!13762 = !DILocation(line: 1584, column: 4, scope: !13759)
!13763 = !DILocation(line: 1584, column: 8, scope: !13759)
!13764 = !DILocation(line: 1584, column: 17, scope: !13759)
!13765 = !DILocation(line: 1585, column: 7, scope: !13766)
!13766 = distinct !DILexicalBlock(scope: !13743, file: !3, line: 1585, column: 7)
!13767 = !DILocation(line: 1585, column: 11, scope: !13766)
!13768 = !DILocation(line: 1585, column: 7, scope: !13743)
!13769 = !DILocation(line: 1586, column: 4, scope: !13766)
!13770 = !DILocation(line: 1586, column: 8, scope: !13766)
!13771 = !DILocation(line: 1586, column: 17, scope: !13766)
!13772 = !DILocation(line: 1587, column: 3, scope: !13743)
!13773 = !DILocation(line: 1590, column: 9, scope: !13774)
!13774 = distinct !DILexicalBlock(scope: !13743, file: !3, line: 1590, column: 7)
!13775 = !DILocation(line: 1590, column: 13, scope: !13774)
!13776 = !DILocation(line: 1590, column: 17, scope: !13774)
!13777 = !DILocation(line: 1590, column: 24, scope: !13774)
!13778 = !DILocation(line: 1590, column: 7, scope: !13743)
!13779 = !DILocation(line: 1591, column: 33, scope: !13780)
!13780 = distinct !DILexicalBlock(scope: !13774, file: !3, line: 1590, column: 45)
!13781 = !DILocation(line: 1591, column: 37, scope: !13780)
!13782 = !DILocation(line: 1592, column: 7, scope: !13780)
!13783 = !DILocation(line: 1592, column: 11, scope: !13780)
!13784 = !DILocation(line: 1592, column: 20, scope: !13780)
!13785 = !DILocation(line: 1593, column: 7, scope: !13780)
!13786 = !DILocation(line: 1593, column: 11, scope: !13780)
!13787 = !DILocation(line: 1593, column: 21, scope: !13780)
!13788 = !DILocation(line: 1593, column: 29, scope: !13780)
!13789 = !DILocation(line: 1591, column: 10, scope: !13780)
!13790 = !DILocation(line: 1591, column: 8, scope: !13780)
!13791 = !DILocation(line: 1594, column: 9, scope: !13792)
!13792 = distinct !DILexicalBlock(scope: !13780, file: !3, line: 1594, column: 8)
!13793 = !DILocation(line: 1594, column: 8, scope: !13780)
!13794 = !DILocation(line: 1595, column: 5, scope: !13792)
!13795 = !DILocation(line: 1595, column: 9, scope: !13792)
!13796 = !DILocation(line: 1595, column: 15, scope: !13792)
!13797 = !DILocation(line: 1597, column: 21, scope: !13792)
!13798 = !DILocation(line: 1597, column: 5, scope: !13792)
!13799 = !DILocation(line: 1597, column: 9, scope: !13792)
!13800 = !DILocation(line: 1597, column: 18, scope: !13792)
!13801 = !DILocation(line: 1598, column: 3, scope: !13780)
!13802 = !DILocation(line: 1599, column: 2, scope: !13743)
!13803 = !DILocation(line: 1601, column: 6, scope: !13804)
!13804 = distinct !DILexicalBlock(scope: !13691, file: !3, line: 1601, column: 6)
!13805 = !DILocation(line: 1601, column: 10, scope: !13804)
!13806 = !DILocation(line: 1601, column: 16, scope: !13804)
!13807 = !DILocation(line: 1601, column: 6, scope: !13691)
!13808 = !DILocalVariable(name: "ret", scope: !13809, file: !3, line: 1602, type: !206)
!13809 = distinct !DILexicalBlock(scope: !13804, file: !3, line: 1601, column: 42)
!13810 = !DILocation(line: 1602, column: 7, scope: !13809)
!13811 = !DILocation(line: 1602, column: 30, scope: !13809)
!13812 = !DILocation(line: 1602, column: 34, scope: !13809)
!13813 = !DILocation(line: 1602, column: 13, scope: !13809)
!13814 = !DILocation(line: 1612, column: 7, scope: !13815)
!13815 = distinct !DILexicalBlock(scope: !13809, file: !3, line: 1612, column: 7)
!13816 = !DILocation(line: 1612, column: 11, scope: !13815)
!13817 = !DILocation(line: 1612, column: 26, scope: !13815)
!13818 = !DILocation(line: 1612, column: 29, scope: !13815)
!13819 = !DILocation(line: 1612, column: 33, scope: !13815)
!13820 = !DILocation(line: 1612, column: 7, scope: !13809)
!13821 = !DILocation(line: 1613, column: 4, scope: !13822)
!13822 = distinct !DILexicalBlock(scope: !13815, file: !3, line: 1612, column: 52)
!13823 = !DILocation(line: 1613, column: 8, scope: !13822)
!13824 = !DILocation(line: 1613, column: 14, scope: !13822)
!13825 = !DILocation(line: 1614, column: 4, scope: !13822)
!13826 = !DILocation(line: 1614, column: 8, scope: !13822)
!13827 = !DILocation(line: 1614, column: 17, scope: !13822)
!13828 = !DILocation(line: 1615, column: 3, scope: !13822)
!13829 = !DILocation(line: 1615, column: 14, scope: !13830)
!13830 = distinct !DILexicalBlock(scope: !13815, file: !3, line: 1615, column: 14)
!13831 = !DILocation(line: 1615, column: 18, scope: !13830)
!13832 = !DILocation(line: 1615, column: 14, scope: !13815)
!13833 = !DILocation(line: 1616, column: 4, scope: !13834)
!13834 = distinct !DILexicalBlock(scope: !13830, file: !3, line: 1615, column: 30)
!13835 = !DILocation(line: 1616, column: 8, scope: !13834)
!13836 = !DILocation(line: 1616, column: 17, scope: !13834)
!13837 = !DILocation(line: 1617, column: 3, scope: !13834)
!13838 = !DILocation(line: 1618, column: 2, scope: !13809)
!13839 = !DILocation(line: 1619, column: 6, scope: !13840)
!13840 = distinct !DILexicalBlock(scope: !13691, file: !3, line: 1619, column: 6)
!13841 = !DILocation(line: 1619, column: 10, scope: !13840)
!13842 = !DILocation(line: 1619, column: 19, scope: !13840)
!13843 = !DILocation(line: 1619, column: 6, scope: !13691)
!13844 = !DILocation(line: 1620, column: 10, scope: !13840)
!13845 = !DILocation(line: 1620, column: 3, scope: !13840)
!13846 = !DILocation(line: 1622, column: 9, scope: !13691)
!13847 = !DILocation(line: 1622, column: 2, scope: !13691)
!13848 = !DILocation(line: 1623, column: 1, scope: !13691)
!13849 = distinct !DISubprogram(name: "ata_eh_worth_retry", scope: !3, file: !3, line: 1876, type: !6385, scopeLine: 1877, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!13850 = !DILocalVariable(name: "qc", arg: 1, scope: !13849, file: !3, line: 1876, type: !6387)
!13851 = !DILocation(line: 1876, column: 61, scope: !13849)
!13852 = !DILocation(line: 1878, column: 6, scope: !13853)
!13853 = distinct !DILexicalBlock(scope: !13849, file: !3, line: 1878, column: 6)
!13854 = !DILocation(line: 1878, column: 10, scope: !13853)
!13855 = !DILocation(line: 1878, column: 19, scope: !13853)
!13856 = !DILocation(line: 1878, column: 6, scope: !13849)
!13857 = !DILocation(line: 1879, column: 3, scope: !13853)
!13858 = !DILocation(line: 1880, column: 6, scope: !13859)
!13859 = distinct !DILexicalBlock(scope: !13849, file: !3, line: 1880, column: 6)
!13860 = !DILocation(line: 1880, column: 10, scope: !13859)
!13861 = !DILocation(line: 1880, column: 16, scope: !13859)
!13862 = !DILocation(line: 1880, column: 6, scope: !13849)
!13863 = !DILocation(line: 1881, column: 3, scope: !13859)
!13864 = !DILocation(line: 1882, column: 6, scope: !13865)
!13865 = distinct !DILexicalBlock(scope: !13849, file: !3, line: 1882, column: 6)
!13866 = !DILocation(line: 1882, column: 10, scope: !13865)
!13867 = !DILocation(line: 1882, column: 19, scope: !13865)
!13868 = !DILocation(line: 1882, column: 6, scope: !13849)
!13869 = !DILocation(line: 1883, column: 3, scope: !13865)
!13870 = !DILocation(line: 1884, column: 9, scope: !13849)
!13871 = !DILocation(line: 1884, column: 13, scope: !13849)
!13872 = !DILocation(line: 1884, column: 22, scope: !13849)
!13873 = !DILocation(line: 1884, column: 2, scope: !13849)
!13874 = !DILocation(line: 1885, column: 1, scope: !13849)
!13875 = distinct !DISubprogram(name: "trace_ata_eh_link_autopsy_qc", scope: !13876, file: !13876, line: 304, type: !6593, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!13876 = !DIFile(filename: "./include/trace/events/libata.h", directory: "/home/lizy2001/genbc/linux")
!13877 = !DILocalVariable(name: "qc", arg: 1, scope: !13875, file: !13876, line: 304, type: !6387)
!13878 = !DILocation(line: 304, column: 1, scope: !13875)
!13879 = distinct !DISubprogram(name: "ata_eh_quiet", scope: !3, file: !3, line: 1894, type: !6608, scopeLine: 1895, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!13880 = !DILocalVariable(name: "qc", arg: 1, scope: !13879, file: !3, line: 1894, type: !6387)
!13881 = !DILocation(line: 1894, column: 56, scope: !13879)
!13882 = !DILocation(line: 1896, column: 6, scope: !13883)
!13883 = distinct !DILexicalBlock(scope: !13879, file: !3, line: 1896, column: 6)
!13884 = !DILocation(line: 1896, column: 10, scope: !13883)
!13885 = !DILocation(line: 1896, column: 18, scope: !13883)
!13886 = !DILocation(line: 1897, column: 6, scope: !13883)
!13887 = !DILocation(line: 1897, column: 10, scope: !13883)
!13888 = !DILocation(line: 1897, column: 19, scope: !13883)
!13889 = !DILocation(line: 1897, column: 28, scope: !13883)
!13890 = !DILocation(line: 1897, column: 37, scope: !13883)
!13891 = !DILocation(line: 1896, column: 6, scope: !13879)
!13892 = !DILocation(line: 1898, column: 3, scope: !13883)
!13893 = !DILocation(line: 1898, column: 7, scope: !13883)
!13894 = !DILocation(line: 1898, column: 13, scope: !13883)
!13895 = !DILocation(line: 1899, column: 9, scope: !13879)
!13896 = !DILocation(line: 1899, column: 13, scope: !13879)
!13897 = !DILocation(line: 1899, column: 19, scope: !13879)
!13898 = !DILocation(line: 1899, column: 2, scope: !13879)
!13899 = distinct !DISubprogram(name: "ata_link_max_devices", scope: !178, file: !178, line: 1613, type: !13900, scopeLine: 1614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!13900 = !DISubroutineType(types: !13901)
!13901 = !{!206, !11437}
!13902 = !DILocalVariable(name: "link", arg: 1, scope: !13899, file: !178, line: 1613, type: !11437)
!13903 = !DILocation(line: 1613, column: 63, scope: !13899)
!13904 = !DILocation(line: 1615, column: 23, scope: !13905)
!13905 = distinct !DILexicalBlock(scope: !13899, file: !178, line: 1615, column: 6)
!13906 = !DILocation(line: 1615, column: 6, scope: !13905)
!13907 = !DILocation(line: 1615, column: 29, scope: !13905)
!13908 = !DILocation(line: 1615, column: 32, scope: !13905)
!13909 = !DILocation(line: 1615, column: 38, scope: !13905)
!13910 = !DILocation(line: 1615, column: 42, scope: !13905)
!13911 = !DILocation(line: 1615, column: 48, scope: !13905)
!13912 = !DILocation(line: 1615, column: 6, scope: !13899)
!13913 = !DILocation(line: 1616, column: 3, scope: !13905)
!13914 = !DILocation(line: 1617, column: 2, scope: !13899)
!13915 = !DILocation(line: 1618, column: 1, scope: !13899)
!13916 = !DILocalVariable(name: "dev", arg: 1, scope: !6900, file: !3, line: 1791, type: !6392)
!13917 = !DILocation(line: 1791, column: 58, scope: !6900)
!13918 = !DILocalVariable(name: "eflags", arg: 2, scope: !6900, file: !3, line: 1792, type: !7)
!13919 = !DILocation(line: 1792, column: 18, scope: !6900)
!13920 = !DILocalVariable(name: "err_mask", arg: 3, scope: !6900, file: !3, line: 1792, type: !7)
!13921 = !DILocation(line: 1792, column: 39, scope: !6900)
!13922 = !DILocalVariable(name: "link", scope: !6900, file: !3, line: 1794, type: !6396)
!13923 = !DILocation(line: 1794, column: 19, scope: !6900)
!13924 = !DILocation(line: 1794, column: 44, scope: !6900)
!13925 = !DILocation(line: 1794, column: 26, scope: !6900)
!13926 = !DILocalVariable(name: "xfer_ok", scope: !6900, file: !3, line: 1795, type: !206)
!13927 = !DILocation(line: 1795, column: 6, scope: !6900)
!13928 = !DILocalVariable(name: "verdict", scope: !6900, file: !3, line: 1796, type: !7)
!13929 = !DILocation(line: 1796, column: 15, scope: !6900)
!13930 = !DILocalVariable(name: "action", scope: !6900, file: !3, line: 1797, type: !7)
!13931 = !DILocation(line: 1797, column: 15, scope: !6900)
!13932 = !DILocation(line: 1800, column: 30, scope: !13933)
!13933 = distinct !DILexicalBlock(scope: !6900, file: !3, line: 1800, column: 6)
!13934 = !DILocation(line: 1800, column: 38, scope: !13933)
!13935 = !DILocation(line: 1800, column: 6, scope: !13933)
!13936 = !DILocation(line: 1800, column: 58, scope: !13933)
!13937 = !DILocation(line: 1800, column: 6, scope: !6900)
!13938 = !DILocation(line: 1801, column: 3, scope: !13933)
!13939 = !DILocation(line: 1804, column: 20, scope: !6900)
!13940 = !DILocation(line: 1804, column: 25, scope: !6900)
!13941 = !DILocation(line: 1804, column: 32, scope: !6900)
!13942 = !DILocation(line: 1804, column: 40, scope: !6900)
!13943 = !DILocation(line: 1804, column: 2, scope: !6900)
!13944 = !DILocation(line: 1805, column: 38, scope: !6900)
!13945 = !DILocation(line: 1805, column: 12, scope: !6900)
!13946 = !DILocation(line: 1805, column: 10, scope: !6900)
!13947 = !DILocation(line: 1808, column: 7, scope: !13948)
!13948 = distinct !DILexicalBlock(scope: !6900, file: !3, line: 1808, column: 6)
!13949 = !DILocation(line: 1808, column: 15, scope: !13948)
!13950 = !DILocation(line: 1808, column: 38, scope: !13948)
!13951 = !DILocation(line: 1809, column: 7, scope: !13948)
!13952 = !DILocation(line: 1809, column: 12, scope: !13948)
!13953 = !DILocation(line: 1809, column: 18, scope: !13948)
!13954 = !DILocation(line: 1810, column: 27, scope: !13948)
!13955 = !DILocation(line: 1808, column: 6, scope: !6900)
!13956 = !DILocation(line: 1811, column: 3, scope: !13957)
!13957 = distinct !DILexicalBlock(scope: !13948, file: !3, line: 1810, column: 45)
!13958 = !DILocation(line: 1811, column: 8, scope: !13957)
!13959 = !DILocation(line: 1811, column: 14, scope: !13957)
!13960 = !DILocation(line: 1812, column: 3, scope: !13957)
!13961 = !DILocation(line: 1813, column: 3, scope: !13957)
!13962 = !DILocation(line: 1817, column: 6, scope: !13963)
!13963 = distinct !DILexicalBlock(scope: !6900, file: !3, line: 1817, column: 6)
!13964 = !DILocation(line: 1817, column: 14, scope: !13963)
!13965 = !DILocation(line: 1817, column: 6, scope: !6900)
!13966 = !DILocation(line: 1819, column: 27, scope: !13967)
!13967 = distinct !DILexicalBlock(scope: !13968, file: !3, line: 1819, column: 7)
!13968 = distinct !DILexicalBlock(scope: !13963, file: !3, line: 1817, column: 40)
!13969 = !DILocation(line: 1819, column: 7, scope: !13967)
!13970 = !DILocation(line: 1819, column: 36, scope: !13967)
!13971 = !DILocation(line: 1819, column: 7, scope: !13968)
!13972 = !DILocation(line: 1820, column: 11, scope: !13973)
!13973 = distinct !DILexicalBlock(scope: !13967, file: !3, line: 1819, column: 42)
!13974 = !DILocation(line: 1821, column: 4, scope: !13973)
!13975 = !DILocation(line: 1825, column: 7, scope: !13976)
!13976 = distinct !DILexicalBlock(scope: !13968, file: !3, line: 1825, column: 7)
!13977 = !DILocation(line: 1825, column: 12, scope: !13976)
!13978 = !DILocation(line: 1825, column: 21, scope: !13976)
!13979 = !DILocation(line: 1825, column: 7, scope: !13968)
!13980 = !DILocalVariable(name: "sel", scope: !13981, file: !3, line: 1830, type: !206)
!13981 = distinct !DILexicalBlock(scope: !13976, file: !3, line: 1825, column: 26)
!13982 = !DILocation(line: 1830, column: 8, scope: !13981)
!13983 = !DILocation(line: 1832, column: 8, scope: !13984)
!13984 = distinct !DILexicalBlock(scope: !13981, file: !3, line: 1832, column: 8)
!13985 = !DILocation(line: 1832, column: 13, scope: !13984)
!13986 = !DILocation(line: 1832, column: 24, scope: !13984)
!13987 = !DILocation(line: 1832, column: 8, scope: !13981)
!13988 = !DILocation(line: 1833, column: 26, scope: !13984)
!13989 = !DILocation(line: 1833, column: 31, scope: !13984)
!13990 = !DILocation(line: 1833, column: 11, scope: !13984)
!13991 = !DILocation(line: 1833, column: 9, scope: !13984)
!13992 = !DILocation(line: 1833, column: 5, scope: !13984)
!13993 = !DILocation(line: 1835, column: 26, scope: !13984)
!13994 = !DILocation(line: 1835, column: 31, scope: !13984)
!13995 = !DILocation(line: 1835, column: 11, scope: !13984)
!13996 = !DILocation(line: 1835, column: 9, scope: !13984)
!13997 = !DILocation(line: 1837, column: 4, scope: !13981)
!13998 = !DILocation(line: 1837, column: 9, scope: !13981)
!13999 = !DILocation(line: 1837, column: 17, scope: !13981)
!14000 = !DILocation(line: 1839, column: 32, scope: !14001)
!14001 = distinct !DILexicalBlock(scope: !13981, file: !3, line: 1839, column: 8)
!14002 = !DILocation(line: 1839, column: 37, scope: !14001)
!14003 = !DILocation(line: 1839, column: 8, scope: !14001)
!14004 = !DILocation(line: 1839, column: 42, scope: !14001)
!14005 = !DILocation(line: 1839, column: 8, scope: !13981)
!14006 = !DILocation(line: 1840, column: 12, scope: !14007)
!14007 = distinct !DILexicalBlock(scope: !14001, file: !3, line: 1839, column: 48)
!14008 = !DILocation(line: 1841, column: 5, scope: !14007)
!14009 = !DILocation(line: 1843, column: 3, scope: !13981)
!14010 = !DILocation(line: 1844, column: 2, scope: !13968)
!14011 = !DILocation(line: 1849, column: 7, scope: !14012)
!14012 = distinct !DILexicalBlock(scope: !6900, file: !3, line: 1849, column: 6)
!14013 = !DILocation(line: 1849, column: 15, scope: !14012)
!14014 = !DILocation(line: 1849, column: 46, scope: !14012)
!14015 = !DILocation(line: 1849, column: 50, scope: !14012)
!14016 = !DILocation(line: 1849, column: 55, scope: !14012)
!14017 = !DILocation(line: 1849, column: 64, scope: !14012)
!14018 = !DILocation(line: 1849, column: 70, scope: !14012)
!14019 = !DILocation(line: 1850, column: 7, scope: !14012)
!14020 = !DILocation(line: 1850, column: 13, scope: !14012)
!14021 = !DILocation(line: 1850, column: 17, scope: !14012)
!14022 = !DILocation(line: 1850, column: 21, scope: !14012)
!14023 = !DILocation(line: 1850, column: 37, scope: !14012)
!14024 = !DILocation(line: 1850, column: 40, scope: !14012)
!14025 = !DILocation(line: 1850, column: 45, scope: !14012)
!14026 = !DILocation(line: 1850, column: 51, scope: !14012)
!14027 = !DILocation(line: 1850, column: 69, scope: !14012)
!14028 = !DILocation(line: 1851, column: 7, scope: !14012)
!14029 = !DILocation(line: 1851, column: 12, scope: !14012)
!14030 = !DILocation(line: 1851, column: 23, scope: !14012)
!14031 = !DILocation(line: 1849, column: 6, scope: !6900)
!14032 = !DILocation(line: 1852, column: 31, scope: !14033)
!14033 = distinct !DILexicalBlock(scope: !14034, file: !3, line: 1852, column: 7)
!14034 = distinct !DILexicalBlock(scope: !14012, file: !3, line: 1851, column: 42)
!14035 = !DILocation(line: 1852, column: 7, scope: !14033)
!14036 = !DILocation(line: 1852, column: 58, scope: !14033)
!14037 = !DILocation(line: 1852, column: 7, scope: !14034)
!14038 = !DILocation(line: 1853, column: 4, scope: !14039)
!14039 = distinct !DILexicalBlock(scope: !14033, file: !3, line: 1852, column: 64)
!14040 = !DILocation(line: 1853, column: 9, scope: !14039)
!14041 = !DILocation(line: 1853, column: 18, scope: !14039)
!14042 = !DILocation(line: 1854, column: 11, scope: !14039)
!14043 = !DILocation(line: 1855, column: 4, scope: !14039)
!14044 = !DILocation(line: 1857, column: 2, scope: !14034)
!14045 = !DILocation(line: 1859, column: 2, scope: !6900)
!14046 = !DILabel(scope: !6900, name: "done", file: !3, line: 1860)
!14047 = !DILocation(line: 1860, column: 2, scope: !6900)
!14048 = !DILocation(line: 1862, column: 8, scope: !14049)
!14049 = distinct !DILexicalBlock(scope: !6900, file: !3, line: 1862, column: 6)
!14050 = !DILocation(line: 1862, column: 16, scope: !14049)
!14051 = !DILocation(line: 1862, column: 6, scope: !6900)
!14052 = !DILocation(line: 1863, column: 20, scope: !14049)
!14053 = !DILocation(line: 1863, column: 25, scope: !14049)
!14054 = !DILocation(line: 1863, column: 3, scope: !14049)
!14055 = !DILocation(line: 1864, column: 9, scope: !6900)
!14056 = !DILocation(line: 1864, column: 2, scope: !6900)
!14057 = !DILocation(line: 1865, column: 1, scope: !6900)
!14058 = distinct !DISubprogram(name: "trace_ata_eh_link_autopsy", scope: !13876, file: !13876, line: 278, type: !14059, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!14059 = !DISubroutineType(types: !14060)
!14060 = !{null, !6392, !7, !7}
!14061 = !DILocalVariable(name: "dev", arg: 1, scope: !14058, file: !13876, line: 278, type: !6392)
!14062 = !DILocation(line: 278, column: 1, scope: !14058)
!14063 = !DILocalVariable(name: "eh_action", arg: 2, scope: !14058, file: !13876, line: 278, type: !7)
!14064 = !DILocalVariable(name: "eh_err_mask", arg: 3, scope: !14058, file: !13876, line: 278, type: !7)
!14065 = distinct !DISubprogram(name: "ata_ehi_hotplugged", scope: !178, file: !178, line: 1522, type: !7006, scopeLine: 1523, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!14066 = !DILocalVariable(name: "ehi", arg: 1, scope: !14065, file: !178, line: 1522, type: !6934)
!14067 = !DILocation(line: 1522, column: 59, scope: !14065)
!14068 = !DILocation(line: 1524, column: 2, scope: !14065)
!14069 = !DILocation(line: 1524, column: 7, scope: !14065)
!14070 = !DILocation(line: 1524, column: 18, scope: !14065)
!14071 = !DILocation(line: 1525, column: 2, scope: !14065)
!14072 = !DILocation(line: 1525, column: 7, scope: !14065)
!14073 = !DILocation(line: 1525, column: 13, scope: !14065)
!14074 = !DILocation(line: 1526, column: 2, scope: !14065)
!14075 = !DILocation(line: 1526, column: 7, scope: !14065)
!14076 = !DILocation(line: 1526, column: 14, scope: !14065)
!14077 = !DILocation(line: 1527, column: 2, scope: !14065)
!14078 = !DILocation(line: 1527, column: 7, scope: !14065)
!14079 = !DILocation(line: 1527, column: 16, scope: !14065)
!14080 = !DILocation(line: 1528, column: 1, scope: !14065)
!14081 = distinct !DISubprogram(name: "ata_eh_request_sense", scope: !3, file: !3, line: 1396, type: !14082, scopeLine: 1398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!14082 = !DISubroutineType(types: !14083)
!14083 = !{null, !6387, !5946}
!14084 = !DILocalVariable(name: "qc", arg: 1, scope: !14081, file: !3, line: 1396, type: !6387)
!14085 = !DILocation(line: 1396, column: 57, scope: !14081)
!14086 = !DILocalVariable(name: "cmd", arg: 2, scope: !14081, file: !3, line: 1397, type: !5946)
!14087 = !DILocation(line: 1397, column: 24, scope: !14081)
!14088 = !DILocalVariable(name: "dev", scope: !14081, file: !3, line: 1399, type: !6392)
!14089 = !DILocation(line: 1399, column: 21, scope: !14081)
!14090 = !DILocation(line: 1399, column: 27, scope: !14081)
!14091 = !DILocation(line: 1399, column: 31, scope: !14081)
!14092 = !DILocalVariable(name: "tf", scope: !14081, file: !3, line: 1400, type: !6554)
!14093 = !DILocation(line: 1400, column: 22, scope: !14081)
!14094 = !DILocalVariable(name: "err_mask", scope: !14081, file: !3, line: 1401, type: !7)
!14095 = !DILocation(line: 1401, column: 15, scope: !14081)
!14096 = !DILocation(line: 1403, column: 6, scope: !14097)
!14097 = distinct !DILexicalBlock(scope: !14081, file: !3, line: 1403, column: 6)
!14098 = !DILocation(line: 1403, column: 10, scope: !14097)
!14099 = !DILocation(line: 1403, column: 14, scope: !14097)
!14100 = !DILocation(line: 1403, column: 21, scope: !14097)
!14101 = !DILocation(line: 1403, column: 6, scope: !14081)
!14102 = !DILocation(line: 1404, column: 3, scope: !14103)
!14103 = distinct !DILexicalBlock(scope: !14097, file: !3, line: 1403, column: 41)
!14104 = !DILocation(line: 1405, column: 3, scope: !14103)
!14105 = !DILocation(line: 1408, column: 7, scope: !14106)
!14106 = distinct !DILexicalBlock(scope: !14081, file: !3, line: 1408, column: 6)
!14107 = !DILocation(line: 1408, column: 11, scope: !14106)
!14108 = !DILocation(line: 1408, column: 14, scope: !14106)
!14109 = !DILocation(line: 1408, column: 18, scope: !14106)
!14110 = !DILocation(line: 1408, column: 24, scope: !14106)
!14111 = !DILocation(line: 1408, column: 6, scope: !14081)
!14112 = !DILocation(line: 1409, column: 3, scope: !14106)
!14113 = !DILocation(line: 1411, column: 38, scope: !14114)
!14114 = distinct !DILexicalBlock(scope: !14081, file: !3, line: 1411, column: 6)
!14115 = !DILocation(line: 1411, column: 43, scope: !14114)
!14116 = !DILocation(line: 1411, column: 7, scope: !14114)
!14117 = !DILocation(line: 1411, column: 6, scope: !14081)
!14118 = !DILocation(line: 1412, column: 3, scope: !14119)
!14119 = distinct !DILexicalBlock(scope: !14114, file: !3, line: 1411, column: 48)
!14120 = !DILocation(line: 1413, column: 3, scope: !14119)
!14121 = !DILocation(line: 1418, column: 14, scope: !14081)
!14122 = !DILocation(line: 1418, column: 2, scope: !14081)
!14123 = !DILocation(line: 1419, column: 5, scope: !14081)
!14124 = !DILocation(line: 1419, column: 11, scope: !14081)
!14125 = !DILocation(line: 1420, column: 5, scope: !14081)
!14126 = !DILocation(line: 1420, column: 11, scope: !14081)
!14127 = !DILocation(line: 1421, column: 5, scope: !14081)
!14128 = !DILocation(line: 1421, column: 13, scope: !14081)
!14129 = !DILocation(line: 1422, column: 5, scope: !14081)
!14130 = !DILocation(line: 1422, column: 14, scope: !14081)
!14131 = !DILocation(line: 1424, column: 31, scope: !14081)
!14132 = !DILocation(line: 1424, column: 13, scope: !14081)
!14133 = !DILocation(line: 1424, column: 11, scope: !14081)
!14134 = !DILocation(line: 1426, column: 9, scope: !14135)
!14135 = distinct !DILexicalBlock(scope: !14081, file: !3, line: 1426, column: 6)
!14136 = !DILocation(line: 1426, column: 6, scope: !14135)
!14137 = !DILocation(line: 1426, column: 17, scope: !14135)
!14138 = !DILocation(line: 1426, column: 6, scope: !14081)
!14139 = !DILocation(line: 1427, column: 22, scope: !14140)
!14140 = distinct !DILexicalBlock(scope: !14135, file: !3, line: 1426, column: 30)
!14141 = !DILocation(line: 1427, column: 27, scope: !14140)
!14142 = !DILocation(line: 1427, column: 35, scope: !14140)
!14143 = !DILocation(line: 1427, column: 44, scope: !14140)
!14144 = !DILocation(line: 1427, column: 53, scope: !14140)
!14145 = !DILocation(line: 1427, column: 3, scope: !14140)
!14146 = !DILocation(line: 1428, column: 3, scope: !14140)
!14147 = !DILocation(line: 1428, column: 7, scope: !14140)
!14148 = !DILocation(line: 1428, column: 13, scope: !14140)
!14149 = !DILocation(line: 1429, column: 2, scope: !14140)
!14150 = !DILocation(line: 1430, column: 3, scope: !14151)
!14151 = distinct !DILexicalBlock(scope: !14135, file: !3, line: 1429, column: 9)
!14152 = !DILocation(line: 1433, column: 1, scope: !14081)
!14153 = distinct !DISubprogram(name: "ata_id_sense_reporting_enabled", scope: !500, file: !500, line: 778, type: !14154, scopeLine: 779, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!14154 = !DISubroutineType(types: !14155)
!14155 = !{!1333, !14156}
!14156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14157, size: 64)
!14157 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1754)
!14158 = !DILocalVariable(name: "id", arg: 1, scope: !14153, file: !500, line: 778, type: !14156)
!14159 = !DILocation(line: 778, column: 62, scope: !14153)
!14160 = !DILocation(line: 780, column: 8, scope: !14161)
!14161 = distinct !DILexicalBlock(scope: !14153, file: !500, line: 780, column: 6)
!14162 = !DILocation(line: 780, column: 32, scope: !14161)
!14163 = !DILocation(line: 780, column: 6, scope: !14153)
!14164 = !DILocation(line: 781, column: 3, scope: !14161)
!14165 = !DILocation(line: 782, column: 9, scope: !14153)
!14166 = !DILocation(line: 782, column: 34, scope: !14153)
!14167 = !DILocation(line: 782, column: 2, scope: !14153)
!14168 = !DILocation(line: 783, column: 1, scope: !14153)
!14169 = distinct !DISubprogram(name: "ata_eh_categorize_error", scope: !3, file: !3, line: 1625, type: !14170, scopeLine: 1627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!14170 = !DISubroutineType(types: !14171)
!14171 = !{!206, !7, !7, !1550}
!14172 = !DILocalVariable(name: "eflags", arg: 1, scope: !14169, file: !3, line: 1625, type: !7)
!14173 = !DILocation(line: 1625, column: 49, scope: !14169)
!14174 = !DILocalVariable(name: "err_mask", arg: 2, scope: !14169, file: !3, line: 1625, type: !7)
!14175 = !DILocation(line: 1625, column: 70, scope: !14169)
!14176 = !DILocalVariable(name: "xfer_ok", arg: 3, scope: !14169, file: !3, line: 1626, type: !1550)
!14177 = !DILocation(line: 1626, column: 13, scope: !14169)
!14178 = !DILocalVariable(name: "base", scope: !14169, file: !3, line: 1628, type: !206)
!14179 = !DILocation(line: 1628, column: 6, scope: !14169)
!14180 = !DILocation(line: 1630, column: 8, scope: !14181)
!14181 = distinct !DILexicalBlock(scope: !14169, file: !3, line: 1630, column: 6)
!14182 = !DILocation(line: 1630, column: 15, scope: !14181)
!14183 = !DILocation(line: 1630, column: 6, scope: !14169)
!14184 = !DILocation(line: 1631, column: 4, scope: !14181)
!14185 = !DILocation(line: 1631, column: 12, scope: !14181)
!14186 = !DILocation(line: 1631, column: 3, scope: !14181)
!14187 = !DILocation(line: 1633, column: 8, scope: !14188)
!14188 = distinct !DILexicalBlock(scope: !14169, file: !3, line: 1633, column: 6)
!14189 = !DILocation(line: 1633, column: 7, scope: !14188)
!14190 = !DILocation(line: 1633, column: 6, scope: !14169)
!14191 = !DILocation(line: 1634, column: 8, scope: !14188)
!14192 = !DILocation(line: 1634, column: 3, scope: !14188)
!14193 = !DILocation(line: 1636, column: 6, scope: !14194)
!14194 = distinct !DILexicalBlock(scope: !14169, file: !3, line: 1636, column: 6)
!14195 = !DILocation(line: 1636, column: 15, scope: !14194)
!14196 = !DILocation(line: 1636, column: 6, scope: !14169)
!14197 = !DILocation(line: 1637, column: 10, scope: !14194)
!14198 = !DILocation(line: 1637, column: 15, scope: !14194)
!14199 = !DILocation(line: 1637, column: 3, scope: !14194)
!14200 = !DILocation(line: 1639, column: 6, scope: !14201)
!14201 = distinct !DILexicalBlock(scope: !14169, file: !3, line: 1639, column: 6)
!14202 = !DILocation(line: 1639, column: 15, scope: !14201)
!14203 = !DILocation(line: 1639, column: 6, scope: !14169)
!14204 = !DILocation(line: 1640, column: 10, scope: !14201)
!14205 = !DILocation(line: 1640, column: 15, scope: !14201)
!14206 = !DILocation(line: 1640, column: 3, scope: !14201)
!14207 = !DILocation(line: 1642, column: 6, scope: !14208)
!14208 = distinct !DILexicalBlock(scope: !14169, file: !3, line: 1642, column: 6)
!14209 = !DILocation(line: 1642, column: 13, scope: !14208)
!14210 = !DILocation(line: 1642, column: 6, scope: !14169)
!14211 = !DILocation(line: 1643, column: 7, scope: !14212)
!14212 = distinct !DILexicalBlock(scope: !14213, file: !3, line: 1643, column: 7)
!14213 = distinct !DILexicalBlock(scope: !14208, file: !3, line: 1642, column: 32)
!14214 = !DILocation(line: 1643, column: 16, scope: !14212)
!14215 = !DILocation(line: 1643, column: 7, scope: !14213)
!14216 = !DILocation(line: 1644, column: 11, scope: !14212)
!14217 = !DILocation(line: 1644, column: 16, scope: !14212)
!14218 = !DILocation(line: 1644, column: 4, scope: !14212)
!14219 = !DILocation(line: 1645, column: 8, scope: !14220)
!14220 = distinct !DILexicalBlock(scope: !14213, file: !3, line: 1645, column: 7)
!14221 = !DILocation(line: 1645, column: 17, scope: !14220)
!14222 = !DILocation(line: 1646, column: 50, scope: !14220)
!14223 = !DILocation(line: 1645, column: 7, scope: !14213)
!14224 = !DILocation(line: 1647, column: 11, scope: !14220)
!14225 = !DILocation(line: 1647, column: 16, scope: !14220)
!14226 = !DILocation(line: 1647, column: 4, scope: !14220)
!14227 = !DILocation(line: 1648, column: 2, scope: !14213)
!14228 = !DILocation(line: 1650, column: 2, scope: !14169)
!14229 = !DILocation(line: 1651, column: 1, scope: !14169)
!14230 = distinct !DISubprogram(name: "ata_ering_record", scope: !3, file: !3, line: 360, type: !14231, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!14231 = !DISubroutineType(types: !14232)
!14232 = !{null, !7248, !7, !7}
!14233 = !DILocalVariable(name: "ering", arg: 1, scope: !14230, file: !3, line: 360, type: !7248)
!14234 = !DILocation(line: 360, column: 48, scope: !14230)
!14235 = !DILocalVariable(name: "eflags", arg: 2, scope: !14230, file: !3, line: 360, type: !7)
!14236 = !DILocation(line: 360, column: 68, scope: !14230)
!14237 = !DILocalVariable(name: "err_mask", arg: 3, scope: !14230, file: !3, line: 361, type: !7)
!14238 = !DILocation(line: 361, column: 22, scope: !14230)
!14239 = !DILocalVariable(name: "ent", scope: !14230, file: !3, line: 363, type: !7252)
!14240 = !DILocation(line: 363, column: 26, scope: !14230)
!14241 = !DILocalVariable(name: "__ret_warn_on", scope: !14242, file: !3, line: 365, type: !206)
!14242 = distinct !DILexicalBlock(scope: !14230, file: !3, line: 365, column: 2)
!14243 = !DILocation(line: 365, column: 2, scope: !14242)
!14244 = !DILocation(line: 365, column: 2, scope: !14245)
!14245 = distinct !DILexicalBlock(scope: !14242, file: !3, line: 365, column: 2)
!14246 = !DILocation(line: 365, column: 2, scope: !14247)
!14247 = distinct !DILexicalBlock(scope: !14245, file: !3, line: 365, column: 2)
!14248 = !DILocation(line: 365, column: 2, scope: !14249)
!14249 = distinct !DILexicalBlock(scope: !14247, file: !3, line: 365, column: 2)
!14250 = !DILocation(line: 365, column: 2, scope: !14251)
!14251 = distinct !DILexicalBlock(scope: !14247, file: !3, line: 365, column: 2)
!14252 = !{i32 -2140099267, i32 -2140099238, i32 -2140099192, i32 -2140099134, i32 -2140099080, i32 -2140099026, i32 -2140098971, i32 -2140098940}
!14253 = !DILocation(line: 365, column: 2, scope: !14254)
!14254 = distinct !DILexicalBlock(scope: !14247, file: !3, line: 365, column: 2)
!14255 = !{i32 -2140098535, i32 -2140098528, i32 -2140098476, i32 -2140098445, i32 -2140098415}
!14256 = !DILocation(line: 365, column: 2, scope: !14257)
!14257 = distinct !DILexicalBlock(scope: !14247, file: !3, line: 365, column: 2)
!14258 = !DILocation(line: 367, column: 2, scope: !14230)
!14259 = !DILocation(line: 367, column: 9, scope: !14230)
!14260 = !DILocation(line: 367, column: 15, scope: !14230)
!14261 = !DILocation(line: 368, column: 2, scope: !14230)
!14262 = !DILocation(line: 368, column: 9, scope: !14230)
!14263 = !DILocation(line: 368, column: 16, scope: !14230)
!14264 = !DILocation(line: 370, column: 9, scope: !14230)
!14265 = !DILocation(line: 370, column: 16, scope: !14230)
!14266 = !DILocation(line: 370, column: 21, scope: !14230)
!14267 = !DILocation(line: 370, column: 28, scope: !14230)
!14268 = !DILocation(line: 370, column: 6, scope: !14230)
!14269 = !DILocation(line: 371, column: 16, scope: !14230)
!14270 = !DILocation(line: 371, column: 2, scope: !14230)
!14271 = !DILocation(line: 371, column: 7, scope: !14230)
!14272 = !DILocation(line: 371, column: 14, scope: !14230)
!14273 = !DILocation(line: 372, column: 18, scope: !14230)
!14274 = !DILocation(line: 372, column: 2, scope: !14230)
!14275 = !DILocation(line: 372, column: 7, scope: !14230)
!14276 = !DILocation(line: 372, column: 16, scope: !14230)
!14277 = !DILocation(line: 373, column: 19, scope: !14230)
!14278 = !DILocation(line: 373, column: 2, scope: !14230)
!14279 = !DILocation(line: 373, column: 7, scope: !14230)
!14280 = !DILocation(line: 373, column: 17, scope: !14230)
!14281 = !DILocation(line: 374, column: 1, scope: !14230)
!14282 = distinct !DISubprogram(name: "ata_eh_speed_down_verdict", scope: !3, file: !3, line: 1731, type: !14283, scopeLine: 1732, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!14283 = !DISubroutineType(types: !14284)
!14284 = !{!7, !6392}
!14285 = !DILocalVariable(name: "dev", arg: 1, scope: !14282, file: !3, line: 1731, type: !6392)
!14286 = !DILocation(line: 1731, column: 66, scope: !14282)
!14287 = !DILocalVariable(name: "j5mins", scope: !14282, file: !3, line: 1733, type: !14288)
!14288 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1001)
!14289 = !DILocation(line: 1733, column: 12, scope: !14282)
!14290 = !DILocalVariable(name: "j10mins", scope: !14282, file: !3, line: 1733, type: !14288)
!14291 = !DILocation(line: 1733, column: 37, scope: !14282)
!14292 = !DILocalVariable(name: "j64", scope: !14282, file: !3, line: 1734, type: !1001)
!14293 = !DILocation(line: 1734, column: 6, scope: !14282)
!14294 = !DILocation(line: 1734, column: 12, scope: !14282)
!14295 = !DILocalVariable(name: "arg", scope: !14282, file: !3, line: 1735, type: !14296)
!14296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "speed_down_verdict_arg", file: !3, line: 1653, size: 384, elements: !14297)
!14297 = !{!14298, !14299, !14300}
!14298 = !DIDerivedType(tag: DW_TAG_member, name: "since", scope: !14296, file: !3, line: 1654, baseType: !1001, size: 64)
!14299 = !DIDerivedType(tag: DW_TAG_member, name: "xfer_ok", scope: !14296, file: !3, line: 1655, baseType: !206, size: 32, offset: 64)
!14300 = !DIDerivedType(tag: DW_TAG_member, name: "nr_errors", scope: !14296, file: !3, line: 1656, baseType: !14301, size: 256, offset: 96)
!14301 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 256, elements: !2235)
!14302 = !DILocation(line: 1735, column: 32, scope: !14282)
!14303 = !DILocalVariable(name: "verdict", scope: !14282, file: !3, line: 1736, type: !7)
!14304 = !DILocation(line: 1736, column: 15, scope: !14282)
!14305 = !DILocation(line: 1739, column: 2, scope: !14282)
!14306 = !DILocation(line: 1740, column: 14, scope: !14282)
!14307 = !DILocalVariable(name: "__UNIQUE_ID___x325", scope: !14308, file: !3, line: 1740, type: !1001)
!14308 = distinct !DILexicalBlock(scope: !14282, file: !3, line: 1740, column: 20)
!14309 = !DILocation(line: 1740, column: 20, scope: !14308)
!14310 = !DILocalVariable(name: "__UNIQUE_ID___y326", scope: !14308, file: !3, line: 1740, type: !14288)
!14311 = !DILocation(line: 1740, column: 18, scope: !14282)
!14312 = !DILocation(line: 1740, column: 6, scope: !14282)
!14313 = !DILocation(line: 1740, column: 12, scope: !14282)
!14314 = !DILocation(line: 1741, column: 17, scope: !14282)
!14315 = !DILocation(line: 1741, column: 22, scope: !14282)
!14316 = !DILocation(line: 1741, column: 52, scope: !14282)
!14317 = !DILocation(line: 1741, column: 2, scope: !14282)
!14318 = !DILocation(line: 1743, column: 10, scope: !14319)
!14319 = distinct !DILexicalBlock(scope: !14282, file: !3, line: 1743, column: 6)
!14320 = !DILocation(line: 1743, column: 6, scope: !14319)
!14321 = !DILocation(line: 1744, column: 10, scope: !14319)
!14322 = !DILocation(line: 1744, column: 6, scope: !14319)
!14323 = !DILocation(line: 1743, column: 46, scope: !14319)
!14324 = !DILocation(line: 1744, column: 47, scope: !14319)
!14325 = !DILocation(line: 1743, column: 6, scope: !14282)
!14326 = !DILocation(line: 1745, column: 11, scope: !14319)
!14327 = !DILocation(line: 1745, column: 3, scope: !14319)
!14328 = !DILocation(line: 1748, column: 10, scope: !14329)
!14329 = distinct !DILexicalBlock(scope: !14282, file: !3, line: 1748, column: 6)
!14330 = !DILocation(line: 1748, column: 6, scope: !14329)
!14331 = !DILocation(line: 1749, column: 10, scope: !14329)
!14332 = !DILocation(line: 1749, column: 6, scope: !14329)
!14333 = !DILocation(line: 1748, column: 47, scope: !14329)
!14334 = !DILocation(line: 1749, column: 46, scope: !14329)
!14335 = !DILocation(line: 1748, column: 6, scope: !14282)
!14336 = !DILocation(line: 1750, column: 11, scope: !14329)
!14337 = !DILocation(line: 1750, column: 3, scope: !14329)
!14338 = !DILocation(line: 1752, column: 10, scope: !14339)
!14339 = distinct !DILexicalBlock(scope: !14282, file: !3, line: 1752, column: 6)
!14340 = !DILocation(line: 1752, column: 6, scope: !14339)
!14341 = !DILocation(line: 1753, column: 10, scope: !14339)
!14342 = !DILocation(line: 1753, column: 6, scope: !14339)
!14343 = !DILocation(line: 1752, column: 38, scope: !14339)
!14344 = !DILocation(line: 1754, column: 10, scope: !14339)
!14345 = !DILocation(line: 1754, column: 6, scope: !14339)
!14346 = !DILocation(line: 1753, column: 39, scope: !14339)
!14347 = !DILocation(line: 1754, column: 38, scope: !14339)
!14348 = !DILocation(line: 1752, column: 6, scope: !14282)
!14349 = !DILocation(line: 1755, column: 11, scope: !14339)
!14350 = !DILocation(line: 1755, column: 3, scope: !14339)
!14351 = !DILocation(line: 1758, column: 2, scope: !14282)
!14352 = !DILocation(line: 1759, column: 14, scope: !14282)
!14353 = !DILocalVariable(name: "__UNIQUE_ID___x327", scope: !14354, file: !3, line: 1759, type: !1001)
!14354 = distinct !DILexicalBlock(scope: !14282, file: !3, line: 1759, column: 20)
!14355 = !DILocation(line: 1759, column: 20, scope: !14354)
!14356 = !DILocalVariable(name: "__UNIQUE_ID___y328", scope: !14354, file: !3, line: 1759, type: !14288)
!14357 = !DILocation(line: 1759, column: 18, scope: !14282)
!14358 = !DILocation(line: 1759, column: 6, scope: !14282)
!14359 = !DILocation(line: 1759, column: 12, scope: !14282)
!14360 = !DILocation(line: 1760, column: 17, scope: !14282)
!14361 = !DILocation(line: 1760, column: 22, scope: !14282)
!14362 = !DILocation(line: 1760, column: 52, scope: !14282)
!14363 = !DILocation(line: 1760, column: 2, scope: !14282)
!14364 = !DILocation(line: 1762, column: 10, scope: !14365)
!14365 = distinct !DILexicalBlock(scope: !14282, file: !3, line: 1762, column: 6)
!14366 = !DILocation(line: 1762, column: 6, scope: !14365)
!14367 = !DILocation(line: 1763, column: 10, scope: !14365)
!14368 = !DILocation(line: 1763, column: 6, scope: !14365)
!14369 = !DILocation(line: 1762, column: 39, scope: !14365)
!14370 = !DILocation(line: 1763, column: 38, scope: !14365)
!14371 = !DILocation(line: 1762, column: 6, scope: !14282)
!14372 = !DILocation(line: 1764, column: 11, scope: !14365)
!14373 = !DILocation(line: 1764, column: 3, scope: !14365)
!14374 = !DILocation(line: 1766, column: 10, scope: !14375)
!14375 = distinct !DILexicalBlock(scope: !14282, file: !3, line: 1766, column: 6)
!14376 = !DILocation(line: 1766, column: 6, scope: !14375)
!14377 = !DILocation(line: 1767, column: 10, scope: !14375)
!14378 = !DILocation(line: 1767, column: 6, scope: !14375)
!14379 = !DILocation(line: 1766, column: 38, scope: !14375)
!14380 = !DILocation(line: 1767, column: 39, scope: !14375)
!14381 = !DILocation(line: 1767, column: 43, scope: !14375)
!14382 = !DILocation(line: 1768, column: 10, scope: !14375)
!14383 = !DILocation(line: 1768, column: 6, scope: !14375)
!14384 = !DILocation(line: 1768, column: 38, scope: !14375)
!14385 = !DILocation(line: 1766, column: 6, scope: !14282)
!14386 = !DILocation(line: 1769, column: 11, scope: !14375)
!14387 = !DILocation(line: 1769, column: 3, scope: !14375)
!14388 = !DILocation(line: 1771, column: 9, scope: !14282)
!14389 = !DILocation(line: 1771, column: 2, scope: !14282)
!14390 = distinct !DISubprogram(name: "get_jiffies_64", scope: !8940, file: !8940, line: 85, type: !14391, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!14391 = !DISubroutineType(types: !14392)
!14392 = !{!1001}
!14393 = !DILocation(line: 87, column: 14, scope: !14390)
!14394 = !DILocation(line: 87, column: 2, scope: !14390)
!14395 = distinct !DISubprogram(name: "speed_down_verdict_cb", scope: !3, file: !3, line: 1659, type: !7250, scopeLine: 1660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!14396 = !DILocalVariable(name: "ent", arg: 1, scope: !14395, file: !3, line: 1659, type: !7252)
!14397 = !DILocation(line: 1659, column: 58, scope: !14395)
!14398 = !DILocalVariable(name: "void_arg", arg: 2, scope: !14395, file: !3, line: 1659, type: !970)
!14399 = !DILocation(line: 1659, column: 69, scope: !14395)
!14400 = !DILocalVariable(name: "arg", scope: !14395, file: !3, line: 1661, type: !14401)
!14401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14296, size: 64)
!14402 = !DILocation(line: 1661, column: 33, scope: !14395)
!14403 = !DILocation(line: 1661, column: 39, scope: !14395)
!14404 = !DILocalVariable(name: "cat", scope: !14395, file: !3, line: 1662, type: !206)
!14405 = !DILocation(line: 1662, column: 6, scope: !14395)
!14406 = !DILocation(line: 1664, column: 7, scope: !14407)
!14407 = distinct !DILexicalBlock(scope: !14395, file: !3, line: 1664, column: 6)
!14408 = !DILocation(line: 1664, column: 12, scope: !14407)
!14409 = !DILocation(line: 1664, column: 19, scope: !14407)
!14410 = !DILocation(line: 1664, column: 39, scope: !14407)
!14411 = !DILocation(line: 1664, column: 43, scope: !14407)
!14412 = !DILocation(line: 1664, column: 48, scope: !14407)
!14413 = !DILocation(line: 1664, column: 60, scope: !14407)
!14414 = !DILocation(line: 1664, column: 65, scope: !14407)
!14415 = !DILocation(line: 1664, column: 58, scope: !14407)
!14416 = !DILocation(line: 1664, column: 6, scope: !14395)
!14417 = !DILocation(line: 1665, column: 3, scope: !14407)
!14418 = !DILocation(line: 1667, column: 32, scope: !14395)
!14419 = !DILocation(line: 1667, column: 37, scope: !14395)
!14420 = !DILocation(line: 1667, column: 45, scope: !14395)
!14421 = !DILocation(line: 1667, column: 50, scope: !14395)
!14422 = !DILocation(line: 1668, column: 12, scope: !14395)
!14423 = !DILocation(line: 1668, column: 17, scope: !14395)
!14424 = !DILocation(line: 1667, column: 8, scope: !14395)
!14425 = !DILocation(line: 1667, column: 6, scope: !14395)
!14426 = !DILocation(line: 1669, column: 2, scope: !14395)
!14427 = !DILocation(line: 1669, column: 7, scope: !14395)
!14428 = !DILocation(line: 1669, column: 17, scope: !14395)
!14429 = !DILocation(line: 1669, column: 21, scope: !14395)
!14430 = !DILocation(line: 1671, column: 2, scope: !14395)
!14431 = !DILocation(line: 1672, column: 1, scope: !14395)
!14432 = distinct !DISubprogram(name: "ata_is_atapi", scope: !178, file: !178, line: 1031, type: !14433, scopeLine: 1032, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!14433 = !DISubroutineType(types: !14434)
!14434 = !{!1333, !2257}
!14435 = !DILocalVariable(name: "prot", arg: 1, scope: !14432, file: !178, line: 1031, type: !2257)
!14436 = !DILocation(line: 1031, column: 36, scope: !14432)
!14437 = !DILocation(line: 1033, column: 9, scope: !14432)
!14438 = !DILocation(line: 1033, column: 14, scope: !14432)
!14439 = !DILocation(line: 1033, column: 2, scope: !14432)
!14440 = distinct !DISubprogram(name: "ata_err_string", scope: !3, file: !3, line: 1329, type: !14441, scopeLine: 1330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!14441 = !DISubroutineType(types: !14442)
!14442 = !{!1008, !7}
!14443 = !DILocalVariable(name: "err_mask", arg: 1, scope: !14440, file: !3, line: 1329, type: !7)
!14444 = !DILocation(line: 1329, column: 48, scope: !14440)
!14445 = !DILocation(line: 1331, column: 6, scope: !14446)
!14446 = distinct !DILexicalBlock(scope: !14440, file: !3, line: 1331, column: 6)
!14447 = !DILocation(line: 1331, column: 15, scope: !14446)
!14448 = !DILocation(line: 1331, column: 6, scope: !14440)
!14449 = !DILocation(line: 1332, column: 3, scope: !14446)
!14450 = !DILocation(line: 1333, column: 6, scope: !14451)
!14451 = distinct !DILexicalBlock(scope: !14440, file: !3, line: 1333, column: 6)
!14452 = !DILocation(line: 1333, column: 15, scope: !14451)
!14453 = !DILocation(line: 1333, column: 6, scope: !14440)
!14454 = !DILocation(line: 1334, column: 3, scope: !14451)
!14455 = !DILocation(line: 1335, column: 6, scope: !14456)
!14456 = distinct !DILexicalBlock(scope: !14440, file: !3, line: 1335, column: 6)
!14457 = !DILocation(line: 1335, column: 15, scope: !14456)
!14458 = !DILocation(line: 1335, column: 6, scope: !14440)
!14459 = !DILocation(line: 1336, column: 3, scope: !14456)
!14460 = !DILocation(line: 1337, column: 6, scope: !14461)
!14461 = distinct !DILexicalBlock(scope: !14440, file: !3, line: 1337, column: 6)
!14462 = !DILocation(line: 1337, column: 15, scope: !14461)
!14463 = !DILocation(line: 1337, column: 6, scope: !14440)
!14464 = !DILocation(line: 1338, column: 3, scope: !14461)
!14465 = !DILocation(line: 1339, column: 6, scope: !14466)
!14466 = distinct !DILexicalBlock(scope: !14440, file: !3, line: 1339, column: 6)
!14467 = !DILocation(line: 1339, column: 15, scope: !14466)
!14468 = !DILocation(line: 1339, column: 6, scope: !14440)
!14469 = !DILocation(line: 1340, column: 3, scope: !14466)
!14470 = !DILocation(line: 1341, column: 6, scope: !14471)
!14471 = distinct !DILexicalBlock(scope: !14440, file: !3, line: 1341, column: 6)
!14472 = !DILocation(line: 1341, column: 15, scope: !14471)
!14473 = !DILocation(line: 1341, column: 6, scope: !14440)
!14474 = !DILocation(line: 1342, column: 3, scope: !14471)
!14475 = !DILocation(line: 1343, column: 6, scope: !14476)
!14476 = distinct !DILexicalBlock(scope: !14440, file: !3, line: 1343, column: 6)
!14477 = !DILocation(line: 1343, column: 15, scope: !14476)
!14478 = !DILocation(line: 1343, column: 6, scope: !14440)
!14479 = !DILocation(line: 1344, column: 3, scope: !14476)
!14480 = !DILocation(line: 1345, column: 6, scope: !14481)
!14481 = distinct !DILexicalBlock(scope: !14440, file: !3, line: 1345, column: 6)
!14482 = !DILocation(line: 1345, column: 15, scope: !14481)
!14483 = !DILocation(line: 1345, column: 6, scope: !14440)
!14484 = !DILocation(line: 1346, column: 3, scope: !14481)
!14485 = !DILocation(line: 1347, column: 6, scope: !14486)
!14486 = distinct !DILexicalBlock(scope: !14440, file: !3, line: 1347, column: 6)
!14487 = !DILocation(line: 1347, column: 15, scope: !14486)
!14488 = !DILocation(line: 1347, column: 6, scope: !14440)
!14489 = !DILocation(line: 1348, column: 3, scope: !14486)
!14490 = !DILocation(line: 1349, column: 6, scope: !14491)
!14491 = distinct !DILexicalBlock(scope: !14440, file: !3, line: 1349, column: 6)
!14492 = !DILocation(line: 1349, column: 15, scope: !14491)
!14493 = !DILocation(line: 1349, column: 6, scope: !14440)
!14494 = !DILocation(line: 1350, column: 3, scope: !14491)
!14495 = !DILocation(line: 1351, column: 2, scope: !14440)
!14496 = !DILocation(line: 1352, column: 1, scope: !14440)
!14497 = distinct !DISubprogram(name: "sata_pmp_supported", scope: !178, file: !178, line: 1427, type: !6743, scopeLine: 1428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!14498 = !DILocalVariable(name: "ap", arg: 1, scope: !14497, file: !178, line: 1427, type: !6375)
!14499 = !DILocation(line: 1427, column: 56, scope: !14497)
!14500 = !DILocation(line: 1429, column: 9, scope: !14497)
!14501 = !DILocation(line: 1429, column: 13, scope: !14497)
!14502 = !DILocation(line: 1429, column: 19, scope: !14497)
!14503 = !DILocation(line: 1429, column: 2, scope: !14497)
!14504 = distinct !DISubprogram(name: "ata_count_probe_trials_cb", scope: !3, file: !3, line: 3399, type: !7250, scopeLine: 3400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!14505 = !DILocation(line: 363, column: 74, scope: !8939, inlinedAt: !14506)
!14506 = distinct !DILocation(line: 3401, column: 17, scope: !14504)
!14507 = !DILocalVariable(name: "ent", arg: 1, scope: !14504, file: !3, line: 3399, type: !7252)
!14508 = !DILocation(line: 3399, column: 62, scope: !14504)
!14509 = !DILocalVariable(name: "void_arg", arg: 2, scope: !14504, file: !3, line: 3399, type: !970)
!14510 = !DILocation(line: 3399, column: 73, scope: !14504)
!14511 = !DILocalVariable(name: "interval", scope: !14504, file: !3, line: 3401, type: !1001)
!14512 = !DILocation(line: 3401, column: 6, scope: !14504)
!14513 = !DILocation(line: 365, column: 27, scope: !8952, inlinedAt: !14506)
!14514 = !DILocation(line: 365, column: 6, scope: !8952, inlinedAt: !14506)
!14515 = !DILocation(line: 365, column: 6, scope: !8939, inlinedAt: !14506)
!14516 = !DILocation(line: 366, column: 12, scope: !8956, inlinedAt: !14506)
!14517 = !DILocation(line: 366, column: 14, scope: !8956, inlinedAt: !14506)
!14518 = !DILocation(line: 366, column: 7, scope: !8957, inlinedAt: !14506)
!14519 = !DILocation(line: 367, column: 4, scope: !8956, inlinedAt: !14506)
!14520 = !DILocation(line: 368, column: 28, scope: !8957, inlinedAt: !14506)
!14521 = !DILocation(line: 368, column: 10, scope: !8957, inlinedAt: !14506)
!14522 = !DILocation(line: 368, column: 3, scope: !8957, inlinedAt: !14506)
!14523 = !DILocation(line: 370, column: 29, scope: !8965, inlinedAt: !14506)
!14524 = !DILocation(line: 370, column: 10, scope: !8965, inlinedAt: !14506)
!14525 = !DILocation(line: 370, column: 3, scope: !8965, inlinedAt: !14506)
!14526 = !DILocation(line: 372, column: 1, scope: !8939, inlinedAt: !14506)
!14527 = !DILocalVariable(name: "now", scope: !14504, file: !3, line: 3402, type: !1001)
!14528 = !DILocation(line: 3402, column: 6, scope: !14504)
!14529 = !DILocation(line: 3402, column: 12, scope: !14504)
!14530 = !DILocalVariable(name: "trials", scope: !14504, file: !3, line: 3403, type: !1550)
!14531 = !DILocation(line: 3403, column: 7, scope: !14504)
!14532 = !DILocation(line: 3403, column: 16, scope: !14504)
!14533 = !DILocation(line: 3405, column: 7, scope: !14534)
!14534 = distinct !DILexicalBlock(scope: !14504, file: !3, line: 3405, column: 6)
!14535 = !DILocation(line: 3405, column: 12, scope: !14534)
!14536 = !DILocation(line: 3405, column: 19, scope: !14534)
!14537 = !DILocation(line: 3405, column: 39, scope: !14534)
!14538 = !DILocation(line: 3406, column: 7, scope: !14534)
!14539 = !DILocation(line: 3406, column: 12, scope: !14534)
!14540 = !DILocation(line: 3406, column: 24, scope: !14534)
!14541 = !DILocalVariable(name: "__UNIQUE_ID___x333", scope: !14542, file: !3, line: 3406, type: !1001)
!14542 = distinct !DILexicalBlock(scope: !14534, file: !3, line: 3406, column: 30)
!14543 = !DILocation(line: 3406, column: 30, scope: !14542)
!14544 = !DILocalVariable(name: "__UNIQUE_ID___y334", scope: !14542, file: !3, line: 3406, type: !1001)
!14545 = !DILocation(line: 3406, column: 28, scope: !14534)
!14546 = !DILocation(line: 3406, column: 22, scope: !14534)
!14547 = !DILocation(line: 3405, column: 6, scope: !14504)
!14548 = !DILocation(line: 3407, column: 3, scope: !14534)
!14549 = !DILocation(line: 3409, column: 4, scope: !14504)
!14550 = !DILocation(line: 3409, column: 11, scope: !14504)
!14551 = !DILocation(line: 3410, column: 2, scope: !14504)
!14552 = !DILocation(line: 3411, column: 1, scope: !14504)
!14553 = distinct !DISubprogram(name: "reinit_completion", scope: !2406, file: !2406, line: 98, type: !14554, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!14554 = !DISubroutineType(types: !14555)
!14555 = !{null, !2404}
!14556 = !DILocalVariable(name: "x", arg: 1, scope: !14553, file: !2406, line: 98, type: !2404)
!14557 = !DILocation(line: 98, column: 57, scope: !14553)
!14558 = !DILocation(line: 100, column: 2, scope: !14553)
!14559 = !DILocation(line: 100, column: 5, scope: !14553)
!14560 = !DILocation(line: 100, column: 10, scope: !14553)
!14561 = !DILocation(line: 101, column: 1, scope: !14553)
!14562 = distinct !DISubprogram(name: "ata_eh_dev_action", scope: !3, file: !3, line: 417, type: !14283, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!14563 = !DILocalVariable(name: "dev", arg: 1, scope: !14562, file: !3, line: 417, type: !6392)
!14564 = !DILocation(line: 417, column: 58, scope: !14562)
!14565 = !DILocalVariable(name: "ehc", scope: !14562, file: !3, line: 419, type: !7127)
!14566 = !DILocation(line: 419, column: 25, scope: !14562)
!14567 = !DILocation(line: 419, column: 32, scope: !14562)
!14568 = !DILocation(line: 419, column: 37, scope: !14562)
!14569 = !DILocation(line: 419, column: 43, scope: !14562)
!14570 = !DILocation(line: 421, column: 9, scope: !14562)
!14571 = !DILocation(line: 421, column: 14, scope: !14562)
!14572 = !DILocation(line: 421, column: 16, scope: !14562)
!14573 = !DILocation(line: 421, column: 25, scope: !14562)
!14574 = !DILocation(line: 421, column: 30, scope: !14562)
!14575 = !DILocation(line: 421, column: 32, scope: !14562)
!14576 = !DILocation(line: 421, column: 43, scope: !14562)
!14577 = !DILocation(line: 421, column: 48, scope: !14562)
!14578 = !DILocation(line: 421, column: 23, scope: !14562)
!14579 = !DILocation(line: 421, column: 2, scope: !14562)
!14580 = distinct !DISubprogram(name: "schedule_work", scope: !932, file: !932, line: 566, type: !14581, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!14581 = !DISubroutineType(types: !14582)
!14582 = !{!1333, !2906}
!14583 = !DILocalVariable(name: "work", arg: 1, scope: !14580, file: !932, line: 566, type: !2906)
!14584 = !DILocation(line: 566, column: 54, scope: !14580)
!14585 = !DILocation(line: 568, column: 20, scope: !14580)
!14586 = !DILocation(line: 568, column: 31, scope: !14580)
!14587 = !DILocation(line: 568, column: 9, scope: !14580)
!14588 = !DILocation(line: 568, column: 2, scope: !14580)
!14589 = distinct !DISubprogram(name: "queue_work", scope: !932, file: !932, line: 504, type: !14590, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!14590 = !DISubroutineType(types: !14591)
!14591 = !{!1333, !2909, !2906}
!14592 = !DILocalVariable(name: "wq", arg: 1, scope: !14589, file: !932, line: 504, type: !2909)
!14593 = !DILocation(line: 504, column: 56, scope: !14589)
!14594 = !DILocalVariable(name: "work", arg: 2, scope: !14589, file: !932, line: 505, type: !2906)
!14595 = !DILocation(line: 505, column: 30, scope: !14589)
!14596 = !DILocation(line: 507, column: 41, scope: !14589)
!14597 = !DILocation(line: 507, column: 45, scope: !14589)
!14598 = !DILocation(line: 507, column: 9, scope: !14589)
!14599 = !DILocation(line: 507, column: 2, scope: !14589)
!14600 = distinct !DISubprogram(name: "ata_id_has_hipm", scope: !500, file: !500, line: 584, type: !14154, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!14601 = !DILocalVariable(name: "id", arg: 1, scope: !14600, file: !500, line: 584, type: !14156)
!14602 = !DILocation(line: 584, column: 47, scope: !14600)
!14603 = !DILocalVariable(name: "val", scope: !14600, file: !500, line: 586, type: !1754)
!14604 = !DILocation(line: 586, column: 6, scope: !14600)
!14605 = !DILocation(line: 586, column: 12, scope: !14600)
!14606 = !DILocation(line: 588, column: 6, scope: !14607)
!14607 = distinct !DILexicalBlock(scope: !14600, file: !500, line: 588, column: 6)
!14608 = !DILocation(line: 588, column: 10, scope: !14607)
!14609 = !DILocation(line: 588, column: 15, scope: !14607)
!14610 = !DILocation(line: 588, column: 18, scope: !14607)
!14611 = !DILocation(line: 588, column: 22, scope: !14607)
!14612 = !DILocation(line: 588, column: 6, scope: !14600)
!14613 = !DILocation(line: 589, column: 3, scope: !14607)
!14614 = !DILocation(line: 591, column: 9, scope: !14600)
!14615 = !DILocation(line: 591, column: 13, scope: !14600)
!14616 = !DILocation(line: 591, column: 2, scope: !14600)
!14617 = !DILocation(line: 592, column: 1, scope: !14600)
!14618 = distinct !DISubprogram(name: "ata_id_has_dipm", scope: !500, file: !500, line: 594, type: !14154, scopeLine: 595, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!14619 = !DILocalVariable(name: "id", arg: 1, scope: !14618, file: !500, line: 594, type: !14156)
!14620 = !DILocation(line: 594, column: 47, scope: !14618)
!14621 = !DILocalVariable(name: "val", scope: !14618, file: !500, line: 596, type: !1754)
!14622 = !DILocation(line: 596, column: 6, scope: !14618)
!14623 = !DILocation(line: 596, column: 12, scope: !14618)
!14624 = !DILocation(line: 598, column: 6, scope: !14625)
!14625 = distinct !DILexicalBlock(scope: !14618, file: !500, line: 598, column: 6)
!14626 = !DILocation(line: 598, column: 10, scope: !14625)
!14627 = !DILocation(line: 598, column: 15, scope: !14625)
!14628 = !DILocation(line: 598, column: 18, scope: !14625)
!14629 = !DILocation(line: 598, column: 22, scope: !14625)
!14630 = !DILocation(line: 598, column: 6, scope: !14618)
!14631 = !DILocation(line: 599, column: 3, scope: !14625)
!14632 = !DILocation(line: 601, column: 9, scope: !14618)
!14633 = !DILocation(line: 601, column: 13, scope: !14618)
!14634 = !DILocation(line: 601, column: 2, scope: !14618)
!14635 = !DILocation(line: 602, column: 1, scope: !14618)
!14636 = distinct !DISubprogram(name: "zpodd_on_suspend", scope: !490, file: !490, line: 251, type: !6636, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1101)
!14637 = !DILocalVariable(name: "dev", arg: 1, scope: !14636, file: !490, line: 251, type: !6392)
!14638 = !DILocation(line: 251, column: 56, scope: !14636)
!14639 = !DILocation(line: 251, column: 62, scope: !14636)
