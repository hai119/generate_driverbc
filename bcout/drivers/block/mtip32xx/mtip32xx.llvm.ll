; ModuleID = '../bcout/drivers/block/mtip32xx/mtip32xx.llvm.bc'
source_filename = "drivers/block/mtip32xx/mtip32xx.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_mtip_init6:\09\09\09"
module asm ".long\09mtip_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.73, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.proc_dir_entry = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.72, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.72 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.70, %struct.list_head, %struct.list_head, %union.anon.71 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.68 }
%union.anon.68 = type { %struct.anon.69 }
%struct.anon.69 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type { i64, i64, i64, i64, i32, i8 }
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.2, %union.anon.60, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.60 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.61, i32 }
%union.anon.61 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.block_device_operations = type { i32 (%struct.bio*)*, i32 (%struct.block_device*, i32)*, void (%struct.gendisk*, i32)*, i32 (%struct.block_device*, i64, %struct.page*, i32)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.gendisk*, i32)*, void (%struct.gendisk*)*, i32 (%struct.gendisk*)*, i32 (%struct.block_device*, %struct.hd_geometry*)*, void (%struct.block_device*, i64)*, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)*, i8* (%struct.gendisk*, i16*)*, %struct.module*, %struct.pr_ops* }
%struct.bio = type { %struct.bio*, %struct.gendisk*, i32, i16, i16, i16, i8, i8, %struct.atomic_t, %struct.bvec_iter, void (%struct.bio*)*, i8*, %union.anon.38, i16, i16, %struct.atomic_t, %struct.bio_vec*, %struct.bio_set*, [0 x %struct.bio_vec] }
%struct.bvec_iter = type { i64, i32, i32, i32 }
%union.anon.38 = type { %struct.bio_integrity_payload* }
%struct.bio_integrity_payload = type { %struct.bio*, %struct.bvec_iter, i16, i16, i16, i16, %struct.bvec_iter, %struct.work_struct, %struct.bio_vec*, [0 x %struct.bio_vec] }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.bio_set = type { %struct.kmem_cache*, i32, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.spinlock, %struct.bio_list, %struct.work_struct, %struct.workqueue_struct* }
%struct.kmem_cache = type opaque
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.bio_list = type { %struct.bio*, %struct.bio* }
%struct.hd_geometry = type { i8, i8, i16, i64 }
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.pr_ops = type opaque
%struct.request_queue = type { %struct.request*, %struct.elevator_queue*, %struct.percpu_ref, %struct.blk_queue_stats*, %struct.rq_qos*, %struct.blk_mq_ops*, %struct.blk_mq_ctx*, i32, %struct.blk_mq_hw_ctx**, i32, %struct.backing_dev_info*, i8*, i64, %struct.atomic_t, i32, i32, %struct.spinlock, %struct.kobject, %struct.kobject*, %struct.blk_integrity, %struct.device*, i32, i32, i64, i32, i32, i32, i32, %struct.blk_stat_callback*, [16 x %struct.blk_rq_stat], %struct.timer_list, %struct.work_struct, %struct.atomic_t, %struct.list_head, %struct.queue_limits, i32, i32, i32, i32, %struct.mutex, %struct.blk_flush_queue*, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.bsg_class_device, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, %struct.blk_mq_tag_set*, %struct.list_head, %struct.bio_set, %struct.dentry*, i8, i64, [5 x i64] }
%struct.request = type { %struct.request_queue*, %struct.blk_mq_ctx*, %struct.blk_mq_hw_ctx*, i32, i32, i32, i32, i32, i64, %struct.bio*, %struct.bio*, %struct.list_head, %union.anon.75, %union.anon.76, %union.anon.77, %struct.gendisk*, %struct.hd_struct*, i64, i64, i16, i16, i16, i16, i16, i32, %struct.refcount_struct, i32, i64, %union.anon.80, void (%struct.request*, i8)*, i8* }
%struct.blk_mq_hw_ctx = type { %struct.anon.74, %struct.delayed_work, [1 x %struct.cpumask], i32, i32, i64, i8*, %struct.request_queue*, %struct.blk_flush_queue*, i8*, %struct.sbitmap, %struct.blk_mq_ctx*, i32, i16, i16, %struct.blk_mq_ctx**, %struct.spinlock, %struct.wait_queue_entry, %struct.atomic_t, %struct.blk_mq_tags*, %struct.blk_mq_tags*, i64, i64, [7 x i64], i32, i32, %struct.atomic_t, %struct.atomic_t, %struct.hlist_node, %struct.hlist_node, %struct.kobject, i64, i64, i64, %struct.list_head, [0 x %struct.srcu_struct] }
%struct.anon.74 = type { %struct.spinlock, %struct.list_head, i64 }
%struct.cpumask = type { [1 x i64] }
%struct.sbitmap = type { i32, i32, i32, %struct.sbitmap_word* }
%struct.sbitmap_word = type { i64, i64, i64, %struct.spinlock }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.blk_mq_tags = type opaque
%struct.srcu_struct = type { [2 x i16], i16, i8, i8, %struct.swait_queue_head, %struct.callback_head*, %struct.callback_head**, %struct.work_struct }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%union.anon.75 = type { %struct.hlist_node }
%union.anon.76 = type { %struct.rb_node }
%union.anon.77 = type { %struct.anon.79 }
%struct.anon.79 = type { i32, %struct.list_head, void (%struct.request*, i8)* }
%struct.refcount_struct = type { %struct.atomic_t }
%union.anon.80 = type { %struct.__call_single_data }
%struct.__call_single_data = type { %union.anon.81, void (i8*)*, i8* }
%union.anon.81 = type { %struct.__call_single_node }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.82, i16, i16 }
%struct.llist_node = type { %struct.llist_node* }
%union.anon.82 = type { i32 }
%struct.elevator_queue = type { %struct.elevator_type*, i8*, %struct.kobject, %struct.mutex, i8, [64 x %struct.hlist_head] }
%struct.elevator_type = type { %struct.kmem_cache*, %struct.elevator_mq_ops, i64, i64, %struct.elv_fs_entry*, i8*, i8*, i32, %struct.module*, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { i32 (%struct.request_queue*, %struct.elevator_type*)*, void (%struct.elevator_queue*)*, i32 (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*, %struct.request*, %struct.bio*)*, i1 (%struct.blk_mq_hw_ctx*, %struct.bio*, i32)*, i32 (%struct.request_queue*, %struct.request**, %struct.bio*)*, void (%struct.request_queue*, %struct.request*, i32)*, void (%struct.request_queue*, %struct.request*, %struct.request*)*, void (i32, %struct.blk_mq_alloc_data*)*, void (%struct.request*)*, void (%struct.request*)*, void (%struct.blk_mq_hw_ctx*, %struct.list_head*, i1)*, %struct.request* (%struct.blk_mq_hw_ctx*)*, i1 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*, i64)*, void (%struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, void (%struct.io_cq*)*, void (%struct.io_cq*)* }
%struct.blk_mq_alloc_data = type opaque
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.39, %union.anon.40, i32 }
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%union.anon.39 = type { %struct.list_head }
%union.anon.40 = type { %struct.hlist_node }
%struct.elv_fs_entry = type { %struct.attribute, i64 (%struct.elevator_queue*, i8*)*, i64 (%struct.elevator_queue*, i8*, i64)* }
%struct.blk_queue_stats = type opaque
%struct.rq_qos = type opaque
%struct.blk_mq_ops = type { i8 (%struct.blk_mq_hw_ctx*, %struct.blk_mq_queue_data*)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*)*, void (%struct.request_queue*)*, i32 (%struct.request*, i1)*, i32 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*)*, i32 (%struct.blk_mq_hw_ctx*, i8*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, i32 (%struct.blk_mq_tag_set*, %struct.request*, i32, i32)*, void (%struct.blk_mq_tag_set*, %struct.request*, i32)*, void (%struct.request*)*, void (%struct.request*)*, i1 (%struct.request_queue*)*, i32 (%struct.blk_mq_tag_set*)* }
%struct.blk_mq_queue_data = type { %struct.request*, i8 }
%struct.blk_mq_ctx = type opaque
%struct.blk_integrity = type { %struct.blk_integrity_profile*, i8, i8, i8, i8 }
%struct.blk_integrity_profile = type { i8 (%struct.blk_integrity_iter*)*, i8 (%struct.blk_integrity_iter*)*, void (%struct.request*)*, void (%struct.request*, i32)*, i8* }
%struct.blk_integrity_iter = type { i8*, i8*, i64, i32, i16, i8* }
%struct.blk_stat_callback = type opaque
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.queue_limits = type { i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.blk_flush_queue = type opaque
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.bsg_class_device = type { %struct.device*, i32, %struct.request_queue*, %struct.bsg_ops* }
%struct.bsg_ops = type { i32 (%struct.sg_io_v4*)*, i32 (%struct.request*, %struct.sg_io_v4*, i32)*, i32 (%struct.request*, %struct.sg_io_v4*)*, void (%struct.request*)* }
%struct.sg_io_v4 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.blk_mq_tag_set = type { [3 x %struct.blk_mq_queue_map], i32, %struct.blk_mq_ops*, i32, i32, i32, i32, i32, i32, i32, i8*, %struct.atomic_t, %struct.sbitmap_queue, %struct.sbitmap_queue, %struct.blk_mq_tags**, %struct.mutex, %struct.list_head }
%struct.blk_mq_queue_map = type { i32*, i32, i32 }
%struct.sbitmap_queue = type { %struct.sbitmap, i32*, i32, %struct.atomic_t, %struct.sbq_wait_state*, %struct.atomic_t, i8, i32 }
%struct.sbq_wait_state = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.timer_rand_state = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.lockdep_map = type {}
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i64, i64, %struct.kref, i32, i32, i32, i32, %struct.atomic64_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, %struct.device*, [64 x i8], %struct.device*, %struct.timer_list }
%struct.bdi_writeback = type { %struct.backing_dev_info*, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, [4 x %struct.percpu_counter], i64, i64, i64, i64, i64, i64, i64, i64, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, i64, %struct.list_head }
%struct.percpu_counter = type { i64 }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.53, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.18, [0 x i64] }
%struct.anon.18 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.19, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.19 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.20 }
%union.anon.20 = type { %struct.anon.21 }
%struct.anon.21 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.25, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.26, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.27, %union.anon.31, %struct.key_restriction* }
%union.anon.25 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.26 = type { i64 }
%union.anon.27 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.28, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.28 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.31 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.blk_plug = type { %struct.list_head, %struct.list_head, i16, i8, i8 }
%struct.reclaim_state = type { i64 }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.41 }
%struct.anon.41 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.45 }
%struct.anon.45 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.52, i32, [12 x i8] }
%union.anon.52 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.53 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.54, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.57 }
%union.anon.54 = type { %struct.anon.55 }
%struct.anon.55 = type { i64, i64 }
%union.anon.57 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.33 }
%union.anon.33 = type { %struct.anon.34, [48 x i8] }
%struct.anon.34 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.35, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.35 = type { %struct.anon.36 }
%struct.anon.36 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.70 = type { %struct.list_head }
%union.anon.71 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.62, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.63, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.64, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.67, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.62 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.63 = type { %struct.callback_head }
%union.anon.64 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.iov_iter = type { i32, i64, i64, %union.anon.5, %union.anon.6 }
%union.anon.5 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.6 = type { i64 }
%struct.swap_info_struct = type { i64, i16, %struct.plist_node, i8, i32, i8*, %struct.swap_cluster_info*, %struct.swap_cluster_list, i32, i32, i32, i32, i32, i32, i32*, %struct.percpu_cluster*, %struct.rb_root, %struct.block_device*, %struct.file*, i32, %struct.spinlock, %struct.spinlock, %struct.work_struct, %struct.swap_cluster_list, [0 x %struct.plist_node] }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.swap_cluster_info = type { %struct.spinlock, i32 }
%struct.percpu_cluster = type { %struct.swap_cluster_info, i32 }
%struct.swap_cluster_list = type { %struct.swap_cluster_info, %struct.swap_cluster_info }
%union.anon.67 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.65 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.65 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.37 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.37 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_dma_parameters = type { i32, i64 }
%struct.pcie_link_state = type opaque
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type opaque
%struct.irq_domain_chip_generic = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.atomic_t = type { i32 }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.pci_vpd = type opaque
%union.anon.73 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.module_version_attribute = type { %struct.module_attribute, i8*, i8* }
%struct.module_attribute = type { %struct.attribute, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*)*, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*, i64)*, void (%struct.module*, i8*)*, i32 (%struct.module*)*, void (%struct.module*)* }
%struct.module_kobject = type { %struct.kobject, %struct.module*, %struct.kobject*, %struct.module_param_attrs*, %struct.completion* }
%struct.module_param_attrs = type opaque
%struct.cpuinfo_x86 = type { i8, i8, i8, i8, i32, [3 x i32], i8, i8, i8, i8, i32, i32, %union.anon.84, [16 x i8], [64 x i8], i32, i32, i32, i32, i32, i32, i64, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i8, i8 }
%union.anon.84 = type { i64, [72 x i8] }
%struct.ida = type { %struct.xarray }
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.driver_data = type { i8*, i32, i32, %struct.gendisk*, %struct.pci_dev*, %struct.request_queue*, %struct.blk_mq_tag_set, %struct.mtip_port*, i32, i32, i64, i64, %struct.task_struct*, %struct.dentry*, i8, i32, [32 x i8], %struct.workqueue_struct*, %struct.atomic_t, [8 x %struct.mtip_work], i32, %struct.block_device*, %struct.list_head, %struct.list_head, i32 }
%struct.mtip_port = type { %struct.driver_data*, i64, i8*, [8 x i8*], [8 x i8*], [8 x i8*], i8*, i64, i8*, i64, i8*, i64, i16*, i64, i16*, i64, i16*, i64, i8*, i64, [4 x i64], %struct.wait_queue_head, i64, i64, %struct.atomic_t, [8 x %struct.spinlock] }
%struct.mtip_work = type { %struct.work_struct, i8*, i32, i32 }
%struct.mtip_cmd = type { i8*, i64, i32, i32, %union.anon.85, i32, i32, i8 }
%union.anon.85 = type { [504 x %struct.scatterlist] }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.smart_attr = type <{ i8, i16, i8, i8, i32, [3 x i8] }>
%struct.ide_task_request_s = type { [8 x i8], [8 x i8], %union.ide_reg_valid_s, %union.ide_reg_valid_s, i32, i32, i64, i64 }
%union.ide_reg_valid_s = type { %struct.anon.86 }
%struct.anon.86 = type { i16, [2 x i8] }
%struct.host_to_dev_fis = type { i8, i8, i8, i8, %union.anon.87, %union.anon.88, %union.anon.89, %union.anon.90, %union.anon.91, %union.anon.92, %union.anon.93, i8, i8, i8, i8, i8, i32 }
%union.anon.87 = type { i8 }
%union.anon.88 = type { i8 }
%union.anon.89 = type { i8 }
%union.anon.90 = type { i8 }
%union.anon.91 = type { i8 }
%union.anon.92 = type { i8 }
%union.anon.93 = type { i8 }
%struct.mtip_int_cmd = type { i32, i64, i32, i32 }
%struct.mtip_cmd_hdr = type { i32, %union.anon.94, i32, i32, [4 x i32] }
%union.anon.94 = type { i32 }
%struct.mtip_cmd_sg = type { i32, i32, i32, i32 }

@mtip_major = internal global i32 0, align 4, !dbg !0
@.str = private unnamed_addr constant [9 x i8] c"mtip32xx\00", align 1
@mtip_pci_driver = internal global %struct.pci_driver { %struct.list_head zeroinitializer, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), %struct.pci_device_id* getelementptr inbounds ([8 x %struct.pci_device_id], [8 x %struct.pci_device_id]* @mtip_pci_tbl, i32 0, i32 0), i32 (%struct.pci_dev*, %struct.pci_device_id*)* @mtip_pci_probe, void (%struct.pci_dev*)* @mtip_pci_remove, i32 (%struct.pci_dev*, i32)* @mtip_pci_suspend, i32 (%struct.pci_dev*)* @mtip_pci_resume, void (%struct.pci_dev*)* @mtip_pci_shutdown, i32 (%struct.pci_dev*, i32)* null, %struct.pci_error_handlers* null, %struct.attribute_group** null, %struct.device_driver zeroinitializer, %struct.pci_dynids zeroinitializer }, align 8, !dbg !6369
@dfs_parent = internal global %struct.dentry* null, align 8, !dbg !6367
@__UNIQUE_ID_author317 = internal constant [39 x i8] c"mtip32xx.author=Micron Technology, Inc\00", section ".modinfo", align 1, !dbg !6290
@__UNIQUE_ID_description318 = internal constant [54 x i8] c"mtip32xx.description=Micron RealSSD PCIe Block Driver\00", section ".modinfo", align 1, !dbg !6295
@__UNIQUE_ID_file319 = internal constant [46 x i8] c"mtip32xx.file=drivers/block/mtip32xx/mtip32xx\00", section ".modinfo", align 1, !dbg !6300
@__UNIQUE_ID_license320 = internal constant [21 x i8] c"mtip32xx.license=GPL\00", section ".modinfo", align 1, !dbg !6305
@__UNIQUE_ID_version321 = internal constant [23 x i8] c"mtip32xx.version=1.3.1\00", section ".modinfo", align 1, !dbg !6310
@___modver_attr = internal global %struct.module_version_attribute { %struct.module_attribute { %struct.attribute { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.132, i32 0, i32 0), i16 292 }, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*)* @__modver_version_show, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*, i64)* null, void (%struct.module*, i8*)* null, i32 (%struct.module*)* null, void (%struct.module*)* null }, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.133, i32 0, i32 0) }, align 8, !dbg !6431
@__modver_attr = internal constant %struct.module_version_attribute* @___modver_attr, section "__modver", align 8, !dbg !6315
@__UNIQUE_ID___addressable_mtip_init322 = internal global i8* bitcast (i32 ()* @mtip_init to i8*), section ".discard.addressable", align 8, !dbg !6360
@__exitcall_mtip_exit = internal global void ()* @mtip_exit, section ".exitcall.exit", align 8, !dbg !6362
@mtip_pci_tbl = internal constant [8 x %struct.pci_device_id] [%struct.pci_device_id { i32 4932, i32 20816, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4932, i32 20817, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4932, i32 20818, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4932, i32 20819, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4932, i32 20832, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4932, i32 20833, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4932, i32 20835, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id zeroinitializer], align 16, !dbg !6371
@.str.1 = private unnamed_addr constant [49 x i8] c"Kernel not reporting proximity, choosing a node\0A\00", align 1
@.str.2 = private unnamed_addr constant [47 x i8] c"NUMA node %d (closest: %d,%d, probe on %d:%d)\0A\00", align 1
@.str.3 = private unnamed_addr constant [43 x i8] c"Unable to allocate memory for driver data\0A\00", align 1
@.str.4 = private unnamed_addr constant [25 x i8] c"Unable to enable device\0A\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"Unable to map regions\0A\00", align 1
@.str.6 = private unnamed_addr constant [26 x i8] c"64-bit DMA enable failed\0A\00", align 1
@instance = internal global i32 0, align 4, !dbg !6379
@.str.7 = private unnamed_addr constant [8 x i8] c"mtipq%d\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.9 = private unnamed_addr constant [20 x i8] c"Can't create wq %d\0A\00", align 1
@__cpu_online_mask = external dso_local global %struct.cpumask, align 8
@.str.10 = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@.str.11 = private unnamed_addr constant [41 x i8] c"Node %d on package %d has %d cpu(s): %s\0A\00", align 1
@boot_cpu_data = external dso_local global %struct.cpuinfo_x86, align 8
@.str.12 = private unnamed_addr constant [36 x i8] c"Initial IRQ binding node:cpu %d:%d\0A\00", align 1
@.str.13 = private unnamed_addr constant [16 x i8] c"CPU %d: WQs %s\0A\00", align 1
@__cpu_present_mask = external dso_local global %struct.cpumask, align 8
@.str.14 = private unnamed_addr constant [33 x i8] c"Unable to enable MSI interrupt.\0A\00", align 1
@.str.15 = private unnamed_addr constant [34 x i8] c"Unable to initialize block layer\0A\00", align 1
@dev_lock = internal global %struct.spinlock zeroinitializer, align 1, !dbg !6425
@online_list = internal global %struct.list_head zeroinitializer, align 8, !dbg !6427
@mtip_get_next_rr_node.next_node = internal global i32 -1, align 4, !dbg !6374
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.16 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@cpu_use = internal global [1 x i32] zeroinitializer, align 4, !dbg !6381
@.str.17 = private unnamed_addr constant [34 x i8] c"drivers/block/mtip32xx/mtip32xx.c\00", align 1
@.str.18 = private unnamed_addr constant [51 x i8] c"Disabling ERO/No-Snoop on bridge device %04x:%04x\0A\00", align 1
@mtip_block_initialize.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !6384
@.str.19 = private unnamed_addr constant [51 x i8] c"(gendisk_completion)MTIP_MAX_MINORS(dd->numa_node)\00", align 1
@.str.20 = private unnamed_addr constant [38 x i8] c"Unable to allocate gendisk structure\0A\00", align 1
@rssd_index_ida = internal global %struct.ida { %struct.xarray { %struct.spinlock undef, i32 8388613, i8* null } }, align 8, !dbg !6392
@.str.21 = private unnamed_addr constant [5 x i8] c"rssd\00", align 1
@mtip_block_ops = internal constant %struct.block_device_operations { i32 (%struct.bio*)* null, i32 (%struct.block_device*, i32)* @mtip_block_open, void (%struct.gendisk*, i32)* @mtip_block_release, i32 (%struct.block_device*, i64, %struct.page*, i32)* null, i32 (%struct.block_device*, i32, i32, i64)* @mtip_block_ioctl, i32 (%struct.block_device*, i32, i32, i64)* null, i32 (%struct.gendisk*, i32)* null, void (%struct.gendisk*)* null, i32 (%struct.gendisk*)* null, i32 (%struct.block_device*, %struct.hd_geometry*)* @mtip_block_getgeo, void (%struct.block_device*, i64)* null, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)* null, i8* (%struct.gendisk*, i16*)* null, %struct.module* null, %struct.pr_ops* null }, align 8, !dbg !6397
@mtip_mq_ops = internal constant %struct.blk_mq_ops { i8 (%struct.blk_mq_hw_ctx*, %struct.blk_mq_queue_data*)* @mtip_queue_rq, void (%struct.blk_mq_hw_ctx*)* null, i1 (%struct.request_queue*)* null, void (%struct.request_queue*)* null, i32 (%struct.request*, i1)* @mtip_cmd_timeout, i32 (%struct.blk_mq_hw_ctx*)* null, void (%struct.request*)* @mtip_softirq_done_fn, i32 (%struct.blk_mq_hw_ctx*, i8*, i32)* null, void (%struct.blk_mq_hw_ctx*, i32)* null, i32 (%struct.blk_mq_tag_set*, %struct.request*, i32, i32)* @mtip_init_cmd, void (%struct.blk_mq_tag_set*, %struct.request*, i32)* @mtip_free_cmd, void (%struct.request*)* null, void (%struct.request*)* null, i1 (%struct.request_queue*)* null, i32 (%struct.blk_mq_tag_set*)* null }, align 8, !dbg !6409
@.str.22 = private unnamed_addr constant [34 x i8] c"Unable to allocate request queue\0A\00", align 1
@.str.23 = private unnamed_addr constant [38 x i8] c"Protocol layer initialization failed\0A\00", align 1
@.str.24 = private unnamed_addr constant [31 x i8] c"Could not read drive capacity\0A\00", align 1
@.str.25 = private unnamed_addr constant [18 x i8] c"mtip_svc_thd_%02d\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"service thread failed to start\0A\00", align 1
@.str.27 = private unnamed_addr constant [35 x i8] c"Memory allocation: port structure\0A\00", align 1
@jiffies = external dso_local global i64, align 8
@.str.28 = private unnamed_addr constant [36 x i8] c"Surprise removal detected at %u ms\0A\00", align 1
@.str.29 = private unnamed_addr constant [27 x i8] c"Removal detected at %u ms\0A\00", align 1
@.str.30 = private unnamed_addr constant [35 x i8] c"Card did not reset within timeout\0A\00", align 1
@.str.31 = private unnamed_addr constant [27 x i8] c"Unable to allocate IRQ %d\0A\00", align 1
@mtip_hw_init.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !6389
@.str.32 = private unnamed_addr constant [20 x i8] c"&dd->port->svc_wait\00", align 1
@.str.33 = private unnamed_addr constant [58 x i8] c"ASIC-FPGA design, HS rev 0x%x, %i slot groups [%i slots]\0A\00", align 1
@.str.34 = private unnamed_addr constant [47 x i8] c"Warning: driver only supports %i slot groups.\0A\00", align 1
@.str.35 = private unnamed_addr constant [25 x i8] c"Unrecognized product id\0A\00", align 1
@.str.36 = private unnamed_addr constant [23 x i8] c"%s: dd->queue is NULL\0A\00", align 1
@__func__.mtip_check_surprise_removal = private unnamed_addr constant [28 x i8] c"mtip_check_surprise_removal\00", align 1
@.str.37 = private unnamed_addr constant [24 x i8] c"Clearing PxSERR.DIAG.x\0A\00", align 1
@.str.38 = private unnamed_addr constant [24 x i8] c"Clearing PxSERR.DIAG.n\0A\00", align 1
@.str.39 = private unnamed_addr constant [31 x i8] c"Port stat errors %x unhandled\0A\00", align 1
@cpu_bit_bitmap = external dso_local constant [65 x [1 x i64]], align 16
@.str.40 = private unnamed_addr constant [28 x i8] c"include/linux/thread_info.h\00", align 1
@.str.41 = private unnamed_addr constant [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", align 1
@.str.42 = private unnamed_addr constant [37 x i8] c"Memory allocation failed (%d bytes)\0A\00", align 1
@.str.43 = private unnamed_addr constant [33 x i8] c"SG buffer is not 8 byte aligned\0A\00", align 1
@.str.44 = private unnamed_addr constant [22 x i8] c"Failed to quiesce IO\0A\00", align 1
@.str.45 = private unnamed_addr constant [35 x i8] c"Internal command [%02X] failed %d\0A\00", align 1
@.str.46 = private unnamed_addr constant [49 x i8] c"Internal command [%02X] wait returned due to SR\0A\00", align 1
@.str.47 = private unnamed_addr constant [38 x i8] c"PxCMD.CR not clear, escalating reset\0A\00", align 1
@.str.48 = private unnamed_addr constant [30 x i8] c"HBA reset escalation failed.\0A\00", align 1
@.str.49 = private unnamed_addr constant [19 x i8] c"Issuing COM reset\0A\00", align 1
@.str.50 = private unnamed_addr constant [18 x i8] c"COM reset failed\0A\00", align 1
@.str.51 = private unnamed_addr constant [35 x i8] c"data movement but sect_count is 0\0A\00", align 1
@dma_map_single_attrs.__warned = internal global i8 0, section ".data.once", align 1, !dbg !6399
@.str.52 = private unnamed_addr constant [44 x i8] c"%s %s: rejecting DMA map of vmalloc memory\0A\00", align 1
@.str.53 = private unnamed_addr constant [28 x i8] c"include/linux/dma-mapping.h\00", align 1
@vmemmap_base = external dso_local global i64, align 8
@phys_base = external dso_local global i64, align 8
@page_offset_base = external dso_local global i64, align 8
@.str.54 = private unnamed_addr constant [31 x i8] c"Could not get drive capacity.\0A\00", align 1
@.str.55 = private unnamed_addr constant [38 x i8] c"Error creating node %s under debugfs\0A\00", align 1
@.str.56 = private unnamed_addr constant [6 x i8] c"flags\00", align 1
@mtip_flags_fops = internal constant %struct.file_operations { %struct.module* null, i64 (%struct.file*, i64, i32)* @no_llseek, i64 (%struct.file*, i8*, i64, i64*)* @mtip_hw_read_flags, i64 (%struct.file*, i8*, i64, i64*)* null, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i32 (%struct.kiocb*, i1)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.poll_table_struct*)* null, i64 (%struct.file*, i32, i64)* null, i64 (%struct.file*, i32, i64)* null, i32 (%struct.file*, %struct.vm_area_struct*)* null, i64 0, i32 (%struct.inode*, %struct.file*)* @simple_open, i32 (%struct.file*, i8*)* null, i32 (%struct.inode*, %struct.file*)* null, i32 (%struct.file*, i64, i64, i32)* null, i32 (i32, %struct.file*, i32)* null, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)* null, i64 (%struct.file*, i64, i64, i64, i64)* null, i32 (i32)* null, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)* null, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)* null, i32 (%struct.file*, i64, %struct.file_lock**, i8**)* null, i64 (%struct.file*, i32, i64, i64)* null, void (%struct.seq_file*, %struct.file*)* null, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)* null, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)* null, i32 (%struct.file*, i64, i64, i32)* null }, align 8, !dbg !6405
@.str.57 = private unnamed_addr constant [10 x i8] c"registers\00", align 1
@mtip_regs_fops = internal constant %struct.file_operations { %struct.module* null, i64 (%struct.file*, i64, i32)* @no_llseek, i64 (%struct.file*, i8*, i64, i64*)* @mtip_hw_read_registers, i64 (%struct.file*, i8*, i64, i64*)* null, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i32 (%struct.kiocb*, i1)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.poll_table_struct*)* null, i64 (%struct.file*, i32, i64)* null, i64 (%struct.file*, i32, i64)* null, i32 (%struct.file*, %struct.vm_area_struct*)* null, i64 0, i32 (%struct.inode*, %struct.file*)* @simple_open, i32 (%struct.file*, i8*)* null, i32 (%struct.inode*, %struct.file*)* null, i32 (%struct.file*, i64, i64, i32)* null, i32 (i32, %struct.file*, i32)* null, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)* null, i64 (%struct.file*, i64, i64, i64, i64)* null, i32 (i32)* null, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)* null, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)* null, i32 (%struct.file*, i64, %struct.file_lock**, i8**)* null, i64 (%struct.file*, i32, i64, i64)* null, void (%struct.seq_file*, %struct.file*)* null, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)* null, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)* null, i32 (%struct.file*, i64, i64, i32)* null }, align 8, !dbg !6407
@.str.58 = private unnamed_addr constant [32 x i8] c"Memory allocation: flag buffer\0A\00", align 1
@.str.59 = private unnamed_addr constant [23 x i8] c"Flag-port : [ %08lX ]\0A\00", align 1
@.str.60 = private unnamed_addr constant [23 x i8] c"Flag-dd   : [ %08lX ]\0A\00", align 1
@.str.61 = private unnamed_addr constant [36 x i8] c"Memory allocation: register buffer\0A\00", align 1
@.str.62 = private unnamed_addr constant [24 x i8] c"H/ S ACTive      : [ 0x\00", align 1
@.str.63 = private unnamed_addr constant [6 x i8] c"%08X \00", align 1
@.str.64 = private unnamed_addr constant [3 x i8] c"]\0A\00", align 1
@.str.65 = private unnamed_addr constant [24 x i8] c"H/ Command Issue : [ 0x\00", align 1
@.str.66 = private unnamed_addr constant [24 x i8] c"H/ Completed     : [ 0x\00", align 1
@.str.67 = private unnamed_addr constant [31 x i8] c"H/ PORT IRQ STAT : [ 0x%08X ]\0A\00", align 1
@.str.68 = private unnamed_addr constant [31 x i8] c"H/ HOST IRQ STAT : [ 0x%08X ]\0A\00", align 1
@.str.69 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.70 = private unnamed_addr constant [24 x i8] c"L/ Commands in Q : [ 0x\00", align 1
@.str.71 = private unnamed_addr constant [30 x i8] c"DMA segment length truncated\0A\00", align 1
@.str.72 = private unnamed_addr constant [37 x i8] c"Error in READ LOG EXT (10h) command\0A\00", align 1
@.str.73 = private unnamed_addr constant [27 x i8] c"Write protect bit is set.\0A\00", align 1
@.str.74 = private unnamed_addr constant [43 x i8] c"Exceeded Tmax, drive in thermal shutdown.\0A\00", align 1
@.str.75 = private unnamed_addr constant [37 x i8] c"Drive indicates rebuild has failed.\0A\00", align 1
@.str.76 = private unnamed_addr constant [40 x i8] c"Unable to check write protect progress\0A\00", align 1
@.str.77 = private unnamed_addr constant [42 x i8] c"Write protect progress: %u%% (%u blocks)\0A\00", align 1
@.str.78 = private unnamed_addr constant [16 x i8] c"Serial No.: %s\0A\00", align 1
@.str.79 = private unnamed_addr constant [19 x i8] c"Firmware Ver.: %s\0A\00", align 1
@.str.80 = private unnamed_addr constant [11 x i8] c"Model: %s\0A\00", align 1
@.str.81 = private unnamed_addr constant [19 x i8] c"Security: %04x %s\0A\00", align 1
@.str.82 = private unnamed_addr constant [9 x i8] c"(LOCKED)\00", align 1
@.str.83 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.84 = private unnamed_addr constant [34 x i8] c"Capacity: %llu sectors (%llu MB)\0A\00", align 1
@.str.85 = private unnamed_addr constant [3 x i8] c"A0\00", align 1
@.str.86 = private unnamed_addr constant [3 x i8] c"A2\00", align 1
@.str.87 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.88 = private unnamed_addr constant [15 x i8] c"Card Type: %s\0A\00", align 1
@.str.89 = private unnamed_addr constant [25 x i8] c"IDENTIFY DATA not valid\0A\00", align 1
@.str.90 = private unnamed_addr constant [21 x i8] c"SMART not supported\0A\00", align 1
@.str.91 = private unnamed_addr constant [19 x i8] c"SMART not enabled\0A\00", align 1
@.str.92 = private unnamed_addr constant [25 x i8] c"Failed to ge SMART data\0A\00", align 1
@.str.93 = private unnamed_addr constant [38 x i8] c"Query for invalid SMART attribute ID\0A\00", align 1
@dev_attr_status = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.95, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mtip_hw_show_status, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !6411
@.str.94 = private unnamed_addr constant [37 x i8] c"Error creating 'status' sysfs entry\0A\00", align 1
@.str.95 = private unnamed_addr constant [7 x i8] c"status\00", align 1
@.str.96 = private unnamed_addr constant [18 x i8] c"thermal_shutdown\0A\00", align 1
@.str.97 = private unnamed_addr constant [15 x i8] c"write_protect\0A\00", align 1
@.str.98 = private unnamed_addr constant [8 x i8] c"online\0A\00", align 1
@.str.99 = private unnamed_addr constant [33 x i8] c"Completion workers still active!\00", align 1
@.str.100 = private unnamed_addr constant [16 x i8] c"Taskfile error\0A\00", align 1
@.str.101 = private unnamed_addr constant [15 x i8] c"g=%u, comp=%x\0A\00", align 1
@.str.102 = private unnamed_addr constant [16 x i8] c"completed (TFE)\00", align 1
@.str.103 = private unnamed_addr constant [14 x i8] c"write protect\00", align 1
@.str.104 = private unnamed_addr constant [17 x i8] c"thermal shutdown\00", align 1
@.str.105 = private unnamed_addr constant [60 x i8] c"Drive indicates rebuild has failed. Secure erase required.\0A\00", align 1
@.str.106 = private unnamed_addr constant [15 x i8] c"rebuild failed\00", align 1
@.str.107 = private unnamed_addr constant [27 x i8] c"  Fail: %s w/tag %d [%s].\0A\00", align 1
@.str.108 = private unnamed_addr constant [6 x i8] c"write\00", align 1
@.str.109 = private unnamed_addr constant [5 x i8] c"read\00", align 1
@.str.110 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.111 = private unnamed_addr constant [17 x i8] c"retiring tag %d\0A\00", align 1
@.str.112 = private unnamed_addr constant [15 x i8] c"reissued (TFE)\00", align 1
@.str.113 = private unnamed_addr constant [8 x i8] c"%016lX \00", align 1
@.str.114 = private unnamed_addr constant [30 x i8] c"%d command(s) %s: tagmap [%s]\00", align 1
@.str.115 = private unnamed_addr constant [50 x i8] c"FTL rebuild in progress. Polling for completion.\0A\00", align 1
@.str.116 = private unnamed_addr constant [36 x i8] c"FTL rebuild in progress (%d secs).\0A\00", align 1
@.str.117 = private unnamed_addr constant [33 x i8] c"FTL rebuild complete (%d secs).\0A\00", align 1
@.str.118 = private unnamed_addr constant [58 x i8] c"Timed out waiting for FTL rebuild to complete (%d secs).\0A\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@removing_list = internal global %struct.list_head zeroinitializer, align 8, !dbg !6429
@.str.119 = private unnamed_addr constant [34 x i8] c"Completion workers still active!\0A\00", align 1
@.str.120 = private unnamed_addr constant [28 x i8] c"device %s surprise removal\0A\00", align 1
@.str.121 = private unnamed_addr constant [26 x i8] c"STANDBY IMMEDIATE failed\0A\00", align 1
@.str.122 = private unnamed_addr constant [35 x i8] c"STANDBY IMMEDIATE command failed.\0A\00", align 1
@.str.123 = private unnamed_addr constant [38 x i8] c"Driver private datastructure is NULL\0A\00", align 1
@.str.124 = private unnamed_addr constant [30 x i8] c"Failed to suspend controller\0A\00", align 1
@.str.125 = private unnamed_addr constant [19 x i8] c"Suspending %s ...\0A\00", align 1
@.str.126 = private unnamed_addr constant [34 x i8] c"Failed standby-immediate command\0A\00", align 1
@.str.127 = private unnamed_addr constant [37 x i8] c"Failed to enable card during resume\0A\00", align 1
@.str.128 = private unnamed_addr constant [18 x i8] c"Unable to resume\0A\00", align 1
@.str.129 = private unnamed_addr constant [17 x i8] c"Resuming %s ...\0A\00", align 1
@.str.130 = private unnamed_addr constant [25 x i8] c"Unable to reset the HBA\0A\00", align 1
@.str.131 = private unnamed_addr constant [22 x i8] c"Shutting down %s ...\0A\00", align 1
@.str.132 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.133 = private unnamed_addr constant [6 x i8] c"1.3.1\00", align 1
@.str.134 = private unnamed_addr constant [26 x i8] c"\016mtip32xx Version 1.3.1\0A\00", align 1
@.str.135 = private unnamed_addr constant [40 x i8] c"\013Unable to register block device (%d)\0A\00", align 1
@.str.136 = private unnamed_addr constant [33 x i8] c"\014Error creating debugfs parent\0A\00", align 1
@.str.137 = private unnamed_addr constant [14 x i8] c"device_status\00", align 1
@mtip_device_status_fops = internal constant %struct.file_operations { %struct.module* null, i64 (%struct.file*, i64, i32)* @no_llseek, i64 (%struct.file*, i8*, i64, i64*)* @mtip_hw_read_device_status, i64 (%struct.file*, i8*, i64, i64*)* null, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i32 (%struct.kiocb*, i1)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.poll_table_struct*)* null, i64 (%struct.file*, i32, i64)* null, i64 (%struct.file*, i32, i64)* null, i32 (%struct.file*, %struct.vm_area_struct*)* null, i64 0, i32 (%struct.inode*, %struct.file*)* @simple_open, i32 (%struct.file*, i8*)* null, i32 (%struct.inode*, %struct.file*)* null, i32 (%struct.file*, i64, i64, i32)* null, i32 (i32, %struct.file*, i32)* null, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)* null, i64 (%struct.file*, i64, i64, i64, i64)* null, i32 (i32)* null, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)* null, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)* null, i32 (%struct.file*, i64, %struct.file_lock**, i8**)* null, i64 (%struct.file*, i32, i64, i64)* null, void (%struct.seq_file*, %struct.file*)* null, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)* null, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)* null, i32 (%struct.file*, i64, i64, i32)* null }, align 8, !dbg !6433
@dfs_device_status = internal global %struct.dentry* null, align 8, !dbg !6435
@.str.138 = private unnamed_addr constant [37 x i8] c"\013Error creating device_status node\0A\00", align 1
@.str.139 = private unnamed_addr constant [34 x i8] c"Memory allocation: status buffer\0A\00", align 1
@.str.140 = private unnamed_addr constant [18 x i8] c"Devices Present:\0A\00", align 1
@.str.141 = private unnamed_addr constant [35 x i8] c" device %s %s (ftl rebuild %d %%)\0A\00", align 1
@.str.142 = private unnamed_addr constant [15 x i8] c" device %s %s\0A\00", align 1
@.str.143 = private unnamed_addr constant [24 x i8] c"Devices Being Removed:\0A\00", align 1
@llvm.used = appending global [9 x i8*] [i8* bitcast (void ()* @mtip_exit to i8*), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @__UNIQUE_ID_author317, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__UNIQUE_ID_description318, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @__UNIQUE_ID_file319, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__UNIQUE_ID_license320, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__UNIQUE_ID_version321, i32 0, i32 0), i8* bitcast (%struct.module_version_attribute** @__modver_attr to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_mtip_init322 to i8*), i8* bitcast (void ()** @__exitcall_mtip_exit to i8*)], section "llvm.metadata"

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @mtip_exit() #0 section ".exit.text" !dbg !6443 {
entry:
  %0 = load i32, i32* @mtip_major, align 4, !dbg !6444
  call void @unregister_blkdev(i32 %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)) #12, !dbg !6445
  call void @pci_unregister_driver(%struct.pci_driver* @mtip_pci_driver) #12, !dbg !6446
  %1 = load %struct.dentry*, %struct.dentry** @dfs_parent, align 8, !dbg !6447
  call void @debugfs_remove_recursive(%struct.dentry* %1) #12, !dbg !6448
  ret void, !dbg !6449
}

; Function Attrs: noredzone
declare dso_local void @unregister_blkdev(i32, i8*) #1

; Function Attrs: noredzone
declare dso_local void @pci_unregister_driver(%struct.pci_driver*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @debugfs_remove_recursive(%struct.dentry* %dentry) #2 !dbg !6450 {
entry:
  %dentry.addr = alloca %struct.dentry*, align 8
  store %struct.dentry* %dentry, %struct.dentry** %dentry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dentry** %dentry.addr, metadata !6452, metadata !DIExpression()), !dbg !6453
  ret void, !dbg !6454
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_init() #0 section ".init.text" !dbg !6455 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6456, metadata !DIExpression()), !dbg !6462
  %retval = alloca i32, align 4
  %error = alloca i32, align 4
  %.compoundliteral = alloca %struct.spinlock, align 1
  call void @llvm.dbg.declare(metadata i32* %error, metadata !6465, metadata !DIExpression()), !dbg !6466
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.134, i64 0, i64 0)) #13, !dbg !6467
  br label %do.body, !dbg !6468

do.body:                                          ; preds = %entry
  store %struct.spinlock* @dev_lock, %struct.spinlock** %lock.addr.i, align 8
  %0 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6469
  %1 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %0, i32 0, i32 0, !dbg !6470
  %rlock.i = bitcast %union.anon.1* %1 to %struct.raw_spinlock*, !dbg !6470
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !6471
  %rlock = bitcast %union.anon.1* %2 to %struct.raw_spinlock*, !dbg !6471
  %3 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !6471
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 bitcast (%struct.spinlock* @dev_lock to i8*), i8* align 1 %3, i64 0, i1 false), !dbg !6471
  br label %do.end, !dbg !6471

do.end:                                           ; preds = %do.body
  call void @INIT_LIST_HEAD(%struct.list_head* @online_list) #12, !dbg !6472
  call void @INIT_LIST_HEAD(%struct.list_head* @removing_list) #12, !dbg !6473
  %call2 = call i32 @register_blkdev(i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)) #12, !dbg !6474
  store i32 %call2, i32* %error, align 4, !dbg !6475
  %4 = load i32, i32* %error, align 4, !dbg !6476
  %cmp = icmp sle i32 %4, 0, !dbg !6478
  br i1 %cmp, label %if.then, label %if.end, !dbg !6479

if.then:                                          ; preds = %do.end
  %5 = load i32, i32* %error, align 4, !dbg !6480
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.135, i64 0, i64 0), i32 %5) #13, !dbg !6480
  store i32 -16, i32* %retval, align 4, !dbg !6482
  br label %return, !dbg !6482

if.end:                                           ; preds = %do.end
  %6 = load i32, i32* %error, align 4, !dbg !6483
  store i32 %6, i32* @mtip_major, align 4, !dbg !6484
  %call4 = call %struct.dentry* @debugfs_create_dir(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0), %struct.dentry* null) #12, !dbg !6485
  store %struct.dentry* %call4, %struct.dentry** @dfs_parent, align 8, !dbg !6486
  %7 = load %struct.dentry*, %struct.dentry** @dfs_parent, align 8, !dbg !6487
  %8 = bitcast %struct.dentry* %7 to i8*, !dbg !6487
  %call5 = call zeroext i1 @IS_ERR_OR_NULL(i8* %8) #12, !dbg !6489
  br i1 %call5, label %if.then6, label %if.end8, !dbg !6490

if.then6:                                         ; preds = %if.end
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.136, i64 0, i64 0)) #13, !dbg !6491
  store %struct.dentry* null, %struct.dentry** @dfs_parent, align 8, !dbg !6493
  br label %if.end8, !dbg !6494

if.end8:                                          ; preds = %if.then6, %if.end
  %9 = load %struct.dentry*, %struct.dentry** @dfs_parent, align 8, !dbg !6495
  %tobool = icmp ne %struct.dentry* %9, null, !dbg !6495
  br i1 %tobool, label %if.then9, label %if.end15, !dbg !6497

if.then9:                                         ; preds = %if.end8
  %10 = load %struct.dentry*, %struct.dentry** @dfs_parent, align 8, !dbg !6498
  %call10 = call %struct.dentry* @debugfs_create_file(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.137, i64 0, i64 0), i16 zeroext 292, %struct.dentry* %10, i8* null, %struct.file_operations* @mtip_device_status_fops) #12, !dbg !6500
  store %struct.dentry* %call10, %struct.dentry** @dfs_device_status, align 8, !dbg !6501
  %11 = load %struct.dentry*, %struct.dentry** @dfs_device_status, align 8, !dbg !6502
  %12 = bitcast %struct.dentry* %11 to i8*, !dbg !6502
  %call11 = call zeroext i1 @IS_ERR_OR_NULL(i8* %12) #12, !dbg !6504
  br i1 %call11, label %if.then12, label %if.end14, !dbg !6505

if.then12:                                        ; preds = %if.then9
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.138, i64 0, i64 0)) #13, !dbg !6506
  store %struct.dentry* null, %struct.dentry** @dfs_device_status, align 8, !dbg !6508
  br label %if.end14, !dbg !6509

if.end14:                                         ; preds = %if.then12, %if.then9
  br label %if.end15, !dbg !6510

if.end15:                                         ; preds = %if.end14, %if.end8
  %call16 = call i32 @__pci_register_driver(%struct.pci_driver* @mtip_pci_driver, %struct.module* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)) #12, !dbg !6511
  store i32 %call16, i32* %error, align 4, !dbg !6512
  %13 = load i32, i32* %error, align 4, !dbg !6513
  %tobool17 = icmp ne i32 %13, 0, !dbg !6513
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !6515

if.then18:                                        ; preds = %if.end15
  %14 = load %struct.dentry*, %struct.dentry** @dfs_parent, align 8, !dbg !6516
  call void @debugfs_remove(%struct.dentry* %14) #12, !dbg !6518
  %15 = load i32, i32* @mtip_major, align 4, !dbg !6519
  call void @unregister_blkdev(i32 %15, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)) #12, !dbg !6520
  br label %if.end19, !dbg !6521

if.end19:                                         ; preds = %if.then18, %if.end15
  %16 = load i32, i32* %error, align 4, !dbg !6522
  store i32 %16, i32* %retval, align 4, !dbg !6523
  br label %return, !dbg !6523

return:                                           ; preds = %if.end19, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !6524
  ret i32 %17, !dbg !6524
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_pci_probe(%struct.pci_dev* %pdev, %struct.pci_device_id* %ent) #2 !dbg !6525 {
entry:
  %lock.addr.i346 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i346, metadata !6526, metadata !DIExpression()), !dbg !6530
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6532, metadata !DIExpression()), !dbg !6533
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6456, metadata !DIExpression()), !dbg !6534
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %ent.addr = alloca %struct.pci_device_id*, align 8
  %rv = alloca i32, align 4
  %dd = alloca %struct.driver_data*, align 8
  %cpu_list = alloca [256 x i8], align 16
  %node_mask = alloca %struct.cpumask*, align 8
  %cpu = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %my_node = alloca i32, align 4
  %flags = alloca i64, align 8
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  %.compoundliteral165 = alloca %struct.atomic64_t, align 8
  %.compoundliteral184 = alloca %struct.atomic64_t, align 8
  %.compoundliteral203 = alloca %struct.atomic64_t, align 8
  %.compoundliteral222 = alloca %struct.atomic64_t, align 8
  %.compoundliteral241 = alloca %struct.atomic64_t, align 8
  %.compoundliteral260 = alloca %struct.atomic64_t, align 8
  %.compoundliteral279 = alloca %struct.atomic64_t, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy314 = alloca i64, align 8
  %__dummy2315 = alloca i64, align 8
  %tmp318 = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !6541, metadata !DIExpression()), !dbg !6542
  store %struct.pci_device_id* %ent, %struct.pci_device_id** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_device_id** %ent.addr, metadata !6543, metadata !DIExpression()), !dbg !6544
  call void @llvm.dbg.declare(metadata i32* %rv, metadata !6545, metadata !DIExpression()), !dbg !6546
  store i32 0, i32* %rv, align 4, !dbg !6546
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd, metadata !6547, metadata !DIExpression()), !dbg !6548
  store %struct.driver_data* null, %struct.driver_data** %dd, align 8, !dbg !6548
  call void @llvm.dbg.declare(metadata [256 x i8]* %cpu_list, metadata !6549, metadata !DIExpression()), !dbg !6553
  call void @llvm.dbg.declare(metadata %struct.cpumask** %node_mask, metadata !6554, metadata !DIExpression()), !dbg !6555
  call void @llvm.dbg.declare(metadata i32* %cpu, metadata !6556, metadata !DIExpression()), !dbg !6557
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6558, metadata !DIExpression()), !dbg !6559
  store i32 0, i32* %i, align 4, !dbg !6559
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6560, metadata !DIExpression()), !dbg !6561
  store i32 0, i32* %j, align 4, !dbg !6561
  call void @llvm.dbg.declare(metadata i32* %my_node, metadata !6562, metadata !DIExpression()), !dbg !6563
  store i32 -1, i32* %my_node, align 4, !dbg !6563
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6564, metadata !DIExpression()), !dbg !6565
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6566
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 1, !dbg !6566
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !6566
  store i32 -1, i32* %my_node, align 4, !dbg !6567
  %2 = load i32, i32* %my_node, align 4, !dbg !6568
  %cmp = icmp ne i32 %2, -1, !dbg !6570
  br i1 %cmp, label %if.then, label %if.else, !dbg !6571

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %my_node, align 4, !dbg !6572
  %call = call i32 @node_state(i32 %3, i32 1) #12, !dbg !6572
  %tobool = icmp ne i32 %call, 0, !dbg !6572
  br i1 %tobool, label %if.end, label %if.then1, !dbg !6575

if.then1:                                         ; preds = %if.then
  %call2 = call i32 @mtip_get_next_rr_node() #12, !dbg !6576
  store i32 %call2, i32* %my_node, align 4, !dbg !6577
  br label %if.end, !dbg !6578

if.end:                                           ; preds = %if.then1, %if.then
  br label %if.end4, !dbg !6579

if.else:                                          ; preds = %entry
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6580
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !6580
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0)) #13, !dbg !6580
  %call3 = call i32 @mtip_get_next_rr_node() #12, !dbg !6582
  store i32 %call3, i32* %my_node, align 4, !dbg !6583
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.end
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6584
  %dev5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 41, !dbg !6584
  %6 = load i32, i32* %my_node, align 4, !dbg !6584
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6584
  %bus6 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 1, !dbg !6584
  %8 = load %struct.pci_bus*, %struct.pci_bus** %bus6, align 8, !dbg !6584
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6584
  %dev7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 41, !dbg !6584
  %call8 = call i32 @dev_to_node(%struct.device* %dev7) #12, !dbg !6584
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev5, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 %6, i32 -1, i32 %call8, i32 0, i32 0) #13, !dbg !6584
  %10 = load i32, i32* %my_node, align 4, !dbg !6585
  %call9 = call i8* @kzalloc_node(i64 872, i32 3264, i32 %10) #12, !dbg !6586
  %11 = bitcast i8* %call9 to %struct.driver_data*, !dbg !6586
  store %struct.driver_data* %11, %struct.driver_data** %dd, align 8, !dbg !6587
  %12 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6588
  %cmp10 = icmp eq %struct.driver_data* %12, null, !dbg !6590
  br i1 %cmp10, label %if.then11, label %if.end13, !dbg !6591

if.then11:                                        ; preds = %if.end4
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6592
  %dev12 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 41, !dbg !6592
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev12, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.3, i64 0, i64 0)) #13, !dbg !6592
  store i32 -12, i32* %retval, align 4, !dbg !6594
  br label %return, !dbg !6594

if.end13:                                         ; preds = %if.end4
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6595
  %15 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6596
  %16 = bitcast %struct.driver_data* %15 to i8*, !dbg !6596
  call void @pci_set_drvdata(%struct.pci_dev* %14, i8* %16) #12, !dbg !6597
  %17 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6598
  %call14 = call i32 @pcim_enable_device(%struct.pci_dev* %17) #12, !dbg !6599
  store i32 %call14, i32* %rv, align 4, !dbg !6600
  %18 = load i32, i32* %rv, align 4, !dbg !6601
  %cmp15 = icmp slt i32 %18, 0, !dbg !6603
  br i1 %cmp15, label %if.then16, label %if.end18, !dbg !6604

if.then16:                                        ; preds = %if.end13
  %19 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6605
  %dev17 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %19, i32 0, i32 41, !dbg !6605
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev17, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0)) #13, !dbg !6605
  br label %iomap_err, !dbg !6607

if.end18:                                         ; preds = %if.end13
  %20 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6608
  %call19 = call i32 @pcim_iomap_regions(%struct.pci_dev* %20, i32 32, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)) #12, !dbg !6609
  store i32 %call19, i32* %rv, align 4, !dbg !6610
  %21 = load i32, i32* %rv, align 4, !dbg !6611
  %cmp20 = icmp slt i32 %21, 0, !dbg !6613
  br i1 %cmp20, label %if.then21, label %if.end23, !dbg !6614

if.then21:                                        ; preds = %if.end18
  %22 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6615
  %dev22 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %22, i32 0, i32 41, !dbg !6615
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev22, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0)) #13, !dbg !6615
  br label %iomap_err, !dbg !6617

if.end23:                                         ; preds = %if.end18
  %23 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6618
  %dev24 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %23, i32 0, i32 41, !dbg !6619
  %call25 = call i32 @dma_set_mask_and_coherent(%struct.device* %dev24, i64 -1) #12, !dbg !6620
  store i32 %call25, i32* %rv, align 4, !dbg !6621
  %24 = load i32, i32* %rv, align 4, !dbg !6622
  %tobool26 = icmp ne i32 %24, 0, !dbg !6622
  br i1 %tobool26, label %if.then27, label %if.end29, !dbg !6624

if.then27:                                        ; preds = %if.end23
  %25 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6625
  %dev28 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 41, !dbg !6625
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev28, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0)) #13, !dbg !6625
  br label %setmask_err, !dbg !6627

if.end29:                                         ; preds = %if.end23
  %26 = load i32, i32* @mtip_major, align 4, !dbg !6628
  %27 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6629
  %major = getelementptr inbounds %struct.driver_data, %struct.driver_data* %27, i32 0, i32 1, !dbg !6630
  store i32 %26, i32* %major, align 8, !dbg !6631
  %28 = load i32, i32* @instance, align 4, !dbg !6632
  %29 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6633
  %instance = getelementptr inbounds %struct.driver_data, %struct.driver_data* %29, i32 0, i32 2, !dbg !6634
  store i32 %28, i32* %instance, align 4, !dbg !6635
  %30 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6636
  %31 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6637
  %pdev30 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %31, i32 0, i32 4, !dbg !6638
  store %struct.pci_dev* %30, %struct.pci_dev** %pdev30, align 8, !dbg !6639
  %32 = load i32, i32* %my_node, align 4, !dbg !6640
  %33 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6641
  %numa_node = getelementptr inbounds %struct.driver_data, %struct.driver_data* %33, i32 0, i32 15, !dbg !6642
  store i32 %32, i32* %numa_node, align 4, !dbg !6643
  %34 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6644
  %online_list = getelementptr inbounds %struct.driver_data, %struct.driver_data* %34, i32 0, i32 22, !dbg !6645
  call void @INIT_LIST_HEAD(%struct.list_head* %online_list) #12, !dbg !6646
  %35 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6647
  %remove_list = getelementptr inbounds %struct.driver_data, %struct.driver_data* %35, i32 0, i32 23, !dbg !6648
  call void @INIT_LIST_HEAD(%struct.list_head* %remove_list) #12, !dbg !6649
  %36 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6650
  %workq_name = getelementptr inbounds %struct.driver_data, %struct.driver_data* %36, i32 0, i32 16, !dbg !6651
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %workq_name, i64 0, i64 0, !dbg !6652
  call void @llvm.memset.p0i8.i64(i8* align 8 %arraydecay, i8 0, i64 32, i1 false), !dbg !6652
  %37 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6653
  %workq_name31 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %37, i32 0, i32 16, !dbg !6654
  %arraydecay32 = getelementptr inbounds [32 x i8], [32 x i8]* %workq_name31, i64 0, i64 0, !dbg !6653
  %38 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6655
  %instance33 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %38, i32 0, i32 2, !dbg !6656
  %39 = load i32, i32* %instance33, align 4, !dbg !6656
  %call34 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay32, i64 31, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i32 %39) #12, !dbg !6657
  %40 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6658
  %workq_name35 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %40, i32 0, i32 16, !dbg !6658
  %arraydecay36 = getelementptr inbounds [32 x i8], [32 x i8]* %workq_name35, i64 0, i64 0, !dbg !6658
  %call37 = call %struct.workqueue_struct* (i8*, i32, i32, ...) @alloc_workqueue(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i32 262152, i32 1, i8* %arraydecay36) #12, !dbg !6658
  %41 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6659
  %isr_workq = getelementptr inbounds %struct.driver_data, %struct.driver_data* %41, i32 0, i32 17, !dbg !6660
  store %struct.workqueue_struct* %call37, %struct.workqueue_struct** %isr_workq, align 8, !dbg !6661
  %42 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6662
  %isr_workq38 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %42, i32 0, i32 17, !dbg !6664
  %43 = load %struct.workqueue_struct*, %struct.workqueue_struct** %isr_workq38, align 8, !dbg !6664
  %tobool39 = icmp ne %struct.workqueue_struct* %43, null, !dbg !6662
  br i1 %tobool39, label %if.end43, label %if.then40, !dbg !6665

if.then40:                                        ; preds = %if.end29
  %44 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6666
  %dev41 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %44, i32 0, i32 41, !dbg !6666
  %45 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6666
  %instance42 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %45, i32 0, i32 2, !dbg !6666
  %46 = load i32, i32* %instance42, align 4, !dbg !6666
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev41, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i64 0, i64 0), i32 %46) #13, !dbg !6666
  store i32 -12, i32* %rv, align 4, !dbg !6668
  br label %setmask_err, !dbg !6669

if.end43:                                         ; preds = %if.end29
  %arraydecay44 = getelementptr inbounds [256 x i8], [256 x i8]* %cpu_list, i64 0, i64 0, !dbg !6670
  call void @llvm.memset.p0i8.i64(i8* align 16 %arraydecay44, i8 0, i64 256, i1 false), !dbg !6670
  %47 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6671
  %numa_node45 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %47, i32 0, i32 15, !dbg !6671
  %48 = load i32, i32* %numa_node45, align 4, !dbg !6671
  store %struct.cpumask* @__cpu_online_mask, %struct.cpumask** %node_mask, align 8, !dbg !6672
  %49 = load %struct.cpumask*, %struct.cpumask** %node_mask, align 8, !dbg !6673
  %call46 = call zeroext i1 @cpumask_empty(%struct.cpumask* %49) #12, !dbg !6675
  br i1 %call46, label %if.else59, label %if.then47, !dbg !6676

if.then47:                                        ; preds = %if.end43
  store i32 0, i32* %cpu, align 4, !dbg !6677
  br label %for.cond, !dbg !6677

for.cond:                                         ; preds = %for.inc, %if.then47
  %50 = load i32, i32* %cpu, align 4, !dbg !6680
  %cmp48 = icmp slt i32 %50, 1, !dbg !6680
  br i1 %cmp48, label %for.body, label %for.end, !dbg !6677

for.body:                                         ; preds = %for.cond
  %51 = load i32, i32* %j, align 4, !dbg !6682
  %idxprom = sext i32 %51 to i64, !dbg !6684
  %arrayidx = getelementptr [256 x i8], [256 x i8]* %cpu_list, i64 0, i64 %idxprom, !dbg !6684
  %52 = load i32, i32* %j, align 4, !dbg !6685
  %sub = sub i32 256, %52, !dbg !6686
  %conv = sext i32 %sub to i64, !dbg !6687
  %53 = load i32, i32* %cpu, align 4, !dbg !6688
  %call49 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arrayidx, i64 %conv, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), i32 %53) #12, !dbg !6689
  %arraydecay50 = getelementptr inbounds [256 x i8], [256 x i8]* %cpu_list, i64 0, i64 0, !dbg !6690
  %call51 = call i64 @strlen(i8* %arraydecay50) #12, !dbg !6691
  %conv52 = trunc i64 %call51 to i32, !dbg !6691
  store i32 %conv52, i32* %j, align 4, !dbg !6692
  br label %for.inc, !dbg !6693

for.inc:                                          ; preds = %for.body
  %54 = load i32, i32* %cpu, align 4, !dbg !6680
  %inc = add i32 %54, 1, !dbg !6680
  store i32 %inc, i32* %cpu, align 4, !dbg !6680
  %55 = load %struct.cpumask*, %struct.cpumask** %node_mask, align 8, !dbg !6680
  br label %for.cond, !dbg !6680, !llvm.loop !6694

for.end:                                          ; preds = %for.cond
  %56 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6696
  %dev53 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %56, i32 0, i32 41, !dbg !6696
  %57 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6696
  %numa_node54 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %57, i32 0, i32 15, !dbg !6696
  %58 = load i32, i32* %numa_node54, align 4, !dbg !6696
  %59 = load i16, i16* getelementptr inbounds (%struct.cpuinfo_x86, %struct.cpuinfo_x86* @boot_cpu_data, i32 0, i32 27), align 2, !dbg !6696
  %conv55 = zext i16 %59 to i32, !dbg !6696
  %60 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6696
  %numa_node56 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %60, i32 0, i32 15, !dbg !6696
  %61 = load i32, i32* %numa_node56, align 4, !dbg !6696
  %call57 = call i32 @cpumask_weight(%struct.cpumask* @__cpu_online_mask) #12, !dbg !6696
  %arraydecay58 = getelementptr inbounds [256 x i8], [256 x i8]* %cpu_list, i64 0, i64 0, !dbg !6696
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev53, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.11, i64 0, i64 0), i32 %58, i32 %conv55, i32 %call57, i8* %arraydecay58) #13, !dbg !6696
  br label %if.end60, !dbg !6697

if.else59:                                        ; preds = %if.end43
  br label %if.end60

if.end60:                                         ; preds = %if.else59, %for.end
  %62 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6698
  %numa_node61 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %62, i32 0, i32 15, !dbg !6699
  %63 = load i32, i32* %numa_node61, align 4, !dbg !6699
  %call62 = call i32 @get_least_used_cpu_on_node(i32 %63) #12, !dbg !6700
  %64 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6701
  %isr_binding = getelementptr inbounds %struct.driver_data, %struct.driver_data* %64, i32 0, i32 20, !dbg !6702
  store i32 %call62, i32* %isr_binding, align 8, !dbg !6703
  %65 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6704
  %dev63 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %65, i32 0, i32 41, !dbg !6704
  %66 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6704
  %isr_binding64 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %66, i32 0, i32 20, !dbg !6704
  %67 = load i32, i32* %isr_binding64, align 8, !dbg !6704
  %68 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6704
  %isr_binding65 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %68, i32 0, i32 20, !dbg !6704
  %69 = load i32, i32* %isr_binding65, align 8, !dbg !6704
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev63, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.12, i64 0, i64 0), i32 0, i32 %69) #13, !dbg !6704
  %70 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6705
  %isr_binding66 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %70, i32 0, i32 20, !dbg !6706
  %71 = load i32, i32* %isr_binding66, align 8, !dbg !6706
  %72 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6707
  %work = getelementptr inbounds %struct.driver_data, %struct.driver_data* %72, i32 0, i32 19, !dbg !6708
  %arrayidx67 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work, i64 0, i64 0, !dbg !6707
  %cpu_binding = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx67, i32 0, i32 2, !dbg !6709
  store i32 %71, i32* %cpu_binding, align 8, !dbg !6710
  %73 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6711
  %numa_node68 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %73, i32 0, i32 15, !dbg !6712
  %74 = load i32, i32* %numa_node68, align 4, !dbg !6712
  %call69 = call i32 @get_least_used_cpu_on_node(i32 %74) #12, !dbg !6713
  %75 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6714
  %work70 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %75, i32 0, i32 19, !dbg !6715
  %arrayidx71 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work70, i64 0, i64 1, !dbg !6714
  %cpu_binding72 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx71, i32 0, i32 2, !dbg !6716
  store i32 %call69, i32* %cpu_binding72, align 8, !dbg !6717
  %76 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6718
  %numa_node73 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %76, i32 0, i32 15, !dbg !6719
  %77 = load i32, i32* %numa_node73, align 4, !dbg !6719
  %call74 = call i32 @get_least_used_cpu_on_node(i32 %77) #12, !dbg !6720
  %78 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6721
  %work75 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %78, i32 0, i32 19, !dbg !6722
  %arrayidx76 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work75, i64 0, i64 2, !dbg !6721
  %cpu_binding77 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx76, i32 0, i32 2, !dbg !6723
  store i32 %call74, i32* %cpu_binding77, align 8, !dbg !6724
  %79 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6725
  %work78 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %79, i32 0, i32 19, !dbg !6726
  %arrayidx79 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work78, i64 0, i64 0, !dbg !6725
  %cpu_binding80 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx79, i32 0, i32 2, !dbg !6727
  %80 = load i32, i32* %cpu_binding80, align 8, !dbg !6727
  %81 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6728
  %work81 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %81, i32 0, i32 19, !dbg !6729
  %arrayidx82 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work81, i64 0, i64 3, !dbg !6728
  %cpu_binding83 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx82, i32 0, i32 2, !dbg !6730
  store i32 %80, i32* %cpu_binding83, align 8, !dbg !6731
  %82 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6732
  %work84 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %82, i32 0, i32 19, !dbg !6733
  %arrayidx85 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work84, i64 0, i64 1, !dbg !6732
  %cpu_binding86 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx85, i32 0, i32 2, !dbg !6734
  %83 = load i32, i32* %cpu_binding86, align 8, !dbg !6734
  %84 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6735
  %work87 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %84, i32 0, i32 19, !dbg !6736
  %arrayidx88 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work87, i64 0, i64 4, !dbg !6735
  %cpu_binding89 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx88, i32 0, i32 2, !dbg !6737
  store i32 %83, i32* %cpu_binding89, align 8, !dbg !6738
  %85 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6739
  %work90 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %85, i32 0, i32 19, !dbg !6740
  %arrayidx91 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work90, i64 0, i64 2, !dbg !6739
  %cpu_binding92 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx91, i32 0, i32 2, !dbg !6741
  %86 = load i32, i32* %cpu_binding92, align 8, !dbg !6741
  %87 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6742
  %work93 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %87, i32 0, i32 19, !dbg !6743
  %arrayidx94 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work93, i64 0, i64 5, !dbg !6742
  %cpu_binding95 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx94, i32 0, i32 2, !dbg !6744
  store i32 %86, i32* %cpu_binding95, align 8, !dbg !6745
  %88 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6746
  %work96 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %88, i32 0, i32 19, !dbg !6747
  %arrayidx97 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work96, i64 0, i64 2, !dbg !6746
  %cpu_binding98 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx97, i32 0, i32 2, !dbg !6748
  %89 = load i32, i32* %cpu_binding98, align 8, !dbg !6748
  %90 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6749
  %work99 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %90, i32 0, i32 19, !dbg !6750
  %arrayidx100 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work99, i64 0, i64 6, !dbg !6749
  %cpu_binding101 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx100, i32 0, i32 2, !dbg !6751
  store i32 %89, i32* %cpu_binding101, align 8, !dbg !6752
  %91 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6753
  %work102 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %91, i32 0, i32 19, !dbg !6754
  %arrayidx103 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work102, i64 0, i64 1, !dbg !6753
  %cpu_binding104 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx103, i32 0, i32 2, !dbg !6755
  %92 = load i32, i32* %cpu_binding104, align 8, !dbg !6755
  %93 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6756
  %work105 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %93, i32 0, i32 19, !dbg !6757
  %arrayidx106 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work105, i64 0, i64 7, !dbg !6756
  %cpu_binding107 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx106, i32 0, i32 2, !dbg !6758
  store i32 %92, i32* %cpu_binding107, align 8, !dbg !6759
  store i32 0, i32* %cpu, align 4, !dbg !6760
  br label %for.cond108, !dbg !6760

for.cond108:                                      ; preds = %for.inc141, %if.end60
  %94 = load i32, i32* %cpu, align 4, !dbg !6762
  %cmp109 = icmp slt i32 %94, 1, !dbg !6762
  br i1 %cmp109, label %for.body111, label %for.end143, !dbg !6760

for.body111:                                      ; preds = %for.cond108
  %arraydecay112 = getelementptr inbounds [256 x i8], [256 x i8]* %cpu_list, i64 0, i64 0, !dbg !6764
  call void @llvm.memset.p0i8.i64(i8* align 16 %arraydecay112, i8 0, i64 256, i1 false), !dbg !6764
  store i32 0, i32* %i, align 4, !dbg !6766
  store i32 0, i32* %j, align 4, !dbg !6768
  br label %for.cond113, !dbg !6769

for.cond113:                                      ; preds = %for.inc133, %for.body111
  %95 = load i32, i32* %i, align 4, !dbg !6770
  %cmp114 = icmp slt i32 %95, 8, !dbg !6772
  br i1 %cmp114, label %for.body116, label %for.end135, !dbg !6773

for.body116:                                      ; preds = %for.cond113
  %96 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6774
  %work117 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %96, i32 0, i32 19, !dbg !6777
  %97 = load i32, i32* %i, align 4, !dbg !6778
  %idxprom118 = sext i32 %97 to i64, !dbg !6774
  %arrayidx119 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work117, i64 0, i64 %idxprom118, !dbg !6774
  %cpu_binding120 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx119, i32 0, i32 2, !dbg !6779
  %98 = load i32, i32* %cpu_binding120, align 8, !dbg !6779
  %99 = load i32, i32* %cpu, align 4, !dbg !6780
  %cmp121 = icmp eq i32 %98, %99, !dbg !6781
  br i1 %cmp121, label %if.then123, label %if.end132, !dbg !6782

if.then123:                                       ; preds = %for.body116
  %100 = load i32, i32* %j, align 4, !dbg !6783
  %idxprom124 = sext i32 %100 to i64, !dbg !6785
  %arrayidx125 = getelementptr [256 x i8], [256 x i8]* %cpu_list, i64 0, i64 %idxprom124, !dbg !6785
  %101 = load i32, i32* %j, align 4, !dbg !6786
  %sub126 = sub i32 256, %101, !dbg !6787
  %conv127 = sext i32 %sub126 to i64, !dbg !6788
  %102 = load i32, i32* %i, align 4, !dbg !6789
  %call128 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arrayidx125, i64 %conv127, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), i32 %102) #12, !dbg !6790
  %arraydecay129 = getelementptr inbounds [256 x i8], [256 x i8]* %cpu_list, i64 0, i64 0, !dbg !6791
  %call130 = call i64 @strlen(i8* %arraydecay129) #12, !dbg !6792
  %conv131 = trunc i64 %call130 to i32, !dbg !6792
  store i32 %conv131, i32* %j, align 4, !dbg !6793
  br label %if.end132, !dbg !6794

if.end132:                                        ; preds = %if.then123, %for.body116
  br label %for.inc133, !dbg !6795

for.inc133:                                       ; preds = %if.end132
  %103 = load i32, i32* %i, align 4, !dbg !6796
  %inc134 = add i32 %103, 1, !dbg !6796
  store i32 %inc134, i32* %i, align 4, !dbg !6796
  br label %for.cond113, !dbg !6797, !llvm.loop !6798

for.end135:                                       ; preds = %for.cond113
  %104 = load i32, i32* %j, align 4, !dbg !6800
  %tobool136 = icmp ne i32 %104, 0, !dbg !6800
  br i1 %tobool136, label %if.then137, label %if.end140, !dbg !6802

if.then137:                                       ; preds = %for.end135
  %105 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6803
  %dev138 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %105, i32 0, i32 41, !dbg !6803
  %106 = load i32, i32* %cpu, align 4, !dbg !6803
  %arraydecay139 = getelementptr inbounds [256 x i8], [256 x i8]* %cpu_list, i64 0, i64 0, !dbg !6803
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev138, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13, i64 0, i64 0), i32 %106, i8* %arraydecay139) #13, !dbg !6803
  br label %if.end140, !dbg !6803

if.end140:                                        ; preds = %if.then137, %for.end135
  br label %for.inc141, !dbg !6804

for.inc141:                                       ; preds = %if.end140
  %107 = load i32, i32* %cpu, align 4, !dbg !6762
  %inc142 = add i32 %107, 1, !dbg !6762
  store i32 %inc142, i32* %cpu, align 4, !dbg !6762
  br label %for.cond108, !dbg !6762, !llvm.loop !6805

for.end143:                                       ; preds = %for.cond108
  br label %do.body, !dbg !6807

do.body:                                          ; preds = %for.end143
  %108 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6808
  %work144 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %108, i32 0, i32 19, !dbg !6808
  %arrayidx145 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work144, i64 0, i64 0, !dbg !6808
  %work146 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx145, i32 0, i32 0, !dbg !6808
  call void @__init_work(%struct.work_struct* %work146, i32 0) #12, !dbg !6808
  %109 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6808
  %work147 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %109, i32 0, i32 19, !dbg !6808
  %arrayidx148 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work147, i64 0, i64 0, !dbg !6808
  %work149 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx148, i32 0, i32 0, !dbg !6808
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work149, i32 0, i32 0, !dbg !6808
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !6808
  store i64 68719476704, i64* %counter, align 8, !dbg !6808
  %110 = bitcast %struct.atomic64_t* %data to i8*, !dbg !6808
  %111 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !6808
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %111, i64 8, i1 false), !dbg !6808
  %112 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6808
  %work150 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %112, i32 0, i32 19, !dbg !6808
  %arrayidx151 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work150, i64 0, i64 0, !dbg !6808
  %work152 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx151, i32 0, i32 0, !dbg !6808
  %entry153 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work152, i32 0, i32 1, !dbg !6808
  call void @INIT_LIST_HEAD(%struct.list_head* %entry153) #12, !dbg !6808
  %113 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6808
  %work154 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %113, i32 0, i32 19, !dbg !6808
  %arrayidx155 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work154, i64 0, i64 0, !dbg !6808
  %work156 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx155, i32 0, i32 0, !dbg !6808
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work156, i32 0, i32 2, !dbg !6808
  store void (%struct.work_struct*)* @mtip_workq_sdbf0, void (%struct.work_struct*)** %func, align 8, !dbg !6808
  br label %do.end, !dbg !6808

do.end:                                           ; preds = %do.body
  br label %do.body157, !dbg !6810

do.body157:                                       ; preds = %do.end
  %114 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6811
  %work158 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %114, i32 0, i32 19, !dbg !6811
  %arrayidx159 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work158, i64 0, i64 1, !dbg !6811
  %work160 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx159, i32 0, i32 0, !dbg !6811
  call void @__init_work(%struct.work_struct* %work160, i32 0) #12, !dbg !6811
  %115 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6811
  %work161 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %115, i32 0, i32 19, !dbg !6811
  %arrayidx162 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work161, i64 0, i64 1, !dbg !6811
  %work163 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx162, i32 0, i32 0, !dbg !6811
  %data164 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work163, i32 0, i32 0, !dbg !6811
  %counter166 = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral165, i32 0, i32 0, !dbg !6811
  store i64 68719476704, i64* %counter166, align 8, !dbg !6811
  %116 = bitcast %struct.atomic64_t* %data164 to i8*, !dbg !6811
  %117 = bitcast %struct.atomic64_t* %.compoundliteral165 to i8*, !dbg !6811
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %116, i8* align 8 %117, i64 8, i1 false), !dbg !6811
  %118 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6811
  %work167 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %118, i32 0, i32 19, !dbg !6811
  %arrayidx168 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work167, i64 0, i64 1, !dbg !6811
  %work169 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx168, i32 0, i32 0, !dbg !6811
  %entry170 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work169, i32 0, i32 1, !dbg !6811
  call void @INIT_LIST_HEAD(%struct.list_head* %entry170) #12, !dbg !6811
  %119 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6811
  %work171 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %119, i32 0, i32 19, !dbg !6811
  %arrayidx172 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work171, i64 0, i64 1, !dbg !6811
  %work173 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx172, i32 0, i32 0, !dbg !6811
  %func174 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work173, i32 0, i32 2, !dbg !6811
  store void (%struct.work_struct*)* @mtip_workq_sdbf1, void (%struct.work_struct*)** %func174, align 8, !dbg !6811
  br label %do.end175, !dbg !6811

do.end175:                                        ; preds = %do.body157
  br label %do.body176, !dbg !6813

do.body176:                                       ; preds = %do.end175
  %120 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6814
  %work177 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %120, i32 0, i32 19, !dbg !6814
  %arrayidx178 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work177, i64 0, i64 2, !dbg !6814
  %work179 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx178, i32 0, i32 0, !dbg !6814
  call void @__init_work(%struct.work_struct* %work179, i32 0) #12, !dbg !6814
  %121 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6814
  %work180 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %121, i32 0, i32 19, !dbg !6814
  %arrayidx181 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work180, i64 0, i64 2, !dbg !6814
  %work182 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx181, i32 0, i32 0, !dbg !6814
  %data183 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work182, i32 0, i32 0, !dbg !6814
  %counter185 = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral184, i32 0, i32 0, !dbg !6814
  store i64 68719476704, i64* %counter185, align 8, !dbg !6814
  %122 = bitcast %struct.atomic64_t* %data183 to i8*, !dbg !6814
  %123 = bitcast %struct.atomic64_t* %.compoundliteral184 to i8*, !dbg !6814
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* align 8 %123, i64 8, i1 false), !dbg !6814
  %124 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6814
  %work186 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %124, i32 0, i32 19, !dbg !6814
  %arrayidx187 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work186, i64 0, i64 2, !dbg !6814
  %work188 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx187, i32 0, i32 0, !dbg !6814
  %entry189 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work188, i32 0, i32 1, !dbg !6814
  call void @INIT_LIST_HEAD(%struct.list_head* %entry189) #12, !dbg !6814
  %125 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6814
  %work190 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %125, i32 0, i32 19, !dbg !6814
  %arrayidx191 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work190, i64 0, i64 2, !dbg !6814
  %work192 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx191, i32 0, i32 0, !dbg !6814
  %func193 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work192, i32 0, i32 2, !dbg !6814
  store void (%struct.work_struct*)* @mtip_workq_sdbf2, void (%struct.work_struct*)** %func193, align 8, !dbg !6814
  br label %do.end194, !dbg !6814

do.end194:                                        ; preds = %do.body176
  br label %do.body195, !dbg !6816

do.body195:                                       ; preds = %do.end194
  %126 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6817
  %work196 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %126, i32 0, i32 19, !dbg !6817
  %arrayidx197 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work196, i64 0, i64 3, !dbg !6817
  %work198 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx197, i32 0, i32 0, !dbg !6817
  call void @__init_work(%struct.work_struct* %work198, i32 0) #12, !dbg !6817
  %127 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6817
  %work199 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %127, i32 0, i32 19, !dbg !6817
  %arrayidx200 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work199, i64 0, i64 3, !dbg !6817
  %work201 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx200, i32 0, i32 0, !dbg !6817
  %data202 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work201, i32 0, i32 0, !dbg !6817
  %counter204 = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral203, i32 0, i32 0, !dbg !6817
  store i64 68719476704, i64* %counter204, align 8, !dbg !6817
  %128 = bitcast %struct.atomic64_t* %data202 to i8*, !dbg !6817
  %129 = bitcast %struct.atomic64_t* %.compoundliteral203 to i8*, !dbg !6817
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %128, i8* align 8 %129, i64 8, i1 false), !dbg !6817
  %130 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6817
  %work205 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %130, i32 0, i32 19, !dbg !6817
  %arrayidx206 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work205, i64 0, i64 3, !dbg !6817
  %work207 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx206, i32 0, i32 0, !dbg !6817
  %entry208 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work207, i32 0, i32 1, !dbg !6817
  call void @INIT_LIST_HEAD(%struct.list_head* %entry208) #12, !dbg !6817
  %131 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6817
  %work209 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %131, i32 0, i32 19, !dbg !6817
  %arrayidx210 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work209, i64 0, i64 3, !dbg !6817
  %work211 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx210, i32 0, i32 0, !dbg !6817
  %func212 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work211, i32 0, i32 2, !dbg !6817
  store void (%struct.work_struct*)* @mtip_workq_sdbf3, void (%struct.work_struct*)** %func212, align 8, !dbg !6817
  br label %do.end213, !dbg !6817

do.end213:                                        ; preds = %do.body195
  br label %do.body214, !dbg !6819

do.body214:                                       ; preds = %do.end213
  %132 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6820
  %work215 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %132, i32 0, i32 19, !dbg !6820
  %arrayidx216 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work215, i64 0, i64 4, !dbg !6820
  %work217 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx216, i32 0, i32 0, !dbg !6820
  call void @__init_work(%struct.work_struct* %work217, i32 0) #12, !dbg !6820
  %133 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6820
  %work218 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %133, i32 0, i32 19, !dbg !6820
  %arrayidx219 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work218, i64 0, i64 4, !dbg !6820
  %work220 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx219, i32 0, i32 0, !dbg !6820
  %data221 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work220, i32 0, i32 0, !dbg !6820
  %counter223 = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral222, i32 0, i32 0, !dbg !6820
  store i64 68719476704, i64* %counter223, align 8, !dbg !6820
  %134 = bitcast %struct.atomic64_t* %data221 to i8*, !dbg !6820
  %135 = bitcast %struct.atomic64_t* %.compoundliteral222 to i8*, !dbg !6820
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* align 8 %135, i64 8, i1 false), !dbg !6820
  %136 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6820
  %work224 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %136, i32 0, i32 19, !dbg !6820
  %arrayidx225 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work224, i64 0, i64 4, !dbg !6820
  %work226 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx225, i32 0, i32 0, !dbg !6820
  %entry227 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work226, i32 0, i32 1, !dbg !6820
  call void @INIT_LIST_HEAD(%struct.list_head* %entry227) #12, !dbg !6820
  %137 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6820
  %work228 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %137, i32 0, i32 19, !dbg !6820
  %arrayidx229 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work228, i64 0, i64 4, !dbg !6820
  %work230 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx229, i32 0, i32 0, !dbg !6820
  %func231 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work230, i32 0, i32 2, !dbg !6820
  store void (%struct.work_struct*)* @mtip_workq_sdbf4, void (%struct.work_struct*)** %func231, align 8, !dbg !6820
  br label %do.end232, !dbg !6820

do.end232:                                        ; preds = %do.body214
  br label %do.body233, !dbg !6822

do.body233:                                       ; preds = %do.end232
  %138 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6823
  %work234 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %138, i32 0, i32 19, !dbg !6823
  %arrayidx235 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work234, i64 0, i64 5, !dbg !6823
  %work236 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx235, i32 0, i32 0, !dbg !6823
  call void @__init_work(%struct.work_struct* %work236, i32 0) #12, !dbg !6823
  %139 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6823
  %work237 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %139, i32 0, i32 19, !dbg !6823
  %arrayidx238 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work237, i64 0, i64 5, !dbg !6823
  %work239 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx238, i32 0, i32 0, !dbg !6823
  %data240 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work239, i32 0, i32 0, !dbg !6823
  %counter242 = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral241, i32 0, i32 0, !dbg !6823
  store i64 68719476704, i64* %counter242, align 8, !dbg !6823
  %140 = bitcast %struct.atomic64_t* %data240 to i8*, !dbg !6823
  %141 = bitcast %struct.atomic64_t* %.compoundliteral241 to i8*, !dbg !6823
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %140, i8* align 8 %141, i64 8, i1 false), !dbg !6823
  %142 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6823
  %work243 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %142, i32 0, i32 19, !dbg !6823
  %arrayidx244 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work243, i64 0, i64 5, !dbg !6823
  %work245 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx244, i32 0, i32 0, !dbg !6823
  %entry246 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work245, i32 0, i32 1, !dbg !6823
  call void @INIT_LIST_HEAD(%struct.list_head* %entry246) #12, !dbg !6823
  %143 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6823
  %work247 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %143, i32 0, i32 19, !dbg !6823
  %arrayidx248 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work247, i64 0, i64 5, !dbg !6823
  %work249 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx248, i32 0, i32 0, !dbg !6823
  %func250 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work249, i32 0, i32 2, !dbg !6823
  store void (%struct.work_struct*)* @mtip_workq_sdbf5, void (%struct.work_struct*)** %func250, align 8, !dbg !6823
  br label %do.end251, !dbg !6823

do.end251:                                        ; preds = %do.body233
  br label %do.body252, !dbg !6825

do.body252:                                       ; preds = %do.end251
  %144 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6826
  %work253 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %144, i32 0, i32 19, !dbg !6826
  %arrayidx254 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work253, i64 0, i64 6, !dbg !6826
  %work255 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx254, i32 0, i32 0, !dbg !6826
  call void @__init_work(%struct.work_struct* %work255, i32 0) #12, !dbg !6826
  %145 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6826
  %work256 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %145, i32 0, i32 19, !dbg !6826
  %arrayidx257 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work256, i64 0, i64 6, !dbg !6826
  %work258 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx257, i32 0, i32 0, !dbg !6826
  %data259 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work258, i32 0, i32 0, !dbg !6826
  %counter261 = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral260, i32 0, i32 0, !dbg !6826
  store i64 68719476704, i64* %counter261, align 8, !dbg !6826
  %146 = bitcast %struct.atomic64_t* %data259 to i8*, !dbg !6826
  %147 = bitcast %struct.atomic64_t* %.compoundliteral260 to i8*, !dbg !6826
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %147, i64 8, i1 false), !dbg !6826
  %148 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6826
  %work262 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %148, i32 0, i32 19, !dbg !6826
  %arrayidx263 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work262, i64 0, i64 6, !dbg !6826
  %work264 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx263, i32 0, i32 0, !dbg !6826
  %entry265 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work264, i32 0, i32 1, !dbg !6826
  call void @INIT_LIST_HEAD(%struct.list_head* %entry265) #12, !dbg !6826
  %149 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6826
  %work266 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %149, i32 0, i32 19, !dbg !6826
  %arrayidx267 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work266, i64 0, i64 6, !dbg !6826
  %work268 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx267, i32 0, i32 0, !dbg !6826
  %func269 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work268, i32 0, i32 2, !dbg !6826
  store void (%struct.work_struct*)* @mtip_workq_sdbf6, void (%struct.work_struct*)** %func269, align 8, !dbg !6826
  br label %do.end270, !dbg !6826

do.end270:                                        ; preds = %do.body252
  br label %do.body271, !dbg !6828

do.body271:                                       ; preds = %do.end270
  %150 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6829
  %work272 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %150, i32 0, i32 19, !dbg !6829
  %arrayidx273 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work272, i64 0, i64 7, !dbg !6829
  %work274 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx273, i32 0, i32 0, !dbg !6829
  call void @__init_work(%struct.work_struct* %work274, i32 0) #12, !dbg !6829
  %151 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6829
  %work275 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %151, i32 0, i32 19, !dbg !6829
  %arrayidx276 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work275, i64 0, i64 7, !dbg !6829
  %work277 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx276, i32 0, i32 0, !dbg !6829
  %data278 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work277, i32 0, i32 0, !dbg !6829
  %counter280 = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral279, i32 0, i32 0, !dbg !6829
  store i64 68719476704, i64* %counter280, align 8, !dbg !6829
  %152 = bitcast %struct.atomic64_t* %data278 to i8*, !dbg !6829
  %153 = bitcast %struct.atomic64_t* %.compoundliteral279 to i8*, !dbg !6829
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %153, i64 8, i1 false), !dbg !6829
  %154 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6829
  %work281 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %154, i32 0, i32 19, !dbg !6829
  %arrayidx282 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work281, i64 0, i64 7, !dbg !6829
  %work283 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx282, i32 0, i32 0, !dbg !6829
  %entry284 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work283, i32 0, i32 1, !dbg !6829
  call void @INIT_LIST_HEAD(%struct.list_head* %entry284) #12, !dbg !6829
  %155 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6829
  %work285 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %155, i32 0, i32 19, !dbg !6829
  %arrayidx286 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work285, i64 0, i64 7, !dbg !6829
  %work287 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx286, i32 0, i32 0, !dbg !6829
  %func288 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work287, i32 0, i32 2, !dbg !6829
  store void (%struct.work_struct*)* @mtip_workq_sdbf7, void (%struct.work_struct*)** %func288, align 8, !dbg !6829
  br label %do.end289, !dbg !6829

do.end289:                                        ; preds = %do.body271
  %156 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6831
  call void @pci_set_master(%struct.pci_dev* %156) #12, !dbg !6832
  %157 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6833
  %call290 = call i32 @pci_enable_msi(%struct.pci_dev* %157) #12, !dbg !6834
  store i32 %call290, i32* %rv, align 4, !dbg !6835
  %158 = load i32, i32* %rv, align 4, !dbg !6836
  %tobool291 = icmp ne i32 %158, 0, !dbg !6836
  br i1 %tobool291, label %if.then292, label %if.end294, !dbg !6838

if.then292:                                       ; preds = %do.end289
  %159 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6839
  %dev293 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %159, i32 0, i32 41, !dbg !6839
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev293, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.14, i64 0, i64 0)) #13, !dbg !6839
  br label %msi_initialize_err, !dbg !6841

if.end294:                                        ; preds = %do.end289
  %160 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6842
  %161 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6843
  call void @mtip_fix_ero_nosnoop(%struct.driver_data* %160, %struct.pci_dev* %161) #12, !dbg !6844
  %162 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6845
  %call295 = call i32 @mtip_block_initialize(%struct.driver_data* %162) #12, !dbg !6846
  store i32 %call295, i32* %rv, align 4, !dbg !6847
  %163 = load i32, i32* %rv, align 4, !dbg !6848
  %cmp296 = icmp slt i32 %163, 0, !dbg !6850
  br i1 %cmp296, label %if.then298, label %if.end300, !dbg !6851

if.then298:                                       ; preds = %if.end294
  %164 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6852
  %dev299 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %164, i32 0, i32 41, !dbg !6852
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev299, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15, i64 0, i64 0)) #13, !dbg !6852
  br label %block_initialize_err, !dbg !6854

if.end300:                                        ; preds = %if.end294
  %165 = load i32, i32* @instance, align 4, !dbg !6855
  %inc301 = add i32 %165, 1, !dbg !6855
  store i32 %inc301, i32* @instance, align 4, !dbg !6855
  %166 = load i32, i32* %rv, align 4, !dbg !6856
  %cmp302 = icmp ne i32 %166, 60753, !dbg !6858
  br i1 %cmp302, label %if.then304, label %if.else305, !dbg !6859

if.then304:                                       ; preds = %if.end300
  %167 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6860
  %dd_flag = getelementptr inbounds %struct.driver_data, %struct.driver_data* %167, i32 0, i32 11, !dbg !6861
  call void @set_bit(i64 7, i64* %dd_flag) #12, !dbg !6862
  br label %if.end306, !dbg !6862

if.else305:                                       ; preds = %if.end300
  store i32 0, i32* %rv, align 4, !dbg !6863
  br label %if.end306

if.end306:                                        ; preds = %if.else305, %if.then304
  br label %do.body307, !dbg !6864

do.body307:                                       ; preds = %if.end306
  br label %do.body308, !dbg !6865

do.body308:                                       ; preds = %do.body307
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6866, metadata !DIExpression()), !dbg !6868
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6869, metadata !DIExpression()), !dbg !6868
  %cmp309 = icmp eq i64* %__dummy, %__dummy2, !dbg !6868
  %conv310 = zext i1 %cmp309 to i32, !dbg !6868
  store i32 1, i32* %tmp, align 4, !dbg !6868
  %168 = load i32, i32* %tmp, align 4, !dbg !6868
  br label %do.body311, !dbg !6870

do.body311:                                       ; preds = %do.body308
  br label %do.body312, !dbg !6871

do.body312:                                       ; preds = %do.body311
  br label %do.body313, !dbg !6872

do.body313:                                       ; preds = %do.body312
  call void @llvm.dbg.declare(metadata i64* %__dummy314, metadata !6874, metadata !DIExpression()), !dbg !6877
  call void @llvm.dbg.declare(metadata i64* %__dummy2315, metadata !6878, metadata !DIExpression()), !dbg !6877
  %cmp316 = icmp eq i64* %__dummy314, %__dummy2315, !dbg !6877
  %conv317 = zext i1 %cmp316 to i32, !dbg !6877
  store i32 1, i32* %tmp318, align 4, !dbg !6877
  %169 = load i32, i32* %tmp318, align 4, !dbg !6877
  %call319 = call i64 @arch_local_irq_save() #12, !dbg !6879
  store i64 %call319, i64* %flags, align 8, !dbg !6879
  br label %do.end320, !dbg !6879

do.end320:                                        ; preds = %do.body313
  br label %do.end321, !dbg !6872

do.end321:                                        ; preds = %do.end320
  br label %do.body322, !dbg !6871

do.body322:                                       ; preds = %do.end321
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !6880, !srcloc !6881
  br label %do.body323, !dbg !6880

do.body323:                                       ; preds = %do.body322
  store %struct.spinlock* @dev_lock, %struct.spinlock** %lock.addr.i, align 8
  %170 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6882
  %171 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %170, i32 0, i32 0, !dbg !6883
  %rlock.i = bitcast %union.anon.1* %171 to %struct.raw_spinlock*, !dbg !6883
  br label %do.end325, !dbg !6884

do.end325:                                        ; preds = %do.body323
  br label %do.end326, !dbg !6880

do.end326:                                        ; preds = %do.end325
  br label %do.end327, !dbg !6871

do.end327:                                        ; preds = %do.end326
  br label %do.end328, !dbg !6870

do.end328:                                        ; preds = %do.end327
  br label %do.end329, !dbg !6865

do.end329:                                        ; preds = %do.end328
  %172 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6885
  %online_list330 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %172, i32 0, i32 22, !dbg !6886
  call void @list_add(%struct.list_head* %online_list330, %struct.list_head* @online_list) #12, !dbg !6887
  %173 = load i64, i64* %flags, align 8, !dbg !6888
  store %struct.spinlock* @dev_lock, %struct.spinlock** %lock.addr.i346, align 8
  store i64 %173, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1049, metadata !6889, metadata !DIExpression()) #11, !dbg !6892
  call void @llvm.dbg.declare(metadata !1049, metadata !6893, metadata !DIExpression()) #11, !dbg !6892
  store i32 1, i32* %tmp.i, align 4, !dbg !6892
  %174 = load i32, i32* %tmp.i, align 4, !dbg !6892
  call void @llvm.dbg.declare(metadata !1049, metadata !6894, metadata !DIExpression()) #11, !dbg !6899
  call void @llvm.dbg.declare(metadata !1049, metadata !6900, metadata !DIExpression()) #11, !dbg !6899
  store i32 1, i32* %tmp8.i, align 4, !dbg !6899
  %175 = load i32, i32* %tmp8.i, align 4, !dbg !6899
  %176 = load i64, i64* %flags.addr.i, align 8, !dbg !6901
  call void @arch_local_irq_restore(i64 %176) #14, !dbg !6901
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !6902, !srcloc !6904
  %177 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i346, align 8, !dbg !6905
  %178 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %177, i32 0, i32 0, !dbg !6905
  %rlock.i347 = bitcast %union.anon.1* %178 to %struct.raw_spinlock*, !dbg !6905
  br label %done, !dbg !6907

block_initialize_err:                             ; preds = %if.then298
  call void @llvm.dbg.label(metadata !6908), !dbg !6909
  %179 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6910
  call void @pci_disable_msi(%struct.pci_dev* %179) #12, !dbg !6911
  br label %msi_initialize_err, !dbg !6911

msi_initialize_err:                               ; preds = %block_initialize_err, %if.then292
  call void @llvm.dbg.label(metadata !6912), !dbg !6913
  %180 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6914
  %isr_workq331 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %180, i32 0, i32 17, !dbg !6916
  %181 = load %struct.workqueue_struct*, %struct.workqueue_struct** %isr_workq331, align 8, !dbg !6916
  %tobool332 = icmp ne %struct.workqueue_struct* %181, null, !dbg !6914
  br i1 %tobool332, label %if.then333, label %if.end345, !dbg !6917

if.then333:                                       ; preds = %msi_initialize_err
  %182 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6918
  %isr_workq334 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %182, i32 0, i32 17, !dbg !6920
  %183 = load %struct.workqueue_struct*, %struct.workqueue_struct** %isr_workq334, align 8, !dbg !6920
  call void @flush_workqueue(%struct.workqueue_struct* %183) #12, !dbg !6921
  %184 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6922
  %isr_workq335 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %184, i32 0, i32 17, !dbg !6923
  %185 = load %struct.workqueue_struct*, %struct.workqueue_struct** %isr_workq335, align 8, !dbg !6923
  call void @destroy_workqueue(%struct.workqueue_struct* %185) #12, !dbg !6924
  %186 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6925
  %work336 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %186, i32 0, i32 19, !dbg !6926
  %arrayidx337 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work336, i64 0, i64 0, !dbg !6925
  %cpu_binding338 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx337, i32 0, i32 2, !dbg !6927
  %187 = load i32, i32* %cpu_binding338, align 8, !dbg !6927
  call void @drop_cpu(i32 %187) #12, !dbg !6928
  %188 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6929
  %work339 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %188, i32 0, i32 19, !dbg !6930
  %arrayidx340 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work339, i64 0, i64 1, !dbg !6929
  %cpu_binding341 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx340, i32 0, i32 2, !dbg !6931
  %189 = load i32, i32* %cpu_binding341, align 8, !dbg !6931
  call void @drop_cpu(i32 %189) #12, !dbg !6932
  %190 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6933
  %work342 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %190, i32 0, i32 19, !dbg !6934
  %arrayidx343 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work342, i64 0, i64 2, !dbg !6933
  %cpu_binding344 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx343, i32 0, i32 2, !dbg !6935
  %191 = load i32, i32* %cpu_binding344, align 8, !dbg !6935
  call void @drop_cpu(i32 %191) #12, !dbg !6936
  br label %if.end345, !dbg !6937

if.end345:                                        ; preds = %if.then333, %msi_initialize_err
  br label %setmask_err, !dbg !6916

setmask_err:                                      ; preds = %if.end345, %if.then40, %if.then27
  call void @llvm.dbg.label(metadata !6938), !dbg !6939
  %192 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6940
  call void @pcim_iounmap_regions(%struct.pci_dev* %192, i32 32) #12, !dbg !6941
  br label %iomap_err, !dbg !6941

iomap_err:                                        ; preds = %setmask_err, %if.then21, %if.then16
  call void @llvm.dbg.label(metadata !6942), !dbg !6943
  %193 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !6944
  %194 = bitcast %struct.driver_data* %193 to i8*, !dbg !6944
  call void @kfree(i8* %194) #12, !dbg !6945
  %195 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6946
  call void @pci_set_drvdata(%struct.pci_dev* %195, i8* null) #12, !dbg !6947
  %196 = load i32, i32* %rv, align 4, !dbg !6948
  store i32 %196, i32* %retval, align 4, !dbg !6949
  br label %return, !dbg !6949

done:                                             ; preds = %do.end329
  call void @llvm.dbg.label(metadata !6950), !dbg !6951
  %197 = load i32, i32* %rv, align 4, !dbg !6952
  store i32 %197, i32* %retval, align 4, !dbg !6953
  br label %return, !dbg !6953

return:                                           ; preds = %done, %iomap_err, %if.then11
  %198 = load i32, i32* %retval, align 4, !dbg !6954
  ret i32 %198, !dbg !6954
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mtip_pci_remove(%struct.pci_dev* %pdev) #2 !dbg !6955 {
entry:
  %lock.addr.i96 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i96, metadata !6526, metadata !DIExpression()), !dbg !6956
  %flags.addr.i97 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i97, metadata !6532, metadata !DIExpression()), !dbg !6958
  %tmp.i98 = alloca i32, align 4
  %tmp8.i99 = alloca i32, align 4
  %lock.addr.i94 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i94, metadata !6456, metadata !DIExpression()), !dbg !6959
  %v.addr.i1.i87 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i87, metadata !6966, metadata !DIExpression()), !dbg !6973
  %v.addr.i.i88 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i88, metadata !6979, metadata !DIExpression()), !dbg !6987
  %size.addr.i.i89 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i89, metadata !6989, metadata !DIExpression()), !dbg !6990
  %v.addr.i90 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i90, metadata !6991, metadata !DIExpression()), !dbg !6992
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !6966, metadata !DIExpression()), !dbg !6993
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6979, metadata !DIExpression()), !dbg !6996
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6989, metadata !DIExpression()), !dbg !6998
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !6991, metadata !DIExpression()), !dbg !6999
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !7000, metadata !DIExpression()), !dbg !7005
  %lock.addr.i85 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i85, metadata !6526, metadata !DIExpression()), !dbg !7007
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6532, metadata !DIExpression()), !dbg !7009
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6456, metadata !DIExpression()), !dbg !7010
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %dd = alloca %struct.driver_data*, align 8
  %flags = alloca i64, align 8
  %to = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__dummy53 = alloca i64, align 8
  %__dummy254 = alloca i64, align 8
  %tmp57 = alloca i32, align 4
  %__dummy61 = alloca i64, align 8
  %__dummy262 = alloca i64, align 8
  %tmp65 = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !7017, metadata !DIExpression()), !dbg !7018
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd, metadata !7019, metadata !DIExpression()), !dbg !7020
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7021
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #12, !dbg !7022
  %1 = bitcast i8* %call to %struct.driver_data*, !dbg !7022
  store %struct.driver_data* %1, %struct.driver_data** %dd, align 8, !dbg !7020
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7023, metadata !DIExpression()), !dbg !7024
  call void @llvm.dbg.declare(metadata i64* %to, metadata !7025, metadata !DIExpression()), !dbg !7026
  %2 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !7027
  %dd_flag = getelementptr inbounds %struct.driver_data, %struct.driver_data* %2, i32 0, i32 11, !dbg !7028
  call void @set_bit(i64 9, i64* %dd_flag) #12, !dbg !7029
  br label %do.body, !dbg !7030

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7031

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7032, metadata !DIExpression()), !dbg !7034
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7035, metadata !DIExpression()), !dbg !7034
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7034
  %conv = zext i1 %cmp to i32, !dbg !7034
  store i32 1, i32* %tmp, align 4, !dbg !7034
  %3 = load i32, i32* %tmp, align 4, !dbg !7034
  br label %do.body2, !dbg !7036

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !7037

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !7038

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !7040, metadata !DIExpression()), !dbg !7043
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !7044, metadata !DIExpression()), !dbg !7043
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !7043
  %conv8 = zext i1 %cmp7 to i32, !dbg !7043
  store i32 1, i32* %tmp9, align 4, !dbg !7043
  %4 = load i32, i32* %tmp9, align 4, !dbg !7043
  %call10 = call i64 @arch_local_irq_save() #12, !dbg !7045
  store i64 %call10, i64* %flags, align 8, !dbg !7045
  br label %do.end, !dbg !7045

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !7038

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !7037

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !7046, !srcloc !7047
  br label %do.body13, !dbg !7046

do.body13:                                        ; preds = %do.body12
  store %struct.spinlock* @dev_lock, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7048
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !7049
  %rlock.i = bitcast %union.anon.1* %6 to %struct.raw_spinlock*, !dbg !7049
  br label %do.end15, !dbg !7050

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !7046

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !7037

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !7036

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !7031

do.end19:                                         ; preds = %do.end18
  %7 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !7051
  %online_list = getelementptr inbounds %struct.driver_data, %struct.driver_data* %7, i32 0, i32 22, !dbg !7052
  call void @list_del_init(%struct.list_head* %online_list) #12, !dbg !7053
  %8 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !7054
  %remove_list = getelementptr inbounds %struct.driver_data, %struct.driver_data* %8, i32 0, i32 23, !dbg !7055
  call void @list_add(%struct.list_head* %remove_list, %struct.list_head* @removing_list) #12, !dbg !7056
  %9 = load i64, i64* %flags, align 8, !dbg !7057
  store %struct.spinlock* @dev_lock, %struct.spinlock** %lock.addr.i85, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1049, metadata !6889, metadata !DIExpression()) #11, !dbg !7058
  call void @llvm.dbg.declare(metadata !1049, metadata !6893, metadata !DIExpression()) #11, !dbg !7058
  store i32 1, i32* %tmp.i, align 4, !dbg !7058
  %10 = load i32, i32* %tmp.i, align 4, !dbg !7058
  call void @llvm.dbg.declare(metadata !1049, metadata !6894, metadata !DIExpression()) #11, !dbg !7059
  call void @llvm.dbg.declare(metadata !1049, metadata !6900, metadata !DIExpression()) #11, !dbg !7059
  store i32 1, i32* %tmp8.i, align 4, !dbg !7059
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !7059
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !7060
  call void @arch_local_irq_restore(i64 %12) #14, !dbg !7060
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !7061, !srcloc !6904
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i85, align 8, !dbg !7062
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !7062
  %rlock.i86 = bitcast %union.anon.1* %14 to %struct.raw_spinlock*, !dbg !7062
  %15 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7063
  %call20 = call zeroext i1 @mtip_check_surprise_removal(%struct.pci_dev* %15) #12, !dbg !7064
  %16 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !7065
  %pdev21 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %16, i32 0, i32 4, !dbg !7066
  %17 = load %struct.pci_dev*, %struct.pci_dev** %pdev21, align 8, !dbg !7066
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 43, !dbg !7067
  %18 = load i32, i32* %irq, align 4, !dbg !7067
  call void @synchronize_irq(i32 %18) #12, !dbg !7068
  %19 = load volatile i64, i64* @jiffies, align 8, !dbg !7069
  store i32 4000, i32* %m.addr.i, align 4
  %20 = load i32, i32* %m.addr.i, align 4, !dbg !7070
  %21 = call i1 @llvm.is.constant.i32(i32 %20) #11, !dbg !7072
  br i1 %21, label %if.then.i, label %if.else.i, !dbg !7073

if.then.i:                                        ; preds = %do.end19
  %22 = load i32, i32* %m.addr.i, align 4, !dbg !7074
  %cmp.i = icmp slt i32 %22, 0, !dbg !7077
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !7078

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !7079
  br label %msecs_to_jiffies.exit, !dbg !7079

if.end.i:                                         ; preds = %if.then.i
  %23 = load i32, i32* %m.addr.i, align 4, !dbg !7080
  %call.i = call i64 @_msecs_to_jiffies(i32 %23) #14, !dbg !7081
  store i64 %call.i, i64* %retval.i, align 8, !dbg !7082
  br label %msecs_to_jiffies.exit, !dbg !7082

if.else.i:                                        ; preds = %do.end19
  %24 = load i32, i32* %m.addr.i, align 4, !dbg !7083
  %call2.i = call i64 @__msecs_to_jiffies(i32 %24) #14, !dbg !7085
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !7086
  br label %msecs_to_jiffies.exit, !dbg !7086

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %25 = load i64, i64* %retval.i, align 8, !dbg !7087
  %add = add i64 %19, %25, !dbg !7088
  store i64 %add, i64* %to, align 8, !dbg !7089
  br label %do.body23, !dbg !7090

do.body23:                                        ; preds = %land.end, %msecs_to_jiffies.exit
  call void @msleep(i32 20) #12, !dbg !7091
  br label %do.cond, !dbg !7093

do.cond:                                          ; preds = %do.body23
  %26 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !7094
  %irq_workers_active = getelementptr inbounds %struct.driver_data, %struct.driver_data* %26, i32 0, i32 18, !dbg !7095
  store %struct.atomic_t* %irq_workers_active, %struct.atomic_t** %v.addr.i, align 8
  %27 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7096
  %28 = bitcast %struct.atomic_t* %27 to i8*, !dbg !7096
  store i8* %28, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %29 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7097
  %30 = load i64, i64* %size.addr.i.i, align 8, !dbg !7098
  %conv.i.i = trunc i64 %30 to i32, !dbg !7098
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %29, i32 %conv.i.i) #14, !dbg !7099
  %31 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7100
  %32 = load i64, i64* %size.addr.i.i, align 8, !dbg !7100
  call void @kcsan_check_access(i8* %31, i64 %32, i32 4) #14, !dbg !7100
  %33 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7101
  store %struct.atomic_t* %33, %struct.atomic_t** %v.addr.i1.i, align 8
  %34 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !7102
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %34, i32 0, i32 0, !dbg !7102
  %35 = load volatile i32, i32* %counter.i.i, align 4, !dbg !7102
  %cmp25 = icmp ne i32 %35, 0, !dbg !7103
  br i1 %cmp25, label %land.rhs, label %land.end, !dbg !7104

land.rhs:                                         ; preds = %do.cond
  %36 = load volatile i64, i64* @jiffies, align 8, !dbg !7105
  %37 = load i64, i64* %to, align 8, !dbg !7105
  %sub = sub i64 %36, %37, !dbg !7105
  %cmp27 = icmp slt i64 %sub, 0, !dbg !7105
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %38 = phi i1 [ false, %do.cond ], [ %cmp27, %land.rhs ], !dbg !7106
  br i1 %38, label %do.body23, label %do.end29, !dbg !7093, !llvm.loop !7107

do.end29:                                         ; preds = %land.end
  %39 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !7109
  %sr = getelementptr inbounds %struct.driver_data, %struct.driver_data* %39, i32 0, i32 14, !dbg !7111
  %40 = load i8, i8* %sr, align 8, !dbg !7111
  %tobool = trunc i8 %40 to i1, !dbg !7111
  br i1 %tobool, label %if.end, label %if.then, !dbg !7112

if.then:                                          ; preds = %do.end29
  %41 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !7113
  %bdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %41, i32 0, i32 21, !dbg !7114
  %42 = load %struct.block_device*, %struct.block_device** %bdev, align 8, !dbg !7114
  %call30 = call i32 @fsync_bdev(%struct.block_device* %42) #12, !dbg !7115
  br label %if.end, !dbg !7115

if.end:                                           ; preds = %if.then, %do.end29
  %43 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !7116
  %irq_workers_active31 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %43, i32 0, i32 18, !dbg !7117
  store %struct.atomic_t* %irq_workers_active31, %struct.atomic_t** %v.addr.i90, align 8
  %44 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i90, align 8, !dbg !7118
  %45 = bitcast %struct.atomic_t* %44 to i8*, !dbg !7118
  store i8* %45, i8** %v.addr.i.i88, align 8
  store i64 4, i64* %size.addr.i.i89, align 8
  %46 = load i8*, i8** %v.addr.i.i88, align 8, !dbg !7119
  %47 = load i64, i64* %size.addr.i.i89, align 8, !dbg !7120
  %conv.i.i91 = trunc i64 %47 to i32, !dbg !7120
  %call.i.i92 = call zeroext i1 @kasan_check_read(i8* %46, i32 %conv.i.i91) #14, !dbg !7121
  %48 = load i8*, i8** %v.addr.i.i88, align 8, !dbg !7122
  %49 = load i64, i64* %size.addr.i.i89, align 8, !dbg !7122
  call void @kcsan_check_access(i8* %48, i64 %49, i32 4) #14, !dbg !7122
  %50 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i90, align 8, !dbg !7123
  store %struct.atomic_t* %50, %struct.atomic_t** %v.addr.i1.i87, align 8
  %51 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i87, align 8, !dbg !7124
  %counter.i.i93 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %51, i32 0, i32 0, !dbg !7124
  %52 = load volatile i32, i32* %counter.i.i93, align 4, !dbg !7124
  %cmp33 = icmp ne i32 %52, 0, !dbg !7125
  br i1 %cmp33, label %if.then35, label %if.end37, !dbg !7126

if.then35:                                        ; preds = %if.end
  %53 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !7127
  %pdev36 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %53, i32 0, i32 4, !dbg !7127
  %54 = load %struct.pci_dev*, %struct.pci_dev** %pdev36, align 8, !dbg !7127
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %54, i32 0, i32 41, !dbg !7127
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.119, i64 0, i64 0)) #13, !dbg !7127
  br label %if.end37, !dbg !7129

if.end37:                                         ; preds = %if.then35, %if.end
  %55 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !7130
  %queue = getelementptr inbounds %struct.driver_data, %struct.driver_data* %55, i32 0, i32 5, !dbg !7131
  %56 = load %struct.request_queue*, %struct.request_queue** %queue, align 8, !dbg !7131
  call void @blk_set_queue_dying(%struct.request_queue* %56) #12, !dbg !7132
  %57 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !7133
  %dd_flag38 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %57, i32 0, i32 11, !dbg !7134
  call void @set_bit(i64 1, i64* %dd_flag38) #12, !dbg !7135
  %58 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !7136
  %call39 = call i32 @mtip_block_remove(%struct.driver_data* %58) #12, !dbg !7137
  %59 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !7138
  %isr_workq = getelementptr inbounds %struct.driver_data, %struct.driver_data* %59, i32 0, i32 17, !dbg !7140
  %60 = load %struct.workqueue_struct*, %struct.workqueue_struct** %isr_workq, align 8, !dbg !7140
  %tobool40 = icmp ne %struct.workqueue_struct* %60, null, !dbg !7138
  br i1 %tobool40, label %if.then41, label %if.end50, !dbg !7141

if.then41:                                        ; preds = %if.end37
  %61 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !7142
  %isr_workq42 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %61, i32 0, i32 17, !dbg !7144
  %62 = load %struct.workqueue_struct*, %struct.workqueue_struct** %isr_workq42, align 8, !dbg !7144
  call void @flush_workqueue(%struct.workqueue_struct* %62) #12, !dbg !7145
  %63 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !7146
  %isr_workq43 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %63, i32 0, i32 17, !dbg !7147
  %64 = load %struct.workqueue_struct*, %struct.workqueue_struct** %isr_workq43, align 8, !dbg !7147
  call void @destroy_workqueue(%struct.workqueue_struct* %64) #12, !dbg !7148
  %65 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !7149
  %work = getelementptr inbounds %struct.driver_data, %struct.driver_data* %65, i32 0, i32 19, !dbg !7150
  %arrayidx = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work, i64 0, i64 0, !dbg !7149
  %cpu_binding = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx, i32 0, i32 2, !dbg !7151
  %66 = load i32, i32* %cpu_binding, align 8, !dbg !7151
  call void @drop_cpu(i32 %66) #12, !dbg !7152
  %67 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !7153
  %work44 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %67, i32 0, i32 19, !dbg !7154
  %arrayidx45 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work44, i64 0, i64 1, !dbg !7153
  %cpu_binding46 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx45, i32 0, i32 2, !dbg !7155
  %68 = load i32, i32* %cpu_binding46, align 8, !dbg !7155
  call void @drop_cpu(i32 %68) #12, !dbg !7156
  %69 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !7157
  %work47 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %69, i32 0, i32 19, !dbg !7158
  %arrayidx48 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work47, i64 0, i64 2, !dbg !7157
  %cpu_binding49 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx48, i32 0, i32 2, !dbg !7159
  %70 = load i32, i32* %cpu_binding49, align 8, !dbg !7159
  call void @drop_cpu(i32 %70) #12, !dbg !7160
  br label %if.end50, !dbg !7161

if.end50:                                         ; preds = %if.then41, %if.end37
  %71 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7162
  call void @pci_disable_msi(%struct.pci_dev* %71) #12, !dbg !7163
  br label %do.body51, !dbg !7164

do.body51:                                        ; preds = %if.end50
  br label %do.body52, !dbg !7165

do.body52:                                        ; preds = %do.body51
  call void @llvm.dbg.declare(metadata i64* %__dummy53, metadata !7166, metadata !DIExpression()), !dbg !7168
  call void @llvm.dbg.declare(metadata i64* %__dummy254, metadata !7169, metadata !DIExpression()), !dbg !7168
  %cmp55 = icmp eq i64* %__dummy53, %__dummy254, !dbg !7168
  %conv56 = zext i1 %cmp55 to i32, !dbg !7168
  store i32 1, i32* %tmp57, align 4, !dbg !7168
  %72 = load i32, i32* %tmp57, align 4, !dbg !7168
  br label %do.body58, !dbg !7170

do.body58:                                        ; preds = %do.body52
  br label %do.body59, !dbg !7171

do.body59:                                        ; preds = %do.body58
  br label %do.body60, !dbg !7172

do.body60:                                        ; preds = %do.body59
  call void @llvm.dbg.declare(metadata i64* %__dummy61, metadata !7174, metadata !DIExpression()), !dbg !7177
  call void @llvm.dbg.declare(metadata i64* %__dummy262, metadata !7178, metadata !DIExpression()), !dbg !7177
  %cmp63 = icmp eq i64* %__dummy61, %__dummy262, !dbg !7177
  %conv64 = zext i1 %cmp63 to i32, !dbg !7177
  store i32 1, i32* %tmp65, align 4, !dbg !7177
  %73 = load i32, i32* %tmp65, align 4, !dbg !7177
  %call66 = call i64 @arch_local_irq_save() #12, !dbg !7179
  store i64 %call66, i64* %flags, align 8, !dbg !7179
  br label %do.end68, !dbg !7179

do.end68:                                         ; preds = %do.body60
  br label %do.end70, !dbg !7172

do.end70:                                         ; preds = %do.end68
  br label %do.body71, !dbg !7171

do.body71:                                        ; preds = %do.end70
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !7180, !srcloc !7181
  br label %do.body72, !dbg !7180

do.body72:                                        ; preds = %do.body71
  store %struct.spinlock* @dev_lock, %struct.spinlock** %lock.addr.i94, align 8
  %74 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i94, align 8, !dbg !7182
  %75 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %74, i32 0, i32 0, !dbg !7183
  %rlock.i95 = bitcast %union.anon.1* %75 to %struct.raw_spinlock*, !dbg !7183
  br label %do.end75, !dbg !7184

do.end75:                                         ; preds = %do.body72
  br label %do.end77, !dbg !7180

do.end77:                                         ; preds = %do.end75
  br label %do.end79, !dbg !7171

do.end79:                                         ; preds = %do.end77
  br label %do.end81, !dbg !7170

do.end81:                                         ; preds = %do.end79
  br label %do.end83, !dbg !7165

do.end83:                                         ; preds = %do.end81
  %76 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !7185
  %remove_list84 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %76, i32 0, i32 23, !dbg !7186
  call void @list_del_init(%struct.list_head* %remove_list84) #12, !dbg !7187
  %77 = load i64, i64* %flags, align 8, !dbg !7188
  store %struct.spinlock* @dev_lock, %struct.spinlock** %lock.addr.i96, align 8
  store i64 %77, i64* %flags.addr.i97, align 8
  call void @llvm.dbg.declare(metadata !1049, metadata !6889, metadata !DIExpression()) #11, !dbg !7189
  call void @llvm.dbg.declare(metadata !1049, metadata !6893, metadata !DIExpression()) #11, !dbg !7189
  store i32 1, i32* %tmp.i98, align 4, !dbg !7189
  %78 = load i32, i32* %tmp.i98, align 4, !dbg !7189
  call void @llvm.dbg.declare(metadata !1049, metadata !6894, metadata !DIExpression()) #11, !dbg !7190
  call void @llvm.dbg.declare(metadata !1049, metadata !6900, metadata !DIExpression()) #11, !dbg !7190
  store i32 1, i32* %tmp8.i99, align 4, !dbg !7190
  %79 = load i32, i32* %tmp8.i99, align 4, !dbg !7190
  %80 = load i64, i64* %flags.addr.i97, align 8, !dbg !7191
  call void @arch_local_irq_restore(i64 %80) #14, !dbg !7191
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !7192, !srcloc !6904
  %81 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i96, align 8, !dbg !7193
  %82 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %81, i32 0, i32 0, !dbg !7193
  %rlock.i100 = bitcast %union.anon.1* %82 to %struct.raw_spinlock*, !dbg !7193
  %83 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !7194
  %84 = bitcast %struct.driver_data* %83 to i8*, !dbg !7194
  call void @kfree(i8* %84) #12, !dbg !7195
  %85 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7196
  call void @pcim_iounmap_regions(%struct.pci_dev* %85, i32 32) #12, !dbg !7197
  %86 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7198
  call void @pci_set_drvdata(%struct.pci_dev* %86, i8* null) #12, !dbg !7199
  ret void, !dbg !7200
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_pci_suspend(%struct.pci_dev* %pdev, i32 %mesg.coerce) #2 !dbg !7201 {
entry:
  %retval = alloca i32, align 4
  %mesg = alloca %struct.pm_message, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %rv = alloca i32, align 4
  %dd = alloca %struct.driver_data*, align 8
  %coerce.dive = getelementptr inbounds %struct.pm_message, %struct.pm_message* %mesg, i32 0, i32 0
  store i32 %mesg.coerce, i32* %coerce.dive, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !7202, metadata !DIExpression()), !dbg !7203
  call void @llvm.dbg.declare(metadata %struct.pm_message* %mesg, metadata !7204, metadata !DIExpression()), !dbg !7205
  call void @llvm.dbg.declare(metadata i32* %rv, metadata !7206, metadata !DIExpression()), !dbg !7207
  store i32 0, i32* %rv, align 4, !dbg !7207
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd, metadata !7208, metadata !DIExpression()), !dbg !7209
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7210
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #12, !dbg !7211
  %1 = bitcast i8* %call to %struct.driver_data*, !dbg !7211
  store %struct.driver_data* %1, %struct.driver_data** %dd, align 8, !dbg !7209
  %2 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !7212
  %tobool = icmp ne %struct.driver_data* %2, null, !dbg !7212
  br i1 %tobool, label %if.end, label %if.then, !dbg !7214

if.then:                                          ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7215
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !7215
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.123, i64 0, i64 0)) #13, !dbg !7215
  store i32 -14, i32* %retval, align 4, !dbg !7217
  br label %return, !dbg !7217

if.end:                                           ; preds = %entry
  %4 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !7218
  %dd_flag = getelementptr inbounds %struct.driver_data, %struct.driver_data* %4, i32 0, i32 11, !dbg !7219
  call void @set_bit(i64 6, i64* %dd_flag) #12, !dbg !7220
  %5 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !7221
  %call1 = call i32 @mtip_block_suspend(%struct.driver_data* %5) #12, !dbg !7222
  store i32 %call1, i32* %rv, align 4, !dbg !7223
  %6 = load i32, i32* %rv, align 4, !dbg !7224
  %cmp = icmp slt i32 %6, 0, !dbg !7226
  br i1 %cmp, label %if.then2, label %if.end4, !dbg !7227

if.then2:                                         ; preds = %if.end
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7228
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 41, !dbg !7228
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.124, i64 0, i64 0)) #13, !dbg !7228
  %8 = load i32, i32* %rv, align 4, !dbg !7230
  store i32 %8, i32* %retval, align 4, !dbg !7231
  br label %return, !dbg !7231

if.end4:                                          ; preds = %if.end
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7232
  %call5 = call i32 @pci_save_state(%struct.pci_dev* %9) #12, !dbg !7233
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7234
  call void @pci_disable_device(%struct.pci_dev* %10) #12, !dbg !7235
  %11 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7236
  %call6 = call i32 @pci_set_power_state(%struct.pci_dev* %11, i32 3) #12, !dbg !7237
  %12 = load i32, i32* %rv, align 4, !dbg !7238
  store i32 %12, i32* %retval, align 4, !dbg !7239
  br label %return, !dbg !7239

return:                                           ; preds = %if.end4, %if.then2, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !7240
  ret i32 %13, !dbg !7240
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_pci_resume(%struct.pci_dev* %pdev) #2 !dbg !7241 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %rv = alloca i32, align 4
  %dd = alloca %struct.driver_data*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !7242, metadata !DIExpression()), !dbg !7243
  call void @llvm.dbg.declare(metadata i32* %rv, metadata !7244, metadata !DIExpression()), !dbg !7245
  store i32 0, i32* %rv, align 4, !dbg !7245
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd, metadata !7246, metadata !DIExpression()), !dbg !7247
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7248
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #12, !dbg !7249
  %1 = bitcast i8* %call to %struct.driver_data*, !dbg !7249
  store %struct.driver_data* %1, %struct.driver_data** %dd, align 8, !dbg !7250
  %2 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !7251
  %tobool = icmp ne %struct.driver_data* %2, null, !dbg !7251
  br i1 %tobool, label %if.end, label %if.then, !dbg !7253

if.then:                                          ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7254
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !7254
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.123, i64 0, i64 0)) #13, !dbg !7254
  store i32 -14, i32* %retval, align 4, !dbg !7256
  br label %return, !dbg !7256

if.end:                                           ; preds = %entry
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7257
  %call1 = call i32 @pci_set_power_state(%struct.pci_dev* %4, i32 0) #12, !dbg !7258
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7259
  call void @pci_restore_state(%struct.pci_dev* %5) #12, !dbg !7260
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7261
  %call2 = call i32 @pcim_enable_device(%struct.pci_dev* %6) #12, !dbg !7262
  store i32 %call2, i32* %rv, align 4, !dbg !7263
  %7 = load i32, i32* %rv, align 4, !dbg !7264
  %cmp = icmp slt i32 %7, 0, !dbg !7266
  br i1 %cmp, label %if.then3, label %if.end5, !dbg !7267

if.then3:                                         ; preds = %if.end
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7268
  %dev4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 41, !dbg !7268
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev4, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.127, i64 0, i64 0)) #13, !dbg !7268
  br label %err, !dbg !7270

if.end5:                                          ; preds = %if.end
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7271
  call void @pci_set_master(%struct.pci_dev* %9) #12, !dbg !7272
  %10 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !7273
  %call6 = call i32 @mtip_block_resume(%struct.driver_data* %10) #12, !dbg !7274
  store i32 %call6, i32* %rv, align 4, !dbg !7275
  %11 = load i32, i32* %rv, align 4, !dbg !7276
  %cmp7 = icmp slt i32 %11, 0, !dbg !7278
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !7279

if.then8:                                         ; preds = %if.end5
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7280
  %dev9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 41, !dbg !7280
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev9, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.128, i64 0, i64 0)) #13, !dbg !7280
  br label %if.end10, !dbg !7280

if.end10:                                         ; preds = %if.then8, %if.end5
  br label %err, !dbg !7281

err:                                              ; preds = %if.end10, %if.then3
  call void @llvm.dbg.label(metadata !7282), !dbg !7283
  %13 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !7284
  %dd_flag = getelementptr inbounds %struct.driver_data, %struct.driver_data* %13, i32 0, i32 11, !dbg !7285
  call void @clear_bit(i64 6, i64* %dd_flag) #12, !dbg !7286
  %14 = load i32, i32* %rv, align 4, !dbg !7287
  store i32 %14, i32* %retval, align 4, !dbg !7288
  br label %return, !dbg !7288

return:                                           ; preds = %err, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !7289
  ret i32 %15, !dbg !7289
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mtip_pci_shutdown(%struct.pci_dev* %pdev) #2 !dbg !7290 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %dd = alloca %struct.driver_data*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !7291, metadata !DIExpression()), !dbg !7292
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd, metadata !7293, metadata !DIExpression()), !dbg !7294
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7295
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #12, !dbg !7296
  %1 = bitcast i8* %call to %struct.driver_data*, !dbg !7296
  store %struct.driver_data* %1, %struct.driver_data** %dd, align 8, !dbg !7294
  %2 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !7297
  %tobool = icmp ne %struct.driver_data* %2, null, !dbg !7297
  br i1 %tobool, label %if.then, label %if.end, !dbg !7299

if.then:                                          ; preds = %entry
  %3 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !7300
  %call1 = call i32 @mtip_block_shutdown(%struct.driver_data* %3) #12, !dbg !7301
  br label %if.end, !dbg !7301

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7302
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @node_state(i32 %node, i32 %state) #2 !dbg !7303 {
entry:
  %node.addr = alloca i32, align 4
  %state.addr = alloca i32, align 4
  store i32 %node, i32* %node.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %node.addr, metadata !7306, metadata !DIExpression()), !dbg !7307
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !7308, metadata !DIExpression()), !dbg !7309
  %0 = load i32, i32* %node.addr, align 4, !dbg !7310
  %cmp = icmp eq i32 %0, 0, !dbg !7311
  %conv = zext i1 %cmp to i32, !dbg !7311
  ret i32 %conv, !dbg !7312
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_get_next_rr_node() #2 !dbg !6376 {
entry:
  %retval = alloca i32, align 4
  %0 = load i32, i32* @mtip_get_next_rr_node.next_node, align 4, !dbg !7313
  %cmp = icmp eq i32 %0, -1, !dbg !7315
  br i1 %cmp, label %if.then, label %if.end, !dbg !7316

if.then:                                          ; preds = %entry
  store i32 0, i32* @mtip_get_next_rr_node.next_node, align 4, !dbg !7317
  %1 = load i32, i32* @mtip_get_next_rr_node.next_node, align 4, !dbg !7319
  store i32 %1, i32* %retval, align 4, !dbg !7320
  br label %return, !dbg !7320

if.end:                                           ; preds = %entry
  store i32 1, i32* @mtip_get_next_rr_node.next_node, align 4, !dbg !7321
  %2 = load i32, i32* @mtip_get_next_rr_node.next_node, align 4, !dbg !7322
  %cmp1 = icmp eq i32 %2, 1, !dbg !7324
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !7325

if.then2:                                         ; preds = %if.end
  store i32 0, i32* @mtip_get_next_rr_node.next_node, align 4, !dbg !7326
  br label %if.end3, !dbg !7327

if.end3:                                          ; preds = %if.then2, %if.end
  %3 = load i32, i32* @mtip_get_next_rr_node.next_node, align 4, !dbg !7328
  store i32 %3, i32* %retval, align 4, !dbg !7329
  br label %return, !dbg !7329

return:                                           ; preds = %if.end3, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !7330
  ret i32 %4, !dbg !7330
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dev_to_node(%struct.device* %dev) #2 !dbg !7331 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7332, metadata !DIExpression()), !dbg !7333
  ret i32 -1, !dbg !7334
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc_node(i64 %size, i32 %flags, i32 %node) #2 !dbg !7335 {
entry:
  %size.addr.i13.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i13.i, metadata !7338, metadata !DIExpression()), !dbg !7340
  %flags.addr.i14.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i14.i, metadata !7344, metadata !DIExpression()), !dbg !7345
  %node.addr.i15.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %node.addr.i15.i, metadata !7346, metadata !DIExpression()), !dbg !7347
  %s.addr.i.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i.i, metadata !7348, metadata !DIExpression()), !dbg !7352
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !7360, metadata !DIExpression()), !dbg !7361
  %node.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %node.addr.i.i.i, metadata !7362, metadata !DIExpression()), !dbg !7363
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !7364, metadata !DIExpression()), !dbg !7365
  %gfpflags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %gfpflags.addr.i.i, metadata !7366, metadata !DIExpression()), !dbg !7367
  %node.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %node.addr.i.i, metadata !7368, metadata !DIExpression()), !dbg !7369
  %size.addr.i12.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i12.i, metadata !7370, metadata !DIExpression()), !dbg !7371
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !7372, metadata !DIExpression()), !dbg !7373
  %retval.i8.i = alloca i32, align 4
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !7374, metadata !DIExpression()), !dbg !7378
  %retval.i.i = alloca i32, align 4
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7380, metadata !DIExpression()), !dbg !7384
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7386, metadata !DIExpression()), !dbg !7387
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !7388, metadata !DIExpression()), !dbg !7389
  %node.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %node.addr.i, metadata !7390, metadata !DIExpression()), !dbg !7391
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !7392, metadata !DIExpression()), !dbg !7393
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %node.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7394, metadata !DIExpression()), !dbg !7395
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !7396, metadata !DIExpression()), !dbg !7397
  store i32 %node, i32* %node.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %node.addr, metadata !7398, metadata !DIExpression()), !dbg !7399
  %0 = load i64, i64* %size.addr, align 8, !dbg !7400
  %1 = load i32, i32* %flags.addr, align 4, !dbg !7401
  %or = or i32 %1, 256, !dbg !7402
  %2 = load i32, i32* %node.addr, align 4, !dbg !7403
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  store i32 %2, i32* %node.addr.i, align 4
  %3 = load i64, i64* %size.addr.i, align 8, !dbg !7404
  %4 = call i1 @llvm.is.constant.i64(i64 %3) #11, !dbg !7405
  br i1 %4, label %land.lhs.true.i, label %if.end6.i, !dbg !7406

land.lhs.true.i:                                  ; preds = %entry
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !7407
  %cmp.i = icmp ule i64 %5, 8192, !dbg !7408
  br i1 %cmp.i, label %if.then.i, label %if.end6.i, !dbg !7409

if.then.i:                                        ; preds = %land.lhs.true.i
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !7410
  store i64 %6, i64* %size.addr.i.i, align 8
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !7411
  %tobool.i.i = icmp ne i64 %7, 0, !dbg !7411
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !7413

if.then.i.i:                                      ; preds = %if.then.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !7414
  br label %kmalloc_index.exit.i, !dbg !7414

if.end.i.i:                                       ; preds = %if.then.i
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !7415
  %cmp.i.i = icmp ule i64 %8, 8, !dbg !7417
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !7418

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7419
  br label %kmalloc_index.exit.i, !dbg !7419

if.end2.i.i:                                      ; preds = %if.end.i.i
  %9 = load i64, i64* %size.addr.i.i, align 8, !dbg !7420
  %cmp3.i.i = icmp ugt i64 %9, 64, !dbg !7422
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !7423

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %10 = load i64, i64* %size.addr.i.i, align 8, !dbg !7424
  %cmp4.i.i = icmp ule i64 %10, 96, !dbg !7425
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !7426

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !7427
  br label %kmalloc_index.exit.i, !dbg !7427

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %11 = load i64, i64* %size.addr.i.i, align 8, !dbg !7428
  %cmp7.i.i = icmp ugt i64 %11, 128, !dbg !7430
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !7431

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %12 = load i64, i64* %size.addr.i.i, align 8, !dbg !7432
  %cmp9.i.i = icmp ule i64 %12, 192, !dbg !7433
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !7434

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !7435
  br label %kmalloc_index.exit.i, !dbg !7435

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %13 = load i64, i64* %size.addr.i.i, align 8, !dbg !7436
  %cmp12.i.i = icmp ule i64 %13, 8, !dbg !7438
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !7439

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7440
  br label %kmalloc_index.exit.i, !dbg !7440

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %14 = load i64, i64* %size.addr.i.i, align 8, !dbg !7441
  %cmp15.i.i = icmp ule i64 %14, 16, !dbg !7443
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !7444

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !7445
  br label %kmalloc_index.exit.i, !dbg !7445

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %15 = load i64, i64* %size.addr.i.i, align 8, !dbg !7446
  %cmp18.i.i = icmp ule i64 %15, 32, !dbg !7448
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !7449

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !7450
  br label %kmalloc_index.exit.i, !dbg !7450

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %16 = load i64, i64* %size.addr.i.i, align 8, !dbg !7451
  %cmp21.i.i = icmp ule i64 %16, 64, !dbg !7453
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !7454

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !7455
  br label %kmalloc_index.exit.i, !dbg !7455

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %17 = load i64, i64* %size.addr.i.i, align 8, !dbg !7456
  %cmp24.i.i = icmp ule i64 %17, 128, !dbg !7458
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !7459

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !7460
  br label %kmalloc_index.exit.i, !dbg !7460

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %18 = load i64, i64* %size.addr.i.i, align 8, !dbg !7461
  %cmp27.i.i = icmp ule i64 %18, 256, !dbg !7463
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !7464

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !7465
  br label %kmalloc_index.exit.i, !dbg !7465

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %19 = load i64, i64* %size.addr.i.i, align 8, !dbg !7466
  %cmp30.i.i = icmp ule i64 %19, 512, !dbg !7468
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !7469

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !7470
  br label %kmalloc_index.exit.i, !dbg !7470

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %20 = load i64, i64* %size.addr.i.i, align 8, !dbg !7471
  %cmp33.i.i = icmp ule i64 %20, 1024, !dbg !7473
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !7474

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !7475
  br label %kmalloc_index.exit.i, !dbg !7475

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !7476
  %cmp36.i.i = icmp ule i64 %21, 2048, !dbg !7478
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !7479

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !7480
  br label %kmalloc_index.exit.i, !dbg !7480

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !7481
  %cmp39.i.i = icmp ule i64 %22, 4096, !dbg !7483
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !7484

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !7485
  br label %kmalloc_index.exit.i, !dbg !7485

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %23 = load i64, i64* %size.addr.i.i, align 8, !dbg !7486
  %cmp42.i.i = icmp ule i64 %23, 8192, !dbg !7488
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !7489

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !7490
  br label %kmalloc_index.exit.i, !dbg !7490

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %24 = load i64, i64* %size.addr.i.i, align 8, !dbg !7491
  %cmp45.i.i = icmp ule i64 %24, 16384, !dbg !7493
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !7494

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !7495
  br label %kmalloc_index.exit.i, !dbg !7495

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %25 = load i64, i64* %size.addr.i.i, align 8, !dbg !7496
  %cmp48.i.i = icmp ule i64 %25, 32768, !dbg !7498
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !7499

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !7500
  br label %kmalloc_index.exit.i, !dbg !7500

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %26 = load i64, i64* %size.addr.i.i, align 8, !dbg !7501
  %cmp51.i.i = icmp ule i64 %26, 65536, !dbg !7503
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !7504

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !7505
  br label %kmalloc_index.exit.i, !dbg !7505

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %27 = load i64, i64* %size.addr.i.i, align 8, !dbg !7506
  %cmp54.i.i = icmp ule i64 %27, 131072, !dbg !7508
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !7509

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !7510
  br label %kmalloc_index.exit.i, !dbg !7510

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %28 = load i64, i64* %size.addr.i.i, align 8, !dbg !7511
  %cmp57.i.i = icmp ule i64 %28, 262144, !dbg !7513
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !7514

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !7515
  br label %kmalloc_index.exit.i, !dbg !7515

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %29 = load i64, i64* %size.addr.i.i, align 8, !dbg !7516
  %cmp60.i.i = icmp ule i64 %29, 524288, !dbg !7518
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !7519

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !7520
  br label %kmalloc_index.exit.i, !dbg !7520

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %30 = load i64, i64* %size.addr.i.i, align 8, !dbg !7521
  %cmp63.i.i = icmp ule i64 %30, 1048576, !dbg !7523
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !7524

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !7525
  br label %kmalloc_index.exit.i, !dbg !7525

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %31 = load i64, i64* %size.addr.i.i, align 8, !dbg !7526
  %cmp66.i.i = icmp ule i64 %31, 2097152, !dbg !7528
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !7529

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !7530
  br label %kmalloc_index.exit.i, !dbg !7530

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %32 = load i64, i64* %size.addr.i.i, align 8, !dbg !7531
  %cmp69.i.i = icmp ule i64 %32, 4194304, !dbg !7533
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !7534

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !7535
  br label %kmalloc_index.exit.i, !dbg !7535

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %33 = load i64, i64* %size.addr.i.i, align 8, !dbg !7536
  %cmp72.i.i = icmp ule i64 %33, 8388608, !dbg !7538
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !7539

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !7540
  br label %kmalloc_index.exit.i, !dbg !7540

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %34 = load i64, i64* %size.addr.i.i, align 8, !dbg !7541
  %cmp75.i.i = icmp ule i64 %34, 16777216, !dbg !7543
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !7544

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !7545
  br label %kmalloc_index.exit.i, !dbg !7545

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %35 = load i64, i64* %size.addr.i.i, align 8, !dbg !7546
  %cmp78.i.i = icmp ule i64 %35, 33554432, !dbg !7548
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !7549

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !7550
  br label %kmalloc_index.exit.i, !dbg !7550

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %36 = load i64, i64* %size.addr.i.i, align 8, !dbg !7551
  %cmp81.i.i = icmp ule i64 %36, 67108864, !dbg !7553
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !7554

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !7555
  br label %kmalloc_index.exit.i, !dbg !7555

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i64 0, i64 0), i32 382, i32 0, i64 12) #11, !dbg !7556, !srcloc !7559
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 156) #11, !dbg !7560, !srcloc !7563
  unreachable, !dbg !7564

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %37 = load i32, i32* %retval.i.i, align 4, !dbg !7565
  store i32 %37, i32* %i.i, align 4, !dbg !7393
  %38 = load i32, i32* %i.i, align 4, !dbg !7566
  %tobool.i = icmp ne i32 %38, 0, !dbg !7566
  br i1 %tobool.i, label %if.end.i, label %if.then1.i, !dbg !7568

if.then1.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !7569
  br label %kmalloc_node.exit, !dbg !7569

if.end.i:                                         ; preds = %kmalloc_index.exit.i
  %39 = load i32, i32* %flags.addr.i, align 4, !dbg !7570
  store i32 %39, i32* %flags.addr.i.i, align 4
  %40 = load i32, i32* %flags.addr.i.i, align 4, !dbg !7571
  %and.i.i = and i32 %40, 17, !dbg !7571
  %cmp.i9.i = icmp eq i32 %and.i.i, 0, !dbg !7571
  %lnot.i.i = xor i1 %cmp.i9.i, true, !dbg !7571
  %lnot.ext.i.i = zext i1 %cmp.i9.i to i32, !dbg !7571
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7571
  br i1 %cmp.i9.i, label %if.then.i10.i, label %if.end.i11.i, !dbg !7573

if.then.i10.i:                                    ; preds = %if.end.i
  store i32 0, i32* %retval.i8.i, align 4, !dbg !7574
  br label %kmalloc_type.exit.i, !dbg !7574

if.end.i11.i:                                     ; preds = %if.end.i
  %41 = load i32, i32* %flags.addr.i.i, align 4, !dbg !7575
  %and2.i.i = and i32 %41, 1, !dbg !7576
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !7575
  %42 = zext i1 %tobool3.i.i to i64, !dbg !7575
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !7575
  store i32 %cond.i.i, i32* %retval.i8.i, align 4, !dbg !7577
  br label %kmalloc_type.exit.i, !dbg !7577

kmalloc_type.exit.i:                              ; preds = %if.end.i11.i, %if.then.i10.i
  %43 = load i32, i32* %retval.i8.i, align 4, !dbg !7578
  %idxprom.i = zext i32 %43 to i64, !dbg !7579
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !7579
  %44 = load i32, i32* %i.i, align 4, !dbg !7580
  %idxprom3.i = zext i32 %44 to i64, !dbg !7579
  %arrayidx4.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom3.i, !dbg !7579
  %45 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx4.i, align 8, !dbg !7579
  %46 = load i32, i32* %flags.addr.i, align 4, !dbg !7581
  %47 = load i32, i32* %node.addr.i, align 4, !dbg !7582
  %48 = load i64, i64* %size.addr.i, align 8, !dbg !7583
  store %struct.kmem_cache* %45, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %46, i32* %gfpflags.addr.i.i, align 4
  store i32 %47, i32* %node.addr.i.i, align 4
  store i64 %48, i64* %size.addr.i12.i, align 8
  %49 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7584
  %50 = load i32, i32* %gfpflags.addr.i.i, align 4, !dbg !7585
  %51 = load i32, i32* %node.addr.i.i, align 4, !dbg !7586
  store %struct.kmem_cache* %49, %struct.kmem_cache** %s.addr.i.i.i, align 8
  store i32 %50, i32* %flags.addr.i.i.i, align 4
  store i32 %51, i32* %node.addr.i.i.i, align 4
  %52 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i.i, align 8, !dbg !7587
  %53 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !7588
  %call.i.i.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %52, i32 %53) #14, !dbg !7589
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !7589
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 7, !dbg !7589
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !7589
  call void @llvm.assume(i1 %maskcond.i.i.i) #11, !dbg !7589
  store i8* %call.i.i.i, i8** %ret.i.i, align 8, !dbg !7373
  %54 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7590
  %55 = load i8*, i8** %ret.i.i, align 8, !dbg !7591
  %56 = load i64, i64* %size.addr.i12.i, align 8, !dbg !7592
  %57 = load i32, i32* %gfpflags.addr.i.i, align 4, !dbg !7593
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %54, i8* %55, i64 %56, i32 %57) #14, !dbg !7594
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !7595
  %58 = load i8*, i8** %ret.i.i, align 8, !dbg !7596
  store i8* %58, i8** %retval.i, align 8, !dbg !7597
  br label %kmalloc_node.exit, !dbg !7597

if.end6.i:                                        ; preds = %land.lhs.true.i, %entry
  %59 = load i64, i64* %size.addr.i, align 8, !dbg !7598
  %60 = load i32, i32* %flags.addr.i, align 4, !dbg !7599
  %61 = load i32, i32* %node.addr.i, align 4, !dbg !7600
  store i64 %59, i64* %size.addr.i13.i, align 8
  store i32 %60, i32* %flags.addr.i14.i, align 4
  store i32 %61, i32* %node.addr.i15.i, align 4
  %62 = load i64, i64* %size.addr.i13.i, align 8, !dbg !7601
  %63 = load i32, i32* %flags.addr.i14.i, align 4, !dbg !7602
  %call.i.i = call noalias i8* @__kmalloc(i64 %62, i32 %63) #14, !dbg !7603
  %ptrint.i.i = ptrtoint i8* %call.i.i to i64, !dbg !7603
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !7603
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !7603
  call void @llvm.assume(i1 %maskcond.i.i) #11, !dbg !7603
  store i8* %call.i.i, i8** %retval.i, align 8, !dbg !7604
  br label %kmalloc_node.exit, !dbg !7604

kmalloc_node.exit:                                ; preds = %if.then1.i, %kmalloc_type.exit.i, %if.end6.i
  %64 = load i8*, i8** %retval.i, align 8, !dbg !7605
  ret i8* %64, !dbg !7606
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_set_drvdata(%struct.pci_dev* %pdev, i8* %data) #2 !dbg !7607 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !7610, metadata !DIExpression()), !dbg !7611
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !7612, metadata !DIExpression()), !dbg !7613
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7614
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !7615
  %1 = load i8*, i8** %data.addr, align 8, !dbg !7616
  call void @dev_set_drvdata(%struct.device* %dev, i8* %1) #12, !dbg !7617
  ret void, !dbg !7618
}

; Function Attrs: noredzone
declare dso_local i32 @pcim_enable_device(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local i32 @pcim_iomap_regions(%struct.pci_dev*, i32, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_set_mask_and_coherent(%struct.device* %dev, i64 %mask) #2 !dbg !7619 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %mask.addr = alloca i64, align 8
  %rc = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7622, metadata !DIExpression()), !dbg !7623
  store i64 %mask, i64* %mask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %mask.addr, metadata !7624, metadata !DIExpression()), !dbg !7625
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !7626, metadata !DIExpression()), !dbg !7627
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7628
  %1 = load i64, i64* %mask.addr, align 8, !dbg !7629
  %call = call i32 @dma_set_mask(%struct.device* %0, i64 %1) #12, !dbg !7630
  store i32 %call, i32* %rc, align 4, !dbg !7627
  %2 = load i32, i32* %rc, align 4, !dbg !7631
  %cmp = icmp eq i32 %2, 0, !dbg !7633
  br i1 %cmp, label %if.then, label %if.end, !dbg !7634

if.then:                                          ; preds = %entry
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7635
  %4 = load i64, i64* %mask.addr, align 8, !dbg !7636
  %call1 = call i32 @dma_set_coherent_mask(%struct.device* %3, i64 %4) #12, !dbg !7637
  br label %if.end, !dbg !7637

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %rc, align 4, !dbg !7638
  ret i32 %5, !dbg !7639
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #2 !dbg !7640 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !7644, metadata !DIExpression()), !dbg !7645
  br label %do.body, !dbg !7646

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7647

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !7649

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !7647

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7651
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7651
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !7651
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !7651
  br label %do.end3, !dbg !7651

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !7647

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7653
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7654
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !7655
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !7656
  ret void, !dbg !7657
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #1

; Function Attrs: noredzone
declare dso_local %struct.workqueue_struct* @alloc_workqueue(i8*, i32, i32, ...) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @cpumask_empty(%struct.cpumask* %srcp) #2 !dbg !7658 {
entry:
  %srcp.addr = alloca %struct.cpumask*, align 8
  store %struct.cpumask* %srcp, %struct.cpumask** %srcp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cpumask** %srcp.addr, metadata !7661, metadata !DIExpression()), !dbg !7662
  %0 = load %struct.cpumask*, %struct.cpumask** %srcp.addr, align 8, !dbg !7663
  %bits = getelementptr inbounds %struct.cpumask, %struct.cpumask* %0, i32 0, i32 0, !dbg !7663
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %bits, i64 0, i64 0, !dbg !7663
  %call = call i32 @bitmap_empty(i64* %arraydecay, i32 1) #12, !dbg !7664
  %tobool = icmp ne i32 %call, 0, !dbg !7664
  ret i1 %tobool, !dbg !7665
}

; Function Attrs: noredzone
declare dso_local i64 @strlen(i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cpumask_weight(%struct.cpumask* %srcp) #2 !dbg !7666 {
entry:
  %w.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %w.addr.i.i.i, metadata !7669, metadata !DIExpression()), !dbg !7674
  %res.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %res.i.i.i, metadata !7688, metadata !DIExpression()), !dbg !7689
  %w.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %w.addr.i.i, metadata !7690, metadata !DIExpression()), !dbg !7691
  %retval.i = alloca i32, align 4
  %src.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %src.addr.i, metadata !7692, metadata !DIExpression()), !dbg !7693
  %nbits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr.i, metadata !7694, metadata !DIExpression()), !dbg !7695
  %srcp.addr = alloca %struct.cpumask*, align 8
  store %struct.cpumask* %srcp, %struct.cpumask** %srcp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cpumask** %srcp.addr, metadata !7696, metadata !DIExpression()), !dbg !7697
  %0 = load %struct.cpumask*, %struct.cpumask** %srcp.addr, align 8, !dbg !7698
  %bits = getelementptr inbounds %struct.cpumask, %struct.cpumask* %0, i32 0, i32 0, !dbg !7698
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %bits, i64 0, i64 0, !dbg !7698
  store i64* %arraydecay, i64** %src.addr.i, align 8
  store i32 1, i32* %nbits.addr.i, align 4
  %1 = load i32, i32* %nbits.addr.i, align 4, !dbg !7699
  %2 = call i1 @llvm.is.constant.i32(i32 %1) #11, !dbg !7699
  br i1 %2, label %land.lhs.true.i, label %if.end.i, !dbg !7699

land.lhs.true.i:                                  ; preds = %entry
  %3 = load i32, i32* %nbits.addr.i, align 4, !dbg !7699
  %cmp.i = icmp ule i32 %3, 64, !dbg !7699
  br i1 %cmp.i, label %land.lhs.true1.i, label %if.end.i, !dbg !7699

land.lhs.true1.i:                                 ; preds = %land.lhs.true.i
  %4 = load i32, i32* %nbits.addr.i, align 4, !dbg !7699
  %cmp2.i = icmp ugt i32 %4, 0, !dbg !7699
  br i1 %cmp2.i, label %if.then.i, label %if.end.i, !dbg !7700

if.then.i:                                        ; preds = %land.lhs.true1.i
  %5 = load i64*, i64** %src.addr.i, align 8, !dbg !7701
  %6 = load i64, i64* %5, align 8, !dbg !7702
  %7 = load i32, i32* %nbits.addr.i, align 4, !dbg !7703
  %sub.i = sub i32 0, %7, !dbg !7703
  %and.i = and i32 %sub.i, 63, !dbg !7703
  %sh_prom.i = zext i32 %and.i to i64, !dbg !7703
  %shr.i = lshr i64 -1, %sh_prom.i, !dbg !7703
  %and3.i = and i64 %6, %shr.i, !dbg !7704
  store i64 %and3.i, i64* %w.addr.i.i, align 8
  %8 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %9 = call i1 @llvm.is.constant.i64(i64 %8) #11, !dbg !7705
  br i1 %9, label %cond.true.i.i, label %cond.false.i.i, !dbg !7705

cond.true.i.i:                                    ; preds = %if.then.i
  %10 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %and.i.i = and i64 %10, 1, !dbg !7705
  %tobool.i.i = icmp ne i64 %and.i.i, 0, !dbg !7705
  %lnot.i.i = xor i1 %tobool.i.i, true, !dbg !7705
  %lnot.ext.i.i = zext i1 %tobool.i.i to i32, !dbg !7705
  %11 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %and2.i.i = and i64 %11, 2, !dbg !7705
  %tobool3.i.i = icmp ne i64 %and2.i.i, 0, !dbg !7705
  %lnot4.i.i = xor i1 %tobool3.i.i, true, !dbg !7705
  %lnot.ext7.i.i = zext i1 %tobool3.i.i to i32, !dbg !7705
  %add.i.i = add i32 %lnot.ext.i.i, %lnot.ext7.i.i, !dbg !7705
  %12 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %and8.i.i = and i64 %12, 4, !dbg !7705
  %tobool9.i.i = icmp ne i64 %and8.i.i, 0, !dbg !7705
  %lnot10.i.i = xor i1 %tobool9.i.i, true, !dbg !7705
  %lnot.ext13.i.i = zext i1 %tobool9.i.i to i32, !dbg !7705
  %add14.i.i = add i32 %add.i.i, %lnot.ext13.i.i, !dbg !7705
  %13 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %and15.i.i = and i64 %13, 8, !dbg !7705
  %tobool16.i.i = icmp ne i64 %and15.i.i, 0, !dbg !7705
  %lnot17.i.i = xor i1 %tobool16.i.i, true, !dbg !7705
  %lnot.ext20.i.i = zext i1 %tobool16.i.i to i32, !dbg !7705
  %add21.i.i = add i32 %add14.i.i, %lnot.ext20.i.i, !dbg !7705
  %14 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %and22.i.i = and i64 %14, 16, !dbg !7705
  %tobool23.i.i = icmp ne i64 %and22.i.i, 0, !dbg !7705
  %lnot24.i.i = xor i1 %tobool23.i.i, true, !dbg !7705
  %lnot.ext27.i.i = zext i1 %tobool23.i.i to i32, !dbg !7705
  %add28.i.i = add i32 %add21.i.i, %lnot.ext27.i.i, !dbg !7705
  %15 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %and29.i.i = and i64 %15, 32, !dbg !7705
  %tobool30.i.i = icmp ne i64 %and29.i.i, 0, !dbg !7705
  %lnot31.i.i = xor i1 %tobool30.i.i, true, !dbg !7705
  %lnot.ext34.i.i = zext i1 %tobool30.i.i to i32, !dbg !7705
  %add35.i.i = add i32 %add28.i.i, %lnot.ext34.i.i, !dbg !7705
  %16 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %and36.i.i = and i64 %16, 64, !dbg !7705
  %tobool37.i.i = icmp ne i64 %and36.i.i, 0, !dbg !7705
  %lnot38.i.i = xor i1 %tobool37.i.i, true, !dbg !7705
  %lnot.ext41.i.i = zext i1 %tobool37.i.i to i32, !dbg !7705
  %add42.i.i = add i32 %add35.i.i, %lnot.ext41.i.i, !dbg !7705
  %17 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %and43.i.i = and i64 %17, 128, !dbg !7705
  %tobool44.i.i = icmp ne i64 %and43.i.i, 0, !dbg !7705
  %lnot45.i.i = xor i1 %tobool44.i.i, true, !dbg !7705
  %lnot.ext48.i.i = zext i1 %tobool44.i.i to i32, !dbg !7705
  %add49.i.i = add i32 %add42.i.i, %lnot.ext48.i.i, !dbg !7705
  %18 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr.i.i = lshr i64 %18, 8, !dbg !7705
  %and50.i.i = and i64 %shr.i.i, 1, !dbg !7705
  %tobool51.i.i = icmp ne i64 %and50.i.i, 0, !dbg !7705
  %lnot52.i.i = xor i1 %tobool51.i.i, true, !dbg !7705
  %lnot.ext55.i.i = zext i1 %tobool51.i.i to i32, !dbg !7705
  %19 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr56.i.i = lshr i64 %19, 8, !dbg !7705
  %and57.i.i = and i64 %shr56.i.i, 2, !dbg !7705
  %tobool58.i.i = icmp ne i64 %and57.i.i, 0, !dbg !7705
  %lnot59.i.i = xor i1 %tobool58.i.i, true, !dbg !7705
  %lnot.ext62.i.i = zext i1 %tobool58.i.i to i32, !dbg !7705
  %add63.i.i = add i32 %lnot.ext55.i.i, %lnot.ext62.i.i, !dbg !7705
  %20 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr64.i.i = lshr i64 %20, 8, !dbg !7705
  %and65.i.i = and i64 %shr64.i.i, 4, !dbg !7705
  %tobool66.i.i = icmp ne i64 %and65.i.i, 0, !dbg !7705
  %lnot67.i.i = xor i1 %tobool66.i.i, true, !dbg !7705
  %lnot.ext70.i.i = zext i1 %tobool66.i.i to i32, !dbg !7705
  %add71.i.i = add i32 %add63.i.i, %lnot.ext70.i.i, !dbg !7705
  %21 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr72.i.i = lshr i64 %21, 8, !dbg !7705
  %and73.i.i = and i64 %shr72.i.i, 8, !dbg !7705
  %tobool74.i.i = icmp ne i64 %and73.i.i, 0, !dbg !7705
  %lnot75.i.i = xor i1 %tobool74.i.i, true, !dbg !7705
  %lnot.ext78.i.i = zext i1 %tobool74.i.i to i32, !dbg !7705
  %add79.i.i = add i32 %add71.i.i, %lnot.ext78.i.i, !dbg !7705
  %22 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr80.i.i = lshr i64 %22, 8, !dbg !7705
  %and81.i.i = and i64 %shr80.i.i, 16, !dbg !7705
  %tobool82.i.i = icmp ne i64 %and81.i.i, 0, !dbg !7705
  %lnot83.i.i = xor i1 %tobool82.i.i, true, !dbg !7705
  %lnot.ext86.i.i = zext i1 %tobool82.i.i to i32, !dbg !7705
  %add87.i.i = add i32 %add79.i.i, %lnot.ext86.i.i, !dbg !7705
  %23 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr88.i.i = lshr i64 %23, 8, !dbg !7705
  %and89.i.i = and i64 %shr88.i.i, 32, !dbg !7705
  %tobool90.i.i = icmp ne i64 %and89.i.i, 0, !dbg !7705
  %lnot91.i.i = xor i1 %tobool90.i.i, true, !dbg !7705
  %lnot.ext94.i.i = zext i1 %tobool90.i.i to i32, !dbg !7705
  %add95.i.i = add i32 %add87.i.i, %lnot.ext94.i.i, !dbg !7705
  %24 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr96.i.i = lshr i64 %24, 8, !dbg !7705
  %and97.i.i = and i64 %shr96.i.i, 64, !dbg !7705
  %tobool98.i.i = icmp ne i64 %and97.i.i, 0, !dbg !7705
  %lnot99.i.i = xor i1 %tobool98.i.i, true, !dbg !7705
  %lnot.ext102.i.i = zext i1 %tobool98.i.i to i32, !dbg !7705
  %add103.i.i = add i32 %add95.i.i, %lnot.ext102.i.i, !dbg !7705
  %25 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr104.i.i = lshr i64 %25, 8, !dbg !7705
  %and105.i.i = and i64 %shr104.i.i, 128, !dbg !7705
  %tobool106.i.i = icmp ne i64 %and105.i.i, 0, !dbg !7705
  %lnot107.i.i = xor i1 %tobool106.i.i, true, !dbg !7705
  %lnot.ext110.i.i = zext i1 %tobool106.i.i to i32, !dbg !7705
  %add111.i.i = add i32 %add103.i.i, %lnot.ext110.i.i, !dbg !7705
  %add112.i.i = add i32 %add49.i.i, %add111.i.i, !dbg !7705
  %26 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr113.i.i = lshr i64 %26, 16, !dbg !7705
  %and114.i.i = and i64 %shr113.i.i, 1, !dbg !7705
  %tobool115.i.i = icmp ne i64 %and114.i.i, 0, !dbg !7705
  %lnot116.i.i = xor i1 %tobool115.i.i, true, !dbg !7705
  %lnot.ext119.i.i = zext i1 %tobool115.i.i to i32, !dbg !7705
  %27 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr120.i.i = lshr i64 %27, 16, !dbg !7705
  %and121.i.i = and i64 %shr120.i.i, 2, !dbg !7705
  %tobool122.i.i = icmp ne i64 %and121.i.i, 0, !dbg !7705
  %lnot123.i.i = xor i1 %tobool122.i.i, true, !dbg !7705
  %lnot.ext126.i.i = zext i1 %tobool122.i.i to i32, !dbg !7705
  %add127.i.i = add i32 %lnot.ext119.i.i, %lnot.ext126.i.i, !dbg !7705
  %28 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr128.i.i = lshr i64 %28, 16, !dbg !7705
  %and129.i.i = and i64 %shr128.i.i, 4, !dbg !7705
  %tobool130.i.i = icmp ne i64 %and129.i.i, 0, !dbg !7705
  %lnot131.i.i = xor i1 %tobool130.i.i, true, !dbg !7705
  %lnot.ext134.i.i = zext i1 %tobool130.i.i to i32, !dbg !7705
  %add135.i.i = add i32 %add127.i.i, %lnot.ext134.i.i, !dbg !7705
  %29 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr136.i.i = lshr i64 %29, 16, !dbg !7705
  %and137.i.i = and i64 %shr136.i.i, 8, !dbg !7705
  %tobool138.i.i = icmp ne i64 %and137.i.i, 0, !dbg !7705
  %lnot139.i.i = xor i1 %tobool138.i.i, true, !dbg !7705
  %lnot.ext142.i.i = zext i1 %tobool138.i.i to i32, !dbg !7705
  %add143.i.i = add i32 %add135.i.i, %lnot.ext142.i.i, !dbg !7705
  %30 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr144.i.i = lshr i64 %30, 16, !dbg !7705
  %and145.i.i = and i64 %shr144.i.i, 16, !dbg !7705
  %tobool146.i.i = icmp ne i64 %and145.i.i, 0, !dbg !7705
  %lnot147.i.i = xor i1 %tobool146.i.i, true, !dbg !7705
  %lnot.ext150.i.i = zext i1 %tobool146.i.i to i32, !dbg !7705
  %add151.i.i = add i32 %add143.i.i, %lnot.ext150.i.i, !dbg !7705
  %31 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr152.i.i = lshr i64 %31, 16, !dbg !7705
  %and153.i.i = and i64 %shr152.i.i, 32, !dbg !7705
  %tobool154.i.i = icmp ne i64 %and153.i.i, 0, !dbg !7705
  %lnot155.i.i = xor i1 %tobool154.i.i, true, !dbg !7705
  %lnot.ext158.i.i = zext i1 %tobool154.i.i to i32, !dbg !7705
  %add159.i.i = add i32 %add151.i.i, %lnot.ext158.i.i, !dbg !7705
  %32 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr160.i.i = lshr i64 %32, 16, !dbg !7705
  %and161.i.i = and i64 %shr160.i.i, 64, !dbg !7705
  %tobool162.i.i = icmp ne i64 %and161.i.i, 0, !dbg !7705
  %lnot163.i.i = xor i1 %tobool162.i.i, true, !dbg !7705
  %lnot.ext166.i.i = zext i1 %tobool162.i.i to i32, !dbg !7705
  %add167.i.i = add i32 %add159.i.i, %lnot.ext166.i.i, !dbg !7705
  %33 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr168.i.i = lshr i64 %33, 16, !dbg !7705
  %and169.i.i = and i64 %shr168.i.i, 128, !dbg !7705
  %tobool170.i.i = icmp ne i64 %and169.i.i, 0, !dbg !7705
  %lnot171.i.i = xor i1 %tobool170.i.i, true, !dbg !7705
  %lnot.ext174.i.i = zext i1 %tobool170.i.i to i32, !dbg !7705
  %add175.i.i = add i32 %add167.i.i, %lnot.ext174.i.i, !dbg !7705
  %34 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr176.i.i = lshr i64 %34, 16, !dbg !7705
  %shr177.i.i = lshr i64 %shr176.i.i, 8, !dbg !7705
  %and178.i.i = and i64 %shr177.i.i, 1, !dbg !7705
  %tobool179.i.i = icmp ne i64 %and178.i.i, 0, !dbg !7705
  %lnot180.i.i = xor i1 %tobool179.i.i, true, !dbg !7705
  %lnot.ext183.i.i = zext i1 %tobool179.i.i to i32, !dbg !7705
  %35 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr184.i.i = lshr i64 %35, 16, !dbg !7705
  %shr185.i.i = lshr i64 %shr184.i.i, 8, !dbg !7705
  %and186.i.i = and i64 %shr185.i.i, 2, !dbg !7705
  %tobool187.i.i = icmp ne i64 %and186.i.i, 0, !dbg !7705
  %lnot188.i.i = xor i1 %tobool187.i.i, true, !dbg !7705
  %lnot.ext191.i.i = zext i1 %tobool187.i.i to i32, !dbg !7705
  %add192.i.i = add i32 %lnot.ext183.i.i, %lnot.ext191.i.i, !dbg !7705
  %36 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr193.i.i = lshr i64 %36, 16, !dbg !7705
  %shr194.i.i = lshr i64 %shr193.i.i, 8, !dbg !7705
  %and195.i.i = and i64 %shr194.i.i, 4, !dbg !7705
  %tobool196.i.i = icmp ne i64 %and195.i.i, 0, !dbg !7705
  %lnot197.i.i = xor i1 %tobool196.i.i, true, !dbg !7705
  %lnot.ext200.i.i = zext i1 %tobool196.i.i to i32, !dbg !7705
  %add201.i.i = add i32 %add192.i.i, %lnot.ext200.i.i, !dbg !7705
  %37 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr202.i.i = lshr i64 %37, 16, !dbg !7705
  %shr203.i.i = lshr i64 %shr202.i.i, 8, !dbg !7705
  %and204.i.i = and i64 %shr203.i.i, 8, !dbg !7705
  %tobool205.i.i = icmp ne i64 %and204.i.i, 0, !dbg !7705
  %lnot206.i.i = xor i1 %tobool205.i.i, true, !dbg !7705
  %lnot.ext209.i.i = zext i1 %tobool205.i.i to i32, !dbg !7705
  %add210.i.i = add i32 %add201.i.i, %lnot.ext209.i.i, !dbg !7705
  %38 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr211.i.i = lshr i64 %38, 16, !dbg !7705
  %shr212.i.i = lshr i64 %shr211.i.i, 8, !dbg !7705
  %and213.i.i = and i64 %shr212.i.i, 16, !dbg !7705
  %tobool214.i.i = icmp ne i64 %and213.i.i, 0, !dbg !7705
  %lnot215.i.i = xor i1 %tobool214.i.i, true, !dbg !7705
  %lnot.ext218.i.i = zext i1 %tobool214.i.i to i32, !dbg !7705
  %add219.i.i = add i32 %add210.i.i, %lnot.ext218.i.i, !dbg !7705
  %39 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr220.i.i = lshr i64 %39, 16, !dbg !7705
  %shr221.i.i = lshr i64 %shr220.i.i, 8, !dbg !7705
  %and222.i.i = and i64 %shr221.i.i, 32, !dbg !7705
  %tobool223.i.i = icmp ne i64 %and222.i.i, 0, !dbg !7705
  %lnot224.i.i = xor i1 %tobool223.i.i, true, !dbg !7705
  %lnot.ext227.i.i = zext i1 %tobool223.i.i to i32, !dbg !7705
  %add228.i.i = add i32 %add219.i.i, %lnot.ext227.i.i, !dbg !7705
  %40 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr229.i.i = lshr i64 %40, 16, !dbg !7705
  %shr230.i.i = lshr i64 %shr229.i.i, 8, !dbg !7705
  %and231.i.i = and i64 %shr230.i.i, 64, !dbg !7705
  %tobool232.i.i = icmp ne i64 %and231.i.i, 0, !dbg !7705
  %lnot233.i.i = xor i1 %tobool232.i.i, true, !dbg !7705
  %lnot.ext236.i.i = zext i1 %tobool232.i.i to i32, !dbg !7705
  %add237.i.i = add i32 %add228.i.i, %lnot.ext236.i.i, !dbg !7705
  %41 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr238.i.i = lshr i64 %41, 16, !dbg !7705
  %shr239.i.i = lshr i64 %shr238.i.i, 8, !dbg !7705
  %and240.i.i = and i64 %shr239.i.i, 128, !dbg !7705
  %tobool241.i.i = icmp ne i64 %and240.i.i, 0, !dbg !7705
  %lnot242.i.i = xor i1 %tobool241.i.i, true, !dbg !7705
  %lnot.ext245.i.i = zext i1 %tobool241.i.i to i32, !dbg !7705
  %add246.i.i = add i32 %add237.i.i, %lnot.ext245.i.i, !dbg !7705
  %add247.i.i = add i32 %add175.i.i, %add246.i.i, !dbg !7705
  %add248.i.i = add i32 %add112.i.i, %add247.i.i, !dbg !7705
  %42 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr249.i.i = lshr i64 %42, 32, !dbg !7705
  %and250.i.i = and i64 %shr249.i.i, 1, !dbg !7705
  %tobool251.i.i = icmp ne i64 %and250.i.i, 0, !dbg !7705
  %lnot252.i.i = xor i1 %tobool251.i.i, true, !dbg !7705
  %lnot.ext255.i.i = zext i1 %tobool251.i.i to i32, !dbg !7705
  %43 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr256.i.i = lshr i64 %43, 32, !dbg !7705
  %and257.i.i = and i64 %shr256.i.i, 2, !dbg !7705
  %tobool258.i.i = icmp ne i64 %and257.i.i, 0, !dbg !7705
  %lnot259.i.i = xor i1 %tobool258.i.i, true, !dbg !7705
  %lnot.ext262.i.i = zext i1 %tobool258.i.i to i32, !dbg !7705
  %add263.i.i = add i32 %lnot.ext255.i.i, %lnot.ext262.i.i, !dbg !7705
  %44 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr264.i.i = lshr i64 %44, 32, !dbg !7705
  %and265.i.i = and i64 %shr264.i.i, 4, !dbg !7705
  %tobool266.i.i = icmp ne i64 %and265.i.i, 0, !dbg !7705
  %lnot267.i.i = xor i1 %tobool266.i.i, true, !dbg !7705
  %lnot.ext270.i.i = zext i1 %tobool266.i.i to i32, !dbg !7705
  %add271.i.i = add i32 %add263.i.i, %lnot.ext270.i.i, !dbg !7705
  %45 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr272.i.i = lshr i64 %45, 32, !dbg !7705
  %and273.i.i = and i64 %shr272.i.i, 8, !dbg !7705
  %tobool274.i.i = icmp ne i64 %and273.i.i, 0, !dbg !7705
  %lnot275.i.i = xor i1 %tobool274.i.i, true, !dbg !7705
  %lnot.ext278.i.i = zext i1 %tobool274.i.i to i32, !dbg !7705
  %add279.i.i = add i32 %add271.i.i, %lnot.ext278.i.i, !dbg !7705
  %46 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr280.i.i = lshr i64 %46, 32, !dbg !7705
  %and281.i.i = and i64 %shr280.i.i, 16, !dbg !7705
  %tobool282.i.i = icmp ne i64 %and281.i.i, 0, !dbg !7705
  %lnot283.i.i = xor i1 %tobool282.i.i, true, !dbg !7705
  %lnot.ext286.i.i = zext i1 %tobool282.i.i to i32, !dbg !7705
  %add287.i.i = add i32 %add279.i.i, %lnot.ext286.i.i, !dbg !7705
  %47 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr288.i.i = lshr i64 %47, 32, !dbg !7705
  %and289.i.i = and i64 %shr288.i.i, 32, !dbg !7705
  %tobool290.i.i = icmp ne i64 %and289.i.i, 0, !dbg !7705
  %lnot291.i.i = xor i1 %tobool290.i.i, true, !dbg !7705
  %lnot.ext294.i.i = zext i1 %tobool290.i.i to i32, !dbg !7705
  %add295.i.i = add i32 %add287.i.i, %lnot.ext294.i.i, !dbg !7705
  %48 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr296.i.i = lshr i64 %48, 32, !dbg !7705
  %and297.i.i = and i64 %shr296.i.i, 64, !dbg !7705
  %tobool298.i.i = icmp ne i64 %and297.i.i, 0, !dbg !7705
  %lnot299.i.i = xor i1 %tobool298.i.i, true, !dbg !7705
  %lnot.ext302.i.i = zext i1 %tobool298.i.i to i32, !dbg !7705
  %add303.i.i = add i32 %add295.i.i, %lnot.ext302.i.i, !dbg !7705
  %49 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr304.i.i = lshr i64 %49, 32, !dbg !7705
  %and305.i.i = and i64 %shr304.i.i, 128, !dbg !7705
  %tobool306.i.i = icmp ne i64 %and305.i.i, 0, !dbg !7705
  %lnot307.i.i = xor i1 %tobool306.i.i, true, !dbg !7705
  %lnot.ext310.i.i = zext i1 %tobool306.i.i to i32, !dbg !7705
  %add311.i.i = add i32 %add303.i.i, %lnot.ext310.i.i, !dbg !7705
  %50 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr312.i.i = lshr i64 %50, 32, !dbg !7705
  %shr313.i.i = lshr i64 %shr312.i.i, 8, !dbg !7705
  %and314.i.i = and i64 %shr313.i.i, 1, !dbg !7705
  %tobool315.i.i = icmp ne i64 %and314.i.i, 0, !dbg !7705
  %lnot316.i.i = xor i1 %tobool315.i.i, true, !dbg !7705
  %lnot.ext319.i.i = zext i1 %tobool315.i.i to i32, !dbg !7705
  %51 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr320.i.i = lshr i64 %51, 32, !dbg !7705
  %shr321.i.i = lshr i64 %shr320.i.i, 8, !dbg !7705
  %and322.i.i = and i64 %shr321.i.i, 2, !dbg !7705
  %tobool323.i.i = icmp ne i64 %and322.i.i, 0, !dbg !7705
  %lnot324.i.i = xor i1 %tobool323.i.i, true, !dbg !7705
  %lnot.ext327.i.i = zext i1 %tobool323.i.i to i32, !dbg !7705
  %add328.i.i = add i32 %lnot.ext319.i.i, %lnot.ext327.i.i, !dbg !7705
  %52 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr329.i.i = lshr i64 %52, 32, !dbg !7705
  %shr330.i.i = lshr i64 %shr329.i.i, 8, !dbg !7705
  %and331.i.i = and i64 %shr330.i.i, 4, !dbg !7705
  %tobool332.i.i = icmp ne i64 %and331.i.i, 0, !dbg !7705
  %lnot333.i.i = xor i1 %tobool332.i.i, true, !dbg !7705
  %lnot.ext336.i.i = zext i1 %tobool332.i.i to i32, !dbg !7705
  %add337.i.i = add i32 %add328.i.i, %lnot.ext336.i.i, !dbg !7705
  %53 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr338.i.i = lshr i64 %53, 32, !dbg !7705
  %shr339.i.i = lshr i64 %shr338.i.i, 8, !dbg !7705
  %and340.i.i = and i64 %shr339.i.i, 8, !dbg !7705
  %tobool341.i.i = icmp ne i64 %and340.i.i, 0, !dbg !7705
  %lnot342.i.i = xor i1 %tobool341.i.i, true, !dbg !7705
  %lnot.ext345.i.i = zext i1 %tobool341.i.i to i32, !dbg !7705
  %add346.i.i = add i32 %add337.i.i, %lnot.ext345.i.i, !dbg !7705
  %54 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr347.i.i = lshr i64 %54, 32, !dbg !7705
  %shr348.i.i = lshr i64 %shr347.i.i, 8, !dbg !7705
  %and349.i.i = and i64 %shr348.i.i, 16, !dbg !7705
  %tobool350.i.i = icmp ne i64 %and349.i.i, 0, !dbg !7705
  %lnot351.i.i = xor i1 %tobool350.i.i, true, !dbg !7705
  %lnot.ext354.i.i = zext i1 %tobool350.i.i to i32, !dbg !7705
  %add355.i.i = add i32 %add346.i.i, %lnot.ext354.i.i, !dbg !7705
  %55 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr356.i.i = lshr i64 %55, 32, !dbg !7705
  %shr357.i.i = lshr i64 %shr356.i.i, 8, !dbg !7705
  %and358.i.i = and i64 %shr357.i.i, 32, !dbg !7705
  %tobool359.i.i = icmp ne i64 %and358.i.i, 0, !dbg !7705
  %lnot360.i.i = xor i1 %tobool359.i.i, true, !dbg !7705
  %lnot.ext363.i.i = zext i1 %tobool359.i.i to i32, !dbg !7705
  %add364.i.i = add i32 %add355.i.i, %lnot.ext363.i.i, !dbg !7705
  %56 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr365.i.i = lshr i64 %56, 32, !dbg !7705
  %shr366.i.i = lshr i64 %shr365.i.i, 8, !dbg !7705
  %and367.i.i = and i64 %shr366.i.i, 64, !dbg !7705
  %tobool368.i.i = icmp ne i64 %and367.i.i, 0, !dbg !7705
  %lnot369.i.i = xor i1 %tobool368.i.i, true, !dbg !7705
  %lnot.ext372.i.i = zext i1 %tobool368.i.i to i32, !dbg !7705
  %add373.i.i = add i32 %add364.i.i, %lnot.ext372.i.i, !dbg !7705
  %57 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr374.i.i = lshr i64 %57, 32, !dbg !7705
  %shr375.i.i = lshr i64 %shr374.i.i, 8, !dbg !7705
  %and376.i.i = and i64 %shr375.i.i, 128, !dbg !7705
  %tobool377.i.i = icmp ne i64 %and376.i.i, 0, !dbg !7705
  %lnot378.i.i = xor i1 %tobool377.i.i, true, !dbg !7705
  %lnot.ext381.i.i = zext i1 %tobool377.i.i to i32, !dbg !7705
  %add382.i.i = add i32 %add373.i.i, %lnot.ext381.i.i, !dbg !7705
  %add383.i.i = add i32 %add311.i.i, %add382.i.i, !dbg !7705
  %58 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr384.i.i = lshr i64 %58, 32, !dbg !7705
  %shr385.i.i = lshr i64 %shr384.i.i, 16, !dbg !7705
  %and386.i.i = and i64 %shr385.i.i, 1, !dbg !7705
  %tobool387.i.i = icmp ne i64 %and386.i.i, 0, !dbg !7705
  %lnot388.i.i = xor i1 %tobool387.i.i, true, !dbg !7705
  %lnot.ext391.i.i = zext i1 %tobool387.i.i to i32, !dbg !7705
  %59 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr392.i.i = lshr i64 %59, 32, !dbg !7705
  %shr393.i.i = lshr i64 %shr392.i.i, 16, !dbg !7705
  %and394.i.i = and i64 %shr393.i.i, 2, !dbg !7705
  %tobool395.i.i = icmp ne i64 %and394.i.i, 0, !dbg !7705
  %lnot396.i.i = xor i1 %tobool395.i.i, true, !dbg !7705
  %lnot.ext399.i.i = zext i1 %tobool395.i.i to i32, !dbg !7705
  %add400.i.i = add i32 %lnot.ext391.i.i, %lnot.ext399.i.i, !dbg !7705
  %60 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr401.i.i = lshr i64 %60, 32, !dbg !7705
  %shr402.i.i = lshr i64 %shr401.i.i, 16, !dbg !7705
  %and403.i.i = and i64 %shr402.i.i, 4, !dbg !7705
  %tobool404.i.i = icmp ne i64 %and403.i.i, 0, !dbg !7705
  %lnot405.i.i = xor i1 %tobool404.i.i, true, !dbg !7705
  %lnot.ext408.i.i = zext i1 %tobool404.i.i to i32, !dbg !7705
  %add409.i.i = add i32 %add400.i.i, %lnot.ext408.i.i, !dbg !7705
  %61 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr410.i.i = lshr i64 %61, 32, !dbg !7705
  %shr411.i.i = lshr i64 %shr410.i.i, 16, !dbg !7705
  %and412.i.i = and i64 %shr411.i.i, 8, !dbg !7705
  %tobool413.i.i = icmp ne i64 %and412.i.i, 0, !dbg !7705
  %lnot414.i.i = xor i1 %tobool413.i.i, true, !dbg !7705
  %lnot.ext417.i.i = zext i1 %tobool413.i.i to i32, !dbg !7705
  %add418.i.i = add i32 %add409.i.i, %lnot.ext417.i.i, !dbg !7705
  %62 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr419.i.i = lshr i64 %62, 32, !dbg !7705
  %shr420.i.i = lshr i64 %shr419.i.i, 16, !dbg !7705
  %and421.i.i = and i64 %shr420.i.i, 16, !dbg !7705
  %tobool422.i.i = icmp ne i64 %and421.i.i, 0, !dbg !7705
  %lnot423.i.i = xor i1 %tobool422.i.i, true, !dbg !7705
  %lnot.ext426.i.i = zext i1 %tobool422.i.i to i32, !dbg !7705
  %add427.i.i = add i32 %add418.i.i, %lnot.ext426.i.i, !dbg !7705
  %63 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr428.i.i = lshr i64 %63, 32, !dbg !7705
  %shr429.i.i = lshr i64 %shr428.i.i, 16, !dbg !7705
  %and430.i.i = and i64 %shr429.i.i, 32, !dbg !7705
  %tobool431.i.i = icmp ne i64 %and430.i.i, 0, !dbg !7705
  %lnot432.i.i = xor i1 %tobool431.i.i, true, !dbg !7705
  %lnot.ext435.i.i = zext i1 %tobool431.i.i to i32, !dbg !7705
  %add436.i.i = add i32 %add427.i.i, %lnot.ext435.i.i, !dbg !7705
  %64 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr437.i.i = lshr i64 %64, 32, !dbg !7705
  %shr438.i.i = lshr i64 %shr437.i.i, 16, !dbg !7705
  %and439.i.i = and i64 %shr438.i.i, 64, !dbg !7705
  %tobool440.i.i = icmp ne i64 %and439.i.i, 0, !dbg !7705
  %lnot441.i.i = xor i1 %tobool440.i.i, true, !dbg !7705
  %lnot.ext444.i.i = zext i1 %tobool440.i.i to i32, !dbg !7705
  %add445.i.i = add i32 %add436.i.i, %lnot.ext444.i.i, !dbg !7705
  %65 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr446.i.i = lshr i64 %65, 32, !dbg !7705
  %shr447.i.i = lshr i64 %shr446.i.i, 16, !dbg !7705
  %and448.i.i = and i64 %shr447.i.i, 128, !dbg !7705
  %tobool449.i.i = icmp ne i64 %and448.i.i, 0, !dbg !7705
  %lnot450.i.i = xor i1 %tobool449.i.i, true, !dbg !7705
  %lnot.ext453.i.i = zext i1 %tobool449.i.i to i32, !dbg !7705
  %add454.i.i = add i32 %add445.i.i, %lnot.ext453.i.i, !dbg !7705
  %66 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr455.i.i = lshr i64 %66, 32, !dbg !7705
  %shr456.i.i = lshr i64 %shr455.i.i, 16, !dbg !7705
  %shr457.i.i = lshr i64 %shr456.i.i, 8, !dbg !7705
  %and458.i.i = and i64 %shr457.i.i, 1, !dbg !7705
  %tobool459.i.i = icmp ne i64 %and458.i.i, 0, !dbg !7705
  %lnot460.i.i = xor i1 %tobool459.i.i, true, !dbg !7705
  %lnot.ext463.i.i = zext i1 %tobool459.i.i to i32, !dbg !7705
  %67 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr464.i.i = lshr i64 %67, 32, !dbg !7705
  %shr465.i.i = lshr i64 %shr464.i.i, 16, !dbg !7705
  %shr466.i.i = lshr i64 %shr465.i.i, 8, !dbg !7705
  %and467.i.i = and i64 %shr466.i.i, 2, !dbg !7705
  %tobool468.i.i = icmp ne i64 %and467.i.i, 0, !dbg !7705
  %lnot469.i.i = xor i1 %tobool468.i.i, true, !dbg !7705
  %lnot.ext472.i.i = zext i1 %tobool468.i.i to i32, !dbg !7705
  %add473.i.i = add i32 %lnot.ext463.i.i, %lnot.ext472.i.i, !dbg !7705
  %68 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr474.i.i = lshr i64 %68, 32, !dbg !7705
  %shr475.i.i = lshr i64 %shr474.i.i, 16, !dbg !7705
  %shr476.i.i = lshr i64 %shr475.i.i, 8, !dbg !7705
  %and477.i.i = and i64 %shr476.i.i, 4, !dbg !7705
  %tobool478.i.i = icmp ne i64 %and477.i.i, 0, !dbg !7705
  %lnot479.i.i = xor i1 %tobool478.i.i, true, !dbg !7705
  %lnot.ext482.i.i = zext i1 %tobool478.i.i to i32, !dbg !7705
  %add483.i.i = add i32 %add473.i.i, %lnot.ext482.i.i, !dbg !7705
  %69 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr484.i.i = lshr i64 %69, 32, !dbg !7705
  %shr485.i.i = lshr i64 %shr484.i.i, 16, !dbg !7705
  %shr486.i.i = lshr i64 %shr485.i.i, 8, !dbg !7705
  %and487.i.i = and i64 %shr486.i.i, 8, !dbg !7705
  %tobool488.i.i = icmp ne i64 %and487.i.i, 0, !dbg !7705
  %lnot489.i.i = xor i1 %tobool488.i.i, true, !dbg !7705
  %lnot.ext492.i.i = zext i1 %tobool488.i.i to i32, !dbg !7705
  %add493.i.i = add i32 %add483.i.i, %lnot.ext492.i.i, !dbg !7705
  %70 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr494.i.i = lshr i64 %70, 32, !dbg !7705
  %shr495.i.i = lshr i64 %shr494.i.i, 16, !dbg !7705
  %shr496.i.i = lshr i64 %shr495.i.i, 8, !dbg !7705
  %and497.i.i = and i64 %shr496.i.i, 16, !dbg !7705
  %tobool498.i.i = icmp ne i64 %and497.i.i, 0, !dbg !7705
  %lnot499.i.i = xor i1 %tobool498.i.i, true, !dbg !7705
  %lnot.ext502.i.i = zext i1 %tobool498.i.i to i32, !dbg !7705
  %add503.i.i = add i32 %add493.i.i, %lnot.ext502.i.i, !dbg !7705
  %71 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr504.i.i = lshr i64 %71, 32, !dbg !7705
  %shr505.i.i = lshr i64 %shr504.i.i, 16, !dbg !7705
  %shr506.i.i = lshr i64 %shr505.i.i, 8, !dbg !7705
  %and507.i.i = and i64 %shr506.i.i, 32, !dbg !7705
  %tobool508.i.i = icmp ne i64 %and507.i.i, 0, !dbg !7705
  %lnot509.i.i = xor i1 %tobool508.i.i, true, !dbg !7705
  %lnot.ext512.i.i = zext i1 %tobool508.i.i to i32, !dbg !7705
  %add513.i.i = add i32 %add503.i.i, %lnot.ext512.i.i, !dbg !7705
  %72 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr514.i.i = lshr i64 %72, 32, !dbg !7705
  %shr515.i.i = lshr i64 %shr514.i.i, 16, !dbg !7705
  %shr516.i.i = lshr i64 %shr515.i.i, 8, !dbg !7705
  %and517.i.i = and i64 %shr516.i.i, 64, !dbg !7705
  %tobool518.i.i = icmp ne i64 %and517.i.i, 0, !dbg !7705
  %lnot519.i.i = xor i1 %tobool518.i.i, true, !dbg !7705
  %lnot.ext522.i.i = zext i1 %tobool518.i.i to i32, !dbg !7705
  %add523.i.i = add i32 %add513.i.i, %lnot.ext522.i.i, !dbg !7705
  %73 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  %shr524.i.i = lshr i64 %73, 32, !dbg !7705
  %shr525.i.i = lshr i64 %shr524.i.i, 16, !dbg !7705
  %shr526.i.i = lshr i64 %shr525.i.i, 8, !dbg !7705
  %and527.i.i = and i64 %shr526.i.i, 128, !dbg !7705
  %tobool528.i.i = icmp ne i64 %and527.i.i, 0, !dbg !7705
  %lnot529.i.i = xor i1 %tobool528.i.i, true, !dbg !7705
  %lnot.ext532.i.i = zext i1 %tobool528.i.i to i32, !dbg !7705
  %add533.i.i = add i32 %add523.i.i, %lnot.ext532.i.i, !dbg !7705
  %add534.i.i = add i32 %add454.i.i, %add533.i.i, !dbg !7705
  %add535.i.i = add i32 %add383.i.i, %add534.i.i, !dbg !7705
  %add536.i.i = add i32 %add248.i.i, %add535.i.i, !dbg !7705
  %conv.i.i = zext i32 %add536.i.i to i64, !dbg !7705
  br label %hweight_long.exit.i, !dbg !7705

cond.false.i.i:                                   ; preds = %if.then.i
  %74 = load i64, i64* %w.addr.i.i, align 8, !dbg !7705
  store i64 %74, i64* %w.addr.i.i.i, align 8
  %75 = load i64, i64* %w.addr.i.i.i, align 8, !dbg !7706
  %76 = call i64 asm "# ALT: oldnstr\0A661:\0A\09call __sw_hweight64\0A662:\0A# ALT: padding\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 4*32+23)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A# ALT: replacement 1\0A6641:\0A\09popcntq $1, $0\0A6651:\0A.popsection\0A", "={ax},{di},~{dirflag},~{fpsr},~{flags}"(i64 %75) #15, !dbg !7707, !srcloc !7708
  store i64 %76, i64* %res.i.i.i, align 8, !dbg !7707
  %77 = load i64, i64* %res.i.i.i, align 8, !dbg !7709
  br label %hweight_long.exit.i, !dbg !7705

hweight_long.exit.i:                              ; preds = %cond.false.i.i, %cond.true.i.i
  %cond.i.i = phi i64 [ %conv.i.i, %cond.true.i.i ], [ %77, %cond.false.i.i ], !dbg !7705
  %conv.i = trunc i64 %cond.i.i to i32, !dbg !7710
  store i32 %conv.i, i32* %retval.i, align 4, !dbg !7711
  br label %bitmap_weight.exit, !dbg !7711

if.end.i:                                         ; preds = %land.lhs.true1.i, %land.lhs.true.i, %entry
  %78 = load i64*, i64** %src.addr.i, align 8, !dbg !7712
  %79 = load i32, i32* %nbits.addr.i, align 4, !dbg !7713
  %call4.i = call i32 @__bitmap_weight(i64* %78, i32 %79) #14, !dbg !7714
  store i32 %call4.i, i32* %retval.i, align 4, !dbg !7715
  br label %bitmap_weight.exit, !dbg !7715

bitmap_weight.exit:                               ; preds = %hweight_long.exit.i, %if.end.i
  %80 = load i32, i32* %retval.i, align 4, !dbg !7716
  ret i32 %80, !dbg !7717
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_least_used_cpu_on_node(i32 %node) #2 !dbg !7718 {
entry:
  %node.addr = alloca i32, align 4
  %cpu = alloca i32, align 4
  %least_used_cpu = alloca i32, align 4
  %least_cnt = alloca i32, align 4
  %node_mask = alloca %struct.cpumask*, align 8
  store i32 %node, i32* %node.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %node.addr, metadata !7719, metadata !DIExpression()), !dbg !7720
  call void @llvm.dbg.declare(metadata i32* %cpu, metadata !7721, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.declare(metadata i32* %least_used_cpu, metadata !7723, metadata !DIExpression()), !dbg !7724
  call void @llvm.dbg.declare(metadata i32* %least_cnt, metadata !7725, metadata !DIExpression()), !dbg !7726
  call void @llvm.dbg.declare(metadata %struct.cpumask** %node_mask, metadata !7727, metadata !DIExpression()), !dbg !7728
  %0 = load i32, i32* %node.addr, align 4, !dbg !7729
  store %struct.cpumask* @__cpu_online_mask, %struct.cpumask** %node_mask, align 8, !dbg !7730
  %1 = load %struct.cpumask*, %struct.cpumask** %node_mask, align 8, !dbg !7731
  %call = call i32 @cpumask_first(%struct.cpumask* %1) #12, !dbg !7732
  store i32 %call, i32* %least_used_cpu, align 4, !dbg !7733
  %2 = load i32, i32* %least_used_cpu, align 4, !dbg !7734
  %idxprom = sext i32 %2 to i64, !dbg !7735
  %arrayidx = getelementptr [1 x i32], [1 x i32]* @cpu_use, i64 0, i64 %idxprom, !dbg !7735
  %3 = load i32, i32* %arrayidx, align 4, !dbg !7735
  store i32 %3, i32* %least_cnt, align 4, !dbg !7736
  %4 = load i32, i32* %least_used_cpu, align 4, !dbg !7737
  store i32 %4, i32* %cpu, align 4, !dbg !7738
  store i32 0, i32* %cpu, align 4, !dbg !7739
  br label %for.cond, !dbg !7739

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %cpu, align 4, !dbg !7741
  %cmp = icmp slt i32 %5, 1, !dbg !7741
  br i1 %cmp, label %for.body, label %for.end, !dbg !7739

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %cpu, align 4, !dbg !7743
  %idxprom1 = sext i32 %6 to i64, !dbg !7746
  %arrayidx2 = getelementptr [1 x i32], [1 x i32]* @cpu_use, i64 0, i64 %idxprom1, !dbg !7746
  %7 = load i32, i32* %arrayidx2, align 4, !dbg !7746
  %8 = load i32, i32* %least_cnt, align 4, !dbg !7747
  %cmp3 = icmp ult i32 %7, %8, !dbg !7748
  br i1 %cmp3, label %if.then, label %if.end, !dbg !7749

if.then:                                          ; preds = %for.body
  %9 = load i32, i32* %cpu, align 4, !dbg !7750
  store i32 %9, i32* %least_used_cpu, align 4, !dbg !7752
  %10 = load i32, i32* %cpu, align 4, !dbg !7753
  %idxprom4 = sext i32 %10 to i64, !dbg !7754
  %arrayidx5 = getelementptr [1 x i32], [1 x i32]* @cpu_use, i64 0, i64 %idxprom4, !dbg !7754
  %11 = load i32, i32* %arrayidx5, align 4, !dbg !7754
  store i32 %11, i32* %least_cnt, align 4, !dbg !7755
  br label %if.end, !dbg !7756

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !7757

for.inc:                                          ; preds = %if.end
  %12 = load i32, i32* %cpu, align 4, !dbg !7741
  %inc = add i32 %12, 1, !dbg !7741
  store i32 %inc, i32* %cpu, align 4, !dbg !7741
  %13 = load %struct.cpumask*, %struct.cpumask** %node_mask, align 8, !dbg !7741
  br label %for.cond, !dbg !7741, !llvm.loop !7758

for.end:                                          ; preds = %for.cond
  %14 = load i32, i32* %least_used_cpu, align 4, !dbg !7760
  %idxprom6 = sext i32 %14 to i64, !dbg !7761
  %arrayidx7 = getelementptr [1 x i32], [1 x i32]* @cpu_use, i64 0, i64 %idxprom6, !dbg !7761
  %15 = load i32, i32* %arrayidx7, align 4, !dbg !7762
  %inc8 = add i32 %15, 1, !dbg !7762
  store i32 %inc8, i32* %arrayidx7, align 4, !dbg !7762
  %16 = load i32, i32* %least_used_cpu, align 4, !dbg !7763
  ret i32 %16, !dbg !7764
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_work(%struct.work_struct* %work, i32 %onstack) #2 !dbg !7765 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %onstack.addr = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !7768, metadata !DIExpression()), !dbg !7769
  store i32 %onstack, i32* %onstack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onstack.addr, metadata !7770, metadata !DIExpression()), !dbg !7771
  ret void, !dbg !7772
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mtip_workq_sdbf0(%struct.work_struct* %work) #2 !dbg !7773 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %w = alloca %struct.mtip_work*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !7774, metadata !DIExpression()), !dbg !7775
  call void @llvm.dbg.declare(metadata %struct.mtip_work** %w, metadata !7776, metadata !DIExpression()), !dbg !7775
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !7775
  %1 = bitcast %struct.work_struct* %0 to %struct.mtip_work*, !dbg !7775
  store %struct.mtip_work* %1, %struct.mtip_work** %w, align 8, !dbg !7775
  %2 = load %struct.mtip_work*, %struct.mtip_work** %w, align 8, !dbg !7775
  %port = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %2, i32 0, i32 1, !dbg !7775
  %3 = load i8*, i8** %port, align 8, !dbg !7775
  %4 = bitcast i8* %3 to %struct.mtip_port*, !dbg !7775
  %5 = load %struct.mtip_work*, %struct.mtip_work** %w, align 8, !dbg !7775
  %completed = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %5, i32 0, i32 3, !dbg !7775
  %6 = load i32, i32* %completed, align 4, !dbg !7775
  call void @mtip_workq_sdbfx(%struct.mtip_port* %4, i32 0, i32 %6) #12, !dbg !7775
  ret void, !dbg !7775
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mtip_workq_sdbf1(%struct.work_struct* %work) #2 !dbg !7777 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %w = alloca %struct.mtip_work*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !7778, metadata !DIExpression()), !dbg !7779
  call void @llvm.dbg.declare(metadata %struct.mtip_work** %w, metadata !7780, metadata !DIExpression()), !dbg !7779
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !7779
  %1 = bitcast %struct.work_struct* %0 to %struct.mtip_work*, !dbg !7779
  store %struct.mtip_work* %1, %struct.mtip_work** %w, align 8, !dbg !7779
  %2 = load %struct.mtip_work*, %struct.mtip_work** %w, align 8, !dbg !7779
  %port = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %2, i32 0, i32 1, !dbg !7779
  %3 = load i8*, i8** %port, align 8, !dbg !7779
  %4 = bitcast i8* %3 to %struct.mtip_port*, !dbg !7779
  %5 = load %struct.mtip_work*, %struct.mtip_work** %w, align 8, !dbg !7779
  %completed = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %5, i32 0, i32 3, !dbg !7779
  %6 = load i32, i32* %completed, align 4, !dbg !7779
  call void @mtip_workq_sdbfx(%struct.mtip_port* %4, i32 1, i32 %6) #12, !dbg !7779
  ret void, !dbg !7779
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mtip_workq_sdbf2(%struct.work_struct* %work) #2 !dbg !7781 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %w = alloca %struct.mtip_work*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !7782, metadata !DIExpression()), !dbg !7783
  call void @llvm.dbg.declare(metadata %struct.mtip_work** %w, metadata !7784, metadata !DIExpression()), !dbg !7783
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !7783
  %1 = bitcast %struct.work_struct* %0 to %struct.mtip_work*, !dbg !7783
  store %struct.mtip_work* %1, %struct.mtip_work** %w, align 8, !dbg !7783
  %2 = load %struct.mtip_work*, %struct.mtip_work** %w, align 8, !dbg !7783
  %port = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %2, i32 0, i32 1, !dbg !7783
  %3 = load i8*, i8** %port, align 8, !dbg !7783
  %4 = bitcast i8* %3 to %struct.mtip_port*, !dbg !7783
  %5 = load %struct.mtip_work*, %struct.mtip_work** %w, align 8, !dbg !7783
  %completed = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %5, i32 0, i32 3, !dbg !7783
  %6 = load i32, i32* %completed, align 4, !dbg !7783
  call void @mtip_workq_sdbfx(%struct.mtip_port* %4, i32 2, i32 %6) #12, !dbg !7783
  ret void, !dbg !7783
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mtip_workq_sdbf3(%struct.work_struct* %work) #2 !dbg !7785 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %w = alloca %struct.mtip_work*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !7786, metadata !DIExpression()), !dbg !7787
  call void @llvm.dbg.declare(metadata %struct.mtip_work** %w, metadata !7788, metadata !DIExpression()), !dbg !7787
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !7787
  %1 = bitcast %struct.work_struct* %0 to %struct.mtip_work*, !dbg !7787
  store %struct.mtip_work* %1, %struct.mtip_work** %w, align 8, !dbg !7787
  %2 = load %struct.mtip_work*, %struct.mtip_work** %w, align 8, !dbg !7787
  %port = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %2, i32 0, i32 1, !dbg !7787
  %3 = load i8*, i8** %port, align 8, !dbg !7787
  %4 = bitcast i8* %3 to %struct.mtip_port*, !dbg !7787
  %5 = load %struct.mtip_work*, %struct.mtip_work** %w, align 8, !dbg !7787
  %completed = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %5, i32 0, i32 3, !dbg !7787
  %6 = load i32, i32* %completed, align 4, !dbg !7787
  call void @mtip_workq_sdbfx(%struct.mtip_port* %4, i32 3, i32 %6) #12, !dbg !7787
  ret void, !dbg !7787
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mtip_workq_sdbf4(%struct.work_struct* %work) #2 !dbg !7789 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %w = alloca %struct.mtip_work*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !7790, metadata !DIExpression()), !dbg !7791
  call void @llvm.dbg.declare(metadata %struct.mtip_work** %w, metadata !7792, metadata !DIExpression()), !dbg !7791
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !7791
  %1 = bitcast %struct.work_struct* %0 to %struct.mtip_work*, !dbg !7791
  store %struct.mtip_work* %1, %struct.mtip_work** %w, align 8, !dbg !7791
  %2 = load %struct.mtip_work*, %struct.mtip_work** %w, align 8, !dbg !7791
  %port = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %2, i32 0, i32 1, !dbg !7791
  %3 = load i8*, i8** %port, align 8, !dbg !7791
  %4 = bitcast i8* %3 to %struct.mtip_port*, !dbg !7791
  %5 = load %struct.mtip_work*, %struct.mtip_work** %w, align 8, !dbg !7791
  %completed = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %5, i32 0, i32 3, !dbg !7791
  %6 = load i32, i32* %completed, align 4, !dbg !7791
  call void @mtip_workq_sdbfx(%struct.mtip_port* %4, i32 4, i32 %6) #12, !dbg !7791
  ret void, !dbg !7791
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mtip_workq_sdbf5(%struct.work_struct* %work) #2 !dbg !7793 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %w = alloca %struct.mtip_work*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !7794, metadata !DIExpression()), !dbg !7795
  call void @llvm.dbg.declare(metadata %struct.mtip_work** %w, metadata !7796, metadata !DIExpression()), !dbg !7795
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !7795
  %1 = bitcast %struct.work_struct* %0 to %struct.mtip_work*, !dbg !7795
  store %struct.mtip_work* %1, %struct.mtip_work** %w, align 8, !dbg !7795
  %2 = load %struct.mtip_work*, %struct.mtip_work** %w, align 8, !dbg !7795
  %port = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %2, i32 0, i32 1, !dbg !7795
  %3 = load i8*, i8** %port, align 8, !dbg !7795
  %4 = bitcast i8* %3 to %struct.mtip_port*, !dbg !7795
  %5 = load %struct.mtip_work*, %struct.mtip_work** %w, align 8, !dbg !7795
  %completed = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %5, i32 0, i32 3, !dbg !7795
  %6 = load i32, i32* %completed, align 4, !dbg !7795
  call void @mtip_workq_sdbfx(%struct.mtip_port* %4, i32 5, i32 %6) #12, !dbg !7795
  ret void, !dbg !7795
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mtip_workq_sdbf6(%struct.work_struct* %work) #2 !dbg !7797 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %w = alloca %struct.mtip_work*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !7798, metadata !DIExpression()), !dbg !7799
  call void @llvm.dbg.declare(metadata %struct.mtip_work** %w, metadata !7800, metadata !DIExpression()), !dbg !7799
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !7799
  %1 = bitcast %struct.work_struct* %0 to %struct.mtip_work*, !dbg !7799
  store %struct.mtip_work* %1, %struct.mtip_work** %w, align 8, !dbg !7799
  %2 = load %struct.mtip_work*, %struct.mtip_work** %w, align 8, !dbg !7799
  %port = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %2, i32 0, i32 1, !dbg !7799
  %3 = load i8*, i8** %port, align 8, !dbg !7799
  %4 = bitcast i8* %3 to %struct.mtip_port*, !dbg !7799
  %5 = load %struct.mtip_work*, %struct.mtip_work** %w, align 8, !dbg !7799
  %completed = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %5, i32 0, i32 3, !dbg !7799
  %6 = load i32, i32* %completed, align 4, !dbg !7799
  call void @mtip_workq_sdbfx(%struct.mtip_port* %4, i32 6, i32 %6) #12, !dbg !7799
  ret void, !dbg !7799
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mtip_workq_sdbf7(%struct.work_struct* %work) #2 !dbg !7801 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %w = alloca %struct.mtip_work*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !7802, metadata !DIExpression()), !dbg !7803
  call void @llvm.dbg.declare(metadata %struct.mtip_work** %w, metadata !7804, metadata !DIExpression()), !dbg !7803
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !7803
  %1 = bitcast %struct.work_struct* %0 to %struct.mtip_work*, !dbg !7803
  store %struct.mtip_work* %1, %struct.mtip_work** %w, align 8, !dbg !7803
  %2 = load %struct.mtip_work*, %struct.mtip_work** %w, align 8, !dbg !7803
  %port = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %2, i32 0, i32 1, !dbg !7803
  %3 = load i8*, i8** %port, align 8, !dbg !7803
  %4 = bitcast i8* %3 to %struct.mtip_port*, !dbg !7803
  %5 = load %struct.mtip_work*, %struct.mtip_work** %w, align 8, !dbg !7803
  %completed = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %5, i32 0, i32 3, !dbg !7803
  %6 = load i32, i32* %completed, align 4, !dbg !7803
  call void @mtip_workq_sdbfx(%struct.mtip_port* %4, i32 7, i32 %6) #12, !dbg !7803
  ret void, !dbg !7803
}

; Function Attrs: noredzone
declare dso_local void @pci_set_master(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local i32 @pci_enable_msi(%struct.pci_dev*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mtip_fix_ero_nosnoop(%struct.driver_data* %dd, %struct.pci_dev* %pdev) #2 !dbg !7805 {
entry:
  %dd.addr = alloca %struct.driver_data*, align 8
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %parent_dev = alloca %struct.pci_dev*, align 8
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !7808, metadata !DIExpression()), !dbg !7809
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !7810, metadata !DIExpression()), !dbg !7811
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7812
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 1, !dbg !7814
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !7814
  %tobool = icmp ne %struct.pci_bus* %1, null, !dbg !7812
  br i1 %tobool, label %land.lhs.true, label %if.end49, !dbg !7815

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7816
  %bus1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 1, !dbg !7817
  %3 = load %struct.pci_bus*, %struct.pci_bus** %bus1, align 8, !dbg !7817
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %3, i32 0, i32 4, !dbg !7818
  %4 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !7818
  %tobool2 = icmp ne %struct.pci_dev* %4, null, !dbg !7816
  br i1 %tobool2, label %if.then, label %if.end49, !dbg !7819

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7820
  %bus3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 1, !dbg !7823
  %6 = load %struct.pci_bus*, %struct.pci_bus** %bus3, align 8, !dbg !7823
  %self4 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %6, i32 0, i32 4, !dbg !7824
  %7 = load %struct.pci_dev*, %struct.pci_dev** %self4, align 8, !dbg !7824
  %vendor = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 7, !dbg !7825
  %8 = load i16, i16* %vendor, align 4, !dbg !7825
  %conv = zext i16 %8 to i32, !dbg !7820
  %cmp = icmp eq i32 %conv, 4098, !dbg !7826
  br i1 %cmp, label %land.lhs.true6, label %if.else, !dbg !7827

land.lhs.true6:                                   ; preds = %if.then
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7828
  %bus7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 1, !dbg !7829
  %10 = load %struct.pci_bus*, %struct.pci_bus** %bus7, align 8, !dbg !7829
  %self8 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %10, i32 0, i32 4, !dbg !7830
  %11 = load %struct.pci_dev*, %struct.pci_dev** %self8, align 8, !dbg !7830
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 8, !dbg !7831
  %12 = load i16, i16* %device, align 2, !dbg !7831
  %conv9 = zext i16 %12 to i32, !dbg !7828
  %and = and i32 %conv9, 65280, !dbg !7832
  %cmp10 = icmp eq i32 %and, 23040, !dbg !7833
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !7834

if.then12:                                        ; preds = %land.lhs.true6
  %13 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !7835
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7837
  %bus13 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 1, !dbg !7838
  %15 = load %struct.pci_bus*, %struct.pci_bus** %bus13, align 8, !dbg !7838
  %self14 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %15, i32 0, i32 4, !dbg !7839
  %16 = load %struct.pci_dev*, %struct.pci_dev** %self14, align 8, !dbg !7839
  call void @mtip_disable_link_opts(%struct.driver_data* %13, %struct.pci_dev* %16) #12, !dbg !7840
  br label %if.end48, !dbg !7841

if.else:                                          ; preds = %land.lhs.true6, %if.then
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %parent_dev, metadata !7842, metadata !DIExpression()), !dbg !7844
  %17 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7845
  %bus15 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 1, !dbg !7846
  %18 = load %struct.pci_bus*, %struct.pci_bus** %bus15, align 8, !dbg !7846
  %self16 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %18, i32 0, i32 4, !dbg !7847
  %19 = load %struct.pci_dev*, %struct.pci_dev** %self16, align 8, !dbg !7847
  store %struct.pci_dev* %19, %struct.pci_dev** %parent_dev, align 8, !dbg !7844
  %20 = load %struct.pci_dev*, %struct.pci_dev** %parent_dev, align 8, !dbg !7848
  %bus17 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 1, !dbg !7850
  %21 = load %struct.pci_bus*, %struct.pci_bus** %bus17, align 8, !dbg !7850
  %tobool18 = icmp ne %struct.pci_bus* %21, null, !dbg !7848
  br i1 %tobool18, label %land.lhs.true19, label %if.end, !dbg !7851

land.lhs.true19:                                  ; preds = %if.else
  %22 = load %struct.pci_dev*, %struct.pci_dev** %parent_dev, align 8, !dbg !7852
  %bus20 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %22, i32 0, i32 1, !dbg !7853
  %23 = load %struct.pci_bus*, %struct.pci_bus** %bus20, align 8, !dbg !7853
  %parent = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %23, i32 0, i32 1, !dbg !7854
  %24 = load %struct.pci_bus*, %struct.pci_bus** %parent, align 8, !dbg !7854
  %tobool21 = icmp ne %struct.pci_bus* %24, null, !dbg !7852
  br i1 %tobool21, label %land.lhs.true22, label %if.end, !dbg !7855

land.lhs.true22:                                  ; preds = %land.lhs.true19
  %25 = load %struct.pci_dev*, %struct.pci_dev** %parent_dev, align 8, !dbg !7856
  %bus23 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 1, !dbg !7857
  %26 = load %struct.pci_bus*, %struct.pci_bus** %bus23, align 8, !dbg !7857
  %parent24 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %26, i32 0, i32 1, !dbg !7858
  %27 = load %struct.pci_bus*, %struct.pci_bus** %parent24, align 8, !dbg !7858
  %self25 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %27, i32 0, i32 4, !dbg !7859
  %28 = load %struct.pci_dev*, %struct.pci_dev** %self25, align 8, !dbg !7859
  %tobool26 = icmp ne %struct.pci_dev* %28, null, !dbg !7856
  br i1 %tobool26, label %land.lhs.true27, label %if.end, !dbg !7860

land.lhs.true27:                                  ; preds = %land.lhs.true22
  %29 = load %struct.pci_dev*, %struct.pci_dev** %parent_dev, align 8, !dbg !7861
  %bus28 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %29, i32 0, i32 1, !dbg !7862
  %30 = load %struct.pci_bus*, %struct.pci_bus** %bus28, align 8, !dbg !7862
  %parent29 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %30, i32 0, i32 1, !dbg !7863
  %31 = load %struct.pci_bus*, %struct.pci_bus** %parent29, align 8, !dbg !7863
  %self30 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %31, i32 0, i32 4, !dbg !7864
  %32 = load %struct.pci_dev*, %struct.pci_dev** %self30, align 8, !dbg !7864
  %vendor31 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %32, i32 0, i32 7, !dbg !7865
  %33 = load i16, i16* %vendor31, align 4, !dbg !7865
  %conv32 = zext i16 %33 to i32, !dbg !7861
  %cmp33 = icmp eq i32 %conv32, 4098, !dbg !7866
  br i1 %cmp33, label %land.lhs.true35, label %if.end, !dbg !7867

land.lhs.true35:                                  ; preds = %land.lhs.true27
  %34 = load %struct.pci_dev*, %struct.pci_dev** %parent_dev, align 8, !dbg !7868
  %bus36 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %34, i32 0, i32 1, !dbg !7869
  %35 = load %struct.pci_bus*, %struct.pci_bus** %bus36, align 8, !dbg !7869
  %parent37 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %35, i32 0, i32 1, !dbg !7870
  %36 = load %struct.pci_bus*, %struct.pci_bus** %parent37, align 8, !dbg !7870
  %self38 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %36, i32 0, i32 4, !dbg !7871
  %37 = load %struct.pci_dev*, %struct.pci_dev** %self38, align 8, !dbg !7871
  %device39 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %37, i32 0, i32 8, !dbg !7872
  %38 = load i16, i16* %device39, align 2, !dbg !7872
  %conv40 = zext i16 %38 to i32, !dbg !7868
  %and41 = and i32 %conv40, 65280, !dbg !7873
  %cmp42 = icmp eq i32 %and41, 23040, !dbg !7874
  br i1 %cmp42, label %if.then44, label %if.end, !dbg !7875

if.then44:                                        ; preds = %land.lhs.true35
  %39 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !7876
  %40 = load %struct.pci_dev*, %struct.pci_dev** %parent_dev, align 8, !dbg !7878
  %bus45 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %40, i32 0, i32 1, !dbg !7879
  %41 = load %struct.pci_bus*, %struct.pci_bus** %bus45, align 8, !dbg !7879
  %parent46 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %41, i32 0, i32 1, !dbg !7880
  %42 = load %struct.pci_bus*, %struct.pci_bus** %parent46, align 8, !dbg !7880
  %self47 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %42, i32 0, i32 4, !dbg !7881
  %43 = load %struct.pci_dev*, %struct.pci_dev** %self47, align 8, !dbg !7881
  call void @mtip_disable_link_opts(%struct.driver_data* %39, %struct.pci_dev* %43) #12, !dbg !7882
  br label %if.end, !dbg !7883

if.end:                                           ; preds = %if.then44, %land.lhs.true35, %land.lhs.true27, %land.lhs.true22, %land.lhs.true19, %if.else
  br label %if.end48

if.end48:                                         ; preds = %if.end, %if.then12
  br label %if.end49, !dbg !7884

if.end49:                                         ; preds = %if.end48, %land.lhs.true, %entry
  ret void, !dbg !7885
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_block_initialize(%struct.driver_data* %dd) #2 !dbg !6386 {
entry:
  %retval = alloca i32, align 4
  %dd.addr = alloca %struct.driver_data*, align 8
  %rv = alloca i32, align 4
  %wait_for_rebuild = alloca i32, align 4
  %capacity = alloca i64, align 8
  %index = alloca i32, align 4
  %kobj = alloca %struct.kobject*, align 8
  %__name = alloca i8*, align 8
  %__disk = alloca %struct.gendisk*, align 8
  %tmp = alloca %struct.gendisk*, align 8
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !7886, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.declare(metadata i32* %rv, metadata !7888, metadata !DIExpression()), !dbg !7889
  store i32 0, i32* %rv, align 4, !dbg !7889
  call void @llvm.dbg.declare(metadata i32* %wait_for_rebuild, metadata !7890, metadata !DIExpression()), !dbg !7891
  store i32 0, i32* %wait_for_rebuild, align 4, !dbg !7891
  call void @llvm.dbg.declare(metadata i64* %capacity, metadata !7892, metadata !DIExpression()), !dbg !7893
  call void @llvm.dbg.declare(metadata i32* %index, metadata !7894, metadata !DIExpression()), !dbg !7895
  store i32 0, i32* %index, align 4, !dbg !7895
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj, metadata !7896, metadata !DIExpression()), !dbg !7897
  %0 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !7898
  %disk = getelementptr inbounds %struct.driver_data, %struct.driver_data* %0, i32 0, i32 3, !dbg !7900
  %1 = load %struct.gendisk*, %struct.gendisk** %disk, align 8, !dbg !7900
  %tobool = icmp ne %struct.gendisk* %1, null, !dbg !7898
  br i1 %tobool, label %if.then, label %if.end, !dbg !7901

if.then:                                          ; preds = %entry
  br label %skip_create_disk, !dbg !7902

if.end:                                           ; preds = %entry
  %2 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !7903
  %call = call i32 @mtip_hw_init(%struct.driver_data* %2) #12, !dbg !7905
  %tobool1 = icmp ne i32 %call, 0, !dbg !7905
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !7906

if.then2:                                         ; preds = %if.end
  store i32 -22, i32* %rv, align 4, !dbg !7907
  br label %protocol_init_error, !dbg !7909

if.end3:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__name, metadata !7910, metadata !DIExpression()), !dbg !7912
  call void @llvm.dbg.declare(metadata %struct.gendisk** %__disk, metadata !7913, metadata !DIExpression()), !dbg !7912
  store i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.19, i64 0, i64 0), i8** %__name, align 8, !dbg !7912
  %3 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !7912
  %numa_node = getelementptr inbounds %struct.driver_data, %struct.driver_data* %3, i32 0, i32 15, !dbg !7912
  %4 = load i32, i32* %numa_node, align 4, !dbg !7912
  %call4 = call %struct.gendisk* @__alloc_disk_node(i32 16, i32 %4) #12, !dbg !7912
  store %struct.gendisk* %call4, %struct.gendisk** %__disk, align 8, !dbg !7912
  %5 = load %struct.gendisk*, %struct.gendisk** %__disk, align 8, !dbg !7914
  %tobool5 = icmp ne %struct.gendisk* %5, null, !dbg !7914
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !7912

if.then6:                                         ; preds = %if.end3
  br label %do.body, !dbg !7914

do.body:                                          ; preds = %if.then6
  %6 = load i8*, i8** %__name, align 8, !dbg !7916
  br label %do.end, !dbg !7916

do.end:                                           ; preds = %do.body
  br label %if.end7, !dbg !7916

if.end7:                                          ; preds = %do.end, %if.end3
  %7 = load %struct.gendisk*, %struct.gendisk** %__disk, align 8, !dbg !7912
  store %struct.gendisk* %7, %struct.gendisk** %tmp, align 8, !dbg !7914
  %8 = load %struct.gendisk*, %struct.gendisk** %tmp, align 8, !dbg !7912
  %9 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !7918
  %disk8 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %9, i32 0, i32 3, !dbg !7919
  store %struct.gendisk* %8, %struct.gendisk** %disk8, align 8, !dbg !7920
  %10 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !7921
  %disk9 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %10, i32 0, i32 3, !dbg !7923
  %11 = load %struct.gendisk*, %struct.gendisk** %disk9, align 8, !dbg !7923
  %cmp = icmp eq %struct.gendisk* %11, null, !dbg !7924
  br i1 %cmp, label %if.then10, label %if.end11, !dbg !7925

if.then10:                                        ; preds = %if.end7
  %12 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !7926
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %12, i32 0, i32 4, !dbg !7926
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7926
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 41, !dbg !7926
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i64 0, i64 0)) #13, !dbg !7926
  store i32 -22, i32* %rv, align 4, !dbg !7928
  br label %alloc_disk_error, !dbg !7929

if.end11:                                         ; preds = %if.end7
  %call12 = call i32 @ida_alloc(%struct.ida* @rssd_index_ida, i32 3264) #12, !dbg !7930
  store i32 %call12, i32* %rv, align 4, !dbg !7931
  %14 = load i32, i32* %rv, align 4, !dbg !7932
  %cmp13 = icmp slt i32 %14, 0, !dbg !7934
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !7935

if.then14:                                        ; preds = %if.end11
  br label %ida_get_error, !dbg !7936

if.end15:                                         ; preds = %if.end11
  %15 = load i32, i32* %rv, align 4, !dbg !7937
  store i32 %15, i32* %index, align 4, !dbg !7938
  %16 = load i32, i32* %index, align 4, !dbg !7939
  %17 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !7940
  %disk16 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %17, i32 0, i32 3, !dbg !7941
  %18 = load %struct.gendisk*, %struct.gendisk** %disk16, align 8, !dbg !7941
  %disk_name = getelementptr inbounds %struct.gendisk, %struct.gendisk* %18, i32 0, i32 3, !dbg !7942
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %disk_name, i64 0, i64 0, !dbg !7940
  %call17 = call i32 @rssd_disk_name_format(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0), i32 %16, i8* %arraydecay, i32 32) #12, !dbg !7943
  store i32 %call17, i32* %rv, align 4, !dbg !7944
  %19 = load i32, i32* %rv, align 4, !dbg !7945
  %tobool18 = icmp ne i32 %19, 0, !dbg !7945
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !7947

if.then19:                                        ; preds = %if.end15
  br label %disk_index_error, !dbg !7948

if.end20:                                         ; preds = %if.end15
  %20 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !7949
  %major = getelementptr inbounds %struct.driver_data, %struct.driver_data* %20, i32 0, i32 1, !dbg !7950
  %21 = load i32, i32* %major, align 8, !dbg !7950
  %22 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !7951
  %disk21 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %22, i32 0, i32 3, !dbg !7952
  %23 = load %struct.gendisk*, %struct.gendisk** %disk21, align 8, !dbg !7952
  %major22 = getelementptr inbounds %struct.gendisk, %struct.gendisk* %23, i32 0, i32 0, !dbg !7953
  store i32 %21, i32* %major22, align 8, !dbg !7954
  %24 = load i32, i32* %index, align 4, !dbg !7955
  %mul = mul i32 %24, 16, !dbg !7956
  %25 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !7957
  %disk23 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %25, i32 0, i32 3, !dbg !7958
  %26 = load %struct.gendisk*, %struct.gendisk** %disk23, align 8, !dbg !7958
  %first_minor = getelementptr inbounds %struct.gendisk, %struct.gendisk* %26, i32 0, i32 1, !dbg !7959
  store i32 %mul, i32* %first_minor, align 4, !dbg !7960
  %27 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !7961
  %disk24 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %27, i32 0, i32 3, !dbg !7962
  %28 = load %struct.gendisk*, %struct.gendisk** %disk24, align 8, !dbg !7962
  %minors = getelementptr inbounds %struct.gendisk, %struct.gendisk* %28, i32 0, i32 2, !dbg !7963
  store i32 16, i32* %minors, align 8, !dbg !7964
  %29 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !7965
  %disk25 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %29, i32 0, i32 3, !dbg !7966
  %30 = load %struct.gendisk*, %struct.gendisk** %disk25, align 8, !dbg !7966
  %fops = getelementptr inbounds %struct.gendisk, %struct.gendisk* %30, i32 0, i32 8, !dbg !7967
  store %struct.block_device_operations* @mtip_block_ops, %struct.block_device_operations** %fops, align 8, !dbg !7968
  %31 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !7969
  %32 = bitcast %struct.driver_data* %31 to i8*, !dbg !7969
  %33 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !7970
  %disk26 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %33, i32 0, i32 3, !dbg !7971
  %34 = load %struct.gendisk*, %struct.gendisk** %disk26, align 8, !dbg !7971
  %private_data = getelementptr inbounds %struct.gendisk, %struct.gendisk* %34, i32 0, i32 10, !dbg !7972
  store i8* %32, i8** %private_data, align 8, !dbg !7973
  %35 = load i32, i32* %index, align 4, !dbg !7974
  %conv = zext i32 %35 to i64, !dbg !7974
  %36 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !7975
  %index27 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %36, i32 0, i32 10, !dbg !7976
  store i64 %conv, i64* %index27, align 8, !dbg !7977
  %37 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !7978
  %call28 = call i32 @mtip_hw_debugfs_init(%struct.driver_data* %37) #12, !dbg !7979
  %38 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !7980
  %tags = getelementptr inbounds %struct.driver_data, %struct.driver_data* %38, i32 0, i32 6, !dbg !7981
  %39 = bitcast %struct.blk_mq_tag_set* %tags to i8*, !dbg !7982
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 288, i1 false), !dbg !7982
  %40 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !7983
  %tags29 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %40, i32 0, i32 6, !dbg !7984
  %ops = getelementptr inbounds %struct.blk_mq_tag_set, %struct.blk_mq_tag_set* %tags29, i32 0, i32 2, !dbg !7985
  store %struct.blk_mq_ops* @mtip_mq_ops, %struct.blk_mq_ops** %ops, align 8, !dbg !7986
  %41 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !7987
  %tags30 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %41, i32 0, i32 6, !dbg !7988
  %nr_hw_queues = getelementptr inbounds %struct.blk_mq_tag_set, %struct.blk_mq_tag_set* %tags30, i32 0, i32 3, !dbg !7989
  store i32 1, i32* %nr_hw_queues, align 8, !dbg !7990
  %42 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !7991
  %tags31 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %42, i32 0, i32 6, !dbg !7992
  %queue_depth = getelementptr inbounds %struct.blk_mq_tag_set, %struct.blk_mq_tag_set* %tags31, i32 0, i32 4, !dbg !7993
  store i32 256, i32* %queue_depth, align 4, !dbg !7994
  %43 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !7995
  %tags32 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %43, i32 0, i32 6, !dbg !7996
  %reserved_tags = getelementptr inbounds %struct.blk_mq_tag_set, %struct.blk_mq_tag_set* %tags32, i32 0, i32 5, !dbg !7997
  store i32 1, i32* %reserved_tags, align 8, !dbg !7998
  %44 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !7999
  %tags33 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %44, i32 0, i32 6, !dbg !8000
  %cmd_size = getelementptr inbounds %struct.blk_mq_tag_set, %struct.blk_mq_tag_set* %tags33, i32 0, i32 6, !dbg !8001
  store i32 16168, i32* %cmd_size, align 4, !dbg !8002
  %45 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8003
  %numa_node34 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %45, i32 0, i32 15, !dbg !8004
  %46 = load i32, i32* %numa_node34, align 4, !dbg !8004
  %47 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8005
  %tags35 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %47, i32 0, i32 6, !dbg !8006
  %numa_node36 = getelementptr inbounds %struct.blk_mq_tag_set, %struct.blk_mq_tag_set* %tags35, i32 0, i32 7, !dbg !8007
  store i32 %46, i32* %numa_node36, align 8, !dbg !8008
  %48 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8009
  %tags37 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %48, i32 0, i32 6, !dbg !8010
  %flags = getelementptr inbounds %struct.blk_mq_tag_set, %struct.blk_mq_tag_set* %tags37, i32 0, i32 9, !dbg !8011
  store i32 1, i32* %flags, align 8, !dbg !8012
  %49 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8013
  %50 = bitcast %struct.driver_data* %49 to i8*, !dbg !8013
  %51 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8014
  %tags38 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %51, i32 0, i32 6, !dbg !8015
  %driver_data = getelementptr inbounds %struct.blk_mq_tag_set, %struct.blk_mq_tag_set* %tags38, i32 0, i32 10, !dbg !8016
  store i8* %50, i8** %driver_data, align 8, !dbg !8017
  %52 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8018
  %tags39 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %52, i32 0, i32 6, !dbg !8019
  %timeout = getelementptr inbounds %struct.blk_mq_tag_set, %struct.blk_mq_tag_set* %tags39, i32 0, i32 8, !dbg !8020
  store i32 15000, i32* %timeout, align 4, !dbg !8021
  %53 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8022
  %tags40 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %53, i32 0, i32 6, !dbg !8023
  %call41 = call i32 @blk_mq_alloc_tag_set(%struct.blk_mq_tag_set* %tags40) #12, !dbg !8024
  store i32 %call41, i32* %rv, align 4, !dbg !8025
  %54 = load i32, i32* %rv, align 4, !dbg !8026
  %tobool42 = icmp ne i32 %54, 0, !dbg !8026
  br i1 %tobool42, label %if.then43, label %if.end46, !dbg !8028

if.then43:                                        ; preds = %if.end20
  %55 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8029
  %pdev44 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %55, i32 0, i32 4, !dbg !8029
  %56 = load %struct.pci_dev*, %struct.pci_dev** %pdev44, align 8, !dbg !8029
  %dev45 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %56, i32 0, i32 41, !dbg !8029
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev45, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.22, i64 0, i64 0)) #13, !dbg !8029
  br label %block_queue_alloc_tag_error, !dbg !8031

if.end46:                                         ; preds = %if.end20
  %57 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8032
  %tags47 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %57, i32 0, i32 6, !dbg !8033
  %call48 = call %struct.request_queue* @blk_mq_init_queue(%struct.blk_mq_tag_set* %tags47) #12, !dbg !8034
  %58 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8035
  %queue = getelementptr inbounds %struct.driver_data, %struct.driver_data* %58, i32 0, i32 5, !dbg !8036
  store %struct.request_queue* %call48, %struct.request_queue** %queue, align 8, !dbg !8037
  %59 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8038
  %queue49 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %59, i32 0, i32 5, !dbg !8040
  %60 = load %struct.request_queue*, %struct.request_queue** %queue49, align 8, !dbg !8040
  %61 = bitcast %struct.request_queue* %60 to i8*, !dbg !8038
  %call50 = call zeroext i1 @IS_ERR(i8* %61) #12, !dbg !8041
  br i1 %call50, label %if.then51, label %if.end54, !dbg !8042

if.then51:                                        ; preds = %if.end46
  %62 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8043
  %pdev52 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %62, i32 0, i32 4, !dbg !8043
  %63 = load %struct.pci_dev*, %struct.pci_dev** %pdev52, align 8, !dbg !8043
  %dev53 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %63, i32 0, i32 41, !dbg !8043
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev53, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.22, i64 0, i64 0)) #13, !dbg !8043
  store i32 -12, i32* %rv, align 4, !dbg !8045
  br label %block_queue_alloc_init_error, !dbg !8046

if.end54:                                         ; preds = %if.end46
  %64 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8047
  %queue55 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %64, i32 0, i32 5, !dbg !8048
  %65 = load %struct.request_queue*, %struct.request_queue** %queue55, align 8, !dbg !8048
  %66 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8049
  %disk56 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %66, i32 0, i32 3, !dbg !8050
  %67 = load %struct.gendisk*, %struct.gendisk** %disk56, align 8, !dbg !8050
  %queue57 = getelementptr inbounds %struct.gendisk, %struct.gendisk* %67, i32 0, i32 9, !dbg !8051
  store %struct.request_queue* %65, %struct.request_queue** %queue57, align 8, !dbg !8052
  %68 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8053
  %69 = bitcast %struct.driver_data* %68 to i8*, !dbg !8053
  %70 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8054
  %queue58 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %70, i32 0, i32 5, !dbg !8055
  %71 = load %struct.request_queue*, %struct.request_queue** %queue58, align 8, !dbg !8055
  %queuedata = getelementptr inbounds %struct.request_queue, %struct.request_queue* %71, i32 0, i32 11, !dbg !8056
  store i8* %69, i8** %queuedata, align 8, !dbg !8057
  br label %skip_create_disk, !dbg !8054

skip_create_disk:                                 ; preds = %if.end54, %if.then
  call void @llvm.dbg.label(metadata !8058), !dbg !8059
  %72 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8060
  %call59 = call i32 @mtip_hw_get_identify(%struct.driver_data* %72) #12, !dbg !8061
  store i32 %call59, i32* %wait_for_rebuild, align 4, !dbg !8062
  %73 = load i32, i32* %wait_for_rebuild, align 4, !dbg !8063
  %cmp60 = icmp slt i32 %73, 0, !dbg !8065
  br i1 %cmp60, label %if.then62, label %if.end65, !dbg !8066

if.then62:                                        ; preds = %skip_create_disk
  %74 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8067
  %pdev63 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %74, i32 0, i32 4, !dbg !8067
  %75 = load %struct.pci_dev*, %struct.pci_dev** %pdev63, align 8, !dbg !8067
  %dev64 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %75, i32 0, i32 41, !dbg !8067
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev64, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.23, i64 0, i64 0)) #13, !dbg !8067
  store i32 -22, i32* %rv, align 4, !dbg !8069
  br label %init_hw_cmds_error, !dbg !8070

if.end65:                                         ; preds = %skip_create_disk
  %76 = load i32, i32* %wait_for_rebuild, align 4, !dbg !8071
  %cmp66 = icmp eq i32 %76, 60753, !dbg !8073
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !8074

if.then68:                                        ; preds = %if.end65
  br label %start_service_thread, !dbg !8075

if.end69:                                         ; preds = %if.end65
  %77 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8076
  %queue70 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %77, i32 0, i32 5, !dbg !8077
  %78 = load %struct.request_queue*, %struct.request_queue** %queue70, align 8, !dbg !8077
  call void @blk_queue_flag_set(i32 6, %struct.request_queue* %78) #12, !dbg !8078
  %79 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8079
  %queue71 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %79, i32 0, i32 5, !dbg !8080
  %80 = load %struct.request_queue*, %struct.request_queue** %queue71, align 8, !dbg !8080
  call void @blk_queue_flag_clear(i32 10, %struct.request_queue* %80) #12, !dbg !8081
  %81 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8082
  %queue72 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %81, i32 0, i32 5, !dbg !8083
  %82 = load %struct.request_queue*, %struct.request_queue** %queue72, align 8, !dbg !8083
  call void @blk_queue_max_segments(%struct.request_queue* %82, i16 zeroext 504) #12, !dbg !8084
  %83 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8085
  %queue73 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %83, i32 0, i32 5, !dbg !8086
  %84 = load %struct.request_queue*, %struct.request_queue** %queue73, align 8, !dbg !8086
  call void @blk_queue_physical_block_size(%struct.request_queue* %84, i32 4096) #12, !dbg !8087
  %85 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8088
  %queue74 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %85, i32 0, i32 5, !dbg !8089
  %86 = load %struct.request_queue*, %struct.request_queue** %queue74, align 8, !dbg !8089
  call void @blk_queue_max_hw_sectors(%struct.request_queue* %86, i32 65535) #12, !dbg !8090
  %87 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8091
  %queue75 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %87, i32 0, i32 5, !dbg !8092
  %88 = load %struct.request_queue*, %struct.request_queue** %queue75, align 8, !dbg !8092
  call void @blk_queue_max_segment_size(%struct.request_queue* %88, i32 4194304) #12, !dbg !8093
  %89 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8094
  %pdev76 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %89, i32 0, i32 4, !dbg !8095
  %90 = load %struct.pci_dev*, %struct.pci_dev** %pdev76, align 8, !dbg !8095
  %dev77 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %90, i32 0, i32 41, !dbg !8096
  %call78 = call i32 @dma_set_max_seg_size(%struct.device* %dev77, i32 4194304) #12, !dbg !8097
  %91 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8098
  %queue79 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %91, i32 0, i32 5, !dbg !8099
  %92 = load %struct.request_queue*, %struct.request_queue** %queue79, align 8, !dbg !8099
  call void @blk_queue_io_min(%struct.request_queue* %92, i32 4096) #12, !dbg !8100
  %93 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8101
  %call80 = call zeroext i1 @mtip_hw_get_capacity(%struct.driver_data* %93, i64* %capacity) #12, !dbg !8103
  br i1 %call80, label %if.end84, label %if.then81, !dbg !8104

if.then81:                                        ; preds = %if.end69
  %94 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8105
  %pdev82 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %94, i32 0, i32 4, !dbg !8105
  %95 = load %struct.pci_dev*, %struct.pci_dev** %pdev82, align 8, !dbg !8105
  %dev83 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %95, i32 0, i32 41, !dbg !8105
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev83, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24, i64 0, i64 0)) #13, !dbg !8105
  store i32 -5, i32* %rv, align 4, !dbg !8107
  br label %read_capacity_error, !dbg !8108

if.end84:                                         ; preds = %if.end69
  %96 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8109
  %disk85 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %96, i32 0, i32 3, !dbg !8110
  %97 = load %struct.gendisk*, %struct.gendisk** %disk85, align 8, !dbg !8110
  %98 = load i64, i64* %capacity, align 8, !dbg !8111
  call void @set_capacity(%struct.gendisk* %97, i64 %98) #12, !dbg !8112
  %99 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8113
  %pdev86 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %99, i32 0, i32 4, !dbg !8114
  %100 = load %struct.pci_dev*, %struct.pci_dev** %pdev86, align 8, !dbg !8114
  %dev87 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %100, i32 0, i32 41, !dbg !8115
  %101 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8116
  %disk88 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %101, i32 0, i32 3, !dbg !8117
  %102 = load %struct.gendisk*, %struct.gendisk** %disk88, align 8, !dbg !8117
  call void @device_add_disk(%struct.device* %dev87, %struct.gendisk* %102, %struct.attribute_group** null) #12, !dbg !8118
  %103 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8119
  %disk89 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %103, i32 0, i32 3, !dbg !8120
  %104 = load %struct.gendisk*, %struct.gendisk** %disk89, align 8, !dbg !8120
  %call90 = call %struct.block_device* @bdget_disk(%struct.gendisk* %104, i32 0) #12, !dbg !8121
  %105 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8122
  %bdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %105, i32 0, i32 21, !dbg !8123
  store %struct.block_device* %call90, %struct.block_device** %bdev, align 8, !dbg !8124
  %106 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8125
  %disk91 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %106, i32 0, i32 3, !dbg !8125
  %107 = load %struct.gendisk*, %struct.gendisk** %disk91, align 8, !dbg !8125
  %part0 = getelementptr inbounds %struct.gendisk, %struct.gendisk* %107, i32 0, i32 7, !dbg !8125
  %__dev = getelementptr inbounds %struct.hd_struct, %struct.hd_struct* %part0, i32 0, i32 5, !dbg !8125
  %kobj92 = getelementptr inbounds %struct.device, %struct.device* %__dev, i32 0, i32 0, !dbg !8126
  %call93 = call %struct.kobject* @kobject_get(%struct.kobject* %kobj92) #12, !dbg !8127
  store %struct.kobject* %call93, %struct.kobject** %kobj, align 8, !dbg !8128
  %108 = load %struct.kobject*, %struct.kobject** %kobj, align 8, !dbg !8129
  %tobool94 = icmp ne %struct.kobject* %108, null, !dbg !8129
  br i1 %tobool94, label %if.then95, label %if.end97, !dbg !8131

if.then95:                                        ; preds = %if.end84
  %109 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8132
  %110 = load %struct.kobject*, %struct.kobject** %kobj, align 8, !dbg !8134
  %call96 = call i32 @mtip_hw_sysfs_init(%struct.driver_data* %109, %struct.kobject* %110) #12, !dbg !8135
  %111 = load %struct.kobject*, %struct.kobject** %kobj, align 8, !dbg !8136
  call void @kobject_put(%struct.kobject* %111) #12, !dbg !8137
  br label %if.end97, !dbg !8138

if.end97:                                         ; preds = %if.then95, %if.end84
  %112 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8139
  %mtip_svc_handler = getelementptr inbounds %struct.driver_data, %struct.driver_data* %112, i32 0, i32 12, !dbg !8141
  %113 = load %struct.task_struct*, %struct.task_struct** %mtip_svc_handler, align 8, !dbg !8141
  %tobool98 = icmp ne %struct.task_struct* %113, null, !dbg !8139
  br i1 %tobool98, label %if.then99, label %if.end100, !dbg !8142

if.then99:                                        ; preds = %if.end97
  %114 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8143
  %dd_flag = getelementptr inbounds %struct.driver_data, %struct.driver_data* %114, i32 0, i32 11, !dbg !8145
  call void @set_bit(i64 7, i64* %dd_flag) #12, !dbg !8146
  %115 = load i32, i32* %rv, align 4, !dbg !8147
  store i32 %115, i32* %retval, align 4, !dbg !8148
  br label %return, !dbg !8148

if.end100:                                        ; preds = %if.end97
  br label %start_service_thread, !dbg !8141

start_service_thread:                             ; preds = %if.end100, %if.then68
  call void @llvm.dbg.label(metadata !8149), !dbg !8150
  %116 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8151
  %117 = bitcast %struct.driver_data* %116 to i8*, !dbg !8151
  %118 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8152
  %numa_node101 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %118, i32 0, i32 15, !dbg !8153
  %119 = load i32, i32* %numa_node101, align 4, !dbg !8153
  %120 = load i32, i32* %index, align 4, !dbg !8154
  %call102 = call %struct.task_struct* (i32 (i8*)*, i8*, i32, i8*, ...) @kthread_create_on_node(i32 (i8*)* @mtip_service_thread, i8* %117, i32 %119, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i32 %120) #12, !dbg !8155
  %121 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8156
  %mtip_svc_handler103 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %121, i32 0, i32 12, !dbg !8157
  store %struct.task_struct* %call102, %struct.task_struct** %mtip_svc_handler103, align 8, !dbg !8158
  %122 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8159
  %mtip_svc_handler104 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %122, i32 0, i32 12, !dbg !8161
  %123 = load %struct.task_struct*, %struct.task_struct** %mtip_svc_handler104, align 8, !dbg !8161
  %124 = bitcast %struct.task_struct* %123 to i8*, !dbg !8159
  %call105 = call zeroext i1 @IS_ERR(i8* %124) #12, !dbg !8162
  br i1 %call105, label %if.then106, label %if.end110, !dbg !8163

if.then106:                                       ; preds = %start_service_thread
  %125 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8164
  %pdev107 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %125, i32 0, i32 4, !dbg !8164
  %126 = load %struct.pci_dev*, %struct.pci_dev** %pdev107, align 8, !dbg !8164
  %dev108 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %126, i32 0, i32 41, !dbg !8164
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev108, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i64 0, i64 0)) #13, !dbg !8164
  %127 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8166
  %mtip_svc_handler109 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %127, i32 0, i32 12, !dbg !8167
  store %struct.task_struct* null, %struct.task_struct** %mtip_svc_handler109, align 8, !dbg !8168
  store i32 -14, i32* %rv, align 4, !dbg !8169
  br label %kthread_run_error, !dbg !8170

if.end110:                                        ; preds = %start_service_thread
  %128 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8171
  %mtip_svc_handler111 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %128, i32 0, i32 12, !dbg !8172
  %129 = load %struct.task_struct*, %struct.task_struct** %mtip_svc_handler111, align 8, !dbg !8172
  %call112 = call i32 @wake_up_process(%struct.task_struct* %129) #12, !dbg !8173
  %130 = load i32, i32* %wait_for_rebuild, align 4, !dbg !8174
  %cmp113 = icmp eq i32 %130, 60753, !dbg !8176
  br i1 %cmp113, label %if.then115, label %if.end116, !dbg !8177

if.then115:                                       ; preds = %if.end110
  %131 = load i32, i32* %wait_for_rebuild, align 4, !dbg !8178
  store i32 %131, i32* %rv, align 4, !dbg !8179
  br label %if.end116, !dbg !8180

if.end116:                                        ; preds = %if.then115, %if.end110
  %132 = load i32, i32* %rv, align 4, !dbg !8181
  store i32 %132, i32* %retval, align 4, !dbg !8182
  br label %return, !dbg !8182

kthread_run_error:                                ; preds = %if.then106
  call void @llvm.dbg.label(metadata !8183), !dbg !8184
  %133 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8185
  %bdev117 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %133, i32 0, i32 21, !dbg !8186
  %134 = load %struct.block_device*, %struct.block_device** %bdev117, align 8, !dbg !8186
  call void @bdput(%struct.block_device* %134) #12, !dbg !8187
  %135 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8188
  %bdev118 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %135, i32 0, i32 21, !dbg !8189
  store %struct.block_device* null, %struct.block_device** %bdev118, align 8, !dbg !8190
  %136 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8191
  %disk119 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %136, i32 0, i32 3, !dbg !8192
  %137 = load %struct.gendisk*, %struct.gendisk** %disk119, align 8, !dbg !8192
  call void @del_gendisk(%struct.gendisk* %137) #12, !dbg !8193
  br label %read_capacity_error, !dbg !8193

read_capacity_error:                              ; preds = %kthread_run_error, %if.then81
  call void @llvm.dbg.label(metadata !8194), !dbg !8195
  br label %init_hw_cmds_error, !dbg !8193

init_hw_cmds_error:                               ; preds = %read_capacity_error, %if.then62
  call void @llvm.dbg.label(metadata !8196), !dbg !8197
  %138 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8198
  %queue120 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %138, i32 0, i32 5, !dbg !8199
  %139 = load %struct.request_queue*, %struct.request_queue** %queue120, align 8, !dbg !8199
  call void @blk_cleanup_queue(%struct.request_queue* %139) #12, !dbg !8200
  br label %block_queue_alloc_init_error, !dbg !8200

block_queue_alloc_init_error:                     ; preds = %init_hw_cmds_error, %if.then51
  call void @llvm.dbg.label(metadata !8201), !dbg !8202
  %140 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8203
  %tags121 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %140, i32 0, i32 6, !dbg !8204
  call void @blk_mq_free_tag_set(%struct.blk_mq_tag_set* %tags121) #12, !dbg !8205
  br label %block_queue_alloc_tag_error, !dbg !8205

block_queue_alloc_tag_error:                      ; preds = %block_queue_alloc_init_error, %if.then43
  call void @llvm.dbg.label(metadata !8206), !dbg !8207
  %141 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8208
  call void @mtip_hw_debugfs_exit(%struct.driver_data* %141) #12, !dbg !8209
  br label %disk_index_error, !dbg !8209

disk_index_error:                                 ; preds = %block_queue_alloc_tag_error, %if.then19
  call void @llvm.dbg.label(metadata !8210), !dbg !8211
  %142 = load i32, i32* %index, align 4, !dbg !8212
  call void @ida_free(%struct.ida* @rssd_index_ida, i32 %142) #12, !dbg !8213
  br label %ida_get_error, !dbg !8213

ida_get_error:                                    ; preds = %disk_index_error, %if.then14
  call void @llvm.dbg.label(metadata !8214), !dbg !8215
  %143 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8216
  %disk122 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %143, i32 0, i32 3, !dbg !8217
  %144 = load %struct.gendisk*, %struct.gendisk** %disk122, align 8, !dbg !8217
  call void @put_disk(%struct.gendisk* %144) #12, !dbg !8218
  br label %alloc_disk_error, !dbg !8218

alloc_disk_error:                                 ; preds = %ida_get_error, %if.then10
  call void @llvm.dbg.label(metadata !8219), !dbg !8220
  %145 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8221
  %call123 = call i32 @mtip_hw_exit(%struct.driver_data* %145) #12, !dbg !8222
  br label %protocol_init_error, !dbg !8222

protocol_init_error:                              ; preds = %alloc_disk_error, %if.then2
  call void @llvm.dbg.label(metadata !8223), !dbg !8224
  %146 = load i32, i32* %rv, align 4, !dbg !8225
  store i32 %146, i32* %retval, align 4, !dbg !8226
  br label %return, !dbg !8226

return:                                           ; preds = %protocol_init_error, %if.end116, %if.then99
  %147 = load i32, i32* %retval, align 4, !dbg !8227
  ret i32 %147, !dbg !8227
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #2 !dbg !8228 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !8234, metadata !DIExpression()), !dbg !8237
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !8239, metadata !DIExpression()), !dbg !8240
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !8241, metadata !DIExpression()), !dbg !8243
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8245, metadata !DIExpression()), !dbg !8246
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !8247, metadata !DIExpression()), !dbg !8248
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !8249, metadata !DIExpression()), !dbg !8250
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !8251
  %1 = load i64, i64* %nr.addr, align 8, !dbg !8252
  %div = sdiv i64 %1, 64, !dbg !8252
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !8253
  %2 = bitcast i64* %add.ptr to i8*, !dbg !8251
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !8254
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !8255
  %conv.i = trunc i64 %4 to i32, !dbg !8255
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #14, !dbg !8256
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !8257
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !8257
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #14, !dbg !8257
  %7 = load i64, i64* %nr.addr, align 8, !dbg !8258
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !8259
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !8260
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #11, !dbg !8262
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !8263

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !8264
  %12 = bitcast i64* %11 to i8*, !dbg !8264
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !8264
  %shr.i = ashr i64 %13, 3, !dbg !8264
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !8264
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !8266
  %and.i = and i64 %14, 7, !dbg !8266
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !8266
  %shl.i = shl i32 1, %sh_prom.i, !dbg !8266
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #11, !dbg !8267, !srcloc !8268
  br label %arch_set_bit.exit, !dbg !8269

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !8270
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !8272
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #11, !dbg !8273, !srcloc !8274
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !8275
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #2 !dbg !8276 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !8280, metadata !DIExpression()), !dbg !8281
  %call = call i64 @arch_local_save_flags() #12, !dbg !8282
  store i64 %call, i64* %f, align 8, !dbg !8283
  call void @arch_local_irq_disable() #12, !dbg !8284
  %0 = load i64, i64* %f, align 8, !dbg !8285
  ret i64 %0, !dbg !8286
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add(%struct.list_head* %new, %struct.list_head* %head) #2 !dbg !8287 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !8290, metadata !DIExpression()), !dbg !8291
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !8292, metadata !DIExpression()), !dbg !8293
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8294
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8295
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8296
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !8297
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8297
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %3) #12, !dbg !8298
  ret void, !dbg !8299
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: noredzone
declare dso_local void @pci_disable_msi(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local void @flush_workqueue(%struct.workqueue_struct*) #1

; Function Attrs: noredzone
declare dso_local void @destroy_workqueue(%struct.workqueue_struct*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drop_cpu(i32 %cpu) #2 !dbg !8300 {
entry:
  %cpu.addr = alloca i32, align 4
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !8301, metadata !DIExpression()), !dbg !8302
  %0 = load i32, i32* %cpu.addr, align 4, !dbg !8303
  %idxprom = sext i32 %0 to i64, !dbg !8304
  %arrayidx = getelementptr [1 x i32], [1 x i32]* @cpu_use, i64 0, i64 %idxprom, !dbg !8304
  %1 = load i32, i32* %arrayidx, align 4, !dbg !8305
  %dec = add i32 %1, -1, !dbg !8305
  store i32 %dec, i32* %arrayidx, align 4, !dbg !8305
  ret void, !dbg !8306
}

; Function Attrs: noredzone
declare dso_local void @pcim_iounmap_regions(%struct.pci_dev*, i32) #1

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #1

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #2 !dbg !8307 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !8311, metadata !DIExpression()), !dbg !8312
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !8313, metadata !DIExpression()), !dbg !8314
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8315, metadata !DIExpression()), !dbg !8316
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8317, metadata !DIExpression()), !dbg !8318
  %0 = load i8*, i8** %object.addr, align 8, !dbg !8319
  ret i8* %0, !dbg !8320
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #1

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #7

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #2 !dbg !8321 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8324, metadata !DIExpression()), !dbg !8325
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !8326, metadata !DIExpression()), !dbg !8327
  %0 = load i8*, i8** %data.addr, align 8, !dbg !8328
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8329
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !8330
  store i8* %0, i8** %driver_data, align 8, !dbg !8331
  ret void, !dbg !8332
}

; Function Attrs: noredzone
declare dso_local i32 @dma_set_mask(%struct.device*, i64) #1

; Function Attrs: noredzone
declare dso_local i32 @dma_set_coherent_mask(%struct.device*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @bitmap_empty(i64* %src, i32 %nbits) #2 !dbg !8333 {
entry:
  %retval = alloca i32, align 4
  %src.addr = alloca i64*, align 8
  %nbits.addr = alloca i32, align 4
  store i64* %src, i64** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src.addr, metadata !8334, metadata !DIExpression()), !dbg !8335
  store i32 %nbits, i32* %nbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr, metadata !8336, metadata !DIExpression()), !dbg !8337
  %0 = load i32, i32* %nbits.addr, align 4, !dbg !8338
  %1 = call i1 @llvm.is.constant.i32(i32 %0), !dbg !8338
  br i1 %1, label %land.lhs.true, label %if.end, !dbg !8338

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %nbits.addr, align 4, !dbg !8338
  %cmp = icmp ule i32 %2, 64, !dbg !8338
  br i1 %cmp, label %land.lhs.true1, label %if.end, !dbg !8338

land.lhs.true1:                                   ; preds = %land.lhs.true
  %3 = load i32, i32* %nbits.addr, align 4, !dbg !8338
  %cmp2 = icmp ugt i32 %3, 0, !dbg !8338
  br i1 %cmp2, label %if.then, label %if.end, !dbg !8340

if.then:                                          ; preds = %land.lhs.true1
  %4 = load i64*, i64** %src.addr, align 8, !dbg !8341
  %5 = load i64, i64* %4, align 8, !dbg !8342
  %6 = load i32, i32* %nbits.addr, align 4, !dbg !8343
  %sub = sub i32 0, %6, !dbg !8343
  %and = and i32 %sub, 63, !dbg !8343
  %sh_prom = zext i32 %and to i64, !dbg !8343
  %shr = lshr i64 -1, %sh_prom, !dbg !8343
  %and3 = and i64 %5, %shr, !dbg !8344
  %tobool = icmp ne i64 %and3, 0, !dbg !8345
  %lnot = xor i1 %tobool, true, !dbg !8345
  %lnot.ext = zext i1 %lnot to i32, !dbg !8345
  store i32 %lnot.ext, i32* %retval, align 4, !dbg !8346
  br label %return, !dbg !8346

if.end:                                           ; preds = %land.lhs.true1, %land.lhs.true, %entry
  %7 = load i64*, i64** %src.addr, align 8, !dbg !8347
  %8 = load i32, i32* %nbits.addr, align 4, !dbg !8348
  %conv = zext i32 %8 to i64, !dbg !8348
  %call = call i64 @find_first_bit(i64* %7, i64 %conv) #12, !dbg !8349
  %9 = load i32, i32* %nbits.addr, align 4, !dbg !8350
  %conv4 = zext i32 %9 to i64, !dbg !8350
  %cmp5 = icmp eq i64 %call, %conv4, !dbg !8351
  %conv6 = zext i1 %cmp5 to i32, !dbg !8351
  store i32 %conv6, i32* %retval, align 4, !dbg !8352
  br label %return, !dbg !8352

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !8353
  ret i32 %10, !dbg !8353
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #6

; Function Attrs: noredzone
declare dso_local i64 @find_first_bit(i64*, i64) #1

; Function Attrs: noredzone
declare dso_local i32 @__bitmap_weight(i64*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cpumask_first(%struct.cpumask* %srcp) #2 !dbg !8354 {
entry:
  %srcp.addr = alloca %struct.cpumask*, align 8
  store %struct.cpumask* %srcp, %struct.cpumask** %srcp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cpumask** %srcp.addr, metadata !8355, metadata !DIExpression()), !dbg !8356
  ret i32 0, !dbg !8357
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mtip_workq_sdbfx(%struct.mtip_port* %port, i32 %group, i32 %completed) #2 !dbg !8358 {
entry:
  %i.addr.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i.i.i, metadata !8361, metadata !DIExpression()), !dbg !8366
  %v.addr.i.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i.i, metadata !8378, metadata !DIExpression()), !dbg !8379
  %__ret.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i.i.i, metadata !8380, metadata !DIExpression()), !dbg !8382
  %tmp.i.i.i.i = alloca i32, align 4
  %i.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i.i, metadata !8383, metadata !DIExpression()), !dbg !8384
  %v.addr.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i, metadata !8385, metadata !DIExpression()), !dbg !8386
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !8387, metadata !DIExpression()), !dbg !8388
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !8389, metadata !DIExpression()), !dbg !8391
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8393, metadata !DIExpression()), !dbg !8394
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !8395, metadata !DIExpression()), !dbg !8396
  %port.addr = alloca %struct.mtip_port*, align 8
  %group.addr = alloca i32, align 4
  %completed.addr = alloca i32, align 4
  %dd = alloca %struct.driver_data*, align 8
  %tag = alloca i32, align 4
  %bit = alloca i32, align 4
  %command = alloca %struct.mtip_cmd*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mtip_port* %port, %struct.mtip_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mtip_port** %port.addr, metadata !8397, metadata !DIExpression()), !dbg !8398
  store i32 %group, i32* %group.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %group.addr, metadata !8399, metadata !DIExpression()), !dbg !8400
  store i32 %completed, i32* %completed.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %completed.addr, metadata !8401, metadata !DIExpression()), !dbg !8402
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd, metadata !8403, metadata !DIExpression()), !dbg !8404
  %0 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !8405
  %dd1 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %0, i32 0, i32 0, !dbg !8406
  %1 = load %struct.driver_data*, %struct.driver_data** %dd1, align 8, !dbg !8406
  store %struct.driver_data* %1, %struct.driver_data** %dd, align 8, !dbg !8404
  call void @llvm.dbg.declare(metadata i32* %tag, metadata !8407, metadata !DIExpression()), !dbg !8408
  call void @llvm.dbg.declare(metadata i32* %bit, metadata !8409, metadata !DIExpression()), !dbg !8410
  call void @llvm.dbg.declare(metadata %struct.mtip_cmd** %command, metadata !8411, metadata !DIExpression()), !dbg !8445
  %2 = load i32, i32* %completed.addr, align 4, !dbg !8446
  %tobool = icmp ne i32 %2, 0, !dbg !8446
  br i1 %tobool, label %if.end24, label %if.then, !dbg !8448

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8449, metadata !DIExpression()), !dbg !8452
  %3 = load i32, i32* %completed.addr, align 4, !dbg !8452
  %tobool2 = icmp ne i32 %3, 0, !dbg !8452
  %lnot = xor i1 %tobool2, true, !dbg !8452
  %lnot3 = xor i1 %lnot, true, !dbg !8452
  %lnot4 = xor i1 %lnot3, true, !dbg !8452
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !8452
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8452
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !8453
  %tobool5 = icmp ne i32 %4, 0, !dbg !8453
  %lnot6 = xor i1 %tobool5, true, !dbg !8453
  %lnot8 = xor i1 %lnot6, true, !dbg !8453
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !8453
  %conv = sext i32 %lnot.ext9 to i64, !dbg !8453
  %tobool10 = icmp ne i64 %conv, 0, !dbg !8453
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !8452

if.then11:                                        ; preds = %if.then
  br label %do.body, !dbg !8453

do.body:                                          ; preds = %if.then11
  br label %do.body12, !dbg !8455

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !8457

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !8455

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.17, i64 0, i64 0), i32 666, i32 2307, i64 12) #11, !dbg !8459, !srcloc !8461
  br label %do.end14, !dbg !8459

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 308) #11, !dbg !8462, !srcloc !8464
  br label %do.body15, !dbg !8455

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !8465

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !8455

do.end17:                                         ; preds = %do.end16
  br label %if.end, !dbg !8455

if.end:                                           ; preds = %do.end17, %if.then
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !8452
  %tobool18 = icmp ne i32 %5, 0, !dbg !8452
  %lnot19 = xor i1 %tobool18, true, !dbg !8452
  %lnot21 = xor i1 %lnot19, true, !dbg !8452
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !8452
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !8452
  store i64 %conv23, i64* %tmp, align 8, !dbg !8453
  %6 = load i64, i64* %tmp, align 8, !dbg !8452
  br label %if.end45, !dbg !8467

if.end24:                                         ; preds = %entry
  %7 = load i32, i32* %completed.addr, align 4, !dbg !8468
  %8 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !8469
  %completed25 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %8, i32 0, i32 4, !dbg !8470
  %9 = load i32, i32* %group.addr, align 4, !dbg !8471
  %idxprom = sext i32 %9 to i64, !dbg !8469
  %arrayidx = getelementptr [8 x i8*], [8 x i8*]* %completed25, i64 0, i64 %idxprom, !dbg !8469
  %10 = load i8*, i8** %arrayidx, align 8, !dbg !8469
  call void @writel(i32 %7, i8* %10) #12, !dbg !8472
  store i32 0, i32* %bit, align 4, !dbg !8473
  br label %for.cond, !dbg !8475

for.cond:                                         ; preds = %for.inc, %if.end24
  %11 = load i32, i32* %bit, align 4, !dbg !8476
  %cmp = icmp slt i32 %11, 32, !dbg !8478
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8479

land.rhs:                                         ; preds = %for.cond
  %12 = load i32, i32* %completed.addr, align 4, !dbg !8480
  %tobool27 = icmp ne i32 %12, 0, !dbg !8479
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %13 = phi i1 [ false, %for.cond ], [ %tobool27, %land.rhs ], !dbg !8481
  br i1 %13, label %for.body, label %for.end, !dbg !8482

for.body:                                         ; preds = %land.end
  %14 = load i32, i32* %completed.addr, align 4, !dbg !8483
  %and = and i32 %14, 1, !dbg !8486
  %tobool28 = icmp ne i32 %and, 0, !dbg !8486
  br i1 %tobool28, label %if.then29, label %if.end40, !dbg !8487

if.then29:                                        ; preds = %for.body
  %15 = load i32, i32* %group.addr, align 4, !dbg !8488
  %shl = shl i32 %15, 5, !dbg !8490
  %16 = load i32, i32* %bit, align 4, !dbg !8491
  %or = or i32 %shl, %16, !dbg !8492
  store i32 %or, i32* %tag, align 4, !dbg !8493
  %17 = load i32, i32* %tag, align 4, !dbg !8494
  %cmp30 = icmp eq i32 %17, 0, !dbg !8494
  %lnot32 = xor i1 %cmp30, true, !dbg !8494
  %lnot34 = xor i1 %lnot32, true, !dbg !8494
  %lnot.ext35 = zext i1 %lnot34 to i32, !dbg !8494
  %conv36 = sext i32 %lnot.ext35 to i64, !dbg !8494
  %tobool37 = icmp ne i64 %conv36, 0, !dbg !8494
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !8496

if.then38:                                        ; preds = %if.then29
  br label %for.inc, !dbg !8497

if.end39:                                         ; preds = %if.then29
  %18 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !8498
  %19 = load i32, i32* %tag, align 4, !dbg !8499
  %call = call %struct.mtip_cmd* @mtip_cmd_from_tag(%struct.driver_data* %18, i32 %19) #12, !dbg !8500
  store %struct.mtip_cmd* %call, %struct.mtip_cmd** %command, align 8, !dbg !8501
  %20 = load %struct.mtip_cmd*, %struct.mtip_cmd** %command, align 8, !dbg !8502
  call void @mtip_complete_command(%struct.mtip_cmd* %20, i8 zeroext 0) #12, !dbg !8503
  br label %if.end40, !dbg !8504

if.end40:                                         ; preds = %if.end39, %for.body
  %21 = load i32, i32* %completed.addr, align 4, !dbg !8505
  %shr = lshr i32 %21, 1, !dbg !8505
  store i32 %shr, i32* %completed.addr, align 4, !dbg !8505
  br label %for.inc, !dbg !8506

for.inc:                                          ; preds = %if.end40, %if.then38
  %22 = load i32, i32* %bit, align 4, !dbg !8507
  %inc = add i32 %22, 1, !dbg !8507
  store i32 %inc, i32* %bit, align 4, !dbg !8507
  br label %for.cond, !dbg !8508, !llvm.loop !8509

for.end:                                          ; preds = %land.end
  %23 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !8511
  %irq_workers_active = getelementptr inbounds %struct.driver_data, %struct.driver_data* %23, i32 0, i32 18, !dbg !8512
  store %struct.atomic_t* %irq_workers_active, %struct.atomic_t** %v.addr.i, align 8
  %24 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8513
  %25 = bitcast %struct.atomic_t* %24 to i8*, !dbg !8513
  store i8* %25, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %26 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8514
  %27 = load i64, i64* %size.addr.i.i, align 8, !dbg !8515
  %conv.i.i = trunc i64 %27 to i32, !dbg !8515
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %26, i32 %conv.i.i) #14, !dbg !8516
  %28 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8517
  %29 = load i64, i64* %size.addr.i.i, align 8, !dbg !8517
  call void @kcsan_check_access(i8* %28, i64 %29, i32 7) #14, !dbg !8517
  %30 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8518
  store %struct.atomic_t* %30, %struct.atomic_t** %v.addr.i1.i, align 8
  %31 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !8519
  store i32 1, i32* %i.addr.i.i.i, align 4
  store %struct.atomic_t* %31, %struct.atomic_t** %v.addr.i.i.i, align 8
  %32 = load i32, i32* %i.addr.i.i.i, align 4, !dbg !8520
  %sub.i.i.i = sub i32 0, %32, !dbg !8521
  %33 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !8522
  store i32 %sub.i.i.i, i32* %i.addr.i.i.i.i, align 4
  store %struct.atomic_t* %33, %struct.atomic_t** %v.addr.i.i.i.i, align 8
  %34 = load i32, i32* %i.addr.i.i.i.i, align 4, !dbg !8523
  %35 = load i32, i32* %i.addr.i.i.i.i, align 4, !dbg !8382
  store i32 %35, i32* %__ret.i.i.i.i, align 4, !dbg !8382
  %36 = load i32, i32* %__ret.i.i.i.i, align 4, !dbg !8382
  %37 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i.i, align 8, !dbg !8382
  %counter.i.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %37, i32 0, i32 0, !dbg !8382
  %38 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i.i.i, i32 %36, i32* %counter.i.i.i.i) #11, !dbg !8382, !srcloc !8524
  store i32 %38, i32* %__ret.i.i.i.i, align 4, !dbg !8382
  %39 = load i32, i32* %__ret.i.i.i.i, align 4, !dbg !8382
  store i32 %39, i32* %tmp.i.i.i.i, align 4, !dbg !8382
  %40 = load i32, i32* %tmp.i.i.i.i, align 4, !dbg !8382
  %add.i.i.i.i = add i32 %34, %40, !dbg !8525
  %cmp42 = icmp eq i32 %add.i.i.i.i, 0, !dbg !8526
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !8527

if.then44:                                        ; preds = %for.end
  %41 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !8528
  %mmio = getelementptr inbounds %struct.driver_data, %struct.driver_data* %41, i32 0, i32 0, !dbg !8529
  %42 = load i8*, i8** %mmio, align 8, !dbg !8529
  %add.ptr = getelementptr i8, i8* %42, i64 8, !dbg !8530
  call void @writel(i32 -1, i8* %add.ptr) #12, !dbg !8531
  br label %if.end45, !dbg !8531

if.end45:                                         ; preds = %if.end, %if.then44, %for.end
  ret void, !dbg !8532
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writel(i32 %val, i8* %addr) #2 !dbg !8533 {
entry:
  %val.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !8538, metadata !DIExpression()), !dbg !8539
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !8540, metadata !DIExpression()), !dbg !8539
  %0 = load i32, i32* %val.addr, align 4, !dbg !8539
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !8539
  %2 = bitcast i8* %1 to i32*, !dbg !8539
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %0, i32* %2) #11, !dbg !8539, !srcloc !8541
  ret void, !dbg !8539
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mtip_cmd* @mtip_cmd_from_tag(%struct.driver_data* %dd, i32 %tag) #2 !dbg !8542 {
entry:
  %dd.addr = alloca %struct.driver_data*, align 8
  %tag.addr = alloca i32, align 4
  %hctx = alloca %struct.blk_mq_hw_ctx*, align 8
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !8545, metadata !DIExpression()), !dbg !8546
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !8547, metadata !DIExpression()), !dbg !8548
  call void @llvm.dbg.declare(metadata %struct.blk_mq_hw_ctx** %hctx, metadata !8549, metadata !DIExpression()), !dbg !8550
  %0 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8551
  %queue = getelementptr inbounds %struct.driver_data, %struct.driver_data* %0, i32 0, i32 5, !dbg !8552
  %1 = load %struct.request_queue*, %struct.request_queue** %queue, align 8, !dbg !8552
  %queue_hw_ctx = getelementptr inbounds %struct.request_queue, %struct.request_queue* %1, i32 0, i32 8, !dbg !8553
  %2 = load %struct.blk_mq_hw_ctx**, %struct.blk_mq_hw_ctx*** %queue_hw_ctx, align 8, !dbg !8553
  %arrayidx = getelementptr %struct.blk_mq_hw_ctx*, %struct.blk_mq_hw_ctx** %2, i64 0, !dbg !8551
  %3 = load %struct.blk_mq_hw_ctx*, %struct.blk_mq_hw_ctx** %arrayidx, align 8, !dbg !8551
  store %struct.blk_mq_hw_ctx* %3, %struct.blk_mq_hw_ctx** %hctx, align 8, !dbg !8550
  %4 = load %struct.blk_mq_hw_ctx*, %struct.blk_mq_hw_ctx** %hctx, align 8, !dbg !8554
  %tags = getelementptr inbounds %struct.blk_mq_hw_ctx, %struct.blk_mq_hw_ctx* %4, i32 0, i32 19, !dbg !8555
  %5 = load %struct.blk_mq_tags*, %struct.blk_mq_tags** %tags, align 8, !dbg !8555
  %6 = load i32, i32* %tag.addr, align 4, !dbg !8556
  %call = call %struct.request* @blk_mq_tag_to_rq(%struct.blk_mq_tags* %5, i32 %6) #12, !dbg !8557
  %call1 = call i8* @blk_mq_rq_to_pdu(%struct.request* %call) #12, !dbg !8558
  %7 = bitcast i8* %call1 to %struct.mtip_cmd*, !dbg !8558
  ret %struct.mtip_cmd* %7, !dbg !8559
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mtip_complete_command(%struct.mtip_cmd* %cmd, i8 zeroext %status) #2 !dbg !8560 {
entry:
  %cmd.addr = alloca %struct.mtip_cmd*, align 8
  %status.addr = alloca i8, align 1
  %req = alloca %struct.request*, align 8
  store %struct.mtip_cmd* %cmd, %struct.mtip_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mtip_cmd** %cmd.addr, metadata !8563, metadata !DIExpression()), !dbg !8564
  store i8 %status, i8* %status.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %status.addr, metadata !8565, metadata !DIExpression()), !dbg !8566
  call void @llvm.dbg.declare(metadata %struct.request** %req, metadata !8567, metadata !DIExpression()), !dbg !8568
  %0 = load %struct.mtip_cmd*, %struct.mtip_cmd** %cmd.addr, align 8, !dbg !8569
  %1 = bitcast %struct.mtip_cmd* %0 to i8*, !dbg !8569
  %call = call %struct.request* @blk_mq_rq_from_pdu(i8* %1) #12, !dbg !8570
  store %struct.request* %call, %struct.request** %req, align 8, !dbg !8568
  %2 = load i8, i8* %status.addr, align 1, !dbg !8571
  %3 = load %struct.mtip_cmd*, %struct.mtip_cmd** %cmd.addr, align 8, !dbg !8572
  %status1 = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %3, i32 0, i32 7, !dbg !8573
  store i8 %2, i8* %status1, align 8, !dbg !8574
  %4 = load %struct.request*, %struct.request** %req, align 8, !dbg !8575
  %q = getelementptr inbounds %struct.request, %struct.request* %4, i32 0, i32 0, !dbg !8575
  %5 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !8575
  %call2 = call zeroext i1 @blk_should_fake_timeout(%struct.request_queue* %5) #12, !dbg !8575
  %lnot = xor i1 %call2, true, !dbg !8575
  %lnot3 = xor i1 %lnot, true, !dbg !8575
  %lnot4 = xor i1 %lnot3, true, !dbg !8575
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !8575
  %conv = sext i32 %lnot.ext to i64, !dbg !8575
  %tobool = icmp ne i64 %conv, 0, !dbg !8575
  br i1 %tobool, label %if.then, label %if.end, !dbg !8577

if.then:                                          ; preds = %entry
  %6 = load %struct.request*, %struct.request** %req, align 8, !dbg !8578
  call void @blk_mq_complete_request(%struct.request* %6) #12, !dbg !8579
  br label %if.end, !dbg !8579

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8580
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @blk_mq_rq_to_pdu(%struct.request* %rq) #2 !dbg !8581 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !8584, metadata !DIExpression()), !dbg !8585
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !8586
  %add.ptr = getelementptr %struct.request, %struct.request* %0, i64 1, !dbg !8587
  %1 = bitcast %struct.request* %add.ptr to i8*, !dbg !8586
  ret i8* %1, !dbg !8588
}

; Function Attrs: noredzone
declare dso_local %struct.request* @blk_mq_tag_to_rq(%struct.blk_mq_tags*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.request* @blk_mq_rq_from_pdu(i8* %pdu) #2 !dbg !8589 {
entry:
  %pdu.addr = alloca i8*, align 8
  store i8* %pdu, i8** %pdu.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pdu.addr, metadata !8592, metadata !DIExpression()), !dbg !8593
  %0 = load i8*, i8** %pdu.addr, align 8, !dbg !8594
  %add.ptr = getelementptr i8, i8* %0, i64 -272, !dbg !8595
  %1 = bitcast i8* %add.ptr to %struct.request*, !dbg !8594
  ret %struct.request* %1, !dbg !8596
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @blk_should_fake_timeout(%struct.request_queue* %q) #2 !dbg !8597 {
entry:
  %q.addr = alloca %struct.request_queue*, align 8
  store %struct.request_queue* %q, %struct.request_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q.addr, metadata !8598, metadata !DIExpression()), !dbg !8599
  ret i1 false, !dbg !8600
}

; Function Attrs: noredzone
declare dso_local void @blk_mq_complete_request(%struct.request*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #2 !dbg !8601 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !8605, metadata !DIExpression()), !dbg !8606
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8607, metadata !DIExpression()), !dbg !8608
  ret i1 true, !dbg !8609
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #2 !dbg !8610 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !8614, metadata !DIExpression()), !dbg !8615
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8616, metadata !DIExpression()), !dbg !8617
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !8618, metadata !DIExpression()), !dbg !8619
  ret void, !dbg !8620
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mtip_disable_link_opts(%struct.driver_data* %dd, %struct.pci_dev* %pdev) #2 !dbg !8621 {
entry:
  %dd.addr = alloca %struct.driver_data*, align 8
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %pos = alloca i32, align 4
  %pcie_dev_ctrl = alloca i16, align 2
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !8622, metadata !DIExpression()), !dbg !8623
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !8624, metadata !DIExpression()), !dbg !8625
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !8626, metadata !DIExpression()), !dbg !8627
  call void @llvm.dbg.declare(metadata i16* %pcie_dev_ctrl, metadata !8628, metadata !DIExpression()), !dbg !8629
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8630
  %call = call i32 @pci_find_capability(%struct.pci_dev* %0, i32 16) #12, !dbg !8631
  store i32 %call, i32* %pos, align 4, !dbg !8632
  %1 = load i32, i32* %pos, align 4, !dbg !8633
  %tobool = icmp ne i32 %1, 0, !dbg !8633
  br i1 %tobool, label %if.then, label %if.end15, !dbg !8635

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8636
  %3 = load i32, i32* %pos, align 4, !dbg !8638
  %add = add i32 %3, 8, !dbg !8639
  %call1 = call i32 @pci_read_config_word(%struct.pci_dev* %2, i32 %add, i16* %pcie_dev_ctrl) #12, !dbg !8640
  %4 = load i16, i16* %pcie_dev_ctrl, align 2, !dbg !8641
  %conv = zext i16 %4 to i32, !dbg !8641
  %and = and i32 %conv, 2048, !dbg !8643
  %tobool2 = icmp ne i32 %and, 0, !dbg !8643
  br i1 %tobool2, label %if.then6, label %lor.lhs.false, !dbg !8644

lor.lhs.false:                                    ; preds = %if.then
  %5 = load i16, i16* %pcie_dev_ctrl, align 2, !dbg !8645
  %conv3 = zext i16 %5 to i32, !dbg !8645
  %and4 = and i32 %conv3, 16, !dbg !8646
  %tobool5 = icmp ne i32 %and4, 0, !dbg !8646
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !8647

if.then6:                                         ; preds = %lor.lhs.false, %if.then
  %6 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8648
  %pdev7 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %6, i32 0, i32 4, !dbg !8648
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev7, align 8, !dbg !8648
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 41, !dbg !8648
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8648
  %vendor = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 7, !dbg !8648
  %9 = load i16, i16* %vendor, align 4, !dbg !8648
  %conv8 = zext i16 %9 to i32, !dbg !8648
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8648
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 8, !dbg !8648
  %11 = load i16, i16* %device, align 2, !dbg !8648
  %conv9 = zext i16 %11 to i32, !dbg !8648
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.18, i64 0, i64 0), i32 %conv8, i32 %conv9) #13, !dbg !8648
  %12 = load i16, i16* %pcie_dev_ctrl, align 2, !dbg !8650
  %conv10 = zext i16 %12 to i32, !dbg !8650
  %and11 = and i32 %conv10, -2065, !dbg !8650
  %conv12 = trunc i32 %and11 to i16, !dbg !8650
  store i16 %conv12, i16* %pcie_dev_ctrl, align 2, !dbg !8650
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8651
  %14 = load i32, i32* %pos, align 4, !dbg !8652
  %add13 = add i32 %14, 8, !dbg !8653
  %15 = load i16, i16* %pcie_dev_ctrl, align 2, !dbg !8654
  %call14 = call i32 @pci_write_config_word(%struct.pci_dev* %13, i32 %add13, i16 zeroext %15) #12, !dbg !8655
  br label %if.end, !dbg !8656

if.end:                                           ; preds = %if.then6, %lor.lhs.false
  br label %if.end15, !dbg !8657

if.end15:                                         ; preds = %if.end, %entry
  ret void, !dbg !8658
}

; Function Attrs: noredzone
declare dso_local i32 @pci_find_capability(%struct.pci_dev*, i32) #1

; Function Attrs: noredzone
declare dso_local i32 @pci_read_config_word(%struct.pci_dev*, i32, i16*) #1

; Function Attrs: noredzone
declare dso_local i32 @pci_write_config_word(%struct.pci_dev*, i32, i16 zeroext) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_hw_init(%struct.driver_data* %dd) #2 !dbg !6391 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !7000, metadata !DIExpression()), !dbg !8659
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6456, metadata !DIExpression()), !dbg !8661
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !8666, metadata !DIExpression()), !dbg !8670
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !8674, metadata !DIExpression()), !dbg !8675
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !8241, metadata !DIExpression()), !dbg !8676
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8245, metadata !DIExpression()), !dbg !8678
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !8679, metadata !DIExpression()), !dbg !8680
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !8681, metadata !DIExpression()), !dbg !8682
  %retval = alloca i32, align 4
  %dd.addr = alloca %struct.driver_data*, align 8
  %i = alloca i32, align 4
  %rv = alloca i32, align 4
  %timeout = alloca i64, align 8
  %timetaken = alloca i64, align 8
  %.compoundliteral = alloca %struct.spinlock, align 1
  %__ms = alloca i64, align 8
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !8683, metadata !DIExpression()), !dbg !8684
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8685, metadata !DIExpression()), !dbg !8686
  call void @llvm.dbg.declare(metadata i32* %rv, metadata !8687, metadata !DIExpression()), !dbg !8688
  call void @llvm.dbg.declare(metadata i64* %timeout, metadata !8689, metadata !DIExpression()), !dbg !8690
  call void @llvm.dbg.declare(metadata i64* %timetaken, metadata !8691, metadata !DIExpression()), !dbg !8692
  %0 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8693
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %0, i32 0, i32 4, !dbg !8694
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !8694
  %call = call i8** @pcim_iomap_table(%struct.pci_dev* %1) #12, !dbg !8695
  %arrayidx = getelementptr i8*, i8** %call, i64 5, !dbg !8695
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !8695
  %3 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8696
  %mmio = getelementptr inbounds %struct.driver_data, %struct.driver_data* %3, i32 0, i32 0, !dbg !8697
  store i8* %2, i8** %mmio, align 8, !dbg !8698
  %4 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8699
  call void @mtip_detect_product(%struct.driver_data* %4) #12, !dbg !8700
  %5 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8701
  %product_type = getelementptr inbounds %struct.driver_data, %struct.driver_data* %5, i32 0, i32 8, !dbg !8703
  %6 = load i32, i32* %product_type, align 8, !dbg !8703
  %cmp = icmp eq i32 %6, 0, !dbg !8704
  br i1 %cmp, label %if.then, label %if.end, !dbg !8705

if.then:                                          ; preds = %entry
  store i32 -5, i32* %rv, align 4, !dbg !8706
  br label %out1, !dbg !8708

if.end:                                           ; preds = %entry
  %7 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8709
  call void @hba_setup(%struct.driver_data* %7) #12, !dbg !8710
  %8 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8711
  %numa_node = getelementptr inbounds %struct.driver_data, %struct.driver_data* %8, i32 0, i32 15, !dbg !8712
  %9 = load i32, i32* %numa_node, align 4, !dbg !8712
  %call1 = call i8* @kzalloc_node(i64 400, i32 3264, i32 %9) #12, !dbg !8713
  %10 = bitcast i8* %call1 to %struct.mtip_port*, !dbg !8713
  %11 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8714
  %port = getelementptr inbounds %struct.driver_data, %struct.driver_data* %11, i32 0, i32 7, !dbg !8715
  store %struct.mtip_port* %10, %struct.mtip_port** %port, align 8, !dbg !8716
  %12 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8717
  %port2 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %12, i32 0, i32 7, !dbg !8719
  %13 = load %struct.mtip_port*, %struct.mtip_port** %port2, align 8, !dbg !8719
  %tobool = icmp ne %struct.mtip_port* %13, null, !dbg !8717
  br i1 %tobool, label %if.end5, label %if.then3, !dbg !8720

if.then3:                                         ; preds = %if.end
  %14 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8721
  %pdev4 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %14, i32 0, i32 4, !dbg !8721
  %15 = load %struct.pci_dev*, %struct.pci_dev** %pdev4, align 8, !dbg !8721
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %15, i32 0, i32 41, !dbg !8721
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.27, i64 0, i64 0)) #13, !dbg !8721
  store i32 -12, i32* %retval, align 4, !dbg !8723
  br label %return, !dbg !8723

if.end5:                                          ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !8724
  br label %for.cond, !dbg !8726

for.cond:                                         ; preds = %for.inc, %if.end5
  %16 = load i32, i32* %i, align 4, !dbg !8727
  %cmp6 = icmp slt i32 %16, 8, !dbg !8729
  br i1 %cmp6, label %for.body, label %for.end, !dbg !8730

for.body:                                         ; preds = %for.cond
  %17 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8731
  %port7 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %17, i32 0, i32 7, !dbg !8732
  %18 = load %struct.mtip_port*, %struct.mtip_port** %port7, align 8, !dbg !8732
  %19 = bitcast %struct.mtip_port* %18 to i8*, !dbg !8731
  %20 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8733
  %work = getelementptr inbounds %struct.driver_data, %struct.driver_data* %20, i32 0, i32 19, !dbg !8734
  %21 = load i32, i32* %i, align 4, !dbg !8735
  %idxprom = sext i32 %21 to i64, !dbg !8733
  %arrayidx8 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work, i64 0, i64 %idxprom, !dbg !8733
  %port9 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx8, i32 0, i32 1, !dbg !8736
  store i8* %19, i8** %port9, align 8, !dbg !8737
  br label %for.inc, !dbg !8733

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %i, align 4, !dbg !8738
  %inc = add i32 %22, 1, !dbg !8738
  store i32 %inc, i32* %i, align 4, !dbg !8738
  br label %for.cond, !dbg !8739, !llvm.loop !8740

for.end:                                          ; preds = %for.cond
  %23 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8742
  %call10 = call i32 @mtip_device_unaligned_constrained(%struct.driver_data* %23) #12, !dbg !8744
  %tobool11 = icmp ne i32 %call10, 0, !dbg !8744
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !8745

if.then12:                                        ; preds = %for.end
  %24 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8746
  %unal_qdepth = getelementptr inbounds %struct.driver_data, %struct.driver_data* %24, i32 0, i32 24, !dbg !8747
  store i32 2, i32* %unal_qdepth, align 8, !dbg !8748
  br label %if.end14, !dbg !8746

if.else:                                          ; preds = %for.end
  %25 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8749
  %unal_qdepth13 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %25, i32 0, i32 24, !dbg !8750
  store i32 0, i32* %unal_qdepth13, align 8, !dbg !8751
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then12
  %26 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8752
  %port15 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %26, i32 0, i32 7, !dbg !8753
  %27 = load %struct.mtip_port*, %struct.mtip_port** %port15, align 8, !dbg !8753
  %cmd_slot_unal = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %27, i32 0, i32 24, !dbg !8754
  %28 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8755
  %unal_qdepth16 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %28, i32 0, i32 24, !dbg !8756
  %29 = load i32, i32* %unal_qdepth16, align 8, !dbg !8756
  store %struct.atomic_t* %cmd_slot_unal, %struct.atomic_t** %v.addr.i, align 8
  store i32 %29, i32* %i.addr.i, align 4
  %30 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8757
  %31 = bitcast %struct.atomic_t* %30 to i8*, !dbg !8757
  store i8* %31, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %32 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8758
  %33 = load i64, i64* %size.addr.i.i, align 8, !dbg !8759
  %conv.i.i = trunc i64 %33 to i32, !dbg !8759
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %32, i32 %conv.i.i) #14, !dbg !8760
  %34 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8761
  %35 = load i64, i64* %size.addr.i.i, align 8, !dbg !8761
  call void @kcsan_check_access(i8* %34, i64 %35, i32 5) #14, !dbg !8761
  %36 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8762
  %37 = load i32, i32* %i.addr.i, align 4, !dbg !8763
  store %struct.atomic_t* %36, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %37, i32* %i.addr.i.i, align 4
  %38 = load i32, i32* %i.addr.i.i, align 4, !dbg !8764
  %39 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !8764
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %39, i32 0, i32 0, !dbg !8764
  store volatile i32 %38, i32* %counter.i.i, align 4, !dbg !8764
  store i32 0, i32* %i, align 4, !dbg !8766
  br label %for.cond17, !dbg !8767

for.cond17:                                       ; preds = %for.inc28, %if.end14
  %40 = load i32, i32* %i, align 4, !dbg !8768
  %cmp18 = icmp slt i32 %40, 8, !dbg !8769
  br i1 %cmp18, label %for.body19, label %for.end30, !dbg !8770

for.body19:                                       ; preds = %for.cond17
  br label %do.body, !dbg !8771

do.body:                                          ; preds = %for.body19
  %41 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8772
  %port20 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %41, i32 0, i32 7, !dbg !8772
  %42 = load %struct.mtip_port*, %struct.mtip_port** %port20, align 8, !dbg !8772
  %cmd_issue_lock = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %42, i32 0, i32 25, !dbg !8772
  %43 = load i32, i32* %i, align 4, !dbg !8772
  %idxprom21 = sext i32 %43 to i64, !dbg !8772
  %arrayidx22 = getelementptr [8 x %struct.spinlock], [8 x %struct.spinlock]* %cmd_issue_lock, i64 0, i64 %idxprom21, !dbg !8772
  store %struct.spinlock* %arrayidx22, %struct.spinlock** %lock.addr.i, align 8
  %44 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8773
  %45 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %44, i32 0, i32 0, !dbg !8774
  %rlock.i = bitcast %union.anon.1* %45 to %struct.raw_spinlock*, !dbg !8774
  %46 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8772
  %port24 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %46, i32 0, i32 7, !dbg !8772
  %47 = load %struct.mtip_port*, %struct.mtip_port** %port24, align 8, !dbg !8772
  %cmd_issue_lock25 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %47, i32 0, i32 25, !dbg !8772
  %48 = load i32, i32* %i, align 4, !dbg !8772
  %idxprom26 = sext i32 %48 to i64, !dbg !8772
  %arrayidx27 = getelementptr [8 x %struct.spinlock], [8 x %struct.spinlock]* %cmd_issue_lock25, i64 0, i64 %idxprom26, !dbg !8772
  %49 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !8772
  %rlock = bitcast %union.anon.1* %49 to %struct.raw_spinlock*, !dbg !8772
  %50 = bitcast %struct.spinlock* %arrayidx27 to i8*, !dbg !8772
  %51 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !8772
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %50, i8* align 1 %51, i64 0, i1 false), !dbg !8772
  br label %do.end, !dbg !8772

do.end:                                           ; preds = %do.body
  br label %for.inc28, !dbg !8772

for.inc28:                                        ; preds = %do.end
  %52 = load i32, i32* %i, align 4, !dbg !8775
  %inc29 = add i32 %52, 1, !dbg !8775
  store i32 %inc29, i32* %i, align 4, !dbg !8775
  br label %for.cond17, !dbg !8776, !llvm.loop !8777

for.end30:                                        ; preds = %for.cond17
  %53 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8779
  %mmio31 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %53, i32 0, i32 0, !dbg !8780
  %54 = load i8*, i8** %mmio31, align 8, !dbg !8780
  %add.ptr = getelementptr i8, i8* %54, i64 256, !dbg !8781
  %55 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8782
  %port32 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %55, i32 0, i32 7, !dbg !8783
  %56 = load %struct.mtip_port*, %struct.mtip_port** %port32, align 8, !dbg !8783
  %mmio33 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %56, i32 0, i32 2, !dbg !8784
  store i8* %add.ptr, i8** %mmio33, align 8, !dbg !8785
  %57 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8786
  %58 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8787
  %port34 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %58, i32 0, i32 7, !dbg !8788
  %59 = load %struct.mtip_port*, %struct.mtip_port** %port34, align 8, !dbg !8788
  %dd35 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %59, i32 0, i32 0, !dbg !8789
  store %struct.driver_data* %57, %struct.driver_data** %dd35, align 8, !dbg !8790
  %60 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8791
  %call36 = call i32 @mtip_dma_alloc(%struct.driver_data* %60) #12, !dbg !8792
  store i32 %call36, i32* %rv, align 4, !dbg !8793
  %61 = load i32, i32* %rv, align 4, !dbg !8794
  %cmp37 = icmp slt i32 %61, 0, !dbg !8796
  br i1 %cmp37, label %if.then38, label %if.end39, !dbg !8797

if.then38:                                        ; preds = %for.end30
  br label %out1, !dbg !8798

if.end39:                                         ; preds = %for.end30
  store i32 0, i32* %i, align 4, !dbg !8799
  br label %for.cond40, !dbg !8801

for.cond40:                                       ; preds = %for.inc68, %if.end39
  %62 = load i32, i32* %i, align 4, !dbg !8802
  %63 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8804
  %slot_groups = getelementptr inbounds %struct.driver_data, %struct.driver_data* %63, i32 0, i32 9, !dbg !8805
  %64 = load i32, i32* %slot_groups, align 4, !dbg !8805
  %cmp41 = icmp ult i32 %62, %64, !dbg !8806
  br i1 %cmp41, label %for.body42, label %for.end70, !dbg !8807

for.body42:                                       ; preds = %for.cond40
  %65 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8808
  %port43 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %65, i32 0, i32 7, !dbg !8810
  %66 = load %struct.mtip_port*, %struct.mtip_port** %port43, align 8, !dbg !8810
  %mmio44 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %66, i32 0, i32 2, !dbg !8811
  %67 = load i8*, i8** %mmio44, align 8, !dbg !8811
  %68 = load i32, i32* %i, align 4, !dbg !8812
  %mul = mul i32 %68, 128, !dbg !8813
  %idx.ext = sext i32 %mul to i64, !dbg !8814
  %add.ptr45 = getelementptr i8, i8* %67, i64 %idx.ext, !dbg !8814
  %add.ptr46 = getelementptr i8, i8* %add.ptr45, i64 52, !dbg !8815
  %69 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8816
  %port47 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %69, i32 0, i32 7, !dbg !8817
  %70 = load %struct.mtip_port*, %struct.mtip_port** %port47, align 8, !dbg !8817
  %s_active = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %70, i32 0, i32 3, !dbg !8818
  %71 = load i32, i32* %i, align 4, !dbg !8819
  %idxprom48 = sext i32 %71 to i64, !dbg !8816
  %arrayidx49 = getelementptr [8 x i8*], [8 x i8*]* %s_active, i64 0, i64 %idxprom48, !dbg !8816
  store i8* %add.ptr46, i8** %arrayidx49, align 8, !dbg !8820
  %72 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8821
  %port50 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %72, i32 0, i32 7, !dbg !8822
  %73 = load %struct.mtip_port*, %struct.mtip_port** %port50, align 8, !dbg !8822
  %mmio51 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %73, i32 0, i32 2, !dbg !8823
  %74 = load i8*, i8** %mmio51, align 8, !dbg !8823
  %75 = load i32, i32* %i, align 4, !dbg !8824
  %mul52 = mul i32 %75, 128, !dbg !8825
  %idx.ext53 = sext i32 %mul52 to i64, !dbg !8826
  %add.ptr54 = getelementptr i8, i8* %74, i64 %idx.ext53, !dbg !8826
  %add.ptr55 = getelementptr i8, i8* %add.ptr54, i64 56, !dbg !8827
  %76 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8828
  %port56 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %76, i32 0, i32 7, !dbg !8829
  %77 = load %struct.mtip_port*, %struct.mtip_port** %port56, align 8, !dbg !8829
  %cmd_issue = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %77, i32 0, i32 5, !dbg !8830
  %78 = load i32, i32* %i, align 4, !dbg !8831
  %idxprom57 = sext i32 %78 to i64, !dbg !8828
  %arrayidx58 = getelementptr [8 x i8*], [8 x i8*]* %cmd_issue, i64 0, i64 %idxprom57, !dbg !8828
  store i8* %add.ptr55, i8** %arrayidx58, align 8, !dbg !8832
  %79 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8833
  %port59 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %79, i32 0, i32 7, !dbg !8834
  %80 = load %struct.mtip_port*, %struct.mtip_port** %port59, align 8, !dbg !8834
  %mmio60 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %80, i32 0, i32 2, !dbg !8835
  %81 = load i8*, i8** %mmio60, align 8, !dbg !8835
  %82 = load i32, i32* %i, align 4, !dbg !8836
  %mul61 = mul i32 %82, 128, !dbg !8837
  %idx.ext62 = sext i32 %mul61 to i64, !dbg !8838
  %add.ptr63 = getelementptr i8, i8* %81, i64 %idx.ext62, !dbg !8838
  %add.ptr64 = getelementptr i8, i8* %add.ptr63, i64 124, !dbg !8839
  %83 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8840
  %port65 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %83, i32 0, i32 7, !dbg !8841
  %84 = load %struct.mtip_port*, %struct.mtip_port** %port65, align 8, !dbg !8841
  %completed = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %84, i32 0, i32 4, !dbg !8842
  %85 = load i32, i32* %i, align 4, !dbg !8843
  %idxprom66 = sext i32 %85 to i64, !dbg !8840
  %arrayidx67 = getelementptr [8 x i8*], [8 x i8*]* %completed, i64 0, i64 %idxprom66, !dbg !8840
  store i8* %add.ptr64, i8** %arrayidx67, align 8, !dbg !8844
  br label %for.inc68, !dbg !8845

for.inc68:                                        ; preds = %for.body42
  %86 = load i32, i32* %i, align 4, !dbg !8846
  %inc69 = add i32 %86, 1, !dbg !8846
  store i32 %inc69, i32* %i, align 4, !dbg !8846
  br label %for.cond40, !dbg !8847, !llvm.loop !8848

for.end70:                                        ; preds = %for.cond40
  %87 = load volatile i64, i64* @jiffies, align 8, !dbg !8850
  store i64 %87, i64* %timetaken, align 8, !dbg !8851
  %88 = load volatile i64, i64* @jiffies, align 8, !dbg !8852
  store i32 30000, i32* %m.addr.i, align 4
  %89 = load i32, i32* %m.addr.i, align 4, !dbg !8853
  %90 = call i1 @llvm.is.constant.i32(i32 %89) #11, !dbg !8854
  br i1 %90, label %if.then.i, label %if.else.i, !dbg !8855

if.then.i:                                        ; preds = %for.end70
  %91 = load i32, i32* %m.addr.i, align 4, !dbg !8856
  %cmp.i = icmp slt i32 %91, 0, !dbg !8857
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !8858

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !8859
  br label %msecs_to_jiffies.exit, !dbg !8859

if.end.i:                                         ; preds = %if.then.i
  %92 = load i32, i32* %m.addr.i, align 4, !dbg !8860
  %call.i = call i64 @_msecs_to_jiffies(i32 %92) #14, !dbg !8861
  store i64 %call.i, i64* %retval.i, align 8, !dbg !8862
  br label %msecs_to_jiffies.exit, !dbg !8862

if.else.i:                                        ; preds = %for.end70
  %93 = load i32, i32* %m.addr.i, align 4, !dbg !8863
  %call2.i = call i64 @__msecs_to_jiffies(i32 %93) #14, !dbg !8864
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !8865
  br label %msecs_to_jiffies.exit, !dbg !8865

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %94 = load i64, i64* %retval.i, align 8, !dbg !8866
  %add = add i64 %88, %94, !dbg !8867
  store i64 %add, i64* %timeout, align 8, !dbg !8868
  br label %while.cond, !dbg !8869

while.cond:                                       ; preds = %while.end, %msecs_to_jiffies.exit
  %95 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8870
  %port72 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %95, i32 0, i32 7, !dbg !8871
  %96 = load %struct.mtip_port*, %struct.mtip_port** %port72, align 8, !dbg !8871
  %mmio73 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %96, i32 0, i32 2, !dbg !8872
  %97 = load i8*, i8** %mmio73, align 8, !dbg !8872
  %add.ptr74 = getelementptr i8, i8* %97, i64 40, !dbg !8873
  %call75 = call i32 @readl(i8* %add.ptr74) #12, !dbg !8874
  %and = and i32 %call75, 15, !dbg !8875
  %cmp76 = icmp ne i32 %and, 3, !dbg !8876
  br i1 %cmp76, label %land.rhs, label %land.end, !dbg !8877

land.rhs:                                         ; preds = %while.cond
  %98 = load volatile i64, i64* @jiffies, align 8, !dbg !8878
  %99 = load i64, i64* %timeout, align 8, !dbg !8878
  %sub = sub i64 %98, %99, !dbg !8878
  %cmp77 = icmp slt i64 %sub, 0, !dbg !8878
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %100 = phi i1 [ false, %while.cond ], [ %cmp77, %land.rhs ], !dbg !8879
  br i1 %100, label %while.body, label %while.end81, !dbg !8869

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata i64* %__ms, metadata !8880, metadata !DIExpression()), !dbg !8883
  store i64 100, i64* %__ms, align 8, !dbg !8883
  br label %while.cond78, !dbg !8883

while.cond78:                                     ; preds = %while.body80, %while.body
  %101 = load i64, i64* %__ms, align 8, !dbg !8883
  %dec = add i64 %101, -1, !dbg !8883
  store i64 %dec, i64* %__ms, align 8, !dbg !8883
  %tobool79 = icmp ne i64 %101, 0, !dbg !8883
  br i1 %tobool79, label %while.body80, label %while.end, !dbg !8883

while.body80:                                     ; preds = %while.cond78
  call void @__const_udelay(i64 4295000) #12, !dbg !8884
  br label %while.cond78, !dbg !8883, !llvm.loop !8889

while.end:                                        ; preds = %while.cond78
  br label %while.cond, !dbg !8869, !llvm.loop !8890

while.end81:                                      ; preds = %land.end
  %102 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8892
  %pdev82 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %102, i32 0, i32 4, !dbg !8892
  %103 = load %struct.pci_dev*, %struct.pci_dev** %pdev82, align 8, !dbg !8892
  %call83 = call zeroext i1 @mtip_check_surprise_removal(%struct.pci_dev* %103) #12, !dbg !8892
  %lnot = xor i1 %call83, true, !dbg !8892
  %lnot84 = xor i1 %lnot, true, !dbg !8892
  %lnot.ext = zext i1 %lnot84 to i32, !dbg !8892
  %conv = sext i32 %lnot.ext to i64, !dbg !8892
  %tobool85 = icmp ne i64 %conv, 0, !dbg !8892
  br i1 %tobool85, label %if.then86, label %if.end91, !dbg !8894

if.then86:                                        ; preds = %while.end81
  %104 = load volatile i64, i64* @jiffies, align 8, !dbg !8895
  %105 = load i64, i64* %timetaken, align 8, !dbg !8897
  %sub87 = sub i64 %104, %105, !dbg !8898
  store i64 %sub87, i64* %timetaken, align 8, !dbg !8899
  %106 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8900
  %pdev88 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %106, i32 0, i32 4, !dbg !8900
  %107 = load %struct.pci_dev*, %struct.pci_dev** %pdev88, align 8, !dbg !8900
  %dev89 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %107, i32 0, i32 41, !dbg !8900
  %108 = load i64, i64* %timetaken, align 8, !dbg !8900
  %call90 = call i32 @jiffies_to_msecs(i64 %108) #12, !dbg !8900
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev89, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.28, i64 0, i64 0), i32 %call90) #13, !dbg !8900
  store i32 -19, i32* %rv, align 4, !dbg !8901
  br label %out2, !dbg !8902

if.end91:                                         ; preds = %while.end81
  %109 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8903
  %dd_flag = getelementptr inbounds %struct.driver_data, %struct.driver_data* %109, i32 0, i32 11, !dbg !8903
  %call92 = call zeroext i1 @test_bit(i64 1, i64* %dd_flag) #12, !dbg !8903
  %lnot93 = xor i1 %call92, true, !dbg !8903
  %lnot95 = xor i1 %lnot93, true, !dbg !8903
  %lnot.ext96 = zext i1 %lnot95 to i32, !dbg !8903
  %conv97 = sext i32 %lnot.ext96 to i64, !dbg !8903
  %tobool98 = icmp ne i64 %conv97, 0, !dbg !8903
  br i1 %tobool98, label %if.then99, label %if.end104, !dbg !8905

if.then99:                                        ; preds = %if.end91
  %110 = load volatile i64, i64* @jiffies, align 8, !dbg !8906
  %111 = load i64, i64* %timetaken, align 8, !dbg !8908
  %sub100 = sub i64 %110, %111, !dbg !8909
  store i64 %sub100, i64* %timetaken, align 8, !dbg !8910
  %112 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8911
  %pdev101 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %112, i32 0, i32 4, !dbg !8911
  %113 = load %struct.pci_dev*, %struct.pci_dev** %pdev101, align 8, !dbg !8911
  %dev102 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %113, i32 0, i32 41, !dbg !8911
  %114 = load i64, i64* %timetaken, align 8, !dbg !8911
  %call103 = call i32 @jiffies_to_msecs(i64 %114) #12, !dbg !8911
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev102, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.29, i64 0, i64 0), i32 %call103) #13, !dbg !8911
  store i32 -14, i32* %rv, align 4, !dbg !8912
  br label %out2, !dbg !8913

if.end104:                                        ; preds = %if.end91
  %115 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8914
  %mmio105 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %115, i32 0, i32 0, !dbg !8916
  %116 = load i8*, i8** %mmio105, align 8, !dbg !8916
  %add.ptr106 = getelementptr i8, i8* %116, i64 0, !dbg !8917
  %call107 = call i32 @readl(i8* %add.ptr106) #12, !dbg !8918
  %and108 = and i32 %call107, 524288, !dbg !8919
  %tobool109 = icmp ne i32 %and108, 0, !dbg !8919
  br i1 %tobool109, label %if.else118, label %if.then110, !dbg !8920

if.then110:                                       ; preds = %if.end104
  %117 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8921
  %call111 = call i32 @mtip_hba_reset(%struct.driver_data* %117) #12, !dbg !8924
  %cmp112 = icmp slt i32 %call111, 0, !dbg !8925
  br i1 %cmp112, label %if.then114, label %if.end117, !dbg !8926

if.then114:                                       ; preds = %if.then110
  %118 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8927
  %pdev115 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %118, i32 0, i32 4, !dbg !8927
  %119 = load %struct.pci_dev*, %struct.pci_dev** %pdev115, align 8, !dbg !8927
  %dev116 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %119, i32 0, i32 41, !dbg !8927
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev116, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.30, i64 0, i64 0)) #13, !dbg !8927
  store i32 -5, i32* %rv, align 4, !dbg !8929
  br label %out2, !dbg !8930

if.end117:                                        ; preds = %if.then110
  br label %if.end124, !dbg !8931

if.else118:                                       ; preds = %if.end104
  %120 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8932
  %mmio119 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %120, i32 0, i32 0, !dbg !8934
  %121 = load i8*, i8** %mmio119, align 8, !dbg !8934
  %add.ptr120 = getelementptr i8, i8* %121, i64 8, !dbg !8935
  %call121 = call i32 @readl(i8* %add.ptr120) #12, !dbg !8936
  %122 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8937
  %mmio122 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %122, i32 0, i32 0, !dbg !8938
  %123 = load i8*, i8** %mmio122, align 8, !dbg !8938
  %add.ptr123 = getelementptr i8, i8* %123, i64 8, !dbg !8939
  call void @writel(i32 %call121, i8* %add.ptr123) #12, !dbg !8940
  br label %if.end124

if.end124:                                        ; preds = %if.else118, %if.end117
  %124 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8941
  %port125 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %124, i32 0, i32 7, !dbg !8942
  %125 = load %struct.mtip_port*, %struct.mtip_port** %port125, align 8, !dbg !8942
  call void @mtip_init_port(%struct.mtip_port* %125) #12, !dbg !8943
  %126 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8944
  %port126 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %126, i32 0, i32 7, !dbg !8945
  %127 = load %struct.mtip_port*, %struct.mtip_port** %port126, align 8, !dbg !8945
  call void @mtip_start_port(%struct.mtip_port* %127) #12, !dbg !8946
  %128 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8947
  %pdev127 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %128, i32 0, i32 4, !dbg !8948
  %129 = load %struct.pci_dev*, %struct.pci_dev** %pdev127, align 8, !dbg !8948
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %129, i32 0, i32 43, !dbg !8949
  %130 = load i32, i32* %irq, align 4, !dbg !8949
  %131 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8950
  %pdev128 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %131, i32 0, i32 4, !dbg !8951
  %132 = load %struct.pci_dev*, %struct.pci_dev** %pdev128, align 8, !dbg !8951
  %dev129 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %132, i32 0, i32 41, !dbg !8952
  %call130 = call i8* @dev_driver_string(%struct.device* %dev129) #12, !dbg !8953
  %133 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8954
  %134 = bitcast %struct.driver_data* %133 to i8*, !dbg !8954
  %call131 = call i32 @request_irq(i32 %130, i32 (i32, i8*)* @mtip_irq_handler, i64 128, i8* %call130, i8* %134) #12, !dbg !8955
  store i32 %call131, i32* %rv, align 4, !dbg !8956
  %135 = load i32, i32* %rv, align 4, !dbg !8957
  %tobool132 = icmp ne i32 %135, 0, !dbg !8957
  br i1 %tobool132, label %if.then133, label %if.end138, !dbg !8959

if.then133:                                       ; preds = %if.end124
  %136 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8960
  %pdev134 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %136, i32 0, i32 4, !dbg !8960
  %137 = load %struct.pci_dev*, %struct.pci_dev** %pdev134, align 8, !dbg !8960
  %dev135 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %137, i32 0, i32 41, !dbg !8960
  %138 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8960
  %pdev136 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %138, i32 0, i32 4, !dbg !8960
  %139 = load %struct.pci_dev*, %struct.pci_dev** %pdev136, align 8, !dbg !8960
  %irq137 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %139, i32 0, i32 43, !dbg !8960
  %140 = load i32, i32* %irq137, align 4, !dbg !8960
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev135, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.31, i64 0, i64 0), i32 %140) #13, !dbg !8960
  br label %out2, !dbg !8962

if.end138:                                        ; preds = %if.end124
  %141 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8963
  %pdev139 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %141, i32 0, i32 4, !dbg !8964
  %142 = load %struct.pci_dev*, %struct.pci_dev** %pdev139, align 8, !dbg !8964
  %irq140 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %142, i32 0, i32 43, !dbg !8965
  %143 = load i32, i32* %irq140, align 4, !dbg !8965
  %144 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8966
  %isr_binding = getelementptr inbounds %struct.driver_data, %struct.driver_data* %144, i32 0, i32 20, !dbg !8967
  %145 = load i32, i32* %isr_binding, align 8, !dbg !8967
  %call141 = call %struct.cpumask* @get_cpu_mask(i32 %145) #12, !dbg !8968
  %call142 = call i32 @irq_set_affinity_hint(i32 %143, %struct.cpumask* %call141) #12, !dbg !8969
  %146 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8970
  %mmio143 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %146, i32 0, i32 0, !dbg !8971
  %147 = load i8*, i8** %mmio143, align 8, !dbg !8971
  %add.ptr144 = getelementptr i8, i8* %147, i64 4, !dbg !8972
  %call145 = call i32 @readl(i8* %add.ptr144) #12, !dbg !8973
  %or = or i32 %call145, 2, !dbg !8974
  %148 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8975
  %mmio146 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %148, i32 0, i32 0, !dbg !8976
  %149 = load i8*, i8** %mmio146, align 8, !dbg !8976
  %add.ptr147 = getelementptr i8, i8* %149, i64 4, !dbg !8977
  call void @writel(i32 %or, i8* %add.ptr147) #12, !dbg !8978
  br label %do.body148, !dbg !8979

do.body148:                                       ; preds = %if.end138
  %150 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8980
  %port149 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %150, i32 0, i32 7, !dbg !8980
  %151 = load %struct.mtip_port*, %struct.mtip_port** %port149, align 8, !dbg !8980
  %svc_wait = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %151, i32 0, i32 21, !dbg !8980
  call void @__init_waitqueue_head(%struct.wait_queue_head* %svc_wait, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.32, i64 0, i64 0), %struct.lock_class_key* @mtip_hw_init.__key) #12, !dbg !8980
  br label %do.end150, !dbg !8980

do.end150:                                        ; preds = %do.body148
  %152 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8982
  %dd_flag151 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %152, i32 0, i32 11, !dbg !8984
  %call152 = call zeroext i1 @test_bit(i64 1, i64* %dd_flag151) #12, !dbg !8985
  br i1 %call152, label %if.then153, label %if.end154, !dbg !8986

if.then153:                                       ; preds = %do.end150
  store i32 -14, i32* %rv, align 4, !dbg !8987
  br label %out3, !dbg !8989

if.end154:                                        ; preds = %do.end150
  %153 = load i32, i32* %rv, align 4, !dbg !8990
  store i32 %153, i32* %retval, align 4, !dbg !8991
  br label %return, !dbg !8991

out3:                                             ; preds = %if.then153
  call void @llvm.dbg.label(metadata !8992), !dbg !8993
  %154 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8994
  %mmio155 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %154, i32 0, i32 0, !dbg !8995
  %155 = load i8*, i8** %mmio155, align 8, !dbg !8995
  %add.ptr156 = getelementptr i8, i8* %155, i64 4, !dbg !8996
  %call157 = call i32 @readl(i8* %add.ptr156) #12, !dbg !8997
  %and158 = and i32 %call157, -3, !dbg !8998
  %156 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !8999
  %mmio159 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %156, i32 0, i32 0, !dbg !9000
  %157 = load i8*, i8** %mmio159, align 8, !dbg !9000
  %add.ptr160 = getelementptr i8, i8* %157, i64 4, !dbg !9001
  call void @writel(i32 %and158, i8* %add.ptr160) #12, !dbg !9002
  %158 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9003
  %pdev161 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %158, i32 0, i32 4, !dbg !9004
  %159 = load %struct.pci_dev*, %struct.pci_dev** %pdev161, align 8, !dbg !9004
  %irq162 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %159, i32 0, i32 43, !dbg !9005
  %160 = load i32, i32* %irq162, align 4, !dbg !9005
  %call163 = call i32 @irq_set_affinity_hint(i32 %160, %struct.cpumask* null) #12, !dbg !9006
  %161 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9007
  %pdev164 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %161, i32 0, i32 4, !dbg !9008
  %162 = load %struct.pci_dev*, %struct.pci_dev** %pdev164, align 8, !dbg !9008
  %irq165 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %162, i32 0, i32 43, !dbg !9009
  %163 = load i32, i32* %irq165, align 4, !dbg !9009
  %164 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9010
  %165 = bitcast %struct.driver_data* %164 to i8*, !dbg !9010
  %call166 = call i8* @free_irq(i32 %163, i8* %165) #12, !dbg !9011
  br label %out2, !dbg !9011

out2:                                             ; preds = %out3, %if.then133, %if.then114, %if.then99, %if.then86
  call void @llvm.dbg.label(metadata !9012), !dbg !9013
  %166 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9014
  %port167 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %166, i32 0, i32 7, !dbg !9015
  %167 = load %struct.mtip_port*, %struct.mtip_port** %port167, align 8, !dbg !9015
  call void @mtip_deinit_port(%struct.mtip_port* %167) #12, !dbg !9016
  %168 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9017
  call void @mtip_dma_free(%struct.driver_data* %168) #12, !dbg !9018
  br label %out1, !dbg !9018

out1:                                             ; preds = %out2, %if.then38, %if.then
  call void @llvm.dbg.label(metadata !9019), !dbg !9020
  %169 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9021
  %port168 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %169, i32 0, i32 7, !dbg !9022
  %170 = load %struct.mtip_port*, %struct.mtip_port** %port168, align 8, !dbg !9022
  %171 = bitcast %struct.mtip_port* %170 to i8*, !dbg !9021
  call void @kfree(i8* %171) #12, !dbg !9023
  %172 = load i32, i32* %rv, align 4, !dbg !9024
  store i32 %172, i32* %retval, align 4, !dbg !9025
  br label %return, !dbg !9025

return:                                           ; preds = %out1, %if.end154, %if.then3
  %173 = load i32, i32* %retval, align 4, !dbg !9026
  ret i32 %173, !dbg !9026
}

; Function Attrs: noredzone
declare dso_local %struct.gendisk* @__alloc_disk_node(i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ida_alloc(%struct.ida* %ida, i32 %gfp) #2 !dbg !9027 {
entry:
  %ida.addr = alloca %struct.ida*, align 8
  %gfp.addr = alloca i32, align 4
  store %struct.ida* %ida, %struct.ida** %ida.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ida** %ida.addr, metadata !9031, metadata !DIExpression()), !dbg !9032
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !9033, metadata !DIExpression()), !dbg !9034
  %0 = load %struct.ida*, %struct.ida** %ida.addr, align 8, !dbg !9035
  %1 = load i32, i32* %gfp.addr, align 4, !dbg !9036
  %call = call i32 @ida_alloc_range(%struct.ida* %0, i32 0, i32 -1, i32 %1) #12, !dbg !9037
  ret i32 %call, !dbg !9038
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rssd_disk_name_format(i8* %prefix, i32 %index, i8* %buf, i32 %buflen) #2 !dbg !9039 {
entry:
  %retval = alloca i32, align 4
  %prefix.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %buflen.addr = alloca i32, align 4
  %base = alloca i32, align 4
  %begin = alloca i8*, align 8
  %end = alloca i8*, align 8
  %p = alloca i8*, align 8
  %unit = alloca i32, align 4
  store i8* %prefix, i8** %prefix.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !9042, metadata !DIExpression()), !dbg !9043
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !9044, metadata !DIExpression()), !dbg !9045
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !9046, metadata !DIExpression()), !dbg !9047
  store i32 %buflen, i32* %buflen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buflen.addr, metadata !9048, metadata !DIExpression()), !dbg !9049
  call void @llvm.dbg.declare(metadata i32* %base, metadata !9050, metadata !DIExpression()), !dbg !9052
  store i32 26, i32* %base, align 4, !dbg !9052
  call void @llvm.dbg.declare(metadata i8** %begin, metadata !9053, metadata !DIExpression()), !dbg !9054
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !9055
  %1 = load i8*, i8** %prefix.addr, align 8, !dbg !9056
  %call = call i64 @strlen(i8* %1) #12, !dbg !9057
  %add.ptr = getelementptr i8, i8* %0, i64 %call, !dbg !9058
  store i8* %add.ptr, i8** %begin, align 8, !dbg !9054
  call void @llvm.dbg.declare(metadata i8** %end, metadata !9059, metadata !DIExpression()), !dbg !9060
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !9061
  %3 = load i32, i32* %buflen.addr, align 4, !dbg !9062
  %idx.ext = sext i32 %3 to i64, !dbg !9063
  %add.ptr1 = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !9063
  store i8* %add.ptr1, i8** %end, align 8, !dbg !9060
  call void @llvm.dbg.declare(metadata i8** %p, metadata !9064, metadata !DIExpression()), !dbg !9065
  call void @llvm.dbg.declare(metadata i32* %unit, metadata !9066, metadata !DIExpression()), !dbg !9067
  %4 = load i8*, i8** %end, align 8, !dbg !9068
  %add.ptr2 = getelementptr i8, i8* %4, i64 -1, !dbg !9069
  store i8* %add.ptr2, i8** %p, align 8, !dbg !9070
  %5 = load i8*, i8** %p, align 8, !dbg !9071
  store i8 0, i8* %5, align 1, !dbg !9072
  store i32 26, i32* %unit, align 4, !dbg !9073
  br label %do.body, !dbg !9074

do.body:                                          ; preds = %do.cond, %entry
  %6 = load i8*, i8** %p, align 8, !dbg !9075
  %7 = load i8*, i8** %begin, align 8, !dbg !9078
  %cmp = icmp eq i8* %6, %7, !dbg !9079
  br i1 %cmp, label %if.then, label %if.end, !dbg !9080

if.then:                                          ; preds = %do.body
  store i32 -22, i32* %retval, align 4, !dbg !9081
  br label %return, !dbg !9081

if.end:                                           ; preds = %do.body
  %8 = load i32, i32* %index.addr, align 4, !dbg !9082
  %9 = load i32, i32* %unit, align 4, !dbg !9083
  %rem = srem i32 %8, %9, !dbg !9084
  %add = add i32 97, %rem, !dbg !9085
  %conv = trunc i32 %add to i8, !dbg !9086
  %10 = load i8*, i8** %p, align 8, !dbg !9087
  %incdec.ptr = getelementptr i8, i8* %10, i32 -1, !dbg !9087
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !9087
  store i8 %conv, i8* %incdec.ptr, align 1, !dbg !9088
  %11 = load i32, i32* %index.addr, align 4, !dbg !9089
  %12 = load i32, i32* %unit, align 4, !dbg !9090
  %div = sdiv i32 %11, %12, !dbg !9091
  %sub = sub i32 %div, 1, !dbg !9092
  store i32 %sub, i32* %index.addr, align 4, !dbg !9093
  br label %do.cond, !dbg !9094

do.cond:                                          ; preds = %if.end
  %13 = load i32, i32* %index.addr, align 4, !dbg !9095
  %cmp3 = icmp sge i32 %13, 0, !dbg !9096
  br i1 %cmp3, label %do.body, label %do.end, !dbg !9094, !llvm.loop !9097

do.end:                                           ; preds = %do.cond
  %14 = load i8*, i8** %begin, align 8, !dbg !9099
  %15 = load i8*, i8** %p, align 8, !dbg !9100
  %16 = load i8*, i8** %end, align 8, !dbg !9101
  %17 = load i8*, i8** %p, align 8, !dbg !9102
  %sub.ptr.lhs.cast = ptrtoint i8* %16 to i64, !dbg !9103
  %sub.ptr.rhs.cast = ptrtoint i8* %17 to i64, !dbg !9103
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9103
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %15, i64 %sub.ptr.sub, i1 false), !dbg !9104
  %18 = load i8*, i8** %buf.addr, align 8, !dbg !9105
  %19 = load i8*, i8** %prefix.addr, align 8, !dbg !9106
  %20 = load i8*, i8** %prefix.addr, align 8, !dbg !9107
  %call5 = call i64 @strlen(i8* %20) #12, !dbg !9108
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %19, i64 %call5, i1 false), !dbg !9109
  store i32 0, i32* %retval, align 4, !dbg !9110
  br label %return, !dbg !9110

return:                                           ; preds = %do.end, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !9111
  ret i32 %21, !dbg !9111
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_hw_debugfs_init(%struct.driver_data* %dd) #2 !dbg !9112 {
entry:
  %retval = alloca i32, align 4
  %dd.addr = alloca %struct.driver_data*, align 8
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !9113, metadata !DIExpression()), !dbg !9114
  %0 = load %struct.dentry*, %struct.dentry** @dfs_parent, align 8, !dbg !9115
  %tobool = icmp ne %struct.dentry* %0, null, !dbg !9115
  br i1 %tobool, label %if.end, label %if.then, !dbg !9117

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !9118
  br label %return, !dbg !9118

if.end:                                           ; preds = %entry
  %1 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9119
  %disk = getelementptr inbounds %struct.driver_data, %struct.driver_data* %1, i32 0, i32 3, !dbg !9120
  %2 = load %struct.gendisk*, %struct.gendisk** %disk, align 8, !dbg !9120
  %disk_name = getelementptr inbounds %struct.gendisk, %struct.gendisk* %2, i32 0, i32 3, !dbg !9121
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %disk_name, i64 0, i64 0, !dbg !9119
  %3 = load %struct.dentry*, %struct.dentry** @dfs_parent, align 8, !dbg !9122
  %call = call %struct.dentry* @debugfs_create_dir(i8* %arraydecay, %struct.dentry* %3) #12, !dbg !9123
  %4 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9124
  %dfs_node = getelementptr inbounds %struct.driver_data, %struct.driver_data* %4, i32 0, i32 13, !dbg !9125
  store %struct.dentry* %call, %struct.dentry** %dfs_node, align 8, !dbg !9126
  %5 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9127
  %dfs_node1 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %5, i32 0, i32 13, !dbg !9129
  %6 = load %struct.dentry*, %struct.dentry** %dfs_node1, align 8, !dbg !9129
  %7 = bitcast %struct.dentry* %6 to i8*, !dbg !9127
  %call2 = call zeroext i1 @IS_ERR_OR_NULL(i8* %7) #12, !dbg !9130
  br i1 %call2, label %if.then3, label %if.end8, !dbg !9131

if.then3:                                         ; preds = %if.end
  %8 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9132
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %8, i32 0, i32 4, !dbg !9132
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9132
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 41, !dbg !9132
  %10 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9132
  %disk4 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %10, i32 0, i32 3, !dbg !9132
  %11 = load %struct.gendisk*, %struct.gendisk** %disk4, align 8, !dbg !9132
  %disk_name5 = getelementptr inbounds %struct.gendisk, %struct.gendisk* %11, i32 0, i32 3, !dbg !9132
  %arraydecay6 = getelementptr inbounds [32 x i8], [32 x i8]* %disk_name5, i64 0, i64 0, !dbg !9132
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.55, i64 0, i64 0), i8* %arraydecay6) #13, !dbg !9132
  %12 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9134
  %dfs_node7 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %12, i32 0, i32 13, !dbg !9135
  store %struct.dentry* null, %struct.dentry** %dfs_node7, align 8, !dbg !9136
  store i32 -1, i32* %retval, align 4, !dbg !9137
  br label %return, !dbg !9137

if.end8:                                          ; preds = %if.end
  %13 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9138
  %dfs_node9 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %13, i32 0, i32 13, !dbg !9139
  %14 = load %struct.dentry*, %struct.dentry** %dfs_node9, align 8, !dbg !9139
  %15 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9140
  %16 = bitcast %struct.driver_data* %15 to i8*, !dbg !9140
  %call10 = call %struct.dentry* @debugfs_create_file(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.56, i64 0, i64 0), i16 zeroext 292, %struct.dentry* %14, i8* %16, %struct.file_operations* @mtip_flags_fops) #12, !dbg !9141
  %17 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9142
  %dfs_node11 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %17, i32 0, i32 13, !dbg !9143
  %18 = load %struct.dentry*, %struct.dentry** %dfs_node11, align 8, !dbg !9143
  %19 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9144
  %20 = bitcast %struct.driver_data* %19 to i8*, !dbg !9144
  %call12 = call %struct.dentry* @debugfs_create_file(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.57, i64 0, i64 0), i16 zeroext 292, %struct.dentry* %18, i8* %20, %struct.file_operations* @mtip_regs_fops) #12, !dbg !9145
  store i32 0, i32* %retval, align 4, !dbg !9146
  br label %return, !dbg !9146

return:                                           ; preds = %if.end8, %if.then3, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !9147
  ret i32 %21, !dbg !9147
}

; Function Attrs: noredzone
declare dso_local i32 @blk_mq_alloc_tag_set(%struct.blk_mq_tag_set*) #1

; Function Attrs: noredzone
declare dso_local %struct.request_queue* @blk_mq_init_queue(%struct.blk_mq_tag_set*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #2 !dbg !9148 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !9152, metadata !DIExpression()), !dbg !9153
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !9154
  %1 = ptrtoint i8* %0 to i64, !dbg !9154
  %2 = inttoptr i64 %1 to i8*, !dbg !9154
  %3 = ptrtoint i8* %2 to i64, !dbg !9154
  %cmp = icmp uge i64 %3, -4095, !dbg !9154
  %lnot = xor i1 %cmp, true, !dbg !9154
  %lnot1 = xor i1 %lnot, true, !dbg !9154
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !9154
  %conv = sext i32 %lnot.ext to i64, !dbg !9154
  %tobool = icmp ne i64 %conv, 0, !dbg !9154
  ret i1 %tobool, !dbg !9155
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_hw_get_identify(%struct.driver_data* %dd) #2 !dbg !9156 {
entry:
  %retval = alloca i32, align 4
  %dd.addr = alloca %struct.driver_data*, align 8
  %attr242 = alloca %struct.smart_attr, align 1
  %buf = alloca i8*, align 8
  %rv = alloca i32, align 4
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !9157, metadata !DIExpression()), !dbg !9158
  call void @llvm.dbg.declare(metadata %struct.smart_attr* %attr242, metadata !9159, metadata !DIExpression()), !dbg !9160
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !9161, metadata !DIExpression()), !dbg !9162
  call void @llvm.dbg.declare(metadata i32* %rv, metadata !9163, metadata !DIExpression()), !dbg !9164
  %0 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9165
  %port = getelementptr inbounds %struct.driver_data, %struct.driver_data* %0, i32 0, i32 7, !dbg !9167
  %1 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9167
  %call = call i32 @mtip_get_identify(%struct.mtip_port* %1, i8* null) #12, !dbg !9168
  %cmp = icmp slt i32 %call, 0, !dbg !9169
  br i1 %cmp, label %if.then, label %if.end, !dbg !9170

if.then:                                          ; preds = %entry
  store i32 -14, i32* %retval, align 4, !dbg !9171
  br label %return, !dbg !9171

if.end:                                           ; preds = %entry
  %2 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9172
  %port1 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %2, i32 0, i32 7, !dbg !9174
  %3 = load %struct.mtip_port*, %struct.mtip_port** %port1, align 8, !dbg !9174
  %identify = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %3, i32 0, i32 12, !dbg !9175
  %4 = load i16*, i16** %identify, align 8, !dbg !9175
  %add.ptr = getelementptr i16, i16* %4, i64 142, !dbg !9176
  %5 = load i16, i16* %add.ptr, align 2, !dbg !9177
  %conv = zext i16 %5 to i32, !dbg !9177
  %cmp2 = icmp eq i32 %conv, 60753, !dbg !9178
  br i1 %cmp2, label %if.then4, label %if.end6, !dbg !9179

if.then4:                                         ; preds = %if.end
  %6 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9180
  %port5 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %6, i32 0, i32 7, !dbg !9182
  %7 = load %struct.mtip_port*, %struct.mtip_port** %port5, align 8, !dbg !9182
  %flags = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %7, i32 0, i32 22, !dbg !9183
  call void @set_bit(i64 6, i64* %flags) #12, !dbg !9184
  store i32 60753, i32* %retval, align 4, !dbg !9185
  br label %return, !dbg !9185

if.end6:                                          ; preds = %if.end
  %8 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9186
  %port7 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %8, i32 0, i32 7, !dbg !9187
  %9 = load %struct.mtip_port*, %struct.mtip_port** %port7, align 8, !dbg !9187
  call void @mtip_dump_identify(%struct.mtip_port* %9) #12, !dbg !9188
  %10 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9189
  %port8 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %10, i32 0, i32 7, !dbg !9190
  %11 = load %struct.mtip_port*, %struct.mtip_port** %port8, align 8, !dbg !9190
  %12 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9191
  %port9 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %12, i32 0, i32 7, !dbg !9192
  %13 = load %struct.mtip_port*, %struct.mtip_port** %port9, align 8, !dbg !9192
  %log_buf = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %13, i32 0, i32 16, !dbg !9193
  %14 = load i16*, i16** %log_buf, align 8, !dbg !9193
  %15 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9194
  %port10 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %15, i32 0, i32 7, !dbg !9195
  %16 = load %struct.mtip_port*, %struct.mtip_port** %port10, align 8, !dbg !9195
  %log_buf_dma = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %16, i32 0, i32 17, !dbg !9196
  %17 = load i64, i64* %log_buf_dma, align 8, !dbg !9196
  %call11 = call i32 @mtip_read_log_page(%struct.mtip_port* %11, i8 zeroext 16, i16* %14, i64 %17, i32 1) #12, !dbg !9197
  store i32 %call11, i32* %rv, align 4, !dbg !9198
  %18 = load i32, i32* %rv, align 4, !dbg !9199
  %tobool = icmp ne i32 %18, 0, !dbg !9199
  br i1 %tobool, label %if.then12, label %if.else, !dbg !9201

if.then12:                                        ; preds = %if.end6
  %19 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9202
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %19, i32 0, i32 4, !dbg !9202
  %20 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9202
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 41, !dbg !9202
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.72, i64 0, i64 0)) #13, !dbg !9202
  br label %if.end39, !dbg !9204

if.else:                                          ; preds = %if.end6
  %21 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9205
  %port13 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %21, i32 0, i32 7, !dbg !9207
  %22 = load %struct.mtip_port*, %struct.mtip_port** %port13, align 8, !dbg !9207
  %log_buf14 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %22, i32 0, i32 16, !dbg !9208
  %23 = load i16*, i16** %log_buf14, align 8, !dbg !9208
  %24 = bitcast i16* %23 to i8*, !dbg !9209
  store i8* %24, i8** %buf, align 8, !dbg !9210
  %25 = load i8*, i8** %buf, align 8, !dbg !9211
  %arrayidx = getelementptr i8, i8* %25, i64 259, !dbg !9211
  %26 = load i8, i8* %arrayidx, align 1, !dbg !9211
  %conv15 = zext i8 %26 to i32, !dbg !9211
  %and = and i32 %conv15, 1, !dbg !9213
  %tobool16 = icmp ne i32 %and, 0, !dbg !9213
  br i1 %tobool16, label %if.then17, label %if.end20, !dbg !9214

if.then17:                                        ; preds = %if.else
  %27 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9215
  %pdev18 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %27, i32 0, i32 4, !dbg !9215
  %28 = load %struct.pci_dev*, %struct.pci_dev** %pdev18, align 8, !dbg !9215
  %dev19 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %28, i32 0, i32 41, !dbg !9215
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev19, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.73, i64 0, i64 0)) #13, !dbg !9215
  %29 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9217
  %dd_flag = getelementptr inbounds %struct.driver_data, %struct.driver_data* %29, i32 0, i32 11, !dbg !9218
  call void @set_bit(i64 3, i64* %dd_flag) #12, !dbg !9219
  br label %if.end20, !dbg !9220

if.end20:                                         ; preds = %if.then17, %if.else
  %30 = load i8*, i8** %buf, align 8, !dbg !9221
  %arrayidx21 = getelementptr i8, i8* %30, i64 288, !dbg !9221
  %31 = load i8, i8* %arrayidx21, align 1, !dbg !9221
  %conv22 = zext i8 %31 to i32, !dbg !9221
  %cmp23 = icmp eq i32 %conv22, 247, !dbg !9223
  br i1 %cmp23, label %if.then25, label %if.end29, !dbg !9224

if.then25:                                        ; preds = %if.end20
  %32 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9225
  %pdev26 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %32, i32 0, i32 4, !dbg !9225
  %33 = load %struct.pci_dev*, %struct.pci_dev** %pdev26, align 8, !dbg !9225
  %dev27 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %33, i32 0, i32 41, !dbg !9225
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev27, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.74, i64 0, i64 0)) #13, !dbg !9225
  %34 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9227
  %dd_flag28 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %34, i32 0, i32 11, !dbg !9228
  call void @set_bit(i64 2, i64* %dd_flag28) #12, !dbg !9229
  br label %if.end29, !dbg !9230

if.end29:                                         ; preds = %if.then25, %if.end20
  %35 = load i8*, i8** %buf, align 8, !dbg !9231
  %arrayidx30 = getelementptr i8, i8* %35, i64 288, !dbg !9231
  %36 = load i8, i8* %arrayidx30, align 1, !dbg !9231
  %conv31 = zext i8 %36 to i32, !dbg !9231
  %cmp32 = icmp eq i32 %conv31, 191, !dbg !9233
  br i1 %cmp32, label %if.then34, label %if.end38, !dbg !9234

if.then34:                                        ; preds = %if.end29
  %37 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9235
  %pdev35 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %37, i32 0, i32 4, !dbg !9235
  %38 = load %struct.pci_dev*, %struct.pci_dev** %pdev35, align 8, !dbg !9235
  %dev36 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %38, i32 0, i32 41, !dbg !9235
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev36, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.75, i64 0, i64 0)) #13, !dbg !9235
  %39 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9237
  %dd_flag37 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %39, i32 0, i32 11, !dbg !9238
  call void @set_bit(i64 8, i64* %dd_flag37) #12, !dbg !9239
  br label %if.end38, !dbg !9240

if.end38:                                         ; preds = %if.then34, %if.end29
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then12
  %40 = bitcast %struct.smart_attr* %attr242 to i8*, !dbg !9241
  call void @llvm.memset.p0i8.i64(i8* align 1 %40, i8 0, i64 12, i1 false), !dbg !9241
  %41 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9242
  %port40 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %41, i32 0, i32 7, !dbg !9244
  %42 = load %struct.mtip_port*, %struct.mtip_port** %port40, align 8, !dbg !9244
  %call41 = call i32 @mtip_get_smart_attr(%struct.mtip_port* %42, i32 242, %struct.smart_attr* %attr242) #12, !dbg !9245
  %tobool42 = icmp ne i32 %call41, 0, !dbg !9245
  br i1 %tobool42, label %if.then43, label %if.else46, !dbg !9246

if.then43:                                        ; preds = %if.end39
  %43 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9247
  %pdev44 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %43, i32 0, i32 4, !dbg !9247
  %44 = load %struct.pci_dev*, %struct.pci_dev** %pdev44, align 8, !dbg !9247
  %dev45 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %44, i32 0, i32 41, !dbg !9247
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev45, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.76, i64 0, i64 0)) #13, !dbg !9247
  br label %if.end50, !dbg !9247

if.else46:                                        ; preds = %if.end39
  %45 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9248
  %pdev47 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %45, i32 0, i32 4, !dbg !9248
  %46 = load %struct.pci_dev*, %struct.pci_dev** %pdev47, align 8, !dbg !9248
  %dev48 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %46, i32 0, i32 41, !dbg !9248
  %cur = getelementptr inbounds %struct.smart_attr, %struct.smart_attr* %attr242, i32 0, i32 2, !dbg !9248
  %47 = load i8, i8* %cur, align 1, !dbg !9248
  %conv49 = zext i8 %47 to i32, !dbg !9248
  %data = getelementptr inbounds %struct.smart_attr, %struct.smart_attr* %attr242, i32 0, i32 4, !dbg !9248
  %48 = load i32, i32* %data, align 1, !dbg !9248
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev48, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.77, i64 0, i64 0), i32 %conv49, i32 %48) #13, !dbg !9248
  br label %if.end50

if.end50:                                         ; preds = %if.else46, %if.then43
  %49 = load i32, i32* %rv, align 4, !dbg !9249
  store i32 %49, i32* %retval, align 4, !dbg !9250
  br label %return, !dbg !9250

return:                                           ; preds = %if.end50, %if.then4, %if.then
  %50 = load i32, i32* %retval, align 4, !dbg !9251
  ret i32 %50, !dbg !9251
}

; Function Attrs: noredzone
declare dso_local void @blk_queue_flag_set(i32, %struct.request_queue*) #1

; Function Attrs: noredzone
declare dso_local void @blk_queue_flag_clear(i32, %struct.request_queue*) #1

; Function Attrs: noredzone
declare dso_local void @blk_queue_max_segments(%struct.request_queue*, i16 zeroext) #1

; Function Attrs: noredzone
declare dso_local void @blk_queue_physical_block_size(%struct.request_queue*, i32) #1

; Function Attrs: noredzone
declare dso_local void @blk_queue_max_hw_sectors(%struct.request_queue*, i32) #1

; Function Attrs: noredzone
declare dso_local void @blk_queue_max_segment_size(%struct.request_queue*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_set_max_seg_size(%struct.device* %dev, i32 %size) #2 !dbg !9252 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9255, metadata !DIExpression()), !dbg !9256
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !9257, metadata !DIExpression()), !dbg !9258
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9259
  %dma_parms = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 20, !dbg !9261
  %1 = load %struct.device_dma_parameters*, %struct.device_dma_parameters** %dma_parms, align 8, !dbg !9261
  %tobool = icmp ne %struct.device_dma_parameters* %1, null, !dbg !9259
  br i1 %tobool, label %if.then, label %if.end, !dbg !9262

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %size.addr, align 4, !dbg !9263
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9265
  %dma_parms1 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 20, !dbg !9266
  %4 = load %struct.device_dma_parameters*, %struct.device_dma_parameters** %dma_parms1, align 8, !dbg !9266
  %max_segment_size = getelementptr inbounds %struct.device_dma_parameters, %struct.device_dma_parameters* %4, i32 0, i32 0, !dbg !9267
  store i32 %2, i32* %max_segment_size, align 8, !dbg !9268
  store i32 0, i32* %retval, align 4, !dbg !9269
  br label %return, !dbg !9269

if.end:                                           ; preds = %entry
  store i32 -5, i32* %retval, align 4, !dbg !9270
  br label %return, !dbg !9270

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !9271
  ret i32 %5, !dbg !9271
}

; Function Attrs: noredzone
declare dso_local void @blk_queue_io_min(%struct.request_queue*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mtip_hw_get_capacity(%struct.driver_data* %dd, i64* %sectors) #2 !dbg !9272 {
entry:
  %dd.addr = alloca %struct.driver_data*, align 8
  %sectors.addr = alloca i64*, align 8
  %port = alloca %struct.mtip_port*, align 8
  %total = alloca i64, align 8
  %raw0 = alloca i64, align 8
  %raw1 = alloca i64, align 8
  %raw2 = alloca i64, align 8
  %raw3 = alloca i64, align 8
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !9275, metadata !DIExpression()), !dbg !9276
  store i64* %sectors, i64** %sectors.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %sectors.addr, metadata !9277, metadata !DIExpression()), !dbg !9278
  call void @llvm.dbg.declare(metadata %struct.mtip_port** %port, metadata !9279, metadata !DIExpression()), !dbg !9280
  %0 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9281
  %port1 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %0, i32 0, i32 7, !dbg !9282
  %1 = load %struct.mtip_port*, %struct.mtip_port** %port1, align 8, !dbg !9282
  store %struct.mtip_port* %1, %struct.mtip_port** %port, align 8, !dbg !9280
  call void @llvm.dbg.declare(metadata i64* %total, metadata !9283, metadata !DIExpression()), !dbg !9284
  call void @llvm.dbg.declare(metadata i64* %raw0, metadata !9285, metadata !DIExpression()), !dbg !9286
  call void @llvm.dbg.declare(metadata i64* %raw1, metadata !9287, metadata !DIExpression()), !dbg !9288
  call void @llvm.dbg.declare(metadata i64* %raw2, metadata !9289, metadata !DIExpression()), !dbg !9290
  call void @llvm.dbg.declare(metadata i64* %raw3, metadata !9291, metadata !DIExpression()), !dbg !9292
  %2 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9293
  %identify = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %2, i32 0, i32 12, !dbg !9294
  %3 = load i16*, i16** %identify, align 8, !dbg !9294
  %arrayidx = getelementptr i16, i16* %3, i64 100, !dbg !9293
  %4 = load i16, i16* %arrayidx, align 2, !dbg !9293
  %conv = zext i16 %4 to i64, !dbg !9293
  store i64 %conv, i64* %raw0, align 8, !dbg !9295
  %5 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9296
  %identify2 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %5, i32 0, i32 12, !dbg !9297
  %6 = load i16*, i16** %identify2, align 8, !dbg !9297
  %arrayidx3 = getelementptr i16, i16* %6, i64 101, !dbg !9296
  %7 = load i16, i16* %arrayidx3, align 2, !dbg !9296
  %conv4 = zext i16 %7 to i64, !dbg !9296
  store i64 %conv4, i64* %raw1, align 8, !dbg !9298
  %8 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9299
  %identify5 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %8, i32 0, i32 12, !dbg !9300
  %9 = load i16*, i16** %identify5, align 8, !dbg !9300
  %arrayidx6 = getelementptr i16, i16* %9, i64 102, !dbg !9299
  %10 = load i16, i16* %arrayidx6, align 2, !dbg !9299
  %conv7 = zext i16 %10 to i64, !dbg !9299
  store i64 %conv7, i64* %raw2, align 8, !dbg !9301
  %11 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9302
  %identify8 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %11, i32 0, i32 12, !dbg !9303
  %12 = load i16*, i16** %identify8, align 8, !dbg !9303
  %arrayidx9 = getelementptr i16, i16* %12, i64 103, !dbg !9302
  %13 = load i16, i16* %arrayidx9, align 2, !dbg !9302
  %conv10 = zext i16 %13 to i64, !dbg !9302
  store i64 %conv10, i64* %raw3, align 8, !dbg !9304
  %14 = load i64, i64* %raw0, align 8, !dbg !9305
  %15 = load i64, i64* %raw1, align 8, !dbg !9306
  %shl = shl i64 %15, 16, !dbg !9307
  %or = or i64 %14, %shl, !dbg !9308
  %16 = load i64, i64* %raw2, align 8, !dbg !9309
  %shl11 = shl i64 %16, 32, !dbg !9310
  %or12 = or i64 %or, %shl11, !dbg !9311
  %17 = load i64, i64* %raw3, align 8, !dbg !9312
  %shl13 = shl i64 %17, 48, !dbg !9313
  %or14 = or i64 %or12, %shl13, !dbg !9314
  store i64 %or14, i64* %total, align 8, !dbg !9315
  %18 = load i64, i64* %total, align 8, !dbg !9316
  %19 = load i64*, i64** %sectors.addr, align 8, !dbg !9317
  store i64 %18, i64* %19, align 8, !dbg !9318
  %20 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9319
  %identify_valid = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %20, i32 0, i32 1, !dbg !9320
  %21 = load i64, i64* %identify_valid, align 8, !dbg !9320
  %tobool = icmp ne i64 %21, 0, !dbg !9321
  %lnot = xor i1 %tobool, true, !dbg !9321
  %lnot15 = xor i1 %lnot, true, !dbg !9322
  ret i1 %lnot15, !dbg !9323
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_capacity(%struct.gendisk* %disk, i64 %size) #2 !dbg !9324 {
entry:
  %disk.addr = alloca %struct.gendisk*, align 8
  %size.addr = alloca i64, align 8
  store %struct.gendisk* %disk, %struct.gendisk** %disk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gendisk** %disk.addr, metadata !9327, metadata !DIExpression()), !dbg !9328
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9329, metadata !DIExpression()), !dbg !9330
  %0 = load i64, i64* %size.addr, align 8, !dbg !9331
  %1 = load %struct.gendisk*, %struct.gendisk** %disk.addr, align 8, !dbg !9332
  %part0 = getelementptr inbounds %struct.gendisk, %struct.gendisk* %1, i32 0, i32 7, !dbg !9333
  %nr_sects = getelementptr inbounds %struct.hd_struct, %struct.hd_struct* %part0, i32 0, i32 1, !dbg !9334
  store i64 %0, i64* %nr_sects, align 8, !dbg !9335
  ret void, !dbg !9336
}

; Function Attrs: noredzone
declare dso_local void @device_add_disk(%struct.device*, %struct.gendisk*, %struct.attribute_group**) #1

; Function Attrs: noredzone
declare dso_local %struct.block_device* @bdget_disk(%struct.gendisk*, i32) #1

; Function Attrs: noredzone
declare dso_local %struct.kobject* @kobject_get(%struct.kobject*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_hw_sysfs_init(%struct.driver_data* %dd, %struct.kobject* %kobj) #2 !dbg !9337 {
entry:
  %retval = alloca i32, align 4
  %dd.addr = alloca %struct.driver_data*, align 8
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !9340, metadata !DIExpression()), !dbg !9341
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !9342, metadata !DIExpression()), !dbg !9343
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !9344
  %tobool = icmp ne %struct.kobject* %0, null, !dbg !9344
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !9346

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9347
  %tobool1 = icmp ne %struct.driver_data* %1, null, !dbg !9347
  br i1 %tobool1, label %if.end, label %if.then, !dbg !9348

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !9349
  br label %return, !dbg !9349

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !9350
  %call = call i32 @sysfs_create_file(%struct.kobject* %2, %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_status, i32 0, i32 0)) #12, !dbg !9352
  %tobool2 = icmp ne i32 %call, 0, !dbg !9352
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !9353

if.then3:                                         ; preds = %if.end
  %3 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9354
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %3, i32 0, i32 4, !dbg !9354
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9354
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !9354
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.94, i64 0, i64 0)) #13, !dbg !9354
  br label %if.end4, !dbg !9354

if.end4:                                          ; preds = %if.then3, %if.end
  store i32 0, i32* %retval, align 4, !dbg !9355
  br label %return, !dbg !9355

return:                                           ; preds = %if.end4, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !9356
  ret i32 %5, !dbg !9356
}

; Function Attrs: noredzone
declare dso_local void @kobject_put(%struct.kobject*) #1

; Function Attrs: noredzone
declare dso_local %struct.task_struct* @kthread_create_on_node(i32 (i8*)*, i8*, i32, i8*, ...) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_service_thread(i8* %data) #2 !dbg !9357 {
entry:
  %v.addr.i1.i138 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i138, metadata !6966, metadata !DIExpression()), !dbg !9360
  %v.addr.i.i139 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i139, metadata !6979, metadata !DIExpression()), !dbg !9367
  %size.addr.i.i140 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i140, metadata !6989, metadata !DIExpression()), !dbg !9369
  %v.addr.i141 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i141, metadata !6991, metadata !DIExpression()), !dbg !9370
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !6966, metadata !DIExpression()), !dbg !9371
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6979, metadata !DIExpression()), !dbg !9374
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6989, metadata !DIExpression()), !dbg !9376
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !6991, metadata !DIExpression()), !dbg !9377
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !7000, metadata !DIExpression()), !dbg !9378
  %data.addr = alloca i8*, align 8
  %dd = alloca %struct.driver_data*, align 8
  %slot = alloca i64, align 8
  %slot_start = alloca i64, align 8
  %slot_wrap = alloca i64, align 8
  %to = alloca i64, align 8
  %num_cmd_slots = alloca i32, align 4
  %port = alloca %struct.mtip_port*, align 8
  %__ret = alloca i32, align 4
  %__wq_entry = alloca %struct.wait_queue_entry, align 8
  %__ret10 = alloca i64, align 8
  %__int = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp25 = alloca i32, align 4
  %__ms = alloca i64, align 8
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !9380, metadata !DIExpression()), !dbg !9381
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd, metadata !9382, metadata !DIExpression()), !dbg !9383
  %0 = load i8*, i8** %data.addr, align 8, !dbg !9384
  %1 = bitcast i8* %0 to %struct.driver_data*, !dbg !9385
  store %struct.driver_data* %1, %struct.driver_data** %dd, align 8, !dbg !9383
  call void @llvm.dbg.declare(metadata i64* %slot, metadata !9386, metadata !DIExpression()), !dbg !9387
  call void @llvm.dbg.declare(metadata i64* %slot_start, metadata !9388, metadata !DIExpression()), !dbg !9389
  call void @llvm.dbg.declare(metadata i64* %slot_wrap, metadata !9390, metadata !DIExpression()), !dbg !9391
  call void @llvm.dbg.declare(metadata i64* %to, metadata !9392, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.declare(metadata i32* %num_cmd_slots, metadata !9394, metadata !DIExpression()), !dbg !9395
  %2 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !9396
  %slot_groups = getelementptr inbounds %struct.driver_data, %struct.driver_data* %2, i32 0, i32 9, !dbg !9397
  %3 = load i32, i32* %slot_groups, align 4, !dbg !9397
  %mul = mul i32 %3, 32, !dbg !9398
  store i32 %mul, i32* %num_cmd_slots, align 4, !dbg !9395
  call void @llvm.dbg.declare(metadata %struct.mtip_port** %port, metadata !9399, metadata !DIExpression()), !dbg !9400
  %4 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !9401
  %port1 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %4, i32 0, i32 7, !dbg !9402
  %5 = load %struct.mtip_port*, %struct.mtip_port** %port1, align 8, !dbg !9402
  store %struct.mtip_port* %5, %struct.mtip_port** %port, align 8, !dbg !9400
  br label %while.body, !dbg !9403

while.body:                                       ; preds = %entry, %if.end137
  %call = call zeroext i1 @kthread_should_stop() #12, !dbg !9404
  br i1 %call, label %if.then, label %lor.lhs.false, !dbg !9406

lor.lhs.false:                                    ; preds = %while.body
  %6 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9407
  %flags = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %6, i32 0, i32 22, !dbg !9408
  %call2 = call zeroext i1 @test_bit(i64 8, i64* %flags) #12, !dbg !9409
  br i1 %call2, label %if.then, label %if.end, !dbg !9410

if.then:                                          ; preds = %lor.lhs.false, %while.body
  br label %st_out, !dbg !9411

if.end:                                           ; preds = %lor.lhs.false
  %7 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9412
  %flags3 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %7, i32 0, i32 22, !dbg !9413
  call void @clear_bit(i64 4, i64* %flags3) #12, !dbg !9414
  call void @llvm.dbg.declare(metadata i32* %__ret, metadata !9415, metadata !DIExpression()), !dbg !9417
  store i32 0, i32* %__ret, align 4, !dbg !9417
  br label %do.body, !dbg !9417

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !9418

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !9420

do.end:                                           ; preds = %do.body4
  br label %do.end5, !dbg !9418

do.end5:                                          ; preds = %do.end
  %8 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9422
  %flags6 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %8, i32 0, i32 22, !dbg !9422
  %9 = load i64, i64* %flags6, align 8, !dbg !9422
  %tobool = icmp ne i64 %9, 0, !dbg !9422
  br i1 %tobool, label %land.lhs.true, label %if.then9, !dbg !9422

land.lhs.true:                                    ; preds = %do.end5
  %10 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9422
  %flags7 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %10, i32 0, i32 22, !dbg !9422
  %11 = load i64, i64* %flags7, align 8, !dbg !9422
  %and = and i64 %11, 866, !dbg !9422
  %tobool8 = icmp ne i64 %and, 0, !dbg !9422
  br i1 %tobool8, label %if.end24, label %if.then9, !dbg !9417

if.then9:                                         ; preds = %land.lhs.true, %do.end5
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %__wq_entry, metadata !9424, metadata !DIExpression()), !dbg !9426
  call void @llvm.dbg.declare(metadata i64* %__ret10, metadata !9427, metadata !DIExpression()), !dbg !9426
  store i64 0, i64* %__ret10, align 8, !dbg !9426
  call void @init_wait_entry(%struct.wait_queue_entry* %__wq_entry, i32 0) #12, !dbg !9426
  br label %for.cond, !dbg !9426

for.cond:                                         ; preds = %if.end22, %if.then9
  call void @llvm.dbg.declare(metadata i64* %__int, metadata !9428, metadata !DIExpression()), !dbg !9432
  %12 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9432
  %svc_wait = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %12, i32 0, i32 21, !dbg !9432
  %call11 = call i64 @prepare_to_wait_event(%struct.wait_queue_head* %svc_wait, %struct.wait_queue_entry* %__wq_entry, i32 1) #12, !dbg !9432
  store i64 %call11, i64* %__int, align 8, !dbg !9432
  %13 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9433
  %flags12 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %13, i32 0, i32 22, !dbg !9433
  %14 = load i64, i64* %flags12, align 8, !dbg !9433
  %tobool13 = icmp ne i64 %14, 0, !dbg !9433
  br i1 %tobool13, label %land.lhs.true14, label %if.end19, !dbg !9433

land.lhs.true14:                                  ; preds = %for.cond
  %15 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9433
  %flags15 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %15, i32 0, i32 22, !dbg !9433
  %16 = load i64, i64* %flags15, align 8, !dbg !9433
  %and16 = and i64 %16, 866, !dbg !9433
  %tobool17 = icmp ne i64 %and16, 0, !dbg !9433
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !9432

if.then18:                                        ; preds = %land.lhs.true14
  br label %for.end, !dbg !9433

if.end19:                                         ; preds = %land.lhs.true14, %for.cond
  %17 = load i64, i64* %__int, align 8, !dbg !9435
  %tobool20 = icmp ne i64 %17, 0, !dbg !9435
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !9432

if.then21:                                        ; preds = %if.end19
  %18 = load i64, i64* %__int, align 8, !dbg !9437
  store i64 %18, i64* %__ret10, align 8, !dbg !9437
  br label %__out, !dbg !9437

if.end22:                                         ; preds = %if.end19
  call void @schedule() #12, !dbg !9432
  br label %for.cond, !dbg !9439, !llvm.loop !9440

for.end:                                          ; preds = %if.then18
  %19 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9426
  %svc_wait23 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %19, i32 0, i32 21, !dbg !9426
  call void @finish_wait(%struct.wait_queue_head* %svc_wait23, %struct.wait_queue_entry* %__wq_entry) #12, !dbg !9426
  br label %__out, !dbg !9426

__out:                                            ; preds = %for.end, %if.then21
  call void @llvm.dbg.label(metadata !9442), !dbg !9426
  %20 = load i64, i64* %__ret10, align 8, !dbg !9426
  store i64 %20, i64* %tmp, align 8, !dbg !9426
  %21 = load i64, i64* %tmp, align 8, !dbg !9426
  %conv = trunc i64 %21 to i32, !dbg !9422
  store i32 %conv, i32* %__ret, align 4, !dbg !9422
  br label %if.end24, !dbg !9422

if.end24:                                         ; preds = %__out, %land.lhs.true
  %22 = load i32, i32* %__ret, align 4, !dbg !9417
  store i32 %22, i32* %tmp25, align 4, !dbg !9422
  %23 = load i32, i32* %tmp25, align 4, !dbg !9417
  %call26 = call zeroext i1 @kthread_should_stop() #12, !dbg !9443
  br i1 %call26, label %if.then32, label %lor.lhs.false28, !dbg !9445

lor.lhs.false28:                                  ; preds = %if.end24
  %24 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9446
  %flags29 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %24, i32 0, i32 22, !dbg !9447
  %call30 = call zeroext i1 @test_bit(i64 8, i64* %flags29) #12, !dbg !9448
  br i1 %call30, label %if.then32, label %if.end33, !dbg !9449

if.then32:                                        ; preds = %lor.lhs.false28, %if.end24
  br label %st_out, !dbg !9450

if.end33:                                         ; preds = %lor.lhs.false28
  %25 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !9451
  %dd_flag = getelementptr inbounds %struct.driver_data, %struct.driver_data* %25, i32 0, i32 11, !dbg !9451
  %call34 = call zeroext i1 @test_bit(i64 1, i64* %dd_flag) #12, !dbg !9451
  %lnot = xor i1 %call34, true, !dbg !9451
  %lnot35 = xor i1 %lnot, true, !dbg !9451
  %lnot.ext = zext i1 %lnot35 to i32, !dbg !9451
  %conv36 = sext i32 %lnot.ext to i64, !dbg !9451
  %tobool37 = icmp ne i64 %conv36, 0, !dbg !9451
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !9453

if.then38:                                        ; preds = %if.end33
  br label %st_out, !dbg !9454

if.end39:                                         ; preds = %if.end33
  %26 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9455
  %flags40 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %26, i32 0, i32 22, !dbg !9456
  call void @set_bit(i64 4, i64* %flags40) #12, !dbg !9457
  br label %restart_eh, !dbg !9457

restart_eh:                                       ; preds = %if.then48, %if.end39
  call void @llvm.dbg.label(metadata !9458), !dbg !9459
  %27 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9460
  %flags41 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %27, i32 0, i32 22, !dbg !9462
  %call42 = call zeroext i1 @test_bit(i64 1, i64* %flags41) #12, !dbg !9463
  br i1 %call42, label %if.then43, label %if.end45, !dbg !9464

if.then43:                                        ; preds = %restart_eh
  %28 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !9465
  call void @mtip_handle_tfe(%struct.driver_data* %28) #12, !dbg !9467
  %29 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9468
  %flags44 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %29, i32 0, i32 22, !dbg !9469
  call void @clear_bit(i64 1, i64* %flags44) #12, !dbg !9470
  br label %if.end45, !dbg !9471

if.end45:                                         ; preds = %if.then43, %restart_eh
  %30 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9472
  %flags46 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %30, i32 0, i32 22, !dbg !9474
  %call47 = call zeroext i1 @test_bit(i64 1, i64* %flags46) #12, !dbg !9475
  br i1 %call47, label %if.then48, label %if.end49, !dbg !9476

if.then48:                                        ; preds = %if.end45
  br label %restart_eh, !dbg !9477

if.end49:                                         ; preds = %if.end45
  %31 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9478
  %flags50 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %31, i32 0, i32 22, !dbg !9479
  %call51 = call zeroext i1 @test_bit(i64 9, i64* %flags50) #12, !dbg !9480
  br i1 %call51, label %if.then52, label %if.end79, !dbg !9481

if.then52:                                        ; preds = %if.end49
  %32 = load volatile i64, i64* @jiffies, align 8, !dbg !9482
  store i32 5000, i32* %m.addr.i, align 4
  %33 = load i32, i32* %m.addr.i, align 4, !dbg !9483
  %34 = call i1 @llvm.is.constant.i32(i32 %33) #11, !dbg !9484
  br i1 %34, label %if.then.i, label %if.else.i, !dbg !9485

if.then.i:                                        ; preds = %if.then52
  %35 = load i32, i32* %m.addr.i, align 4, !dbg !9486
  %cmp.i = icmp slt i32 %35, 0, !dbg !9487
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !9488

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !9489
  br label %msecs_to_jiffies.exit, !dbg !9489

if.end.i:                                         ; preds = %if.then.i
  %36 = load i32, i32* %m.addr.i, align 4, !dbg !9490
  %call.i = call i64 @_msecs_to_jiffies(i32 %36) #14, !dbg !9491
  store i64 %call.i, i64* %retval.i, align 8, !dbg !9492
  br label %msecs_to_jiffies.exit, !dbg !9492

if.else.i:                                        ; preds = %if.then52
  %37 = load i32, i32* %m.addr.i, align 4, !dbg !9493
  %call2.i = call i64 @__msecs_to_jiffies(i32 %37) #14, !dbg !9494
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !9495
  br label %msecs_to_jiffies.exit, !dbg !9495

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %38 = load i64, i64* %retval.i, align 8, !dbg !9496
  %add = add i64 %32, %38, !dbg !9497
  store i64 %add, i64* %to, align 8, !dbg !9498
  br label %do.body54, !dbg !9499

do.body54:                                        ; preds = %land.end, %msecs_to_jiffies.exit
  call void @llvm.dbg.declare(metadata i64* %__ms, metadata !9500, metadata !DIExpression()), !dbg !9503
  store i64 100, i64* %__ms, align 8, !dbg !9503
  br label %while.cond55, !dbg !9503

while.cond55:                                     ; preds = %while.body57, %do.body54
  %39 = load i64, i64* %__ms, align 8, !dbg !9503
  %dec = add i64 %39, -1, !dbg !9503
  store i64 %dec, i64* %__ms, align 8, !dbg !9503
  %tobool56 = icmp ne i64 %39, 0, !dbg !9503
  br i1 %tobool56, label %while.body57, label %while.end, !dbg !9503

while.body57:                                     ; preds = %while.cond55
  call void @__const_udelay(i64 4295000) #12, !dbg !9504
  br label %while.cond55, !dbg !9503, !llvm.loop !9509

while.end:                                        ; preds = %while.cond55
  br label %do.cond, !dbg !9510

do.cond:                                          ; preds = %while.end
  %40 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !9511
  %irq_workers_active = getelementptr inbounds %struct.driver_data, %struct.driver_data* %40, i32 0, i32 18, !dbg !9512
  store %struct.atomic_t* %irq_workers_active, %struct.atomic_t** %v.addr.i, align 8
  %41 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !9513
  %42 = bitcast %struct.atomic_t* %41 to i8*, !dbg !9513
  store i8* %42, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %43 = load i8*, i8** %v.addr.i.i, align 8, !dbg !9514
  %44 = load i64, i64* %size.addr.i.i, align 8, !dbg !9515
  %conv.i.i = trunc i64 %44 to i32, !dbg !9515
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %43, i32 %conv.i.i) #14, !dbg !9516
  %45 = load i8*, i8** %v.addr.i.i, align 8, !dbg !9517
  %46 = load i64, i64* %size.addr.i.i, align 8, !dbg !9517
  call void @kcsan_check_access(i8* %45, i64 %46, i32 4) #14, !dbg !9517
  %47 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !9518
  store %struct.atomic_t* %47, %struct.atomic_t** %v.addr.i1.i, align 8
  %48 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !9519
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %48, i32 0, i32 0, !dbg !9519
  %49 = load volatile i32, i32* %counter.i.i, align 4, !dbg !9519
  %cmp = icmp ne i32 %49, 0, !dbg !9520
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !9521

land.rhs:                                         ; preds = %do.cond
  %50 = load volatile i64, i64* @jiffies, align 8, !dbg !9522
  %51 = load i64, i64* %to, align 8, !dbg !9522
  %sub = sub i64 %50, %51, !dbg !9522
  %cmp60 = icmp slt i64 %sub, 0, !dbg !9522
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %52 = phi i1 [ false, %do.cond ], [ %cmp60, %land.rhs ], !dbg !9523
  br i1 %52, label %do.body54, label %do.end62, !dbg !9510, !llvm.loop !9524

do.end62:                                         ; preds = %land.end
  %53 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !9526
  %irq_workers_active63 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %53, i32 0, i32 18, !dbg !9527
  store %struct.atomic_t* %irq_workers_active63, %struct.atomic_t** %v.addr.i141, align 8
  %54 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i141, align 8, !dbg !9528
  %55 = bitcast %struct.atomic_t* %54 to i8*, !dbg !9528
  store i8* %55, i8** %v.addr.i.i139, align 8
  store i64 4, i64* %size.addr.i.i140, align 8
  %56 = load i8*, i8** %v.addr.i.i139, align 8, !dbg !9529
  %57 = load i64, i64* %size.addr.i.i140, align 8, !dbg !9530
  %conv.i.i142 = trunc i64 %57 to i32, !dbg !9530
  %call.i.i143 = call zeroext i1 @kasan_check_read(i8* %56, i32 %conv.i.i142) #14, !dbg !9531
  %58 = load i8*, i8** %v.addr.i.i139, align 8, !dbg !9532
  %59 = load i64, i64* %size.addr.i.i140, align 8, !dbg !9532
  call void @kcsan_check_access(i8* %58, i64 %59, i32 4) #14, !dbg !9532
  %60 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i141, align 8, !dbg !9533
  store %struct.atomic_t* %60, %struct.atomic_t** %v.addr.i1.i138, align 8
  %61 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i138, align 8, !dbg !9534
  %counter.i.i144 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %61, i32 0, i32 0, !dbg !9534
  %62 = load volatile i32, i32* %counter.i.i144, align 4, !dbg !9534
  %cmp65 = icmp ne i32 %62, 0, !dbg !9535
  br i1 %cmp65, label %if.then67, label %if.end68, !dbg !9536

if.then67:                                        ; preds = %do.end62
  %63 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !9537
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %63, i32 0, i32 4, !dbg !9537
  %64 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9537
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %64, i32 0, i32 41, !dbg !9537
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.99, i64 0, i64 0)) #13, !dbg !9537
  br label %if.end68, !dbg !9537

if.end68:                                         ; preds = %if.then67, %do.end62
  %65 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !9538
  %queue = getelementptr inbounds %struct.driver_data, %struct.driver_data* %65, i32 0, i32 5, !dbg !9539
  %66 = load %struct.request_queue*, %struct.request_queue** %queue, align 8, !dbg !9539
  call void @blk_mq_quiesce_queue(%struct.request_queue* %66) #12, !dbg !9540
  %67 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !9541
  %tags = getelementptr inbounds %struct.driver_data, %struct.driver_data* %67, i32 0, i32 6, !dbg !9542
  %68 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !9543
  %69 = bitcast %struct.driver_data* %68 to i8*, !dbg !9543
  call void @blk_mq_tagset_busy_iter(%struct.blk_mq_tag_set* %tags, i1 (%struct.request*, i8*, i1)* @mtip_queue_cmd, i8* %69) #12, !dbg !9544
  %70 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !9545
  %port69 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %70, i32 0, i32 7, !dbg !9546
  %71 = load %struct.mtip_port*, %struct.mtip_port** %port69, align 8, !dbg !9546
  %flags70 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %71, i32 0, i32 22, !dbg !9547
  call void @set_bit(i64 5, i64* %flags70) #12, !dbg !9548
  %72 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !9549
  %call71 = call i32 @mtip_device_reset(%struct.driver_data* %72) #12, !dbg !9551
  %tobool72 = icmp ne i32 %call71, 0, !dbg !9551
  br i1 %tobool72, label %if.then73, label %if.end75, !dbg !9552

if.then73:                                        ; preds = %if.end68
  %73 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !9553
  %tags74 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %73, i32 0, i32 6, !dbg !9554
  %74 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !9555
  %75 = bitcast %struct.driver_data* %74 to i8*, !dbg !9555
  call void @blk_mq_tagset_busy_iter(%struct.blk_mq_tag_set* %tags74, i1 (%struct.request*, i8*, i1)* @mtip_abort_cmd, i8* %75) #12, !dbg !9556
  br label %if.end75, !dbg !9556

if.end75:                                         ; preds = %if.then73, %if.end68
  %76 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !9557
  %port76 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %76, i32 0, i32 7, !dbg !9558
  %77 = load %struct.mtip_port*, %struct.mtip_port** %port76, align 8, !dbg !9558
  %flags77 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %77, i32 0, i32 22, !dbg !9559
  call void @clear_bit(i64 9, i64* %flags77) #12, !dbg !9560
  %78 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !9561
  %queue78 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %78, i32 0, i32 5, !dbg !9562
  %79 = load %struct.request_queue*, %struct.request_queue** %queue78, align 8, !dbg !9562
  call void @blk_mq_unquiesce_queue(%struct.request_queue* %79) #12, !dbg !9563
  br label %if.end79, !dbg !9564

if.end79:                                         ; preds = %if.end75, %if.end49
  %80 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9565
  %flags80 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %80, i32 0, i32 22, !dbg !9567
  %call81 = call zeroext i1 @test_bit(i64 5, i64* %flags80) #12, !dbg !9568
  br i1 %call81, label %if.then82, label %if.end127, !dbg !9569

if.then82:                                        ; preds = %if.end79
  store i64 1, i64* %slot, align 8, !dbg !9570
  %81 = load i32, i32* %num_cmd_slots, align 4, !dbg !9572
  %conv83 = zext i32 %81 to i64, !dbg !9572
  store i64 %conv83, i64* %slot_start, align 8, !dbg !9573
  store i64 0, i64* %slot_wrap, align 8, !dbg !9574
  br label %while.body85, !dbg !9575

while.body85:                                     ; preds = %if.then82, %if.then120, %if.end121
  %82 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9576
  %cmds_to_issue = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %82, i32 0, i32 20, !dbg !9578
  %arraydecay = getelementptr inbounds [4 x i64], [4 x i64]* %cmds_to_issue, i64 0, i64 0, !dbg !9576
  %83 = load i32, i32* %num_cmd_slots, align 4, !dbg !9579
  %conv86 = zext i32 %83 to i64, !dbg !9579
  %84 = load i64, i64* %slot, align 8, !dbg !9580
  %call87 = call i64 @find_next_bit(i64* %arraydecay, i64 %conv86, i64 %84) #12, !dbg !9581
  store i64 %call87, i64* %slot, align 8, !dbg !9582
  %85 = load i64, i64* %slot_wrap, align 8, !dbg !9583
  %cmp88 = icmp eq i64 %85, 1, !dbg !9585
  br i1 %cmp88, label %if.then90, label %if.end99, !dbg !9586

if.then90:                                        ; preds = %while.body85
  %86 = load i64, i64* %slot_start, align 8, !dbg !9587
  %87 = load i64, i64* %slot, align 8, !dbg !9590
  %cmp91 = icmp uge i64 %86, %87, !dbg !9591
  br i1 %cmp91, label %if.then97, label %lor.lhs.false93, !dbg !9592

lor.lhs.false93:                                  ; preds = %if.then90
  %88 = load i64, i64* %slot, align 8, !dbg !9593
  %89 = load i32, i32* %num_cmd_slots, align 4, !dbg !9594
  %conv94 = zext i32 %89 to i64, !dbg !9594
  %cmp95 = icmp uge i64 %88, %conv94, !dbg !9595
  br i1 %cmp95, label %if.then97, label %if.end98, !dbg !9596

if.then97:                                        ; preds = %lor.lhs.false93, %if.then90
  br label %while.end125, !dbg !9597

if.end98:                                         ; preds = %lor.lhs.false93
  br label %if.end99, !dbg !9598

if.end99:                                         ; preds = %if.end98, %while.body85
  %90 = load i64, i64* %slot_start, align 8, !dbg !9599
  %91 = load i32, i32* %num_cmd_slots, align 4, !dbg !9599
  %conv100 = zext i32 %91 to i64, !dbg !9599
  %cmp101 = icmp eq i64 %90, %conv100, !dbg !9599
  %lnot103 = xor i1 %cmp101, true, !dbg !9599
  %lnot105 = xor i1 %lnot103, true, !dbg !9599
  %lnot.ext106 = zext i1 %lnot105 to i32, !dbg !9599
  %conv107 = sext i32 %lnot.ext106 to i64, !dbg !9599
  %tobool108 = icmp ne i64 %conv107, 0, !dbg !9599
  br i1 %tobool108, label %if.then109, label %if.end110, !dbg !9601

if.then109:                                       ; preds = %if.end99
  %92 = load i64, i64* %slot, align 8, !dbg !9602
  store i64 %92, i64* %slot_start, align 8, !dbg !9603
  br label %if.end110, !dbg !9604

if.end110:                                        ; preds = %if.then109, %if.end99
  %93 = load i64, i64* %slot, align 8, !dbg !9605
  %94 = load i32, i32* %num_cmd_slots, align 4, !dbg !9605
  %conv111 = zext i32 %94 to i64, !dbg !9605
  %cmp112 = icmp eq i64 %93, %conv111, !dbg !9605
  %lnot114 = xor i1 %cmp112, true, !dbg !9605
  %lnot116 = xor i1 %lnot114, true, !dbg !9605
  %lnot.ext117 = zext i1 %lnot116 to i32, !dbg !9605
  %conv118 = sext i32 %lnot.ext117 to i64, !dbg !9605
  %tobool119 = icmp ne i64 %conv118, 0, !dbg !9605
  br i1 %tobool119, label %if.then120, label %if.end121, !dbg !9607

if.then120:                                       ; preds = %if.end110
  store i64 1, i64* %slot, align 8, !dbg !9608
  store i64 1, i64* %slot_wrap, align 8, !dbg !9610
  br label %while.body85, !dbg !9611, !llvm.loop !9612

if.end121:                                        ; preds = %if.end110
  %95 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9614
  %96 = load i64, i64* %slot, align 8, !dbg !9615
  %conv122 = trunc i64 %96 to i32, !dbg !9615
  call void @mtip_issue_ncq_command(%struct.mtip_port* %95, i32 %conv122) #12, !dbg !9616
  %97 = load i64, i64* %slot, align 8, !dbg !9617
  %98 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9618
  %cmds_to_issue123 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %98, i32 0, i32 20, !dbg !9619
  %arraydecay124 = getelementptr inbounds [4 x i64], [4 x i64]* %cmds_to_issue123, i64 0, i64 0, !dbg !9618
  call void @clear_bit(i64 %97, i64* %arraydecay124) #12, !dbg !9620
  br label %while.body85, !dbg !9575, !llvm.loop !9612

while.end125:                                     ; preds = %if.then97
  %99 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9621
  %flags126 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %99, i32 0, i32 22, !dbg !9622
  call void @clear_bit(i64 5, i64* %flags126) #12, !dbg !9623
  br label %if.end127, !dbg !9624

if.end127:                                        ; preds = %while.end125, %if.end79
  %100 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9625
  %flags128 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %100, i32 0, i32 22, !dbg !9627
  %call129 = call zeroext i1 @test_bit(i64 6, i64* %flags128) #12, !dbg !9628
  br i1 %call129, label %if.then130, label %if.end137, !dbg !9629

if.then130:                                       ; preds = %if.end127
  %101 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !9630
  %call131 = call i32 @mtip_ftl_rebuild_poll(%struct.driver_data* %101) #12, !dbg !9633
  %cmp132 = icmp eq i32 %call131, 0, !dbg !9634
  br i1 %cmp132, label %if.then134, label %if.end136, !dbg !9635

if.then134:                                       ; preds = %if.then130
  %102 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9636
  %flags135 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %102, i32 0, i32 22, !dbg !9637
  call void @clear_bit(i64 6, i64* %flags135) #12, !dbg !9638
  br label %if.end136, !dbg !9638

if.end136:                                        ; preds = %if.then134, %if.then130
  br label %if.end137, !dbg !9639

if.end137:                                        ; preds = %if.end136, %if.end127
  br label %while.body, !dbg !9403, !llvm.loop !9640

st_out:                                           ; preds = %if.then38, %if.then32, %if.then
  call void @llvm.dbg.label(metadata !9642), !dbg !9643
  ret i32 0, !dbg !9644
}

; Function Attrs: noredzone
declare dso_local i32 @wake_up_process(%struct.task_struct*) #1

; Function Attrs: noredzone
declare dso_local void @bdput(%struct.block_device*) #1

; Function Attrs: noredzone
declare dso_local void @del_gendisk(%struct.gendisk*) #1

; Function Attrs: noredzone
declare dso_local void @blk_cleanup_queue(%struct.request_queue*) #1

; Function Attrs: noredzone
declare dso_local void @blk_mq_free_tag_set(%struct.blk_mq_tag_set*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mtip_hw_debugfs_exit(%struct.driver_data* %dd) #2 !dbg !9645 {
entry:
  %dd.addr = alloca %struct.driver_data*, align 8
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !9648, metadata !DIExpression()), !dbg !9649
  %0 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9650
  %dfs_node = getelementptr inbounds %struct.driver_data, %struct.driver_data* %0, i32 0, i32 13, !dbg !9651
  %1 = load %struct.dentry*, %struct.dentry** %dfs_node, align 8, !dbg !9651
  call void @debugfs_remove_recursive(%struct.dentry* %1) #12, !dbg !9652
  ret void, !dbg !9653
}

; Function Attrs: noredzone
declare dso_local void @ida_free(%struct.ida*, i32) #1

; Function Attrs: noredzone
declare dso_local void @put_disk(%struct.gendisk*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_hw_exit(%struct.driver_data* %dd) #2 !dbg !9654 {
entry:
  %dd.addr = alloca %struct.driver_data*, align 8
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !9655, metadata !DIExpression()), !dbg !9656
  %0 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9657
  %sr = getelementptr inbounds %struct.driver_data, %struct.driver_data* %0, i32 0, i32 14, !dbg !9659
  %1 = load i8, i8* %sr, align 8, !dbg !9659
  %tobool = trunc i8 %1 to i1, !dbg !9659
  br i1 %tobool, label %if.end, label %if.then, !dbg !9660

if.then:                                          ; preds = %entry
  %2 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9661
  %port = getelementptr inbounds %struct.driver_data, %struct.driver_data* %2, i32 0, i32 7, !dbg !9663
  %3 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9663
  call void @mtip_deinit_port(%struct.mtip_port* %3) #12, !dbg !9664
  %4 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9665
  %mmio = getelementptr inbounds %struct.driver_data, %struct.driver_data* %4, i32 0, i32 0, !dbg !9666
  %5 = load i8*, i8** %mmio, align 8, !dbg !9666
  %add.ptr = getelementptr i8, i8* %5, i64 4, !dbg !9667
  %call = call i32 @readl(i8* %add.ptr) #12, !dbg !9668
  %and = and i32 %call, -3, !dbg !9669
  %6 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9670
  %mmio1 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %6, i32 0, i32 0, !dbg !9671
  %7 = load i8*, i8** %mmio1, align 8, !dbg !9671
  %add.ptr2 = getelementptr i8, i8* %7, i64 4, !dbg !9672
  call void @writel(i32 %and, i8* %add.ptr2) #12, !dbg !9673
  br label %if.end, !dbg !9674

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9675
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %8, i32 0, i32 4, !dbg !9676
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9676
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 43, !dbg !9677
  %10 = load i32, i32* %irq, align 4, !dbg !9677
  %call3 = call i32 @irq_set_affinity_hint(i32 %10, %struct.cpumask* null) #12, !dbg !9678
  %11 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9679
  %pdev4 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %11, i32 0, i32 4, !dbg !9680
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev4, align 8, !dbg !9680
  %irq5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 43, !dbg !9681
  %13 = load i32, i32* %irq5, align 4, !dbg !9681
  %14 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9682
  %15 = bitcast %struct.driver_data* %14 to i8*, !dbg !9682
  %call6 = call i8* @free_irq(i32 %13, i8* %15) #12, !dbg !9683
  call void @msleep(i32 1000) #12, !dbg !9684
  %16 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9685
  call void @mtip_dma_free(%struct.driver_data* %16) #12, !dbg !9686
  %17 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9687
  %port7 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %17, i32 0, i32 7, !dbg !9688
  %18 = load %struct.mtip_port*, %struct.mtip_port** %port7, align 8, !dbg !9688
  %19 = bitcast %struct.mtip_port* %18 to i8*, !dbg !9687
  call void @kfree(i8* %19) #12, !dbg !9689
  %20 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9690
  %port8 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %20, i32 0, i32 7, !dbg !9691
  store %struct.mtip_port* null, %struct.mtip_port** %port8, align 8, !dbg !9692
  ret i32 0, !dbg !9693
}

; Function Attrs: noredzone
declare dso_local i8** @pcim_iomap_table(%struct.pci_dev*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mtip_detect_product(%struct.driver_data* %dd) #2 !dbg !9694 {
entry:
  %dd.addr = alloca %struct.driver_data*, align 8
  %hwdata = alloca i32, align 4
  %rev = alloca i32, align 4
  %slotgroups = alloca i32, align 4
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !9695, metadata !DIExpression()), !dbg !9696
  call void @llvm.dbg.declare(metadata i32* %hwdata, metadata !9697, metadata !DIExpression()), !dbg !9698
  call void @llvm.dbg.declare(metadata i32* %rev, metadata !9699, metadata !DIExpression()), !dbg !9700
  call void @llvm.dbg.declare(metadata i32* %slotgroups, metadata !9701, metadata !DIExpression()), !dbg !9702
  %0 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9703
  %mmio = getelementptr inbounds %struct.driver_data, %struct.driver_data* %0, i32 0, i32 0, !dbg !9704
  %1 = load i8*, i8** %mmio, align 8, !dbg !9704
  %add.ptr = getelementptr i8, i8* %1, i64 252, !dbg !9705
  %call = call i32 @readl(i8* %add.ptr) #12, !dbg !9706
  store i32 %call, i32* %hwdata, align 4, !dbg !9707
  %2 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9708
  %product_type = getelementptr inbounds %struct.driver_data, %struct.driver_data* %2, i32 0, i32 8, !dbg !9709
  store i32 0, i32* %product_type, align 8, !dbg !9710
  %3 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9711
  %slot_groups = getelementptr inbounds %struct.driver_data, %struct.driver_data* %3, i32 0, i32 9, !dbg !9712
  store i32 1, i32* %slot_groups, align 4, !dbg !9713
  %4 = load i32, i32* %hwdata, align 4, !dbg !9714
  %and = and i32 %4, 8, !dbg !9716
  %tobool = icmp ne i32 %and, 0, !dbg !9716
  br i1 %tobool, label %if.then, label %if.end8, !dbg !9717

if.then:                                          ; preds = %entry
  %5 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9718
  %product_type1 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %5, i32 0, i32 8, !dbg !9720
  store i32 17, i32* %product_type1, align 8, !dbg !9721
  %6 = load i32, i32* %hwdata, align 4, !dbg !9722
  %and2 = and i32 %6, 65280, !dbg !9723
  %shr = lshr i32 %and2, 8, !dbg !9724
  store i32 %shr, i32* %rev, align 4, !dbg !9725
  %7 = load i32, i32* %hwdata, align 4, !dbg !9726
  %and3 = and i32 %7, 7, !dbg !9727
  %add = add i32 %and3, 1, !dbg !9728
  store i32 %add, i32* %slotgroups, align 4, !dbg !9729
  %8 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9730
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %8, i32 0, i32 4, !dbg !9730
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9730
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 41, !dbg !9730
  %10 = load i32, i32* %rev, align 4, !dbg !9730
  %11 = load i32, i32* %slotgroups, align 4, !dbg !9730
  %12 = load i32, i32* %slotgroups, align 4, !dbg !9730
  %mul = mul i32 %12, 32, !dbg !9730
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.33, i64 0, i64 0), i32 %10, i32 %11, i32 %mul) #13, !dbg !9730
  %13 = load i32, i32* %slotgroups, align 4, !dbg !9731
  %cmp = icmp ugt i32 %13, 8, !dbg !9733
  br i1 %cmp, label %if.then4, label %if.end, !dbg !9734

if.then4:                                         ; preds = %if.then
  %14 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9735
  %pdev5 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %14, i32 0, i32 4, !dbg !9735
  %15 = load %struct.pci_dev*, %struct.pci_dev** %pdev5, align 8, !dbg !9735
  %dev6 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %15, i32 0, i32 41, !dbg !9735
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev6, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.34, i64 0, i64 0), i32 8) #13, !dbg !9735
  store i32 8, i32* %slotgroups, align 4, !dbg !9737
  br label %if.end, !dbg !9738

if.end:                                           ; preds = %if.then4, %if.then
  %16 = load i32, i32* %slotgroups, align 4, !dbg !9739
  %17 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9740
  %slot_groups7 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %17, i32 0, i32 9, !dbg !9741
  store i32 %16, i32* %slot_groups7, align 4, !dbg !9742
  br label %return, !dbg !9743

if.end8:                                          ; preds = %entry
  %18 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9744
  %pdev9 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %18, i32 0, i32 4, !dbg !9744
  %19 = load %struct.pci_dev*, %struct.pci_dev** %pdev9, align 8, !dbg !9744
  %dev10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %19, i32 0, i32 41, !dbg !9744
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev10, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35, i64 0, i64 0)) #13, !dbg !9744
  br label %return, !dbg !9745

return:                                           ; preds = %if.end8, %if.end
  ret void, !dbg !9745
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hba_setup(%struct.driver_data* %dd) #2 !dbg !9746 {
entry:
  %dd.addr = alloca %struct.driver_data*, align 8
  %hwdata = alloca i32, align 4
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !9747, metadata !DIExpression()), !dbg !9748
  call void @llvm.dbg.declare(metadata i32* %hwdata, metadata !9749, metadata !DIExpression()), !dbg !9750
  %0 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9751
  %mmio = getelementptr inbounds %struct.driver_data, %struct.driver_data* %0, i32 0, i32 0, !dbg !9752
  %1 = load i8*, i8** %mmio, align 8, !dbg !9752
  %add.ptr = getelementptr i8, i8* %1, i64 252, !dbg !9753
  %call = call i32 @readl(i8* %add.ptr) #12, !dbg !9754
  store i32 %call, i32* %hwdata, align 4, !dbg !9755
  %2 = load i32, i32* %hwdata, align 4, !dbg !9756
  %or = or i32 %2, 16777216, !dbg !9757
  %or1 = or i32 %or, 65536, !dbg !9758
  %3 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9759
  %mmio2 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %3, i32 0, i32 0, !dbg !9760
  %4 = load i8*, i8** %mmio2, align 8, !dbg !9760
  %add.ptr3 = getelementptr i8, i8* %4, i64 252, !dbg !9761
  call void @writel(i32 %or1, i8* %add.ptr3) #12, !dbg !9762
  ret void, !dbg !9763
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_device_unaligned_constrained(%struct.driver_data* %dd) #2 !dbg !9764 {
entry:
  %dd.addr = alloca %struct.driver_data*, align 8
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !9765, metadata !DIExpression()), !dbg !9766
  %0 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9767
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %0, i32 0, i32 4, !dbg !9768
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9768
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 8, !dbg !9769
  %2 = load i16, i16* %device, align 2, !dbg !9769
  %conv = zext i16 %2 to i32, !dbg !9767
  %cmp = icmp eq i32 %conv, 20833, !dbg !9770
  %3 = zext i1 %cmp to i64, !dbg !9767
  %cond = select i1 %cmp, i32 1, i32 0, !dbg !9767
  ret i32 %cond, !dbg !9771
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_dma_alloc(%struct.driver_data* %dd) #2 !dbg !9772 {
entry:
  %retval = alloca i32, align 4
  %dd.addr = alloca %struct.driver_data*, align 8
  %port = alloca %struct.mtip_port*, align 8
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !9773, metadata !DIExpression()), !dbg !9774
  call void @llvm.dbg.declare(metadata %struct.mtip_port** %port, metadata !9775, metadata !DIExpression()), !dbg !9776
  %0 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9777
  %port1 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %0, i32 0, i32 7, !dbg !9778
  %1 = load %struct.mtip_port*, %struct.mtip_port** %port1, align 8, !dbg !9778
  store %struct.mtip_port* %1, %struct.mtip_port** %port, align 8, !dbg !9776
  %2 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9779
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %2, i32 0, i32 4, !dbg !9780
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9780
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !9781
  %4 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9782
  %block1_dma = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %4, i32 0, i32 11, !dbg !9783
  %call = call i8* @dma_alloc_coherent(%struct.device* %dev, i64 4096, i64* %block1_dma, i32 3264) #12, !dbg !9784
  %5 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9785
  %block1 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %5, i32 0, i32 10, !dbg !9786
  store i8* %call, i8** %block1, align 8, !dbg !9787
  %6 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9788
  %block12 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %6, i32 0, i32 10, !dbg !9790
  %7 = load i8*, i8** %block12, align 8, !dbg !9790
  %tobool = icmp ne i8* %7, null, !dbg !9788
  br i1 %tobool, label %if.end, label %if.then, !dbg !9791

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !9792
  br label %return, !dbg !9792

if.end:                                           ; preds = %entry
  %8 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9793
  %pdev3 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %8, i32 0, i32 4, !dbg !9794
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev3, align 8, !dbg !9794
  %dev4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 41, !dbg !9795
  %10 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9796
  %command_list_dma = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %10, i32 0, i32 7, !dbg !9797
  %call5 = call i8* @dma_alloc_coherent(%struct.device* %dev4, i64 8192, i64* %command_list_dma, i32 3264) #12, !dbg !9798
  %11 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9799
  %command_list = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %11, i32 0, i32 6, !dbg !9800
  store i8* %call5, i8** %command_list, align 8, !dbg !9801
  %12 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9802
  %command_list6 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %12, i32 0, i32 6, !dbg !9804
  %13 = load i8*, i8** %command_list6, align 8, !dbg !9804
  %tobool7 = icmp ne i8* %13, null, !dbg !9802
  br i1 %tobool7, label %if.end15, label %if.then8, !dbg !9805

if.then8:                                         ; preds = %if.end
  %14 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9806
  %pdev9 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %14, i32 0, i32 4, !dbg !9808
  %15 = load %struct.pci_dev*, %struct.pci_dev** %pdev9, align 8, !dbg !9808
  %dev10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %15, i32 0, i32 41, !dbg !9809
  %16 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9810
  %block111 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %16, i32 0, i32 10, !dbg !9811
  %17 = load i8*, i8** %block111, align 8, !dbg !9811
  %18 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9812
  %block1_dma12 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %18, i32 0, i32 11, !dbg !9813
  %19 = load i64, i64* %block1_dma12, align 8, !dbg !9813
  call void @dma_free_coherent(%struct.device* %dev10, i64 4096, i8* %17, i64 %19) #12, !dbg !9814
  %20 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9815
  %block113 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %20, i32 0, i32 10, !dbg !9816
  store i8* null, i8** %block113, align 8, !dbg !9817
  %21 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9818
  %block1_dma14 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %21, i32 0, i32 11, !dbg !9819
  store i64 0, i64* %block1_dma14, align 8, !dbg !9820
  store i32 -12, i32* %retval, align 4, !dbg !9821
  br label %return, !dbg !9821

if.end15:                                         ; preds = %if.end
  %22 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9822
  %block116 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %22, i32 0, i32 10, !dbg !9823
  %23 = load i8*, i8** %block116, align 8, !dbg !9823
  %add.ptr = getelementptr i8, i8* %23, i64 0, !dbg !9824
  %24 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9825
  %rxfis = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %24, i32 0, i32 8, !dbg !9826
  store i8* %add.ptr, i8** %rxfis, align 8, !dbg !9827
  %25 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9828
  %block1_dma17 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %25, i32 0, i32 11, !dbg !9829
  %26 = load i64, i64* %block1_dma17, align 8, !dbg !9829
  %add = add i64 %26, 0, !dbg !9830
  %27 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9831
  %rxfis_dma = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %27, i32 0, i32 9, !dbg !9832
  store i64 %add, i64* %rxfis_dma, align 8, !dbg !9833
  %28 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9834
  %block118 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %28, i32 0, i32 10, !dbg !9835
  %29 = load i8*, i8** %block118, align 8, !dbg !9835
  %add.ptr19 = getelementptr i8, i8* %29, i64 1024, !dbg !9836
  %30 = bitcast i8* %add.ptr19 to i16*, !dbg !9834
  %31 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9837
  %identify = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %31, i32 0, i32 12, !dbg !9838
  store i16* %30, i16** %identify, align 8, !dbg !9839
  %32 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9840
  %block1_dma20 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %32, i32 0, i32 11, !dbg !9841
  %33 = load i64, i64* %block1_dma20, align 8, !dbg !9841
  %add21 = add i64 %33, 1024, !dbg !9842
  %34 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9843
  %identify_dma = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %34, i32 0, i32 13, !dbg !9844
  store i64 %add21, i64* %identify_dma, align 8, !dbg !9845
  %35 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9846
  %block122 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %35, i32 0, i32 10, !dbg !9847
  %36 = load i8*, i8** %block122, align 8, !dbg !9847
  %add.ptr23 = getelementptr i8, i8* %36, i64 2048, !dbg !9848
  %37 = bitcast i8* %add.ptr23 to i16*, !dbg !9846
  %38 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9849
  %log_buf = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %38, i32 0, i32 16, !dbg !9850
  store i16* %37, i16** %log_buf, align 8, !dbg !9851
  %39 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9852
  %block1_dma24 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %39, i32 0, i32 11, !dbg !9853
  %40 = load i64, i64* %block1_dma24, align 8, !dbg !9853
  %add25 = add i64 %40, 2048, !dbg !9854
  %41 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9855
  %log_buf_dma = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %41, i32 0, i32 17, !dbg !9856
  store i64 %add25, i64* %log_buf_dma, align 8, !dbg !9857
  %42 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9858
  %block126 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %42, i32 0, i32 10, !dbg !9859
  %43 = load i8*, i8** %block126, align 8, !dbg !9859
  %add.ptr27 = getelementptr i8, i8* %43, i64 3072, !dbg !9860
  %44 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9861
  %smart_buf = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %44, i32 0, i32 18, !dbg !9862
  store i8* %add.ptr27, i8** %smart_buf, align 8, !dbg !9863
  %45 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9864
  %block1_dma28 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %45, i32 0, i32 11, !dbg !9865
  %46 = load i64, i64* %block1_dma28, align 8, !dbg !9865
  %add29 = add i64 %46, 3072, !dbg !9866
  %47 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !9867
  %smart_buf_dma = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %47, i32 0, i32 19, !dbg !9868
  store i64 %add29, i64* %smart_buf_dma, align 8, !dbg !9869
  store i32 0, i32* %retval, align 4, !dbg !9870
  br label %return, !dbg !9870

return:                                           ; preds = %if.end15, %if.then8, %if.then
  %48 = load i32, i32* %retval, align 4, !dbg !9871
  ret i32 %48, !dbg !9871
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @readl(i8* %addr) #2 !dbg !9872 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !9875, metadata !DIExpression()), !dbg !9876
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9877, metadata !DIExpression()), !dbg !9876
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !9876
  %1 = bitcast i8* %0 to i32*, !dbg !9876
  %2 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %1) #11, !dbg !9876, !srcloc !9878
  store i32 %2, i32* %ret, align 4, !dbg !9876
  %3 = load i32, i32* %ret, align 4, !dbg !9876
  ret i32 %3, !dbg !9876
}

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mtip_check_surprise_removal(%struct.pci_dev* %pdev) #2 !dbg !9879 {
entry:
  %retval = alloca i1, align 1
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %vendor_id = alloca i16, align 2
  %dd = alloca %struct.driver_data*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !9882, metadata !DIExpression()), !dbg !9883
  call void @llvm.dbg.declare(metadata i16* %vendor_id, metadata !9884, metadata !DIExpression()), !dbg !9885
  store i16 0, i16* %vendor_id, align 2, !dbg !9885
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd, metadata !9886, metadata !DIExpression()), !dbg !9887
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9888
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #12, !dbg !9889
  %1 = bitcast i8* %call to %struct.driver_data*, !dbg !9889
  store %struct.driver_data* %1, %struct.driver_data** %dd, align 8, !dbg !9887
  %2 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !9890
  %sr = getelementptr inbounds %struct.driver_data, %struct.driver_data* %2, i32 0, i32 14, !dbg !9892
  %3 = load i8, i8* %sr, align 8, !dbg !9892
  %tobool = trunc i8 %3 to i1, !dbg !9892
  br i1 %tobool, label %if.then, label %if.end, !dbg !9893

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !9894
  br label %return, !dbg !9894

if.end:                                           ; preds = %entry
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9895
  %call1 = call i32 @pci_read_config_word(%struct.pci_dev* %4, i32 0, i16* %vendor_id) #12, !dbg !9896
  %5 = load i16, i16* %vendor_id, align 2, !dbg !9897
  %conv = zext i16 %5 to i32, !dbg !9897
  %cmp = icmp eq i32 %conv, 65535, !dbg !9899
  br i1 %cmp, label %if.then3, label %if.end10, !dbg !9900

if.then3:                                         ; preds = %if.end
  %6 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !9901
  %sr4 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %6, i32 0, i32 14, !dbg !9903
  store i8 1, i8* %sr4, align 8, !dbg !9904
  %7 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !9905
  %queue = getelementptr inbounds %struct.driver_data, %struct.driver_data* %7, i32 0, i32 5, !dbg !9907
  %8 = load %struct.request_queue*, %struct.request_queue** %queue, align 8, !dbg !9907
  %tobool5 = icmp ne %struct.request_queue* %8, null, !dbg !9905
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !9908

if.then6:                                         ; preds = %if.then3
  %9 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !9909
  %queue7 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %9, i32 0, i32 5, !dbg !9910
  %10 = load %struct.request_queue*, %struct.request_queue** %queue7, align 8, !dbg !9910
  call void @blk_queue_flag_set(i32 13, %struct.request_queue* %10) #12, !dbg !9911
  br label %if.end9, !dbg !9911

if.else:                                          ; preds = %if.then3
  %11 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !9912
  %pdev8 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %11, i32 0, i32 4, !dbg !9912
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev8, align 8, !dbg !9912
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 41, !dbg !9912
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.mtip_check_surprise_removal, i64 0, i64 0)) #13, !dbg !9912
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then6
  store i1 true, i1* %retval, align 1, !dbg !9913
  br label %return, !dbg !9913

if.end10:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !9914
  br label %return, !dbg !9914

return:                                           ; preds = %if.end10, %if.end9, %if.then
  %13 = load i1, i1* %retval, align 1, !dbg !9915
  ret i1 %13, !dbg !9915
}

; Function Attrs: noredzone
declare dso_local i32 @jiffies_to_msecs(i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #2 !dbg !9916 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !9922, metadata !DIExpression()), !dbg !9924
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !9926, metadata !DIExpression()), !dbg !9927
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !9928, metadata !DIExpression()), !dbg !9929
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !9930, metadata !DIExpression()), !dbg !9932
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !9934, metadata !DIExpression()), !dbg !9935
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !6979, metadata !DIExpression()), !dbg !9936
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !6989, metadata !DIExpression()), !dbg !9938
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !9939, metadata !DIExpression()), !dbg !9940
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !9941, metadata !DIExpression()), !dbg !9942
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !9943
  %1 = load i64, i64* %nr.addr, align 8, !dbg !9944
  %div = sdiv i64 %1, 64, !dbg !9944
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !9945
  %2 = bitcast i64* %add.ptr to i8*, !dbg !9943
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !9946
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !9947
  %conv.i = trunc i64 %4 to i32, !dbg !9947
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #14, !dbg !9948
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !9949
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !9949
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #14, !dbg !9949
  %7 = load i64, i64* %nr.addr, align 8, !dbg !9950
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !9950
  br i1 %8, label %cond.true, label %cond.false, !dbg !9950

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !9950
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !9950
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !9951
  %and.i = and i64 %11, 63, !dbg !9952
  %shl.i = shl i64 1, %and.i, !dbg !9953
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !9954
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !9955
  %shr.i = ashr i64 %13, 6, !dbg !9956
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !9954
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !9954
  %and1.i = and i64 %shl.i, %14, !dbg !9957
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !9958
  %conv = zext i1 %cmp.i to i32, !dbg !9950
  br label %cond.end, !dbg !9950

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !9950
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !9950
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !9959
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !9960
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #11, !dbg !9961, !srcloc !9962
  store i8 %19, i8* %oldbit.i, align 1, !dbg !9961
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !9963
  %tobool.i = trunc i8 %20 to i1, !dbg !9963
  %conv2 = zext i1 %tobool.i to i32, !dbg !9950
  br label %cond.end, !dbg !9950

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !9950
  %tobool = icmp ne i32 %cond, 0, !dbg !9950
  ret i1 %tobool, !dbg !9964
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_hba_reset(%struct.driver_data* %dd) #2 !dbg !9965 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !7000, metadata !DIExpression()), !dbg !9966
  %retval = alloca i32, align 4
  %dd.addr = alloca %struct.driver_data*, align 8
  %timeout = alloca i64, align 8
  %__ms = alloca i64, align 8
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !9968, metadata !DIExpression()), !dbg !9969
  call void @llvm.dbg.declare(metadata i64* %timeout, metadata !9970, metadata !DIExpression()), !dbg !9971
  %0 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9972
  %mmio = getelementptr inbounds %struct.driver_data, %struct.driver_data* %0, i32 0, i32 0, !dbg !9973
  %1 = load i8*, i8** %mmio, align 8, !dbg !9973
  %add.ptr = getelementptr i8, i8* %1, i64 4, !dbg !9974
  call void @writel(i32 1, i8* %add.ptr) #12, !dbg !9975
  %2 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !9976
  %mmio1 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %2, i32 0, i32 0, !dbg !9977
  %3 = load i8*, i8** %mmio1, align 8, !dbg !9977
  %add.ptr2 = getelementptr i8, i8* %3, i64 4, !dbg !9978
  %call = call i32 @readl(i8* %add.ptr2) #12, !dbg !9979
  %4 = load volatile i64, i64* @jiffies, align 8, !dbg !9980
  store i32 10000, i32* %m.addr.i, align 4
  %5 = load i32, i32* %m.addr.i, align 4, !dbg !9981
  %6 = call i1 @llvm.is.constant.i32(i32 %5) #11, !dbg !9982
  br i1 %6, label %if.then.i, label %if.else.i, !dbg !9983

if.then.i:                                        ; preds = %entry
  %7 = load i32, i32* %m.addr.i, align 4, !dbg !9984
  %cmp.i = icmp slt i32 %7, 0, !dbg !9985
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !9986

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !9987
  br label %msecs_to_jiffies.exit, !dbg !9987

if.end.i:                                         ; preds = %if.then.i
  %8 = load i32, i32* %m.addr.i, align 4, !dbg !9988
  %call.i = call i64 @_msecs_to_jiffies(i32 %8) #14, !dbg !9989
  store i64 %call.i, i64* %retval.i, align 8, !dbg !9990
  br label %msecs_to_jiffies.exit, !dbg !9990

if.else.i:                                        ; preds = %entry
  %9 = load i32, i32* %m.addr.i, align 4, !dbg !9991
  %call2.i = call i64 @__msecs_to_jiffies(i32 %9) #14, !dbg !9992
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !9993
  br label %msecs_to_jiffies.exit, !dbg !9993

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %10 = load i64, i64* %retval.i, align 8, !dbg !9994
  %add = add i64 %4, %10, !dbg !9995
  store i64 %add, i64* %timeout, align 8, !dbg !9996
  br label %do.body, !dbg !9997

do.body:                                          ; preds = %land.end, %msecs_to_jiffies.exit
  call void @llvm.dbg.declare(metadata i64* %__ms, metadata !9998, metadata !DIExpression()), !dbg !10001
  store i64 10, i64* %__ms, align 8, !dbg !10001
  br label %while.cond, !dbg !10001

while.cond:                                       ; preds = %while.body, %do.body
  %11 = load i64, i64* %__ms, align 8, !dbg !10001
  %dec = add i64 %11, -1, !dbg !10001
  store i64 %dec, i64* %__ms, align 8, !dbg !10001
  %tobool = icmp ne i64 %11, 0, !dbg !10001
  br i1 %tobool, label %while.body, label %while.end, !dbg !10001

while.body:                                       ; preds = %while.cond
  call void @__const_udelay(i64 4295000) #12, !dbg !10002
  br label %while.cond, !dbg !10001, !llvm.loop !10007

while.end:                                        ; preds = %while.cond
  %12 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !10008
  %dd_flag = getelementptr inbounds %struct.driver_data, %struct.driver_data* %12, i32 0, i32 11, !dbg !10010
  %call4 = call zeroext i1 @test_bit(i64 1, i64* %dd_flag) #12, !dbg !10011
  br i1 %call4, label %if.then, label %if.end, !dbg !10012

if.then:                                          ; preds = %while.end
  store i32 -1, i32* %retval, align 4, !dbg !10013
  br label %return, !dbg !10013

if.end:                                           ; preds = %while.end
  br label %do.cond, !dbg !10014

do.cond:                                          ; preds = %if.end
  %13 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !10015
  %mmio5 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %13, i32 0, i32 0, !dbg !10016
  %14 = load i8*, i8** %mmio5, align 8, !dbg !10016
  %add.ptr6 = getelementptr i8, i8* %14, i64 4, !dbg !10017
  %call7 = call i32 @readl(i8* %add.ptr6) #12, !dbg !10018
  %and = and i32 %call7, 1, !dbg !10019
  %tobool8 = icmp ne i32 %and, 0, !dbg !10019
  br i1 %tobool8, label %land.rhs, label %land.end, !dbg !10020

land.rhs:                                         ; preds = %do.cond
  %15 = load volatile i64, i64* @jiffies, align 8, !dbg !10021
  %16 = load i64, i64* %timeout, align 8, !dbg !10021
  %sub = sub i64 %15, %16, !dbg !10021
  %cmp = icmp slt i64 %sub, 0, !dbg !10021
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %17 = phi i1 [ false, %do.cond ], [ %cmp, %land.rhs ], !dbg !10022
  br i1 %17, label %do.body, label %do.end, !dbg !10014, !llvm.loop !10023

do.end:                                           ; preds = %land.end
  %18 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !10025
  %mmio9 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %18, i32 0, i32 0, !dbg !10027
  %19 = load i8*, i8** %mmio9, align 8, !dbg !10027
  %add.ptr10 = getelementptr i8, i8* %19, i64 4, !dbg !10028
  %call11 = call i32 @readl(i8* %add.ptr10) #12, !dbg !10029
  %and12 = and i32 %call11, 1, !dbg !10030
  %tobool13 = icmp ne i32 %and12, 0, !dbg !10030
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !10031

if.then14:                                        ; preds = %do.end
  store i32 -1, i32* %retval, align 4, !dbg !10032
  br label %return, !dbg !10032

if.end15:                                         ; preds = %do.end
  store i32 0, i32* %retval, align 4, !dbg !10033
  br label %return, !dbg !10033

return:                                           ; preds = %if.end15, %if.then14, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !10034
  ret i32 %20, !dbg !10034
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mtip_init_port(%struct.mtip_port* %port) #2 !dbg !10035 {
entry:
  %port.addr = alloca %struct.mtip_port*, align 8
  %i = alloca i32, align 4
  store %struct.mtip_port* %port, %struct.mtip_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mtip_port** %port.addr, metadata !10038, metadata !DIExpression()), !dbg !10039
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10040, metadata !DIExpression()), !dbg !10041
  %0 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !10042
  call void @mtip_deinit_port(%struct.mtip_port* %0) #12, !dbg !10043
  %1 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !10044
  %dd = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %1, i32 0, i32 0, !dbg !10046
  %2 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !10046
  %mmio = getelementptr inbounds %struct.driver_data, %struct.driver_data* %2, i32 0, i32 0, !dbg !10047
  %3 = load i8*, i8** %mmio, align 8, !dbg !10047
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !10048
  %call = call i32 @readl(i8* %add.ptr) #12, !dbg !10049
  %and = and i32 %call, -2147483648, !dbg !10050
  %tobool = icmp ne i32 %and, 0, !dbg !10050
  br i1 %tobool, label %if.then, label %if.end, !dbg !10051

if.then:                                          ; preds = %entry
  %4 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !10052
  %command_list_dma = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %4, i32 0, i32 7, !dbg !10054
  %5 = load i64, i64* %command_list_dma, align 8, !dbg !10054
  %shr = lshr i64 %5, 16, !dbg !10055
  %shr1 = lshr i64 %shr, 16, !dbg !10056
  %conv = trunc i64 %shr1 to i32, !dbg !10057
  %6 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !10058
  %mmio2 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %6, i32 0, i32 2, !dbg !10059
  %7 = load i8*, i8** %mmio2, align 8, !dbg !10059
  %add.ptr3 = getelementptr i8, i8* %7, i64 4, !dbg !10060
  call void @writel(i32 %conv, i8* %add.ptr3) #12, !dbg !10061
  %8 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !10062
  %rxfis_dma = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %8, i32 0, i32 9, !dbg !10063
  %9 = load i64, i64* %rxfis_dma, align 8, !dbg !10063
  %shr4 = lshr i64 %9, 16, !dbg !10064
  %shr5 = lshr i64 %shr4, 16, !dbg !10065
  %conv6 = trunc i64 %shr5 to i32, !dbg !10066
  %10 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !10067
  %mmio7 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %10, i32 0, i32 2, !dbg !10068
  %11 = load i8*, i8** %mmio7, align 8, !dbg !10068
  %add.ptr8 = getelementptr i8, i8* %11, i64 12, !dbg !10069
  call void @writel(i32 %conv6, i8* %add.ptr8) #12, !dbg !10070
  %12 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !10071
  %flags = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %12, i32 0, i32 22, !dbg !10072
  call void @set_bit(i64 10, i64* %flags) #12, !dbg !10073
  br label %if.end, !dbg !10074

if.end:                                           ; preds = %if.then, %entry
  %13 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !10075
  %command_list_dma9 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %13, i32 0, i32 7, !dbg !10076
  %14 = load i64, i64* %command_list_dma9, align 8, !dbg !10076
  %and10 = and i64 %14, 4294967295, !dbg !10077
  %conv11 = trunc i64 %and10 to i32, !dbg !10075
  %15 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !10078
  %mmio12 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %15, i32 0, i32 2, !dbg !10079
  %16 = load i8*, i8** %mmio12, align 8, !dbg !10079
  %add.ptr13 = getelementptr i8, i8* %16, i64 0, !dbg !10080
  call void @writel(i32 %conv11, i8* %add.ptr13) #12, !dbg !10081
  %17 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !10082
  %rxfis_dma14 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %17, i32 0, i32 9, !dbg !10083
  %18 = load i64, i64* %rxfis_dma14, align 8, !dbg !10083
  %and15 = and i64 %18, 4294967295, !dbg !10084
  %conv16 = trunc i64 %and15 to i32, !dbg !10082
  %19 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !10085
  %mmio17 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %19, i32 0, i32 2, !dbg !10086
  %20 = load i8*, i8** %mmio17, align 8, !dbg !10086
  %add.ptr18 = getelementptr i8, i8* %20, i64 8, !dbg !10087
  call void @writel(i32 %conv16, i8* %add.ptr18) #12, !dbg !10088
  %21 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !10089
  %mmio19 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %21, i32 0, i32 2, !dbg !10090
  %22 = load i8*, i8** %mmio19, align 8, !dbg !10090
  %add.ptr20 = getelementptr i8, i8* %22, i64 48, !dbg !10091
  %call21 = call i32 @readl(i8* %add.ptr20) #12, !dbg !10092
  %23 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !10093
  %mmio22 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %23, i32 0, i32 2, !dbg !10094
  %24 = load i8*, i8** %mmio22, align 8, !dbg !10094
  %add.ptr23 = getelementptr i8, i8* %24, i64 48, !dbg !10095
  call void @writel(i32 %call21, i8* %add.ptr23) #12, !dbg !10096
  store i32 0, i32* %i, align 4, !dbg !10097
  br label %for.cond, !dbg !10099

for.cond:                                         ; preds = %for.inc, %if.end
  %25 = load i32, i32* %i, align 4, !dbg !10100
  %26 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !10102
  %dd24 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %26, i32 0, i32 0, !dbg !10103
  %27 = load %struct.driver_data*, %struct.driver_data** %dd24, align 8, !dbg !10103
  %slot_groups = getelementptr inbounds %struct.driver_data, %struct.driver_data* %27, i32 0, i32 9, !dbg !10104
  %28 = load i32, i32* %slot_groups, align 4, !dbg !10104
  %cmp = icmp ult i32 %25, %28, !dbg !10105
  br i1 %cmp, label %for.body, label %for.end, !dbg !10106

for.body:                                         ; preds = %for.cond
  %29 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !10107
  %completed = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %29, i32 0, i32 4, !dbg !10108
  %30 = load i32, i32* %i, align 4, !dbg !10109
  %idxprom = sext i32 %30 to i64, !dbg !10107
  %arrayidx = getelementptr [8 x i8*], [8 x i8*]* %completed, i64 0, i64 %idxprom, !dbg !10107
  %31 = load i8*, i8** %arrayidx, align 8, !dbg !10107
  call void @writel(i32 -1, i8* %31) #12, !dbg !10110
  br label %for.inc, !dbg !10110

for.inc:                                          ; preds = %for.body
  %32 = load i32, i32* %i, align 4, !dbg !10111
  %inc = add i32 %32, 1, !dbg !10111
  store i32 %inc, i32* %i, align 4, !dbg !10111
  br label %for.cond, !dbg !10112, !llvm.loop !10113

for.end:                                          ; preds = %for.cond
  %33 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !10115
  %mmio26 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %33, i32 0, i32 2, !dbg !10116
  %34 = load i8*, i8** %mmio26, align 8, !dbg !10116
  %add.ptr27 = getelementptr i8, i8* %34, i64 16, !dbg !10117
  %call28 = call i32 @readl(i8* %add.ptr27) #12, !dbg !10118
  %35 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !10119
  %mmio29 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %35, i32 0, i32 2, !dbg !10120
  %36 = load i8*, i8** %mmio29, align 8, !dbg !10120
  %add.ptr30 = getelementptr i8, i8* %36, i64 16, !dbg !10121
  call void @writel(i32 %call28, i8* %add.ptr30) #12, !dbg !10122
  %37 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !10123
  %dd31 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %37, i32 0, i32 0, !dbg !10124
  %38 = load %struct.driver_data*, %struct.driver_data** %dd31, align 8, !dbg !10124
  %mmio32 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %38, i32 0, i32 0, !dbg !10125
  %39 = load i8*, i8** %mmio32, align 8, !dbg !10125
  %add.ptr33 = getelementptr i8, i8* %39, i64 8, !dbg !10126
  %call34 = call i32 @readl(i8* %add.ptr33) #12, !dbg !10127
  %40 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !10128
  %dd35 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %40, i32 0, i32 0, !dbg !10129
  %41 = load %struct.driver_data*, %struct.driver_data** %dd35, align 8, !dbg !10129
  %mmio36 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %41, i32 0, i32 0, !dbg !10130
  %42 = load i8*, i8** %mmio36, align 8, !dbg !10130
  %add.ptr37 = getelementptr i8, i8* %42, i64 8, !dbg !10131
  call void @writel(i32 %call34, i8* %add.ptr37) #12, !dbg !10132
  %43 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !10133
  %mmio38 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %43, i32 0, i32 2, !dbg !10134
  %44 = load i8*, i8** %mmio38, align 8, !dbg !10134
  %add.ptr39 = getelementptr i8, i8* %44, i64 20, !dbg !10135
  call void @writel(i32 2109735003, i8* %add.ptr39) #12, !dbg !10136
  ret void, !dbg !10137
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mtip_start_port(%struct.mtip_port* %port) #2 !dbg !10138 {
entry:
  %port.addr = alloca %struct.mtip_port*, align 8
  store %struct.mtip_port* %port, %struct.mtip_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mtip_port** %port.addr, metadata !10139, metadata !DIExpression()), !dbg !10140
  %0 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !10141
  %call = call i32 @mtip_enable_fis(%struct.mtip_port* %0, i32 1) #12, !dbg !10142
  %1 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !10143
  %call1 = call i32 @mtip_enable_engine(%struct.mtip_port* %1, i32 1) #12, !dbg !10144
  ret void, !dbg !10145
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_irq(i32 %irq, i32 (i32, i8*)* %handler, i64 %flags, i8* %name, i8* %dev) #2 !dbg !10146 {
entry:
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %flags.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %dev.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !10154, metadata !DIExpression()), !dbg !10155
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !10156, metadata !DIExpression()), !dbg !10157
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !10158, metadata !DIExpression()), !dbg !10159
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10160, metadata !DIExpression()), !dbg !10161
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !10162, metadata !DIExpression()), !dbg !10163
  %0 = load i32, i32* %irq.addr, align 4, !dbg !10164
  %1 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !10165
  %2 = load i64, i64* %flags.addr, align 8, !dbg !10166
  %3 = load i8*, i8** %name.addr, align 8, !dbg !10167
  %4 = load i8*, i8** %dev.addr, align 8, !dbg !10168
  %call = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* null, i64 %2, i8* %3, i8* %4) #12, !dbg !10169
  ret i32 %call, !dbg !10170
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_irq_handler(i32 %irq, i8* %instance) #2 !dbg !10171 {
entry:
  %irq.addr = alloca i32, align 4
  %instance.addr = alloca i8*, align 8
  %dd = alloca %struct.driver_data*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !10172, metadata !DIExpression()), !dbg !10173
  store i8* %instance, i8** %instance.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %instance.addr, metadata !10174, metadata !DIExpression()), !dbg !10175
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd, metadata !10176, metadata !DIExpression()), !dbg !10177
  %0 = load i8*, i8** %instance.addr, align 8, !dbg !10178
  %1 = bitcast i8* %0 to %struct.driver_data*, !dbg !10178
  store %struct.driver_data* %1, %struct.driver_data** %dd, align 8, !dbg !10177
  %2 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !10179
  %call = call i32 @mtip_handle_irq(%struct.driver_data* %2) #12, !dbg !10180
  ret i32 %call, !dbg !10181
}

; Function Attrs: noredzone
declare dso_local i8* @dev_driver_string(%struct.device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @irq_set_affinity_hint(i32 %irq, %struct.cpumask* %m) #2 !dbg !10182 {
entry:
  %irq.addr = alloca i32, align 4
  %m.addr = alloca %struct.cpumask*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !10185, metadata !DIExpression()), !dbg !10186
  store %struct.cpumask* %m, %struct.cpumask** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cpumask** %m.addr, metadata !10187, metadata !DIExpression()), !dbg !10188
  ret i32 -22, !dbg !10189
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.cpumask* @get_cpu_mask(i32 %cpu) #2 !dbg !10190 {
entry:
  %cpu.addr = alloca i32, align 4
  %p = alloca i64*, align 8
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !10193, metadata !DIExpression()), !dbg !10194
  call void @llvm.dbg.declare(metadata i64** %p, metadata !10195, metadata !DIExpression()), !dbg !10196
  %0 = load i32, i32* %cpu.addr, align 4, !dbg !10197
  %rem = urem i32 %0, 64, !dbg !10198
  %add = add i32 1, %rem, !dbg !10199
  %idxprom = zext i32 %add to i64, !dbg !10200
  %arrayidx = getelementptr [65 x [1 x i64]], [65 x [1 x i64]]* @cpu_bit_bitmap, i64 0, i64 %idxprom, !dbg !10200
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %arrayidx, i64 0, i64 0, !dbg !10200
  store i64* %arraydecay, i64** %p, align 8, !dbg !10196
  %1 = load i32, i32* %cpu.addr, align 4, !dbg !10201
  %div = udiv i32 %1, 64, !dbg !10202
  %2 = load i64*, i64** %p, align 8, !dbg !10203
  %idx.ext = zext i32 %div to i64, !dbg !10203
  %idx.neg = sub i64 0, %idx.ext, !dbg !10203
  %add.ptr = getelementptr i64, i64* %2, i64 %idx.neg, !dbg !10203
  store i64* %add.ptr, i64** %p, align 8, !dbg !10203
  %3 = load i64*, i64** %p, align 8, !dbg !10204
  %4 = bitcast i64* %3 to i8*, !dbg !10204
  %5 = bitcast i8* %4 to %struct.cpumask*, !dbg !10204
  ret %struct.cpumask* %5, !dbg !10205
}

; Function Attrs: noredzone
declare dso_local void @__init_waitqueue_head(%struct.wait_queue_head*, i8*, %struct.lock_class_key*) #1

; Function Attrs: noredzone
declare dso_local i8* @free_irq(i32, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mtip_deinit_port(%struct.mtip_port* %port) #2 !dbg !10206 {
entry:
  %port.addr = alloca %struct.mtip_port*, align 8
  store %struct.mtip_port* %port, %struct.mtip_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mtip_port** %port.addr, metadata !10207, metadata !DIExpression()), !dbg !10208
  %0 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !10209
  %mmio = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %0, i32 0, i32 2, !dbg !10210
  %1 = load i8*, i8** %mmio, align 8, !dbg !10210
  %add.ptr = getelementptr i8, i8* %1, i64 20, !dbg !10211
  call void @writel(i32 0, i8* %add.ptr) #12, !dbg !10212
  %2 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !10213
  %call = call i32 @mtip_enable_engine(%struct.mtip_port* %2, i32 0) #12, !dbg !10214
  %3 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !10215
  %call1 = call i32 @mtip_enable_fis(%struct.mtip_port* %3, i32 0) #12, !dbg !10216
  ret void, !dbg !10217
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mtip_dma_free(%struct.driver_data* %dd) #2 !dbg !10218 {
entry:
  %dd.addr = alloca %struct.driver_data*, align 8
  %port = alloca %struct.mtip_port*, align 8
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !10219, metadata !DIExpression()), !dbg !10220
  call void @llvm.dbg.declare(metadata %struct.mtip_port** %port, metadata !10221, metadata !DIExpression()), !dbg !10222
  %0 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !10223
  %port1 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %0, i32 0, i32 7, !dbg !10224
  %1 = load %struct.mtip_port*, %struct.mtip_port** %port1, align 8, !dbg !10224
  store %struct.mtip_port* %1, %struct.mtip_port** %port, align 8, !dbg !10222
  %2 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !10225
  %block1 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %2, i32 0, i32 10, !dbg !10227
  %3 = load i8*, i8** %block1, align 8, !dbg !10227
  %tobool = icmp ne i8* %3, null, !dbg !10225
  br i1 %tobool, label %if.then, label %if.end, !dbg !10228

if.then:                                          ; preds = %entry
  %4 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !10229
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %4, i32 0, i32 4, !dbg !10230
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !10230
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 41, !dbg !10231
  %6 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !10232
  %block12 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %6, i32 0, i32 10, !dbg !10233
  %7 = load i8*, i8** %block12, align 8, !dbg !10233
  %8 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !10234
  %block1_dma = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %8, i32 0, i32 11, !dbg !10235
  %9 = load i64, i64* %block1_dma, align 8, !dbg !10235
  call void @dma_free_coherent(%struct.device* %dev, i64 4096, i8* %7, i64 %9) #12, !dbg !10236
  br label %if.end, !dbg !10236

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !10237
  %command_list = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %10, i32 0, i32 6, !dbg !10239
  %11 = load i8*, i8** %command_list, align 8, !dbg !10239
  %tobool3 = icmp ne i8* %11, null, !dbg !10237
  br i1 %tobool3, label %if.then4, label %if.end8, !dbg !10240

if.then4:                                         ; preds = %if.end
  %12 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !10241
  %pdev5 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %12, i32 0, i32 4, !dbg !10243
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pdev5, align 8, !dbg !10243
  %dev6 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 41, !dbg !10244
  %14 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !10245
  %command_list7 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %14, i32 0, i32 6, !dbg !10246
  %15 = load i8*, i8** %command_list7, align 8, !dbg !10246
  %16 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !10247
  %command_list_dma = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %16, i32 0, i32 7, !dbg !10248
  %17 = load i64, i64* %command_list_dma, align 8, !dbg !10248
  call void @dma_free_coherent(%struct.device* %dev6, i64 8192, i8* %15, i64 %17) #12, !dbg !10249
  br label %if.end8, !dbg !10250

if.end8:                                          ; preds = %if.then4, %if.end
  ret void, !dbg !10251
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dma_alloc_coherent(%struct.device* %dev, i64 %size, i64* %dma_handle, i32 %gfp) #2 !dbg !10252 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %dma_handle.addr = alloca i64*, align 8
  %gfp.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10256, metadata !DIExpression()), !dbg !10257
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10258, metadata !DIExpression()), !dbg !10259
  store i64* %dma_handle, i64** %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dma_handle.addr, metadata !10260, metadata !DIExpression()), !dbg !10261
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !10262, metadata !DIExpression()), !dbg !10263
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10264
  %1 = load i64, i64* %size.addr, align 8, !dbg !10265
  %2 = load i64*, i64** %dma_handle.addr, align 8, !dbg !10266
  %3 = load i32, i32* %gfp.addr, align 4, !dbg !10267
  %4 = load i32, i32* %gfp.addr, align 4, !dbg !10268
  %and = and i32 %4, 8192, !dbg !10269
  %tobool = icmp ne i32 %and, 0, !dbg !10270
  %5 = zext i1 %tobool to i64, !dbg !10270
  %cond = select i1 %tobool, i64 256, i64 0, !dbg !10270
  %call = call i8* @dma_alloc_attrs(%struct.device* %0, i64 %1, i64* %2, i32 %3, i64 %cond) #12, !dbg !10271
  ret i8* %call, !dbg !10272
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_free_coherent(%struct.device* %dev, i64 %size, i8* %cpu_addr, i64 %dma_handle) #2 !dbg !10273 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %cpu_addr.addr = alloca i8*, align 8
  %dma_handle.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10276, metadata !DIExpression()), !dbg !10277
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10278, metadata !DIExpression()), !dbg !10279
  store i8* %cpu_addr, i8** %cpu_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cpu_addr.addr, metadata !10280, metadata !DIExpression()), !dbg !10281
  store i64 %dma_handle, i64* %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_handle.addr, metadata !10282, metadata !DIExpression()), !dbg !10283
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10284
  %1 = load i64, i64* %size.addr, align 8, !dbg !10285
  %2 = load i8*, i8** %cpu_addr.addr, align 8, !dbg !10286
  %3 = load i64, i64* %dma_handle.addr, align 8, !dbg !10287
  call void @dma_free_attrs(%struct.device* %0, i64 %1, i8* %2, i64 %3, i64 0) #12, !dbg !10288
  ret void, !dbg !10289
}

; Function Attrs: noredzone
declare dso_local i8* @dma_alloc_attrs(%struct.device*, i64, i64*, i32, i64) #1

; Function Attrs: noredzone
declare dso_local void @dma_free_attrs(%struct.device*, i64, i8*, i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #2 !dbg !10290 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !10291, metadata !DIExpression()), !dbg !10292
  %0 = load i32, i32* %m.addr, align 4, !dbg !10293
  %conv = zext i32 %0 to i64, !dbg !10293
  %add = add i64 %conv, 4, !dbg !10294
  %sub = sub i64 %add, 1, !dbg !10295
  %div = sdiv i64 %sub, 4, !dbg !10296
  ret i64 %div, !dbg !10297
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_get_drvdata(%struct.pci_dev* %pdev) #2 !dbg !10298 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !10301, metadata !DIExpression()), !dbg !10302
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10303
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !10304
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #12, !dbg !10305
  ret i8* %call, !dbg !10306
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #2 !dbg !10307 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10310, metadata !DIExpression()), !dbg !10311
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10312
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !10313
  %1 = load i8*, i8** %driver_data, align 8, !dbg !10313
  ret i8* %1, !dbg !10314
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #2 !dbg !10315 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !10316, metadata !DIExpression()), !dbg !10317
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !10318, metadata !DIExpression()), !dbg !10319
  ret i1 true, !dbg !10320
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_enable_fis(%struct.mtip_port* %port, i32 %enable) #2 !dbg !10321 {
entry:
  %port.addr = alloca %struct.mtip_port*, align 8
  %enable.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.mtip_port* %port, %struct.mtip_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mtip_port** %port.addr, metadata !10324, metadata !DIExpression()), !dbg !10325
  store i32 %enable, i32* %enable.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enable.addr, metadata !10326, metadata !DIExpression()), !dbg !10327
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !10328, metadata !DIExpression()), !dbg !10329
  %0 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !10330
  %mmio = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %0, i32 0, i32 2, !dbg !10331
  %1 = load i8*, i8** %mmio, align 8, !dbg !10331
  %add.ptr = getelementptr i8, i8* %1, i64 24, !dbg !10332
  %call = call i32 @readl(i8* %add.ptr) #12, !dbg !10333
  store i32 %call, i32* %tmp, align 4, !dbg !10334
  %2 = load i32, i32* %enable.addr, align 4, !dbg !10335
  %tobool = icmp ne i32 %2, 0, !dbg !10335
  br i1 %tobool, label %if.then, label %if.else, !dbg !10337

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %tmp, align 4, !dbg !10338
  %or = or i32 %3, 16, !dbg !10339
  %4 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !10340
  %mmio1 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %4, i32 0, i32 2, !dbg !10341
  %5 = load i8*, i8** %mmio1, align 8, !dbg !10341
  %add.ptr2 = getelementptr i8, i8* %5, i64 24, !dbg !10342
  call void @writel(i32 %or, i8* %add.ptr2) #12, !dbg !10343
  br label %if.end, !dbg !10343

if.else:                                          ; preds = %entry
  %6 = load i32, i32* %tmp, align 4, !dbg !10344
  %and = and i32 %6, -17, !dbg !10345
  %7 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !10346
  %mmio3 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %7, i32 0, i32 2, !dbg !10347
  %8 = load i8*, i8** %mmio3, align 8, !dbg !10347
  %add.ptr4 = getelementptr i8, i8* %8, i64 24, !dbg !10348
  call void @writel(i32 %and, i8* %add.ptr4) #12, !dbg !10349
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !10350
  %mmio5 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %9, i32 0, i32 2, !dbg !10351
  %10 = load i8*, i8** %mmio5, align 8, !dbg !10351
  %add.ptr6 = getelementptr i8, i8* %10, i64 24, !dbg !10352
  %call7 = call i32 @readl(i8* %add.ptr6) #12, !dbg !10353
  %11 = load i32, i32* %tmp, align 4, !dbg !10354
  %and8 = and i32 %11, 16, !dbg !10355
  %cmp = icmp eq i32 %and8, 16, !dbg !10356
  %conv = zext i1 %cmp to i32, !dbg !10356
  ret i32 %conv, !dbg !10357
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_enable_engine(%struct.mtip_port* %port, i32 %enable) #2 !dbg !10358 {
entry:
  %port.addr = alloca %struct.mtip_port*, align 8
  %enable.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.mtip_port* %port, %struct.mtip_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mtip_port** %port.addr, metadata !10359, metadata !DIExpression()), !dbg !10360
  store i32 %enable, i32* %enable.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enable.addr, metadata !10361, metadata !DIExpression()), !dbg !10362
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !10363, metadata !DIExpression()), !dbg !10364
  %0 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !10365
  %mmio = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %0, i32 0, i32 2, !dbg !10366
  %1 = load i8*, i8** %mmio, align 8, !dbg !10366
  %add.ptr = getelementptr i8, i8* %1, i64 24, !dbg !10367
  %call = call i32 @readl(i8* %add.ptr) #12, !dbg !10368
  store i32 %call, i32* %tmp, align 4, !dbg !10369
  %2 = load i32, i32* %enable.addr, align 4, !dbg !10370
  %tobool = icmp ne i32 %2, 0, !dbg !10370
  br i1 %tobool, label %if.then, label %if.else, !dbg !10372

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %tmp, align 4, !dbg !10373
  %or = or i32 %3, 1, !dbg !10374
  %4 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !10375
  %mmio1 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %4, i32 0, i32 2, !dbg !10376
  %5 = load i8*, i8** %mmio1, align 8, !dbg !10376
  %add.ptr2 = getelementptr i8, i8* %5, i64 24, !dbg !10377
  call void @writel(i32 %or, i8* %add.ptr2) #12, !dbg !10378
  br label %if.end, !dbg !10378

if.else:                                          ; preds = %entry
  %6 = load i32, i32* %tmp, align 4, !dbg !10379
  %and = and i32 %6, -2, !dbg !10380
  %7 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !10381
  %mmio3 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %7, i32 0, i32 2, !dbg !10382
  %8 = load i8*, i8** %mmio3, align 8, !dbg !10382
  %add.ptr4 = getelementptr i8, i8* %8, i64 24, !dbg !10383
  call void @writel(i32 %and, i8* %add.ptr4) #12, !dbg !10384
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !10385
  %mmio5 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %9, i32 0, i32 2, !dbg !10386
  %10 = load i8*, i8** %mmio5, align 8, !dbg !10386
  %add.ptr6 = getelementptr i8, i8* %10, i64 24, !dbg !10387
  %call7 = call i32 @readl(i8* %add.ptr6) #12, !dbg !10388
  %11 = load i32, i32* %tmp, align 4, !dbg !10389
  %and8 = and i32 %11, 1, !dbg !10390
  %cmp = icmp eq i32 %and8, 1, !dbg !10391
  %conv = zext i1 %cmp to i32, !dbg !10391
  ret i32 %conv, !dbg !10392
}

; Function Attrs: noredzone
declare dso_local i32 @request_threaded_irq(i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_handle_irq(%struct.driver_data* %data) #2 !dbg !10393 {
entry:
  %v.addr.i1.i141 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i141, metadata !8666, metadata !DIExpression()), !dbg !10396
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !8674, metadata !DIExpression()), !dbg !10403
  %v.addr.i.i142 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i142, metadata !8241, metadata !DIExpression()), !dbg !10404
  %size.addr.i.i143 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i143, metadata !8245, metadata !DIExpression()), !dbg !10406
  %v.addr.i144 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i144, metadata !8679, metadata !DIExpression()), !dbg !10407
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !8681, metadata !DIExpression()), !dbg !10408
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !6966, metadata !DIExpression()), !dbg !10409
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6979, metadata !DIExpression()), !dbg !10413
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6989, metadata !DIExpression()), !dbg !10415
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !6991, metadata !DIExpression()), !dbg !10416
  %retval = alloca i32, align 4
  %data.addr = alloca %struct.driver_data*, align 8
  %dd = alloca %struct.driver_data*, align 8
  %port = alloca %struct.mtip_port*, align 8
  %hba_stat = alloca i32, align 4
  %port_stat = alloca i32, align 4
  %rv = alloca i32, align 4
  %do_irq_enable = alloca i32, align 4
  %i = alloca i32, align 4
  %workers = alloca i32, align 4
  %twork = alloca %struct.mtip_work*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.driver_data* %data, %struct.driver_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %data.addr, metadata !10417, metadata !DIExpression()), !dbg !10418
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd, metadata !10419, metadata !DIExpression()), !dbg !10420
  %0 = load %struct.driver_data*, %struct.driver_data** %data.addr, align 8, !dbg !10421
  store %struct.driver_data* %0, %struct.driver_data** %dd, align 8, !dbg !10420
  call void @llvm.dbg.declare(metadata %struct.mtip_port** %port, metadata !10422, metadata !DIExpression()), !dbg !10423
  %1 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !10424
  %port1 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %1, i32 0, i32 7, !dbg !10425
  %2 = load %struct.mtip_port*, %struct.mtip_port** %port1, align 8, !dbg !10425
  store %struct.mtip_port* %2, %struct.mtip_port** %port, align 8, !dbg !10423
  call void @llvm.dbg.declare(metadata i32* %hba_stat, metadata !10426, metadata !DIExpression()), !dbg !10427
  call void @llvm.dbg.declare(metadata i32* %port_stat, metadata !10428, metadata !DIExpression()), !dbg !10429
  call void @llvm.dbg.declare(metadata i32* %rv, metadata !10430, metadata !DIExpression()), !dbg !10431
  store i32 0, i32* %rv, align 4, !dbg !10431
  call void @llvm.dbg.declare(metadata i32* %do_irq_enable, metadata !10432, metadata !DIExpression()), !dbg !10433
  store i32 1, i32* %do_irq_enable, align 4, !dbg !10433
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10434, metadata !DIExpression()), !dbg !10435
  call void @llvm.dbg.declare(metadata i32* %workers, metadata !10436, metadata !DIExpression()), !dbg !10437
  call void @llvm.dbg.declare(metadata %struct.mtip_work** %twork, metadata !10438, metadata !DIExpression()), !dbg !10439
  %3 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !10440
  %mmio = getelementptr inbounds %struct.driver_data, %struct.driver_data* %3, i32 0, i32 0, !dbg !10441
  %4 = load i8*, i8** %mmio, align 8, !dbg !10441
  %add.ptr = getelementptr i8, i8* %4, i64 8, !dbg !10442
  %call = call i32 @readl(i8* %add.ptr) #12, !dbg !10443
  store i32 %call, i32* %hba_stat, align 4, !dbg !10444
  %5 = load i32, i32* %hba_stat, align 4, !dbg !10445
  %tobool = icmp ne i32 %5, 0, !dbg !10445
  br i1 %tobool, label %if.then, label %if.end129, !dbg !10446

if.then:                                          ; preds = %entry
  store i32 1, i32* %rv, align 4, !dbg !10447
  %6 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !10448
  %mmio2 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %6, i32 0, i32 2, !dbg !10449
  %7 = load i8*, i8** %mmio2, align 8, !dbg !10449
  %add.ptr3 = getelementptr i8, i8* %7, i64 16, !dbg !10450
  %call4 = call i32 @readl(i8* %add.ptr3) #12, !dbg !10451
  store i32 %call4, i32* %port_stat, align 4, !dbg !10452
  %8 = load i32, i32* %port_stat, align 4, !dbg !10453
  %cmp = icmp eq i32 %8, -1, !dbg !10453
  %lnot = xor i1 %cmp, true, !dbg !10453
  %lnot5 = xor i1 %lnot, true, !dbg !10453
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !10453
  %conv = sext i32 %lnot.ext to i64, !dbg !10453
  %tobool6 = icmp ne i64 %conv, 0, !dbg !10453
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !10455

if.then7:                                         ; preds = %if.then
  %9 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !10456
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %9, i32 0, i32 4, !dbg !10458
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !10458
  %call8 = call zeroext i1 @mtip_check_surprise_removal(%struct.pci_dev* %10) #12, !dbg !10459
  store i32 1, i32* %retval, align 4, !dbg !10460
  br label %return, !dbg !10460

if.end:                                           ; preds = %if.then
  %11 = load i32, i32* %port_stat, align 4, !dbg !10461
  %12 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !10462
  %mmio9 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %12, i32 0, i32 2, !dbg !10463
  %13 = load i8*, i8** %mmio9, align 8, !dbg !10463
  %add.ptr10 = getelementptr i8, i8* %13, i64 16, !dbg !10464
  call void @writel(i32 %11, i8* %add.ptr10) #12, !dbg !10465
  %14 = load i32, i32* %port_stat, align 4, !dbg !10466
  %and = and i32 %14, 8, !dbg !10466
  %tobool11 = icmp ne i32 %and, 0, !dbg !10466
  %lnot12 = xor i1 %tobool11, true, !dbg !10466
  %lnot14 = xor i1 %lnot12, true, !dbg !10466
  %lnot.ext15 = zext i1 %lnot14 to i32, !dbg !10466
  %conv16 = sext i32 %lnot.ext15 to i64, !dbg !10466
  %tobool17 = icmp ne i64 %conv16, 0, !dbg !10466
  br i1 %tobool17, label %if.then18, label %if.end93, !dbg !10467

if.then18:                                        ; preds = %if.end
  store i32 0, i32* %do_irq_enable, align 4, !dbg !10468
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !10469, metadata !DIExpression()), !dbg !10470
  %15 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !10470
  %irq_workers_active = getelementptr inbounds %struct.driver_data, %struct.driver_data* %15, i32 0, i32 18, !dbg !10470
  store %struct.atomic_t* %irq_workers_active, %struct.atomic_t** %v.addr.i, align 8
  %16 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !10471
  %17 = bitcast %struct.atomic_t* %16 to i8*, !dbg !10471
  store i8* %17, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %18 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10472
  %19 = load i64, i64* %size.addr.i.i, align 8, !dbg !10473
  %conv.i.i = trunc i64 %19 to i32, !dbg !10473
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %18, i32 %conv.i.i) #14, !dbg !10474
  %20 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10475
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !10475
  call void @kcsan_check_access(i8* %20, i64 %21, i32 4) #14, !dbg !10475
  %22 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !10476
  store %struct.atomic_t* %22, %struct.atomic_t** %v.addr.i1.i, align 8
  %23 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !10477
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %23, i32 0, i32 0, !dbg !10477
  %24 = load volatile i32, i32* %counter.i.i, align 4, !dbg !10477
  %cmp20 = icmp ne i32 %24, 0, !dbg !10470
  %lnot22 = xor i1 %cmp20, true, !dbg !10470
  %lnot24 = xor i1 %lnot22, true, !dbg !10470
  %lnot.ext25 = zext i1 %lnot24 to i32, !dbg !10470
  store i32 %lnot.ext25, i32* %__ret_warn_on, align 4, !dbg !10470
  %25 = load i32, i32* %__ret_warn_on, align 4, !dbg !10478
  %tobool26 = icmp ne i32 %25, 0, !dbg !10478
  %lnot27 = xor i1 %tobool26, true, !dbg !10478
  %lnot29 = xor i1 %lnot27, true, !dbg !10478
  %lnot.ext30 = zext i1 %lnot29 to i32, !dbg !10478
  %conv31 = sext i32 %lnot.ext30 to i64, !dbg !10478
  %tobool32 = icmp ne i64 %conv31, 0, !dbg !10478
  br i1 %tobool32, label %if.then33, label %if.end40, !dbg !10470

if.then33:                                        ; preds = %if.then18
  br label %do.body, !dbg !10478

do.body:                                          ; preds = %if.then33
  br label %do.body34, !dbg !10480

do.body34:                                        ; preds = %do.body
  br label %do.end, !dbg !10482

do.end:                                           ; preds = %do.body34
  br label %do.body35, !dbg !10480

do.body35:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.17, i64 0, i64 0), i32 763, i32 2307, i64 12) #11, !dbg !10484, !srcloc !10486
  br label %do.end36, !dbg !10484

do.end36:                                         ; preds = %do.body35
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 309) #11, !dbg !10487, !srcloc !10489
  br label %do.body37, !dbg !10480

do.body37:                                        ; preds = %do.end36
  br label %do.end38, !dbg !10490

do.end38:                                         ; preds = %do.body37
  br label %do.end39, !dbg !10480

do.end39:                                         ; preds = %do.end38
  br label %if.end40, !dbg !10480

if.end40:                                         ; preds = %do.end39, %if.then18
  %26 = load i32, i32* %__ret_warn_on, align 4, !dbg !10470
  %tobool41 = icmp ne i32 %26, 0, !dbg !10470
  %lnot42 = xor i1 %tobool41, true, !dbg !10470
  %lnot44 = xor i1 %lnot42, true, !dbg !10470
  %lnot.ext45 = zext i1 %lnot44 to i32, !dbg !10470
  %conv46 = sext i32 %lnot.ext45 to i64, !dbg !10470
  store i64 %conv46, i64* %tmp, align 8, !dbg !10478
  %27 = load i64, i64* %tmp, align 8, !dbg !10470
  store i32 0, i32* %i, align 4, !dbg !10492
  store i32 0, i32* %workers, align 4, !dbg !10494
  br label %for.cond, !dbg !10495

for.cond:                                         ; preds = %for.inc, %if.end40
  %28 = load i32, i32* %i, align 4, !dbg !10496
  %cmp47 = icmp slt i32 %28, 8, !dbg !10498
  br i1 %cmp47, label %for.body, label %for.end, !dbg !10499

for.body:                                         ; preds = %for.cond
  %29 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !10500
  %work = getelementptr inbounds %struct.driver_data, %struct.driver_data* %29, i32 0, i32 19, !dbg !10502
  %30 = load i32, i32* %i, align 4, !dbg !10503
  %idxprom = sext i32 %30 to i64, !dbg !10500
  %arrayidx = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work, i64 0, i64 %idxprom, !dbg !10500
  store %struct.mtip_work* %arrayidx, %struct.mtip_work** %twork, align 8, !dbg !10504
  %31 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !10505
  %completed = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %31, i32 0, i32 4, !dbg !10506
  %32 = load i32, i32* %i, align 4, !dbg !10507
  %idxprom49 = sext i32 %32 to i64, !dbg !10505
  %arrayidx50 = getelementptr [8 x i8*], [8 x i8*]* %completed, i64 0, i64 %idxprom49, !dbg !10505
  %33 = load i8*, i8** %arrayidx50, align 8, !dbg !10505
  %call51 = call i32 @readl(i8* %33) #12, !dbg !10508
  %34 = load %struct.mtip_work*, %struct.mtip_work** %twork, align 8, !dbg !10509
  %completed52 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %34, i32 0, i32 3, !dbg !10510
  store i32 %call51, i32* %completed52, align 4, !dbg !10511
  %35 = load %struct.mtip_work*, %struct.mtip_work** %twork, align 8, !dbg !10512
  %completed53 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %35, i32 0, i32 3, !dbg !10514
  %36 = load i32, i32* %completed53, align 4, !dbg !10514
  %tobool54 = icmp ne i32 %36, 0, !dbg !10512
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !10515

if.then55:                                        ; preds = %for.body
  %37 = load i32, i32* %workers, align 4, !dbg !10516
  %inc = add i32 %37, 1, !dbg !10516
  store i32 %inc, i32* %workers, align 4, !dbg !10516
  br label %if.end56, !dbg !10517

if.end56:                                         ; preds = %if.then55, %for.body
  br label %for.inc, !dbg !10518

for.inc:                                          ; preds = %if.end56
  %38 = load i32, i32* %i, align 4, !dbg !10519
  %inc57 = add i32 %38, 1, !dbg !10519
  store i32 %inc57, i32* %i, align 4, !dbg !10519
  br label %for.cond, !dbg !10520, !llvm.loop !10521

for.end:                                          ; preds = %for.cond
  %39 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !10523
  %irq_workers_active58 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %39, i32 0, i32 18, !dbg !10524
  %40 = load i32, i32* %workers, align 4, !dbg !10525
  store %struct.atomic_t* %irq_workers_active58, %struct.atomic_t** %v.addr.i144, align 8
  store i32 %40, i32* %i.addr.i, align 4
  %41 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i144, align 8, !dbg !10526
  %42 = bitcast %struct.atomic_t* %41 to i8*, !dbg !10526
  store i8* %42, i8** %v.addr.i.i142, align 8
  store i64 4, i64* %size.addr.i.i143, align 8
  %43 = load i8*, i8** %v.addr.i.i142, align 8, !dbg !10527
  %44 = load i64, i64* %size.addr.i.i143, align 8, !dbg !10528
  %conv.i.i145 = trunc i64 %44 to i32, !dbg !10528
  %call.i.i146 = call zeroext i1 @kasan_check_write(i8* %43, i32 %conv.i.i145) #14, !dbg !10529
  %45 = load i8*, i8** %v.addr.i.i142, align 8, !dbg !10530
  %46 = load i64, i64* %size.addr.i.i143, align 8, !dbg !10530
  call void @kcsan_check_access(i8* %45, i64 %46, i32 5) #14, !dbg !10530
  %47 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i144, align 8, !dbg !10531
  %48 = load i32, i32* %i.addr.i, align 4, !dbg !10532
  store %struct.atomic_t* %47, %struct.atomic_t** %v.addr.i1.i141, align 8
  store i32 %48, i32* %i.addr.i.i, align 4
  %49 = load i32, i32* %i.addr.i.i, align 4, !dbg !10533
  %50 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i141, align 8, !dbg !10533
  %counter.i.i147 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %50, i32 0, i32 0, !dbg !10533
  store volatile i32 %49, i32* %counter.i.i147, align 4, !dbg !10533
  %51 = load i32, i32* %workers, align 4, !dbg !10534
  %tobool59 = icmp ne i32 %51, 0, !dbg !10534
  br i1 %tobool59, label %if.then60, label %if.else, !dbg !10536

if.then60:                                        ; preds = %for.end
  store i32 1, i32* %i, align 4, !dbg !10537
  br label %for.cond61, !dbg !10540

for.cond61:                                       ; preds = %for.inc74, %if.then60
  %52 = load i32, i32* %i, align 4, !dbg !10541
  %cmp62 = icmp slt i32 %52, 8, !dbg !10543
  br i1 %cmp62, label %for.body64, label %for.end76, !dbg !10544

for.body64:                                       ; preds = %for.cond61
  %53 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !10545
  %work65 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %53, i32 0, i32 19, !dbg !10547
  %54 = load i32, i32* %i, align 4, !dbg !10548
  %idxprom66 = sext i32 %54 to i64, !dbg !10545
  %arrayidx67 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work65, i64 0, i64 %idxprom66, !dbg !10545
  store %struct.mtip_work* %arrayidx67, %struct.mtip_work** %twork, align 8, !dbg !10549
  %55 = load %struct.mtip_work*, %struct.mtip_work** %twork, align 8, !dbg !10550
  %completed68 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %55, i32 0, i32 3, !dbg !10552
  %56 = load i32, i32* %completed68, align 4, !dbg !10552
  %tobool69 = icmp ne i32 %56, 0, !dbg !10550
  br i1 %tobool69, label %if.then70, label %if.end73, !dbg !10553

if.then70:                                        ; preds = %for.body64
  %57 = load %struct.mtip_work*, %struct.mtip_work** %twork, align 8, !dbg !10554
  %cpu_binding = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %57, i32 0, i32 2, !dbg !10555
  %58 = load i32, i32* %cpu_binding, align 8, !dbg !10555
  %59 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !10556
  %isr_workq = getelementptr inbounds %struct.driver_data, %struct.driver_data* %59, i32 0, i32 17, !dbg !10557
  %60 = load %struct.workqueue_struct*, %struct.workqueue_struct** %isr_workq, align 8, !dbg !10557
  %61 = load %struct.mtip_work*, %struct.mtip_work** %twork, align 8, !dbg !10558
  %work71 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %61, i32 0, i32 0, !dbg !10559
  %call72 = call zeroext i1 @queue_work_on(i32 %58, %struct.workqueue_struct* %60, %struct.work_struct* %work71) #12, !dbg !10560
  br label %if.end73, !dbg !10560

if.end73:                                         ; preds = %if.then70, %for.body64
  br label %for.inc74, !dbg !10561

for.inc74:                                        ; preds = %if.end73
  %62 = load i32, i32* %i, align 4, !dbg !10562
  %inc75 = add i32 %62, 1, !dbg !10562
  store i32 %inc75, i32* %i, align 4, !dbg !10562
  br label %for.cond61, !dbg !10563, !llvm.loop !10564

for.end76:                                        ; preds = %for.cond61
  %63 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !10566
  %work77 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %63, i32 0, i32 19, !dbg !10566
  %arrayidx78 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work77, i64 0, i64 0, !dbg !10566
  %completed79 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx78, i32 0, i32 3, !dbg !10566
  %64 = load i32, i32* %completed79, align 4, !dbg !10566
  %tobool80 = icmp ne i32 %64, 0, !dbg !10566
  %lnot81 = xor i1 %tobool80, true, !dbg !10566
  %lnot83 = xor i1 %lnot81, true, !dbg !10566
  %lnot.ext84 = zext i1 %lnot83 to i32, !dbg !10566
  %conv85 = sext i32 %lnot.ext84 to i64, !dbg !10566
  %tobool86 = icmp ne i64 %conv85, 0, !dbg !10566
  br i1 %tobool86, label %if.then87, label %if.end91, !dbg !10568

if.then87:                                        ; preds = %for.end76
  %65 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !10569
  %66 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !10570
  %work88 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %66, i32 0, i32 19, !dbg !10571
  %arrayidx89 = getelementptr [8 x %struct.mtip_work], [8 x %struct.mtip_work]* %work88, i64 0, i64 0, !dbg !10570
  %completed90 = getelementptr inbounds %struct.mtip_work, %struct.mtip_work* %arrayidx89, i32 0, i32 3, !dbg !10572
  %67 = load i32, i32* %completed90, align 4, !dbg !10572
  call void @mtip_workq_sdbfx(%struct.mtip_port* %65, i32 0, i32 %67) #12, !dbg !10573
  br label %if.end91, !dbg !10573

if.end91:                                         ; preds = %if.then87, %for.end76
  br label %if.end92, !dbg !10574

if.else:                                          ; preds = %for.end
  store i32 1, i32* %do_irq_enable, align 4, !dbg !10575
  br label %if.end92

if.end92:                                         ; preds = %if.else, %if.end91
  br label %if.end93, !dbg !10577

if.end93:                                         ; preds = %if.end92, %if.end
  %68 = load i32, i32* %port_stat, align 4, !dbg !10578
  %and94 = and i32 %68, 2109734992, !dbg !10578
  %tobool95 = icmp ne i32 %and94, 0, !dbg !10578
  %lnot96 = xor i1 %tobool95, true, !dbg !10578
  %lnot98 = xor i1 %lnot96, true, !dbg !10578
  %lnot.ext99 = zext i1 %lnot98 to i32, !dbg !10578
  %conv100 = sext i32 %lnot.ext99 to i64, !dbg !10578
  %tobool101 = icmp ne i64 %conv100, 0, !dbg !10578
  br i1 %tobool101, label %if.then102, label %if.end117, !dbg !10580

if.then102:                                       ; preds = %if.end93
  %69 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !10581
  %pdev103 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %69, i32 0, i32 4, !dbg !10581
  %70 = load %struct.pci_dev*, %struct.pci_dev** %pdev103, align 8, !dbg !10581
  %call104 = call zeroext i1 @mtip_check_surprise_removal(%struct.pci_dev* %70) #12, !dbg !10581
  %lnot105 = xor i1 %call104, true, !dbg !10581
  %lnot107 = xor i1 %lnot105, true, !dbg !10581
  %lnot.ext108 = zext i1 %lnot107 to i32, !dbg !10581
  %conv109 = sext i32 %lnot.ext108 to i64, !dbg !10581
  %tobool110 = icmp ne i64 %conv109, 0, !dbg !10581
  br i1 %tobool110, label %if.then111, label %if.end112, !dbg !10584

if.then111:                                       ; preds = %if.then102
  store i32 1, i32* %retval, align 4, !dbg !10585
  br label %return, !dbg !10585

if.end112:                                        ; preds = %if.then102
  %71 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !10587
  %dd_flag = getelementptr inbounds %struct.driver_data, %struct.driver_data* %71, i32 0, i32 11, !dbg !10589
  %call113 = call zeroext i1 @test_bit(i64 1, i64* %dd_flag) #12, !dbg !10590
  br i1 %call113, label %if.then114, label %if.end115, !dbg !10591

if.then114:                                       ; preds = %if.end112
  %72 = load i32, i32* %rv, align 4, !dbg !10592
  store i32 %72, i32* %retval, align 4, !dbg !10593
  br label %return, !dbg !10593

if.end115:                                        ; preds = %if.end112
  %73 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !10594
  %74 = load i32, i32* %port_stat, align 4, !dbg !10595
  %and116 = and i32 %74, 2109734992, !dbg !10596
  call void @mtip_process_errors(%struct.driver_data* %73, i32 %and116) #12, !dbg !10597
  br label %if.end117, !dbg !10598

if.end117:                                        ; preds = %if.end115, %if.end93
  %75 = load i32, i32* %port_stat, align 4, !dbg !10599
  %and118 = and i32 %75, 3, !dbg !10599
  %tobool119 = icmp ne i32 %and118, 0, !dbg !10599
  %lnot120 = xor i1 %tobool119, true, !dbg !10599
  %lnot122 = xor i1 %lnot120, true, !dbg !10599
  %lnot.ext123 = zext i1 %lnot122 to i32, !dbg !10599
  %conv124 = sext i32 %lnot.ext123 to i64, !dbg !10599
  %tobool125 = icmp ne i64 %conv124, 0, !dbg !10599
  br i1 %tobool125, label %if.then126, label %if.end128, !dbg !10601

if.then126:                                       ; preds = %if.end117
  %76 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !10602
  %77 = load i32, i32* %port_stat, align 4, !dbg !10603
  %and127 = and i32 %77, 3, !dbg !10604
  call void @mtip_process_legacy(%struct.driver_data* %76, i32 %and127) #12, !dbg !10605
  br label %if.end128, !dbg !10605

if.end128:                                        ; preds = %if.then126, %if.end117
  br label %if.end129, !dbg !10606

if.end129:                                        ; preds = %if.end128, %entry
  %78 = load i32, i32* %do_irq_enable, align 4, !dbg !10607
  %tobool130 = icmp ne i32 %78, 0, !dbg !10607
  %lnot131 = xor i1 %tobool130, true, !dbg !10607
  %lnot133 = xor i1 %lnot131, true, !dbg !10607
  %lnot.ext134 = zext i1 %lnot133 to i32, !dbg !10607
  %conv135 = sext i32 %lnot.ext134 to i64, !dbg !10607
  %tobool136 = icmp ne i64 %conv135, 0, !dbg !10607
  br i1 %tobool136, label %if.then137, label %if.end140, !dbg !10609

if.then137:                                       ; preds = %if.end129
  %79 = load i32, i32* %hba_stat, align 4, !dbg !10610
  %80 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !10611
  %mmio138 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %80, i32 0, i32 0, !dbg !10612
  %81 = load i8*, i8** %mmio138, align 8, !dbg !10612
  %add.ptr139 = getelementptr i8, i8* %81, i64 8, !dbg !10613
  call void @writel(i32 %79, i8* %add.ptr139) #12, !dbg !10614
  br label %if.end140, !dbg !10614

if.end140:                                        ; preds = %if.then137, %if.end129
  %82 = load i32, i32* %rv, align 4, !dbg !10615
  store i32 %82, i32* %retval, align 4, !dbg !10616
  br label %return, !dbg !10616

return:                                           ; preds = %if.end140, %if.then114, %if.then111, %if.then7
  %83 = load i32, i32* %retval, align 4, !dbg !10617
  ret i32 %83, !dbg !10617
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_work_on(i32, %struct.workqueue_struct*, %struct.work_struct*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mtip_process_errors(%struct.driver_data* %dd, i32 %port_stat) #2 !dbg !10618 {
entry:
  %dd.addr = alloca %struct.driver_data*, align 8
  %port_stat.addr = alloca i32, align 4
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !10621, metadata !DIExpression()), !dbg !10622
  store i32 %port_stat, i32* %port_stat.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port_stat.addr, metadata !10623, metadata !DIExpression()), !dbg !10624
  %0 = load i32, i32* %port_stat.addr, align 4, !dbg !10625
  %and = and i32 %0, 64, !dbg !10625
  %tobool = icmp ne i32 %and, 0, !dbg !10625
  %lnot = xor i1 %tobool, true, !dbg !10625
  %lnot1 = xor i1 %lnot, true, !dbg !10625
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10625
  %conv = sext i32 %lnot.ext to i64, !dbg !10625
  %tobool2 = icmp ne i64 %conv, 0, !dbg !10625
  br i1 %tobool2, label %if.then, label %if.end, !dbg !10627

if.then:                                          ; preds = %entry
  %1 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !10628
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %1, i32 0, i32 4, !dbg !10628
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !10628
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !10628
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.37, i64 0, i64 0)) #13, !dbg !10628
  %3 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !10630
  %port = getelementptr inbounds %struct.driver_data, %struct.driver_data* %3, i32 0, i32 7, !dbg !10631
  %4 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !10631
  %mmio = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %4, i32 0, i32 2, !dbg !10632
  %5 = load i8*, i8** %mmio, align 8, !dbg !10632
  %add.ptr = getelementptr i8, i8* %5, i64 48, !dbg !10633
  call void @writel(i32 67108864, i8* %add.ptr) #12, !dbg !10634
  br label %if.end, !dbg !10635

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %port_stat.addr, align 4, !dbg !10636
  %and3 = and i32 %6, 4194304, !dbg !10636
  %tobool4 = icmp ne i32 %and3, 0, !dbg !10636
  %lnot5 = xor i1 %tobool4, true, !dbg !10636
  %lnot7 = xor i1 %lnot5, true, !dbg !10636
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !10636
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !10636
  %tobool10 = icmp ne i64 %conv9, 0, !dbg !10636
  br i1 %tobool10, label %if.then11, label %if.end17, !dbg !10638

if.then11:                                        ; preds = %if.end
  %7 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !10639
  %pdev12 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %7, i32 0, i32 4, !dbg !10639
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev12, align 8, !dbg !10639
  %dev13 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 41, !dbg !10639
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev13, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.38, i64 0, i64 0)) #13, !dbg !10639
  %9 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !10641
  %port14 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %9, i32 0, i32 7, !dbg !10642
  %10 = load %struct.mtip_port*, %struct.mtip_port** %port14, align 8, !dbg !10642
  %mmio15 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %10, i32 0, i32 2, !dbg !10643
  %11 = load i8*, i8** %mmio15, align 8, !dbg !10643
  %add.ptr16 = getelementptr i8, i8* %11, i64 48, !dbg !10644
  call void @writel(i32 65536, i8* %add.ptr16) #12, !dbg !10645
  br label %if.end17, !dbg !10646

if.end17:                                         ; preds = %if.then11, %if.end
  %12 = load i32, i32* %port_stat.addr, align 4, !dbg !10647
  %and18 = and i32 %12, -1212153932, !dbg !10647
  %tobool19 = icmp ne i32 %and18, 0, !dbg !10647
  %lnot20 = xor i1 %tobool19, true, !dbg !10647
  %lnot22 = xor i1 %lnot20, true, !dbg !10647
  %lnot.ext23 = zext i1 %lnot22 to i32, !dbg !10647
  %conv24 = sext i32 %lnot.ext23 to i64, !dbg !10647
  %tobool25 = icmp ne i64 %conv24, 0, !dbg !10647
  br i1 %tobool25, label %if.then26, label %if.end33, !dbg !10649

if.then26:                                        ; preds = %if.end17
  %13 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !10650
  %pdev27 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %13, i32 0, i32 4, !dbg !10650
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pdev27, align 8, !dbg !10650
  %dev28 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 41, !dbg !10650
  %15 = load i32, i32* %port_stat.addr, align 4, !dbg !10650
  %and29 = and i32 %15, -1212153932, !dbg !10650
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev28, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.39, i64 0, i64 0), i32 %and29) #13, !dbg !10650
  %16 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !10652
  %pdev30 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %16, i32 0, i32 4, !dbg !10654
  %17 = load %struct.pci_dev*, %struct.pci_dev** %pdev30, align 8, !dbg !10654
  %call = call zeroext i1 @mtip_check_surprise_removal(%struct.pci_dev* %17) #12, !dbg !10655
  br i1 %call, label %if.then31, label %if.end32, !dbg !10656

if.then31:                                        ; preds = %if.then26
  br label %if.end45, !dbg !10657

if.end32:                                         ; preds = %if.then26
  br label %if.end33, !dbg !10658

if.end33:                                         ; preds = %if.end32, %if.end17
  %18 = load i32, i32* %port_stat.addr, align 4, !dbg !10659
  %and34 = and i32 %18, 1207959552, !dbg !10659
  %tobool35 = icmp ne i32 %and34, 0, !dbg !10659
  %lnot36 = xor i1 %tobool35, true, !dbg !10659
  %lnot38 = xor i1 %lnot36, true, !dbg !10659
  %lnot.ext39 = zext i1 %lnot38 to i32, !dbg !10659
  %conv40 = sext i32 %lnot.ext39 to i64, !dbg !10659
  %tobool41 = icmp ne i64 %conv40, 0, !dbg !10659
  br i1 %tobool41, label %if.then42, label %if.end45, !dbg !10661

if.then42:                                        ; preds = %if.end33
  %19 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !10662
  %port43 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %19, i32 0, i32 7, !dbg !10664
  %20 = load %struct.mtip_port*, %struct.mtip_port** %port43, align 8, !dbg !10664
  %flags = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %20, i32 0, i32 22, !dbg !10665
  call void @set_bit(i64 1, i64* %flags) #12, !dbg !10666
  %21 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !10667
  %port44 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %21, i32 0, i32 7, !dbg !10667
  %22 = load %struct.mtip_port*, %struct.mtip_port** %port44, align 8, !dbg !10667
  %svc_wait = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %22, i32 0, i32 21, !dbg !10667
  call void @__wake_up(%struct.wait_queue_head* %svc_wait, i32 1, i32 1, i8* null) #12, !dbg !10667
  br label %if.end45, !dbg !10668

if.end45:                                         ; preds = %if.then31, %if.then42, %if.end33
  ret void, !dbg !10669
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mtip_process_legacy(%struct.driver_data* %dd, i32 %port_stat) #2 !dbg !10670 {
entry:
  %dd.addr = alloca %struct.driver_data*, align 8
  %port_stat.addr = alloca i32, align 4
  %port = alloca %struct.mtip_port*, align 8
  %cmd = alloca %struct.mtip_cmd*, align 8
  %group = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !10671, metadata !DIExpression()), !dbg !10672
  store i32 %port_stat, i32* %port_stat.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port_stat.addr, metadata !10673, metadata !DIExpression()), !dbg !10674
  call void @llvm.dbg.declare(metadata %struct.mtip_port** %port, metadata !10675, metadata !DIExpression()), !dbg !10676
  %0 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !10677
  %port1 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %0, i32 0, i32 7, !dbg !10678
  %1 = load %struct.mtip_port*, %struct.mtip_port** %port1, align 8, !dbg !10678
  store %struct.mtip_port* %1, %struct.mtip_port** %port, align 8, !dbg !10676
  call void @llvm.dbg.declare(metadata %struct.mtip_cmd** %cmd, metadata !10679, metadata !DIExpression()), !dbg !10680
  %2 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !10681
  %call = call %struct.mtip_cmd* @mtip_cmd_from_tag(%struct.driver_data* %2, i32 0) #12, !dbg !10682
  store %struct.mtip_cmd* %call, %struct.mtip_cmd** %cmd, align 8, !dbg !10680
  %3 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !10683
  %flags = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %3, i32 0, i32 22, !dbg !10685
  %call2 = call zeroext i1 @test_bit(i64 0, i64* %flags) #12, !dbg !10686
  br i1 %call2, label %land.lhs.true, label %if.end6, !dbg !10687

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.mtip_cmd*, %struct.mtip_cmd** %cmd, align 8, !dbg !10688
  %tobool = icmp ne %struct.mtip_cmd* %4, null, !dbg !10688
  br i1 %tobool, label %if.then, label %if.end6, !dbg !10689

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %group, metadata !10690, metadata !DIExpression()), !dbg !10692
  store i32 0, i32* %group, align 4, !dbg !10692
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10693, metadata !DIExpression()), !dbg !10694
  %5 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !10695
  %cmd_issue = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %5, i32 0, i32 5, !dbg !10696
  %6 = load i32, i32* %group, align 4, !dbg !10697
  %idxprom = sext i32 %6 to i64, !dbg !10695
  %arrayidx = getelementptr [8 x i8*], [8 x i8*]* %cmd_issue, i64 0, i64 %idxprom, !dbg !10695
  %7 = load i8*, i8** %arrayidx, align 8, !dbg !10695
  %call3 = call i32 @readl(i8* %7) #12, !dbg !10698
  store i32 %call3, i32* %status, align 4, !dbg !10694
  %8 = load i32, i32* %status, align 4, !dbg !10699
  %and = and i32 %8, 1, !dbg !10701
  %tobool4 = icmp ne i32 %and, 0, !dbg !10701
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !10702

if.then5:                                         ; preds = %if.then
  %9 = load %struct.mtip_cmd*, %struct.mtip_cmd** %cmd, align 8, !dbg !10703
  call void @mtip_complete_command(%struct.mtip_cmd* %9, i8 zeroext 0) #12, !dbg !10704
  br label %if.end, !dbg !10704

if.end:                                           ; preds = %if.then5, %if.then
  br label %if.end6, !dbg !10705

if.end6:                                          ; preds = %if.end, %land.lhs.true, %entry
  ret void, !dbg !10706
}

; Function Attrs: noredzone
declare dso_local void @__wake_up(%struct.wait_queue_head*, i32, i32, i8*) #1

; Function Attrs: noredzone
declare dso_local i32 @ida_alloc_range(%struct.ida*, i32, i32, i32) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_block_open(%struct.block_device* %dev, i32 %mode) #2 !dbg !10707 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.block_device*, align 8
  %mode.addr = alloca i32, align 4
  %dd = alloca %struct.driver_data*, align 8
  store %struct.block_device* %dev, %struct.block_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.block_device** %dev.addr, metadata !10708, metadata !DIExpression()), !dbg !10709
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !10710, metadata !DIExpression()), !dbg !10711
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd, metadata !10712, metadata !DIExpression()), !dbg !10713
  %0 = load %struct.block_device*, %struct.block_device** %dev.addr, align 8, !dbg !10714
  %tobool = icmp ne %struct.block_device* %0, null, !dbg !10714
  br i1 %tobool, label %land.lhs.true, label %if.end7, !dbg !10716

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.block_device*, %struct.block_device** %dev.addr, align 8, !dbg !10717
  %bd_disk = getelementptr inbounds %struct.block_device, %struct.block_device* %1, i32 0, i32 15, !dbg !10718
  %2 = load %struct.gendisk*, %struct.gendisk** %bd_disk, align 8, !dbg !10718
  %tobool1 = icmp ne %struct.gendisk* %2, null, !dbg !10717
  br i1 %tobool1, label %if.then, label %if.end7, !dbg !10719

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.block_device*, %struct.block_device** %dev.addr, align 8, !dbg !10720
  %bd_disk2 = getelementptr inbounds %struct.block_device, %struct.block_device* %3, i32 0, i32 15, !dbg !10722
  %4 = load %struct.gendisk*, %struct.gendisk** %bd_disk2, align 8, !dbg !10722
  %private_data = getelementptr inbounds %struct.gendisk, %struct.gendisk* %4, i32 0, i32 10, !dbg !10723
  %5 = load i8*, i8** %private_data, align 8, !dbg !10723
  %6 = bitcast i8* %5 to %struct.driver_data*, !dbg !10724
  store %struct.driver_data* %6, %struct.driver_data** %dd, align 8, !dbg !10725
  %7 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !10726
  %tobool3 = icmp ne %struct.driver_data* %7, null, !dbg !10726
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !10728

if.then4:                                         ; preds = %if.then
  %8 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !10729
  %dd_flag = getelementptr inbounds %struct.driver_data, %struct.driver_data* %8, i32 0, i32 11, !dbg !10732
  %call = call zeroext i1 @test_bit(i64 9, i64* %dd_flag) #12, !dbg !10733
  br i1 %call, label %if.then5, label %if.end, !dbg !10734

if.then5:                                         ; preds = %if.then4
  store i32 -19, i32* %retval, align 4, !dbg !10735
  br label %return, !dbg !10735

if.end:                                           ; preds = %if.then4
  store i32 0, i32* %retval, align 4, !dbg !10737
  br label %return, !dbg !10737

if.end6:                                          ; preds = %if.then
  br label %if.end7, !dbg !10738

if.end7:                                          ; preds = %if.end6, %land.lhs.true, %entry
  store i32 -19, i32* %retval, align 4, !dbg !10739
  br label %return, !dbg !10739

return:                                           ; preds = %if.end7, %if.end, %if.then5
  %9 = load i32, i32* %retval, align 4, !dbg !10740
  ret i32 %9, !dbg !10740
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mtip_block_release(%struct.gendisk* %disk, i32 %mode) #2 !dbg !10741 {
entry:
  %disk.addr = alloca %struct.gendisk*, align 8
  %mode.addr = alloca i32, align 4
  store %struct.gendisk* %disk, %struct.gendisk** %disk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gendisk** %disk.addr, metadata !10742, metadata !DIExpression()), !dbg !10743
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !10744, metadata !DIExpression()), !dbg !10745
  ret void, !dbg !10746
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_block_ioctl(%struct.block_device* %dev, i32 %mode, i32 %cmd, i64 %arg) #2 !dbg !10747 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.block_device*, align 8
  %mode.addr = alloca i32, align 4
  %cmd.addr = alloca i32, align 4
  %arg.addr = alloca i64, align 8
  %dd = alloca %struct.driver_data*, align 8
  store %struct.block_device* %dev, %struct.block_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.block_device** %dev.addr, metadata !10748, metadata !DIExpression()), !dbg !10749
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !10750, metadata !DIExpression()), !dbg !10751
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !10752, metadata !DIExpression()), !dbg !10753
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !10754, metadata !DIExpression()), !dbg !10755
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd, metadata !10756, metadata !DIExpression()), !dbg !10757
  %0 = load %struct.block_device*, %struct.block_device** %dev.addr, align 8, !dbg !10758
  %bd_disk = getelementptr inbounds %struct.block_device, %struct.block_device* %0, i32 0, i32 15, !dbg !10759
  %1 = load %struct.gendisk*, %struct.gendisk** %bd_disk, align 8, !dbg !10759
  %private_data = getelementptr inbounds %struct.gendisk, %struct.gendisk* %1, i32 0, i32 10, !dbg !10760
  %2 = load i8*, i8** %private_data, align 8, !dbg !10760
  %3 = bitcast i8* %2 to %struct.driver_data*, !dbg !10758
  store %struct.driver_data* %3, %struct.driver_data** %dd, align 8, !dbg !10757
  %call = call zeroext i1 @capable(i32 21) #12, !dbg !10761
  br i1 %call, label %if.end, label %if.then, !dbg !10763

if.then:                                          ; preds = %entry
  store i32 -13, i32* %retval, align 4, !dbg !10764
  br label %return, !dbg !10764

if.end:                                           ; preds = %entry
  %4 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !10765
  %tobool = icmp ne %struct.driver_data* %4, null, !dbg !10765
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !10767

if.then1:                                         ; preds = %if.end
  store i32 -25, i32* %retval, align 4, !dbg !10768
  br label %return, !dbg !10768

if.end2:                                          ; preds = %if.end
  %5 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !10769
  %dd_flag = getelementptr inbounds %struct.driver_data, %struct.driver_data* %5, i32 0, i32 11, !dbg !10769
  %call3 = call zeroext i1 @test_bit(i64 1, i64* %dd_flag) #12, !dbg !10769
  %lnot = xor i1 %call3, true, !dbg !10769
  %lnot4 = xor i1 %lnot, true, !dbg !10769
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !10769
  %conv = sext i32 %lnot.ext to i64, !dbg !10769
  %tobool5 = icmp ne i64 %conv, 0, !dbg !10769
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !10771

if.then6:                                         ; preds = %if.end2
  store i32 -25, i32* %retval, align 4, !dbg !10772
  br label %return, !dbg !10772

if.end7:                                          ; preds = %if.end2
  %6 = load i32, i32* %cmd.addr, align 4, !dbg !10773
  switch i32 %6, label %sw.default [
    i32 4705, label %sw.bb
  ], !dbg !10774

sw.bb:                                            ; preds = %if.end7
  store i32 -25, i32* %retval, align 4, !dbg !10775
  br label %return, !dbg !10775

sw.default:                                       ; preds = %if.end7
  %7 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !10777
  %8 = load i32, i32* %cmd.addr, align 4, !dbg !10778
  %9 = load i64, i64* %arg.addr, align 8, !dbg !10779
  %call8 = call i32 @mtip_hw_ioctl(%struct.driver_data* %7, i32 %8, i64 %9) #12, !dbg !10780
  store i32 %call8, i32* %retval, align 4, !dbg !10781
  br label %return, !dbg !10781

return:                                           ; preds = %sw.default, %sw.bb, %if.then6, %if.then1, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !10782
  ret i32 %10, !dbg !10782
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_block_getgeo(%struct.block_device* %dev, %struct.hd_geometry* %geo) #2 !dbg !10783 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.block_device*, align 8
  %geo.addr = alloca %struct.hd_geometry*, align 8
  %dd = alloca %struct.driver_data*, align 8
  %capacity = alloca i64, align 8
  %__base = alloca i32, align 4
  %__rem = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.block_device* %dev, %struct.block_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.block_device** %dev.addr, metadata !10784, metadata !DIExpression()), !dbg !10785
  store %struct.hd_geometry* %geo, %struct.hd_geometry** %geo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hd_geometry** %geo.addr, metadata !10786, metadata !DIExpression()), !dbg !10787
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd, metadata !10788, metadata !DIExpression()), !dbg !10789
  %0 = load %struct.block_device*, %struct.block_device** %dev.addr, align 8, !dbg !10790
  %bd_disk = getelementptr inbounds %struct.block_device, %struct.block_device* %0, i32 0, i32 15, !dbg !10791
  %1 = load %struct.gendisk*, %struct.gendisk** %bd_disk, align 8, !dbg !10791
  %private_data = getelementptr inbounds %struct.gendisk, %struct.gendisk* %1, i32 0, i32 10, !dbg !10792
  %2 = load i8*, i8** %private_data, align 8, !dbg !10792
  %3 = bitcast i8* %2 to %struct.driver_data*, !dbg !10790
  store %struct.driver_data* %3, %struct.driver_data** %dd, align 8, !dbg !10789
  call void @llvm.dbg.declare(metadata i64* %capacity, metadata !10793, metadata !DIExpression()), !dbg !10794
  %4 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !10795
  %tobool = icmp ne %struct.driver_data* %4, null, !dbg !10795
  br i1 %tobool, label %if.end, label %if.then, !dbg !10797

if.then:                                          ; preds = %entry
  store i32 -25, i32* %retval, align 4, !dbg !10798
  br label %return, !dbg !10798

if.end:                                           ; preds = %entry
  %5 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !10799
  %call = call zeroext i1 @mtip_hw_get_capacity(%struct.driver_data* %5, i64* %capacity) #12, !dbg !10801
  br i1 %call, label %if.end3, label %if.then1, !dbg !10802

if.then1:                                         ; preds = %if.end
  %6 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !10803
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %6, i32 0, i32 4, !dbg !10803
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !10803
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 41, !dbg !10803
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.54, i64 0, i64 0)) #13, !dbg !10803
  store i32 -25, i32* %retval, align 4, !dbg !10805
  br label %return, !dbg !10805

if.end3:                                          ; preds = %if.end
  %8 = load %struct.hd_geometry*, %struct.hd_geometry** %geo.addr, align 8, !dbg !10806
  %heads = getelementptr inbounds %struct.hd_geometry, %struct.hd_geometry* %8, i32 0, i32 0, !dbg !10807
  store i8 -32, i8* %heads, align 8, !dbg !10808
  %9 = load %struct.hd_geometry*, %struct.hd_geometry** %geo.addr, align 8, !dbg !10809
  %sectors = getelementptr inbounds %struct.hd_geometry, %struct.hd_geometry* %9, i32 0, i32 1, !dbg !10810
  store i8 56, i8* %sectors, align 1, !dbg !10811
  call void @llvm.dbg.declare(metadata i32* %__base, metadata !10812, metadata !DIExpression()), !dbg !10814
  %10 = load %struct.hd_geometry*, %struct.hd_geometry** %geo.addr, align 8, !dbg !10814
  %heads4 = getelementptr inbounds %struct.hd_geometry, %struct.hd_geometry* %10, i32 0, i32 0, !dbg !10814
  %11 = load i8, i8* %heads4, align 8, !dbg !10814
  %conv = zext i8 %11 to i32, !dbg !10814
  %12 = load %struct.hd_geometry*, %struct.hd_geometry** %geo.addr, align 8, !dbg !10814
  %sectors5 = getelementptr inbounds %struct.hd_geometry, %struct.hd_geometry* %12, i32 0, i32 1, !dbg !10814
  %13 = load i8, i8* %sectors5, align 1, !dbg !10814
  %conv6 = zext i8 %13 to i32, !dbg !10814
  %mul = mul i32 %conv, %conv6, !dbg !10814
  store i32 %mul, i32* %__base, align 4, !dbg !10814
  call void @llvm.dbg.declare(metadata i32* %__rem, metadata !10815, metadata !DIExpression()), !dbg !10814
  %14 = load i64, i64* %capacity, align 8, !dbg !10814
  %15 = load i32, i32* %__base, align 4, !dbg !10814
  %conv7 = zext i32 %15 to i64, !dbg !10814
  %rem = urem i64 %14, %conv7, !dbg !10814
  %conv8 = trunc i64 %rem to i32, !dbg !10814
  store i32 %conv8, i32* %__rem, align 4, !dbg !10814
  %16 = load i64, i64* %capacity, align 8, !dbg !10814
  %17 = load i32, i32* %__base, align 4, !dbg !10814
  %conv9 = zext i32 %17 to i64, !dbg !10814
  %div = udiv i64 %16, %conv9, !dbg !10814
  store i64 %div, i64* %capacity, align 8, !dbg !10814
  %18 = load i32, i32* %__rem, align 4, !dbg !10814
  store i32 %18, i32* %tmp, align 4, !dbg !10814
  %19 = load i32, i32* %tmp, align 4, !dbg !10814
  %20 = load i64, i64* %capacity, align 8, !dbg !10816
  %conv10 = trunc i64 %20 to i16, !dbg !10816
  %21 = load %struct.hd_geometry*, %struct.hd_geometry** %geo.addr, align 8, !dbg !10817
  %cylinders = getelementptr inbounds %struct.hd_geometry, %struct.hd_geometry* %21, i32 0, i32 2, !dbg !10818
  store i16 %conv10, i16* %cylinders, align 2, !dbg !10819
  store i32 0, i32* %retval, align 4, !dbg !10820
  br label %return, !dbg !10820

return:                                           ; preds = %if.end3, %if.then1, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !10821
  ret i32 %22, !dbg !10821
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @capable(i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_hw_ioctl(%struct.driver_data* %dd, i32 %cmd, i64 %arg) #2 !dbg !10822 {
entry:
  %retval.i.i299 = alloca i1, align 1
  %addr.addr.i.i300 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i300, metadata !10825, metadata !DIExpression()), !dbg !10830
  %bytes.addr.i.i301 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i301, metadata !10841, metadata !DIExpression()), !dbg !10842
  %is_source.addr.i.i302 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i302, metadata !10843, metadata !DIExpression()), !dbg !10844
  %sz.i.i303 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i303, metadata !10845, metadata !DIExpression()), !dbg !10846
  %__ret_warn_on.i.i304 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i304, metadata !10847, metadata !DIExpression()), !dbg !10850
  %tmp.i.i305 = alloca i64, align 8
  %to.addr.i306 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i306, metadata !10851, metadata !DIExpression()), !dbg !10852
  %from.addr.i307 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i307, metadata !10853, metadata !DIExpression()), !dbg !10854
  %n.addr.i308 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i308, metadata !10855, metadata !DIExpression()), !dbg !10856
  %retval.i.i248 = alloca i1, align 1
  %addr.addr.i.i249 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i249, metadata !10825, metadata !DIExpression()), !dbg !10857
  %bytes.addr.i.i250 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i250, metadata !10841, metadata !DIExpression()), !dbg !10863
  %is_source.addr.i.i251 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i251, metadata !10843, metadata !DIExpression()), !dbg !10864
  %sz.i.i252 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i252, metadata !10845, metadata !DIExpression()), !dbg !10865
  %__ret_warn_on.i.i253 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i253, metadata !10847, metadata !DIExpression()), !dbg !10866
  %tmp.i.i254 = alloca i64, align 8
  %to.addr.i255 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i255, metadata !10867, metadata !DIExpression()), !dbg !10868
  %from.addr.i256 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i256, metadata !10869, metadata !DIExpression()), !dbg !10870
  %n.addr.i257 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i257, metadata !10871, metadata !DIExpression()), !dbg !10872
  %retval.i.i197 = alloca i1, align 1
  %addr.addr.i.i198 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i198, metadata !10825, metadata !DIExpression()), !dbg !10873
  %bytes.addr.i.i199 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i199, metadata !10841, metadata !DIExpression()), !dbg !10878
  %is_source.addr.i.i200 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i200, metadata !10843, metadata !DIExpression()), !dbg !10879
  %sz.i.i201 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i201, metadata !10845, metadata !DIExpression()), !dbg !10880
  %__ret_warn_on.i.i202 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i202, metadata !10847, metadata !DIExpression()), !dbg !10881
  %tmp.i.i203 = alloca i64, align 8
  %to.addr.i204 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i204, metadata !10851, metadata !DIExpression()), !dbg !10882
  %from.addr.i205 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i205, metadata !10853, metadata !DIExpression()), !dbg !10883
  %n.addr.i206 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i206, metadata !10855, metadata !DIExpression()), !dbg !10884
  %retval.i.i146 = alloca i1, align 1
  %addr.addr.i.i147 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i147, metadata !10825, metadata !DIExpression()), !dbg !10885
  %bytes.addr.i.i148 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i148, metadata !10841, metadata !DIExpression()), !dbg !10889
  %is_source.addr.i.i149 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i149, metadata !10843, metadata !DIExpression()), !dbg !10890
  %sz.i.i150 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i150, metadata !10845, metadata !DIExpression()), !dbg !10891
  %__ret_warn_on.i.i151 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i151, metadata !10847, metadata !DIExpression()), !dbg !10892
  %tmp.i.i152 = alloca i64, align 8
  %to.addr.i153 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i153, metadata !10867, metadata !DIExpression()), !dbg !10893
  %from.addr.i154 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i154, metadata !10869, metadata !DIExpression()), !dbg !10894
  %n.addr.i155 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i155, metadata !10871, metadata !DIExpression()), !dbg !10895
  %retval.i.i95 = alloca i1, align 1
  %addr.addr.i.i96 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i96, metadata !10825, metadata !DIExpression()), !dbg !10896
  %bytes.addr.i.i97 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i97, metadata !10841, metadata !DIExpression()), !dbg !10901
  %is_source.addr.i.i98 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i98, metadata !10843, metadata !DIExpression()), !dbg !10902
  %sz.i.i99 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i99, metadata !10845, metadata !DIExpression()), !dbg !10903
  %__ret_warn_on.i.i100 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i100, metadata !10847, metadata !DIExpression()), !dbg !10904
  %tmp.i.i101 = alloca i64, align 8
  %to.addr.i102 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i102, metadata !10851, metadata !DIExpression()), !dbg !10905
  %from.addr.i103 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i103, metadata !10853, metadata !DIExpression()), !dbg !10906
  %n.addr.i104 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i104, metadata !10855, metadata !DIExpression()), !dbg !10907
  %retval.i.i45 = alloca i1, align 1
  %addr.addr.i.i46 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i46, metadata !10825, metadata !DIExpression()), !dbg !10908
  %bytes.addr.i.i47 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i47, metadata !10841, metadata !DIExpression()), !dbg !10912
  %is_source.addr.i.i48 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i48, metadata !10843, metadata !DIExpression()), !dbg !10913
  %sz.i.i49 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i49, metadata !10845, metadata !DIExpression()), !dbg !10914
  %__ret_warn_on.i.i50 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i50, metadata !10847, metadata !DIExpression()), !dbg !10915
  %tmp.i.i51 = alloca i64, align 8
  %to.addr.i52 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i52, metadata !10867, metadata !DIExpression()), !dbg !10916
  %from.addr.i53 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i53, metadata !10869, metadata !DIExpression()), !dbg !10917
  %n.addr.i54 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i54, metadata !10871, metadata !DIExpression()), !dbg !10918
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !10825, metadata !DIExpression()), !dbg !10919
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !10841, metadata !DIExpression()), !dbg !10924
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !10843, metadata !DIExpression()), !dbg !10925
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !10845, metadata !DIExpression()), !dbg !10926
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !10847, metadata !DIExpression()), !dbg !10927
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !10851, metadata !DIExpression()), !dbg !10928
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !10853, metadata !DIExpression()), !dbg !10929
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !10855, metadata !DIExpression()), !dbg !10930
  %retval = alloca i32, align 4
  %dd.addr = alloca %struct.driver_data*, align 8
  %cmd.addr = alloca i32, align 4
  %arg.addr = alloca i64, align 8
  %drive_command = alloca [4 x i8], align 1
  %drive_command18 = alloca [7 x i8], align 1
  %req_task = alloca %struct.ide_task_request_s, align 8
  %ret = alloca i32, align 4
  %outtotal = alloca i32, align 4
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !10931, metadata !DIExpression()), !dbg !10932
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !10933, metadata !DIExpression()), !dbg !10934
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !10935, metadata !DIExpression()), !dbg !10936
  %0 = load i32, i32* %cmd.addr, align 4, !dbg !10937
  switch i32 %0, label %sw.default [
    i32 781, label %sw.bb
    i32 799, label %sw.bb1
    i32 798, label %sw.bb17
    i32 797, label %sw.bb35
  ], !dbg !10938

sw.bb:                                            ; preds = %entry
  %1 = load i64, i64* %arg.addr, align 8, !dbg !10939
  %2 = inttoptr i64 %1 to i8*, !dbg !10940
  %3 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !10941
  %port = getelementptr inbounds %struct.driver_data, %struct.driver_data* %3, i32 0, i32 7, !dbg !10942
  %4 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !10942
  %identify = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %4, i32 0, i32 12, !dbg !10943
  %5 = load i16*, i16** %identify, align 8, !dbg !10943
  %6 = bitcast i16* %5 to i8*, !dbg !10941
  store i8* %2, i8** %to.addr.i, align 8
  store i8* %6, i8** %from.addr.i, align 8
  store i64 512, i64* %n.addr.i, align 8
  %7 = load i8*, i8** %from.addr.i, align 8, !dbg !10944
  %8 = load i64, i64* %n.addr.i, align 8, !dbg !10944
  store i8* %7, i8** %addr.addr.i.i, align 8
  store i64 %8, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !10926
  %9 = load i32, i32* %sz.i.i, align 4, !dbg !10945
  %cmp.i.i = icmp sge i32 %9, 0, !dbg !10945
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !10945

land.rhs.i.i:                                     ; preds = %sw.bb
  %10 = load i32, i32* %sz.i.i, align 4, !dbg !10945
  %conv.i.i = sext i32 %10 to i64, !dbg !10945
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10945
  %cmp1.i.i = icmp ult i64 %conv.i.i, %11, !dbg !10945
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %sw.bb
  %12 = phi i1 [ false, %sw.bb ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !10947
  %lnot.i.i = xor i1 %12, true, !dbg !10945
  %lnot.ext.i.i = zext i1 %12 to i32, !dbg !10945
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !10945
  br i1 %12, label %if.then.i.i, label %if.end10.i.i, !dbg !10948

if.then.i.i:                                      ; preds = %land.end.i.i
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10949
  %14 = call i1 @llvm.is.constant.i64(i64 %13) #11, !dbg !10952
  br i1 %14, label %if.else.i.i, label %if.then5.i.i, !dbg !10953

if.then5.i.i:                                     ; preds = %if.then.i.i
  %15 = load i32, i32* %sz.i.i, align 4, !dbg !10954
  %16 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10955
  call void @copy_overflow(i32 %15, i64 %16) #14, !dbg !10956
  br label %if.end9.i.i, !dbg !10956

if.else.i.i:                                      ; preds = %if.then.i.i
  %17 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !10957
  %tobool6.i.i = trunc i8 %17 to i1, !dbg !10957
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !10959

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #14, !dbg !10960
  br label %if.end.i.i, !dbg !10960

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #14, !dbg !10961
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !10962
  br label %check_copy_size.exit.i, !dbg !10962

if.end10.i.i:                                     ; preds = %land.end.i.i
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10927
  %cmp11.i.i = icmp ugt i64 %18, 2147483647, !dbg !10927
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !10927
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !10927
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !10927
  %19 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !10963
  %tobool17.i.i = icmp ne i32 %19, 0, !dbg !10963
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !10963
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !10963
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !10963
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !10927

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.40, i64 0, i64 0), i32 150, i32 2307, i64 12) #11, !dbg !10965, !srcloc !10968
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #11, !dbg !10969, !srcloc !10971
  br label %if.end31.i.i, !dbg !10972

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %20 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !10927
  %tobool32.i.i = icmp ne i32 %20, 0, !dbg !10927
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !10927
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !10927
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !10927
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !10963
  %21 = load i64, i64* %tmp.i.i, align 8, !dbg !10927
  %tobool38.i.i = icmp ne i64 %21, 0, !dbg !10973
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !10974

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !10975
  br label %check_copy_size.exit.i, !dbg !10975

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %22 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !10976
  %23 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10977
  %24 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !10978
  %tobool41.i.i = trunc i8 %24 to i1, !dbg !10978
  call void @check_object_size(i8* %22, i64 %23, i1 zeroext %tobool41.i.i) #14, !dbg !10979
  store i1 true, i1* %retval.i.i, align 1, !dbg !10980
  br label %check_copy_size.exit.i, !dbg !10980

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %25 = load i1, i1* %retval.i.i, align 1, !dbg !10981
  %lnot.i = xor i1 %25, true, !dbg !10944
  %lnot.ext.i = zext i1 %25 to i32, !dbg !10944
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !10944
  br i1 %25, label %if.then.i, label %copy_to_user.exit, !dbg !10982

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %26 = load i8*, i8** %to.addr.i, align 8, !dbg !10983
  %27 = load i8*, i8** %from.addr.i, align 8, !dbg !10984
  %28 = load i64, i64* %n.addr.i, align 8, !dbg !10985
  %call2.i = call i64 @_copy_to_user(i8* %26, i8* %27, i64 %28) #14, !dbg !10986
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !10987
  br label %copy_to_user.exit, !dbg !10988

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %29 = load i64, i64* %n.addr.i, align 8, !dbg !10989
  %tobool = icmp ne i64 %29, 0, !dbg !10990
  br i1 %tobool, label %if.then, label %if.end, !dbg !10991

if.then:                                          ; preds = %copy_to_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !10992
  br label %return, !dbg !10992

if.end:                                           ; preds = %copy_to_user.exit
  br label %sw.epilog, !dbg !10993

sw.bb1:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata [4 x i8]* %drive_command, metadata !10994, metadata !DIExpression()), !dbg !10996
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %drive_command, i64 0, i64 0, !dbg !10997
  %30 = load i64, i64* %arg.addr, align 8, !dbg !10998
  %31 = inttoptr i64 %30 to i8*, !dbg !10999
  store i8* %arraydecay, i8** %to.addr.i52, align 8
  store i8* %31, i8** %from.addr.i53, align 8
  store i64 4, i64* %n.addr.i54, align 8
  %32 = load i8*, i8** %to.addr.i52, align 8, !dbg !11000
  %33 = load i64, i64* %n.addr.i54, align 8, !dbg !11000
  store i8* %32, i8** %addr.addr.i.i46, align 8
  store i64 %33, i64* %bytes.addr.i.i47, align 8
  store i8 0, i8* %is_source.addr.i.i48, align 1
  store i32 -1, i32* %sz.i.i49, align 4, !dbg !10914
  %34 = load i32, i32* %sz.i.i49, align 4, !dbg !11001
  %cmp.i.i55 = icmp sge i32 %34, 0, !dbg !11001
  br i1 %cmp.i.i55, label %land.rhs.i.i58, label %land.end.i.i62, !dbg !11001

land.rhs.i.i58:                                   ; preds = %sw.bb1
  %35 = load i32, i32* %sz.i.i49, align 4, !dbg !11001
  %conv.i.i56 = sext i32 %35 to i64, !dbg !11001
  %36 = load i64, i64* %bytes.addr.i.i47, align 8, !dbg !11001
  %cmp1.i.i57 = icmp ult i64 %conv.i.i56, %36, !dbg !11001
  br label %land.end.i.i62

land.end.i.i62:                                   ; preds = %land.rhs.i.i58, %sw.bb1
  %37 = phi i1 [ false, %sw.bb1 ], [ %cmp1.i.i57, %land.rhs.i.i58 ], !dbg !11002
  %lnot.i.i59 = xor i1 %37, true, !dbg !11001
  %lnot.ext.i.i60 = zext i1 %37 to i32, !dbg !11001
  %conv4.i.i61 = sext i32 %lnot.ext.i.i60 to i64, !dbg !11001
  br i1 %37, label %if.then.i.i63, label %if.end10.i.i78, !dbg !11003

if.then.i.i63:                                    ; preds = %land.end.i.i62
  %38 = load i64, i64* %bytes.addr.i.i47, align 8, !dbg !11004
  %39 = call i1 @llvm.is.constant.i64(i64 %38) #11, !dbg !11005
  br i1 %39, label %if.else.i.i66, label %if.then5.i.i64, !dbg !11006

if.then5.i.i64:                                   ; preds = %if.then.i.i63
  %40 = load i32, i32* %sz.i.i49, align 4, !dbg !11007
  %41 = load i64, i64* %bytes.addr.i.i47, align 8, !dbg !11008
  call void @copy_overflow(i32 %40, i64 %41) #14, !dbg !11009
  br label %if.end9.i.i70, !dbg !11009

if.else.i.i66:                                    ; preds = %if.then.i.i63
  %42 = load i8, i8* %is_source.addr.i.i48, align 1, !dbg !11010
  %tobool6.i.i65 = trunc i8 %42 to i1, !dbg !11010
  br i1 %tobool6.i.i65, label %if.then7.i.i67, label %if.else8.i.i68, !dbg !11011

if.then7.i.i67:                                   ; preds = %if.else.i.i66
  call void @__bad_copy_from() #14, !dbg !11012
  br label %if.end.i.i69, !dbg !11012

if.else8.i.i68:                                   ; preds = %if.else.i.i66
  call void @__bad_copy_to() #14, !dbg !11013
  br label %if.end.i.i69

if.end.i.i69:                                     ; preds = %if.else8.i.i68, %if.then7.i.i67
  br label %if.end9.i.i70

if.end9.i.i70:                                    ; preds = %if.end.i.i69, %if.then5.i.i64
  store i1 false, i1* %retval.i.i45, align 1, !dbg !11014
  br label %check_copy_size.exit.i92, !dbg !11014

if.end10.i.i78:                                   ; preds = %land.end.i.i62
  %43 = load i64, i64* %bytes.addr.i.i47, align 8, !dbg !10915
  %cmp11.i.i71 = icmp ugt i64 %43, 2147483647, !dbg !10915
  %lnot13.i.i72 = xor i1 %cmp11.i.i71, true, !dbg !10915
  %lnot.ext16.i.i73 = zext i1 %cmp11.i.i71 to i32, !dbg !10915
  store i32 %lnot.ext16.i.i73, i32* %__ret_warn_on.i.i50, align 4, !dbg !10915
  %44 = load i32, i32* %__ret_warn_on.i.i50, align 4, !dbg !11015
  %tobool17.i.i74 = icmp ne i32 %44, 0, !dbg !11015
  %lnot18.i.i75 = xor i1 %tobool17.i.i74, true, !dbg !11015
  %lnot.ext21.i.i76 = zext i1 %tobool17.i.i74 to i32, !dbg !11015
  %conv22.i.i77 = sext i32 %lnot.ext21.i.i76 to i64, !dbg !11015
  br i1 %tobool17.i.i74, label %if.then24.i.i79, label %if.end31.i.i85, !dbg !10915

if.then24.i.i79:                                  ; preds = %if.end10.i.i78
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.40, i64 0, i64 0), i32 150, i32 2307, i64 12) #11, !dbg !11016, !srcloc !10968
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #11, !dbg !11017, !srcloc !10971
  br label %if.end31.i.i85, !dbg !11018

if.end31.i.i85:                                   ; preds = %if.then24.i.i79, %if.end10.i.i78
  %45 = load i32, i32* %__ret_warn_on.i.i50, align 4, !dbg !10915
  %tobool32.i.i80 = icmp ne i32 %45, 0, !dbg !10915
  %lnot33.i.i81 = xor i1 %tobool32.i.i80, true, !dbg !10915
  %lnot.ext36.i.i82 = zext i1 %tobool32.i.i80 to i32, !dbg !10915
  %conv37.i.i83 = sext i32 %lnot.ext36.i.i82 to i64, !dbg !10915
  store i64 %conv37.i.i83, i64* %tmp.i.i51, align 8, !dbg !11015
  %46 = load i64, i64* %tmp.i.i51, align 8, !dbg !10915
  %tobool38.i.i84 = icmp ne i64 %46, 0, !dbg !11019
  br i1 %tobool38.i.i84, label %if.then39.i.i86, label %if.end40.i.i88, !dbg !11020

if.then39.i.i86:                                  ; preds = %if.end31.i.i85
  store i1 false, i1* %retval.i.i45, align 1, !dbg !11021
  br label %check_copy_size.exit.i92, !dbg !11021

if.end40.i.i88:                                   ; preds = %if.end31.i.i85
  %47 = load i8*, i8** %addr.addr.i.i46, align 8, !dbg !11022
  %48 = load i64, i64* %bytes.addr.i.i47, align 8, !dbg !11023
  %49 = load i8, i8* %is_source.addr.i.i48, align 1, !dbg !11024
  %tobool41.i.i87 = trunc i8 %49 to i1, !dbg !11024
  call void @check_object_size(i8* %47, i64 %48, i1 zeroext %tobool41.i.i87) #14, !dbg !11025
  store i1 true, i1* %retval.i.i45, align 1, !dbg !11026
  br label %check_copy_size.exit.i92, !dbg !11026

check_copy_size.exit.i92:                         ; preds = %if.end40.i.i88, %if.then39.i.i86, %if.end9.i.i70
  %50 = load i1, i1* %retval.i.i45, align 1, !dbg !11027
  %lnot.i89 = xor i1 %50, true, !dbg !11000
  %lnot.ext.i90 = zext i1 %50 to i32, !dbg !11000
  %conv.i91 = sext i32 %lnot.ext.i90 to i64, !dbg !11000
  br i1 %50, label %if.then.i94, label %copy_from_user.exit, !dbg !11028

if.then.i94:                                      ; preds = %check_copy_size.exit.i92
  %51 = load i8*, i8** %to.addr.i52, align 8, !dbg !11029
  %52 = load i8*, i8** %from.addr.i53, align 8, !dbg !11030
  %53 = load i64, i64* %n.addr.i54, align 8, !dbg !11031
  %call2.i93 = call i64 @_copy_from_user(i8* %51, i8* %52, i64 %53) #14, !dbg !11032
  store i64 %call2.i93, i64* %n.addr.i54, align 8, !dbg !11033
  br label %copy_from_user.exit, !dbg !11034

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i92, %if.then.i94
  %54 = load i64, i64* %n.addr.i54, align 8, !dbg !11035
  %tobool3 = icmp ne i64 %54, 0, !dbg !11036
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !11037

if.then4:                                         ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !11038
  br label %return, !dbg !11038

if.end5:                                          ; preds = %copy_from_user.exit
  %55 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !11039
  %port6 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %55, i32 0, i32 7, !dbg !11041
  %56 = load %struct.mtip_port*, %struct.mtip_port** %port6, align 8, !dbg !11041
  %arraydecay7 = getelementptr inbounds [4 x i8], [4 x i8]* %drive_command, i64 0, i64 0, !dbg !11042
  %57 = load i64, i64* %arg.addr, align 8, !dbg !11043
  %add = add i64 %57, 4, !dbg !11044
  %58 = inttoptr i64 %add to i8*, !dbg !11045
  %call8 = call i32 @exec_drive_command(%struct.mtip_port* %56, i8* %arraydecay7, i8* %58) #12, !dbg !11046
  %tobool9 = icmp ne i32 %call8, 0, !dbg !11046
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !11047

if.then10:                                        ; preds = %if.end5
  store i32 -5, i32* %retval, align 4, !dbg !11048
  br label %return, !dbg !11048

if.end11:                                         ; preds = %if.end5
  %59 = load i64, i64* %arg.addr, align 8, !dbg !11049
  %60 = inttoptr i64 %59 to i8*, !dbg !11050
  %arraydecay12 = getelementptr inbounds [4 x i8], [4 x i8]* %drive_command, i64 0, i64 0, !dbg !11051
  store i8* %60, i8** %to.addr.i102, align 8
  store i8* %arraydecay12, i8** %from.addr.i103, align 8
  store i64 4, i64* %n.addr.i104, align 8
  %61 = load i8*, i8** %from.addr.i103, align 8, !dbg !11052
  %62 = load i64, i64* %n.addr.i104, align 8, !dbg !11052
  store i8* %61, i8** %addr.addr.i.i96, align 8
  store i64 %62, i64* %bytes.addr.i.i97, align 8
  store i8 1, i8* %is_source.addr.i.i98, align 1
  store i32 -1, i32* %sz.i.i99, align 4, !dbg !10903
  %63 = load i32, i32* %sz.i.i99, align 4, !dbg !11053
  %cmp.i.i105 = icmp sge i32 %63, 0, !dbg !11053
  br i1 %cmp.i.i105, label %land.rhs.i.i108, label %land.end.i.i112, !dbg !11053

land.rhs.i.i108:                                  ; preds = %if.end11
  %64 = load i32, i32* %sz.i.i99, align 4, !dbg !11053
  %conv.i.i106 = sext i32 %64 to i64, !dbg !11053
  %65 = load i64, i64* %bytes.addr.i.i97, align 8, !dbg !11053
  %cmp1.i.i107 = icmp ult i64 %conv.i.i106, %65, !dbg !11053
  br label %land.end.i.i112

land.end.i.i112:                                  ; preds = %land.rhs.i.i108, %if.end11
  %66 = phi i1 [ false, %if.end11 ], [ %cmp1.i.i107, %land.rhs.i.i108 ], !dbg !11054
  %lnot.i.i109 = xor i1 %66, true, !dbg !11053
  %lnot.ext.i.i110 = zext i1 %66 to i32, !dbg !11053
  %conv4.i.i111 = sext i32 %lnot.ext.i.i110 to i64, !dbg !11053
  br i1 %66, label %if.then.i.i113, label %if.end10.i.i128, !dbg !11055

if.then.i.i113:                                   ; preds = %land.end.i.i112
  %67 = load i64, i64* %bytes.addr.i.i97, align 8, !dbg !11056
  %68 = call i1 @llvm.is.constant.i64(i64 %67) #11, !dbg !11057
  br i1 %68, label %if.else.i.i116, label %if.then5.i.i114, !dbg !11058

if.then5.i.i114:                                  ; preds = %if.then.i.i113
  %69 = load i32, i32* %sz.i.i99, align 4, !dbg !11059
  %70 = load i64, i64* %bytes.addr.i.i97, align 8, !dbg !11060
  call void @copy_overflow(i32 %69, i64 %70) #14, !dbg !11061
  br label %if.end9.i.i120, !dbg !11061

if.else.i.i116:                                   ; preds = %if.then.i.i113
  %71 = load i8, i8* %is_source.addr.i.i98, align 1, !dbg !11062
  %tobool6.i.i115 = trunc i8 %71 to i1, !dbg !11062
  br i1 %tobool6.i.i115, label %if.then7.i.i117, label %if.else8.i.i118, !dbg !11063

if.then7.i.i117:                                  ; preds = %if.else.i.i116
  call void @__bad_copy_from() #14, !dbg !11064
  br label %if.end.i.i119, !dbg !11064

if.else8.i.i118:                                  ; preds = %if.else.i.i116
  call void @__bad_copy_to() #14, !dbg !11065
  br label %if.end.i.i119

if.end.i.i119:                                    ; preds = %if.else8.i.i118, %if.then7.i.i117
  br label %if.end9.i.i120

if.end9.i.i120:                                   ; preds = %if.end.i.i119, %if.then5.i.i114
  store i1 false, i1* %retval.i.i95, align 1, !dbg !11066
  br label %check_copy_size.exit.i142, !dbg !11066

if.end10.i.i128:                                  ; preds = %land.end.i.i112
  %72 = load i64, i64* %bytes.addr.i.i97, align 8, !dbg !10904
  %cmp11.i.i121 = icmp ugt i64 %72, 2147483647, !dbg !10904
  %lnot13.i.i122 = xor i1 %cmp11.i.i121, true, !dbg !10904
  %lnot.ext16.i.i123 = zext i1 %cmp11.i.i121 to i32, !dbg !10904
  store i32 %lnot.ext16.i.i123, i32* %__ret_warn_on.i.i100, align 4, !dbg !10904
  %73 = load i32, i32* %__ret_warn_on.i.i100, align 4, !dbg !11067
  %tobool17.i.i124 = icmp ne i32 %73, 0, !dbg !11067
  %lnot18.i.i125 = xor i1 %tobool17.i.i124, true, !dbg !11067
  %lnot.ext21.i.i126 = zext i1 %tobool17.i.i124 to i32, !dbg !11067
  %conv22.i.i127 = sext i32 %lnot.ext21.i.i126 to i64, !dbg !11067
  br i1 %tobool17.i.i124, label %if.then24.i.i129, label %if.end31.i.i135, !dbg !10904

if.then24.i.i129:                                 ; preds = %if.end10.i.i128
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.40, i64 0, i64 0), i32 150, i32 2307, i64 12) #11, !dbg !11068, !srcloc !10968
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #11, !dbg !11069, !srcloc !10971
  br label %if.end31.i.i135, !dbg !11070

if.end31.i.i135:                                  ; preds = %if.then24.i.i129, %if.end10.i.i128
  %74 = load i32, i32* %__ret_warn_on.i.i100, align 4, !dbg !10904
  %tobool32.i.i130 = icmp ne i32 %74, 0, !dbg !10904
  %lnot33.i.i131 = xor i1 %tobool32.i.i130, true, !dbg !10904
  %lnot.ext36.i.i132 = zext i1 %tobool32.i.i130 to i32, !dbg !10904
  %conv37.i.i133 = sext i32 %lnot.ext36.i.i132 to i64, !dbg !10904
  store i64 %conv37.i.i133, i64* %tmp.i.i101, align 8, !dbg !11067
  %75 = load i64, i64* %tmp.i.i101, align 8, !dbg !10904
  %tobool38.i.i134 = icmp ne i64 %75, 0, !dbg !11071
  br i1 %tobool38.i.i134, label %if.then39.i.i136, label %if.end40.i.i138, !dbg !11072

if.then39.i.i136:                                 ; preds = %if.end31.i.i135
  store i1 false, i1* %retval.i.i95, align 1, !dbg !11073
  br label %check_copy_size.exit.i142, !dbg !11073

if.end40.i.i138:                                  ; preds = %if.end31.i.i135
  %76 = load i8*, i8** %addr.addr.i.i96, align 8, !dbg !11074
  %77 = load i64, i64* %bytes.addr.i.i97, align 8, !dbg !11075
  %78 = load i8, i8* %is_source.addr.i.i98, align 1, !dbg !11076
  %tobool41.i.i137 = trunc i8 %78 to i1, !dbg !11076
  call void @check_object_size(i8* %76, i64 %77, i1 zeroext %tobool41.i.i137) #14, !dbg !11077
  store i1 true, i1* %retval.i.i95, align 1, !dbg !11078
  br label %check_copy_size.exit.i142, !dbg !11078

check_copy_size.exit.i142:                        ; preds = %if.end40.i.i138, %if.then39.i.i136, %if.end9.i.i120
  %79 = load i1, i1* %retval.i.i95, align 1, !dbg !11079
  %lnot.i139 = xor i1 %79, true, !dbg !11052
  %lnot.ext.i140 = zext i1 %79 to i32, !dbg !11052
  %conv.i141 = sext i32 %lnot.ext.i140 to i64, !dbg !11052
  br i1 %79, label %if.then.i144, label %copy_to_user.exit145, !dbg !11080

if.then.i144:                                     ; preds = %check_copy_size.exit.i142
  %80 = load i8*, i8** %to.addr.i102, align 8, !dbg !11081
  %81 = load i8*, i8** %from.addr.i103, align 8, !dbg !11082
  %82 = load i64, i64* %n.addr.i104, align 8, !dbg !11083
  %call2.i143 = call i64 @_copy_to_user(i8* %80, i8* %81, i64 %82) #14, !dbg !11084
  store i64 %call2.i143, i64* %n.addr.i104, align 8, !dbg !11085
  br label %copy_to_user.exit145, !dbg !11086

copy_to_user.exit145:                             ; preds = %check_copy_size.exit.i142, %if.then.i144
  %83 = load i64, i64* %n.addr.i104, align 8, !dbg !11087
  %tobool14 = icmp ne i64 %83, 0, !dbg !11088
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !11089

if.then15:                                        ; preds = %copy_to_user.exit145
  store i32 -14, i32* %retval, align 4, !dbg !11090
  br label %return, !dbg !11090

if.end16:                                         ; preds = %copy_to_user.exit145
  br label %sw.epilog, !dbg !11091

sw.bb17:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [7 x i8]* %drive_command18, metadata !11092, metadata !DIExpression()), !dbg !11094
  %arraydecay19 = getelementptr inbounds [7 x i8], [7 x i8]* %drive_command18, i64 0, i64 0, !dbg !11095
  %84 = load i64, i64* %arg.addr, align 8, !dbg !11096
  %85 = inttoptr i64 %84 to i8*, !dbg !11097
  store i8* %arraydecay19, i8** %to.addr.i153, align 8
  store i8* %85, i8** %from.addr.i154, align 8
  store i64 7, i64* %n.addr.i155, align 8
  %86 = load i8*, i8** %to.addr.i153, align 8, !dbg !11098
  %87 = load i64, i64* %n.addr.i155, align 8, !dbg !11098
  store i8* %86, i8** %addr.addr.i.i147, align 8
  store i64 %87, i64* %bytes.addr.i.i148, align 8
  store i8 0, i8* %is_source.addr.i.i149, align 1
  store i32 -1, i32* %sz.i.i150, align 4, !dbg !10891
  %88 = load i32, i32* %sz.i.i150, align 4, !dbg !11099
  %cmp.i.i156 = icmp sge i32 %88, 0, !dbg !11099
  br i1 %cmp.i.i156, label %land.rhs.i.i159, label %land.end.i.i163, !dbg !11099

land.rhs.i.i159:                                  ; preds = %sw.bb17
  %89 = load i32, i32* %sz.i.i150, align 4, !dbg !11099
  %conv.i.i157 = sext i32 %89 to i64, !dbg !11099
  %90 = load i64, i64* %bytes.addr.i.i148, align 8, !dbg !11099
  %cmp1.i.i158 = icmp ult i64 %conv.i.i157, %90, !dbg !11099
  br label %land.end.i.i163

land.end.i.i163:                                  ; preds = %land.rhs.i.i159, %sw.bb17
  %91 = phi i1 [ false, %sw.bb17 ], [ %cmp1.i.i158, %land.rhs.i.i159 ], !dbg !11100
  %lnot.i.i160 = xor i1 %91, true, !dbg !11099
  %lnot.ext.i.i161 = zext i1 %91 to i32, !dbg !11099
  %conv4.i.i162 = sext i32 %lnot.ext.i.i161 to i64, !dbg !11099
  br i1 %91, label %if.then.i.i164, label %if.end10.i.i179, !dbg !11101

if.then.i.i164:                                   ; preds = %land.end.i.i163
  %92 = load i64, i64* %bytes.addr.i.i148, align 8, !dbg !11102
  %93 = call i1 @llvm.is.constant.i64(i64 %92) #11, !dbg !11103
  br i1 %93, label %if.else.i.i167, label %if.then5.i.i165, !dbg !11104

if.then5.i.i165:                                  ; preds = %if.then.i.i164
  %94 = load i32, i32* %sz.i.i150, align 4, !dbg !11105
  %95 = load i64, i64* %bytes.addr.i.i148, align 8, !dbg !11106
  call void @copy_overflow(i32 %94, i64 %95) #14, !dbg !11107
  br label %if.end9.i.i171, !dbg !11107

if.else.i.i167:                                   ; preds = %if.then.i.i164
  %96 = load i8, i8* %is_source.addr.i.i149, align 1, !dbg !11108
  %tobool6.i.i166 = trunc i8 %96 to i1, !dbg !11108
  br i1 %tobool6.i.i166, label %if.then7.i.i168, label %if.else8.i.i169, !dbg !11109

if.then7.i.i168:                                  ; preds = %if.else.i.i167
  call void @__bad_copy_from() #14, !dbg !11110
  br label %if.end.i.i170, !dbg !11110

if.else8.i.i169:                                  ; preds = %if.else.i.i167
  call void @__bad_copy_to() #14, !dbg !11111
  br label %if.end.i.i170

if.end.i.i170:                                    ; preds = %if.else8.i.i169, %if.then7.i.i168
  br label %if.end9.i.i171

if.end9.i.i171:                                   ; preds = %if.end.i.i170, %if.then5.i.i165
  store i1 false, i1* %retval.i.i146, align 1, !dbg !11112
  br label %check_copy_size.exit.i193, !dbg !11112

if.end10.i.i179:                                  ; preds = %land.end.i.i163
  %97 = load i64, i64* %bytes.addr.i.i148, align 8, !dbg !10892
  %cmp11.i.i172 = icmp ugt i64 %97, 2147483647, !dbg !10892
  %lnot13.i.i173 = xor i1 %cmp11.i.i172, true, !dbg !10892
  %lnot.ext16.i.i174 = zext i1 %cmp11.i.i172 to i32, !dbg !10892
  store i32 %lnot.ext16.i.i174, i32* %__ret_warn_on.i.i151, align 4, !dbg !10892
  %98 = load i32, i32* %__ret_warn_on.i.i151, align 4, !dbg !11113
  %tobool17.i.i175 = icmp ne i32 %98, 0, !dbg !11113
  %lnot18.i.i176 = xor i1 %tobool17.i.i175, true, !dbg !11113
  %lnot.ext21.i.i177 = zext i1 %tobool17.i.i175 to i32, !dbg !11113
  %conv22.i.i178 = sext i32 %lnot.ext21.i.i177 to i64, !dbg !11113
  br i1 %tobool17.i.i175, label %if.then24.i.i180, label %if.end31.i.i186, !dbg !10892

if.then24.i.i180:                                 ; preds = %if.end10.i.i179
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.40, i64 0, i64 0), i32 150, i32 2307, i64 12) #11, !dbg !11114, !srcloc !10968
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #11, !dbg !11115, !srcloc !10971
  br label %if.end31.i.i186, !dbg !11116

if.end31.i.i186:                                  ; preds = %if.then24.i.i180, %if.end10.i.i179
  %99 = load i32, i32* %__ret_warn_on.i.i151, align 4, !dbg !10892
  %tobool32.i.i181 = icmp ne i32 %99, 0, !dbg !10892
  %lnot33.i.i182 = xor i1 %tobool32.i.i181, true, !dbg !10892
  %lnot.ext36.i.i183 = zext i1 %tobool32.i.i181 to i32, !dbg !10892
  %conv37.i.i184 = sext i32 %lnot.ext36.i.i183 to i64, !dbg !10892
  store i64 %conv37.i.i184, i64* %tmp.i.i152, align 8, !dbg !11113
  %100 = load i64, i64* %tmp.i.i152, align 8, !dbg !10892
  %tobool38.i.i185 = icmp ne i64 %100, 0, !dbg !11117
  br i1 %tobool38.i.i185, label %if.then39.i.i187, label %if.end40.i.i189, !dbg !11118

if.then39.i.i187:                                 ; preds = %if.end31.i.i186
  store i1 false, i1* %retval.i.i146, align 1, !dbg !11119
  br label %check_copy_size.exit.i193, !dbg !11119

if.end40.i.i189:                                  ; preds = %if.end31.i.i186
  %101 = load i8*, i8** %addr.addr.i.i147, align 8, !dbg !11120
  %102 = load i64, i64* %bytes.addr.i.i148, align 8, !dbg !11121
  %103 = load i8, i8* %is_source.addr.i.i149, align 1, !dbg !11122
  %tobool41.i.i188 = trunc i8 %103 to i1, !dbg !11122
  call void @check_object_size(i8* %101, i64 %102, i1 zeroext %tobool41.i.i188) #14, !dbg !11123
  store i1 true, i1* %retval.i.i146, align 1, !dbg !11124
  br label %check_copy_size.exit.i193, !dbg !11124

check_copy_size.exit.i193:                        ; preds = %if.end40.i.i189, %if.then39.i.i187, %if.end9.i.i171
  %104 = load i1, i1* %retval.i.i146, align 1, !dbg !11125
  %lnot.i190 = xor i1 %104, true, !dbg !11098
  %lnot.ext.i191 = zext i1 %104 to i32, !dbg !11098
  %conv.i192 = sext i32 %lnot.ext.i191 to i64, !dbg !11098
  br i1 %104, label %if.then.i195, label %copy_from_user.exit196, !dbg !11126

if.then.i195:                                     ; preds = %check_copy_size.exit.i193
  %105 = load i8*, i8** %to.addr.i153, align 8, !dbg !11127
  %106 = load i8*, i8** %from.addr.i154, align 8, !dbg !11128
  %107 = load i64, i64* %n.addr.i155, align 8, !dbg !11129
  %call2.i194 = call i64 @_copy_from_user(i8* %105, i8* %106, i64 %107) #14, !dbg !11130
  store i64 %call2.i194, i64* %n.addr.i155, align 8, !dbg !11131
  br label %copy_from_user.exit196, !dbg !11132

copy_from_user.exit196:                           ; preds = %check_copy_size.exit.i193, %if.then.i195
  %108 = load i64, i64* %n.addr.i155, align 8, !dbg !11133
  %tobool21 = icmp ne i64 %108, 0, !dbg !11134
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !11135

if.then22:                                        ; preds = %copy_from_user.exit196
  store i32 -14, i32* %retval, align 4, !dbg !11136
  br label %return, !dbg !11136

if.end23:                                         ; preds = %copy_from_user.exit196
  %109 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !11137
  %port24 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %109, i32 0, i32 7, !dbg !11139
  %110 = load %struct.mtip_port*, %struct.mtip_port** %port24, align 8, !dbg !11139
  %arraydecay25 = getelementptr inbounds [7 x i8], [7 x i8]* %drive_command18, i64 0, i64 0, !dbg !11140
  %call26 = call i32 @exec_drive_task(%struct.mtip_port* %110, i8* %arraydecay25) #12, !dbg !11141
  %tobool27 = icmp ne i32 %call26, 0, !dbg !11141
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !11142

if.then28:                                        ; preds = %if.end23
  store i32 -5, i32* %retval, align 4, !dbg !11143
  br label %return, !dbg !11143

if.end29:                                         ; preds = %if.end23
  %111 = load i64, i64* %arg.addr, align 8, !dbg !11144
  %112 = inttoptr i64 %111 to i8*, !dbg !11145
  %arraydecay30 = getelementptr inbounds [7 x i8], [7 x i8]* %drive_command18, i64 0, i64 0, !dbg !11146
  store i8* %112, i8** %to.addr.i204, align 8
  store i8* %arraydecay30, i8** %from.addr.i205, align 8
  store i64 7, i64* %n.addr.i206, align 8
  %113 = load i8*, i8** %from.addr.i205, align 8, !dbg !11147
  %114 = load i64, i64* %n.addr.i206, align 8, !dbg !11147
  store i8* %113, i8** %addr.addr.i.i198, align 8
  store i64 %114, i64* %bytes.addr.i.i199, align 8
  store i8 1, i8* %is_source.addr.i.i200, align 1
  store i32 -1, i32* %sz.i.i201, align 4, !dbg !10880
  %115 = load i32, i32* %sz.i.i201, align 4, !dbg !11148
  %cmp.i.i207 = icmp sge i32 %115, 0, !dbg !11148
  br i1 %cmp.i.i207, label %land.rhs.i.i210, label %land.end.i.i214, !dbg !11148

land.rhs.i.i210:                                  ; preds = %if.end29
  %116 = load i32, i32* %sz.i.i201, align 4, !dbg !11148
  %conv.i.i208 = sext i32 %116 to i64, !dbg !11148
  %117 = load i64, i64* %bytes.addr.i.i199, align 8, !dbg !11148
  %cmp1.i.i209 = icmp ult i64 %conv.i.i208, %117, !dbg !11148
  br label %land.end.i.i214

land.end.i.i214:                                  ; preds = %land.rhs.i.i210, %if.end29
  %118 = phi i1 [ false, %if.end29 ], [ %cmp1.i.i209, %land.rhs.i.i210 ], !dbg !11149
  %lnot.i.i211 = xor i1 %118, true, !dbg !11148
  %lnot.ext.i.i212 = zext i1 %118 to i32, !dbg !11148
  %conv4.i.i213 = sext i32 %lnot.ext.i.i212 to i64, !dbg !11148
  br i1 %118, label %if.then.i.i215, label %if.end10.i.i230, !dbg !11150

if.then.i.i215:                                   ; preds = %land.end.i.i214
  %119 = load i64, i64* %bytes.addr.i.i199, align 8, !dbg !11151
  %120 = call i1 @llvm.is.constant.i64(i64 %119) #11, !dbg !11152
  br i1 %120, label %if.else.i.i218, label %if.then5.i.i216, !dbg !11153

if.then5.i.i216:                                  ; preds = %if.then.i.i215
  %121 = load i32, i32* %sz.i.i201, align 4, !dbg !11154
  %122 = load i64, i64* %bytes.addr.i.i199, align 8, !dbg !11155
  call void @copy_overflow(i32 %121, i64 %122) #14, !dbg !11156
  br label %if.end9.i.i222, !dbg !11156

if.else.i.i218:                                   ; preds = %if.then.i.i215
  %123 = load i8, i8* %is_source.addr.i.i200, align 1, !dbg !11157
  %tobool6.i.i217 = trunc i8 %123 to i1, !dbg !11157
  br i1 %tobool6.i.i217, label %if.then7.i.i219, label %if.else8.i.i220, !dbg !11158

if.then7.i.i219:                                  ; preds = %if.else.i.i218
  call void @__bad_copy_from() #14, !dbg !11159
  br label %if.end.i.i221, !dbg !11159

if.else8.i.i220:                                  ; preds = %if.else.i.i218
  call void @__bad_copy_to() #14, !dbg !11160
  br label %if.end.i.i221

if.end.i.i221:                                    ; preds = %if.else8.i.i220, %if.then7.i.i219
  br label %if.end9.i.i222

if.end9.i.i222:                                   ; preds = %if.end.i.i221, %if.then5.i.i216
  store i1 false, i1* %retval.i.i197, align 1, !dbg !11161
  br label %check_copy_size.exit.i244, !dbg !11161

if.end10.i.i230:                                  ; preds = %land.end.i.i214
  %124 = load i64, i64* %bytes.addr.i.i199, align 8, !dbg !10881
  %cmp11.i.i223 = icmp ugt i64 %124, 2147483647, !dbg !10881
  %lnot13.i.i224 = xor i1 %cmp11.i.i223, true, !dbg !10881
  %lnot.ext16.i.i225 = zext i1 %cmp11.i.i223 to i32, !dbg !10881
  store i32 %lnot.ext16.i.i225, i32* %__ret_warn_on.i.i202, align 4, !dbg !10881
  %125 = load i32, i32* %__ret_warn_on.i.i202, align 4, !dbg !11162
  %tobool17.i.i226 = icmp ne i32 %125, 0, !dbg !11162
  %lnot18.i.i227 = xor i1 %tobool17.i.i226, true, !dbg !11162
  %lnot.ext21.i.i228 = zext i1 %tobool17.i.i226 to i32, !dbg !11162
  %conv22.i.i229 = sext i32 %lnot.ext21.i.i228 to i64, !dbg !11162
  br i1 %tobool17.i.i226, label %if.then24.i.i231, label %if.end31.i.i237, !dbg !10881

if.then24.i.i231:                                 ; preds = %if.end10.i.i230
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.40, i64 0, i64 0), i32 150, i32 2307, i64 12) #11, !dbg !11163, !srcloc !10968
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #11, !dbg !11164, !srcloc !10971
  br label %if.end31.i.i237, !dbg !11165

if.end31.i.i237:                                  ; preds = %if.then24.i.i231, %if.end10.i.i230
  %126 = load i32, i32* %__ret_warn_on.i.i202, align 4, !dbg !10881
  %tobool32.i.i232 = icmp ne i32 %126, 0, !dbg !10881
  %lnot33.i.i233 = xor i1 %tobool32.i.i232, true, !dbg !10881
  %lnot.ext36.i.i234 = zext i1 %tobool32.i.i232 to i32, !dbg !10881
  %conv37.i.i235 = sext i32 %lnot.ext36.i.i234 to i64, !dbg !10881
  store i64 %conv37.i.i235, i64* %tmp.i.i203, align 8, !dbg !11162
  %127 = load i64, i64* %tmp.i.i203, align 8, !dbg !10881
  %tobool38.i.i236 = icmp ne i64 %127, 0, !dbg !11166
  br i1 %tobool38.i.i236, label %if.then39.i.i238, label %if.end40.i.i240, !dbg !11167

if.then39.i.i238:                                 ; preds = %if.end31.i.i237
  store i1 false, i1* %retval.i.i197, align 1, !dbg !11168
  br label %check_copy_size.exit.i244, !dbg !11168

if.end40.i.i240:                                  ; preds = %if.end31.i.i237
  %128 = load i8*, i8** %addr.addr.i.i198, align 8, !dbg !11169
  %129 = load i64, i64* %bytes.addr.i.i199, align 8, !dbg !11170
  %130 = load i8, i8* %is_source.addr.i.i200, align 1, !dbg !11171
  %tobool41.i.i239 = trunc i8 %130 to i1, !dbg !11171
  call void @check_object_size(i8* %128, i64 %129, i1 zeroext %tobool41.i.i239) #14, !dbg !11172
  store i1 true, i1* %retval.i.i197, align 1, !dbg !11173
  br label %check_copy_size.exit.i244, !dbg !11173

check_copy_size.exit.i244:                        ; preds = %if.end40.i.i240, %if.then39.i.i238, %if.end9.i.i222
  %131 = load i1, i1* %retval.i.i197, align 1, !dbg !11174
  %lnot.i241 = xor i1 %131, true, !dbg !11147
  %lnot.ext.i242 = zext i1 %131 to i32, !dbg !11147
  %conv.i243 = sext i32 %lnot.ext.i242 to i64, !dbg !11147
  br i1 %131, label %if.then.i246, label %copy_to_user.exit247, !dbg !11175

if.then.i246:                                     ; preds = %check_copy_size.exit.i244
  %132 = load i8*, i8** %to.addr.i204, align 8, !dbg !11176
  %133 = load i8*, i8** %from.addr.i205, align 8, !dbg !11177
  %134 = load i64, i64* %n.addr.i206, align 8, !dbg !11178
  %call2.i245 = call i64 @_copy_to_user(i8* %132, i8* %133, i64 %134) #14, !dbg !11179
  store i64 %call2.i245, i64* %n.addr.i206, align 8, !dbg !11180
  br label %copy_to_user.exit247, !dbg !11181

copy_to_user.exit247:                             ; preds = %check_copy_size.exit.i244, %if.then.i246
  %135 = load i64, i64* %n.addr.i206, align 8, !dbg !11182
  %tobool32 = icmp ne i64 %135, 0, !dbg !11183
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !11184

if.then33:                                        ; preds = %copy_to_user.exit247
  store i32 -14, i32* %retval, align 4, !dbg !11185
  br label %return, !dbg !11185

if.end34:                                         ; preds = %copy_to_user.exit247
  br label %sw.epilog, !dbg !11186

sw.bb35:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ide_task_request_s* %req_task, metadata !11187, metadata !DIExpression()), !dbg !11223
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11224, metadata !DIExpression()), !dbg !11225
  call void @llvm.dbg.declare(metadata i32* %outtotal, metadata !11226, metadata !DIExpression()), !dbg !11227
  %136 = bitcast %struct.ide_task_request_s* %req_task to i8*, !dbg !11228
  %137 = load i64, i64* %arg.addr, align 8, !dbg !11229
  %138 = inttoptr i64 %137 to i8*, !dbg !11230
  store i8* %136, i8** %to.addr.i255, align 8
  store i8* %138, i8** %from.addr.i256, align 8
  store i64 48, i64* %n.addr.i257, align 8
  %139 = load i8*, i8** %to.addr.i255, align 8, !dbg !11231
  %140 = load i64, i64* %n.addr.i257, align 8, !dbg !11231
  store i8* %139, i8** %addr.addr.i.i249, align 8
  store i64 %140, i64* %bytes.addr.i.i250, align 8
  store i8 0, i8* %is_source.addr.i.i251, align 1
  store i32 -1, i32* %sz.i.i252, align 4, !dbg !10865
  %141 = load i32, i32* %sz.i.i252, align 4, !dbg !11232
  %cmp.i.i258 = icmp sge i32 %141, 0, !dbg !11232
  br i1 %cmp.i.i258, label %land.rhs.i.i261, label %land.end.i.i265, !dbg !11232

land.rhs.i.i261:                                  ; preds = %sw.bb35
  %142 = load i32, i32* %sz.i.i252, align 4, !dbg !11232
  %conv.i.i259 = sext i32 %142 to i64, !dbg !11232
  %143 = load i64, i64* %bytes.addr.i.i250, align 8, !dbg !11232
  %cmp1.i.i260 = icmp ult i64 %conv.i.i259, %143, !dbg !11232
  br label %land.end.i.i265

land.end.i.i265:                                  ; preds = %land.rhs.i.i261, %sw.bb35
  %144 = phi i1 [ false, %sw.bb35 ], [ %cmp1.i.i260, %land.rhs.i.i261 ], !dbg !11233
  %lnot.i.i262 = xor i1 %144, true, !dbg !11232
  %lnot.ext.i.i263 = zext i1 %144 to i32, !dbg !11232
  %conv4.i.i264 = sext i32 %lnot.ext.i.i263 to i64, !dbg !11232
  br i1 %144, label %if.then.i.i266, label %if.end10.i.i281, !dbg !11234

if.then.i.i266:                                   ; preds = %land.end.i.i265
  %145 = load i64, i64* %bytes.addr.i.i250, align 8, !dbg !11235
  %146 = call i1 @llvm.is.constant.i64(i64 %145) #11, !dbg !11236
  br i1 %146, label %if.else.i.i269, label %if.then5.i.i267, !dbg !11237

if.then5.i.i267:                                  ; preds = %if.then.i.i266
  %147 = load i32, i32* %sz.i.i252, align 4, !dbg !11238
  %148 = load i64, i64* %bytes.addr.i.i250, align 8, !dbg !11239
  call void @copy_overflow(i32 %147, i64 %148) #14, !dbg !11240
  br label %if.end9.i.i273, !dbg !11240

if.else.i.i269:                                   ; preds = %if.then.i.i266
  %149 = load i8, i8* %is_source.addr.i.i251, align 1, !dbg !11241
  %tobool6.i.i268 = trunc i8 %149 to i1, !dbg !11241
  br i1 %tobool6.i.i268, label %if.then7.i.i270, label %if.else8.i.i271, !dbg !11242

if.then7.i.i270:                                  ; preds = %if.else.i.i269
  call void @__bad_copy_from() #14, !dbg !11243
  br label %if.end.i.i272, !dbg !11243

if.else8.i.i271:                                  ; preds = %if.else.i.i269
  call void @__bad_copy_to() #14, !dbg !11244
  br label %if.end.i.i272

if.end.i.i272:                                    ; preds = %if.else8.i.i271, %if.then7.i.i270
  br label %if.end9.i.i273

if.end9.i.i273:                                   ; preds = %if.end.i.i272, %if.then5.i.i267
  store i1 false, i1* %retval.i.i248, align 1, !dbg !11245
  br label %check_copy_size.exit.i295, !dbg !11245

if.end10.i.i281:                                  ; preds = %land.end.i.i265
  %150 = load i64, i64* %bytes.addr.i.i250, align 8, !dbg !10866
  %cmp11.i.i274 = icmp ugt i64 %150, 2147483647, !dbg !10866
  %lnot13.i.i275 = xor i1 %cmp11.i.i274, true, !dbg !10866
  %lnot.ext16.i.i276 = zext i1 %cmp11.i.i274 to i32, !dbg !10866
  store i32 %lnot.ext16.i.i276, i32* %__ret_warn_on.i.i253, align 4, !dbg !10866
  %151 = load i32, i32* %__ret_warn_on.i.i253, align 4, !dbg !11246
  %tobool17.i.i277 = icmp ne i32 %151, 0, !dbg !11246
  %lnot18.i.i278 = xor i1 %tobool17.i.i277, true, !dbg !11246
  %lnot.ext21.i.i279 = zext i1 %tobool17.i.i277 to i32, !dbg !11246
  %conv22.i.i280 = sext i32 %lnot.ext21.i.i279 to i64, !dbg !11246
  br i1 %tobool17.i.i277, label %if.then24.i.i282, label %if.end31.i.i288, !dbg !10866

if.then24.i.i282:                                 ; preds = %if.end10.i.i281
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.40, i64 0, i64 0), i32 150, i32 2307, i64 12) #11, !dbg !11247, !srcloc !10968
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #11, !dbg !11248, !srcloc !10971
  br label %if.end31.i.i288, !dbg !11249

if.end31.i.i288:                                  ; preds = %if.then24.i.i282, %if.end10.i.i281
  %152 = load i32, i32* %__ret_warn_on.i.i253, align 4, !dbg !10866
  %tobool32.i.i283 = icmp ne i32 %152, 0, !dbg !10866
  %lnot33.i.i284 = xor i1 %tobool32.i.i283, true, !dbg !10866
  %lnot.ext36.i.i285 = zext i1 %tobool32.i.i283 to i32, !dbg !10866
  %conv37.i.i286 = sext i32 %lnot.ext36.i.i285 to i64, !dbg !10866
  store i64 %conv37.i.i286, i64* %tmp.i.i254, align 8, !dbg !11246
  %153 = load i64, i64* %tmp.i.i254, align 8, !dbg !10866
  %tobool38.i.i287 = icmp ne i64 %153, 0, !dbg !11250
  br i1 %tobool38.i.i287, label %if.then39.i.i289, label %if.end40.i.i291, !dbg !11251

if.then39.i.i289:                                 ; preds = %if.end31.i.i288
  store i1 false, i1* %retval.i.i248, align 1, !dbg !11252
  br label %check_copy_size.exit.i295, !dbg !11252

if.end40.i.i291:                                  ; preds = %if.end31.i.i288
  %154 = load i8*, i8** %addr.addr.i.i249, align 8, !dbg !11253
  %155 = load i64, i64* %bytes.addr.i.i250, align 8, !dbg !11254
  %156 = load i8, i8* %is_source.addr.i.i251, align 1, !dbg !11255
  %tobool41.i.i290 = trunc i8 %156 to i1, !dbg !11255
  call void @check_object_size(i8* %154, i64 %155, i1 zeroext %tobool41.i.i290) #14, !dbg !11256
  store i1 true, i1* %retval.i.i248, align 1, !dbg !11257
  br label %check_copy_size.exit.i295, !dbg !11257

check_copy_size.exit.i295:                        ; preds = %if.end40.i.i291, %if.then39.i.i289, %if.end9.i.i273
  %157 = load i1, i1* %retval.i.i248, align 1, !dbg !11258
  %lnot.i292 = xor i1 %157, true, !dbg !11231
  %lnot.ext.i293 = zext i1 %157 to i32, !dbg !11231
  %conv.i294 = sext i32 %lnot.ext.i293 to i64, !dbg !11231
  br i1 %157, label %if.then.i297, label %copy_from_user.exit298, !dbg !11259

if.then.i297:                                     ; preds = %check_copy_size.exit.i295
  %158 = load i8*, i8** %to.addr.i255, align 8, !dbg !11260
  %159 = load i8*, i8** %from.addr.i256, align 8, !dbg !11261
  %160 = load i64, i64* %n.addr.i257, align 8, !dbg !11262
  %call2.i296 = call i64 @_copy_from_user(i8* %158, i8* %159, i64 %160) #14, !dbg !11263
  store i64 %call2.i296, i64* %n.addr.i257, align 8, !dbg !11264
  br label %copy_from_user.exit298, !dbg !11265

copy_from_user.exit298:                           ; preds = %check_copy_size.exit.i295, %if.then.i297
  %161 = load i64, i64* %n.addr.i257, align 8, !dbg !11266
  %tobool37 = icmp ne i64 %161, 0, !dbg !11267
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !11268

if.then38:                                        ; preds = %copy_from_user.exit298
  store i32 -14, i32* %retval, align 4, !dbg !11269
  br label %return, !dbg !11269

if.end39:                                         ; preds = %copy_from_user.exit298
  store i32 48, i32* %outtotal, align 4, !dbg !11270
  %162 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !11271
  %163 = load i64, i64* %arg.addr, align 8, !dbg !11272
  %164 = inttoptr i64 %163 to i8*, !dbg !11273
  %165 = load i32, i32* %outtotal, align 4, !dbg !11274
  %call40 = call i32 @exec_drive_taskfile(%struct.driver_data* %162, i8* %164, %struct.ide_task_request_s* %req_task, i32 %165) #12, !dbg !11275
  store i32 %call40, i32* %ret, align 4, !dbg !11276
  %166 = load i64, i64* %arg.addr, align 8, !dbg !11277
  %167 = inttoptr i64 %166 to i8*, !dbg !11278
  %168 = bitcast %struct.ide_task_request_s* %req_task to i8*, !dbg !11279
  store i8* %167, i8** %to.addr.i306, align 8
  store i8* %168, i8** %from.addr.i307, align 8
  store i64 48, i64* %n.addr.i308, align 8
  %169 = load i8*, i8** %from.addr.i307, align 8, !dbg !11280
  %170 = load i64, i64* %n.addr.i308, align 8, !dbg !11280
  store i8* %169, i8** %addr.addr.i.i300, align 8
  store i64 %170, i64* %bytes.addr.i.i301, align 8
  store i8 1, i8* %is_source.addr.i.i302, align 1
  store i32 -1, i32* %sz.i.i303, align 4, !dbg !10846
  %171 = load i32, i32* %sz.i.i303, align 4, !dbg !11281
  %cmp.i.i309 = icmp sge i32 %171, 0, !dbg !11281
  br i1 %cmp.i.i309, label %land.rhs.i.i312, label %land.end.i.i316, !dbg !11281

land.rhs.i.i312:                                  ; preds = %if.end39
  %172 = load i32, i32* %sz.i.i303, align 4, !dbg !11281
  %conv.i.i310 = sext i32 %172 to i64, !dbg !11281
  %173 = load i64, i64* %bytes.addr.i.i301, align 8, !dbg !11281
  %cmp1.i.i311 = icmp ult i64 %conv.i.i310, %173, !dbg !11281
  br label %land.end.i.i316

land.end.i.i316:                                  ; preds = %land.rhs.i.i312, %if.end39
  %174 = phi i1 [ false, %if.end39 ], [ %cmp1.i.i311, %land.rhs.i.i312 ], !dbg !11282
  %lnot.i.i313 = xor i1 %174, true, !dbg !11281
  %lnot.ext.i.i314 = zext i1 %174 to i32, !dbg !11281
  %conv4.i.i315 = sext i32 %lnot.ext.i.i314 to i64, !dbg !11281
  br i1 %174, label %if.then.i.i317, label %if.end10.i.i332, !dbg !11283

if.then.i.i317:                                   ; preds = %land.end.i.i316
  %175 = load i64, i64* %bytes.addr.i.i301, align 8, !dbg !11284
  %176 = call i1 @llvm.is.constant.i64(i64 %175) #11, !dbg !11285
  br i1 %176, label %if.else.i.i320, label %if.then5.i.i318, !dbg !11286

if.then5.i.i318:                                  ; preds = %if.then.i.i317
  %177 = load i32, i32* %sz.i.i303, align 4, !dbg !11287
  %178 = load i64, i64* %bytes.addr.i.i301, align 8, !dbg !11288
  call void @copy_overflow(i32 %177, i64 %178) #14, !dbg !11289
  br label %if.end9.i.i324, !dbg !11289

if.else.i.i320:                                   ; preds = %if.then.i.i317
  %179 = load i8, i8* %is_source.addr.i.i302, align 1, !dbg !11290
  %tobool6.i.i319 = trunc i8 %179 to i1, !dbg !11290
  br i1 %tobool6.i.i319, label %if.then7.i.i321, label %if.else8.i.i322, !dbg !11291

if.then7.i.i321:                                  ; preds = %if.else.i.i320
  call void @__bad_copy_from() #14, !dbg !11292
  br label %if.end.i.i323, !dbg !11292

if.else8.i.i322:                                  ; preds = %if.else.i.i320
  call void @__bad_copy_to() #14, !dbg !11293
  br label %if.end.i.i323

if.end.i.i323:                                    ; preds = %if.else8.i.i322, %if.then7.i.i321
  br label %if.end9.i.i324

if.end9.i.i324:                                   ; preds = %if.end.i.i323, %if.then5.i.i318
  store i1 false, i1* %retval.i.i299, align 1, !dbg !11294
  br label %check_copy_size.exit.i346, !dbg !11294

if.end10.i.i332:                                  ; preds = %land.end.i.i316
  %180 = load i64, i64* %bytes.addr.i.i301, align 8, !dbg !10850
  %cmp11.i.i325 = icmp ugt i64 %180, 2147483647, !dbg !10850
  %lnot13.i.i326 = xor i1 %cmp11.i.i325, true, !dbg !10850
  %lnot.ext16.i.i327 = zext i1 %cmp11.i.i325 to i32, !dbg !10850
  store i32 %lnot.ext16.i.i327, i32* %__ret_warn_on.i.i304, align 4, !dbg !10850
  %181 = load i32, i32* %__ret_warn_on.i.i304, align 4, !dbg !11295
  %tobool17.i.i328 = icmp ne i32 %181, 0, !dbg !11295
  %lnot18.i.i329 = xor i1 %tobool17.i.i328, true, !dbg !11295
  %lnot.ext21.i.i330 = zext i1 %tobool17.i.i328 to i32, !dbg !11295
  %conv22.i.i331 = sext i32 %lnot.ext21.i.i330 to i64, !dbg !11295
  br i1 %tobool17.i.i328, label %if.then24.i.i333, label %if.end31.i.i339, !dbg !10850

if.then24.i.i333:                                 ; preds = %if.end10.i.i332
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.40, i64 0, i64 0), i32 150, i32 2307, i64 12) #11, !dbg !11296, !srcloc !10968
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #11, !dbg !11297, !srcloc !10971
  br label %if.end31.i.i339, !dbg !11298

if.end31.i.i339:                                  ; preds = %if.then24.i.i333, %if.end10.i.i332
  %182 = load i32, i32* %__ret_warn_on.i.i304, align 4, !dbg !10850
  %tobool32.i.i334 = icmp ne i32 %182, 0, !dbg !10850
  %lnot33.i.i335 = xor i1 %tobool32.i.i334, true, !dbg !10850
  %lnot.ext36.i.i336 = zext i1 %tobool32.i.i334 to i32, !dbg !10850
  %conv37.i.i337 = sext i32 %lnot.ext36.i.i336 to i64, !dbg !10850
  store i64 %conv37.i.i337, i64* %tmp.i.i305, align 8, !dbg !11295
  %183 = load i64, i64* %tmp.i.i305, align 8, !dbg !10850
  %tobool38.i.i338 = icmp ne i64 %183, 0, !dbg !11299
  br i1 %tobool38.i.i338, label %if.then39.i.i340, label %if.end40.i.i342, !dbg !11300

if.then39.i.i340:                                 ; preds = %if.end31.i.i339
  store i1 false, i1* %retval.i.i299, align 1, !dbg !11301
  br label %check_copy_size.exit.i346, !dbg !11301

if.end40.i.i342:                                  ; preds = %if.end31.i.i339
  %184 = load i8*, i8** %addr.addr.i.i300, align 8, !dbg !11302
  %185 = load i64, i64* %bytes.addr.i.i301, align 8, !dbg !11303
  %186 = load i8, i8* %is_source.addr.i.i302, align 1, !dbg !11304
  %tobool41.i.i341 = trunc i8 %186 to i1, !dbg !11304
  call void @check_object_size(i8* %184, i64 %185, i1 zeroext %tobool41.i.i341) #14, !dbg !11305
  store i1 true, i1* %retval.i.i299, align 1, !dbg !11306
  br label %check_copy_size.exit.i346, !dbg !11306

check_copy_size.exit.i346:                        ; preds = %if.end40.i.i342, %if.then39.i.i340, %if.end9.i.i324
  %187 = load i1, i1* %retval.i.i299, align 1, !dbg !11307
  %lnot.i343 = xor i1 %187, true, !dbg !11280
  %lnot.ext.i344 = zext i1 %187 to i32, !dbg !11280
  %conv.i345 = sext i32 %lnot.ext.i344 to i64, !dbg !11280
  br i1 %187, label %if.then.i348, label %copy_to_user.exit349, !dbg !11308

if.then.i348:                                     ; preds = %check_copy_size.exit.i346
  %188 = load i8*, i8** %to.addr.i306, align 8, !dbg !11309
  %189 = load i8*, i8** %from.addr.i307, align 8, !dbg !11310
  %190 = load i64, i64* %n.addr.i308, align 8, !dbg !11311
  %call2.i347 = call i64 @_copy_to_user(i8* %188, i8* %189, i64 %190) #14, !dbg !11312
  store i64 %call2.i347, i64* %n.addr.i308, align 8, !dbg !11313
  br label %copy_to_user.exit349, !dbg !11314

copy_to_user.exit349:                             ; preds = %check_copy_size.exit.i346, %if.then.i348
  %191 = load i64, i64* %n.addr.i308, align 8, !dbg !11315
  %tobool42 = icmp ne i64 %191, 0, !dbg !11316
  br i1 %tobool42, label %if.then43, label %if.end44, !dbg !11317

if.then43:                                        ; preds = %copy_to_user.exit349
  store i32 -14, i32* %retval, align 4, !dbg !11318
  br label %return, !dbg !11318

if.end44:                                         ; preds = %copy_to_user.exit349
  %192 = load i32, i32* %ret, align 4, !dbg !11319
  store i32 %192, i32* %retval, align 4, !dbg !11320
  br label %return, !dbg !11320

sw.default:                                       ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !11321
  br label %return, !dbg !11321

sw.epilog:                                        ; preds = %if.end34, %if.end16, %if.end
  store i32 0, i32* %retval, align 4, !dbg !11322
  br label %return, !dbg !11322

return:                                           ; preds = %sw.epilog, %sw.default, %if.end44, %if.then43, %if.then38, %if.then33, %if.then28, %if.then22, %if.then15, %if.then10, %if.then4, %if.then
  %193 = load i32, i32* %retval, align 4, !dbg !11323
  ret i32 %193, !dbg !11323
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @exec_drive_command(%struct.mtip_port* %port, i8* %command, i8* %user_buffer) #2 !dbg !11324 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !10825, metadata !DIExpression()), !dbg !11327
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !10841, metadata !DIExpression()), !dbg !11333
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !10843, metadata !DIExpression()), !dbg !11334
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !10845, metadata !DIExpression()), !dbg !11335
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !10847, metadata !DIExpression()), !dbg !11336
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !10851, metadata !DIExpression()), !dbg !11337
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !10853, metadata !DIExpression()), !dbg !11338
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !10855, metadata !DIExpression()), !dbg !11339
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.mtip_port*, align 8
  %command.addr = alloca i8*, align 8
  %user_buffer.addr = alloca i8*, align 8
  %fis = alloca %struct.host_to_dev_fis, align 4
  %reply = alloca %struct.host_to_dev_fis*, align 8
  %buf = alloca i8*, align 8
  %dma_addr = alloca i64, align 8
  %rv = alloca i32, align 4
  %xfer_sz = alloca i32, align 4
  %to = alloca i32, align 4
  store %struct.mtip_port* %port, %struct.mtip_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mtip_port** %port.addr, metadata !11340, metadata !DIExpression()), !dbg !11341
  store i8* %command, i8** %command.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %command.addr, metadata !11342, metadata !DIExpression()), !dbg !11343
  store i8* %user_buffer, i8** %user_buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %user_buffer.addr, metadata !11344, metadata !DIExpression()), !dbg !11345
  call void @llvm.dbg.declare(metadata %struct.host_to_dev_fis* %fis, metadata !11346, metadata !DIExpression()), !dbg !11347
  call void @llvm.dbg.declare(metadata %struct.host_to_dev_fis** %reply, metadata !11348, metadata !DIExpression()), !dbg !11349
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !11350, metadata !DIExpression()), !dbg !11351
  store i8* null, i8** %buf, align 8, !dbg !11351
  call void @llvm.dbg.declare(metadata i64* %dma_addr, metadata !11352, metadata !DIExpression()), !dbg !11353
  store i64 0, i64* %dma_addr, align 8, !dbg !11353
  call void @llvm.dbg.declare(metadata i32* %rv, metadata !11354, metadata !DIExpression()), !dbg !11355
  store i32 0, i32* %rv, align 4, !dbg !11355
  call void @llvm.dbg.declare(metadata i32* %xfer_sz, metadata !11356, metadata !DIExpression()), !dbg !11357
  %0 = load i8*, i8** %command.addr, align 8, !dbg !11358
  %arrayidx = getelementptr i8, i8* %0, i64 3, !dbg !11358
  %1 = load i8, i8* %arrayidx, align 1, !dbg !11358
  %conv = zext i8 %1 to i32, !dbg !11358
  store i32 %conv, i32* %xfer_sz, align 4, !dbg !11357
  call void @llvm.dbg.declare(metadata i32* %to, metadata !11359, metadata !DIExpression()), !dbg !11360
  %2 = load i32, i32* %xfer_sz, align 4, !dbg !11361
  %tobool = icmp ne i32 %2, 0, !dbg !11361
  br i1 %tobool, label %if.then, label %if.end11, !dbg !11363

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %user_buffer.addr, align 8, !dbg !11364
  %tobool1 = icmp ne i8* %3, null, !dbg !11364
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !11367

if.then2:                                         ; preds = %if.then
  store i32 -14, i32* %retval, align 4, !dbg !11368
  br label %return, !dbg !11368

if.end:                                           ; preds = %if.then
  %4 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !11369
  %dd = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %4, i32 0, i32 0, !dbg !11370
  %5 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !11370
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %5, i32 0, i32 4, !dbg !11371
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11371
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 41, !dbg !11372
  %7 = load i32, i32* %xfer_sz, align 4, !dbg !11373
  %mul = mul i32 512, %7, !dbg !11374
  %conv3 = sext i32 %mul to i64, !dbg !11375
  %call = call i8* @dma_alloc_coherent(%struct.device* %dev, i64 %conv3, i64* %dma_addr, i32 3264) #12, !dbg !11376
  store i8* %call, i8** %buf, align 8, !dbg !11377
  %8 = load i8*, i8** %buf, align 8, !dbg !11378
  %tobool4 = icmp ne i8* %8, null, !dbg !11378
  br i1 %tobool4, label %if.end10, label %if.then5, !dbg !11380

if.then5:                                         ; preds = %if.end
  %9 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !11381
  %dd6 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %9, i32 0, i32 0, !dbg !11381
  %10 = load %struct.driver_data*, %struct.driver_data** %dd6, align 8, !dbg !11381
  %pdev7 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %10, i32 0, i32 4, !dbg !11381
  %11 = load %struct.pci_dev*, %struct.pci_dev** %pdev7, align 8, !dbg !11381
  %dev8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 41, !dbg !11381
  %12 = load i32, i32* %xfer_sz, align 4, !dbg !11381
  %mul9 = mul i32 512, %12, !dbg !11381
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev8, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.42, i64 0, i64 0), i32 %mul9) #13, !dbg !11381
  store i32 -12, i32* %retval, align 4, !dbg !11383
  br label %return, !dbg !11383

if.end10:                                         ; preds = %if.end
  br label %if.end11, !dbg !11384

if.end11:                                         ; preds = %if.end10, %entry
  %13 = bitcast %struct.host_to_dev_fis* %fis to i8*, !dbg !11385
  call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 20, i1 false), !dbg !11385
  %type = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 0, !dbg !11386
  store i8 39, i8* %type, align 4, !dbg !11387
  %opts = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 1, !dbg !11388
  store i8 -128, i8* %opts, align 1, !dbg !11389
  %14 = load i8*, i8** %command.addr, align 8, !dbg !11390
  %arrayidx12 = getelementptr i8, i8* %14, i64 0, !dbg !11390
  %15 = load i8, i8* %arrayidx12, align 1, !dbg !11390
  %command13 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 2, !dbg !11391
  store i8 %15, i8* %command13, align 2, !dbg !11392
  %16 = load i8*, i8** %command.addr, align 8, !dbg !11393
  %arrayidx14 = getelementptr i8, i8* %16, i64 2, !dbg !11393
  %17 = load i8, i8* %arrayidx14, align 1, !dbg !11393
  %features = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 3, !dbg !11394
  store i8 %17, i8* %features, align 1, !dbg !11395
  %18 = load i8*, i8** %command.addr, align 8, !dbg !11396
  %arrayidx15 = getelementptr i8, i8* %18, i64 3, !dbg !11396
  %19 = load i8, i8* %arrayidx15, align 1, !dbg !11396
  %sect_count = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 12, !dbg !11397
  store i8 %19, i8* %sect_count, align 4, !dbg !11398
  %command16 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 2, !dbg !11399
  %20 = load i8, i8* %command16, align 2, !dbg !11399
  %conv17 = zext i8 %20 to i32, !dbg !11401
  %cmp = icmp eq i32 %conv17, 176, !dbg !11402
  br i1 %cmp, label %if.then19, label %if.end21, !dbg !11403

if.then19:                                        ; preds = %if.end11
  %21 = load i8*, i8** %command.addr, align 8, !dbg !11404
  %arrayidx20 = getelementptr i8, i8* %21, i64 1, !dbg !11404
  %22 = load i8, i8* %arrayidx20, align 1, !dbg !11404
  %23 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 4, !dbg !11406
  %sector = bitcast %union.anon.87* %23 to i8*, !dbg !11406
  store i8 %22, i8* %sector, align 4, !dbg !11407
  %24 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 5, !dbg !11408
  %cyl_low = bitcast %union.anon.88* %24 to i8*, !dbg !11408
  store i8 79, i8* %cyl_low, align 1, !dbg !11409
  %25 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 6, !dbg !11410
  %cyl_hi = bitcast %union.anon.89* %25 to i8*, !dbg !11410
  store i8 -62, i8* %cyl_hi, align 2, !dbg !11411
  br label %if.end21, !dbg !11412

if.end21:                                         ; preds = %if.then19, %if.end11
  %26 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !11413
  %dd22 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %26, i32 0, i32 0, !dbg !11414
  %27 = load %struct.driver_data*, %struct.driver_data** %dd22, align 8, !dbg !11414
  call void @mtip_set_timeout(%struct.driver_data* %27, %struct.host_to_dev_fis* %fis, i32* %to, i8 zeroext 0) #12, !dbg !11415
  %28 = load i32, i32* %xfer_sz, align 4, !dbg !11416
  %tobool23 = icmp ne i32 %28, 0, !dbg !11416
  br i1 %tobool23, label %if.then24, label %if.else, !dbg !11418

if.then24:                                        ; preds = %if.end21
  %29 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !11419
  %rxfis = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %29, i32 0, i32 8, !dbg !11420
  %30 = load i8*, i8** %rxfis, align 8, !dbg !11420
  %add.ptr = getelementptr i8, i8* %30, i64 32, !dbg !11421
  %31 = bitcast i8* %add.ptr to %struct.host_to_dev_fis*, !dbg !11422
  store %struct.host_to_dev_fis* %31, %struct.host_to_dev_fis** %reply, align 8, !dbg !11423
  br label %if.end27, !dbg !11424

if.else:                                          ; preds = %if.end21
  %32 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !11425
  %rxfis25 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %32, i32 0, i32 8, !dbg !11426
  %33 = load i8*, i8** %rxfis25, align 8, !dbg !11426
  %add.ptr26 = getelementptr i8, i8* %33, i64 64, !dbg !11427
  %34 = bitcast i8* %add.ptr26 to %struct.host_to_dev_fis*, !dbg !11428
  store %struct.host_to_dev_fis* %34, %struct.host_to_dev_fis** %reply, align 8, !dbg !11429
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.then24
  %35 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !11430
  %36 = load i32, i32* %xfer_sz, align 4, !dbg !11432
  %tobool28 = icmp ne i32 %36, 0, !dbg !11432
  br i1 %tobool28, label %cond.true, label %cond.false, !dbg !11432

cond.true:                                        ; preds = %if.end27
  %37 = load i64, i64* %dma_addr, align 8, !dbg !11433
  br label %cond.end, !dbg !11432

cond.false:                                       ; preds = %if.end27
  br label %cond.end, !dbg !11432

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %37, %cond.true ], [ 0, %cond.false ], !dbg !11432
  %38 = load i32, i32* %xfer_sz, align 4, !dbg !11434
  %tobool29 = icmp ne i32 %38, 0, !dbg !11434
  br i1 %tobool29, label %cond.true30, label %cond.false32, !dbg !11434

cond.true30:                                      ; preds = %cond.end
  %39 = load i32, i32* %xfer_sz, align 4, !dbg !11435
  %mul31 = mul i32 512, %39, !dbg !11436
  br label %cond.end33, !dbg !11434

cond.false32:                                     ; preds = %cond.end
  br label %cond.end33, !dbg !11434

cond.end33:                                       ; preds = %cond.false32, %cond.true30
  %cond34 = phi i32 [ %mul31, %cond.true30 ], [ 0, %cond.false32 ], !dbg !11434
  %40 = load i32, i32* %to, align 4, !dbg !11437
  %conv35 = zext i32 %40 to i64, !dbg !11437
  %call36 = call i32 @mtip_exec_internal_command(%struct.mtip_port* %35, %struct.host_to_dev_fis* %fis, i32 5, i64 %cond, i32 %cond34, i32 0, i64 %conv35) #12, !dbg !11438
  %cmp37 = icmp slt i32 %call36, 0, !dbg !11439
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !11440

if.then39:                                        ; preds = %cond.end33
  store i32 -14, i32* %rv, align 4, !dbg !11441
  br label %exit_drive_command, !dbg !11443

if.end40:                                         ; preds = %cond.end33
  %41 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %reply, align 8, !dbg !11444
  %command41 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %41, i32 0, i32 2, !dbg !11445
  %42 = load i8, i8* %command41, align 2, !dbg !11445
  %43 = load i8*, i8** %command.addr, align 8, !dbg !11446
  %arrayidx42 = getelementptr i8, i8* %43, i64 0, !dbg !11446
  store i8 %42, i8* %arrayidx42, align 1, !dbg !11447
  %44 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %reply, align 8, !dbg !11448
  %features43 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %44, i32 0, i32 3, !dbg !11449
  %45 = load i8, i8* %features43, align 1, !dbg !11449
  %46 = load i8*, i8** %command.addr, align 8, !dbg !11450
  %arrayidx44 = getelementptr i8, i8* %46, i64 1, !dbg !11450
  store i8 %45, i8* %arrayidx44, align 1, !dbg !11451
  %47 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %reply, align 8, !dbg !11452
  %sect_count45 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %47, i32 0, i32 12, !dbg !11453
  %48 = load i8, i8* %sect_count45, align 4, !dbg !11453
  %49 = load i8*, i8** %command.addr, align 8, !dbg !11454
  %arrayidx46 = getelementptr i8, i8* %49, i64 2, !dbg !11454
  store i8 %48, i8* %arrayidx46, align 1, !dbg !11455
  %50 = load i32, i32* %xfer_sz, align 4, !dbg !11456
  %tobool47 = icmp ne i32 %50, 0, !dbg !11456
  br i1 %tobool47, label %if.then48, label %if.end57, !dbg !11457

if.then48:                                        ; preds = %if.end40
  %51 = load i8*, i8** %user_buffer.addr, align 8, !dbg !11458
  %52 = load i8*, i8** %buf, align 8, !dbg !11459
  %53 = load i8*, i8** %command.addr, align 8, !dbg !11460
  %arrayidx49 = getelementptr i8, i8* %53, i64 3, !dbg !11460
  %54 = load i8, i8* %arrayidx49, align 1, !dbg !11460
  %conv50 = zext i8 %54 to i32, !dbg !11460
  %mul51 = mul i32 512, %conv50, !dbg !11461
  %conv52 = sext i32 %mul51 to i64, !dbg !11462
  store i8* %51, i8** %to.addr.i, align 8
  store i8* %52, i8** %from.addr.i, align 8
  store i64 %conv52, i64* %n.addr.i, align 8
  %55 = load i8*, i8** %from.addr.i, align 8, !dbg !11463
  %56 = load i64, i64* %n.addr.i, align 8, !dbg !11463
  store i8* %55, i8** %addr.addr.i.i, align 8
  store i64 %56, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !11335
  %57 = load i32, i32* %sz.i.i, align 4, !dbg !11464
  %cmp.i.i = icmp sge i32 %57, 0, !dbg !11464
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !11464

land.rhs.i.i:                                     ; preds = %if.then48
  %58 = load i32, i32* %sz.i.i, align 4, !dbg !11464
  %conv.i.i = sext i32 %58 to i64, !dbg !11464
  %59 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11464
  %cmp1.i.i = icmp ult i64 %conv.i.i, %59, !dbg !11464
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.then48
  %60 = phi i1 [ false, %if.then48 ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !11465
  %lnot.i.i = xor i1 %60, true, !dbg !11464
  %lnot.ext.i.i = zext i1 %60 to i32, !dbg !11464
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !11464
  br i1 %60, label %if.then.i.i, label %if.end10.i.i, !dbg !11466

if.then.i.i:                                      ; preds = %land.end.i.i
  %61 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11467
  %62 = call i1 @llvm.is.constant.i64(i64 %61) #11, !dbg !11468
  br i1 %62, label %if.else.i.i, label %if.then5.i.i, !dbg !11469

if.then5.i.i:                                     ; preds = %if.then.i.i
  %63 = load i32, i32* %sz.i.i, align 4, !dbg !11470
  %64 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11471
  call void @copy_overflow(i32 %63, i64 %64) #14, !dbg !11472
  br label %if.end9.i.i, !dbg !11472

if.else.i.i:                                      ; preds = %if.then.i.i
  %65 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !11473
  %tobool6.i.i = trunc i8 %65 to i1, !dbg !11473
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !11474

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #14, !dbg !11475
  br label %if.end.i.i, !dbg !11475

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #14, !dbg !11476
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !11477
  br label %check_copy_size.exit.i, !dbg !11477

if.end10.i.i:                                     ; preds = %land.end.i.i
  %66 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11336
  %cmp11.i.i = icmp ugt i64 %66, 2147483647, !dbg !11336
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !11336
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !11336
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !11336
  %67 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !11478
  %tobool17.i.i = icmp ne i32 %67, 0, !dbg !11478
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !11478
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !11478
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !11478
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !11336

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.40, i64 0, i64 0), i32 150, i32 2307, i64 12) #11, !dbg !11479, !srcloc !10968
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #11, !dbg !11480, !srcloc !10971
  br label %if.end31.i.i, !dbg !11481

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %68 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !11336
  %tobool32.i.i = icmp ne i32 %68, 0, !dbg !11336
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !11336
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !11336
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !11336
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !11478
  %69 = load i64, i64* %tmp.i.i, align 8, !dbg !11336
  %tobool38.i.i = icmp ne i64 %69, 0, !dbg !11482
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !11483

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !11484
  br label %check_copy_size.exit.i, !dbg !11484

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %70 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !11485
  %71 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11486
  %72 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !11487
  %tobool41.i.i = trunc i8 %72 to i1, !dbg !11487
  call void @check_object_size(i8* %70, i64 %71, i1 zeroext %tobool41.i.i) #14, !dbg !11488
  store i1 true, i1* %retval.i.i, align 1, !dbg !11489
  br label %check_copy_size.exit.i, !dbg !11489

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %73 = load i1, i1* %retval.i.i, align 1, !dbg !11490
  %lnot.i = xor i1 %73, true, !dbg !11463
  %lnot.ext.i = zext i1 %73 to i32, !dbg !11463
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !11463
  br i1 %73, label %if.then.i, label %copy_to_user.exit, !dbg !11491

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %74 = load i8*, i8** %to.addr.i, align 8, !dbg !11492
  %75 = load i8*, i8** %from.addr.i, align 8, !dbg !11493
  %76 = load i64, i64* %n.addr.i, align 8, !dbg !11494
  %call2.i = call i64 @_copy_to_user(i8* %74, i8* %75, i64 %76) #14, !dbg !11495
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !11496
  br label %copy_to_user.exit, !dbg !11497

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %77 = load i64, i64* %n.addr.i, align 8, !dbg !11498
  %tobool54 = icmp ne i64 %77, 0, !dbg !11499
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !11500

if.then55:                                        ; preds = %copy_to_user.exit
  store i32 -14, i32* %rv, align 4, !dbg !11501
  br label %exit_drive_command, !dbg !11503

if.end56:                                         ; preds = %copy_to_user.exit
  br label %if.end57, !dbg !11504

if.end57:                                         ; preds = %if.end56, %if.end40
  br label %exit_drive_command, !dbg !11456

exit_drive_command:                               ; preds = %if.end57, %if.then55, %if.then39
  call void @llvm.dbg.label(metadata !11505), !dbg !11506
  %78 = load i8*, i8** %buf, align 8, !dbg !11507
  %tobool58 = icmp ne i8* %78, null, !dbg !11507
  br i1 %tobool58, label %if.then59, label %if.end65, !dbg !11509

if.then59:                                        ; preds = %exit_drive_command
  %79 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !11510
  %dd60 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %79, i32 0, i32 0, !dbg !11511
  %80 = load %struct.driver_data*, %struct.driver_data** %dd60, align 8, !dbg !11511
  %pdev61 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %80, i32 0, i32 4, !dbg !11512
  %81 = load %struct.pci_dev*, %struct.pci_dev** %pdev61, align 8, !dbg !11512
  %dev62 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %81, i32 0, i32 41, !dbg !11513
  %82 = load i32, i32* %xfer_sz, align 4, !dbg !11514
  %mul63 = mul i32 512, %82, !dbg !11515
  %conv64 = sext i32 %mul63 to i64, !dbg !11516
  %83 = load i8*, i8** %buf, align 8, !dbg !11517
  %84 = load i64, i64* %dma_addr, align 8, !dbg !11518
  call void @dma_free_coherent(%struct.device* %dev62, i64 %conv64, i8* %83, i64 %84) #12, !dbg !11519
  br label %if.end65, !dbg !11519

if.end65:                                         ; preds = %if.then59, %exit_drive_command
  %85 = load i32, i32* %rv, align 4, !dbg !11520
  store i32 %85, i32* %retval, align 4, !dbg !11521
  br label %return, !dbg !11521

return:                                           ; preds = %if.end65, %if.then5, %if.then2
  %86 = load i32, i32* %retval, align 4, !dbg !11522
  ret i32 %86, !dbg !11522
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @exec_drive_task(%struct.mtip_port* %port, i8* %command) #2 !dbg !11523 {
entry:
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.mtip_port*, align 8
  %command.addr = alloca i8*, align 8
  %fis = alloca %struct.host_to_dev_fis, align 4
  %reply = alloca %struct.host_to_dev_fis*, align 8
  %to = alloca i32, align 4
  store %struct.mtip_port* %port, %struct.mtip_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mtip_port** %port.addr, metadata !11526, metadata !DIExpression()), !dbg !11527
  store i8* %command, i8** %command.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %command.addr, metadata !11528, metadata !DIExpression()), !dbg !11529
  call void @llvm.dbg.declare(metadata %struct.host_to_dev_fis* %fis, metadata !11530, metadata !DIExpression()), !dbg !11531
  call void @llvm.dbg.declare(metadata %struct.host_to_dev_fis** %reply, metadata !11532, metadata !DIExpression()), !dbg !11533
  %0 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !11534
  %rxfis = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %0, i32 0, i32 8, !dbg !11535
  %1 = load i8*, i8** %rxfis, align 8, !dbg !11535
  %add.ptr = getelementptr i8, i8* %1, i64 64, !dbg !11536
  %2 = bitcast i8* %add.ptr to %struct.host_to_dev_fis*, !dbg !11537
  store %struct.host_to_dev_fis* %2, %struct.host_to_dev_fis** %reply, align 8, !dbg !11533
  call void @llvm.dbg.declare(metadata i32* %to, metadata !11538, metadata !DIExpression()), !dbg !11539
  %3 = bitcast %struct.host_to_dev_fis* %fis to i8*, !dbg !11540
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 20, i1 false), !dbg !11540
  %type = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 0, !dbg !11541
  store i8 39, i8* %type, align 4, !dbg !11542
  %opts = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 1, !dbg !11543
  store i8 -128, i8* %opts, align 1, !dbg !11544
  %4 = load i8*, i8** %command.addr, align 8, !dbg !11545
  %arrayidx = getelementptr i8, i8* %4, i64 0, !dbg !11545
  %5 = load i8, i8* %arrayidx, align 1, !dbg !11545
  %command1 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 2, !dbg !11546
  store i8 %5, i8* %command1, align 2, !dbg !11547
  %6 = load i8*, i8** %command.addr, align 8, !dbg !11548
  %arrayidx2 = getelementptr i8, i8* %6, i64 1, !dbg !11548
  %7 = load i8, i8* %arrayidx2, align 1, !dbg !11548
  %features = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 3, !dbg !11549
  store i8 %7, i8* %features, align 1, !dbg !11550
  %8 = load i8*, i8** %command.addr, align 8, !dbg !11551
  %arrayidx3 = getelementptr i8, i8* %8, i64 2, !dbg !11551
  %9 = load i8, i8* %arrayidx3, align 1, !dbg !11551
  %sect_count = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 12, !dbg !11552
  store i8 %9, i8* %sect_count, align 4, !dbg !11553
  %10 = load i8*, i8** %command.addr, align 8, !dbg !11554
  %arrayidx4 = getelementptr i8, i8* %10, i64 3, !dbg !11554
  %11 = load i8, i8* %arrayidx4, align 1, !dbg !11554
  %12 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 4, !dbg !11555
  %sector = bitcast %union.anon.87* %12 to i8*, !dbg !11555
  store i8 %11, i8* %sector, align 4, !dbg !11556
  %13 = load i8*, i8** %command.addr, align 8, !dbg !11557
  %arrayidx5 = getelementptr i8, i8* %13, i64 4, !dbg !11557
  %14 = load i8, i8* %arrayidx5, align 1, !dbg !11557
  %15 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 5, !dbg !11558
  %cyl_low = bitcast %union.anon.88* %15 to i8*, !dbg !11558
  store i8 %14, i8* %cyl_low, align 1, !dbg !11559
  %16 = load i8*, i8** %command.addr, align 8, !dbg !11560
  %arrayidx6 = getelementptr i8, i8* %16, i64 5, !dbg !11560
  %17 = load i8, i8* %arrayidx6, align 1, !dbg !11560
  %18 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 6, !dbg !11561
  %cyl_hi = bitcast %union.anon.89* %18 to i8*, !dbg !11561
  store i8 %17, i8* %cyl_hi, align 2, !dbg !11562
  %19 = load i8*, i8** %command.addr, align 8, !dbg !11563
  %arrayidx7 = getelementptr i8, i8* %19, i64 6, !dbg !11563
  %20 = load i8, i8* %arrayidx7, align 1, !dbg !11563
  %conv = zext i8 %20 to i32, !dbg !11563
  %and = and i32 %conv, -17, !dbg !11564
  %conv8 = trunc i32 %and to i8, !dbg !11563
  %21 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 7, !dbg !11565
  %device = bitcast %union.anon.90* %21 to i8*, !dbg !11565
  store i8 %conv8, i8* %device, align 1, !dbg !11566
  %22 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !11567
  %dd = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %22, i32 0, i32 0, !dbg !11568
  %23 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !11568
  call void @mtip_set_timeout(%struct.driver_data* %23, %struct.host_to_dev_fis* %fis, i32* %to, i8 zeroext 0) #12, !dbg !11569
  %24 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !11570
  %25 = load i32, i32* %to, align 4, !dbg !11572
  %conv9 = zext i32 %25 to i64, !dbg !11572
  %call = call i32 @mtip_exec_internal_command(%struct.mtip_port* %24, %struct.host_to_dev_fis* %fis, i32 5, i64 0, i32 0, i32 0, i64 %conv9) #12, !dbg !11573
  %cmp = icmp slt i32 %call, 0, !dbg !11574
  br i1 %cmp, label %if.then, label %if.end, !dbg !11575

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !11576
  br label %return, !dbg !11576

if.end:                                           ; preds = %entry
  %26 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %reply, align 8, !dbg !11578
  %command11 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %26, i32 0, i32 2, !dbg !11579
  %27 = load i8, i8* %command11, align 2, !dbg !11579
  %28 = load i8*, i8** %command.addr, align 8, !dbg !11580
  %arrayidx12 = getelementptr i8, i8* %28, i64 0, !dbg !11580
  store i8 %27, i8* %arrayidx12, align 1, !dbg !11581
  %29 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %reply, align 8, !dbg !11582
  %features13 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %29, i32 0, i32 3, !dbg !11583
  %30 = load i8, i8* %features13, align 1, !dbg !11583
  %31 = load i8*, i8** %command.addr, align 8, !dbg !11584
  %arrayidx14 = getelementptr i8, i8* %31, i64 1, !dbg !11584
  store i8 %30, i8* %arrayidx14, align 1, !dbg !11585
  %32 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %reply, align 8, !dbg !11586
  %33 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %32, i32 0, i32 5, !dbg !11587
  %cyl_low15 = bitcast %union.anon.88* %33 to i8*, !dbg !11587
  %34 = load i8, i8* %cyl_low15, align 1, !dbg !11587
  %35 = load i8*, i8** %command.addr, align 8, !dbg !11588
  %arrayidx16 = getelementptr i8, i8* %35, i64 4, !dbg !11588
  store i8 %34, i8* %arrayidx16, align 1, !dbg !11589
  %36 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %reply, align 8, !dbg !11590
  %37 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %36, i32 0, i32 6, !dbg !11591
  %cyl_hi17 = bitcast %union.anon.89* %37 to i8*, !dbg !11591
  %38 = load i8, i8* %cyl_hi17, align 2, !dbg !11591
  %39 = load i8*, i8** %command.addr, align 8, !dbg !11592
  %arrayidx18 = getelementptr i8, i8* %39, i64 5, !dbg !11592
  store i8 %38, i8* %arrayidx18, align 1, !dbg !11593
  store i32 0, i32* %retval, align 4, !dbg !11594
  br label %return, !dbg !11594

return:                                           ; preds = %if.end, %if.then
  %40 = load i32, i32* %retval, align 4, !dbg !11595
  ret i32 %40, !dbg !11595
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @exec_drive_taskfile(%struct.driver_data* %dd, i8* %buf, %struct.ide_task_request_s* %req_task, i32 %outtotal) #2 !dbg !11596 {
entry:
  %retval.i.i245 = alloca i1, align 1
  %addr.addr.i.i246 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i246, metadata !10825, metadata !DIExpression()), !dbg !11600
  %bytes.addr.i.i247 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i247, metadata !10841, metadata !DIExpression()), !dbg !11606
  %is_source.addr.i.i248 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i248, metadata !10843, metadata !DIExpression()), !dbg !11607
  %sz.i.i249 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i249, metadata !10845, metadata !DIExpression()), !dbg !11608
  %__ret_warn_on.i.i250 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i250, metadata !10847, metadata !DIExpression()), !dbg !11609
  %tmp.i.i251 = alloca i64, align 8
  %to.addr.i252 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i252, metadata !10851, metadata !DIExpression()), !dbg !11610
  %from.addr.i253 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i253, metadata !10853, metadata !DIExpression()), !dbg !11611
  %n.addr.i254 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i254, metadata !10855, metadata !DIExpression()), !dbg !11612
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !10825, metadata !DIExpression()), !dbg !11613
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !10841, metadata !DIExpression()), !dbg !11619
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !10843, metadata !DIExpression()), !dbg !11620
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !10845, metadata !DIExpression()), !dbg !11621
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !10847, metadata !DIExpression()), !dbg !11622
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !10851, metadata !DIExpression()), !dbg !11623
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !10853, metadata !DIExpression()), !dbg !11624
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !10855, metadata !DIExpression()), !dbg !11625
  %retval = alloca i32, align 4
  %dd.addr = alloca %struct.driver_data*, align 8
  %buf.addr = alloca i8*, align 8
  %req_task.addr = alloca %struct.ide_task_request_s*, align 8
  %outtotal.addr = alloca i32, align 4
  %fis = alloca %struct.host_to_dev_fis, align 4
  %reply = alloca %struct.host_to_dev_fis*, align 8
  %outbuf = alloca i8*, align 8
  %inbuf = alloca i8*, align 8
  %outbuf_dma = alloca i64, align 8
  %inbuf_dma = alloca i64, align 8
  %dma_buffer = alloca i64, align 8
  %err = alloca i32, align 4
  %taskin = alloca i32, align 4
  %taskout = alloca i32, align 4
  %nsect = alloca i8, align 1
  %timeout = alloca i32, align 4
  %force_single_sector = alloca i32, align 4
  %transfer_size = alloca i32, align 4
  %task_file_data = alloca i64, align 8
  %intotal = alloca i32, align 4
  %erasemode = alloca i32, align 4
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !11626, metadata !DIExpression()), !dbg !11627
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11628, metadata !DIExpression()), !dbg !11629
  store %struct.ide_task_request_s* %req_task, %struct.ide_task_request_s** %req_task.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ide_task_request_s** %req_task.addr, metadata !11630, metadata !DIExpression()), !dbg !11631
  store i32 %outtotal, i32* %outtotal.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %outtotal.addr, metadata !11632, metadata !DIExpression()), !dbg !11633
  call void @llvm.dbg.declare(metadata %struct.host_to_dev_fis* %fis, metadata !11634, metadata !DIExpression()), !dbg !11635
  call void @llvm.dbg.declare(metadata %struct.host_to_dev_fis** %reply, metadata !11636, metadata !DIExpression()), !dbg !11637
  call void @llvm.dbg.declare(metadata i8** %outbuf, metadata !11638, metadata !DIExpression()), !dbg !11639
  store i8* null, i8** %outbuf, align 8, !dbg !11639
  call void @llvm.dbg.declare(metadata i8** %inbuf, metadata !11640, metadata !DIExpression()), !dbg !11641
  store i8* null, i8** %inbuf, align 8, !dbg !11641
  call void @llvm.dbg.declare(metadata i64* %outbuf_dma, metadata !11642, metadata !DIExpression()), !dbg !11643
  store i64 0, i64* %outbuf_dma, align 8, !dbg !11643
  call void @llvm.dbg.declare(metadata i64* %inbuf_dma, metadata !11644, metadata !DIExpression()), !dbg !11645
  store i64 0, i64* %inbuf_dma, align 8, !dbg !11645
  call void @llvm.dbg.declare(metadata i64* %dma_buffer, metadata !11646, metadata !DIExpression()), !dbg !11647
  store i64 0, i64* %dma_buffer, align 8, !dbg !11647
  call void @llvm.dbg.declare(metadata i32* %err, metadata !11648, metadata !DIExpression()), !dbg !11649
  store i32 0, i32* %err, align 4, !dbg !11649
  call void @llvm.dbg.declare(metadata i32* %taskin, metadata !11650, metadata !DIExpression()), !dbg !11651
  store i32 0, i32* %taskin, align 4, !dbg !11651
  call void @llvm.dbg.declare(metadata i32* %taskout, metadata !11652, metadata !DIExpression()), !dbg !11653
  store i32 0, i32* %taskout, align 4, !dbg !11653
  call void @llvm.dbg.declare(metadata i8* %nsect, metadata !11654, metadata !DIExpression()), !dbg !11655
  store i8 0, i8* %nsect, align 1, !dbg !11655
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !11656, metadata !DIExpression()), !dbg !11657
  call void @llvm.dbg.declare(metadata i32* %force_single_sector, metadata !11658, metadata !DIExpression()), !dbg !11659
  call void @llvm.dbg.declare(metadata i32* %transfer_size, metadata !11660, metadata !DIExpression()), !dbg !11661
  call void @llvm.dbg.declare(metadata i64* %task_file_data, metadata !11662, metadata !DIExpression()), !dbg !11663
  call void @llvm.dbg.declare(metadata i32* %intotal, metadata !11664, metadata !DIExpression()), !dbg !11665
  %0 = load i32, i32* %outtotal.addr, align 4, !dbg !11666
  %conv = sext i32 %0 to i64, !dbg !11666
  %1 = load %struct.ide_task_request_s*, %struct.ide_task_request_s** %req_task.addr, align 8, !dbg !11667
  %out_size = getelementptr inbounds %struct.ide_task_request_s, %struct.ide_task_request_s* %1, i32 0, i32 6, !dbg !11668
  %2 = load i64, i64* %out_size, align 8, !dbg !11668
  %add = add i64 %conv, %2, !dbg !11669
  %conv1 = trunc i64 %add to i32, !dbg !11666
  store i32 %conv1, i32* %intotal, align 4, !dbg !11665
  call void @llvm.dbg.declare(metadata i32* %erasemode, metadata !11670, metadata !DIExpression()), !dbg !11671
  store i32 0, i32* %erasemode, align 4, !dbg !11671
  %3 = load %struct.ide_task_request_s*, %struct.ide_task_request_s** %req_task.addr, align 8, !dbg !11672
  %out_size2 = getelementptr inbounds %struct.ide_task_request_s, %struct.ide_task_request_s* %3, i32 0, i32 6, !dbg !11673
  %4 = load i64, i64* %out_size2, align 8, !dbg !11673
  %conv3 = trunc i64 %4 to i32, !dbg !11672
  store i32 %conv3, i32* %taskout, align 4, !dbg !11674
  %5 = load %struct.ide_task_request_s*, %struct.ide_task_request_s** %req_task.addr, align 8, !dbg !11675
  %in_size = getelementptr inbounds %struct.ide_task_request_s, %struct.ide_task_request_s* %5, i32 0, i32 7, !dbg !11676
  %6 = load i64, i64* %in_size, align 8, !dbg !11676
  %conv4 = trunc i64 %6 to i32, !dbg !11675
  store i32 %conv4, i32* %taskin, align 4, !dbg !11677
  %7 = load i32, i32* %taskin, align 4, !dbg !11678
  %cmp = icmp ugt i32 %7, 130560, !dbg !11680
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11681

lor.lhs.false:                                    ; preds = %entry
  %8 = load i32, i32* %taskout, align 4, !dbg !11682
  %cmp6 = icmp ugt i32 %8, 130560, !dbg !11683
  br i1 %cmp6, label %if.then, label %if.end, !dbg !11684

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !11685
  br label %return, !dbg !11685

if.end:                                           ; preds = %lor.lhs.false
  %9 = load i32, i32* %taskout, align 4, !dbg !11686
  %tobool = icmp ne i32 %9, 0, !dbg !11686
  br i1 %tobool, label %if.then8, label %if.end23, !dbg !11688

if.then8:                                         ; preds = %if.end
  %10 = load i8*, i8** %buf.addr, align 8, !dbg !11689
  %11 = load i32, i32* %outtotal.addr, align 4, !dbg !11691
  %idx.ext = sext i32 %11 to i64, !dbg !11692
  %add.ptr = getelementptr i8, i8* %10, i64 %idx.ext, !dbg !11692
  %12 = load i32, i32* %taskout, align 4, !dbg !11693
  %conv9 = zext i32 %12 to i64, !dbg !11693
  %call = call i8* @memdup_user(i8* %add.ptr, i64 %conv9) #12, !dbg !11694
  store i8* %call, i8** %outbuf, align 8, !dbg !11695
  %13 = load i8*, i8** %outbuf, align 8, !dbg !11696
  %call10 = call zeroext i1 @IS_ERR(i8* %13) #12, !dbg !11698
  br i1 %call10, label %if.then11, label %if.end14, !dbg !11699

if.then11:                                        ; preds = %if.then8
  %14 = load i8*, i8** %outbuf, align 8, !dbg !11700
  %call12 = call i64 @PTR_ERR(i8* %14) #12, !dbg !11701
  %conv13 = trunc i64 %call12 to i32, !dbg !11701
  store i32 %conv13, i32* %retval, align 4, !dbg !11702
  br label %return, !dbg !11702

if.end14:                                         ; preds = %if.then8
  %15 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !11703
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %15, i32 0, i32 4, !dbg !11703
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11703
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 41, !dbg !11703
  %17 = load i8*, i8** %outbuf, align 8, !dbg !11703
  %18 = load i32, i32* %taskout, align 4, !dbg !11703
  %conv15 = zext i32 %18 to i64, !dbg !11703
  %call16 = call i64 @dma_map_single_attrs(%struct.device* %dev, i8* %17, i64 %conv15, i32 1, i64 0) #12, !dbg !11703
  store i64 %call16, i64* %outbuf_dma, align 8, !dbg !11704
  %19 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !11705
  %pdev17 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %19, i32 0, i32 4, !dbg !11707
  %20 = load %struct.pci_dev*, %struct.pci_dev** %pdev17, align 8, !dbg !11707
  %dev18 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 41, !dbg !11708
  %21 = load i64, i64* %outbuf_dma, align 8, !dbg !11709
  %call19 = call i32 @dma_mapping_error(%struct.device* %dev18, i64 %21) #12, !dbg !11710
  %tobool20 = icmp ne i32 %call19, 0, !dbg !11710
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !11711

if.then21:                                        ; preds = %if.end14
  store i32 -12, i32* %err, align 4, !dbg !11712
  br label %abort, !dbg !11714

if.end22:                                         ; preds = %if.end14
  %22 = load i64, i64* %outbuf_dma, align 8, !dbg !11715
  store i64 %22, i64* %dma_buffer, align 8, !dbg !11716
  br label %if.end23, !dbg !11717

if.end23:                                         ; preds = %if.end22, %if.end
  %23 = load i32, i32* %taskin, align 4, !dbg !11718
  %tobool24 = icmp ne i32 %23, 0, !dbg !11718
  br i1 %tobool24, label %if.then25, label %if.end45, !dbg !11720

if.then25:                                        ; preds = %if.end23
  %24 = load i8*, i8** %buf.addr, align 8, !dbg !11721
  %25 = load i32, i32* %intotal, align 4, !dbg !11723
  %idx.ext26 = sext i32 %25 to i64, !dbg !11724
  %add.ptr27 = getelementptr i8, i8* %24, i64 %idx.ext26, !dbg !11724
  %26 = load i32, i32* %taskin, align 4, !dbg !11725
  %conv28 = zext i32 %26 to i64, !dbg !11725
  %call29 = call i8* @memdup_user(i8* %add.ptr27, i64 %conv28) #12, !dbg !11726
  store i8* %call29, i8** %inbuf, align 8, !dbg !11727
  %27 = load i8*, i8** %inbuf, align 8, !dbg !11728
  %call30 = call zeroext i1 @IS_ERR(i8* %27) #12, !dbg !11730
  br i1 %call30, label %if.then31, label %if.end34, !dbg !11731

if.then31:                                        ; preds = %if.then25
  %28 = load i8*, i8** %inbuf, align 8, !dbg !11732
  %call32 = call i64 @PTR_ERR(i8* %28) #12, !dbg !11734
  %conv33 = trunc i64 %call32 to i32, !dbg !11734
  store i32 %conv33, i32* %err, align 4, !dbg !11735
  store i8* null, i8** %inbuf, align 8, !dbg !11736
  br label %abort, !dbg !11737

if.end34:                                         ; preds = %if.then25
  %29 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !11738
  %pdev35 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %29, i32 0, i32 4, !dbg !11738
  %30 = load %struct.pci_dev*, %struct.pci_dev** %pdev35, align 8, !dbg !11738
  %dev36 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %30, i32 0, i32 41, !dbg !11738
  %31 = load i8*, i8** %inbuf, align 8, !dbg !11738
  %32 = load i32, i32* %taskin, align 4, !dbg !11738
  %conv37 = zext i32 %32 to i64, !dbg !11738
  %call38 = call i64 @dma_map_single_attrs(%struct.device* %dev36, i8* %31, i64 %conv37, i32 2, i64 0) #12, !dbg !11738
  store i64 %call38, i64* %inbuf_dma, align 8, !dbg !11739
  %33 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !11740
  %pdev39 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %33, i32 0, i32 4, !dbg !11742
  %34 = load %struct.pci_dev*, %struct.pci_dev** %pdev39, align 8, !dbg !11742
  %dev40 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %34, i32 0, i32 41, !dbg !11743
  %35 = load i64, i64* %inbuf_dma, align 8, !dbg !11744
  %call41 = call i32 @dma_mapping_error(%struct.device* %dev40, i64 %35) #12, !dbg !11745
  %tobool42 = icmp ne i32 %call41, 0, !dbg !11745
  br i1 %tobool42, label %if.then43, label %if.end44, !dbg !11746

if.then43:                                        ; preds = %if.end34
  store i32 -12, i32* %err, align 4, !dbg !11747
  br label %abort, !dbg !11749

if.end44:                                         ; preds = %if.end34
  %36 = load i64, i64* %inbuf_dma, align 8, !dbg !11750
  store i64 %36, i64* %dma_buffer, align 8, !dbg !11751
  br label %if.end45, !dbg !11752

if.end45:                                         ; preds = %if.end44, %if.end23
  %37 = load %struct.ide_task_request_s*, %struct.ide_task_request_s** %req_task.addr, align 8, !dbg !11753
  %data_phase = getelementptr inbounds %struct.ide_task_request_s, %struct.ide_task_request_s* %37, i32 0, i32 4, !dbg !11754
  %38 = load i32, i32* %data_phase, align 8, !dbg !11754
  switch i32 %38, label %sw.default [
    i32 4, label %sw.bb
    i32 1, label %sw.bb48
    i32 0, label %sw.bb52
  ], !dbg !11755

sw.bb:                                            ; preds = %if.end45
  %39 = load i32, i32* %taskout, align 4, !dbg !11756
  %div = udiv i32 %39, 512, !dbg !11758
  %conv46 = trunc i32 %div to i8, !dbg !11756
  store i8 %conv46, i8* %nsect, align 1, !dbg !11759
  %40 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !11760
  %port = getelementptr inbounds %struct.driver_data, %struct.driver_data* %40, i32 0, i32 7, !dbg !11761
  %41 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !11761
  %rxfis = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %41, i32 0, i32 8, !dbg !11762
  %42 = load i8*, i8** %rxfis, align 8, !dbg !11762
  %add.ptr47 = getelementptr i8, i8* %42, i64 32, !dbg !11763
  %43 = bitcast i8* %add.ptr47 to %struct.host_to_dev_fis*, !dbg !11764
  store %struct.host_to_dev_fis* %43, %struct.host_to_dev_fis** %reply, align 8, !dbg !11765
  br label %sw.epilog, !dbg !11766

sw.bb48:                                          ; preds = %if.end45
  %44 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !11767
  %port49 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %44, i32 0, i32 7, !dbg !11768
  %45 = load %struct.mtip_port*, %struct.mtip_port** %port49, align 8, !dbg !11768
  %rxfis50 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %45, i32 0, i32 8, !dbg !11769
  %46 = load i8*, i8** %rxfis50, align 8, !dbg !11769
  %add.ptr51 = getelementptr i8, i8* %46, i64 32, !dbg !11770
  %47 = bitcast i8* %add.ptr51 to %struct.host_to_dev_fis*, !dbg !11771
  store %struct.host_to_dev_fis* %47, %struct.host_to_dev_fis** %reply, align 8, !dbg !11772
  br label %sw.epilog, !dbg !11773

sw.bb52:                                          ; preds = %if.end45
  %48 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !11774
  %port53 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %48, i32 0, i32 7, !dbg !11775
  %49 = load %struct.mtip_port*, %struct.mtip_port** %port53, align 8, !dbg !11775
  %rxfis54 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %49, i32 0, i32 8, !dbg !11776
  %50 = load i8*, i8** %rxfis54, align 8, !dbg !11776
  %add.ptr55 = getelementptr i8, i8* %50, i64 64, !dbg !11777
  %51 = bitcast i8* %add.ptr55 to %struct.host_to_dev_fis*, !dbg !11778
  store %struct.host_to_dev_fis* %51, %struct.host_to_dev_fis** %reply, align 8, !dbg !11779
  br label %sw.epilog, !dbg !11780

sw.default:                                       ; preds = %if.end45
  store i32 -22, i32* %err, align 4, !dbg !11781
  br label %abort, !dbg !11782

sw.epilog:                                        ; preds = %sw.bb52, %sw.bb48, %sw.bb
  %52 = bitcast %struct.host_to_dev_fis* %fis to i8*, !dbg !11783
  call void @llvm.memset.p0i8.i64(i8* align 4 %52, i8 0, i64 20, i1 false), !dbg !11783
  %type = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 0, !dbg !11784
  store i8 39, i8* %type, align 4, !dbg !11785
  %opts = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 1, !dbg !11786
  store i8 -128, i8* %opts, align 1, !dbg !11787
  %53 = load %struct.ide_task_request_s*, %struct.ide_task_request_s** %req_task.addr, align 8, !dbg !11788
  %io_ports = getelementptr inbounds %struct.ide_task_request_s, %struct.ide_task_request_s* %53, i32 0, i32 0, !dbg !11789
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %io_ports, i64 0, i64 7, !dbg !11788
  %54 = load i8, i8* %arrayidx, align 1, !dbg !11788
  %command = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 2, !dbg !11790
  store i8 %54, i8* %command, align 2, !dbg !11791
  %55 = load %struct.ide_task_request_s*, %struct.ide_task_request_s** %req_task.addr, align 8, !dbg !11792
  %io_ports56 = getelementptr inbounds %struct.ide_task_request_s, %struct.ide_task_request_s* %55, i32 0, i32 0, !dbg !11793
  %arrayidx57 = getelementptr [8 x i8], [8 x i8]* %io_ports56, i64 0, i64 1, !dbg !11792
  %56 = load i8, i8* %arrayidx57, align 1, !dbg !11792
  %features = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 3, !dbg !11794
  store i8 %56, i8* %features, align 1, !dbg !11795
  %57 = load %struct.ide_task_request_s*, %struct.ide_task_request_s** %req_task.addr, align 8, !dbg !11796
  %io_ports58 = getelementptr inbounds %struct.ide_task_request_s, %struct.ide_task_request_s* %57, i32 0, i32 0, !dbg !11797
  %arrayidx59 = getelementptr [8 x i8], [8 x i8]* %io_ports58, i64 0, i64 2, !dbg !11796
  %58 = load i8, i8* %arrayidx59, align 2, !dbg !11796
  %sect_count = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 12, !dbg !11798
  store i8 %58, i8* %sect_count, align 4, !dbg !11799
  %59 = load %struct.ide_task_request_s*, %struct.ide_task_request_s** %req_task.addr, align 8, !dbg !11800
  %io_ports60 = getelementptr inbounds %struct.ide_task_request_s, %struct.ide_task_request_s* %59, i32 0, i32 0, !dbg !11801
  %arrayidx61 = getelementptr [8 x i8], [8 x i8]* %io_ports60, i64 0, i64 3, !dbg !11800
  %60 = load i8, i8* %arrayidx61, align 1, !dbg !11800
  %61 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 4, !dbg !11802
  %lba_low = bitcast %union.anon.87* %61 to i8*, !dbg !11802
  store i8 %60, i8* %lba_low, align 4, !dbg !11803
  %62 = load %struct.ide_task_request_s*, %struct.ide_task_request_s** %req_task.addr, align 8, !dbg !11804
  %io_ports62 = getelementptr inbounds %struct.ide_task_request_s, %struct.ide_task_request_s* %62, i32 0, i32 0, !dbg !11805
  %arrayidx63 = getelementptr [8 x i8], [8 x i8]* %io_ports62, i64 0, i64 4, !dbg !11804
  %63 = load i8, i8* %arrayidx63, align 4, !dbg !11804
  %64 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 5, !dbg !11806
  %lba_mid = bitcast %union.anon.88* %64 to i8*, !dbg !11806
  store i8 %63, i8* %lba_mid, align 1, !dbg !11807
  %65 = load %struct.ide_task_request_s*, %struct.ide_task_request_s** %req_task.addr, align 8, !dbg !11808
  %io_ports64 = getelementptr inbounds %struct.ide_task_request_s, %struct.ide_task_request_s* %65, i32 0, i32 0, !dbg !11809
  %arrayidx65 = getelementptr [8 x i8], [8 x i8]* %io_ports64, i64 0, i64 5, !dbg !11808
  %66 = load i8, i8* %arrayidx65, align 1, !dbg !11808
  %67 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 6, !dbg !11810
  %lba_hi = bitcast %union.anon.89* %67 to i8*, !dbg !11810
  store i8 %66, i8* %lba_hi, align 2, !dbg !11811
  %68 = load %struct.ide_task_request_s*, %struct.ide_task_request_s** %req_task.addr, align 8, !dbg !11812
  %io_ports66 = getelementptr inbounds %struct.ide_task_request_s, %struct.ide_task_request_s* %68, i32 0, i32 0, !dbg !11813
  %arrayidx67 = getelementptr [8 x i8], [8 x i8]* %io_ports66, i64 0, i64 6, !dbg !11812
  %69 = load i8, i8* %arrayidx67, align 2, !dbg !11812
  %conv68 = zext i8 %69 to i32, !dbg !11812
  %and = and i32 %conv68, -17, !dbg !11814
  %conv69 = trunc i32 %and to i8, !dbg !11812
  %70 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 7, !dbg !11815
  %device = bitcast %union.anon.90* %70 to i8*, !dbg !11815
  store i8 %conv69, i8* %device, align 1, !dbg !11816
  %71 = load %struct.ide_task_request_s*, %struct.ide_task_request_s** %req_task.addr, align 8, !dbg !11817
  %in_flags = getelementptr inbounds %struct.ide_task_request_s, %struct.ide_task_request_s* %71, i32 0, i32 3, !dbg !11819
  %72 = bitcast %union.ide_reg_valid_s* %in_flags to i16*, !dbg !11820
  %bf.load = load i16, i16* %72, align 4, !dbg !11820
  %bf.cast = zext i16 %bf.load to i32, !dbg !11820
  %cmp70 = icmp eq i32 %bf.cast, 0, !dbg !11821
  br i1 %cmp70, label %land.lhs.true, label %if.else, !dbg !11822

land.lhs.true:                                    ; preds = %sw.epilog
  %73 = load %struct.ide_task_request_s*, %struct.ide_task_request_s** %req_task.addr, align 8, !dbg !11823
  %out_flags = getelementptr inbounds %struct.ide_task_request_s, %struct.ide_task_request_s* %73, i32 0, i32 2, !dbg !11824
  %74 = bitcast %union.ide_reg_valid_s* %out_flags to i16*, !dbg !11825
  %bf.load72 = load i16, i16* %74, align 8, !dbg !11825
  %bf.cast73 = zext i16 %bf.load72 to i32, !dbg !11825
  %and74 = and i32 %bf.cast73, 1, !dbg !11826
  %tobool75 = icmp ne i32 %and74, 0, !dbg !11826
  br i1 %tobool75, label %if.then76, label %if.else, !dbg !11827

if.then76:                                        ; preds = %land.lhs.true
  %75 = load %struct.ide_task_request_s*, %struct.ide_task_request_s** %req_task.addr, align 8, !dbg !11828
  %in_flags77 = getelementptr inbounds %struct.ide_task_request_s, %struct.ide_task_request_s* %75, i32 0, i32 3, !dbg !11830
  %76 = bitcast %union.ide_reg_valid_s* %in_flags77 to i16*, !dbg !11831
  store i16 15614, i16* %76, align 4, !dbg !11832
  %77 = load %struct.ide_task_request_s*, %struct.ide_task_request_s** %req_task.addr, align 8, !dbg !11833
  %hob_ports = getelementptr inbounds %struct.ide_task_request_s, %struct.ide_task_request_s* %77, i32 0, i32 1, !dbg !11834
  %arrayidx78 = getelementptr [8 x i8], [8 x i8]* %hob_ports, i64 0, i64 3, !dbg !11833
  %78 = load i8, i8* %arrayidx78, align 1, !dbg !11833
  %79 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 8, !dbg !11835
  %lba_low_ex = bitcast %union.anon.91* %79 to i8*, !dbg !11835
  store i8 %78, i8* %lba_low_ex, align 4, !dbg !11836
  %80 = load %struct.ide_task_request_s*, %struct.ide_task_request_s** %req_task.addr, align 8, !dbg !11837
  %hob_ports79 = getelementptr inbounds %struct.ide_task_request_s, %struct.ide_task_request_s* %80, i32 0, i32 1, !dbg !11838
  %arrayidx80 = getelementptr [8 x i8], [8 x i8]* %hob_ports79, i64 0, i64 4, !dbg !11837
  %81 = load i8, i8* %arrayidx80, align 4, !dbg !11837
  %82 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 9, !dbg !11839
  %lba_mid_ex = bitcast %union.anon.92* %82 to i8*, !dbg !11839
  store i8 %81, i8* %lba_mid_ex, align 1, !dbg !11840
  %83 = load %struct.ide_task_request_s*, %struct.ide_task_request_s** %req_task.addr, align 8, !dbg !11841
  %hob_ports81 = getelementptr inbounds %struct.ide_task_request_s, %struct.ide_task_request_s* %83, i32 0, i32 1, !dbg !11842
  %arrayidx82 = getelementptr [8 x i8], [8 x i8]* %hob_ports81, i64 0, i64 5, !dbg !11841
  %84 = load i8, i8* %arrayidx82, align 1, !dbg !11841
  %85 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 10, !dbg !11843
  %lba_hi_ex = bitcast %union.anon.93* %85 to i8*, !dbg !11843
  store i8 %84, i8* %lba_hi_ex, align 2, !dbg !11844
  %86 = load %struct.ide_task_request_s*, %struct.ide_task_request_s** %req_task.addr, align 8, !dbg !11845
  %hob_ports83 = getelementptr inbounds %struct.ide_task_request_s, %struct.ide_task_request_s* %86, i32 0, i32 1, !dbg !11846
  %arrayidx84 = getelementptr [8 x i8], [8 x i8]* %hob_ports83, i64 0, i64 1, !dbg !11845
  %87 = load i8, i8* %arrayidx84, align 1, !dbg !11845
  %features_ex = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 11, !dbg !11847
  store i8 %87, i8* %features_ex, align 1, !dbg !11848
  %88 = load %struct.ide_task_request_s*, %struct.ide_task_request_s** %req_task.addr, align 8, !dbg !11849
  %hob_ports85 = getelementptr inbounds %struct.ide_task_request_s, %struct.ide_task_request_s* %88, i32 0, i32 1, !dbg !11850
  %arrayidx86 = getelementptr [8 x i8], [8 x i8]* %hob_ports85, i64 0, i64 2, !dbg !11849
  %89 = load i8, i8* %arrayidx86, align 2, !dbg !11849
  %sect_cnt_ex = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 13, !dbg !11851
  store i8 %89, i8* %sect_cnt_ex, align 1, !dbg !11852
  br label %if.end88, !dbg !11853

if.else:                                          ; preds = %land.lhs.true, %sw.epilog
  %90 = load %struct.ide_task_request_s*, %struct.ide_task_request_s** %req_task.addr, align 8, !dbg !11854
  %in_flags87 = getelementptr inbounds %struct.ide_task_request_s, %struct.ide_task_request_s* %90, i32 0, i32 3, !dbg !11856
  %91 = bitcast %union.ide_reg_valid_s* %in_flags87 to i16*, !dbg !11857
  store i16 254, i16* %91, align 4, !dbg !11858
  br label %if.end88

if.end88:                                         ; preds = %if.else, %if.then76
  %command89 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 2, !dbg !11859
  %92 = load i8, i8* %command89, align 2, !dbg !11859
  %features90 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 3, !dbg !11860
  %93 = load i8, i8* %features90, align 1, !dbg !11860
  %call91 = call i32 @implicit_sector(i8 zeroext %92, i8 zeroext %93) #12, !dbg !11861
  store i32 %call91, i32* %force_single_sector, align 4, !dbg !11862
  %94 = load i32, i32* %taskin, align 4, !dbg !11863
  %tobool92 = icmp ne i32 %94, 0, !dbg !11863
  br i1 %tobool92, label %land.lhs.true95, label %lor.lhs.false93, !dbg !11865

lor.lhs.false93:                                  ; preds = %if.end88
  %95 = load i32, i32* %taskout, align 4, !dbg !11866
  %tobool94 = icmp ne i32 %95, 0, !dbg !11866
  br i1 %tobool94, label %land.lhs.true95, label %if.end109, !dbg !11867

land.lhs.true95:                                  ; preds = %lor.lhs.false93, %if.end88
  %sect_count96 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 12, !dbg !11868
  %96 = load i8, i8* %sect_count96, align 4, !dbg !11868
  %tobool97 = icmp ne i8 %96, 0, !dbg !11869
  br i1 %tobool97, label %if.end109, label %if.then98, !dbg !11870

if.then98:                                        ; preds = %land.lhs.true95
  %97 = load i8, i8* %nsect, align 1, !dbg !11871
  %tobool99 = icmp ne i8 %97, 0, !dbg !11871
  br i1 %tobool99, label %if.then100, label %if.else102, !dbg !11874

if.then100:                                       ; preds = %if.then98
  %98 = load i8, i8* %nsect, align 1, !dbg !11875
  %sect_count101 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 12, !dbg !11876
  store i8 %98, i8* %sect_count101, align 4, !dbg !11877
  br label %if.end108, !dbg !11878

if.else102:                                       ; preds = %if.then98
  %99 = load i32, i32* %force_single_sector, align 4, !dbg !11879
  %tobool103 = icmp ne i32 %99, 0, !dbg !11879
  br i1 %tobool103, label %if.end107, label %if.then104, !dbg !11882

if.then104:                                       ; preds = %if.else102
  %100 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !11883
  %pdev105 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %100, i32 0, i32 4, !dbg !11883
  %101 = load %struct.pci_dev*, %struct.pci_dev** %pdev105, align 8, !dbg !11883
  %dev106 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %101, i32 0, i32 41, !dbg !11883
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev106, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.51, i64 0, i64 0)) #13, !dbg !11883
  store i32 -22, i32* %err, align 4, !dbg !11885
  br label %abort, !dbg !11886

if.end107:                                        ; preds = %if.else102
  br label %if.end108

if.end108:                                        ; preds = %if.end107, %if.then100
  br label %if.end109, !dbg !11887

if.end109:                                        ; preds = %if.end108, %land.lhs.true95, %lor.lhs.false93
  %command110 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 2, !dbg !11888
  %102 = load i8, i8* %command110, align 2, !dbg !11888
  %conv111 = zext i8 %102 to i32, !dbg !11890
  %cmp112 = icmp eq i32 %conv111, 244, !dbg !11891
  br i1 %cmp112, label %land.lhs.true114, label %if.end122, !dbg !11892

land.lhs.true114:                                 ; preds = %if.end109
  %103 = load i8*, i8** %outbuf, align 8, !dbg !11893
  %tobool115 = icmp ne i8* %103, null, !dbg !11893
  br i1 %tobool115, label %land.lhs.true116, label %if.end122, !dbg !11894

land.lhs.true116:                                 ; preds = %land.lhs.true114
  %104 = load i8*, i8** %outbuf, align 8, !dbg !11895
  %arrayidx117 = getelementptr i8, i8* %104, i64 0, !dbg !11895
  %105 = load i8, i8* %arrayidx117, align 1, !dbg !11895
  %conv118 = zext i8 %105 to i32, !dbg !11895
  %and119 = and i32 %conv118, 2, !dbg !11896
  %tobool120 = icmp ne i32 %and119, 0, !dbg !11896
  br i1 %tobool120, label %if.then121, label %if.end122, !dbg !11897

if.then121:                                       ; preds = %land.lhs.true116
  store i32 1, i32* %erasemode, align 4, !dbg !11898
  br label %if.end122, !dbg !11900

if.end122:                                        ; preds = %if.then121, %land.lhs.true116, %land.lhs.true114, %if.end109
  %106 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !11901
  %107 = load i32, i32* %erasemode, align 4, !dbg !11902
  %conv123 = trunc i32 %107 to i8, !dbg !11902
  call void @mtip_set_timeout(%struct.driver_data* %106, %struct.host_to_dev_fis* %fis, i32* %timeout, i8 zeroext %conv123) #12, !dbg !11903
  %108 = load i32, i32* %force_single_sector, align 4, !dbg !11904
  %tobool124 = icmp ne i32 %108, 0, !dbg !11904
  br i1 %tobool124, label %if.then125, label %if.else126, !dbg !11906

if.then125:                                       ; preds = %if.end122
  store i32 512, i32* %transfer_size, align 4, !dbg !11907
  br label %if.end129, !dbg !11908

if.else126:                                       ; preds = %if.end122
  %sect_count127 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 12, !dbg !11909
  %109 = load i8, i8* %sect_count127, align 4, !dbg !11909
  %conv128 = zext i8 %109 to i32, !dbg !11910
  %mul = mul i32 512, %conv128, !dbg !11911
  store i32 %mul, i32* %transfer_size, align 4, !dbg !11912
  br label %if.end129

if.end129:                                        ; preds = %if.else126, %if.then125
  %110 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !11913
  %port130 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %110, i32 0, i32 7, !dbg !11915
  %111 = load %struct.mtip_port*, %struct.mtip_port** %port130, align 8, !dbg !11915
  %112 = load i64, i64* %dma_buffer, align 8, !dbg !11916
  %113 = load i32, i32* %transfer_size, align 4, !dbg !11917
  %114 = load i32, i32* %timeout, align 4, !dbg !11918
  %conv131 = zext i32 %114 to i64, !dbg !11918
  %call132 = call i32 @mtip_exec_internal_command(%struct.mtip_port* %111, %struct.host_to_dev_fis* %fis, i32 5, i64 %112, i32 %113, i32 0, i64 %conv131) #12, !dbg !11919
  %cmp133 = icmp slt i32 %call132, 0, !dbg !11920
  br i1 %cmp133, label %if.then135, label %if.end136, !dbg !11921

if.then135:                                       ; preds = %if.end129
  store i32 -5, i32* %err, align 4, !dbg !11922
  br label %abort, !dbg !11924

if.end136:                                        ; preds = %if.end129
  %115 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !11925
  %port137 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %115, i32 0, i32 7, !dbg !11926
  %116 = load %struct.mtip_port*, %struct.mtip_port** %port137, align 8, !dbg !11926
  %mmio = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %116, i32 0, i32 2, !dbg !11927
  %117 = load i8*, i8** %mmio, align 8, !dbg !11927
  %add.ptr138 = getelementptr i8, i8* %117, i64 32, !dbg !11928
  %call139 = call i32 @readl(i8* %add.ptr138) #12, !dbg !11929
  %conv140 = zext i32 %call139 to i64, !dbg !11929
  store i64 %conv140, i64* %task_file_data, align 8, !dbg !11930
  %118 = load %struct.ide_task_request_s*, %struct.ide_task_request_s** %req_task.addr, align 8, !dbg !11931
  %data_phase141 = getelementptr inbounds %struct.ide_task_request_s, %struct.ide_task_request_s* %118, i32 0, i32 4, !dbg !11933
  %119 = load i32, i32* %data_phase141, align 8, !dbg !11933
  %cmp142 = icmp eq i32 %119, 1, !dbg !11934
  br i1 %cmp142, label %land.lhs.true144, label %if.else153, !dbg !11935

land.lhs.true144:                                 ; preds = %if.end136
  %120 = load i64, i64* %task_file_data, align 8, !dbg !11936
  %and145 = and i64 %120, 1, !dbg !11937
  %tobool146 = icmp ne i64 %and145, 0, !dbg !11937
  br i1 %tobool146, label %if.else153, label %if.then147, !dbg !11938

if.then147:                                       ; preds = %land.lhs.true144
  %121 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !11939
  %port148 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %121, i32 0, i32 7, !dbg !11941
  %122 = load %struct.mtip_port*, %struct.mtip_port** %port148, align 8, !dbg !11941
  %rxfis149 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %122, i32 0, i32 8, !dbg !11942
  %123 = load i8*, i8** %rxfis149, align 8, !dbg !11942
  %add.ptr150 = getelementptr i8, i8* %123, i64 32, !dbg !11943
  %124 = bitcast i8* %add.ptr150 to %struct.host_to_dev_fis*, !dbg !11939
  store %struct.host_to_dev_fis* %124, %struct.host_to_dev_fis** %reply, align 8, !dbg !11944
  %125 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %reply, align 8, !dbg !11945
  %control = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %125, i32 0, i32 15, !dbg !11946
  %126 = load i8, i8* %control, align 1, !dbg !11946
  %127 = load %struct.ide_task_request_s*, %struct.ide_task_request_s** %req_task.addr, align 8, !dbg !11947
  %io_ports151 = getelementptr inbounds %struct.ide_task_request_s, %struct.ide_task_request_s* %127, i32 0, i32 0, !dbg !11948
  %arrayidx152 = getelementptr [8 x i8], [8 x i8]* %io_ports151, i64 0, i64 7, !dbg !11947
  store i8 %126, i8* %arrayidx152, align 1, !dbg !11949
  br label %if.end160, !dbg !11950

if.else153:                                       ; preds = %land.lhs.true144, %if.end136
  %128 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !11951
  %port154 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %128, i32 0, i32 7, !dbg !11953
  %129 = load %struct.mtip_port*, %struct.mtip_port** %port154, align 8, !dbg !11953
  %rxfis155 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %129, i32 0, i32 8, !dbg !11954
  %130 = load i8*, i8** %rxfis155, align 8, !dbg !11954
  %add.ptr156 = getelementptr i8, i8* %130, i64 64, !dbg !11955
  %131 = bitcast i8* %add.ptr156 to %struct.host_to_dev_fis*, !dbg !11951
  store %struct.host_to_dev_fis* %131, %struct.host_to_dev_fis** %reply, align 8, !dbg !11956
  %132 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %reply, align 8, !dbg !11957
  %command157 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %132, i32 0, i32 2, !dbg !11958
  %133 = load i8, i8* %command157, align 2, !dbg !11958
  %134 = load %struct.ide_task_request_s*, %struct.ide_task_request_s** %req_task.addr, align 8, !dbg !11959
  %io_ports158 = getelementptr inbounds %struct.ide_task_request_s, %struct.ide_task_request_s* %134, i32 0, i32 0, !dbg !11960
  %arrayidx159 = getelementptr [8 x i8], [8 x i8]* %io_ports158, i64 0, i64 7, !dbg !11959
  store i8 %133, i8* %arrayidx159, align 1, !dbg !11961
  br label %if.end160

if.end160:                                        ; preds = %if.else153, %if.then147
  %135 = load i64, i64* %inbuf_dma, align 8, !dbg !11962
  %tobool161 = icmp ne i64 %135, 0, !dbg !11962
  br i1 %tobool161, label %if.then162, label %if.end166, !dbg !11964

if.then162:                                       ; preds = %if.end160
  %136 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !11965
  %pdev163 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %136, i32 0, i32 4, !dbg !11965
  %137 = load %struct.pci_dev*, %struct.pci_dev** %pdev163, align 8, !dbg !11965
  %dev164 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %137, i32 0, i32 41, !dbg !11965
  %138 = load i64, i64* %inbuf_dma, align 8, !dbg !11965
  %139 = load i32, i32* %taskin, align 4, !dbg !11965
  %conv165 = zext i32 %139 to i64, !dbg !11965
  call void @dma_unmap_single_attrs(%struct.device* %dev164, i64 %138, i64 %conv165, i32 2, i64 0) #12, !dbg !11965
  br label %if.end166, !dbg !11965

if.end166:                                        ; preds = %if.then162, %if.end160
  %140 = load i64, i64* %outbuf_dma, align 8, !dbg !11966
  %tobool167 = icmp ne i64 %140, 0, !dbg !11966
  br i1 %tobool167, label %if.then168, label %if.end172, !dbg !11968

if.then168:                                       ; preds = %if.end166
  %141 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !11969
  %pdev169 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %141, i32 0, i32 4, !dbg !11969
  %142 = load %struct.pci_dev*, %struct.pci_dev** %pdev169, align 8, !dbg !11969
  %dev170 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %142, i32 0, i32 41, !dbg !11969
  %143 = load i64, i64* %outbuf_dma, align 8, !dbg !11969
  %144 = load i32, i32* %taskout, align 4, !dbg !11969
  %conv171 = zext i32 %144 to i64, !dbg !11969
  call void @dma_unmap_single_attrs(%struct.device* %dev170, i64 %143, i64 %conv171, i32 1, i64 0) #12, !dbg !11969
  br label %if.end172, !dbg !11969

if.end172:                                        ; preds = %if.then168, %if.end166
  store i64 0, i64* %inbuf_dma, align 8, !dbg !11970
  store i64 0, i64* %outbuf_dma, align 8, !dbg !11971
  %145 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %reply, align 8, !dbg !11972
  %features173 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %145, i32 0, i32 3, !dbg !11973
  %146 = load i8, i8* %features173, align 1, !dbg !11973
  %147 = load %struct.ide_task_request_s*, %struct.ide_task_request_s** %req_task.addr, align 8, !dbg !11974
  %io_ports174 = getelementptr inbounds %struct.ide_task_request_s, %struct.ide_task_request_s* %147, i32 0, i32 0, !dbg !11975
  %arrayidx175 = getelementptr [8 x i8], [8 x i8]* %io_ports174, i64 0, i64 1, !dbg !11974
  store i8 %146, i8* %arrayidx175, align 1, !dbg !11976
  %148 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %reply, align 8, !dbg !11977
  %sect_count176 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %148, i32 0, i32 12, !dbg !11978
  %149 = load i8, i8* %sect_count176, align 4, !dbg !11978
  %150 = load %struct.ide_task_request_s*, %struct.ide_task_request_s** %req_task.addr, align 8, !dbg !11979
  %io_ports177 = getelementptr inbounds %struct.ide_task_request_s, %struct.ide_task_request_s* %150, i32 0, i32 0, !dbg !11980
  %arrayidx178 = getelementptr [8 x i8], [8 x i8]* %io_ports177, i64 0, i64 2, !dbg !11979
  store i8 %149, i8* %arrayidx178, align 2, !dbg !11981
  %151 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %reply, align 8, !dbg !11982
  %152 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %151, i32 0, i32 4, !dbg !11983
  %lba_low179 = bitcast %union.anon.87* %152 to i8*, !dbg !11983
  %153 = load i8, i8* %lba_low179, align 4, !dbg !11983
  %154 = load %struct.ide_task_request_s*, %struct.ide_task_request_s** %req_task.addr, align 8, !dbg !11984
  %io_ports180 = getelementptr inbounds %struct.ide_task_request_s, %struct.ide_task_request_s* %154, i32 0, i32 0, !dbg !11985
  %arrayidx181 = getelementptr [8 x i8], [8 x i8]* %io_ports180, i64 0, i64 3, !dbg !11984
  store i8 %153, i8* %arrayidx181, align 1, !dbg !11986
  %155 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %reply, align 8, !dbg !11987
  %156 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %155, i32 0, i32 5, !dbg !11988
  %lba_mid182 = bitcast %union.anon.88* %156 to i8*, !dbg !11988
  %157 = load i8, i8* %lba_mid182, align 1, !dbg !11988
  %158 = load %struct.ide_task_request_s*, %struct.ide_task_request_s** %req_task.addr, align 8, !dbg !11989
  %io_ports183 = getelementptr inbounds %struct.ide_task_request_s, %struct.ide_task_request_s* %158, i32 0, i32 0, !dbg !11990
  %arrayidx184 = getelementptr [8 x i8], [8 x i8]* %io_ports183, i64 0, i64 4, !dbg !11989
  store i8 %157, i8* %arrayidx184, align 4, !dbg !11991
  %159 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %reply, align 8, !dbg !11992
  %160 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %159, i32 0, i32 6, !dbg !11993
  %lba_hi185 = bitcast %union.anon.89* %160 to i8*, !dbg !11993
  %161 = load i8, i8* %lba_hi185, align 2, !dbg !11993
  %162 = load %struct.ide_task_request_s*, %struct.ide_task_request_s** %req_task.addr, align 8, !dbg !11994
  %io_ports186 = getelementptr inbounds %struct.ide_task_request_s, %struct.ide_task_request_s* %162, i32 0, i32 0, !dbg !11995
  %arrayidx187 = getelementptr [8 x i8], [8 x i8]* %io_ports186, i64 0, i64 5, !dbg !11994
  store i8 %161, i8* %arrayidx187, align 1, !dbg !11996
  %163 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %reply, align 8, !dbg !11997
  %164 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %163, i32 0, i32 7, !dbg !11998
  %device188 = bitcast %union.anon.90* %164 to i8*, !dbg !11998
  %165 = load i8, i8* %device188, align 1, !dbg !11998
  %166 = load %struct.ide_task_request_s*, %struct.ide_task_request_s** %req_task.addr, align 8, !dbg !11999
  %io_ports189 = getelementptr inbounds %struct.ide_task_request_s, %struct.ide_task_request_s* %166, i32 0, i32 0, !dbg !12000
  %arrayidx190 = getelementptr [8 x i8], [8 x i8]* %io_ports189, i64 0, i64 6, !dbg !11999
  store i8 %165, i8* %arrayidx190, align 2, !dbg !12001
  %167 = load %struct.ide_task_request_s*, %struct.ide_task_request_s** %req_task.addr, align 8, !dbg !12002
  %out_flags191 = getelementptr inbounds %struct.ide_task_request_s, %struct.ide_task_request_s* %167, i32 0, i32 2, !dbg !12004
  %168 = bitcast %union.ide_reg_valid_s* %out_flags191 to i16*, !dbg !12005
  %bf.load192 = load i16, i16* %168, align 8, !dbg !12005
  %bf.cast193 = zext i16 %bf.load192 to i32, !dbg !12005
  %and194 = and i32 %bf.cast193, 1, !dbg !12006
  %tobool195 = icmp ne i32 %and194, 0, !dbg !12006
  br i1 %tobool195, label %if.then196, label %if.end212, !dbg !12007

if.then196:                                       ; preds = %if.end172
  %169 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %reply, align 8, !dbg !12008
  %170 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %169, i32 0, i32 8, !dbg !12010
  %lba_low_ex197 = bitcast %union.anon.91* %170 to i8*, !dbg !12010
  %171 = load i8, i8* %lba_low_ex197, align 4, !dbg !12010
  %172 = load %struct.ide_task_request_s*, %struct.ide_task_request_s** %req_task.addr, align 8, !dbg !12011
  %hob_ports198 = getelementptr inbounds %struct.ide_task_request_s, %struct.ide_task_request_s* %172, i32 0, i32 1, !dbg !12012
  %arrayidx199 = getelementptr [8 x i8], [8 x i8]* %hob_ports198, i64 0, i64 3, !dbg !12011
  store i8 %171, i8* %arrayidx199, align 1, !dbg !12013
  %173 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %reply, align 8, !dbg !12014
  %174 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %173, i32 0, i32 9, !dbg !12015
  %lba_mid_ex200 = bitcast %union.anon.92* %174 to i8*, !dbg !12015
  %175 = load i8, i8* %lba_mid_ex200, align 1, !dbg !12015
  %176 = load %struct.ide_task_request_s*, %struct.ide_task_request_s** %req_task.addr, align 8, !dbg !12016
  %hob_ports201 = getelementptr inbounds %struct.ide_task_request_s, %struct.ide_task_request_s* %176, i32 0, i32 1, !dbg !12017
  %arrayidx202 = getelementptr [8 x i8], [8 x i8]* %hob_ports201, i64 0, i64 4, !dbg !12016
  store i8 %175, i8* %arrayidx202, align 4, !dbg !12018
  %177 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %reply, align 8, !dbg !12019
  %178 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %177, i32 0, i32 10, !dbg !12020
  %lba_hi_ex203 = bitcast %union.anon.93* %178 to i8*, !dbg !12020
  %179 = load i8, i8* %lba_hi_ex203, align 2, !dbg !12020
  %180 = load %struct.ide_task_request_s*, %struct.ide_task_request_s** %req_task.addr, align 8, !dbg !12021
  %hob_ports204 = getelementptr inbounds %struct.ide_task_request_s, %struct.ide_task_request_s* %180, i32 0, i32 1, !dbg !12022
  %arrayidx205 = getelementptr [8 x i8], [8 x i8]* %hob_ports204, i64 0, i64 5, !dbg !12021
  store i8 %179, i8* %arrayidx205, align 1, !dbg !12023
  %181 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %reply, align 8, !dbg !12024
  %features_ex206 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %181, i32 0, i32 11, !dbg !12025
  %182 = load i8, i8* %features_ex206, align 1, !dbg !12025
  %183 = load %struct.ide_task_request_s*, %struct.ide_task_request_s** %req_task.addr, align 8, !dbg !12026
  %hob_ports207 = getelementptr inbounds %struct.ide_task_request_s, %struct.ide_task_request_s* %183, i32 0, i32 1, !dbg !12027
  %arrayidx208 = getelementptr [8 x i8], [8 x i8]* %hob_ports207, i64 0, i64 1, !dbg !12026
  store i8 %182, i8* %arrayidx208, align 1, !dbg !12028
  %184 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %reply, align 8, !dbg !12029
  %sect_cnt_ex209 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %184, i32 0, i32 13, !dbg !12030
  %185 = load i8, i8* %sect_cnt_ex209, align 1, !dbg !12030
  %186 = load %struct.ide_task_request_s*, %struct.ide_task_request_s** %req_task.addr, align 8, !dbg !12031
  %hob_ports210 = getelementptr inbounds %struct.ide_task_request_s, %struct.ide_task_request_s* %186, i32 0, i32 1, !dbg !12032
  %arrayidx211 = getelementptr [8 x i8], [8 x i8]* %hob_ports210, i64 0, i64 2, !dbg !12031
  store i8 %185, i8* %arrayidx211, align 2, !dbg !12033
  br label %if.end212, !dbg !12034

if.end212:                                        ; preds = %if.then196, %if.end172
  %187 = load i32, i32* %taskout, align 4, !dbg !12035
  %tobool213 = icmp ne i32 %187, 0, !dbg !12035
  br i1 %tobool213, label %if.then214, label %if.end222, !dbg !12036

if.then214:                                       ; preds = %if.end212
  %188 = load i8*, i8** %buf.addr, align 8, !dbg !12037
  %189 = load i32, i32* %outtotal.addr, align 4, !dbg !12038
  %idx.ext215 = sext i32 %189 to i64, !dbg !12039
  %add.ptr216 = getelementptr i8, i8* %188, i64 %idx.ext215, !dbg !12039
  %190 = load i8*, i8** %outbuf, align 8, !dbg !12040
  %191 = load i32, i32* %taskout, align 4, !dbg !12041
  %conv217 = zext i32 %191 to i64, !dbg !12041
  store i8* %add.ptr216, i8** %to.addr.i, align 8
  store i8* %190, i8** %from.addr.i, align 8
  store i64 %conv217, i64* %n.addr.i, align 8
  %192 = load i8*, i8** %from.addr.i, align 8, !dbg !12042
  %193 = load i64, i64* %n.addr.i, align 8, !dbg !12042
  store i8* %192, i8** %addr.addr.i.i, align 8
  store i64 %193, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !11621
  %194 = load i32, i32* %sz.i.i, align 4, !dbg !12043
  %cmp.i.i = icmp sge i32 %194, 0, !dbg !12043
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !12043

land.rhs.i.i:                                     ; preds = %if.then214
  %195 = load i32, i32* %sz.i.i, align 4, !dbg !12043
  %conv.i.i = sext i32 %195 to i64, !dbg !12043
  %196 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !12043
  %cmp1.i.i = icmp ult i64 %conv.i.i, %196, !dbg !12043
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.then214
  %197 = phi i1 [ false, %if.then214 ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !12044
  %lnot.i.i = xor i1 %197, true, !dbg !12043
  %lnot.ext.i.i = zext i1 %197 to i32, !dbg !12043
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !12043
  br i1 %197, label %if.then.i.i, label %if.end10.i.i, !dbg !12045

if.then.i.i:                                      ; preds = %land.end.i.i
  %198 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !12046
  %199 = call i1 @llvm.is.constant.i64(i64 %198) #11, !dbg !12047
  br i1 %199, label %if.else.i.i, label %if.then5.i.i, !dbg !12048

if.then5.i.i:                                     ; preds = %if.then.i.i
  %200 = load i32, i32* %sz.i.i, align 4, !dbg !12049
  %201 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !12050
  call void @copy_overflow(i32 %200, i64 %201) #14, !dbg !12051
  br label %if.end9.i.i, !dbg !12051

if.else.i.i:                                      ; preds = %if.then.i.i
  %202 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !12052
  %tobool6.i.i = trunc i8 %202 to i1, !dbg !12052
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !12053

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #14, !dbg !12054
  br label %if.end.i.i, !dbg !12054

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #14, !dbg !12055
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !12056
  br label %check_copy_size.exit.i, !dbg !12056

if.end10.i.i:                                     ; preds = %land.end.i.i
  %203 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11622
  %cmp11.i.i = icmp ugt i64 %203, 2147483647, !dbg !11622
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !11622
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !11622
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !11622
  %204 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !12057
  %tobool17.i.i = icmp ne i32 %204, 0, !dbg !12057
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !12057
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !12057
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !12057
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !11622

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.40, i64 0, i64 0), i32 150, i32 2307, i64 12) #11, !dbg !12058, !srcloc !10968
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #11, !dbg !12059, !srcloc !10971
  br label %if.end31.i.i, !dbg !12060

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %205 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !11622
  %tobool32.i.i = icmp ne i32 %205, 0, !dbg !11622
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !11622
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !11622
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !11622
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !12057
  %206 = load i64, i64* %tmp.i.i, align 8, !dbg !11622
  %tobool38.i.i = icmp ne i64 %206, 0, !dbg !12061
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !12062

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !12063
  br label %check_copy_size.exit.i, !dbg !12063

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %207 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !12064
  %208 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !12065
  %209 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !12066
  %tobool41.i.i = trunc i8 %209 to i1, !dbg !12066
  call void @check_object_size(i8* %207, i64 %208, i1 zeroext %tobool41.i.i) #14, !dbg !12067
  store i1 true, i1* %retval.i.i, align 1, !dbg !12068
  br label %check_copy_size.exit.i, !dbg !12068

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %210 = load i1, i1* %retval.i.i, align 1, !dbg !12069
  %lnot.i = xor i1 %210, true, !dbg !12042
  %lnot.ext.i = zext i1 %210 to i32, !dbg !12042
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !12042
  br i1 %210, label %if.then.i, label %copy_to_user.exit, !dbg !12070

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %211 = load i8*, i8** %to.addr.i, align 8, !dbg !12071
  %212 = load i8*, i8** %from.addr.i, align 8, !dbg !12072
  %213 = load i64, i64* %n.addr.i, align 8, !dbg !12073
  %call2.i = call i64 @_copy_to_user(i8* %211, i8* %212, i64 %213) #14, !dbg !12074
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !12075
  br label %copy_to_user.exit, !dbg !12076

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %214 = load i64, i64* %n.addr.i, align 8, !dbg !12077
  %tobool219 = icmp ne i64 %214, 0, !dbg !12078
  br i1 %tobool219, label %if.then220, label %if.end221, !dbg !12079

if.then220:                                       ; preds = %copy_to_user.exit
  store i32 -14, i32* %err, align 4, !dbg !12080
  br label %abort, !dbg !12082

if.end221:                                        ; preds = %copy_to_user.exit
  br label %if.end222, !dbg !12083

if.end222:                                        ; preds = %if.end221, %if.end212
  %215 = load i32, i32* %taskin, align 4, !dbg !12084
  %tobool223 = icmp ne i32 %215, 0, !dbg !12084
  br i1 %tobool223, label %if.then224, label %if.end232, !dbg !12085

if.then224:                                       ; preds = %if.end222
  %216 = load i8*, i8** %buf.addr, align 8, !dbg !12086
  %217 = load i32, i32* %intotal, align 4, !dbg !12087
  %idx.ext225 = sext i32 %217 to i64, !dbg !12088
  %add.ptr226 = getelementptr i8, i8* %216, i64 %idx.ext225, !dbg !12088
  %218 = load i8*, i8** %inbuf, align 8, !dbg !12089
  %219 = load i32, i32* %taskin, align 4, !dbg !12090
  %conv227 = zext i32 %219 to i64, !dbg !12090
  store i8* %add.ptr226, i8** %to.addr.i252, align 8
  store i8* %218, i8** %from.addr.i253, align 8
  store i64 %conv227, i64* %n.addr.i254, align 8
  %220 = load i8*, i8** %from.addr.i253, align 8, !dbg !12091
  %221 = load i64, i64* %n.addr.i254, align 8, !dbg !12091
  store i8* %220, i8** %addr.addr.i.i246, align 8
  store i64 %221, i64* %bytes.addr.i.i247, align 8
  store i8 1, i8* %is_source.addr.i.i248, align 1
  store i32 -1, i32* %sz.i.i249, align 4, !dbg !11608
  %222 = load i32, i32* %sz.i.i249, align 4, !dbg !12092
  %cmp.i.i255 = icmp sge i32 %222, 0, !dbg !12092
  br i1 %cmp.i.i255, label %land.rhs.i.i258, label %land.end.i.i262, !dbg !12092

land.rhs.i.i258:                                  ; preds = %if.then224
  %223 = load i32, i32* %sz.i.i249, align 4, !dbg !12092
  %conv.i.i256 = sext i32 %223 to i64, !dbg !12092
  %224 = load i64, i64* %bytes.addr.i.i247, align 8, !dbg !12092
  %cmp1.i.i257 = icmp ult i64 %conv.i.i256, %224, !dbg !12092
  br label %land.end.i.i262

land.end.i.i262:                                  ; preds = %land.rhs.i.i258, %if.then224
  %225 = phi i1 [ false, %if.then224 ], [ %cmp1.i.i257, %land.rhs.i.i258 ], !dbg !12093
  %lnot.i.i259 = xor i1 %225, true, !dbg !12092
  %lnot.ext.i.i260 = zext i1 %225 to i32, !dbg !12092
  %conv4.i.i261 = sext i32 %lnot.ext.i.i260 to i64, !dbg !12092
  br i1 %225, label %if.then.i.i263, label %if.end10.i.i278, !dbg !12094

if.then.i.i263:                                   ; preds = %land.end.i.i262
  %226 = load i64, i64* %bytes.addr.i.i247, align 8, !dbg !12095
  %227 = call i1 @llvm.is.constant.i64(i64 %226) #11, !dbg !12096
  br i1 %227, label %if.else.i.i266, label %if.then5.i.i264, !dbg !12097

if.then5.i.i264:                                  ; preds = %if.then.i.i263
  %228 = load i32, i32* %sz.i.i249, align 4, !dbg !12098
  %229 = load i64, i64* %bytes.addr.i.i247, align 8, !dbg !12099
  call void @copy_overflow(i32 %228, i64 %229) #14, !dbg !12100
  br label %if.end9.i.i270, !dbg !12100

if.else.i.i266:                                   ; preds = %if.then.i.i263
  %230 = load i8, i8* %is_source.addr.i.i248, align 1, !dbg !12101
  %tobool6.i.i265 = trunc i8 %230 to i1, !dbg !12101
  br i1 %tobool6.i.i265, label %if.then7.i.i267, label %if.else8.i.i268, !dbg !12102

if.then7.i.i267:                                  ; preds = %if.else.i.i266
  call void @__bad_copy_from() #14, !dbg !12103
  br label %if.end.i.i269, !dbg !12103

if.else8.i.i268:                                  ; preds = %if.else.i.i266
  call void @__bad_copy_to() #14, !dbg !12104
  br label %if.end.i.i269

if.end.i.i269:                                    ; preds = %if.else8.i.i268, %if.then7.i.i267
  br label %if.end9.i.i270

if.end9.i.i270:                                   ; preds = %if.end.i.i269, %if.then5.i.i264
  store i1 false, i1* %retval.i.i245, align 1, !dbg !12105
  br label %check_copy_size.exit.i292, !dbg !12105

if.end10.i.i278:                                  ; preds = %land.end.i.i262
  %231 = load i64, i64* %bytes.addr.i.i247, align 8, !dbg !11609
  %cmp11.i.i271 = icmp ugt i64 %231, 2147483647, !dbg !11609
  %lnot13.i.i272 = xor i1 %cmp11.i.i271, true, !dbg !11609
  %lnot.ext16.i.i273 = zext i1 %cmp11.i.i271 to i32, !dbg !11609
  store i32 %lnot.ext16.i.i273, i32* %__ret_warn_on.i.i250, align 4, !dbg !11609
  %232 = load i32, i32* %__ret_warn_on.i.i250, align 4, !dbg !12106
  %tobool17.i.i274 = icmp ne i32 %232, 0, !dbg !12106
  %lnot18.i.i275 = xor i1 %tobool17.i.i274, true, !dbg !12106
  %lnot.ext21.i.i276 = zext i1 %tobool17.i.i274 to i32, !dbg !12106
  %conv22.i.i277 = sext i32 %lnot.ext21.i.i276 to i64, !dbg !12106
  br i1 %tobool17.i.i274, label %if.then24.i.i279, label %if.end31.i.i285, !dbg !11609

if.then24.i.i279:                                 ; preds = %if.end10.i.i278
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.40, i64 0, i64 0), i32 150, i32 2307, i64 12) #11, !dbg !12107, !srcloc !10968
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #11, !dbg !12108, !srcloc !10971
  br label %if.end31.i.i285, !dbg !12109

if.end31.i.i285:                                  ; preds = %if.then24.i.i279, %if.end10.i.i278
  %233 = load i32, i32* %__ret_warn_on.i.i250, align 4, !dbg !11609
  %tobool32.i.i280 = icmp ne i32 %233, 0, !dbg !11609
  %lnot33.i.i281 = xor i1 %tobool32.i.i280, true, !dbg !11609
  %lnot.ext36.i.i282 = zext i1 %tobool32.i.i280 to i32, !dbg !11609
  %conv37.i.i283 = sext i32 %lnot.ext36.i.i282 to i64, !dbg !11609
  store i64 %conv37.i.i283, i64* %tmp.i.i251, align 8, !dbg !12106
  %234 = load i64, i64* %tmp.i.i251, align 8, !dbg !11609
  %tobool38.i.i284 = icmp ne i64 %234, 0, !dbg !12110
  br i1 %tobool38.i.i284, label %if.then39.i.i286, label %if.end40.i.i288, !dbg !12111

if.then39.i.i286:                                 ; preds = %if.end31.i.i285
  store i1 false, i1* %retval.i.i245, align 1, !dbg !12112
  br label %check_copy_size.exit.i292, !dbg !12112

if.end40.i.i288:                                  ; preds = %if.end31.i.i285
  %235 = load i8*, i8** %addr.addr.i.i246, align 8, !dbg !12113
  %236 = load i64, i64* %bytes.addr.i.i247, align 8, !dbg !12114
  %237 = load i8, i8* %is_source.addr.i.i248, align 1, !dbg !12115
  %tobool41.i.i287 = trunc i8 %237 to i1, !dbg !12115
  call void @check_object_size(i8* %235, i64 %236, i1 zeroext %tobool41.i.i287) #14, !dbg !12116
  store i1 true, i1* %retval.i.i245, align 1, !dbg !12117
  br label %check_copy_size.exit.i292, !dbg !12117

check_copy_size.exit.i292:                        ; preds = %if.end40.i.i288, %if.then39.i.i286, %if.end9.i.i270
  %238 = load i1, i1* %retval.i.i245, align 1, !dbg !12118
  %lnot.i289 = xor i1 %238, true, !dbg !12091
  %lnot.ext.i290 = zext i1 %238 to i32, !dbg !12091
  %conv.i291 = sext i32 %lnot.ext.i290 to i64, !dbg !12091
  br i1 %238, label %if.then.i294, label %copy_to_user.exit295, !dbg !12119

if.then.i294:                                     ; preds = %check_copy_size.exit.i292
  %239 = load i8*, i8** %to.addr.i252, align 8, !dbg !12120
  %240 = load i8*, i8** %from.addr.i253, align 8, !dbg !12121
  %241 = load i64, i64* %n.addr.i254, align 8, !dbg !12122
  %call2.i293 = call i64 @_copy_to_user(i8* %239, i8* %240, i64 %241) #14, !dbg !12123
  store i64 %call2.i293, i64* %n.addr.i254, align 8, !dbg !12124
  br label %copy_to_user.exit295, !dbg !12125

copy_to_user.exit295:                             ; preds = %check_copy_size.exit.i292, %if.then.i294
  %242 = load i64, i64* %n.addr.i254, align 8, !dbg !12126
  %tobool229 = icmp ne i64 %242, 0, !dbg !12127
  br i1 %tobool229, label %if.then230, label %if.end231, !dbg !12128

if.then230:                                       ; preds = %copy_to_user.exit295
  store i32 -14, i32* %err, align 4, !dbg !12129
  br label %abort, !dbg !12131

if.end231:                                        ; preds = %copy_to_user.exit295
  br label %if.end232, !dbg !12132

if.end232:                                        ; preds = %if.end231, %if.end222
  br label %abort, !dbg !12084

abort:                                            ; preds = %if.end232, %if.then230, %if.then220, %if.then135, %if.then104, %sw.default, %if.then43, %if.then31, %if.then21
  call void @llvm.dbg.label(metadata !12133), !dbg !12134
  %243 = load i64, i64* %inbuf_dma, align 8, !dbg !12135
  %tobool233 = icmp ne i64 %243, 0, !dbg !12135
  br i1 %tobool233, label %if.then234, label %if.end238, !dbg !12137

if.then234:                                       ; preds = %abort
  %244 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !12138
  %pdev235 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %244, i32 0, i32 4, !dbg !12138
  %245 = load %struct.pci_dev*, %struct.pci_dev** %pdev235, align 8, !dbg !12138
  %dev236 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %245, i32 0, i32 41, !dbg !12138
  %246 = load i64, i64* %inbuf_dma, align 8, !dbg !12138
  %247 = load i32, i32* %taskin, align 4, !dbg !12138
  %conv237 = zext i32 %247 to i64, !dbg !12138
  call void @dma_unmap_single_attrs(%struct.device* %dev236, i64 %246, i64 %conv237, i32 2, i64 0) #12, !dbg !12138
  br label %if.end238, !dbg !12138

if.end238:                                        ; preds = %if.then234, %abort
  %248 = load i64, i64* %outbuf_dma, align 8, !dbg !12139
  %tobool239 = icmp ne i64 %248, 0, !dbg !12139
  br i1 %tobool239, label %if.then240, label %if.end244, !dbg !12141

if.then240:                                       ; preds = %if.end238
  %249 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !12142
  %pdev241 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %249, i32 0, i32 4, !dbg !12142
  %250 = load %struct.pci_dev*, %struct.pci_dev** %pdev241, align 8, !dbg !12142
  %dev242 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %250, i32 0, i32 41, !dbg !12142
  %251 = load i64, i64* %outbuf_dma, align 8, !dbg !12142
  %252 = load i32, i32* %taskout, align 4, !dbg !12142
  %conv243 = zext i32 %252 to i64, !dbg !12142
  call void @dma_unmap_single_attrs(%struct.device* %dev242, i64 %251, i64 %conv243, i32 1, i64 0) #12, !dbg !12142
  br label %if.end244, !dbg !12142

if.end244:                                        ; preds = %if.then240, %if.end238
  %253 = load i8*, i8** %outbuf, align 8, !dbg !12143
  call void @kfree(i8* %253) #12, !dbg !12144
  %254 = load i8*, i8** %inbuf, align 8, !dbg !12145
  call void @kfree(i8* %254) #12, !dbg !12146
  %255 = load i32, i32* %err, align 4, !dbg !12147
  store i32 %255, i32* %retval, align 4, !dbg !12148
  br label %return, !dbg !12148

return:                                           ; preds = %if.end244, %if.then11, %if.then
  %256 = load i32, i32* %retval, align 4, !dbg !12149
  ret i32 %256, !dbg !12149
}

; Function Attrs: noredzone
declare dso_local i64 @_copy_to_user(i8*, i8*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @copy_overflow(i32 %size, i64 %count) #2 !dbg !12150 {
entry:
  %size.addr = alloca i32, align 4
  %count.addr = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !12153, metadata !DIExpression()), !dbg !12154
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !12155, metadata !DIExpression()), !dbg !12156
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !12157, metadata !DIExpression()), !dbg !12159
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !12159
  %0 = load i32, i32* %__ret_warn_on, align 4, !dbg !12160
  %tobool = icmp ne i32 %0, 0, !dbg !12160
  %lnot = xor i1 %tobool, true, !dbg !12160
  %lnot1 = xor i1 %lnot, true, !dbg !12160
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !12160
  %conv = sext i32 %lnot.ext to i64, !dbg !12160
  %tobool2 = icmp ne i64 %conv, 0, !dbg !12160
  br i1 %tobool2, label %if.then, label %if.end, !dbg !12159

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !12160

do.body:                                          ; preds = %if.then
  br label %do.body3, !dbg !12162

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !12164

do.end:                                           ; preds = %do.body3
  %1 = load i32, i32* %size.addr, align 4, !dbg !12162
  %2 = load i64, i64* %count.addr, align 8, !dbg !12162
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.41, i64 0, i64 0), i32 %1, i64 %2) #12, !dbg !12162
  br label %do.body4, !dbg !12162

do.body4:                                         ; preds = %do.end
  br label %do.body5, !dbg !12166

do.body5:                                         ; preds = %do.body4
  br label %do.end6, !dbg !12168

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !12166

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.40, i64 0, i64 0), i32 134, i32 2313, i64 12) #11, !dbg !12170, !srcloc !12172
  br label %do.end8, !dbg !12170

do.end8:                                          ; preds = %do.body7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #11, !dbg !12173, !srcloc !12175
  br label %do.body9, !dbg !12166

do.body9:                                         ; preds = %do.end8
  br label %do.end10, !dbg !12176

do.end10:                                         ; preds = %do.body9
  br label %do.end11, !dbg !12166

do.end11:                                         ; preds = %do.end10
  br label %do.body12, !dbg !12162

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !12178

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !12162

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !12162

if.end:                                           ; preds = %do.end14, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !12159
  %tobool15 = icmp ne i32 %3, 0, !dbg !12159
  %lnot16 = xor i1 %tobool15, true, !dbg !12159
  %lnot18 = xor i1 %lnot16, true, !dbg !12159
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !12159
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !12159
  store i64 %conv20, i64* %tmp, align 8, !dbg !12160
  %4 = load i64, i64* %tmp, align 8, !dbg !12159
  ret void, !dbg !12180
}

; Function Attrs: noredzone
declare dso_local void @__bad_copy_from() #1

; Function Attrs: noredzone
declare dso_local void @__bad_copy_to() #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @check_object_size(i8* %ptr, i64 %n, i1 zeroext %to_user) #2 !dbg !12181 {
entry:
  %ptr.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %to_user.addr = alloca i8, align 1
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !12184, metadata !DIExpression()), !dbg !12185
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !12186, metadata !DIExpression()), !dbg !12187
  %frombool = zext i1 %to_user to i8
  store i8 %frombool, i8* %to_user.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %to_user.addr, metadata !12188, metadata !DIExpression()), !dbg !12189
  ret void, !dbg !12190
}

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #1

; Function Attrs: noredzone
declare dso_local i64 @_copy_from_user(i8*, i8*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mtip_set_timeout(%struct.driver_data* %dd, %struct.host_to_dev_fis* %fis, i32* %timeout, i8 zeroext %erasemode) #2 !dbg !12191 {
entry:
  %dd.addr = alloca %struct.driver_data*, align 8
  %fis.addr = alloca %struct.host_to_dev_fis*, align 8
  %timeout.addr = alloca i32*, align 8
  %erasemode.addr = alloca i8, align 1
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !12194, metadata !DIExpression()), !dbg !12195
  store %struct.host_to_dev_fis* %fis, %struct.host_to_dev_fis** %fis.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.host_to_dev_fis** %fis.addr, metadata !12196, metadata !DIExpression()), !dbg !12197
  store i32* %timeout, i32** %timeout.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %timeout.addr, metadata !12198, metadata !DIExpression()), !dbg !12199
  store i8 %erasemode, i8* %erasemode.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %erasemode.addr, metadata !12200, metadata !DIExpression()), !dbg !12201
  %0 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis.addr, align 8, !dbg !12202
  %command = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %0, i32 0, i32 2, !dbg !12203
  %1 = load i8, i8* %command, align 2, !dbg !12203
  %conv = zext i8 %1 to i32, !dbg !12202
  switch i32 %conv, label %sw.default [
    i32 146, label %sw.bb
    i32 244, label %sw.bb1
    i32 252, label %sw.bb1
    i32 224, label %sw.bb10
    i32 247, label %sw.bb11
    i32 250, label %sw.bb11
    i32 176, label %sw.bb12
  ], !dbg !12204

sw.bb:                                            ; preds = %entry
  %2 = load i32*, i32** %timeout.addr, align 8, !dbg !12205
  store i32 120000, i32* %2, align 4, !dbg !12207
  br label %sw.epilog, !dbg !12208

sw.bb1:                                           ; preds = %entry, %entry
  %3 = load i8, i8* %erasemode.addr, align 1, !dbg !12209
  %tobool = icmp ne i8 %3, 0, !dbg !12209
  br i1 %tobool, label %if.then, label %if.else, !dbg !12211

if.then:                                          ; preds = %sw.bb1
  %4 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !12212
  %port = getelementptr inbounds %struct.driver_data, %struct.driver_data* %4, i32 0, i32 7, !dbg !12213
  %5 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !12213
  %identify = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %5, i32 0, i32 12, !dbg !12214
  %6 = load i16*, i16** %identify, align 8, !dbg !12214
  %add.ptr = getelementptr i16, i16* %6, i64 90, !dbg !12215
  %7 = load i16, i16* %add.ptr, align 2, !dbg !12216
  %conv2 = zext i16 %7 to i32, !dbg !12216
  %mul = mul i32 %conv2, 2, !dbg !12217
  %mul3 = mul i32 %mul, 60000, !dbg !12218
  %8 = load i32*, i32** %timeout.addr, align 8, !dbg !12219
  store i32 %mul3, i32* %8, align 4, !dbg !12220
  br label %if.end, !dbg !12221

if.else:                                          ; preds = %sw.bb1
  %9 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !12222
  %port4 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %9, i32 0, i32 7, !dbg !12223
  %10 = load %struct.mtip_port*, %struct.mtip_port** %port4, align 8, !dbg !12223
  %identify5 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %10, i32 0, i32 12, !dbg !12224
  %11 = load i16*, i16** %identify5, align 8, !dbg !12224
  %add.ptr6 = getelementptr i16, i16* %11, i64 89, !dbg !12225
  %12 = load i16, i16* %add.ptr6, align 2, !dbg !12226
  %conv7 = zext i16 %12 to i32, !dbg !12226
  %mul8 = mul i32 %conv7, 2, !dbg !12227
  %mul9 = mul i32 %mul8, 60000, !dbg !12228
  %13 = load i32*, i32** %timeout.addr, align 8, !dbg !12229
  store i32 %mul9, i32* %13, align 4, !dbg !12230
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog, !dbg !12231

sw.bb10:                                          ; preds = %entry
  %14 = load i32*, i32** %timeout.addr, align 8, !dbg !12232
  store i32 120000, i32* %14, align 4, !dbg !12233
  br label %sw.epilog, !dbg !12234

sw.bb11:                                          ; preds = %entry, %entry
  %15 = load i32*, i32** %timeout.addr, align 8, !dbg !12235
  store i32 60000, i32* %15, align 4, !dbg !12236
  br label %sw.epilog, !dbg !12237

sw.bb12:                                          ; preds = %entry
  %16 = load i32*, i32** %timeout.addr, align 8, !dbg !12238
  store i32 15000, i32* %16, align 4, !dbg !12239
  br label %sw.epilog, !dbg !12240

sw.default:                                       ; preds = %entry
  %17 = load i32*, i32** %timeout.addr, align 8, !dbg !12241
  store i32 5000, i32* %17, align 4, !dbg !12242
  br label %sw.epilog, !dbg !12243

sw.epilog:                                        ; preds = %sw.default, %sw.bb12, %sw.bb11, %sw.bb10, %if.end, %sw.bb
  ret void, !dbg !12244
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_exec_internal_command(%struct.mtip_port* %port, %struct.host_to_dev_fis* %fis, i32 %fis_len, i64 %buffer, i32 %buf_len, i32 %opts, i64 %timeout) #2 !dbg !12245 {
entry:
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.mtip_port*, align 8
  %fis.addr = alloca %struct.host_to_dev_fis*, align 8
  %fis_len.addr = alloca i32, align 4
  %buffer.addr = alloca i64, align 8
  %buf_len.addr = alloca i32, align 4
  %opts.addr = alloca i32, align 4
  %timeout.addr = alloca i64, align 8
  %int_cmd = alloca %struct.mtip_cmd*, align 8
  %dd = alloca %struct.driver_data*, align 8
  %rq = alloca %struct.request*, align 8
  %icmd = alloca %struct.mtip_int_cmd, align 8
  %rv = alloca i32, align 4
  store %struct.mtip_port* %port, %struct.mtip_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mtip_port** %port.addr, metadata !12248, metadata !DIExpression()), !dbg !12249
  store %struct.host_to_dev_fis* %fis, %struct.host_to_dev_fis** %fis.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.host_to_dev_fis** %fis.addr, metadata !12250, metadata !DIExpression()), !dbg !12251
  store i32 %fis_len, i32* %fis_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fis_len.addr, metadata !12252, metadata !DIExpression()), !dbg !12253
  store i64 %buffer, i64* %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buffer.addr, metadata !12254, metadata !DIExpression()), !dbg !12255
  store i32 %buf_len, i32* %buf_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_len.addr, metadata !12256, metadata !DIExpression()), !dbg !12257
  store i32 %opts, i32* %opts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %opts.addr, metadata !12258, metadata !DIExpression()), !dbg !12259
  store i64 %timeout, i64* %timeout.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %timeout.addr, metadata !12260, metadata !DIExpression()), !dbg !12261
  call void @llvm.dbg.declare(metadata %struct.mtip_cmd** %int_cmd, metadata !12262, metadata !DIExpression()), !dbg !12263
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd, metadata !12264, metadata !DIExpression()), !dbg !12265
  %0 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12266
  %dd1 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %0, i32 0, i32 0, !dbg !12267
  %1 = load %struct.driver_data*, %struct.driver_data** %dd1, align 8, !dbg !12267
  store %struct.driver_data* %1, %struct.driver_data** %dd, align 8, !dbg !12265
  call void @llvm.dbg.declare(metadata %struct.request** %rq, metadata !12268, metadata !DIExpression()), !dbg !12269
  call void @llvm.dbg.declare(metadata %struct.mtip_int_cmd* %icmd, metadata !12270, metadata !DIExpression()), !dbg !12271
  %fis_len2 = getelementptr inbounds %struct.mtip_int_cmd, %struct.mtip_int_cmd* %icmd, i32 0, i32 0, !dbg !12272
  %2 = load i32, i32* %fis_len.addr, align 4, !dbg !12273
  store i32 %2, i32* %fis_len2, align 8, !dbg !12272
  %buffer3 = getelementptr inbounds %struct.mtip_int_cmd, %struct.mtip_int_cmd* %icmd, i32 0, i32 1, !dbg !12272
  %3 = load i64, i64* %buffer.addr, align 8, !dbg !12274
  store i64 %3, i64* %buffer3, align 8, !dbg !12272
  %buf_len4 = getelementptr inbounds %struct.mtip_int_cmd, %struct.mtip_int_cmd* %icmd, i32 0, i32 2, !dbg !12272
  %4 = load i32, i32* %buf_len.addr, align 4, !dbg !12275
  store i32 %4, i32* %buf_len4, align 8, !dbg !12272
  %opts5 = getelementptr inbounds %struct.mtip_int_cmd, %struct.mtip_int_cmd* %icmd, i32 0, i32 3, !dbg !12272
  %5 = load i32, i32* %opts.addr, align 4, !dbg !12276
  store i32 %5, i32* %opts5, align 4, !dbg !12272
  call void @llvm.dbg.declare(metadata i32* %rv, metadata !12277, metadata !DIExpression()), !dbg !12278
  store i32 0, i32* %rv, align 4, !dbg !12278
  %6 = load i64, i64* %buffer.addr, align 8, !dbg !12279
  %and = and i64 %6, 7, !dbg !12281
  %tobool = icmp ne i64 %and, 0, !dbg !12281
  br i1 %tobool, label %if.then, label %if.end, !dbg !12282

if.then:                                          ; preds = %entry
  %7 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !12283
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %7, i32 0, i32 4, !dbg !12283
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12283
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 41, !dbg !12283
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.43, i64 0, i64 0)) #13, !dbg !12283
  store i32 -14, i32* %retval, align 4, !dbg !12285
  br label %return, !dbg !12285

if.end:                                           ; preds = %entry
  %9 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !12286
  %pdev6 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %9, i32 0, i32 4, !dbg !12288
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev6, align 8, !dbg !12288
  %call = call zeroext i1 @mtip_check_surprise_removal(%struct.pci_dev* %10) #12, !dbg !12289
  br i1 %call, label %if.then7, label %if.end8, !dbg !12290

if.then7:                                         ; preds = %if.end
  store i32 -14, i32* %retval, align 4, !dbg !12291
  br label %return, !dbg !12291

if.end8:                                          ; preds = %if.end
  %11 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !12292
  %queue = getelementptr inbounds %struct.driver_data, %struct.driver_data* %11, i32 0, i32 5, !dbg !12293
  %12 = load %struct.request_queue*, %struct.request_queue** %queue, align 8, !dbg !12293
  %call9 = call %struct.request* @blk_mq_alloc_request(%struct.request_queue* %12, i32 34, i32 2) #12, !dbg !12294
  store %struct.request* %call9, %struct.request** %rq, align 8, !dbg !12295
  %13 = load %struct.request*, %struct.request** %rq, align 8, !dbg !12296
  %14 = bitcast %struct.request* %13 to i8*, !dbg !12296
  %call10 = call zeroext i1 @IS_ERR(i8* %14) #12, !dbg !12298
  br i1 %call10, label %if.then11, label %if.end12, !dbg !12299

if.then11:                                        ; preds = %if.end8
  store i32 -14, i32* %retval, align 4, !dbg !12300
  br label %return, !dbg !12300

if.end12:                                         ; preds = %if.end8
  %15 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12302
  %flags = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %15, i32 0, i32 22, !dbg !12303
  call void @set_bit(i64 0, i64* %flags) #12, !dbg !12304
  %16 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis.addr, align 8, !dbg !12305
  %command = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %16, i32 0, i32 2, !dbg !12307
  %17 = load i8, i8* %command, align 2, !dbg !12307
  %conv = zext i8 %17 to i32, !dbg !12305
  %cmp = icmp eq i32 %conv, 243, !dbg !12308
  br i1 %cmp, label %if.then14, label %if.end16, !dbg !12309

if.then14:                                        ; preds = %if.end12
  %18 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12310
  %flags15 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %18, i32 0, i32 22, !dbg !12311
  call void @set_bit(i64 2, i64* %flags15) #12, !dbg !12312
  br label %if.end16, !dbg !12312

if.end16:                                         ; preds = %if.then14, %if.end12
  %19 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12313
  %flags17 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %19, i32 0, i32 22, !dbg !12314
  call void @clear_bit(i64 3, i64* %flags17) #12, !dbg !12315
  %20 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis.addr, align 8, !dbg !12316
  %command18 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %20, i32 0, i32 2, !dbg !12318
  %21 = load i8, i8* %command18, align 2, !dbg !12318
  %conv19 = zext i8 %21 to i32, !dbg !12316
  %cmp20 = icmp ne i32 %conv19, 224, !dbg !12319
  br i1 %cmp20, label %if.then22, label %if.end31, !dbg !12320

if.then22:                                        ; preds = %if.end16
  %22 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12321
  %call23 = call i32 @mtip_quiesce_io(%struct.mtip_port* %22, i64 45000) #12, !dbg !12324
  %cmp24 = icmp slt i32 %call23, 0, !dbg !12325
  br i1 %cmp24, label %if.then26, label %if.end30, !dbg !12326

if.then26:                                        ; preds = %if.then22
  %23 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !12327
  %pdev27 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %23, i32 0, i32 4, !dbg !12327
  %24 = load %struct.pci_dev*, %struct.pci_dev** %pdev27, align 8, !dbg !12327
  %dev28 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %24, i32 0, i32 41, !dbg !12327
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev28, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.44, i64 0, i64 0)) #13, !dbg !12327
  %25 = load %struct.request*, %struct.request** %rq, align 8, !dbg !12329
  call void @blk_mq_free_request(%struct.request* %25) #12, !dbg !12330
  %26 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12331
  %flags29 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %26, i32 0, i32 22, !dbg !12332
  call void @clear_bit(i64 0, i64* %flags29) #12, !dbg !12333
  %27 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12334
  %svc_wait = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %27, i32 0, i32 21, !dbg !12334
  call void @__wake_up(%struct.wait_queue_head* %svc_wait, i32 1, i32 1, i8* null) #12, !dbg !12334
  store i32 -16, i32* %retval, align 4, !dbg !12335
  br label %return, !dbg !12335

if.end30:                                         ; preds = %if.then22
  br label %if.end31, !dbg !12336

if.end31:                                         ; preds = %if.end30, %if.end16
  %28 = load %struct.request*, %struct.request** %rq, align 8, !dbg !12337
  %call32 = call i8* @blk_mq_rq_to_pdu(%struct.request* %28) #12, !dbg !12338
  %29 = bitcast i8* %call32 to %struct.mtip_cmd*, !dbg !12338
  store %struct.mtip_cmd* %29, %struct.mtip_cmd** %int_cmd, align 8, !dbg !12339
  %30 = load %struct.mtip_cmd*, %struct.mtip_cmd** %int_cmd, align 8, !dbg !12340
  %31 = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %30, i32 0, i32 4, !dbg !12341
  %icmd33 = bitcast %union.anon.85* %31 to %struct.mtip_int_cmd**, !dbg !12341
  store %struct.mtip_int_cmd* %icmd, %struct.mtip_int_cmd** %icmd33, align 8, !dbg !12342
  %32 = load %struct.mtip_cmd*, %struct.mtip_cmd** %int_cmd, align 8, !dbg !12343
  %command34 = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %32, i32 0, i32 0, !dbg !12344
  %33 = load i8*, i8** %command34, align 8, !dbg !12344
  %34 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis.addr, align 8, !dbg !12345
  %35 = bitcast %struct.host_to_dev_fis* %34 to i8*, !dbg !12346
  %36 = load i32, i32* %fis_len.addr, align 4, !dbg !12347
  %mul = mul i32 %36, 4, !dbg !12348
  %conv35 = sext i32 %mul to i64, !dbg !12347
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 4 %35, i64 %conv35, i1 false), !dbg !12346
  %37 = load i64, i64* %timeout.addr, align 8, !dbg !12349
  %conv36 = trunc i64 %37 to i32, !dbg !12349
  %38 = load %struct.request*, %struct.request** %rq, align 8, !dbg !12350
  %timeout37 = getelementptr inbounds %struct.request, %struct.request* %38, i32 0, i32 26, !dbg !12351
  store i32 %conv36, i32* %timeout37, align 4, !dbg !12352
  %39 = load %struct.request*, %struct.request** %rq, align 8, !dbg !12353
  %q = getelementptr inbounds %struct.request, %struct.request* %39, i32 0, i32 0, !dbg !12354
  %40 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !12354
  %41 = load %struct.request*, %struct.request** %rq, align 8, !dbg !12355
  call void @blk_execute_rq(%struct.request_queue* %40, %struct.gendisk* null, %struct.request* %41, i32 1) #12, !dbg !12356
  %42 = load %struct.mtip_cmd*, %struct.mtip_cmd** %int_cmd, align 8, !dbg !12357
  %status = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %42, i32 0, i32 7, !dbg !12359
  %43 = load i8, i8* %status, align 8, !dbg !12359
  %tobool38 = icmp ne i8 %43, 0, !dbg !12357
  br i1 %tobool38, label %if.then39, label %if.end58, !dbg !12360

if.then39:                                        ; preds = %if.end31
  %44 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !12361
  %pdev40 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %44, i32 0, i32 4, !dbg !12361
  %45 = load %struct.pci_dev*, %struct.pci_dev** %pdev40, align 8, !dbg !12361
  %dev41 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %45, i32 0, i32 41, !dbg !12361
  %46 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis.addr, align 8, !dbg !12361
  %command42 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %46, i32 0, i32 2, !dbg !12361
  %47 = load i8, i8* %command42, align 2, !dbg !12361
  %conv43 = zext i8 %47 to i32, !dbg !12361
  %48 = load %struct.mtip_cmd*, %struct.mtip_cmd** %int_cmd, align 8, !dbg !12361
  %status44 = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %48, i32 0, i32 7, !dbg !12361
  %49 = load i8, i8* %status44, align 8, !dbg !12361
  %conv45 = zext i8 %49 to i32, !dbg !12361
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev41, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.45, i64 0, i64 0), i32 %conv43, i32 %conv45) #13, !dbg !12361
  store i32 -5, i32* %rv, align 4, !dbg !12363
  %50 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !12364
  %pdev46 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %50, i32 0, i32 4, !dbg !12366
  %51 = load %struct.pci_dev*, %struct.pci_dev** %pdev46, align 8, !dbg !12366
  %call47 = call zeroext i1 @mtip_check_surprise_removal(%struct.pci_dev* %51) #12, !dbg !12367
  br i1 %call47, label %if.then51, label %lor.lhs.false, !dbg !12368

lor.lhs.false:                                    ; preds = %if.then39
  %52 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !12369
  %dd_flag = getelementptr inbounds %struct.driver_data, %struct.driver_data* %52, i32 0, i32 11, !dbg !12370
  %call49 = call zeroext i1 @test_bit(i64 1, i64* %dd_flag) #12, !dbg !12371
  br i1 %call49, label %if.then51, label %if.end56, !dbg !12372

if.then51:                                        ; preds = %lor.lhs.false, %if.then39
  %53 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !12373
  %pdev52 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %53, i32 0, i32 4, !dbg !12373
  %54 = load %struct.pci_dev*, %struct.pci_dev** %pdev52, align 8, !dbg !12373
  %dev53 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %54, i32 0, i32 41, !dbg !12373
  %55 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis.addr, align 8, !dbg !12373
  %command54 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %55, i32 0, i32 2, !dbg !12373
  %56 = load i8, i8* %command54, align 2, !dbg !12373
  %conv55 = zext i8 %56 to i32, !dbg !12373
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev53, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.46, i64 0, i64 0), i32 %conv55) #13, !dbg !12373
  store i32 -6, i32* %rv, align 4, !dbg !12375
  br label %exec_ic_exit, !dbg !12376

if.end56:                                         ; preds = %lor.lhs.false
  %57 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !12377
  %call57 = call i32 @mtip_device_reset(%struct.driver_data* %57) #12, !dbg !12378
  store i32 -11, i32* %rv, align 4, !dbg !12379
  br label %exec_ic_exit, !dbg !12380

if.end58:                                         ; preds = %if.end31
  %58 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12381
  %cmd_issue = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %58, i32 0, i32 5, !dbg !12383
  %arrayidx = getelementptr [8 x i8*], [8 x i8*]* %cmd_issue, i64 0, i64 0, !dbg !12381
  %59 = load i8*, i8** %arrayidx, align 8, !dbg !12381
  %call59 = call i32 @readl(i8* %59) #12, !dbg !12384
  %and60 = and i32 %call59, 1, !dbg !12385
  %tobool61 = icmp ne i32 %and60, 0, !dbg !12385
  br i1 %tobool61, label %if.then62, label %if.end68, !dbg !12386

if.then62:                                        ; preds = %if.end58
  store i32 -6, i32* %rv, align 4, !dbg !12387
  %60 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !12389
  %dd_flag63 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %60, i32 0, i32 11, !dbg !12391
  %call64 = call zeroext i1 @test_bit(i64 1, i64* %dd_flag63) #12, !dbg !12392
  br i1 %call64, label %if.end67, label %if.then65, !dbg !12393

if.then65:                                        ; preds = %if.then62
  %61 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !12394
  %call66 = call i32 @mtip_device_reset(%struct.driver_data* %61) #12, !dbg !12396
  store i32 -11, i32* %rv, align 4, !dbg !12397
  br label %if.end67, !dbg !12398

if.end67:                                         ; preds = %if.then65, %if.then62
  br label %if.end68, !dbg !12399

if.end68:                                         ; preds = %if.end67, %if.end58
  br label %exec_ic_exit, !dbg !12400

exec_ic_exit:                                     ; preds = %if.end68, %if.end56, %if.then51
  call void @llvm.dbg.label(metadata !12401), !dbg !12402
  %62 = load %struct.request*, %struct.request** %rq, align 8, !dbg !12403
  call void @blk_mq_free_request(%struct.request* %62) #12, !dbg !12404
  %63 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12405
  %flags69 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %63, i32 0, i32 22, !dbg !12406
  call void @clear_bit(i64 0, i64* %flags69) #12, !dbg !12407
  %64 = load i32, i32* %rv, align 4, !dbg !12408
  %cmp70 = icmp sge i32 %64, 0, !dbg !12410
  br i1 %cmp70, label %land.lhs.true, label %if.end75, !dbg !12411

land.lhs.true:                                    ; preds = %exec_ic_exit
  %65 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12412
  %66 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis.addr, align 8, !dbg !12413
  %call72 = call zeroext i1 @mtip_pause_ncq(%struct.mtip_port* %65, %struct.host_to_dev_fis* %66) #12, !dbg !12414
  br i1 %call72, label %if.then74, label %if.end75, !dbg !12415

if.then74:                                        ; preds = %land.lhs.true
  %67 = load i32, i32* %rv, align 4, !dbg !12416
  store i32 %67, i32* %retval, align 4, !dbg !12418
  br label %return, !dbg !12418

if.end75:                                         ; preds = %land.lhs.true, %exec_ic_exit
  %68 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12419
  %svc_wait76 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %68, i32 0, i32 21, !dbg !12419
  call void @__wake_up(%struct.wait_queue_head* %svc_wait76, i32 1, i32 1, i8* null) #12, !dbg !12419
  %69 = load i32, i32* %rv, align 4, !dbg !12420
  store i32 %69, i32* %retval, align 4, !dbg !12421
  br label %return, !dbg !12421

return:                                           ; preds = %if.end75, %if.then74, %if.then26, %if.then11, %if.then7, %if.then
  %70 = load i32, i32* %retval, align 4, !dbg !12422
  ret i32 %70, !dbg !12422
}

; Function Attrs: noredzone
declare dso_local %struct.request* @blk_mq_alloc_request(%struct.request_queue*, i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #2 !dbg !12423 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !12424, metadata !DIExpression()), !dbg !12426
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !12428, metadata !DIExpression()), !dbg !12429
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !8241, metadata !DIExpression()), !dbg !12430
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8245, metadata !DIExpression()), !dbg !12432
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !12433, metadata !DIExpression()), !dbg !12434
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !12435, metadata !DIExpression()), !dbg !12436
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !12437
  %1 = load i64, i64* %nr.addr, align 8, !dbg !12438
  %div = sdiv i64 %1, 64, !dbg !12438
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !12439
  %2 = bitcast i64* %add.ptr to i8*, !dbg !12437
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !12440
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !12441
  %conv.i = trunc i64 %4 to i32, !dbg !12441
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #14, !dbg !12442
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !12443
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !12443
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #14, !dbg !12443
  %7 = load i64, i64* %nr.addr, align 8, !dbg !12444
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !12445
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !12446
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #11, !dbg !12448
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !12449

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !12450
  %12 = bitcast i64* %11 to i8*, !dbg !12450
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !12450
  %shr.i = ashr i64 %13, 3, !dbg !12450
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !12450
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !12452
  %and.i = and i64 %14, 7, !dbg !12452
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !12452
  %shl.i = shl i32 1, %sh_prom.i, !dbg !12452
  %neg.i = xor i32 %shl.i, -1, !dbg !12453
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #11, !dbg !12454, !srcloc !12455
  br label %arch_clear_bit.exit, !dbg !12456

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !12457
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !12459
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #11, !dbg !12460, !srcloc !12461
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !12462
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_quiesce_io(%struct.mtip_port* %port, i64 %timeout) #2 !dbg !12463 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !7000, metadata !DIExpression()), !dbg !12466
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.mtip_port*, align 8
  %timeout.addr = alloca i64, align 8
  %to = alloca i64, align 8
  %active = alloca i8, align 1
  store %struct.mtip_port* %port, %struct.mtip_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mtip_port** %port.addr, metadata !12468, metadata !DIExpression()), !dbg !12469
  store i64 %timeout, i64* %timeout.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %timeout.addr, metadata !12470, metadata !DIExpression()), !dbg !12471
  call void @llvm.dbg.declare(metadata i64* %to, metadata !12472, metadata !DIExpression()), !dbg !12473
  call void @llvm.dbg.declare(metadata i8* %active, metadata !12474, metadata !DIExpression()), !dbg !12475
  store i8 1, i8* %active, align 1, !dbg !12475
  %0 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12476
  %dd = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %0, i32 0, i32 0, !dbg !12477
  %1 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !12477
  %queue = getelementptr inbounds %struct.driver_data, %struct.driver_data* %1, i32 0, i32 5, !dbg !12478
  %2 = load %struct.request_queue*, %struct.request_queue** %queue, align 8, !dbg !12478
  call void @blk_mq_quiesce_queue(%struct.request_queue* %2) #12, !dbg !12479
  %3 = load volatile i64, i64* @jiffies, align 8, !dbg !12480
  %4 = load i64, i64* %timeout.addr, align 8, !dbg !12481
  %conv = trunc i64 %4 to i32, !dbg !12481
  store i32 %conv, i32* %m.addr.i, align 4
  %5 = load i32, i32* %m.addr.i, align 4, !dbg !12482
  %6 = call i1 @llvm.is.constant.i32(i32 %5) #11, !dbg !12483
  br i1 %6, label %if.then.i, label %if.else.i, !dbg !12484

if.then.i:                                        ; preds = %entry
  %7 = load i32, i32* %m.addr.i, align 4, !dbg !12485
  %cmp.i = icmp slt i32 %7, 0, !dbg !12486
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !12487

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !12488
  br label %msecs_to_jiffies.exit, !dbg !12488

if.end.i:                                         ; preds = %if.then.i
  %8 = load i32, i32* %m.addr.i, align 4, !dbg !12489
  %call.i = call i64 @_msecs_to_jiffies(i32 %8) #14, !dbg !12490
  store i64 %call.i, i64* %retval.i, align 8, !dbg !12491
  br label %msecs_to_jiffies.exit, !dbg !12491

if.else.i:                                        ; preds = %entry
  %9 = load i32, i32* %m.addr.i, align 4, !dbg !12492
  %call2.i = call i64 @__msecs_to_jiffies(i32 %9) #14, !dbg !12493
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !12494
  br label %msecs_to_jiffies.exit, !dbg !12494

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %10 = load i64, i64* %retval.i, align 8, !dbg !12495
  %add = add i64 %3, %10, !dbg !12496
  store i64 %add, i64* %to, align 8, !dbg !12497
  br label %do.body, !dbg !12498

do.body:                                          ; preds = %do.cond, %msecs_to_jiffies.exit
  %11 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12499
  %flags = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %11, i32 0, i32 22, !dbg !12502
  %call1 = call zeroext i1 @test_bit(i64 4, i64* %flags) #12, !dbg !12503
  br i1 %call1, label %land.lhs.true, label %if.end, !dbg !12504

land.lhs.true:                                    ; preds = %do.body
  %12 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12505
  %flags3 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %12, i32 0, i32 22, !dbg !12506
  %call4 = call zeroext i1 @test_bit(i64 5, i64* %flags3) #12, !dbg !12507
  br i1 %call4, label %if.then, label %if.end, !dbg !12508

if.then:                                          ; preds = %land.lhs.true
  call void @msleep(i32 20) #12, !dbg !12509
  br label %do.cond, !dbg !12511

if.end:                                           ; preds = %land.lhs.true, %do.body
  call void @msleep(i32 100) #12, !dbg !12512
  %13 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12513
  %dd6 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %13, i32 0, i32 0, !dbg !12515
  %14 = load %struct.driver_data*, %struct.driver_data** %dd6, align 8, !dbg !12515
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %14, i32 0, i32 4, !dbg !12516
  %15 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12516
  %call7 = call zeroext i1 @mtip_check_surprise_removal(%struct.pci_dev* %15) #12, !dbg !12517
  br i1 %call7, label %if.then8, label %if.end9, !dbg !12518

if.then8:                                         ; preds = %if.end
  br label %err_fault, !dbg !12519

if.end9:                                          ; preds = %if.end
  %16 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12520
  %call10 = call zeroext i1 @mtip_commands_active(%struct.mtip_port* %16) #12, !dbg !12521
  %frombool = zext i1 %call10 to i8, !dbg !12522
  store i8 %frombool, i8* %active, align 1, !dbg !12522
  %17 = load i8, i8* %active, align 1, !dbg !12523
  %tobool = trunc i8 %17 to i1, !dbg !12523
  br i1 %tobool, label %if.end12, label %if.then11, !dbg !12525

if.then11:                                        ; preds = %if.end9
  br label %do.end, !dbg !12526

if.end12:                                         ; preds = %if.end9
  br label %do.cond, !dbg !12527

do.cond:                                          ; preds = %if.end12, %if.then
  %18 = load volatile i64, i64* @jiffies, align 8, !dbg !12528
  %19 = load i64, i64* %to, align 8, !dbg !12528
  %sub = sub i64 %18, %19, !dbg !12528
  %cmp = icmp slt i64 %sub, 0, !dbg !12528
  br i1 %cmp, label %do.body, label %do.end, !dbg !12527, !llvm.loop !12529

do.end:                                           ; preds = %do.cond, %if.then11
  %20 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12531
  %dd14 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %20, i32 0, i32 0, !dbg !12532
  %21 = load %struct.driver_data*, %struct.driver_data** %dd14, align 8, !dbg !12532
  %queue15 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %21, i32 0, i32 5, !dbg !12533
  %22 = load %struct.request_queue*, %struct.request_queue** %queue15, align 8, !dbg !12533
  call void @blk_mq_unquiesce_queue(%struct.request_queue* %22) #12, !dbg !12534
  %23 = load i8, i8* %active, align 1, !dbg !12535
  %tobool16 = trunc i8 %23 to i1, !dbg !12535
  %24 = zext i1 %tobool16 to i64, !dbg !12535
  %cond = select i1 %tobool16, i32 -16, i32 0, !dbg !12535
  store i32 %cond, i32* %retval, align 4, !dbg !12536
  br label %return, !dbg !12536

err_fault:                                        ; preds = %if.then8
  call void @llvm.dbg.label(metadata !12537), !dbg !12538
  %25 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12539
  %dd18 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %25, i32 0, i32 0, !dbg !12540
  %26 = load %struct.driver_data*, %struct.driver_data** %dd18, align 8, !dbg !12540
  %queue19 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %26, i32 0, i32 5, !dbg !12541
  %27 = load %struct.request_queue*, %struct.request_queue** %queue19, align 8, !dbg !12541
  call void @blk_mq_unquiesce_queue(%struct.request_queue* %27) #12, !dbg !12542
  store i32 -14, i32* %retval, align 4, !dbg !12543
  br label %return, !dbg !12543

return:                                           ; preds = %err_fault, %do.end
  %28 = load i32, i32* %retval, align 4, !dbg !12544
  ret i32 %28, !dbg !12544
}

; Function Attrs: noredzone
declare dso_local void @blk_mq_free_request(%struct.request*) #1

; Function Attrs: noredzone
declare dso_local void @blk_execute_rq(%struct.request_queue*, %struct.gendisk*, %struct.request*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_device_reset(%struct.driver_data* %dd) #2 !dbg !12545 {
entry:
  %retval = alloca i32, align 4
  %dd.addr = alloca %struct.driver_data*, align 8
  %rv = alloca i32, align 4
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !12546, metadata !DIExpression()), !dbg !12547
  call void @llvm.dbg.declare(metadata i32* %rv, metadata !12548, metadata !DIExpression()), !dbg !12549
  store i32 0, i32* %rv, align 4, !dbg !12549
  %0 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !12550
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %0, i32 0, i32 4, !dbg !12552
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12552
  %call = call zeroext i1 @mtip_check_surprise_removal(%struct.pci_dev* %1) #12, !dbg !12553
  br i1 %call, label %if.then, label %if.end, !dbg !12554

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !12555
  br label %return, !dbg !12555

if.end:                                           ; preds = %entry
  %2 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !12556
  %call1 = call i32 @mtip_hba_reset(%struct.driver_data* %2) #12, !dbg !12558
  %cmp = icmp slt i32 %call1, 0, !dbg !12559
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !12560

if.then2:                                         ; preds = %if.end
  store i32 -14, i32* %rv, align 4, !dbg !12561
  br label %if.end3, !dbg !12562

if.end3:                                          ; preds = %if.then2, %if.end
  call void @__const_udelay(i64 4295000) #12, !dbg !12563
  %3 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !12568
  %port = getelementptr inbounds %struct.driver_data, %struct.driver_data* %3, i32 0, i32 7, !dbg !12569
  %4 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !12569
  call void @mtip_init_port(%struct.mtip_port* %4) #12, !dbg !12570
  %5 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !12571
  %port4 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %5, i32 0, i32 7, !dbg !12572
  %6 = load %struct.mtip_port*, %struct.mtip_port** %port4, align 8, !dbg !12572
  call void @mtip_start_port(%struct.mtip_port* %6) #12, !dbg !12573
  %7 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !12574
  %mmio = getelementptr inbounds %struct.driver_data, %struct.driver_data* %7, i32 0, i32 0, !dbg !12575
  %8 = load i8*, i8** %mmio, align 8, !dbg !12575
  %add.ptr = getelementptr i8, i8* %8, i64 4, !dbg !12576
  %call5 = call i32 @readl(i8* %add.ptr) #12, !dbg !12577
  %or = or i32 %call5, 2, !dbg !12578
  %9 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !12579
  %mmio6 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %9, i32 0, i32 0, !dbg !12580
  %10 = load i8*, i8** %mmio6, align 8, !dbg !12580
  %add.ptr7 = getelementptr i8, i8* %10, i64 4, !dbg !12581
  call void @writel(i32 %or, i8* %add.ptr7) #12, !dbg !12582
  %11 = load i32, i32* %rv, align 4, !dbg !12583
  store i32 %11, i32* %retval, align 4, !dbg !12584
  br label %return, !dbg !12584

return:                                           ; preds = %if.end3, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !12585
  ret i32 %12, !dbg !12585
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mtip_pause_ncq(%struct.mtip_port* %port, %struct.host_to_dev_fis* %fis) #2 !dbg !12586 {
entry:
  %retval = alloca i1, align 1
  %port.addr = alloca %struct.mtip_port*, align 8
  %fis.addr = alloca %struct.host_to_dev_fis*, align 8
  %task_file_data = alloca i64, align 8
  store %struct.mtip_port* %port, %struct.mtip_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mtip_port** %port.addr, metadata !12589, metadata !DIExpression()), !dbg !12590
  store %struct.host_to_dev_fis* %fis, %struct.host_to_dev_fis** %fis.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.host_to_dev_fis** %fis.addr, metadata !12591, metadata !DIExpression()), !dbg !12592
  call void @llvm.dbg.declare(metadata i64* %task_file_data, metadata !12593, metadata !DIExpression()), !dbg !12594
  %0 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12595
  %mmio = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %0, i32 0, i32 2, !dbg !12596
  %1 = load i8*, i8** %mmio, align 8, !dbg !12596
  %add.ptr = getelementptr i8, i8* %1, i64 32, !dbg !12597
  %call = call i32 @readl(i8* %add.ptr) #12, !dbg !12598
  %conv = zext i32 %call to i64, !dbg !12598
  store i64 %conv, i64* %task_file_data, align 8, !dbg !12599
  %2 = load i64, i64* %task_file_data, align 8, !dbg !12600
  %and = and i64 %2, 1, !dbg !12602
  %tobool = icmp ne i64 %and, 0, !dbg !12602
  br i1 %tobool, label %if.then, label %if.end, !dbg !12603

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !12604
  br label %return, !dbg !12604

if.end:                                           ; preds = %entry
  %3 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis.addr, align 8, !dbg !12605
  %command = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %3, i32 0, i32 2, !dbg !12607
  %4 = load i8, i8* %command, align 2, !dbg !12607
  %conv1 = zext i8 %4 to i32, !dbg !12605
  %cmp = icmp eq i32 %conv1, 243, !dbg !12608
  br i1 %cmp, label %if.then3, label %if.else, !dbg !12609

if.then3:                                         ; preds = %if.end
  %5 = load volatile i64, i64* @jiffies, align 8, !dbg !12610
  %6 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12612
  %ic_pause_timer = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %6, i32 0, i32 23, !dbg !12613
  store i64 %5, i64* %ic_pause_timer, align 8, !dbg !12614
  store i1 true, i1* %retval, align 1, !dbg !12615
  br label %return, !dbg !12615

if.else:                                          ; preds = %if.end
  %7 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis.addr, align 8, !dbg !12616
  %command4 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %7, i32 0, i32 2, !dbg !12618
  %8 = load i8, i8* %command4, align 2, !dbg !12618
  %conv5 = zext i8 %8 to i32, !dbg !12616
  %cmp6 = icmp eq i32 %conv5, 146, !dbg !12619
  br i1 %cmp6, label %land.lhs.true, label %if.else13, !dbg !12620

land.lhs.true:                                    ; preds = %if.else
  %9 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis.addr, align 8, !dbg !12621
  %features = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %9, i32 0, i32 3, !dbg !12622
  %10 = load i8, i8* %features, align 1, !dbg !12622
  %conv8 = zext i8 %10 to i32, !dbg !12621
  %cmp9 = icmp eq i32 %conv8, 3, !dbg !12623
  br i1 %cmp9, label %if.then11, label %if.else13, !dbg !12624

if.then11:                                        ; preds = %land.lhs.true
  %11 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12625
  %flags = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %11, i32 0, i32 22, !dbg !12627
  call void @set_bit(i64 3, i64* %flags) #12, !dbg !12628
  %12 = load volatile i64, i64* @jiffies, align 8, !dbg !12629
  %13 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12630
  %ic_pause_timer12 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %13, i32 0, i32 23, !dbg !12631
  store i64 %12, i64* %ic_pause_timer12, align 8, !dbg !12632
  store i1 true, i1* %retval, align 1, !dbg !12633
  br label %return, !dbg !12633

if.else13:                                        ; preds = %land.lhs.true, %if.else
  %14 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis.addr, align 8, !dbg !12634
  %command14 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %14, i32 0, i32 2, !dbg !12636
  %15 = load i8, i8* %command14, align 2, !dbg !12636
  %conv15 = zext i8 %15 to i32, !dbg !12634
  %cmp16 = icmp eq i32 %conv15, 244, !dbg !12637
  br i1 %cmp16, label %if.then42, label %lor.lhs.false, !dbg !12638

lor.lhs.false:                                    ; preds = %if.else13
  %16 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis.addr, align 8, !dbg !12639
  %command18 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %16, i32 0, i32 2, !dbg !12640
  %17 = load i8, i8* %command18, align 2, !dbg !12640
  %conv19 = zext i8 %17 to i32, !dbg !12639
  %cmp20 = icmp eq i32 %conv19, 252, !dbg !12641
  br i1 %cmp20, label %land.lhs.true22, label %if.end46, !dbg !12642

land.lhs.true22:                                  ; preds = %lor.lhs.false
  %18 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis.addr, align 8, !dbg !12643
  %features23 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %18, i32 0, i32 3, !dbg !12644
  %19 = load i8, i8* %features23, align 1, !dbg !12644
  %conv24 = zext i8 %19 to i32, !dbg !12643
  %cmp25 = icmp eq i32 %conv24, 39, !dbg !12645
  br i1 %cmp25, label %if.then42, label %lor.lhs.false27, !dbg !12646

lor.lhs.false27:                                  ; preds = %land.lhs.true22
  %20 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis.addr, align 8, !dbg !12647
  %features28 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %20, i32 0, i32 3, !dbg !12648
  %21 = load i8, i8* %features28, align 1, !dbg !12648
  %conv29 = zext i8 %21 to i32, !dbg !12647
  %cmp30 = icmp eq i32 %conv29, 114, !dbg !12649
  br i1 %cmp30, label %if.then42, label %lor.lhs.false32, !dbg !12650

lor.lhs.false32:                                  ; preds = %lor.lhs.false27
  %22 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis.addr, align 8, !dbg !12651
  %features33 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %22, i32 0, i32 3, !dbg !12652
  %23 = load i8, i8* %features33, align 1, !dbg !12652
  %conv34 = zext i8 %23 to i32, !dbg !12651
  %cmp35 = icmp eq i32 %conv34, 98, !dbg !12653
  br i1 %cmp35, label %if.then42, label %lor.lhs.false37, !dbg !12654

lor.lhs.false37:                                  ; preds = %lor.lhs.false32
  %24 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis.addr, align 8, !dbg !12655
  %features38 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %24, i32 0, i32 3, !dbg !12656
  %25 = load i8, i8* %features38, align 1, !dbg !12656
  %conv39 = zext i8 %25 to i32, !dbg !12655
  %cmp40 = icmp eq i32 %conv39, 38, !dbg !12657
  br i1 %cmp40, label %if.then42, label %if.end46, !dbg !12658

if.then42:                                        ; preds = %lor.lhs.false37, %lor.lhs.false32, %lor.lhs.false27, %land.lhs.true22, %if.else13
  %26 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12659
  %dd = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %26, i32 0, i32 0, !dbg !12661
  %27 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !12661
  %dd_flag = getelementptr inbounds %struct.driver_data, %struct.driver_data* %27, i32 0, i32 11, !dbg !12662
  call void @clear_bit(i64 0, i64* %dd_flag) #12, !dbg !12663
  %28 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12664
  %dd43 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %28, i32 0, i32 0, !dbg !12665
  %29 = load %struct.driver_data*, %struct.driver_data** %dd43, align 8, !dbg !12665
  %dd_flag44 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %29, i32 0, i32 11, !dbg !12666
  call void @clear_bit(i64 8, i64* %dd_flag44) #12, !dbg !12667
  %30 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12668
  call void @mtip_restart_port(%struct.mtip_port* %30) #12, !dbg !12669
  %31 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12670
  %flags45 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %31, i32 0, i32 22, !dbg !12671
  call void @clear_bit(i64 2, i64* %flags45) #12, !dbg !12672
  store i1 false, i1* %retval, align 1, !dbg !12673
  br label %return, !dbg !12673

if.end46:                                         ; preds = %lor.lhs.false37, %lor.lhs.false
  br label %if.end47

if.end47:                                         ; preds = %if.end46
  br label %if.end48

if.end48:                                         ; preds = %if.end47
  store i1 false, i1* %retval, align 1, !dbg !12674
  br label %return, !dbg !12674

return:                                           ; preds = %if.end48, %if.then42, %if.then11, %if.then3, %if.then
  %32 = load i1, i1* %retval, align 1, !dbg !12675
  ret i1 %32, !dbg !12675
}

; Function Attrs: noredzone
declare dso_local void @blk_mq_quiesce_queue(%struct.request_queue*) #1

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mtip_commands_active(%struct.mtip_port* %port) #2 !dbg !12676 {
entry:
  %port.addr = alloca %struct.mtip_port*, align 8
  %active = alloca i32, align 4
  %n = alloca i32, align 4
  store %struct.mtip_port* %port, %struct.mtip_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mtip_port** %port.addr, metadata !12679, metadata !DIExpression()), !dbg !12680
  call void @llvm.dbg.declare(metadata i32* %active, metadata !12681, metadata !DIExpression()), !dbg !12682
  call void @llvm.dbg.declare(metadata i32* %n, metadata !12683, metadata !DIExpression()), !dbg !12684
  %0 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12685
  %s_active = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %0, i32 0, i32 3, !dbg !12686
  %arrayidx = getelementptr [8 x i8*], [8 x i8*]* %s_active, i64 0, i64 0, !dbg !12685
  %1 = load i8*, i8** %arrayidx, align 8, !dbg !12685
  %call = call i32 @readl(i8* %1) #12, !dbg !12687
  %and = and i32 %call, -2, !dbg !12688
  store i32 %and, i32* %active, align 4, !dbg !12689
  store i32 1, i32* %n, align 4, !dbg !12690
  br label %for.cond, !dbg !12692

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %n, align 4, !dbg !12693
  %3 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12695
  %dd = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %3, i32 0, i32 0, !dbg !12696
  %4 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !12696
  %slot_groups = getelementptr inbounds %struct.driver_data, %struct.driver_data* %4, i32 0, i32 9, !dbg !12697
  %5 = load i32, i32* %slot_groups, align 4, !dbg !12697
  %cmp = icmp ult i32 %2, %5, !dbg !12698
  br i1 %cmp, label %for.body, label %for.end, !dbg !12699

for.body:                                         ; preds = %for.cond
  %6 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12700
  %s_active1 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %6, i32 0, i32 3, !dbg !12701
  %7 = load i32, i32* %n, align 4, !dbg !12702
  %idxprom = zext i32 %7 to i64, !dbg !12700
  %arrayidx2 = getelementptr [8 x i8*], [8 x i8*]* %s_active1, i64 0, i64 %idxprom, !dbg !12700
  %8 = load i8*, i8** %arrayidx2, align 8, !dbg !12700
  %call3 = call i32 @readl(i8* %8) #12, !dbg !12703
  %9 = load i32, i32* %active, align 4, !dbg !12704
  %or = or i32 %9, %call3, !dbg !12704
  store i32 %or, i32* %active, align 4, !dbg !12704
  br label %for.inc, !dbg !12705

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %n, align 4, !dbg !12706
  %inc = add i32 %10, 1, !dbg !12706
  store i32 %inc, i32* %n, align 4, !dbg !12706
  br label %for.cond, !dbg !12707, !llvm.loop !12708

for.end:                                          ; preds = %for.cond
  %11 = load i32, i32* %active, align 4, !dbg !12710
  %cmp4 = icmp ne i32 %11, 0, !dbg !12711
  ret i1 %cmp4, !dbg !12712
}

; Function Attrs: noredzone
declare dso_local void @blk_mq_unquiesce_queue(%struct.request_queue*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mtip_restart_port(%struct.mtip_port* %port) #2 !dbg !12713 {
entry:
  %retval.i95 = alloca i64, align 8
  %m.addr.i96 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i96, metadata !7000, metadata !DIExpression()), !dbg !12714
  %retval.i85 = alloca i64, align 8
  %m.addr.i86 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i86, metadata !7000, metadata !DIExpression()), !dbg !12716
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !7000, metadata !DIExpression()), !dbg !12718
  %port.addr = alloca %struct.mtip_port*, align 8
  %timeout = alloca i64, align 8
  %__ms = alloca i64, align 8
  store %struct.mtip_port* %port, %struct.mtip_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mtip_port** %port.addr, metadata !12720, metadata !DIExpression()), !dbg !12721
  call void @llvm.dbg.declare(metadata i64* %timeout, metadata !12722, metadata !DIExpression()), !dbg !12723
  %0 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12724
  %call = call i32 @mtip_enable_engine(%struct.mtip_port* %0, i32 0) #12, !dbg !12725
  %1 = load volatile i64, i64* @jiffies, align 8, !dbg !12726
  store i32 500, i32* %m.addr.i, align 4
  %2 = load i32, i32* %m.addr.i, align 4, !dbg !12727
  %3 = call i1 @llvm.is.constant.i32(i32 %2) #11, !dbg !12728
  br i1 %3, label %if.then.i, label %if.else.i, !dbg !12729

if.then.i:                                        ; preds = %entry
  %4 = load i32, i32* %m.addr.i, align 4, !dbg !12730
  %cmp.i = icmp slt i32 %4, 0, !dbg !12731
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !12732

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !12733
  br label %msecs_to_jiffies.exit, !dbg !12733

if.end.i:                                         ; preds = %if.then.i
  %5 = load i32, i32* %m.addr.i, align 4, !dbg !12734
  %call.i = call i64 @_msecs_to_jiffies(i32 %5) #14, !dbg !12735
  store i64 %call.i, i64* %retval.i, align 8, !dbg !12736
  br label %msecs_to_jiffies.exit, !dbg !12736

if.else.i:                                        ; preds = %entry
  %6 = load i32, i32* %m.addr.i, align 4, !dbg !12737
  %call2.i = call i64 @__msecs_to_jiffies(i32 %6) #14, !dbg !12738
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !12739
  br label %msecs_to_jiffies.exit, !dbg !12739

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %7 = load i64, i64* %retval.i, align 8, !dbg !12740
  %add = add i64 %1, %7, !dbg !12741
  store i64 %add, i64* %timeout, align 8, !dbg !12742
  br label %while.cond, !dbg !12743

while.cond:                                       ; preds = %while.body, %msecs_to_jiffies.exit
  %8 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12744
  %mmio = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %8, i32 0, i32 2, !dbg !12745
  %9 = load i8*, i8** %mmio, align 8, !dbg !12745
  %add.ptr = getelementptr i8, i8* %9, i64 24, !dbg !12746
  %call2 = call i32 @readl(i8* %add.ptr) #12, !dbg !12747
  %and = and i32 %call2, 32768, !dbg !12748
  %tobool = icmp ne i32 %and, 0, !dbg !12748
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !12749

land.rhs:                                         ; preds = %while.cond
  %10 = load volatile i64, i64* @jiffies, align 8, !dbg !12750
  %11 = load i64, i64* %timeout, align 8, !dbg !12750
  %sub = sub i64 %10, %11, !dbg !12750
  %cmp = icmp slt i64 %sub, 0, !dbg !12750
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %12 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ], !dbg !12751
  br i1 %12, label %while.body, label %while.end, !dbg !12743

while.body:                                       ; preds = %land.end
  br label %while.cond, !dbg !12743, !llvm.loop !12752

while.end:                                        ; preds = %land.end
  %13 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12754
  %dd = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %13, i32 0, i32 0, !dbg !12756
  %14 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !12756
  %dd_flag = getelementptr inbounds %struct.driver_data, %struct.driver_data* %14, i32 0, i32 11, !dbg !12757
  %call3 = call zeroext i1 @test_bit(i64 1, i64* %dd_flag) #12, !dbg !12758
  br i1 %call3, label %if.then, label %if.end, !dbg !12759

if.then:                                          ; preds = %while.end
  br label %return, !dbg !12760

if.end:                                           ; preds = %while.end
  %15 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12761
  %mmio4 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %15, i32 0, i32 2, !dbg !12763
  %16 = load i8*, i8** %mmio4, align 8, !dbg !12763
  %add.ptr5 = getelementptr i8, i8* %16, i64 24, !dbg !12764
  %call6 = call i32 @readl(i8* %add.ptr5) #12, !dbg !12765
  %and7 = and i32 %call6, 32768, !dbg !12766
  %tobool8 = icmp ne i32 %and7, 0, !dbg !12766
  br i1 %tobool8, label %if.then9, label %if.end23, !dbg !12767

if.then9:                                         ; preds = %if.end
  %17 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12768
  %dd10 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %17, i32 0, i32 0, !dbg !12768
  %18 = load %struct.driver_data*, %struct.driver_data** %dd10, align 8, !dbg !12768
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %18, i32 0, i32 4, !dbg !12768
  %19 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12768
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %19, i32 0, i32 41, !dbg !12768
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.47, i64 0, i64 0)) #13, !dbg !12768
  %20 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12770
  %dd11 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %20, i32 0, i32 0, !dbg !12772
  %21 = load %struct.driver_data*, %struct.driver_data** %dd11, align 8, !dbg !12772
  %call12 = call i32 @mtip_hba_reset(%struct.driver_data* %21) #12, !dbg !12773
  %tobool13 = icmp ne i32 %call12, 0, !dbg !12773
  br i1 %tobool13, label %if.then14, label %if.end18, !dbg !12774

if.then14:                                        ; preds = %if.then9
  %22 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12775
  %dd15 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %22, i32 0, i32 0, !dbg !12775
  %23 = load %struct.driver_data*, %struct.driver_data** %dd15, align 8, !dbg !12775
  %pdev16 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %23, i32 0, i32 4, !dbg !12775
  %24 = load %struct.pci_dev*, %struct.pci_dev** %pdev16, align 8, !dbg !12775
  %dev17 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %24, i32 0, i32 41, !dbg !12775
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev17, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.48, i64 0, i64 0)) #13, !dbg !12775
  br label %if.end18, !dbg !12775

if.end18:                                         ; preds = %if.then14, %if.then9
  call void @llvm.dbg.declare(metadata i64* %__ms, metadata !12776, metadata !DIExpression()), !dbg !12778
  store i64 30, i64* %__ms, align 8, !dbg !12778
  br label %while.cond19, !dbg !12778

while.cond19:                                     ; preds = %while.body21, %if.end18
  %25 = load i64, i64* %__ms, align 8, !dbg !12778
  %dec = add i64 %25, -1, !dbg !12778
  store i64 %dec, i64* %__ms, align 8, !dbg !12778
  %tobool20 = icmp ne i64 %25, 0, !dbg !12778
  br i1 %tobool20, label %while.body21, label %while.end22, !dbg !12778

while.body21:                                     ; preds = %while.cond19
  call void @__const_udelay(i64 4295000) #12, !dbg !12779
  br label %while.cond19, !dbg !12778, !llvm.loop !12784

while.end22:                                      ; preds = %while.cond19
  br label %if.end23, !dbg !12785

if.end23:                                         ; preds = %while.end22, %if.end
  %26 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12786
  %dd24 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %26, i32 0, i32 0, !dbg !12786
  %27 = load %struct.driver_data*, %struct.driver_data** %dd24, align 8, !dbg !12786
  %pdev25 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %27, i32 0, i32 4, !dbg !12786
  %28 = load %struct.pci_dev*, %struct.pci_dev** %pdev25, align 8, !dbg !12786
  %dev26 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %28, i32 0, i32 41, !dbg !12786
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev26, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.49, i64 0, i64 0)) #13, !dbg !12786
  %29 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12787
  %mmio27 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %29, i32 0, i32 2, !dbg !12788
  %30 = load i8*, i8** %mmio27, align 8, !dbg !12788
  %add.ptr28 = getelementptr i8, i8* %30, i64 44, !dbg !12789
  %call29 = call i32 @readl(i8* %add.ptr28) #12, !dbg !12790
  %or = or i32 %call29, 1, !dbg !12791
  %31 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12792
  %mmio30 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %31, i32 0, i32 2, !dbg !12793
  %32 = load i8*, i8** %mmio30, align 8, !dbg !12793
  %add.ptr31 = getelementptr i8, i8* %32, i64 44, !dbg !12794
  call void @writel(i32 %or, i8* %add.ptr31) #12, !dbg !12795
  %33 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12796
  %mmio32 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %33, i32 0, i32 2, !dbg !12797
  %34 = load i8*, i8** %mmio32, align 8, !dbg !12797
  %add.ptr33 = getelementptr i8, i8* %34, i64 44, !dbg !12798
  %call34 = call i32 @readl(i8* %add.ptr33) #12, !dbg !12799
  %35 = load volatile i64, i64* @jiffies, align 8, !dbg !12800
  store i32 1, i32* %m.addr.i86, align 4
  %36 = load i32, i32* %m.addr.i86, align 4, !dbg !12801
  %37 = call i1 @llvm.is.constant.i32(i32 %36) #11, !dbg !12802
  br i1 %37, label %if.then.i88, label %if.else.i93, !dbg !12803

if.then.i88:                                      ; preds = %if.end23
  %38 = load i32, i32* %m.addr.i86, align 4, !dbg !12804
  %cmp.i87 = icmp slt i32 %38, 0, !dbg !12805
  br i1 %cmp.i87, label %if.then1.i89, label %if.end.i91, !dbg !12806

if.then1.i89:                                     ; preds = %if.then.i88
  store i64 4611686018427387902, i64* %retval.i85, align 8, !dbg !12807
  br label %msecs_to_jiffies.exit94, !dbg !12807

if.end.i91:                                       ; preds = %if.then.i88
  %39 = load i32, i32* %m.addr.i86, align 4, !dbg !12808
  %call.i90 = call i64 @_msecs_to_jiffies(i32 %39) #14, !dbg !12809
  store i64 %call.i90, i64* %retval.i85, align 8, !dbg !12810
  br label %msecs_to_jiffies.exit94, !dbg !12810

if.else.i93:                                      ; preds = %if.end23
  %40 = load i32, i32* %m.addr.i86, align 4, !dbg !12811
  %call2.i92 = call i64 @__msecs_to_jiffies(i32 %40) #14, !dbg !12812
  store i64 %call2.i92, i64* %retval.i85, align 8, !dbg !12813
  br label %msecs_to_jiffies.exit94, !dbg !12813

msecs_to_jiffies.exit94:                          ; preds = %if.then1.i89, %if.end.i91, %if.else.i93
  %41 = load i64, i64* %retval.i85, align 8, !dbg !12814
  %add36 = add i64 %35, %41, !dbg !12815
  store i64 %add36, i64* %timeout, align 8, !dbg !12816
  br label %while.cond37, !dbg !12817

while.cond37:                                     ; preds = %while.body40, %msecs_to_jiffies.exit94
  %42 = load volatile i64, i64* @jiffies, align 8, !dbg !12818
  %43 = load i64, i64* %timeout, align 8, !dbg !12818
  %sub38 = sub i64 %42, %43, !dbg !12818
  %cmp39 = icmp slt i64 %sub38, 0, !dbg !12818
  br i1 %cmp39, label %while.body40, label %while.end41, !dbg !12817

while.body40:                                     ; preds = %while.cond37
  br label %while.cond37, !dbg !12817, !llvm.loop !12819

while.end41:                                      ; preds = %while.cond37
  %44 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12821
  %dd42 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %44, i32 0, i32 0, !dbg !12823
  %45 = load %struct.driver_data*, %struct.driver_data** %dd42, align 8, !dbg !12823
  %dd_flag43 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %45, i32 0, i32 11, !dbg !12824
  %call44 = call zeroext i1 @test_bit(i64 1, i64* %dd_flag43) #12, !dbg !12825
  br i1 %call44, label %if.then45, label %if.end46, !dbg !12826

if.then45:                                        ; preds = %while.end41
  br label %return, !dbg !12827

if.end46:                                         ; preds = %while.end41
  %46 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12828
  %mmio47 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %46, i32 0, i32 2, !dbg !12829
  %47 = load i8*, i8** %mmio47, align 8, !dbg !12829
  %add.ptr48 = getelementptr i8, i8* %47, i64 44, !dbg !12830
  %call49 = call i32 @readl(i8* %add.ptr48) #12, !dbg !12831
  %and50 = and i32 %call49, -2, !dbg !12832
  %48 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12833
  %mmio51 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %48, i32 0, i32 2, !dbg !12834
  %49 = load i8*, i8** %mmio51, align 8, !dbg !12834
  %add.ptr52 = getelementptr i8, i8* %49, i64 44, !dbg !12835
  call void @writel(i32 %and50, i8* %add.ptr52) #12, !dbg !12836
  %50 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12837
  %mmio53 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %50, i32 0, i32 2, !dbg !12838
  %51 = load i8*, i8** %mmio53, align 8, !dbg !12838
  %add.ptr54 = getelementptr i8, i8* %51, i64 44, !dbg !12839
  %call55 = call i32 @readl(i8* %add.ptr54) #12, !dbg !12840
  %52 = load volatile i64, i64* @jiffies, align 8, !dbg !12841
  store i32 500, i32* %m.addr.i96, align 4
  %53 = load i32, i32* %m.addr.i96, align 4, !dbg !12842
  %54 = call i1 @llvm.is.constant.i32(i32 %53) #11, !dbg !12843
  br i1 %54, label %if.then.i98, label %if.else.i103, !dbg !12844

if.then.i98:                                      ; preds = %if.end46
  %55 = load i32, i32* %m.addr.i96, align 4, !dbg !12845
  %cmp.i97 = icmp slt i32 %55, 0, !dbg !12846
  br i1 %cmp.i97, label %if.then1.i99, label %if.end.i101, !dbg !12847

if.then1.i99:                                     ; preds = %if.then.i98
  store i64 4611686018427387902, i64* %retval.i95, align 8, !dbg !12848
  br label %msecs_to_jiffies.exit104, !dbg !12848

if.end.i101:                                      ; preds = %if.then.i98
  %56 = load i32, i32* %m.addr.i96, align 4, !dbg !12849
  %call.i100 = call i64 @_msecs_to_jiffies(i32 %56) #14, !dbg !12850
  store i64 %call.i100, i64* %retval.i95, align 8, !dbg !12851
  br label %msecs_to_jiffies.exit104, !dbg !12851

if.else.i103:                                     ; preds = %if.end46
  %57 = load i32, i32* %m.addr.i96, align 4, !dbg !12852
  %call2.i102 = call i64 @__msecs_to_jiffies(i32 %57) #14, !dbg !12853
  store i64 %call2.i102, i64* %retval.i95, align 8, !dbg !12854
  br label %msecs_to_jiffies.exit104, !dbg !12854

msecs_to_jiffies.exit104:                         ; preds = %if.then1.i99, %if.end.i101, %if.else.i103
  %58 = load i64, i64* %retval.i95, align 8, !dbg !12855
  %add57 = add i64 %52, %58, !dbg !12856
  store i64 %add57, i64* %timeout, align 8, !dbg !12857
  br label %while.cond58, !dbg !12858

while.cond58:                                     ; preds = %while.body68, %msecs_to_jiffies.exit104
  %59 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12859
  %mmio59 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %59, i32 0, i32 2, !dbg !12860
  %60 = load i8*, i8** %mmio59, align 8, !dbg !12860
  %add.ptr60 = getelementptr i8, i8* %60, i64 40, !dbg !12861
  %call61 = call i32 @readl(i8* %add.ptr60) #12, !dbg !12862
  %and62 = and i32 %call61, 1, !dbg !12863
  %cmp63 = icmp eq i32 %and62, 0, !dbg !12864
  br i1 %cmp63, label %land.rhs64, label %land.end67, !dbg !12865

land.rhs64:                                       ; preds = %while.cond58
  %61 = load volatile i64, i64* @jiffies, align 8, !dbg !12866
  %62 = load i64, i64* %timeout, align 8, !dbg !12866
  %sub65 = sub i64 %61, %62, !dbg !12866
  %cmp66 = icmp slt i64 %sub65, 0, !dbg !12866
  br label %land.end67

land.end67:                                       ; preds = %land.rhs64, %while.cond58
  %63 = phi i1 [ false, %while.cond58 ], [ %cmp66, %land.rhs64 ], !dbg !12751
  br i1 %63, label %while.body68, label %while.end69, !dbg !12858

while.body68:                                     ; preds = %land.end67
  br label %while.cond58, !dbg !12858, !llvm.loop !12867

while.end69:                                      ; preds = %land.end67
  %64 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12869
  %dd70 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %64, i32 0, i32 0, !dbg !12871
  %65 = load %struct.driver_data*, %struct.driver_data** %dd70, align 8, !dbg !12871
  %dd_flag71 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %65, i32 0, i32 11, !dbg !12872
  %call72 = call zeroext i1 @test_bit(i64 1, i64* %dd_flag71) #12, !dbg !12873
  br i1 %call72, label %if.then73, label %if.end74, !dbg !12874

if.then73:                                        ; preds = %while.end69
  br label %return, !dbg !12875

if.end74:                                         ; preds = %while.end69
  %66 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12876
  %mmio75 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %66, i32 0, i32 2, !dbg !12878
  %67 = load i8*, i8** %mmio75, align 8, !dbg !12878
  %add.ptr76 = getelementptr i8, i8* %67, i64 40, !dbg !12879
  %call77 = call i32 @readl(i8* %add.ptr76) #12, !dbg !12880
  %and78 = and i32 %call77, 1, !dbg !12881
  %cmp79 = icmp eq i32 %and78, 0, !dbg !12882
  br i1 %cmp79, label %if.then80, label %if.end84, !dbg !12883

if.then80:                                        ; preds = %if.end74
  %68 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12884
  %dd81 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %68, i32 0, i32 0, !dbg !12884
  %69 = load %struct.driver_data*, %struct.driver_data** %dd81, align 8, !dbg !12884
  %pdev82 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %69, i32 0, i32 4, !dbg !12884
  %70 = load %struct.pci_dev*, %struct.pci_dev** %pdev82, align 8, !dbg !12884
  %dev83 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %70, i32 0, i32 41, !dbg !12884
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev83, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.50, i64 0, i64 0)) #13, !dbg !12884
  br label %if.end84, !dbg !12884

if.end84:                                         ; preds = %if.then80, %if.end74
  %71 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12885
  call void @mtip_init_port(%struct.mtip_port* %71) #12, !dbg !12886
  %72 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !12887
  call void @mtip_start_port(%struct.mtip_port* %72) #12, !dbg !12888
  br label %return, !dbg !12889

return:                                           ; preds = %if.end84, %if.then73, %if.then45, %if.then
  ret void, !dbg !12889
}

; Function Attrs: noredzone
declare dso_local i8* @memdup_user(i8*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #2 !dbg !12890 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !12893, metadata !DIExpression()), !dbg !12894
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !12895
  %1 = ptrtoint i8* %0 to i64, !dbg !12896
  ret i64 %1, !dbg !12897
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @dma_map_single_attrs(%struct.device* %dev, i8* %ptr, i64 %size, i32 %dir, i64 %attrs) #2 !dbg !6401 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  %__ret_warn_once = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp39 = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12898, metadata !DIExpression()), !dbg !12899
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !12900, metadata !DIExpression()), !dbg !12901
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12902, metadata !DIExpression()), !dbg !12903
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !12904, metadata !DIExpression()), !dbg !12905
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !12906, metadata !DIExpression()), !dbg !12907
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_once, metadata !12908, metadata !DIExpression()), !dbg !12911
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !12911
  %call = call zeroext i1 @is_vmalloc_addr(i8* %0) #12, !dbg !12911
  %lnot = xor i1 %call, true, !dbg !12911
  %lnot1 = xor i1 %lnot, true, !dbg !12911
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !12911
  store i32 %lnot.ext, i32* %__ret_warn_once, align 4, !dbg !12911
  %1 = load i32, i32* %__ret_warn_once, align 4, !dbg !12912
  %tobool = icmp ne i32 %1, 0, !dbg !12912
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !12912

land.rhs:                                         ; preds = %entry
  %2 = load i8, i8* @dma_map_single_attrs.__warned, align 1, !dbg !12912
  %tobool2 = trunc i8 %2 to i1, !dbg !12912
  %lnot3 = xor i1 %tobool2, true, !dbg !12912
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot3, %land.rhs ], !dbg !12914
  %lnot5 = xor i1 %3, true, !dbg !12912
  %lnot7 = xor i1 %lnot5, true, !dbg !12912
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !12912
  %conv = sext i32 %lnot.ext8 to i64, !dbg !12912
  %tobool9 = icmp ne i64 %conv, 0, !dbg !12912
  br i1 %tobool9, label %if.then, label %if.end38, !dbg !12911

if.then:                                          ; preds = %land.end
  store i8 1, i8* @dma_map_single_attrs.__warned, align 1, !dbg !12915
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !12917, metadata !DIExpression()), !dbg !12919
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !12919
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !12920
  %tobool10 = icmp ne i32 %4, 0, !dbg !12920
  %lnot11 = xor i1 %tobool10, true, !dbg !12920
  %lnot13 = xor i1 %lnot11, true, !dbg !12920
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !12920
  %conv15 = sext i32 %lnot.ext14 to i64, !dbg !12920
  %tobool16 = icmp ne i64 %conv15, 0, !dbg !12920
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !12919

if.then17:                                        ; preds = %if.then
  br label %do.body, !dbg !12920

do.body:                                          ; preds = %if.then17
  br label %do.body18, !dbg !12922

do.body18:                                        ; preds = %do.body
  br label %do.end, !dbg !12924

do.end:                                           ; preds = %do.body18
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12922
  %call19 = call i8* @dev_driver_string(%struct.device* %5) #12, !dbg !12922
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12922
  %call20 = call i8* @dev_name(%struct.device* %6) #12, !dbg !12922
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.52, i64 0, i64 0), i8* %call19, i8* %call20) #12, !dbg !12922
  br label %do.body21, !dbg !12922

do.body21:                                        ; preds = %do.end
  br label %do.body22, !dbg !12926

do.body22:                                        ; preds = %do.body21
  br label %do.end23, !dbg !12928

do.end23:                                         ; preds = %do.body22
  br label %do.body24, !dbg !12926

do.body24:                                        ; preds = %do.end23
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.53, i64 0, i64 0), i32 276, i32 2313, i64 12) #11, !dbg !12930, !srcloc !12932
  br label %do.end25, !dbg !12930

do.end25:                                         ; preds = %do.body24
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 227) #11, !dbg !12933, !srcloc !12935
  br label %do.body26, !dbg !12926

do.body26:                                        ; preds = %do.end25
  br label %do.end27, !dbg !12936

do.end27:                                         ; preds = %do.body26
  br label %do.end28, !dbg !12926

do.end28:                                         ; preds = %do.end27
  br label %do.body29, !dbg !12922

do.body29:                                        ; preds = %do.end28
  br label %do.end30, !dbg !12938

do.end30:                                         ; preds = %do.body29
  br label %do.end31, !dbg !12922

do.end31:                                         ; preds = %do.end30
  br label %if.end, !dbg !12922

if.end:                                           ; preds = %do.end31, %if.then
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !12919
  %tobool32 = icmp ne i32 %7, 0, !dbg !12919
  %lnot33 = xor i1 %tobool32, true, !dbg !12919
  %lnot35 = xor i1 %lnot33, true, !dbg !12919
  %lnot.ext36 = zext i1 %lnot35 to i32, !dbg !12919
  %conv37 = sext i32 %lnot.ext36 to i64, !dbg !12919
  store i64 %conv37, i64* %tmp, align 8, !dbg !12920
  %8 = load i64, i64* %tmp, align 8, !dbg !12919
  br label %if.end38, !dbg !12915

if.end38:                                         ; preds = %if.end, %land.end
  %9 = load i32, i32* %__ret_warn_once, align 4, !dbg !12911
  %tobool40 = icmp ne i32 %9, 0, !dbg !12911
  %lnot41 = xor i1 %tobool40, true, !dbg !12911
  %lnot43 = xor i1 %lnot41, true, !dbg !12911
  %lnot.ext44 = zext i1 %lnot43 to i32, !dbg !12911
  %conv45 = sext i32 %lnot.ext44 to i64, !dbg !12911
  store i64 %conv45, i64* %tmp39, align 8, !dbg !12912
  %10 = load i64, i64* %tmp39, align 8, !dbg !12911
  %tobool46 = icmp ne i64 %10, 0, !dbg !12940
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !12941

if.then47:                                        ; preds = %if.end38
  store i64 -1, i64* %retval, align 8, !dbg !12942
  br label %return, !dbg !12942

if.end48:                                         ; preds = %if.end38
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12943
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !12944
  %13 = load i64, i64* %size.addr, align 8, !dbg !12945
  call void @debug_dma_map_single(%struct.device* %11, i8* %12, i64 %13) #12, !dbg !12946
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12947
  %15 = load i64, i64* @vmemmap_base, align 8, !dbg !12948
  %16 = inttoptr i64 %15 to %struct.page*, !dbg !12948
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !12948
  %18 = ptrtoint i8* %17 to i64, !dbg !12948
  %call49 = call i64 @__phys_addr_nodebug(i64 %18) #12, !dbg !12948
  %shr = lshr i64 %call49, 12, !dbg !12948
  %add.ptr = getelementptr %struct.page, %struct.page* %16, i64 %shr, !dbg !12948
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !12949
  %20 = ptrtoint i8* %19 to i64, !dbg !12949
  %and = and i64 %20, 4095, !dbg !12949
  %21 = load i64, i64* %size.addr, align 8, !dbg !12950
  %22 = load i32, i32* %dir.addr, align 4, !dbg !12951
  %23 = load i64, i64* %attrs.addr, align 8, !dbg !12952
  %call50 = call i64 @dma_map_page_attrs(%struct.device* %14, %struct.page* %add.ptr, i64 %and, i64 %21, i32 %22, i64 %23) #12, !dbg !12953
  store i64 %call50, i64* %retval, align 8, !dbg !12954
  br label %return, !dbg !12954

return:                                           ; preds = %if.end48, %if.then47
  %24 = load i64, i64* %retval, align 8, !dbg !12955
  ret i64 %24, !dbg !12955
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_mapping_error(%struct.device* %dev, i64 %dma_addr) #2 !dbg !12956 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %dma_addr.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12959, metadata !DIExpression()), !dbg !12960
  store i64 %dma_addr, i64* %dma_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_addr.addr, metadata !12961, metadata !DIExpression()), !dbg !12962
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12963
  %1 = load i64, i64* %dma_addr.addr, align 8, !dbg !12964
  call void @debug_dma_mapping_error(%struct.device* %0, i64 %1) #12, !dbg !12965
  %2 = load i64, i64* %dma_addr.addr, align 8, !dbg !12966
  %cmp = icmp eq i64 %2, -1, !dbg !12968
  br i1 %cmp, label %if.then, label %if.end, !dbg !12969

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !12970
  br label %return, !dbg !12970

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !12971
  br label %return, !dbg !12971

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !12972
  ret i32 %3, !dbg !12972
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @implicit_sector(i8 zeroext %command, i8 zeroext %features) #2 !dbg !12973 {
entry:
  %command.addr = alloca i8, align 1
  %features.addr = alloca i8, align 1
  %rv = alloca i32, align 4
  store i8 %command, i8* %command.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %command.addr, metadata !12976, metadata !DIExpression()), !dbg !12977
  store i8 %features, i8* %features.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %features.addr, metadata !12978, metadata !DIExpression()), !dbg !12979
  call void @llvm.dbg.declare(metadata i32* %rv, metadata !12980, metadata !DIExpression()), !dbg !12981
  store i32 0, i32* %rv, align 4, !dbg !12981
  %0 = load i8, i8* %command.addr, align 1, !dbg !12982
  %conv = zext i8 %0 to i32, !dbg !12982
  switch i32 %conv, label %sw.epilog [
    i32 241, label %sw.bb
    i32 242, label %sw.bb
    i32 243, label %sw.bb
    i32 244, label %sw.bb
    i32 245, label %sw.bb
    i32 246, label %sw.bb
    i32 228, label %sw.bb
    i32 232, label %sw.bb
    i32 249, label %sw.bb1
    i32 176, label %sw.bb4
    i32 177, label %sw.bb13
  ], !dbg !12983

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i32 1, i32* %rv, align 4, !dbg !12984
  br label %sw.epilog, !dbg !12986

sw.bb1:                                           ; preds = %entry
  %1 = load i8, i8* %features.addr, align 1, !dbg !12987
  %conv2 = zext i8 %1 to i32, !dbg !12987
  %cmp = icmp eq i32 %conv2, 3, !dbg !12989
  br i1 %cmp, label %if.then, label %if.end, !dbg !12990

if.then:                                          ; preds = %sw.bb1
  store i32 1, i32* %rv, align 4, !dbg !12991
  br label %if.end, !dbg !12992

if.end:                                           ; preds = %if.then, %sw.bb1
  br label %sw.epilog, !dbg !12993

sw.bb4:                                           ; preds = %entry
  %2 = load i8, i8* %features.addr, align 1, !dbg !12994
  %conv5 = zext i8 %2 to i32, !dbg !12994
  %cmp6 = icmp eq i32 %conv5, 208, !dbg !12996
  br i1 %cmp6, label %if.then11, label %lor.lhs.false, !dbg !12997

lor.lhs.false:                                    ; preds = %sw.bb4
  %3 = load i8, i8* %features.addr, align 1, !dbg !12998
  %conv8 = zext i8 %3 to i32, !dbg !12998
  %cmp9 = icmp eq i32 %conv8, 209, !dbg !12999
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !13000

if.then11:                                        ; preds = %lor.lhs.false, %sw.bb4
  store i32 1, i32* %rv, align 4, !dbg !13001
  br label %if.end12, !dbg !13002

if.end12:                                         ; preds = %if.then11, %lor.lhs.false
  br label %sw.epilog, !dbg !13003

sw.bb13:                                          ; preds = %entry
  %4 = load i8, i8* %features.addr, align 1, !dbg !13004
  %conv14 = zext i8 %4 to i32, !dbg !13004
  %cmp15 = icmp eq i32 %conv14, 194, !dbg !13006
  br i1 %cmp15, label %if.then21, label %lor.lhs.false17, !dbg !13007

lor.lhs.false17:                                  ; preds = %sw.bb13
  %5 = load i8, i8* %features.addr, align 1, !dbg !13008
  %conv18 = zext i8 %5 to i32, !dbg !13008
  %cmp19 = icmp eq i32 %conv18, 195, !dbg !13009
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !13010

if.then21:                                        ; preds = %lor.lhs.false17, %sw.bb13
  store i32 1, i32* %rv, align 4, !dbg !13011
  br label %if.end22, !dbg !13012

if.end22:                                         ; preds = %if.then21, %lor.lhs.false17
  br label %sw.epilog, !dbg !13013

sw.epilog:                                        ; preds = %entry, %if.end22, %if.end12, %if.end, %sw.bb
  %6 = load i32, i32* %rv, align 4, !dbg !13014
  ret i32 %6, !dbg !13015
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_unmap_single_attrs(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir, i64 %attrs) #2 !dbg !13016 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13019, metadata !DIExpression()), !dbg !13020
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !13021, metadata !DIExpression()), !dbg !13022
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13023, metadata !DIExpression()), !dbg !13024
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !13025, metadata !DIExpression()), !dbg !13026
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !13027, metadata !DIExpression()), !dbg !13028
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13029
  %1 = load i64, i64* %addr.addr, align 8, !dbg !13030
  %2 = load i64, i64* %size.addr, align 8, !dbg !13031
  %3 = load i32, i32* %dir.addr, align 4, !dbg !13032
  %4 = load i64, i64* %attrs.addr, align 8, !dbg !13033
  call void @dma_unmap_page_attrs(%struct.device* %0, i64 %1, i64 %2, i32 %3, i64 %4) #12, !dbg !13034
  ret void, !dbg !13035
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @is_vmalloc_addr(i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #2 !dbg !13036 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13039, metadata !DIExpression()), !dbg !13040
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13041
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13043
  %1 = load i8*, i8** %init_name, align 8, !dbg !13043
  %tobool = icmp ne i8* %1, null, !dbg !13041
  br i1 %tobool, label %if.then, label %if.end, !dbg !13044

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13045
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !13046
  %3 = load i8*, i8** %init_name1, align 8, !dbg !13046
  store i8* %3, i8** %retval, align 8, !dbg !13047
  br label %return, !dbg !13047

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13048
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !13049
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #12, !dbg !13050
  store i8* %call, i8** %retval, align 8, !dbg !13051
  br label %return, !dbg !13051

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !13052
  ret i8* %5, !dbg !13052
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @debug_dma_map_single(%struct.device* %dev, i8* %addr, i64 %len) #2 !dbg !13053 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13056, metadata !DIExpression()), !dbg !13057
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !13058, metadata !DIExpression()), !dbg !13059
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !13060, metadata !DIExpression()), !dbg !13061
  ret void, !dbg !13062
}

; Function Attrs: noredzone
declare dso_local i64 @dma_map_page_attrs(%struct.device*, %struct.page*, i64, i64, i32, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__phys_addr_nodebug(i64 %x) #2 !dbg !13063 {
entry:
  %x.addr = alloca i64, align 8
  %y = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !13065, metadata !DIExpression()), !dbg !13066
  call void @llvm.dbg.declare(metadata i64* %y, metadata !13067, metadata !DIExpression()), !dbg !13068
  %0 = load i64, i64* %x.addr, align 8, !dbg !13069
  %sub = sub i64 %0, -2147483648, !dbg !13070
  store i64 %sub, i64* %y, align 8, !dbg !13068
  %1 = load i64, i64* %y, align 8, !dbg !13071
  %2 = load i64, i64* %x.addr, align 8, !dbg !13072
  %3 = load i64, i64* %y, align 8, !dbg !13073
  %cmp = icmp ugt i64 %2, %3, !dbg !13074
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13075

cond.true:                                        ; preds = %entry
  %4 = load i64, i64* @phys_base, align 8, !dbg !13076
  br label %cond.end, !dbg !13075

cond.false:                                       ; preds = %entry
  %5 = load i64, i64* @page_offset_base, align 8, !dbg !13077
  %sub1 = sub i64 -2147483648, %5, !dbg !13078
  br label %cond.end, !dbg !13075

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ %sub1, %cond.false ], !dbg !13075
  %add = add i64 %1, %cond, !dbg !13079
  store i64 %add, i64* %x.addr, align 8, !dbg !13080
  %6 = load i64, i64* %x.addr, align 8, !dbg !13081
  ret i64 %6, !dbg !13082
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #2 !dbg !13083 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !13088, metadata !DIExpression()), !dbg !13089
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !13090
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !13091
  %1 = load i8*, i8** %name, align 8, !dbg !13091
  ret i8* %1, !dbg !13092
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @debug_dma_mapping_error(%struct.device* %dev, i64 %dma_addr) #2 !dbg !13093 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %dma_addr.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13096, metadata !DIExpression()), !dbg !13097
  store i64 %dma_addr, i64* %dma_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_addr.addr, metadata !13098, metadata !DIExpression()), !dbg !13099
  ret void, !dbg !13100
}

; Function Attrs: noredzone
declare dso_local void @dma_unmap_page_attrs(%struct.device*, i64, i64, i32, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dentry* @debugfs_create_dir(i8* %name, %struct.dentry* %parent) #2 !dbg !13101 {
entry:
  %name.addr = alloca i8*, align 8
  %parent.addr = alloca %struct.dentry*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !13104, metadata !DIExpression()), !dbg !13105
  store %struct.dentry* %parent, %struct.dentry** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dentry** %parent.addr, metadata !13106, metadata !DIExpression()), !dbg !13107
  %call = call i8* @ERR_PTR(i64 -19) #12, !dbg !13108
  %0 = bitcast i8* %call to %struct.dentry*, !dbg !13108
  ret %struct.dentry* %0, !dbg !13109
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR_OR_NULL(i8* %ptr) #2 !dbg !13110 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !13111, metadata !DIExpression()), !dbg !13112
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !13113
  %tobool = icmp ne i8* %0, null, !dbg !13113
  %lnot = xor i1 %tobool, true, !dbg !13113
  %lnot1 = xor i1 %lnot, true, !dbg !13113
  %lnot2 = xor i1 %lnot1, true, !dbg !13113
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !13113
  %conv = sext i32 %lnot.ext to i64, !dbg !13113
  %tobool3 = icmp ne i64 %conv, 0, !dbg !13113
  br i1 %tobool3, label %lor.end, label %lor.rhs, !dbg !13114

lor.rhs:                                          ; preds = %entry
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !13115
  %2 = ptrtoint i8* %1 to i64, !dbg !13115
  %3 = inttoptr i64 %2 to i8*, !dbg !13115
  %4 = ptrtoint i8* %3 to i64, !dbg !13115
  %cmp = icmp uge i64 %4, -4095, !dbg !13115
  %lnot5 = xor i1 %cmp, true, !dbg !13115
  %lnot7 = xor i1 %lnot5, true, !dbg !13115
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !13115
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !13115
  %tobool10 = icmp ne i64 %conv9, 0, !dbg !13114
  br label %lor.end, !dbg !13114

lor.end:                                          ; preds = %lor.rhs, %entry
  %5 = phi i1 [ true, %entry ], [ %tobool10, %lor.rhs ]
  ret i1 %5, !dbg !13116
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dentry* @debugfs_create_file(i8* %name, i16 zeroext %mode, %struct.dentry* %parent, i8* %data, %struct.file_operations* %fops) #2 !dbg !13117 {
entry:
  %name.addr = alloca i8*, align 8
  %mode.addr = alloca i16, align 2
  %parent.addr = alloca %struct.dentry*, align 8
  %data.addr = alloca i8*, align 8
  %fops.addr = alloca %struct.file_operations*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !13120, metadata !DIExpression()), !dbg !13121
  store i16 %mode, i16* %mode.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %mode.addr, metadata !13122, metadata !DIExpression()), !dbg !13123
  store %struct.dentry* %parent, %struct.dentry** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dentry** %parent.addr, metadata !13124, metadata !DIExpression()), !dbg !13125
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !13126, metadata !DIExpression()), !dbg !13127
  store %struct.file_operations* %fops, %struct.file_operations** %fops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file_operations** %fops.addr, metadata !13128, metadata !DIExpression()), !dbg !13129
  %call = call i8* @ERR_PTR(i64 -19) #12, !dbg !13130
  %0 = bitcast i8* %call to %struct.dentry*, !dbg !13130
  ret %struct.dentry* %0, !dbg !13131
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_PTR(i64 %error) #2 !dbg !13132 {
entry:
  %error.addr = alloca i64, align 8
  store i64 %error, i64* %error.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %error.addr, metadata !13135, metadata !DIExpression()), !dbg !13136
  %0 = load i64, i64* %error.addr, align 8, !dbg !13137
  %1 = inttoptr i64 %0 to i8*, !dbg !13138
  ret i8* %1, !dbg !13139
}

; Function Attrs: noredzone
declare dso_local i64 @no_llseek(%struct.file*, i64, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mtip_hw_read_flags(%struct.file* %f, i8* %ubuf, i64 %len, i64* %offset) #2 !dbg !13140 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !10825, metadata !DIExpression()), !dbg !13141
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !10841, metadata !DIExpression()), !dbg !13144
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !10843, metadata !DIExpression()), !dbg !13145
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !10845, metadata !DIExpression()), !dbg !13146
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !10847, metadata !DIExpression()), !dbg !13147
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !10851, metadata !DIExpression()), !dbg !13148
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !10853, metadata !DIExpression()), !dbg !13149
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !10855, metadata !DIExpression()), !dbg !13150
  %retval = alloca i64, align 8
  %f.addr = alloca %struct.file*, align 8
  %ubuf.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %offset.addr = alloca i64*, align 8
  %dd = alloca %struct.driver_data*, align 8
  %buf = alloca i8*, align 8
  %size = alloca i32, align 4
  %rv = alloca i32, align 4
  store %struct.file* %f, %struct.file** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %f.addr, metadata !13151, metadata !DIExpression()), !dbg !13152
  store i8* %ubuf, i8** %ubuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ubuf.addr, metadata !13153, metadata !DIExpression()), !dbg !13154
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !13155, metadata !DIExpression()), !dbg !13156
  store i64* %offset, i64** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %offset.addr, metadata !13157, metadata !DIExpression()), !dbg !13158
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd, metadata !13159, metadata !DIExpression()), !dbg !13160
  %0 = load %struct.file*, %struct.file** %f.addr, align 8, !dbg !13161
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !13162
  %1 = load i8*, i8** %private_data, align 8, !dbg !13162
  %2 = bitcast i8* %1 to %struct.driver_data*, !dbg !13163
  store %struct.driver_data* %2, %struct.driver_data** %dd, align 8, !dbg !13160
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !13164, metadata !DIExpression()), !dbg !13165
  call void @llvm.dbg.declare(metadata i32* %size, metadata !13166, metadata !DIExpression()), !dbg !13167
  %3 = load i64*, i64** %offset.addr, align 8, !dbg !13168
  %4 = load i64, i64* %3, align 8, !dbg !13169
  %conv = trunc i64 %4 to i32, !dbg !13169
  store i32 %conv, i32* %size, align 4, !dbg !13167
  call void @llvm.dbg.declare(metadata i32* %rv, metadata !13170, metadata !DIExpression()), !dbg !13171
  store i32 0, i32* %rv, align 4, !dbg !13171
  %5 = load i64, i64* %len.addr, align 8, !dbg !13172
  %tobool = icmp ne i64 %5, 0, !dbg !13172
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !13174

lor.lhs.false:                                    ; preds = %entry
  %6 = load i32, i32* %size, align 4, !dbg !13175
  %tobool1 = icmp ne i32 %6, 0, !dbg !13175
  br i1 %tobool1, label %if.then, label %if.end, !dbg !13176

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i64 0, i64* %retval, align 8, !dbg !13177
  br label %return, !dbg !13177

if.end:                                           ; preds = %lor.lhs.false
  %call = call i8* @kzalloc(i64 1024, i32 3264) #12, !dbg !13178
  store i8* %call, i8** %buf, align 8, !dbg !13179
  %7 = load i8*, i8** %buf, align 8, !dbg !13180
  %tobool2 = icmp ne i8* %7, null, !dbg !13180
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !13182

if.then3:                                         ; preds = %if.end
  %8 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !13183
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %8, i32 0, i32 4, !dbg !13183
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13183
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 41, !dbg !13183
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.58, i64 0, i64 0)) #13, !dbg !13183
  store i64 -12, i64* %retval, align 8, !dbg !13185
  br label %return, !dbg !13185

if.end4:                                          ; preds = %if.end
  %10 = load i8*, i8** %buf, align 8, !dbg !13186
  %11 = load i32, i32* %size, align 4, !dbg !13187
  %idxprom = sext i32 %11 to i64, !dbg !13186
  %arrayidx = getelementptr i8, i8* %10, i64 %idxprom, !dbg !13186
  %12 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !13188
  %port = getelementptr inbounds %struct.driver_data, %struct.driver_data* %12, i32 0, i32 7, !dbg !13189
  %13 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !13189
  %flags = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %13, i32 0, i32 22, !dbg !13190
  %14 = load i64, i64* %flags, align 8, !dbg !13190
  %call5 = call i32 (i8*, i8*, ...) @sprintf(i8* %arrayidx, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.59, i64 0, i64 0), i64 %14) #12, !dbg !13191
  %15 = load i32, i32* %size, align 4, !dbg !13192
  %add = add i32 %15, %call5, !dbg !13192
  store i32 %add, i32* %size, align 4, !dbg !13192
  %16 = load i8*, i8** %buf, align 8, !dbg !13193
  %17 = load i32, i32* %size, align 4, !dbg !13194
  %idxprom6 = sext i32 %17 to i64, !dbg !13193
  %arrayidx7 = getelementptr i8, i8* %16, i64 %idxprom6, !dbg !13193
  %18 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !13195
  %dd_flag = getelementptr inbounds %struct.driver_data, %struct.driver_data* %18, i32 0, i32 11, !dbg !13196
  %19 = load i64, i64* %dd_flag, align 8, !dbg !13196
  %call8 = call i32 (i8*, i8*, ...) @sprintf(i8* %arrayidx7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.60, i64 0, i64 0), i64 %19) #12, !dbg !13197
  %20 = load i32, i32* %size, align 4, !dbg !13198
  %add9 = add i32 %20, %call8, !dbg !13198
  store i32 %add9, i32* %size, align 4, !dbg !13198
  %21 = load i32, i32* %size, align 4, !dbg !13199
  %conv10 = sext i32 %21 to i64, !dbg !13199
  %22 = load i64, i64* %len.addr, align 8, !dbg !13200
  %cmp = icmp ule i64 %conv10, %22, !dbg !13201
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13199

cond.true:                                        ; preds = %if.end4
  %23 = load i32, i32* %size, align 4, !dbg !13202
  %conv12 = sext i32 %23 to i64, !dbg !13202
  br label %cond.end, !dbg !13199

cond.false:                                       ; preds = %if.end4
  %24 = load i64, i64* %len.addr, align 8, !dbg !13203
  br label %cond.end, !dbg !13199

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv12, %cond.true ], [ %24, %cond.false ], !dbg !13199
  %25 = load i64*, i64** %offset.addr, align 8, !dbg !13204
  store i64 %cond, i64* %25, align 8, !dbg !13205
  %26 = load i8*, i8** %ubuf.addr, align 8, !dbg !13206
  %27 = load i8*, i8** %buf, align 8, !dbg !13207
  %28 = load i64*, i64** %offset.addr, align 8, !dbg !13208
  %29 = load i64, i64* %28, align 8, !dbg !13209
  store i8* %26, i8** %to.addr.i, align 8
  store i8* %27, i8** %from.addr.i, align 8
  store i64 %29, i64* %n.addr.i, align 8
  %30 = load i8*, i8** %from.addr.i, align 8, !dbg !13210
  %31 = load i64, i64* %n.addr.i, align 8, !dbg !13210
  store i8* %30, i8** %addr.addr.i.i, align 8
  store i64 %31, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !13146
  %32 = load i32, i32* %sz.i.i, align 4, !dbg !13211
  %cmp.i.i = icmp sge i32 %32, 0, !dbg !13211
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !13211

land.rhs.i.i:                                     ; preds = %cond.end
  %33 = load i32, i32* %sz.i.i, align 4, !dbg !13211
  %conv.i.i = sext i32 %33 to i64, !dbg !13211
  %34 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !13211
  %cmp1.i.i = icmp ult i64 %conv.i.i, %34, !dbg !13211
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %cond.end
  %35 = phi i1 [ false, %cond.end ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !13212
  %lnot.i.i = xor i1 %35, true, !dbg !13211
  %lnot.ext.i.i = zext i1 %35 to i32, !dbg !13211
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !13211
  br i1 %35, label %if.then.i.i, label %if.end10.i.i, !dbg !13213

if.then.i.i:                                      ; preds = %land.end.i.i
  %36 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !13214
  %37 = call i1 @llvm.is.constant.i64(i64 %36) #11, !dbg !13215
  br i1 %37, label %if.else.i.i, label %if.then5.i.i, !dbg !13216

if.then5.i.i:                                     ; preds = %if.then.i.i
  %38 = load i32, i32* %sz.i.i, align 4, !dbg !13217
  %39 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !13218
  call void @copy_overflow(i32 %38, i64 %39) #14, !dbg !13219
  br label %if.end9.i.i, !dbg !13219

if.else.i.i:                                      ; preds = %if.then.i.i
  %40 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !13220
  %tobool6.i.i = trunc i8 %40 to i1, !dbg !13220
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !13221

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #14, !dbg !13222
  br label %if.end.i.i, !dbg !13222

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #14, !dbg !13223
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !13224
  br label %check_copy_size.exit.i, !dbg !13224

if.end10.i.i:                                     ; preds = %land.end.i.i
  %41 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !13147
  %cmp11.i.i = icmp ugt i64 %41, 2147483647, !dbg !13147
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !13147
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !13147
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !13147
  %42 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !13225
  %tobool17.i.i = icmp ne i32 %42, 0, !dbg !13225
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !13225
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !13225
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !13225
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !13147

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.40, i64 0, i64 0), i32 150, i32 2307, i64 12) #11, !dbg !13226, !srcloc !10968
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #11, !dbg !13227, !srcloc !10971
  br label %if.end31.i.i, !dbg !13228

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %43 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !13147
  %tobool32.i.i = icmp ne i32 %43, 0, !dbg !13147
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !13147
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !13147
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !13147
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !13225
  %44 = load i64, i64* %tmp.i.i, align 8, !dbg !13147
  %tobool38.i.i = icmp ne i64 %44, 0, !dbg !13229
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !13230

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !13231
  br label %check_copy_size.exit.i, !dbg !13231

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %45 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !13232
  %46 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !13233
  %47 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !13234
  %tobool41.i.i = trunc i8 %47 to i1, !dbg !13234
  call void @check_object_size(i8* %45, i64 %46, i1 zeroext %tobool41.i.i) #14, !dbg !13235
  store i1 true, i1* %retval.i.i, align 1, !dbg !13236
  br label %check_copy_size.exit.i, !dbg !13236

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %48 = load i1, i1* %retval.i.i, align 1, !dbg !13237
  %lnot.i = xor i1 %48, true, !dbg !13210
  %lnot.ext.i = zext i1 %48 to i32, !dbg !13210
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !13210
  br i1 %48, label %if.then.i, label %copy_to_user.exit, !dbg !13238

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %49 = load i8*, i8** %to.addr.i, align 8, !dbg !13239
  %50 = load i8*, i8** %from.addr.i, align 8, !dbg !13240
  %51 = load i64, i64* %n.addr.i, align 8, !dbg !13241
  %call2.i = call i64 @_copy_to_user(i8* %49, i8* %50, i64 %51) #14, !dbg !13242
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !13243
  br label %copy_to_user.exit, !dbg !13244

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %52 = load i64, i64* %n.addr.i, align 8, !dbg !13245
  %conv14 = trunc i64 %52 to i32, !dbg !13246
  store i32 %conv14, i32* %size, align 4, !dbg !13247
  %53 = load i32, i32* %size, align 4, !dbg !13248
  %tobool15 = icmp ne i32 %53, 0, !dbg !13248
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !13250

if.then16:                                        ; preds = %copy_to_user.exit
  store i32 -14, i32* %rv, align 4, !dbg !13251
  br label %if.end17, !dbg !13252

if.end17:                                         ; preds = %if.then16, %copy_to_user.exit
  %54 = load i8*, i8** %buf, align 8, !dbg !13253
  call void @kfree(i8* %54) #12, !dbg !13254
  %55 = load i32, i32* %rv, align 4, !dbg !13255
  %tobool18 = icmp ne i32 %55, 0, !dbg !13255
  br i1 %tobool18, label %cond.true19, label %cond.false21, !dbg !13255

cond.true19:                                      ; preds = %if.end17
  %56 = load i32, i32* %rv, align 4, !dbg !13256
  %conv20 = sext i32 %56 to i64, !dbg !13256
  br label %cond.end22, !dbg !13255

cond.false21:                                     ; preds = %if.end17
  %57 = load i64*, i64** %offset.addr, align 8, !dbg !13257
  %58 = load i64, i64* %57, align 8, !dbg !13258
  br label %cond.end22, !dbg !13255

cond.end22:                                       ; preds = %cond.false21, %cond.true19
  %cond23 = phi i64 [ %conv20, %cond.true19 ], [ %58, %cond.false21 ], !dbg !13255
  store i64 %cond23, i64* %retval, align 8, !dbg !13259
  br label %return, !dbg !13259

return:                                           ; preds = %cond.end22, %if.then3, %if.then
  %59 = load i64, i64* %retval, align 8, !dbg !13260
  ret i64 %59, !dbg !13260
}

; Function Attrs: noredzone
declare dso_local i32 @simple_open(%struct.inode*, %struct.file*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #2 !dbg !13261 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !13264, metadata !DIExpression()), !dbg !13268
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !13274, metadata !DIExpression()), !dbg !13275
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !13276, metadata !DIExpression()), !dbg !13277
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !13278, metadata !DIExpression()), !dbg !13279
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !7374, metadata !DIExpression()), !dbg !13280
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !7380, metadata !DIExpression()), !dbg !13282
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !13284, metadata !DIExpression()), !dbg !13288
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !13293, metadata !DIExpression()), !dbg !13294
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !13295, metadata !DIExpression()), !dbg !13296
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !13297, metadata !DIExpression()), !dbg !13298
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !13299, metadata !DIExpression()), !dbg !13300
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !13301, metadata !DIExpression()), !dbg !13302
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !13303, metadata !DIExpression()), !dbg !13304
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !13305, metadata !DIExpression()), !dbg !13306
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !13307, metadata !DIExpression()), !dbg !13308
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13309, metadata !DIExpression()), !dbg !13310
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !13311, metadata !DIExpression()), !dbg !13312
  %0 = load i64, i64* %size.addr, align 8, !dbg !13313
  %1 = load i32, i32* %flags.addr, align 4, !dbg !13314
  %or = or i32 %1, 256, !dbg !13315
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !13316
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #11, !dbg !13317
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !13318

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !13319
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !13320
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !13321

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !13322
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !13323
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !13324
  %call.i.i = call i32 @get_order(i64 %7) #16, !dbg !13325
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !13302
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !13326
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !13327
  %10 = load i32, i32* %order.i.i, align 4, !dbg !13328
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !13329
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !13330
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !13331
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #14, !dbg !13332
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !13332
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !13332
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !13332
  call void @llvm.assume(i1 %maskcond.i.i.i) #11, !dbg !13332
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !13333
  br label %kmalloc.exit, !dbg !13333

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !13334
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13335
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !13335
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !13336

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !13337
  br label %kmalloc_index.exit.i, !dbg !13337

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13338
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !13339
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !13340

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !13341
  br label %kmalloc_index.exit.i, !dbg !13341

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13342
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !13343
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !13344

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13345
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !13346
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !13347

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !13348
  br label %kmalloc_index.exit.i, !dbg !13348

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13349
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !13350
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !13351

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13352
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !13353
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !13354

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !13355
  br label %kmalloc_index.exit.i, !dbg !13355

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13356
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !13357
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !13358

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !13359
  br label %kmalloc_index.exit.i, !dbg !13359

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13360
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !13361
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !13362

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !13363
  br label %kmalloc_index.exit.i, !dbg !13363

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13364
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !13365
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !13366

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !13367
  br label %kmalloc_index.exit.i, !dbg !13367

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13368
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !13369
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !13370

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !13371
  br label %kmalloc_index.exit.i, !dbg !13371

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13372
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !13373
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !13374

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !13375
  br label %kmalloc_index.exit.i, !dbg !13375

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13376
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !13377
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !13378

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !13379
  br label %kmalloc_index.exit.i, !dbg !13379

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13380
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !13381
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !13382

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !13383
  br label %kmalloc_index.exit.i, !dbg !13383

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13384
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !13385
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !13386

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !13387
  br label %kmalloc_index.exit.i, !dbg !13387

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13388
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !13389
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !13390

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !13391
  br label %kmalloc_index.exit.i, !dbg !13391

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13392
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !13393
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !13394

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !13395
  br label %kmalloc_index.exit.i, !dbg !13395

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13396
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !13397
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !13398

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !13399
  br label %kmalloc_index.exit.i, !dbg !13399

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13400
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !13401
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !13402

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !13403
  br label %kmalloc_index.exit.i, !dbg !13403

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13404
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !13405
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !13406

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !13407
  br label %kmalloc_index.exit.i, !dbg !13407

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13408
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !13409
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !13410

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !13411
  br label %kmalloc_index.exit.i, !dbg !13411

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13412
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !13413
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !13414

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !13415
  br label %kmalloc_index.exit.i, !dbg !13415

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13416
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !13417
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !13418

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !13419
  br label %kmalloc_index.exit.i, !dbg !13419

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13420
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !13421
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !13422

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !13423
  br label %kmalloc_index.exit.i, !dbg !13423

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13424
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !13425
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !13426

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !13427
  br label %kmalloc_index.exit.i, !dbg !13427

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13428
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !13429
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !13430

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !13431
  br label %kmalloc_index.exit.i, !dbg !13431

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13432
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !13433
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !13434

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !13435
  br label %kmalloc_index.exit.i, !dbg !13435

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13436
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !13437
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !13438

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !13439
  br label %kmalloc_index.exit.i, !dbg !13439

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13440
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !13441
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !13442

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !13443
  br label %kmalloc_index.exit.i, !dbg !13443

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13444
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !13445
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !13446

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !13447
  br label %kmalloc_index.exit.i, !dbg !13447

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13448
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !13449
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !13450

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !13451
  br label %kmalloc_index.exit.i, !dbg !13451

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i64 0, i64 0), i32 382, i32 0, i64 12) #11, !dbg !13452, !srcloc !7559
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 156) #11, !dbg !13453, !srcloc !7563
  unreachable, !dbg !13454

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !13455
  store i32 %45, i32* %index.i, align 4, !dbg !13456
  %46 = load i32, i32* %index.i, align 4, !dbg !13457
  %tobool.i = icmp ne i32 %46, 0, !dbg !13457
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !13459

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !13460
  br label %kmalloc.exit, !dbg !13460

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !13461
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !13462
  %and.i.i = and i32 %48, 17, !dbg !13462
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !13462
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !13462
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !13462
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !13462
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !13463

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !13464
  br label %kmalloc_type.exit.i, !dbg !13464

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !13465
  %and2.i.i = and i32 %49, 1, !dbg !13466
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !13465
  %50 = zext i1 %tobool3.i.i to i64, !dbg !13465
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !13465
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !13467
  br label %kmalloc_type.exit.i, !dbg !13467

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !13468
  %idxprom.i = zext i32 %51 to i64, !dbg !13469
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !13469
  %52 = load i32, i32* %index.i, align 4, !dbg !13470
  %idxprom6.i = zext i32 %52 to i64, !dbg !13469
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !13469
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !13469
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !13471
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !13472
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !13473
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !13474
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #14, !dbg !13475
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !13475
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !13475
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !13475
  call void @llvm.assume(i1 %maskcond.i.i) #11, !dbg !13475
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !13279
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !13476
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !13477
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !13478
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !13479
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #14, !dbg !13480
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !13481
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !13482
  store i8* %62, i8** %retval.i, align 8, !dbg !13483
  br label %kmalloc.exit, !dbg !13483

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !13484
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !13485
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #14, !dbg !13486
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !13486
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !13486
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !13486
  call void @llvm.assume(i1 %maskcond.i) #11, !dbg !13486
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !13487
  br label %kmalloc.exit, !dbg !13487

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !13488
  ret i8* %65, !dbg !13489
}

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #1

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #8 !dbg !13490 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !13494, metadata !DIExpression()), !dbg !13498
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !13500, metadata !DIExpression()), !dbg !13501
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13502, metadata !DIExpression()), !dbg !13503
  %0 = load i64, i64* %size.addr, align 8, !dbg !13504
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !13506
  br i1 %1, label %if.then, label %if.end447, !dbg !13507

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !13508
  %tobool = icmp ne i64 %2, 0, !dbg !13508
  br i1 %tobool, label %if.end, label %if.then1, !dbg !13511

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !13512
  br label %return, !dbg !13512

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !13513
  %cmp = icmp ult i64 %3, 4096, !dbg !13515
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !13516

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !13517
  br label %return, !dbg !13517

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub = sub i64 %4, 1, !dbg !13518
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !13518
  br i1 %5, label %cond.true, label %cond.false442, !dbg !13518

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub4 = sub i64 %6, 1, !dbg !13518
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !13518
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !13518

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub6 = sub i64 %8, 1, !dbg !13518
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !13518
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !13518

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !13518

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub9 = sub i64 %9, 1, !dbg !13518
  %and = and i64 %sub9, -9223372036854775808, !dbg !13518
  %tobool10 = icmp ne i64 %and, 0, !dbg !13518
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !13518

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !13518

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub13 = sub i64 %10, 1, !dbg !13518
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !13518
  %tobool15 = icmp ne i64 %and14, 0, !dbg !13518
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !13518

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !13518

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub18 = sub i64 %11, 1, !dbg !13518
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !13518
  %tobool20 = icmp ne i64 %and19, 0, !dbg !13518
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !13518

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !13518

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub23 = sub i64 %12, 1, !dbg !13518
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !13518
  %tobool25 = icmp ne i64 %and24, 0, !dbg !13518
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !13518

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !13518

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub28 = sub i64 %13, 1, !dbg !13518
  %and29 = and i64 %sub28, 576460752303423488, !dbg !13518
  %tobool30 = icmp ne i64 %and29, 0, !dbg !13518
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !13518

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !13518

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub33 = sub i64 %14, 1, !dbg !13518
  %and34 = and i64 %sub33, 288230376151711744, !dbg !13518
  %tobool35 = icmp ne i64 %and34, 0, !dbg !13518
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !13518

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !13518

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub38 = sub i64 %15, 1, !dbg !13518
  %and39 = and i64 %sub38, 144115188075855872, !dbg !13518
  %tobool40 = icmp ne i64 %and39, 0, !dbg !13518
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !13518

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !13518

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub43 = sub i64 %16, 1, !dbg !13518
  %and44 = and i64 %sub43, 72057594037927936, !dbg !13518
  %tobool45 = icmp ne i64 %and44, 0, !dbg !13518
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !13518

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !13518

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub48 = sub i64 %17, 1, !dbg !13518
  %and49 = and i64 %sub48, 36028797018963968, !dbg !13518
  %tobool50 = icmp ne i64 %and49, 0, !dbg !13518
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !13518

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !13518

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub53 = sub i64 %18, 1, !dbg !13518
  %and54 = and i64 %sub53, 18014398509481984, !dbg !13518
  %tobool55 = icmp ne i64 %and54, 0, !dbg !13518
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !13518

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !13518

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub58 = sub i64 %19, 1, !dbg !13518
  %and59 = and i64 %sub58, 9007199254740992, !dbg !13518
  %tobool60 = icmp ne i64 %and59, 0, !dbg !13518
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !13518

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !13518

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub63 = sub i64 %20, 1, !dbg !13518
  %and64 = and i64 %sub63, 4503599627370496, !dbg !13518
  %tobool65 = icmp ne i64 %and64, 0, !dbg !13518
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !13518

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !13518

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub68 = sub i64 %21, 1, !dbg !13518
  %and69 = and i64 %sub68, 2251799813685248, !dbg !13518
  %tobool70 = icmp ne i64 %and69, 0, !dbg !13518
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !13518

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !13518

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub73 = sub i64 %22, 1, !dbg !13518
  %and74 = and i64 %sub73, 1125899906842624, !dbg !13518
  %tobool75 = icmp ne i64 %and74, 0, !dbg !13518
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !13518

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !13518

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub78 = sub i64 %23, 1, !dbg !13518
  %and79 = and i64 %sub78, 562949953421312, !dbg !13518
  %tobool80 = icmp ne i64 %and79, 0, !dbg !13518
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !13518

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !13518

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub83 = sub i64 %24, 1, !dbg !13518
  %and84 = and i64 %sub83, 281474976710656, !dbg !13518
  %tobool85 = icmp ne i64 %and84, 0, !dbg !13518
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !13518

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !13518

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub88 = sub i64 %25, 1, !dbg !13518
  %and89 = and i64 %sub88, 140737488355328, !dbg !13518
  %tobool90 = icmp ne i64 %and89, 0, !dbg !13518
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !13518

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !13518

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub93 = sub i64 %26, 1, !dbg !13518
  %and94 = and i64 %sub93, 70368744177664, !dbg !13518
  %tobool95 = icmp ne i64 %and94, 0, !dbg !13518
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !13518

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !13518

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub98 = sub i64 %27, 1, !dbg !13518
  %and99 = and i64 %sub98, 35184372088832, !dbg !13518
  %tobool100 = icmp ne i64 %and99, 0, !dbg !13518
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !13518

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !13518

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub103 = sub i64 %28, 1, !dbg !13518
  %and104 = and i64 %sub103, 17592186044416, !dbg !13518
  %tobool105 = icmp ne i64 %and104, 0, !dbg !13518
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !13518

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !13518

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub108 = sub i64 %29, 1, !dbg !13518
  %and109 = and i64 %sub108, 8796093022208, !dbg !13518
  %tobool110 = icmp ne i64 %and109, 0, !dbg !13518
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !13518

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !13518

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub113 = sub i64 %30, 1, !dbg !13518
  %and114 = and i64 %sub113, 4398046511104, !dbg !13518
  %tobool115 = icmp ne i64 %and114, 0, !dbg !13518
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !13518

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !13518

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub118 = sub i64 %31, 1, !dbg !13518
  %and119 = and i64 %sub118, 2199023255552, !dbg !13518
  %tobool120 = icmp ne i64 %and119, 0, !dbg !13518
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !13518

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !13518

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub123 = sub i64 %32, 1, !dbg !13518
  %and124 = and i64 %sub123, 1099511627776, !dbg !13518
  %tobool125 = icmp ne i64 %and124, 0, !dbg !13518
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !13518

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !13518

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub128 = sub i64 %33, 1, !dbg !13518
  %and129 = and i64 %sub128, 549755813888, !dbg !13518
  %tobool130 = icmp ne i64 %and129, 0, !dbg !13518
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !13518

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !13518

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub133 = sub i64 %34, 1, !dbg !13518
  %and134 = and i64 %sub133, 274877906944, !dbg !13518
  %tobool135 = icmp ne i64 %and134, 0, !dbg !13518
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !13518

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !13518

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub138 = sub i64 %35, 1, !dbg !13518
  %and139 = and i64 %sub138, 137438953472, !dbg !13518
  %tobool140 = icmp ne i64 %and139, 0, !dbg !13518
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !13518

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !13518

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub143 = sub i64 %36, 1, !dbg !13518
  %and144 = and i64 %sub143, 68719476736, !dbg !13518
  %tobool145 = icmp ne i64 %and144, 0, !dbg !13518
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !13518

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !13518

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub148 = sub i64 %37, 1, !dbg !13518
  %and149 = and i64 %sub148, 34359738368, !dbg !13518
  %tobool150 = icmp ne i64 %and149, 0, !dbg !13518
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !13518

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !13518

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub153 = sub i64 %38, 1, !dbg !13518
  %and154 = and i64 %sub153, 17179869184, !dbg !13518
  %tobool155 = icmp ne i64 %and154, 0, !dbg !13518
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !13518

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !13518

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub158 = sub i64 %39, 1, !dbg !13518
  %and159 = and i64 %sub158, 8589934592, !dbg !13518
  %tobool160 = icmp ne i64 %and159, 0, !dbg !13518
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !13518

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !13518

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub163 = sub i64 %40, 1, !dbg !13518
  %and164 = and i64 %sub163, 4294967296, !dbg !13518
  %tobool165 = icmp ne i64 %and164, 0, !dbg !13518
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !13518

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !13518

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub168 = sub i64 %41, 1, !dbg !13518
  %and169 = and i64 %sub168, 2147483648, !dbg !13518
  %tobool170 = icmp ne i64 %and169, 0, !dbg !13518
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !13518

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !13518

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub173 = sub i64 %42, 1, !dbg !13518
  %and174 = and i64 %sub173, 1073741824, !dbg !13518
  %tobool175 = icmp ne i64 %and174, 0, !dbg !13518
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !13518

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !13518

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub178 = sub i64 %43, 1, !dbg !13518
  %and179 = and i64 %sub178, 536870912, !dbg !13518
  %tobool180 = icmp ne i64 %and179, 0, !dbg !13518
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !13518

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !13518

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub183 = sub i64 %44, 1, !dbg !13518
  %and184 = and i64 %sub183, 268435456, !dbg !13518
  %tobool185 = icmp ne i64 %and184, 0, !dbg !13518
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !13518

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !13518

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub188 = sub i64 %45, 1, !dbg !13518
  %and189 = and i64 %sub188, 134217728, !dbg !13518
  %tobool190 = icmp ne i64 %and189, 0, !dbg !13518
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !13518

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !13518

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub193 = sub i64 %46, 1, !dbg !13518
  %and194 = and i64 %sub193, 67108864, !dbg !13518
  %tobool195 = icmp ne i64 %and194, 0, !dbg !13518
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !13518

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !13518

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub198 = sub i64 %47, 1, !dbg !13518
  %and199 = and i64 %sub198, 33554432, !dbg !13518
  %tobool200 = icmp ne i64 %and199, 0, !dbg !13518
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !13518

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !13518

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub203 = sub i64 %48, 1, !dbg !13518
  %and204 = and i64 %sub203, 16777216, !dbg !13518
  %tobool205 = icmp ne i64 %and204, 0, !dbg !13518
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !13518

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !13518

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub208 = sub i64 %49, 1, !dbg !13518
  %and209 = and i64 %sub208, 8388608, !dbg !13518
  %tobool210 = icmp ne i64 %and209, 0, !dbg !13518
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !13518

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !13518

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub213 = sub i64 %50, 1, !dbg !13518
  %and214 = and i64 %sub213, 4194304, !dbg !13518
  %tobool215 = icmp ne i64 %and214, 0, !dbg !13518
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !13518

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !13518

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub218 = sub i64 %51, 1, !dbg !13518
  %and219 = and i64 %sub218, 2097152, !dbg !13518
  %tobool220 = icmp ne i64 %and219, 0, !dbg !13518
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !13518

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !13518

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub223 = sub i64 %52, 1, !dbg !13518
  %and224 = and i64 %sub223, 1048576, !dbg !13518
  %tobool225 = icmp ne i64 %and224, 0, !dbg !13518
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !13518

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !13518

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub228 = sub i64 %53, 1, !dbg !13518
  %and229 = and i64 %sub228, 524288, !dbg !13518
  %tobool230 = icmp ne i64 %and229, 0, !dbg !13518
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !13518

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !13518

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub233 = sub i64 %54, 1, !dbg !13518
  %and234 = and i64 %sub233, 262144, !dbg !13518
  %tobool235 = icmp ne i64 %and234, 0, !dbg !13518
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !13518

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !13518

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub238 = sub i64 %55, 1, !dbg !13518
  %and239 = and i64 %sub238, 131072, !dbg !13518
  %tobool240 = icmp ne i64 %and239, 0, !dbg !13518
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !13518

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !13518

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub243 = sub i64 %56, 1, !dbg !13518
  %and244 = and i64 %sub243, 65536, !dbg !13518
  %tobool245 = icmp ne i64 %and244, 0, !dbg !13518
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !13518

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !13518

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub248 = sub i64 %57, 1, !dbg !13518
  %and249 = and i64 %sub248, 32768, !dbg !13518
  %tobool250 = icmp ne i64 %and249, 0, !dbg !13518
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !13518

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !13518

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub253 = sub i64 %58, 1, !dbg !13518
  %and254 = and i64 %sub253, 16384, !dbg !13518
  %tobool255 = icmp ne i64 %and254, 0, !dbg !13518
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !13518

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !13518

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub258 = sub i64 %59, 1, !dbg !13518
  %and259 = and i64 %sub258, 8192, !dbg !13518
  %tobool260 = icmp ne i64 %and259, 0, !dbg !13518
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !13518

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !13518

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub263 = sub i64 %60, 1, !dbg !13518
  %and264 = and i64 %sub263, 4096, !dbg !13518
  %tobool265 = icmp ne i64 %and264, 0, !dbg !13518
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !13518

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !13518

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub268 = sub i64 %61, 1, !dbg !13518
  %and269 = and i64 %sub268, 2048, !dbg !13518
  %tobool270 = icmp ne i64 %and269, 0, !dbg !13518
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !13518

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !13518

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub273 = sub i64 %62, 1, !dbg !13518
  %and274 = and i64 %sub273, 1024, !dbg !13518
  %tobool275 = icmp ne i64 %and274, 0, !dbg !13518
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !13518

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !13518

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub278 = sub i64 %63, 1, !dbg !13518
  %and279 = and i64 %sub278, 512, !dbg !13518
  %tobool280 = icmp ne i64 %and279, 0, !dbg !13518
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !13518

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !13518

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub283 = sub i64 %64, 1, !dbg !13518
  %and284 = and i64 %sub283, 256, !dbg !13518
  %tobool285 = icmp ne i64 %and284, 0, !dbg !13518
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !13518

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !13518

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub288 = sub i64 %65, 1, !dbg !13518
  %and289 = and i64 %sub288, 128, !dbg !13518
  %tobool290 = icmp ne i64 %and289, 0, !dbg !13518
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !13518

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !13518

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub293 = sub i64 %66, 1, !dbg !13518
  %and294 = and i64 %sub293, 64, !dbg !13518
  %tobool295 = icmp ne i64 %and294, 0, !dbg !13518
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !13518

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !13518

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub298 = sub i64 %67, 1, !dbg !13518
  %and299 = and i64 %sub298, 32, !dbg !13518
  %tobool300 = icmp ne i64 %and299, 0, !dbg !13518
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !13518

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !13518

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub303 = sub i64 %68, 1, !dbg !13518
  %and304 = and i64 %sub303, 16, !dbg !13518
  %tobool305 = icmp ne i64 %and304, 0, !dbg !13518
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !13518

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !13518

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub308 = sub i64 %69, 1, !dbg !13518
  %and309 = and i64 %sub308, 8, !dbg !13518
  %tobool310 = icmp ne i64 %and309, 0, !dbg !13518
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !13518

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !13518

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub313 = sub i64 %70, 1, !dbg !13518
  %and314 = and i64 %sub313, 4, !dbg !13518
  %tobool315 = icmp ne i64 %and314, 0, !dbg !13518
  %71 = zext i1 %tobool315 to i64, !dbg !13518
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !13518
  br label %cond.end, !dbg !13518

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !13518
  br label %cond.end317, !dbg !13518

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !13518
  br label %cond.end319, !dbg !13518

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !13518
  br label %cond.end321, !dbg !13518

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !13518
  br label %cond.end323, !dbg !13518

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !13518
  br label %cond.end325, !dbg !13518

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !13518
  br label %cond.end327, !dbg !13518

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !13518
  br label %cond.end329, !dbg !13518

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !13518
  br label %cond.end331, !dbg !13518

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !13518
  br label %cond.end333, !dbg !13518

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !13518
  br label %cond.end335, !dbg !13518

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !13518
  br label %cond.end337, !dbg !13518

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !13518
  br label %cond.end339, !dbg !13518

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !13518
  br label %cond.end341, !dbg !13518

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !13518
  br label %cond.end343, !dbg !13518

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !13518
  br label %cond.end345, !dbg !13518

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !13518
  br label %cond.end347, !dbg !13518

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !13518
  br label %cond.end349, !dbg !13518

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !13518
  br label %cond.end351, !dbg !13518

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !13518
  br label %cond.end353, !dbg !13518

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !13518
  br label %cond.end355, !dbg !13518

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !13518
  br label %cond.end357, !dbg !13518

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !13518
  br label %cond.end359, !dbg !13518

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !13518
  br label %cond.end361, !dbg !13518

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !13518
  br label %cond.end363, !dbg !13518

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !13518
  br label %cond.end365, !dbg !13518

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !13518
  br label %cond.end367, !dbg !13518

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !13518
  br label %cond.end369, !dbg !13518

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !13518
  br label %cond.end371, !dbg !13518

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !13518
  br label %cond.end373, !dbg !13518

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !13518
  br label %cond.end375, !dbg !13518

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !13518
  br label %cond.end377, !dbg !13518

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !13518
  br label %cond.end379, !dbg !13518

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !13518
  br label %cond.end381, !dbg !13518

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !13518
  br label %cond.end383, !dbg !13518

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !13518
  br label %cond.end385, !dbg !13518

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !13518
  br label %cond.end387, !dbg !13518

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !13518
  br label %cond.end389, !dbg !13518

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !13518
  br label %cond.end391, !dbg !13518

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !13518
  br label %cond.end393, !dbg !13518

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !13518
  br label %cond.end395, !dbg !13518

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !13518
  br label %cond.end397, !dbg !13518

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !13518
  br label %cond.end399, !dbg !13518

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !13518
  br label %cond.end401, !dbg !13518

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !13518
  br label %cond.end403, !dbg !13518

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !13518
  br label %cond.end405, !dbg !13518

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !13518
  br label %cond.end407, !dbg !13518

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !13518
  br label %cond.end409, !dbg !13518

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !13518
  br label %cond.end411, !dbg !13518

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !13518
  br label %cond.end413, !dbg !13518

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !13518
  br label %cond.end415, !dbg !13518

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !13518
  br label %cond.end417, !dbg !13518

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !13518
  br label %cond.end419, !dbg !13518

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !13518
  br label %cond.end421, !dbg !13518

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !13518
  br label %cond.end423, !dbg !13518

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !13518
  br label %cond.end425, !dbg !13518

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !13518
  br label %cond.end427, !dbg !13518

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !13518
  br label %cond.end429, !dbg !13518

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !13518
  br label %cond.end431, !dbg !13518

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !13518
  br label %cond.end433, !dbg !13518

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !13518
  br label %cond.end435, !dbg !13518

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !13518
  br label %cond.end437, !dbg !13518

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !13518
  br label %cond.end440, !dbg !13518

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !13518

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !13518
  br label %cond.end444, !dbg !13518

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !13518
  %sub443 = sub i64 %72, 1, !dbg !13518
  %call = call i32 @__ilog2_u64(i64 %sub443) #16, !dbg !13518
  br label %cond.end444, !dbg !13518

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !13518
  %sub446 = sub i32 %cond445, 12, !dbg !13519
  %add = add i32 %sub446, 1, !dbg !13520
  store i32 %add, i32* %retval, align 4, !dbg !13521
  br label %return, !dbg !13521

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !13522
  %dec = add i64 %73, -1, !dbg !13522
  store i64 %dec, i64* %size.addr, align 8, !dbg !13522
  %74 = load i64, i64* %size.addr, align 8, !dbg !13523
  %shr = lshr i64 %74, 12, !dbg !13523
  store i64 %shr, i64* %size.addr, align 8, !dbg !13523
  %75 = load i64, i64* %size.addr, align 8, !dbg !13524
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !13501
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !13525
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !13526
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #10, !dbg !13525, !srcloc !13527
  store i32 %78, i32* %bitpos.i, align 4, !dbg !13525
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !13528
  %add.i = add i32 %79, 1, !dbg !13529
  store i32 %add.i, i32* %retval, align 4, !dbg !13530
  br label %return, !dbg !13530

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !13531
  ret i32 %80, !dbg !13531
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #8 !dbg !13532 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !13494, metadata !DIExpression()), !dbg !13536
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !13500, metadata !DIExpression()), !dbg !13538
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !13539, metadata !DIExpression()), !dbg !13540
  %0 = load i64, i64* %n.addr, align 8, !dbg !13541
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !13538
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !13542
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !13543
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #10, !dbg !13542, !srcloc !13527
  store i32 %3, i32* %bitpos.i, align 4, !dbg !13542
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !13544
  %add.i = add i32 %4, 1, !dbg !13545
  %sub = sub i32 %add.i, 1, !dbg !13546
  ret i32 %sub, !dbg !13547
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mtip_hw_read_registers(%struct.file* %f, i8* %ubuf, i64 %len, i64* %offset) #2 !dbg !13548 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !10825, metadata !DIExpression()), !dbg !13549
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !10841, metadata !DIExpression()), !dbg !13552
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !10843, metadata !DIExpression()), !dbg !13553
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !10845, metadata !DIExpression()), !dbg !13554
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !10847, metadata !DIExpression()), !dbg !13555
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !10851, metadata !DIExpression()), !dbg !13556
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !10853, metadata !DIExpression()), !dbg !13557
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !10855, metadata !DIExpression()), !dbg !13558
  %retval = alloca i64, align 8
  %f.addr = alloca %struct.file*, align 8
  %ubuf.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %offset.addr = alloca i64*, align 8
  %dd = alloca %struct.driver_data*, align 8
  %buf = alloca i8*, align 8
  %group_allocated = alloca i32, align 4
  %size = alloca i32, align 4
  %n = alloca i32, align 4
  %rv = alloca i32, align 4
  store %struct.file* %f, %struct.file** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %f.addr, metadata !13559, metadata !DIExpression()), !dbg !13560
  store i8* %ubuf, i8** %ubuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ubuf.addr, metadata !13561, metadata !DIExpression()), !dbg !13562
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !13563, metadata !DIExpression()), !dbg !13564
  store i64* %offset, i64** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %offset.addr, metadata !13565, metadata !DIExpression()), !dbg !13566
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd, metadata !13567, metadata !DIExpression()), !dbg !13568
  %0 = load %struct.file*, %struct.file** %f.addr, align 8, !dbg !13569
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !13570
  %1 = load i8*, i8** %private_data, align 8, !dbg !13570
  %2 = bitcast i8* %1 to %struct.driver_data*, !dbg !13571
  store %struct.driver_data* %2, %struct.driver_data** %dd, align 8, !dbg !13568
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !13572, metadata !DIExpression()), !dbg !13573
  call void @llvm.dbg.declare(metadata i32* %group_allocated, metadata !13574, metadata !DIExpression()), !dbg !13575
  call void @llvm.dbg.declare(metadata i32* %size, metadata !13576, metadata !DIExpression()), !dbg !13577
  %3 = load i64*, i64** %offset.addr, align 8, !dbg !13578
  %4 = load i64, i64* %3, align 8, !dbg !13579
  %conv = trunc i64 %4 to i32, !dbg !13579
  store i32 %conv, i32* %size, align 4, !dbg !13577
  call void @llvm.dbg.declare(metadata i32* %n, metadata !13580, metadata !DIExpression()), !dbg !13581
  call void @llvm.dbg.declare(metadata i32* %rv, metadata !13582, metadata !DIExpression()), !dbg !13583
  store i32 0, i32* %rv, align 4, !dbg !13583
  %5 = load i64, i64* %len.addr, align 8, !dbg !13584
  %tobool = icmp ne i64 %5, 0, !dbg !13584
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !13586

lor.lhs.false:                                    ; preds = %entry
  %6 = load i32, i32* %size, align 4, !dbg !13587
  %tobool1 = icmp ne i32 %6, 0, !dbg !13587
  br i1 %tobool1, label %if.then, label %if.end, !dbg !13588

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i64 0, i64* %retval, align 8, !dbg !13589
  br label %return, !dbg !13589

if.end:                                           ; preds = %lor.lhs.false
  %call = call i8* @kzalloc(i64 1024, i32 3264) #12, !dbg !13590
  store i8* %call, i8** %buf, align 8, !dbg !13591
  %7 = load i8*, i8** %buf, align 8, !dbg !13592
  %tobool2 = icmp ne i8* %7, null, !dbg !13592
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !13594

if.then3:                                         ; preds = %if.end
  %8 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !13595
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %8, i32 0, i32 4, !dbg !13595
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13595
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 41, !dbg !13595
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.61, i64 0, i64 0)) #13, !dbg !13595
  store i64 -12, i64* %retval, align 8, !dbg !13597
  br label %return, !dbg !13597

if.end4:                                          ; preds = %if.end
  %10 = load i8*, i8** %buf, align 8, !dbg !13598
  %11 = load i32, i32* %size, align 4, !dbg !13599
  %idxprom = sext i32 %11 to i64, !dbg !13598
  %arrayidx = getelementptr i8, i8* %10, i64 %idxprom, !dbg !13598
  %call5 = call i32 (i8*, i8*, ...) @sprintf(i8* %arrayidx, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.62, i64 0, i64 0)) #12, !dbg !13600
  %12 = load i32, i32* %size, align 4, !dbg !13601
  %add = add i32 %12, %call5, !dbg !13601
  store i32 %add, i32* %size, align 4, !dbg !13601
  %13 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !13602
  %slot_groups = getelementptr inbounds %struct.driver_data, %struct.driver_data* %13, i32 0, i32 9, !dbg !13604
  %14 = load i32, i32* %slot_groups, align 4, !dbg !13604
  %sub = sub i32 %14, 1, !dbg !13605
  store i32 %sub, i32* %n, align 4, !dbg !13606
  br label %for.cond, !dbg !13607

for.cond:                                         ; preds = %for.inc, %if.end4
  %15 = load i32, i32* %n, align 4, !dbg !13608
  %cmp = icmp sge i32 %15, 0, !dbg !13610
  br i1 %cmp, label %for.body, label %for.end, !dbg !13611

for.body:                                         ; preds = %for.cond
  %16 = load i8*, i8** %buf, align 8, !dbg !13612
  %17 = load i32, i32* %size, align 4, !dbg !13613
  %idxprom7 = sext i32 %17 to i64, !dbg !13612
  %arrayidx8 = getelementptr i8, i8* %16, i64 %idxprom7, !dbg !13612
  %18 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !13614
  %port = getelementptr inbounds %struct.driver_data, %struct.driver_data* %18, i32 0, i32 7, !dbg !13615
  %19 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !13615
  %s_active = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %19, i32 0, i32 3, !dbg !13616
  %20 = load i32, i32* %n, align 4, !dbg !13617
  %idxprom9 = sext i32 %20 to i64, !dbg !13614
  %arrayidx10 = getelementptr [8 x i8*], [8 x i8*]* %s_active, i64 0, i64 %idxprom9, !dbg !13614
  %21 = load i8*, i8** %arrayidx10, align 8, !dbg !13614
  %call11 = call i32 @readl(i8* %21) #12, !dbg !13618
  %call12 = call i32 (i8*, i8*, ...) @sprintf(i8* %arrayidx8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i64 0, i64 0), i32 %call11) #12, !dbg !13619
  %22 = load i32, i32* %size, align 4, !dbg !13620
  %add13 = add i32 %22, %call12, !dbg !13620
  store i32 %add13, i32* %size, align 4, !dbg !13620
  br label %for.inc, !dbg !13621

for.inc:                                          ; preds = %for.body
  %23 = load i32, i32* %n, align 4, !dbg !13622
  %dec = add i32 %23, -1, !dbg !13622
  store i32 %dec, i32* %n, align 4, !dbg !13622
  br label %for.cond, !dbg !13623, !llvm.loop !13624

for.end:                                          ; preds = %for.cond
  %24 = load i8*, i8** %buf, align 8, !dbg !13626
  %25 = load i32, i32* %size, align 4, !dbg !13627
  %idxprom14 = sext i32 %25 to i64, !dbg !13626
  %arrayidx15 = getelementptr i8, i8* %24, i64 %idxprom14, !dbg !13626
  %call16 = call i32 (i8*, i8*, ...) @sprintf(i8* %arrayidx15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i64 0, i64 0)) #12, !dbg !13628
  %26 = load i32, i32* %size, align 4, !dbg !13629
  %add17 = add i32 %26, %call16, !dbg !13629
  store i32 %add17, i32* %size, align 4, !dbg !13629
  %27 = load i8*, i8** %buf, align 8, !dbg !13630
  %28 = load i32, i32* %size, align 4, !dbg !13631
  %idxprom18 = sext i32 %28 to i64, !dbg !13630
  %arrayidx19 = getelementptr i8, i8* %27, i64 %idxprom18, !dbg !13630
  %call20 = call i32 (i8*, i8*, ...) @sprintf(i8* %arrayidx19, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.65, i64 0, i64 0)) #12, !dbg !13632
  %29 = load i32, i32* %size, align 4, !dbg !13633
  %add21 = add i32 %29, %call20, !dbg !13633
  store i32 %add21, i32* %size, align 4, !dbg !13633
  %30 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !13634
  %slot_groups22 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %30, i32 0, i32 9, !dbg !13636
  %31 = load i32, i32* %slot_groups22, align 4, !dbg !13636
  %sub23 = sub i32 %31, 1, !dbg !13637
  store i32 %sub23, i32* %n, align 4, !dbg !13638
  br label %for.cond24, !dbg !13639

for.cond24:                                       ; preds = %for.inc36, %for.end
  %32 = load i32, i32* %n, align 4, !dbg !13640
  %cmp25 = icmp sge i32 %32, 0, !dbg !13642
  br i1 %cmp25, label %for.body27, label %for.end38, !dbg !13643

for.body27:                                       ; preds = %for.cond24
  %33 = load i8*, i8** %buf, align 8, !dbg !13644
  %34 = load i32, i32* %size, align 4, !dbg !13645
  %idxprom28 = sext i32 %34 to i64, !dbg !13644
  %arrayidx29 = getelementptr i8, i8* %33, i64 %idxprom28, !dbg !13644
  %35 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !13646
  %port30 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %35, i32 0, i32 7, !dbg !13647
  %36 = load %struct.mtip_port*, %struct.mtip_port** %port30, align 8, !dbg !13647
  %cmd_issue = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %36, i32 0, i32 5, !dbg !13648
  %37 = load i32, i32* %n, align 4, !dbg !13649
  %idxprom31 = sext i32 %37 to i64, !dbg !13646
  %arrayidx32 = getelementptr [8 x i8*], [8 x i8*]* %cmd_issue, i64 0, i64 %idxprom31, !dbg !13646
  %38 = load i8*, i8** %arrayidx32, align 8, !dbg !13646
  %call33 = call i32 @readl(i8* %38) #12, !dbg !13650
  %call34 = call i32 (i8*, i8*, ...) @sprintf(i8* %arrayidx29, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i64 0, i64 0), i32 %call33) #12, !dbg !13651
  %39 = load i32, i32* %size, align 4, !dbg !13652
  %add35 = add i32 %39, %call34, !dbg !13652
  store i32 %add35, i32* %size, align 4, !dbg !13652
  br label %for.inc36, !dbg !13653

for.inc36:                                        ; preds = %for.body27
  %40 = load i32, i32* %n, align 4, !dbg !13654
  %dec37 = add i32 %40, -1, !dbg !13654
  store i32 %dec37, i32* %n, align 4, !dbg !13654
  br label %for.cond24, !dbg !13655, !llvm.loop !13656

for.end38:                                        ; preds = %for.cond24
  %41 = load i8*, i8** %buf, align 8, !dbg !13658
  %42 = load i32, i32* %size, align 4, !dbg !13659
  %idxprom39 = sext i32 %42 to i64, !dbg !13658
  %arrayidx40 = getelementptr i8, i8* %41, i64 %idxprom39, !dbg !13658
  %call41 = call i32 (i8*, i8*, ...) @sprintf(i8* %arrayidx40, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i64 0, i64 0)) #12, !dbg !13660
  %43 = load i32, i32* %size, align 4, !dbg !13661
  %add42 = add i32 %43, %call41, !dbg !13661
  store i32 %add42, i32* %size, align 4, !dbg !13661
  %44 = load i8*, i8** %buf, align 8, !dbg !13662
  %45 = load i32, i32* %size, align 4, !dbg !13663
  %idxprom43 = sext i32 %45 to i64, !dbg !13662
  %arrayidx44 = getelementptr i8, i8* %44, i64 %idxprom43, !dbg !13662
  %call45 = call i32 (i8*, i8*, ...) @sprintf(i8* %arrayidx44, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.66, i64 0, i64 0)) #12, !dbg !13664
  %46 = load i32, i32* %size, align 4, !dbg !13665
  %add46 = add i32 %46, %call45, !dbg !13665
  store i32 %add46, i32* %size, align 4, !dbg !13665
  %47 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !13666
  %slot_groups47 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %47, i32 0, i32 9, !dbg !13668
  %48 = load i32, i32* %slot_groups47, align 4, !dbg !13668
  %sub48 = sub i32 %48, 1, !dbg !13669
  store i32 %sub48, i32* %n, align 4, !dbg !13670
  br label %for.cond49, !dbg !13671

for.cond49:                                       ; preds = %for.inc61, %for.end38
  %49 = load i32, i32* %n, align 4, !dbg !13672
  %cmp50 = icmp sge i32 %49, 0, !dbg !13674
  br i1 %cmp50, label %for.body52, label %for.end63, !dbg !13675

for.body52:                                       ; preds = %for.cond49
  %50 = load i8*, i8** %buf, align 8, !dbg !13676
  %51 = load i32, i32* %size, align 4, !dbg !13677
  %idxprom53 = sext i32 %51 to i64, !dbg !13676
  %arrayidx54 = getelementptr i8, i8* %50, i64 %idxprom53, !dbg !13676
  %52 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !13678
  %port55 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %52, i32 0, i32 7, !dbg !13679
  %53 = load %struct.mtip_port*, %struct.mtip_port** %port55, align 8, !dbg !13679
  %completed = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %53, i32 0, i32 4, !dbg !13680
  %54 = load i32, i32* %n, align 4, !dbg !13681
  %idxprom56 = sext i32 %54 to i64, !dbg !13678
  %arrayidx57 = getelementptr [8 x i8*], [8 x i8*]* %completed, i64 0, i64 %idxprom56, !dbg !13678
  %55 = load i8*, i8** %arrayidx57, align 8, !dbg !13678
  %call58 = call i32 @readl(i8* %55) #12, !dbg !13682
  %call59 = call i32 (i8*, i8*, ...) @sprintf(i8* %arrayidx54, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i64 0, i64 0), i32 %call58) #12, !dbg !13683
  %56 = load i32, i32* %size, align 4, !dbg !13684
  %add60 = add i32 %56, %call59, !dbg !13684
  store i32 %add60, i32* %size, align 4, !dbg !13684
  br label %for.inc61, !dbg !13685

for.inc61:                                        ; preds = %for.body52
  %57 = load i32, i32* %n, align 4, !dbg !13686
  %dec62 = add i32 %57, -1, !dbg !13686
  store i32 %dec62, i32* %n, align 4, !dbg !13686
  br label %for.cond49, !dbg !13687, !llvm.loop !13688

for.end63:                                        ; preds = %for.cond49
  %58 = load i8*, i8** %buf, align 8, !dbg !13690
  %59 = load i32, i32* %size, align 4, !dbg !13691
  %idxprom64 = sext i32 %59 to i64, !dbg !13690
  %arrayidx65 = getelementptr i8, i8* %58, i64 %idxprom64, !dbg !13690
  %call66 = call i32 (i8*, i8*, ...) @sprintf(i8* %arrayidx65, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i64 0, i64 0)) #12, !dbg !13692
  %60 = load i32, i32* %size, align 4, !dbg !13693
  %add67 = add i32 %60, %call66, !dbg !13693
  store i32 %add67, i32* %size, align 4, !dbg !13693
  %61 = load i8*, i8** %buf, align 8, !dbg !13694
  %62 = load i32, i32* %size, align 4, !dbg !13695
  %idxprom68 = sext i32 %62 to i64, !dbg !13694
  %arrayidx69 = getelementptr i8, i8* %61, i64 %idxprom68, !dbg !13694
  %63 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !13696
  %port70 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %63, i32 0, i32 7, !dbg !13697
  %64 = load %struct.mtip_port*, %struct.mtip_port** %port70, align 8, !dbg !13697
  %mmio = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %64, i32 0, i32 2, !dbg !13698
  %65 = load i8*, i8** %mmio, align 8, !dbg !13698
  %add.ptr = getelementptr i8, i8* %65, i64 16, !dbg !13699
  %call71 = call i32 @readl(i8* %add.ptr) #12, !dbg !13700
  %call72 = call i32 (i8*, i8*, ...) @sprintf(i8* %arrayidx69, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.67, i64 0, i64 0), i32 %call71) #12, !dbg !13701
  %66 = load i32, i32* %size, align 4, !dbg !13702
  %add73 = add i32 %66, %call72, !dbg !13702
  store i32 %add73, i32* %size, align 4, !dbg !13702
  %67 = load i8*, i8** %buf, align 8, !dbg !13703
  %68 = load i32, i32* %size, align 4, !dbg !13704
  %idxprom74 = sext i32 %68 to i64, !dbg !13703
  %arrayidx75 = getelementptr i8, i8* %67, i64 %idxprom74, !dbg !13703
  %69 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !13705
  %mmio76 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %69, i32 0, i32 0, !dbg !13706
  %70 = load i8*, i8** %mmio76, align 8, !dbg !13706
  %add.ptr77 = getelementptr i8, i8* %70, i64 8, !dbg !13707
  %call78 = call i32 @readl(i8* %add.ptr77) #12, !dbg !13708
  %call79 = call i32 (i8*, i8*, ...) @sprintf(i8* %arrayidx75, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.68, i64 0, i64 0), i32 %call78) #12, !dbg !13709
  %71 = load i32, i32* %size, align 4, !dbg !13710
  %add80 = add i32 %71, %call79, !dbg !13710
  store i32 %add80, i32* %size, align 4, !dbg !13710
  %72 = load i8*, i8** %buf, align 8, !dbg !13711
  %73 = load i32, i32* %size, align 4, !dbg !13712
  %idxprom81 = sext i32 %73 to i64, !dbg !13711
  %arrayidx82 = getelementptr i8, i8* %72, i64 %idxprom81, !dbg !13711
  %call83 = call i32 (i8*, i8*, ...) @sprintf(i8* %arrayidx82, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.69, i64 0, i64 0)) #12, !dbg !13713
  %74 = load i32, i32* %size, align 4, !dbg !13714
  %add84 = add i32 %74, %call83, !dbg !13714
  store i32 %add84, i32* %size, align 4, !dbg !13714
  %75 = load i8*, i8** %buf, align 8, !dbg !13715
  %76 = load i32, i32* %size, align 4, !dbg !13716
  %idxprom85 = sext i32 %76 to i64, !dbg !13715
  %arrayidx86 = getelementptr i8, i8* %75, i64 %idxprom85, !dbg !13715
  %call87 = call i32 (i8*, i8*, ...) @sprintf(i8* %arrayidx86, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.70, i64 0, i64 0)) #12, !dbg !13717
  %77 = load i32, i32* %size, align 4, !dbg !13718
  %add88 = add i32 %77, %call87, !dbg !13718
  store i32 %add88, i32* %size, align 4, !dbg !13718
  %78 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !13719
  %slot_groups89 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %78, i32 0, i32 9, !dbg !13721
  %79 = load i32, i32* %slot_groups89, align 4, !dbg !13721
  %sub90 = sub i32 %79, 1, !dbg !13722
  store i32 %sub90, i32* %n, align 4, !dbg !13723
  br label %for.cond91, !dbg !13724

for.cond91:                                       ; preds = %for.inc103, %for.end63
  %80 = load i32, i32* %n, align 4, !dbg !13725
  %cmp92 = icmp sge i32 %80, 0, !dbg !13727
  br i1 %cmp92, label %for.body94, label %for.end105, !dbg !13728

for.body94:                                       ; preds = %for.cond91
  %81 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !13729
  %port95 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %81, i32 0, i32 7, !dbg !13732
  %82 = load %struct.mtip_port*, %struct.mtip_port** %port95, align 8, !dbg !13732
  %cmds_to_issue = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %82, i32 0, i32 20, !dbg !13733
  %83 = load i32, i32* %n, align 4, !dbg !13734
  %div = sdiv i32 %83, 2, !dbg !13735
  %idxprom96 = sext i32 %div to i64, !dbg !13729
  %arrayidx97 = getelementptr [4 x i64], [4 x i64]* %cmds_to_issue, i64 0, i64 %idxprom96, !dbg !13729
  %84 = load i64, i64* %arrayidx97, align 8, !dbg !13729
  %85 = load i32, i32* %n, align 4, !dbg !13736
  %and = and i32 %85, 1, !dbg !13737
  %mul = mul i32 32, %and, !dbg !13738
  %sh_prom = zext i32 %mul to i64, !dbg !13739
  %shr = lshr i64 %84, %sh_prom, !dbg !13739
  %conv98 = trunc i64 %shr to i32, !dbg !13729
  store i32 %conv98, i32* %group_allocated, align 4, !dbg !13740
  %86 = load i8*, i8** %buf, align 8, !dbg !13741
  %87 = load i32, i32* %size, align 4, !dbg !13742
  %idxprom99 = sext i32 %87 to i64, !dbg !13741
  %arrayidx100 = getelementptr i8, i8* %86, i64 %idxprom99, !dbg !13741
  %88 = load i32, i32* %group_allocated, align 4, !dbg !13743
  %call101 = call i32 (i8*, i8*, ...) @sprintf(i8* %arrayidx100, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i64 0, i64 0), i32 %88) #12, !dbg !13744
  %89 = load i32, i32* %size, align 4, !dbg !13745
  %add102 = add i32 %89, %call101, !dbg !13745
  store i32 %add102, i32* %size, align 4, !dbg !13745
  br label %for.inc103, !dbg !13746

for.inc103:                                       ; preds = %for.body94
  %90 = load i32, i32* %n, align 4, !dbg !13747
  %dec104 = add i32 %90, -1, !dbg !13747
  store i32 %dec104, i32* %n, align 4, !dbg !13747
  br label %for.cond91, !dbg !13748, !llvm.loop !13749

for.end105:                                       ; preds = %for.cond91
  %91 = load i8*, i8** %buf, align 8, !dbg !13751
  %92 = load i32, i32* %size, align 4, !dbg !13752
  %idxprom106 = sext i32 %92 to i64, !dbg !13751
  %arrayidx107 = getelementptr i8, i8* %91, i64 %idxprom106, !dbg !13751
  %call108 = call i32 (i8*, i8*, ...) @sprintf(i8* %arrayidx107, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i64 0, i64 0)) #12, !dbg !13753
  %93 = load i32, i32* %size, align 4, !dbg !13754
  %add109 = add i32 %93, %call108, !dbg !13754
  store i32 %add109, i32* %size, align 4, !dbg !13754
  %94 = load i32, i32* %size, align 4, !dbg !13755
  %conv110 = sext i32 %94 to i64, !dbg !13755
  %95 = load i64, i64* %len.addr, align 8, !dbg !13756
  %cmp111 = icmp ule i64 %conv110, %95, !dbg !13757
  br i1 %cmp111, label %cond.true, label %cond.false, !dbg !13755

cond.true:                                        ; preds = %for.end105
  %96 = load i32, i32* %size, align 4, !dbg !13758
  %conv113 = sext i32 %96 to i64, !dbg !13758
  br label %cond.end, !dbg !13755

cond.false:                                       ; preds = %for.end105
  %97 = load i64, i64* %len.addr, align 8, !dbg !13759
  br label %cond.end, !dbg !13755

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv113, %cond.true ], [ %97, %cond.false ], !dbg !13755
  %98 = load i64*, i64** %offset.addr, align 8, !dbg !13760
  store i64 %cond, i64* %98, align 8, !dbg !13761
  %99 = load i8*, i8** %ubuf.addr, align 8, !dbg !13762
  %100 = load i8*, i8** %buf, align 8, !dbg !13763
  %101 = load i64*, i64** %offset.addr, align 8, !dbg !13764
  %102 = load i64, i64* %101, align 8, !dbg !13765
  store i8* %99, i8** %to.addr.i, align 8
  store i8* %100, i8** %from.addr.i, align 8
  store i64 %102, i64* %n.addr.i, align 8
  %103 = load i8*, i8** %from.addr.i, align 8, !dbg !13766
  %104 = load i64, i64* %n.addr.i, align 8, !dbg !13766
  store i8* %103, i8** %addr.addr.i.i, align 8
  store i64 %104, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !13554
  %105 = load i32, i32* %sz.i.i, align 4, !dbg !13767
  %cmp.i.i = icmp sge i32 %105, 0, !dbg !13767
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !13767

land.rhs.i.i:                                     ; preds = %cond.end
  %106 = load i32, i32* %sz.i.i, align 4, !dbg !13767
  %conv.i.i = sext i32 %106 to i64, !dbg !13767
  %107 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !13767
  %cmp1.i.i = icmp ult i64 %conv.i.i, %107, !dbg !13767
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %cond.end
  %108 = phi i1 [ false, %cond.end ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !13768
  %lnot.i.i = xor i1 %108, true, !dbg !13767
  %lnot.ext.i.i = zext i1 %108 to i32, !dbg !13767
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !13767
  br i1 %108, label %if.then.i.i, label %if.end10.i.i, !dbg !13769

if.then.i.i:                                      ; preds = %land.end.i.i
  %109 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !13770
  %110 = call i1 @llvm.is.constant.i64(i64 %109) #11, !dbg !13771
  br i1 %110, label %if.else.i.i, label %if.then5.i.i, !dbg !13772

if.then5.i.i:                                     ; preds = %if.then.i.i
  %111 = load i32, i32* %sz.i.i, align 4, !dbg !13773
  %112 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !13774
  call void @copy_overflow(i32 %111, i64 %112) #14, !dbg !13775
  br label %if.end9.i.i, !dbg !13775

if.else.i.i:                                      ; preds = %if.then.i.i
  %113 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !13776
  %tobool6.i.i = trunc i8 %113 to i1, !dbg !13776
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !13777

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #14, !dbg !13778
  br label %if.end.i.i, !dbg !13778

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #14, !dbg !13779
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !13780
  br label %check_copy_size.exit.i, !dbg !13780

if.end10.i.i:                                     ; preds = %land.end.i.i
  %114 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !13555
  %cmp11.i.i = icmp ugt i64 %114, 2147483647, !dbg !13555
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !13555
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !13555
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !13555
  %115 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !13781
  %tobool17.i.i = icmp ne i32 %115, 0, !dbg !13781
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !13781
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !13781
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !13781
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !13555

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.40, i64 0, i64 0), i32 150, i32 2307, i64 12) #11, !dbg !13782, !srcloc !10968
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #11, !dbg !13783, !srcloc !10971
  br label %if.end31.i.i, !dbg !13784

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %116 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !13555
  %tobool32.i.i = icmp ne i32 %116, 0, !dbg !13555
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !13555
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !13555
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !13555
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !13781
  %117 = load i64, i64* %tmp.i.i, align 8, !dbg !13555
  %tobool38.i.i = icmp ne i64 %117, 0, !dbg !13785
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !13786

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !13787
  br label %check_copy_size.exit.i, !dbg !13787

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %118 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !13788
  %119 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !13789
  %120 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !13790
  %tobool41.i.i = trunc i8 %120 to i1, !dbg !13790
  call void @check_object_size(i8* %118, i64 %119, i1 zeroext %tobool41.i.i) #14, !dbg !13791
  store i1 true, i1* %retval.i.i, align 1, !dbg !13792
  br label %check_copy_size.exit.i, !dbg !13792

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %121 = load i1, i1* %retval.i.i, align 1, !dbg !13793
  %lnot.i = xor i1 %121, true, !dbg !13766
  %lnot.ext.i = zext i1 %121 to i32, !dbg !13766
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !13766
  br i1 %121, label %if.then.i, label %copy_to_user.exit, !dbg !13794

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %122 = load i8*, i8** %to.addr.i, align 8, !dbg !13795
  %123 = load i8*, i8** %from.addr.i, align 8, !dbg !13796
  %124 = load i64, i64* %n.addr.i, align 8, !dbg !13797
  %call2.i = call i64 @_copy_to_user(i8* %122, i8* %123, i64 %124) #14, !dbg !13798
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !13799
  br label %copy_to_user.exit, !dbg !13800

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %125 = load i64, i64* %n.addr.i, align 8, !dbg !13801
  %conv115 = trunc i64 %125 to i32, !dbg !13802
  store i32 %conv115, i32* %size, align 4, !dbg !13803
  %126 = load i32, i32* %size, align 4, !dbg !13804
  %tobool116 = icmp ne i32 %126, 0, !dbg !13804
  br i1 %tobool116, label %if.then117, label %if.end118, !dbg !13806

if.then117:                                       ; preds = %copy_to_user.exit
  store i32 -14, i32* %rv, align 4, !dbg !13807
  br label %if.end118, !dbg !13808

if.end118:                                        ; preds = %if.then117, %copy_to_user.exit
  %127 = load i8*, i8** %buf, align 8, !dbg !13809
  call void @kfree(i8* %127) #12, !dbg !13810
  %128 = load i32, i32* %rv, align 4, !dbg !13811
  %tobool119 = icmp ne i32 %128, 0, !dbg !13811
  br i1 %tobool119, label %cond.true120, label %cond.false122, !dbg !13811

cond.true120:                                     ; preds = %if.end118
  %129 = load i32, i32* %rv, align 4, !dbg !13812
  %conv121 = sext i32 %129 to i64, !dbg !13812
  br label %cond.end123, !dbg !13811

cond.false122:                                    ; preds = %if.end118
  %130 = load i64*, i64** %offset.addr, align 8, !dbg !13813
  %131 = load i64, i64* %130, align 8, !dbg !13814
  br label %cond.end123, !dbg !13811

cond.end123:                                      ; preds = %cond.false122, %cond.true120
  %cond124 = phi i64 [ %conv121, %cond.true120 ], [ %131, %cond.false122 ], !dbg !13811
  store i64 %cond124, i64* %retval, align 8, !dbg !13815
  br label %return, !dbg !13815

return:                                           ; preds = %cond.end123, %if.then3, %if.then
  %132 = load i64, i64* %retval, align 8, !dbg !13816
  ret i64 %132, !dbg !13816
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @mtip_queue_rq(%struct.blk_mq_hw_ctx* %hctx, %struct.blk_mq_queue_data* %bd) #2 !dbg !13817 {
entry:
  %retval = alloca i8, align 1
  %hctx.addr = alloca %struct.blk_mq_hw_ctx*, align 8
  %bd.addr = alloca %struct.blk_mq_queue_data*, align 8
  %dd = alloca %struct.driver_data*, align 8
  %rq = alloca %struct.request*, align 8
  %cmd = alloca %struct.mtip_cmd*, align 8
  store %struct.blk_mq_hw_ctx* %hctx, %struct.blk_mq_hw_ctx** %hctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.blk_mq_hw_ctx** %hctx.addr, metadata !13818, metadata !DIExpression()), !dbg !13819
  store %struct.blk_mq_queue_data* %bd, %struct.blk_mq_queue_data** %bd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.blk_mq_queue_data** %bd.addr, metadata !13820, metadata !DIExpression()), !dbg !13821
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd, metadata !13822, metadata !DIExpression()), !dbg !13823
  %0 = load %struct.blk_mq_hw_ctx*, %struct.blk_mq_hw_ctx** %hctx.addr, align 8, !dbg !13824
  %queue = getelementptr inbounds %struct.blk_mq_hw_ctx, %struct.blk_mq_hw_ctx* %0, i32 0, i32 7, !dbg !13825
  %1 = load %struct.request_queue*, %struct.request_queue** %queue, align 8, !dbg !13825
  %queuedata = getelementptr inbounds %struct.request_queue, %struct.request_queue* %1, i32 0, i32 11, !dbg !13826
  %2 = load i8*, i8** %queuedata, align 8, !dbg !13826
  %3 = bitcast i8* %2 to %struct.driver_data*, !dbg !13824
  store %struct.driver_data* %3, %struct.driver_data** %dd, align 8, !dbg !13823
  call void @llvm.dbg.declare(metadata %struct.request** %rq, metadata !13827, metadata !DIExpression()), !dbg !13828
  %4 = load %struct.blk_mq_queue_data*, %struct.blk_mq_queue_data** %bd.addr, align 8, !dbg !13829
  %rq1 = getelementptr inbounds %struct.blk_mq_queue_data, %struct.blk_mq_queue_data* %4, i32 0, i32 0, !dbg !13830
  %5 = load %struct.request*, %struct.request** %rq1, align 8, !dbg !13830
  store %struct.request* %5, %struct.request** %rq, align 8, !dbg !13828
  call void @llvm.dbg.declare(metadata %struct.mtip_cmd** %cmd, metadata !13831, metadata !DIExpression()), !dbg !13832
  %6 = load %struct.request*, %struct.request** %rq, align 8, !dbg !13833
  %call = call i8* @blk_mq_rq_to_pdu(%struct.request* %6) #12, !dbg !13834
  %7 = bitcast i8* %call to %struct.mtip_cmd*, !dbg !13834
  store %struct.mtip_cmd* %7, %struct.mtip_cmd** %cmd, align 8, !dbg !13832
  %8 = load %struct.request*, %struct.request** %rq, align 8, !dbg !13835
  %call2 = call zeroext i1 @blk_rq_is_passthrough(%struct.request* %8) #12, !dbg !13837
  br i1 %call2, label %if.then, label %if.end, !dbg !13838

if.then:                                          ; preds = %entry
  %9 = load %struct.blk_mq_hw_ctx*, %struct.blk_mq_hw_ctx** %hctx.addr, align 8, !dbg !13839
  %10 = load %struct.request*, %struct.request** %rq, align 8, !dbg !13840
  %call3 = call zeroext i8 @mtip_issue_reserved_cmd(%struct.blk_mq_hw_ctx* %9, %struct.request* %10) #12, !dbg !13841
  store i8 %call3, i8* %retval, align 1, !dbg !13842
  br label %return, !dbg !13842

if.end:                                           ; preds = %entry
  %11 = load %struct.blk_mq_hw_ctx*, %struct.blk_mq_hw_ctx** %hctx.addr, align 8, !dbg !13843
  %12 = load %struct.request*, %struct.request** %rq, align 8, !dbg !13843
  %call4 = call zeroext i1 @mtip_check_unal_depth(%struct.blk_mq_hw_ctx* %11, %struct.request* %12) #12, !dbg !13843
  %lnot = xor i1 %call4, true, !dbg !13843
  %lnot5 = xor i1 %lnot, true, !dbg !13843
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !13843
  %conv = sext i32 %lnot.ext to i64, !dbg !13843
  %tobool = icmp ne i64 %conv, 0, !dbg !13843
  br i1 %tobool, label %if.then6, label %if.end7, !dbg !13845

if.then6:                                         ; preds = %if.end
  store i8 13, i8* %retval, align 1, !dbg !13846
  br label %return, !dbg !13846

if.end7:                                          ; preds = %if.end
  %13 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !13847
  %call8 = call zeroext i1 @is_se_active(%struct.driver_data* %13) #12, !dbg !13849
  br i1 %call8, label %if.then12, label %lor.lhs.false, !dbg !13850

lor.lhs.false:                                    ; preds = %if.end7
  %14 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !13851
  %15 = load %struct.request*, %struct.request** %rq, align 8, !dbg !13852
  %call10 = call zeroext i1 @is_stopped(%struct.driver_data* %14, %struct.request* %15) #12, !dbg !13853
  br i1 %call10, label %if.then12, label %if.end13, !dbg !13854

if.then12:                                        ; preds = %lor.lhs.false, %if.end7
  store i8 10, i8* %retval, align 1, !dbg !13855
  br label %return, !dbg !13855

if.end13:                                         ; preds = %lor.lhs.false
  %16 = load %struct.request*, %struct.request** %rq, align 8, !dbg !13856
  call void @blk_mq_start_request(%struct.request* %16) #12, !dbg !13857
  %17 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !13858
  %18 = load %struct.request*, %struct.request** %rq, align 8, !dbg !13859
  %19 = load %struct.mtip_cmd*, %struct.mtip_cmd** %cmd, align 8, !dbg !13860
  %20 = load %struct.blk_mq_hw_ctx*, %struct.blk_mq_hw_ctx** %hctx.addr, align 8, !dbg !13861
  call void @mtip_hw_submit_io(%struct.driver_data* %17, %struct.request* %18, %struct.mtip_cmd* %19, %struct.blk_mq_hw_ctx* %20) #12, !dbg !13862
  store i8 0, i8* %retval, align 1, !dbg !13863
  br label %return, !dbg !13863

return:                                           ; preds = %if.end13, %if.then12, %if.then6, %if.then
  %21 = load i8, i8* %retval, align 1, !dbg !13864
  ret i8 %21, !dbg !13864
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_cmd_timeout(%struct.request* %req, i1 zeroext %reserved) #2 !dbg !13865 {
entry:
  %retval = alloca i32, align 4
  %req.addr = alloca %struct.request*, align 8
  %reserved.addr = alloca i8, align 1
  %dd = alloca %struct.driver_data*, align 8
  %cmd = alloca %struct.mtip_cmd*, align 8
  store %struct.request* %req, %struct.request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %req.addr, metadata !13866, metadata !DIExpression()), !dbg !13867
  %frombool = zext i1 %reserved to i8
  store i8 %frombool, i8* %reserved.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %reserved.addr, metadata !13868, metadata !DIExpression()), !dbg !13869
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd, metadata !13870, metadata !DIExpression()), !dbg !13871
  %0 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !13872
  %q = getelementptr inbounds %struct.request, %struct.request* %0, i32 0, i32 0, !dbg !13873
  %1 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !13873
  %queuedata = getelementptr inbounds %struct.request_queue, %struct.request_queue* %1, i32 0, i32 11, !dbg !13874
  %2 = load i8*, i8** %queuedata, align 8, !dbg !13874
  %3 = bitcast i8* %2 to %struct.driver_data*, !dbg !13872
  store %struct.driver_data* %3, %struct.driver_data** %dd, align 8, !dbg !13871
  %4 = load i8, i8* %reserved.addr, align 1, !dbg !13875
  %tobool = trunc i8 %4 to i1, !dbg !13875
  br i1 %tobool, label %if.then, label %if.end, !dbg !13877

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.mtip_cmd** %cmd, metadata !13878, metadata !DIExpression()), !dbg !13880
  %5 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !13881
  %call = call i8* @blk_mq_rq_to_pdu(%struct.request* %5) #12, !dbg !13882
  %6 = bitcast i8* %call to %struct.mtip_cmd*, !dbg !13882
  store %struct.mtip_cmd* %6, %struct.mtip_cmd** %cmd, align 8, !dbg !13880
  %7 = load %struct.mtip_cmd*, %struct.mtip_cmd** %cmd, align 8, !dbg !13883
  %status = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %7, i32 0, i32 7, !dbg !13884
  store i8 2, i8* %status, align 8, !dbg !13885
  %8 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !13886
  call void @blk_mq_complete_request(%struct.request* %8) #12, !dbg !13887
  store i32 0, i32* %retval, align 4, !dbg !13888
  br label %return, !dbg !13888

if.end:                                           ; preds = %entry
  %9 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !13889
  %tag = getelementptr inbounds %struct.request, %struct.request* %9, i32 0, i32 5, !dbg !13891
  %10 = load i32, i32* %tag, align 8, !dbg !13891
  %conv = sext i32 %10 to i64, !dbg !13889
  %11 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !13892
  %port = getelementptr inbounds %struct.driver_data, %struct.driver_data* %11, i32 0, i32 7, !dbg !13893
  %12 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !13893
  %cmds_to_issue = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %12, i32 0, i32 20, !dbg !13894
  %arraydecay = getelementptr inbounds [4 x i64], [4 x i64]* %cmds_to_issue, i64 0, i64 0, !dbg !13892
  %call1 = call zeroext i1 @test_bit(i64 %conv, i64* %arraydecay) #12, !dbg !13895
  br i1 %call1, label %if.then2, label %if.end3, !dbg !13896

if.then2:                                         ; preds = %if.end
  br label %exit_handler, !dbg !13897

if.end3:                                          ; preds = %if.end
  %13 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !13898
  %port4 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %13, i32 0, i32 7, !dbg !13900
  %14 = load %struct.mtip_port*, %struct.mtip_port** %port4, align 8, !dbg !13900
  %flags = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %14, i32 0, i32 22, !dbg !13901
  %call5 = call zeroext i1 @test_and_set_bit(i64 9, i64* %flags) #12, !dbg !13902
  br i1 %call5, label %if.then6, label %if.end7, !dbg !13903

if.then6:                                         ; preds = %if.end3
  br label %exit_handler, !dbg !13904

if.end7:                                          ; preds = %if.end3
  %15 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !13905
  %port8 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %15, i32 0, i32 7, !dbg !13905
  %16 = load %struct.mtip_port*, %struct.mtip_port** %port8, align 8, !dbg !13905
  %svc_wait = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %16, i32 0, i32 21, !dbg !13905
  call void @__wake_up(%struct.wait_queue_head* %svc_wait, i32 1, i32 1, i8* null) #12, !dbg !13905
  br label %exit_handler, !dbg !13905

exit_handler:                                     ; preds = %if.end7, %if.then6, %if.then2
  call void @llvm.dbg.label(metadata !13906), !dbg !13907
  store i32 1, i32* %retval, align 4, !dbg !13908
  br label %return, !dbg !13908

return:                                           ; preds = %exit_handler, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !13909
  ret i32 %17, !dbg !13909
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mtip_softirq_done_fn(%struct.request* %rq) #2 !dbg !13910 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !13911, metadata !DIExpression()), !dbg !13915
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !8389, metadata !DIExpression()), !dbg !13920
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8393, metadata !DIExpression()), !dbg !13922
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !13923, metadata !DIExpression()), !dbg !13924
  %rq.addr = alloca %struct.request*, align 8
  %cmd = alloca %struct.mtip_cmd*, align 8
  %dd = alloca %struct.driver_data*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !13925, metadata !DIExpression()), !dbg !13926
  call void @llvm.dbg.declare(metadata %struct.mtip_cmd** %cmd, metadata !13927, metadata !DIExpression()), !dbg !13928
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !13929
  %call = call i8* @blk_mq_rq_to_pdu(%struct.request* %0) #12, !dbg !13930
  %1 = bitcast i8* %call to %struct.mtip_cmd*, !dbg !13930
  store %struct.mtip_cmd* %1, %struct.mtip_cmd** %cmd, align 8, !dbg !13928
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd, metadata !13931, metadata !DIExpression()), !dbg !13932
  %2 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !13933
  %q = getelementptr inbounds %struct.request, %struct.request* %2, i32 0, i32 0, !dbg !13934
  %3 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !13934
  %queuedata = getelementptr inbounds %struct.request_queue, %struct.request_queue* %3, i32 0, i32 11, !dbg !13935
  %4 = load i8*, i8** %queuedata, align 8, !dbg !13935
  %5 = bitcast i8* %4 to %struct.driver_data*, !dbg !13933
  store %struct.driver_data* %5, %struct.driver_data** %dd, align 8, !dbg !13932
  %6 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !13936
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %6, i32 0, i32 4, !dbg !13936
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13936
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 41, !dbg !13936
  %8 = load %struct.mtip_cmd*, %struct.mtip_cmd** %cmd, align 8, !dbg !13936
  %9 = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %8, i32 0, i32 4, !dbg !13936
  %sg = bitcast %union.anon.85* %9 to [504 x %struct.scatterlist]*, !dbg !13936
  %arraydecay = getelementptr inbounds [504 x %struct.scatterlist], [504 x %struct.scatterlist]* %sg, i64 0, i64 0, !dbg !13936
  %10 = load %struct.mtip_cmd*, %struct.mtip_cmd** %cmd, align 8, !dbg !13936
  %scatter_ents = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %10, i32 0, i32 2, !dbg !13936
  %11 = load i32, i32* %scatter_ents, align 8, !dbg !13936
  %12 = load %struct.mtip_cmd*, %struct.mtip_cmd** %cmd, align 8, !dbg !13936
  %direction = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %12, i32 0, i32 6, !dbg !13936
  %13 = load i32, i32* %direction, align 4, !dbg !13936
  call void @dma_unmap_sg_attrs(%struct.device* %dev, %struct.scatterlist* %arraydecay, i32 %11, i32 %13, i64 0) #12, !dbg !13936
  %14 = load %struct.mtip_cmd*, %struct.mtip_cmd** %cmd, align 8, !dbg !13937
  %unaligned = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %14, i32 0, i32 3, !dbg !13937
  %15 = load i32, i32* %unaligned, align 4, !dbg !13937
  %tobool = icmp ne i32 %15, 0, !dbg !13937
  %lnot = xor i1 %tobool, true, !dbg !13937
  %lnot1 = xor i1 %lnot, true, !dbg !13937
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !13937
  %conv = sext i32 %lnot.ext to i64, !dbg !13937
  %tobool2 = icmp ne i64 %conv, 0, !dbg !13937
  br i1 %tobool2, label %if.then, label %if.end, !dbg !13938

if.then:                                          ; preds = %entry
  %16 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !13939
  %port = getelementptr inbounds %struct.driver_data, %struct.driver_data* %16, i32 0, i32 7, !dbg !13940
  %17 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !13940
  %cmd_slot_unal = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %17, i32 0, i32 24, !dbg !13941
  store %struct.atomic_t* %cmd_slot_unal, %struct.atomic_t** %v.addr.i, align 8
  %18 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !13942
  %19 = bitcast %struct.atomic_t* %18 to i8*, !dbg !13942
  store i8* %19, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %20 = load i8*, i8** %v.addr.i.i, align 8, !dbg !13943
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !13944
  %conv.i.i = trunc i64 %21 to i32, !dbg !13944
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %20, i32 %conv.i.i) #14, !dbg !13945
  %22 = load i8*, i8** %v.addr.i.i, align 8, !dbg !13946
  %23 = load i64, i64* %size.addr.i.i, align 8, !dbg !13946
  call void @kcsan_check_access(i8* %22, i64 %23, i32 7) #14, !dbg !13946
  %24 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !13947
  store %struct.atomic_t* %24, %struct.atomic_t** %v.addr.i1.i, align 8
  %25 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !13948
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %25, i32 0, i32 0, !dbg !13949
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #11, !dbg !13950, !srcloc !13951
  br label %if.end, !dbg !13952

if.end:                                           ; preds = %if.then, %entry
  %26 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !13953
  %27 = load %struct.mtip_cmd*, %struct.mtip_cmd** %cmd, align 8, !dbg !13954
  %status = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %27, i32 0, i32 7, !dbg !13955
  %28 = load i8, i8* %status, align 8, !dbg !13955
  call void @blk_mq_end_request(%struct.request* %26, i8 zeroext %28) #12, !dbg !13956
  ret void, !dbg !13957
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_init_cmd(%struct.blk_mq_tag_set* %set, %struct.request* %rq, i32 %hctx_idx, i32 %numa_node) #2 !dbg !13958 {
entry:
  %retval = alloca i32, align 4
  %set.addr = alloca %struct.blk_mq_tag_set*, align 8
  %rq.addr = alloca %struct.request*, align 8
  %hctx_idx.addr = alloca i32, align 4
  %numa_node.addr = alloca i32, align 4
  %dd = alloca %struct.driver_data*, align 8
  %cmd = alloca %struct.mtip_cmd*, align 8
  store %struct.blk_mq_tag_set* %set, %struct.blk_mq_tag_set** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.blk_mq_tag_set** %set.addr, metadata !13959, metadata !DIExpression()), !dbg !13960
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !13961, metadata !DIExpression()), !dbg !13962
  store i32 %hctx_idx, i32* %hctx_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hctx_idx.addr, metadata !13963, metadata !DIExpression()), !dbg !13964
  store i32 %numa_node, i32* %numa_node.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numa_node.addr, metadata !13965, metadata !DIExpression()), !dbg !13966
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd, metadata !13967, metadata !DIExpression()), !dbg !13968
  %0 = load %struct.blk_mq_tag_set*, %struct.blk_mq_tag_set** %set.addr, align 8, !dbg !13969
  %driver_data = getelementptr inbounds %struct.blk_mq_tag_set, %struct.blk_mq_tag_set* %0, i32 0, i32 10, !dbg !13970
  %1 = load i8*, i8** %driver_data, align 8, !dbg !13970
  %2 = bitcast i8* %1 to %struct.driver_data*, !dbg !13969
  store %struct.driver_data* %2, %struct.driver_data** %dd, align 8, !dbg !13968
  call void @llvm.dbg.declare(metadata %struct.mtip_cmd** %cmd, metadata !13971, metadata !DIExpression()), !dbg !13972
  %3 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !13973
  %call = call i8* @blk_mq_rq_to_pdu(%struct.request* %3) #12, !dbg !13974
  %4 = bitcast i8* %call to %struct.mtip_cmd*, !dbg !13974
  store %struct.mtip_cmd* %4, %struct.mtip_cmd** %cmd, align 8, !dbg !13972
  %5 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !13975
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %5, i32 0, i32 4, !dbg !13976
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13976
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 41, !dbg !13977
  %7 = load %struct.mtip_cmd*, %struct.mtip_cmd** %cmd, align 8, !dbg !13978
  %command_dma = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %7, i32 0, i32 1, !dbg !13979
  %call1 = call i8* @dma_alloc_coherent(%struct.device* %dev, i64 8192, i64* %command_dma, i32 3264) #12, !dbg !13980
  %8 = load %struct.mtip_cmd*, %struct.mtip_cmd** %cmd, align 8, !dbg !13981
  %command = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %8, i32 0, i32 0, !dbg !13982
  store i8* %call1, i8** %command, align 8, !dbg !13983
  %9 = load %struct.mtip_cmd*, %struct.mtip_cmd** %cmd, align 8, !dbg !13984
  %command2 = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %9, i32 0, i32 0, !dbg !13986
  %10 = load i8*, i8** %command2, align 8, !dbg !13986
  %tobool = icmp ne i8* %10, null, !dbg !13984
  br i1 %tobool, label %if.end, label %if.then, !dbg !13987

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !13988
  br label %return, !dbg !13988

if.end:                                           ; preds = %entry
  %11 = load %struct.mtip_cmd*, %struct.mtip_cmd** %cmd, align 8, !dbg !13989
  %12 = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %11, i32 0, i32 4, !dbg !13990
  %sg = bitcast %union.anon.85* %12 to [504 x %struct.scatterlist]*, !dbg !13990
  %arraydecay = getelementptr inbounds [504 x %struct.scatterlist], [504 x %struct.scatterlist]* %sg, i64 0, i64 0, !dbg !13989
  call void @sg_init_table(%struct.scatterlist* %arraydecay, i32 504) #12, !dbg !13991
  store i32 0, i32* %retval, align 4, !dbg !13992
  br label %return, !dbg !13992

return:                                           ; preds = %if.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !13993
  ret i32 %13, !dbg !13993
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mtip_free_cmd(%struct.blk_mq_tag_set* %set, %struct.request* %rq, i32 %hctx_idx) #2 !dbg !13994 {
entry:
  %set.addr = alloca %struct.blk_mq_tag_set*, align 8
  %rq.addr = alloca %struct.request*, align 8
  %hctx_idx.addr = alloca i32, align 4
  %dd = alloca %struct.driver_data*, align 8
  %cmd = alloca %struct.mtip_cmd*, align 8
  store %struct.blk_mq_tag_set* %set, %struct.blk_mq_tag_set** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.blk_mq_tag_set** %set.addr, metadata !13995, metadata !DIExpression()), !dbg !13996
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !13997, metadata !DIExpression()), !dbg !13998
  store i32 %hctx_idx, i32* %hctx_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hctx_idx.addr, metadata !13999, metadata !DIExpression()), !dbg !14000
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd, metadata !14001, metadata !DIExpression()), !dbg !14002
  %0 = load %struct.blk_mq_tag_set*, %struct.blk_mq_tag_set** %set.addr, align 8, !dbg !14003
  %driver_data = getelementptr inbounds %struct.blk_mq_tag_set, %struct.blk_mq_tag_set* %0, i32 0, i32 10, !dbg !14004
  %1 = load i8*, i8** %driver_data, align 8, !dbg !14004
  %2 = bitcast i8* %1 to %struct.driver_data*, !dbg !14003
  store %struct.driver_data* %2, %struct.driver_data** %dd, align 8, !dbg !14002
  call void @llvm.dbg.declare(metadata %struct.mtip_cmd** %cmd, metadata !14005, metadata !DIExpression()), !dbg !14006
  %3 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14007
  %call = call i8* @blk_mq_rq_to_pdu(%struct.request* %3) #12, !dbg !14008
  %4 = bitcast i8* %call to %struct.mtip_cmd*, !dbg !14008
  store %struct.mtip_cmd* %4, %struct.mtip_cmd** %cmd, align 8, !dbg !14006
  %5 = load %struct.mtip_cmd*, %struct.mtip_cmd** %cmd, align 8, !dbg !14009
  %command = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %5, i32 0, i32 0, !dbg !14011
  %6 = load i8*, i8** %command, align 8, !dbg !14011
  %tobool = icmp ne i8* %6, null, !dbg !14009
  br i1 %tobool, label %if.end, label %if.then, !dbg !14012

if.then:                                          ; preds = %entry
  br label %return, !dbg !14013

if.end:                                           ; preds = %entry
  %7 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !14014
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %7, i32 0, i32 4, !dbg !14015
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !14015
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 41, !dbg !14016
  %9 = load %struct.mtip_cmd*, %struct.mtip_cmd** %cmd, align 8, !dbg !14017
  %command1 = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %9, i32 0, i32 0, !dbg !14018
  %10 = load i8*, i8** %command1, align 8, !dbg !14018
  %11 = load %struct.mtip_cmd*, %struct.mtip_cmd** %cmd, align 8, !dbg !14019
  %command_dma = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %11, i32 0, i32 1, !dbg !14020
  %12 = load i64, i64* %command_dma, align 8, !dbg !14020
  call void @dma_free_coherent(%struct.device* %dev, i64 8192, i8* %10, i64 %12) #12, !dbg !14021
  br label %return, !dbg !14022

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !14022
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @blk_rq_is_passthrough(%struct.request* %rq) #2 !dbg !14023 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !14026, metadata !DIExpression()), !dbg !14027
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14028
  %call = call zeroext i1 @blk_rq_is_scsi(%struct.request* %0) #12, !dbg !14029
  br i1 %call, label %lor.end, label %lor.rhs, !dbg !14030

lor.rhs:                                          ; preds = %entry
  %1 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14031
  %call1 = call zeroext i1 @blk_rq_is_private(%struct.request* %1) #12, !dbg !14032
  br label %lor.end, !dbg !14030

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %call1, %lor.rhs ]
  ret i1 %2, !dbg !14033
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @mtip_issue_reserved_cmd(%struct.blk_mq_hw_ctx* %hctx, %struct.request* %rq) #2 !dbg !14034 {
entry:
  %retval = alloca i8, align 1
  %hctx.addr = alloca %struct.blk_mq_hw_ctx*, align 8
  %rq.addr = alloca %struct.request*, align 8
  %dd = alloca %struct.driver_data*, align 8
  %cmd = alloca %struct.mtip_cmd*, align 8
  %icmd = alloca %struct.mtip_int_cmd*, align 8
  %hdr = alloca %struct.mtip_cmd_hdr*, align 8
  %command_sg = alloca %struct.mtip_cmd_sg*, align 8
  store %struct.blk_mq_hw_ctx* %hctx, %struct.blk_mq_hw_ctx** %hctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.blk_mq_hw_ctx** %hctx.addr, metadata !14037, metadata !DIExpression()), !dbg !14038
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !14039, metadata !DIExpression()), !dbg !14040
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd, metadata !14041, metadata !DIExpression()), !dbg !14042
  %0 = load %struct.blk_mq_hw_ctx*, %struct.blk_mq_hw_ctx** %hctx.addr, align 8, !dbg !14043
  %queue = getelementptr inbounds %struct.blk_mq_hw_ctx, %struct.blk_mq_hw_ctx* %0, i32 0, i32 7, !dbg !14044
  %1 = load %struct.request_queue*, %struct.request_queue** %queue, align 8, !dbg !14044
  %queuedata = getelementptr inbounds %struct.request_queue, %struct.request_queue* %1, i32 0, i32 11, !dbg !14045
  %2 = load i8*, i8** %queuedata, align 8, !dbg !14045
  %3 = bitcast i8* %2 to %struct.driver_data*, !dbg !14043
  store %struct.driver_data* %3, %struct.driver_data** %dd, align 8, !dbg !14042
  call void @llvm.dbg.declare(metadata %struct.mtip_cmd** %cmd, metadata !14046, metadata !DIExpression()), !dbg !14047
  %4 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14048
  %call = call i8* @blk_mq_rq_to_pdu(%struct.request* %4) #12, !dbg !14049
  %5 = bitcast i8* %call to %struct.mtip_cmd*, !dbg !14049
  store %struct.mtip_cmd* %5, %struct.mtip_cmd** %cmd, align 8, !dbg !14047
  call void @llvm.dbg.declare(metadata %struct.mtip_int_cmd** %icmd, metadata !14050, metadata !DIExpression()), !dbg !14051
  %6 = load %struct.mtip_cmd*, %struct.mtip_cmd** %cmd, align 8, !dbg !14052
  %7 = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %6, i32 0, i32 4, !dbg !14053
  %icmd1 = bitcast %union.anon.85* %7 to %struct.mtip_int_cmd**, !dbg !14053
  %8 = load %struct.mtip_int_cmd*, %struct.mtip_int_cmd** %icmd1, align 8, !dbg !14053
  store %struct.mtip_int_cmd* %8, %struct.mtip_int_cmd** %icmd, align 8, !dbg !14051
  call void @llvm.dbg.declare(metadata %struct.mtip_cmd_hdr** %hdr, metadata !14054, metadata !DIExpression()), !dbg !14068
  %9 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !14069
  %port = getelementptr inbounds %struct.driver_data, %struct.driver_data* %9, i32 0, i32 7, !dbg !14070
  %10 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !14070
  %command_list = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %10, i32 0, i32 6, !dbg !14071
  %11 = load i8*, i8** %command_list, align 8, !dbg !14071
  %12 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14072
  %tag = getelementptr inbounds %struct.request, %struct.request* %12, i32 0, i32 5, !dbg !14073
  %13 = load i32, i32* %tag, align 8, !dbg !14073
  %conv = sext i32 %13 to i64, !dbg !14072
  %mul = mul i64 32, %conv, !dbg !14074
  %add.ptr = getelementptr i8, i8* %11, i64 %mul, !dbg !14075
  %14 = bitcast i8* %add.ptr to %struct.mtip_cmd_hdr*, !dbg !14069
  store %struct.mtip_cmd_hdr* %14, %struct.mtip_cmd_hdr** %hdr, align 8, !dbg !14068
  call void @llvm.dbg.declare(metadata %struct.mtip_cmd_sg** %command_sg, metadata !14076, metadata !DIExpression()), !dbg !14084
  %15 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !14085
  %port2 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %15, i32 0, i32 7, !dbg !14087
  %16 = load %struct.mtip_port*, %struct.mtip_port** %port2, align 8, !dbg !14087
  %call3 = call zeroext i1 @mtip_commands_active(%struct.mtip_port* %16) #12, !dbg !14088
  br i1 %call3, label %if.then, label %if.end, !dbg !14089

if.then:                                          ; preds = %entry
  store i8 13, i8* %retval, align 1, !dbg !14090
  br label %return, !dbg !14090

if.end:                                           ; preds = %entry
  %17 = load %struct.mtip_cmd*, %struct.mtip_cmd** %cmd, align 8, !dbg !14091
  %command_dma = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %17, i32 0, i32 1, !dbg !14091
  %18 = load i64, i64* %command_dma, align 8, !dbg !14091
  %and = and i64 %18, 4294967295, !dbg !14091
  %conv4 = trunc i64 %and to i32, !dbg !14091
  %19 = load %struct.mtip_cmd_hdr*, %struct.mtip_cmd_hdr** %hdr, align 8, !dbg !14092
  %ctba = getelementptr inbounds %struct.mtip_cmd_hdr, %struct.mtip_cmd_hdr* %19, i32 0, i32 2, !dbg !14093
  store i32 %conv4, i32* %ctba, align 4, !dbg !14094
  %20 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !14095
  %port5 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %20, i32 0, i32 7, !dbg !14097
  %21 = load %struct.mtip_port*, %struct.mtip_port** %port5, align 8, !dbg !14097
  %flags = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %21, i32 0, i32 22, !dbg !14098
  %call6 = call zeroext i1 @test_bit(i64 10, i64* %flags) #12, !dbg !14099
  br i1 %call6, label %if.then7, label %if.end11, !dbg !14100

if.then7:                                         ; preds = %if.end
  %22 = load %struct.mtip_cmd*, %struct.mtip_cmd** %cmd, align 8, !dbg !14101
  %command_dma8 = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %22, i32 0, i32 1, !dbg !14101
  %23 = load i64, i64* %command_dma8, align 8, !dbg !14101
  %shr = lshr i64 %23, 16, !dbg !14101
  %shr9 = lshr i64 %shr, 16, !dbg !14101
  %conv10 = trunc i64 %shr9 to i32, !dbg !14101
  %24 = load %struct.mtip_cmd_hdr*, %struct.mtip_cmd_hdr** %hdr, align 8, !dbg !14102
  %ctbau = getelementptr inbounds %struct.mtip_cmd_hdr, %struct.mtip_cmd_hdr* %24, i32 0, i32 3, !dbg !14103
  store i32 %conv10, i32* %ctbau, align 4, !dbg !14104
  br label %if.end11, !dbg !14102

if.end11:                                         ; preds = %if.then7, %if.end
  %25 = load %struct.mtip_int_cmd*, %struct.mtip_int_cmd** %icmd, align 8, !dbg !14105
  %opts = getelementptr inbounds %struct.mtip_int_cmd, %struct.mtip_int_cmd* %25, i32 0, i32 3, !dbg !14105
  %26 = load i32, i32* %opts, align 4, !dbg !14105
  %27 = load %struct.mtip_int_cmd*, %struct.mtip_int_cmd** %icmd, align 8, !dbg !14105
  %fis_len = getelementptr inbounds %struct.mtip_int_cmd, %struct.mtip_int_cmd* %27, i32 0, i32 0, !dbg !14105
  %28 = load i32, i32* %fis_len, align 8, !dbg !14105
  %or = or i32 %26, %28, !dbg !14105
  %29 = load %struct.mtip_cmd_hdr*, %struct.mtip_cmd_hdr** %hdr, align 8, !dbg !14106
  %opts12 = getelementptr inbounds %struct.mtip_cmd_hdr, %struct.mtip_cmd_hdr* %29, i32 0, i32 0, !dbg !14107
  store i32 %or, i32* %opts12, align 4, !dbg !14108
  %30 = load %struct.mtip_int_cmd*, %struct.mtip_int_cmd** %icmd, align 8, !dbg !14109
  %buf_len = getelementptr inbounds %struct.mtip_int_cmd, %struct.mtip_int_cmd* %30, i32 0, i32 2, !dbg !14111
  %31 = load i32, i32* %buf_len, align 8, !dbg !14111
  %tobool = icmp ne i32 %31, 0, !dbg !14109
  br i1 %tobool, label %if.then13, label %if.end25, !dbg !14112

if.then13:                                        ; preds = %if.end11
  %32 = load %struct.mtip_cmd*, %struct.mtip_cmd** %cmd, align 8, !dbg !14113
  %command = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %32, i32 0, i32 0, !dbg !14115
  %33 = load i8*, i8** %command, align 8, !dbg !14115
  %add.ptr14 = getelementptr i8, i8* %33, i64 128, !dbg !14116
  %34 = bitcast i8* %add.ptr14 to %struct.mtip_cmd_sg*, !dbg !14113
  store %struct.mtip_cmd_sg* %34, %struct.mtip_cmd_sg** %command_sg, align 8, !dbg !14117
  %35 = load %struct.mtip_int_cmd*, %struct.mtip_int_cmd** %icmd, align 8, !dbg !14118
  %buf_len15 = getelementptr inbounds %struct.mtip_int_cmd, %struct.mtip_int_cmd* %35, i32 0, i32 2, !dbg !14118
  %36 = load i32, i32* %buf_len15, align 8, !dbg !14118
  %sub = sub i32 %36, 1, !dbg !14118
  %and16 = and i32 %sub, 4194303, !dbg !14118
  %37 = load %struct.mtip_cmd_sg*, %struct.mtip_cmd_sg** %command_sg, align 8, !dbg !14119
  %info = getelementptr inbounds %struct.mtip_cmd_sg, %struct.mtip_cmd_sg* %37, i32 0, i32 3, !dbg !14120
  store i32 %and16, i32* %info, align 4, !dbg !14121
  %38 = load %struct.mtip_int_cmd*, %struct.mtip_int_cmd** %icmd, align 8, !dbg !14122
  %buffer = getelementptr inbounds %struct.mtip_int_cmd, %struct.mtip_int_cmd* %38, i32 0, i32 1, !dbg !14122
  %39 = load i64, i64* %buffer, align 8, !dbg !14122
  %and17 = and i64 %39, 4294967295, !dbg !14122
  %conv18 = trunc i64 %and17 to i32, !dbg !14122
  %40 = load %struct.mtip_cmd_sg*, %struct.mtip_cmd_sg** %command_sg, align 8, !dbg !14123
  %dba = getelementptr inbounds %struct.mtip_cmd_sg, %struct.mtip_cmd_sg* %40, i32 0, i32 0, !dbg !14124
  store i32 %conv18, i32* %dba, align 4, !dbg !14125
  %41 = load %struct.mtip_int_cmd*, %struct.mtip_int_cmd** %icmd, align 8, !dbg !14126
  %buffer19 = getelementptr inbounds %struct.mtip_int_cmd, %struct.mtip_int_cmd* %41, i32 0, i32 1, !dbg !14126
  %42 = load i64, i64* %buffer19, align 8, !dbg !14126
  %shr20 = lshr i64 %42, 16, !dbg !14126
  %shr21 = lshr i64 %shr20, 16, !dbg !14126
  %conv22 = trunc i64 %shr21 to i32, !dbg !14126
  %43 = load %struct.mtip_cmd_sg*, %struct.mtip_cmd_sg** %command_sg, align 8, !dbg !14127
  %dba_upper = getelementptr inbounds %struct.mtip_cmd_sg, %struct.mtip_cmd_sg* %43, i32 0, i32 1, !dbg !14128
  store i32 %conv22, i32* %dba_upper, align 4, !dbg !14129
  %44 = load %struct.mtip_cmd_hdr*, %struct.mtip_cmd_hdr** %hdr, align 8, !dbg !14130
  %opts23 = getelementptr inbounds %struct.mtip_cmd_hdr, %struct.mtip_cmd_hdr* %44, i32 0, i32 0, !dbg !14131
  %45 = load i32, i32* %opts23, align 4, !dbg !14132
  %or24 = or i32 %45, 65536, !dbg !14132
  store i32 %or24, i32* %opts23, align 4, !dbg !14132
  br label %if.end25, !dbg !14133

if.end25:                                         ; preds = %if.then13, %if.end11
  %46 = load %struct.mtip_cmd_hdr*, %struct.mtip_cmd_hdr** %hdr, align 8, !dbg !14134
  %47 = getelementptr inbounds %struct.mtip_cmd_hdr, %struct.mtip_cmd_hdr* %46, i32 0, i32 1, !dbg !14135
  %byte_count = bitcast %union.anon.94* %47 to i32*, !dbg !14135
  store i32 0, i32* %byte_count, align 4, !dbg !14136
  %48 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14137
  call void @blk_mq_start_request(%struct.request* %48) #12, !dbg !14138
  %49 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !14139
  %port26 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %49, i32 0, i32 7, !dbg !14140
  %50 = load %struct.mtip_port*, %struct.mtip_port** %port26, align 8, !dbg !14140
  %51 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14141
  %tag27 = getelementptr inbounds %struct.request, %struct.request* %51, i32 0, i32 5, !dbg !14142
  %52 = load i32, i32* %tag27, align 8, !dbg !14142
  call void @mtip_issue_non_ncq_command(%struct.mtip_port* %50, i32 %52) #12, !dbg !14143
  store i8 0, i8* %retval, align 1, !dbg !14144
  br label %return, !dbg !14144

return:                                           ; preds = %if.end25, %if.then
  %53 = load i8, i8* %retval, align 1, !dbg !14145
  ret i8 %53, !dbg !14145
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mtip_check_unal_depth(%struct.blk_mq_hw_ctx* %hctx, %struct.request* %rq) #2 !dbg !14146 {
entry:
  %v.addr.i5.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i5.i.i, metadata !14149, metadata !DIExpression()), !dbg !14153
  %old.addr.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %old.addr.i.i.i, metadata !14160, metadata !DIExpression()), !dbg !14161
  %new.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %new.addr.i.i.i, metadata !14162, metadata !DIExpression()), !dbg !14163
  %success.i.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %success.i.i.i, metadata !14164, metadata !DIExpression()), !dbg !14166
  %_old.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %_old.i.i.i, metadata !14167, metadata !DIExpression()), !dbg !14166
  %__old.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__old.i.i.i, metadata !14168, metadata !DIExpression()), !dbg !14166
  %__new.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__new.i.i.i, metadata !14169, metadata !DIExpression()), !dbg !14166
  %__ptr.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %__ptr.i.i.i, metadata !14170, metadata !DIExpression()), !dbg !14166
  %tmp.i.i.i = alloca i64, align 8
  %v.addr.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i, metadata !6966, metadata !DIExpression()), !dbg !14171
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !14173, metadata !DIExpression()), !dbg !14174
  %dec.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %dec.i.i, metadata !14175, metadata !DIExpression()), !dbg !14176
  %c.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c.i.i, metadata !14177, metadata !DIExpression()), !dbg !14178
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !8389, metadata !DIExpression()), !dbg !14179
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8393, metadata !DIExpression()), !dbg !14181
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !14182, metadata !DIExpression()), !dbg !14183
  %retval = alloca i1, align 1
  %hctx.addr = alloca %struct.blk_mq_hw_ctx*, align 8
  %rq.addr = alloca %struct.request*, align 8
  %dd = alloca %struct.driver_data*, align 8
  %cmd = alloca %struct.mtip_cmd*, align 8
  store %struct.blk_mq_hw_ctx* %hctx, %struct.blk_mq_hw_ctx** %hctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.blk_mq_hw_ctx** %hctx.addr, metadata !14184, metadata !DIExpression()), !dbg !14185
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !14186, metadata !DIExpression()), !dbg !14187
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd, metadata !14188, metadata !DIExpression()), !dbg !14189
  %0 = load %struct.blk_mq_hw_ctx*, %struct.blk_mq_hw_ctx** %hctx.addr, align 8, !dbg !14190
  %queue = getelementptr inbounds %struct.blk_mq_hw_ctx, %struct.blk_mq_hw_ctx* %0, i32 0, i32 7, !dbg !14191
  %1 = load %struct.request_queue*, %struct.request_queue** %queue, align 8, !dbg !14191
  %queuedata = getelementptr inbounds %struct.request_queue, %struct.request_queue* %1, i32 0, i32 11, !dbg !14192
  %2 = load i8*, i8** %queuedata, align 8, !dbg !14192
  %3 = bitcast i8* %2 to %struct.driver_data*, !dbg !14190
  store %struct.driver_data* %3, %struct.driver_data** %dd, align 8, !dbg !14189
  call void @llvm.dbg.declare(metadata %struct.mtip_cmd** %cmd, metadata !14193, metadata !DIExpression()), !dbg !14194
  %4 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14195
  %call = call i8* @blk_mq_rq_to_pdu(%struct.request* %4) #12, !dbg !14196
  %5 = bitcast i8* %call to %struct.mtip_cmd*, !dbg !14196
  store %struct.mtip_cmd* %5, %struct.mtip_cmd** %cmd, align 8, !dbg !14194
  %6 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14197
  %cmd_flags = getelementptr inbounds %struct.request, %struct.request* %6, i32 0, i32 3, !dbg !14197
  %7 = load i32, i32* %cmd_flags, align 8, !dbg !14197
  %and = and i32 %7, 255, !dbg !14197
  %call1 = call zeroext i1 @op_is_write(i32 %and) #12, !dbg !14197
  %8 = zext i1 %call1 to i64, !dbg !14197
  %cond = select i1 %call1, i32 1, i32 0, !dbg !14197
  %cmp = icmp eq i32 %cond, 0, !dbg !14199
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !14200

lor.lhs.false:                                    ; preds = %entry
  %9 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !14201
  %unal_qdepth = getelementptr inbounds %struct.driver_data, %struct.driver_data* %9, i32 0, i32 24, !dbg !14202
  %10 = load i32, i32* %unal_qdepth, align 8, !dbg !14202
  %tobool = icmp ne i32 %10, 0, !dbg !14201
  br i1 %tobool, label %if.end, label %if.then, !dbg !14203

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i1 false, i1* %retval, align 1, !dbg !14204
  br label %return, !dbg !14204

if.end:                                           ; preds = %lor.lhs.false
  %11 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14205
  %call2 = call i32 @blk_rq_sectors(%struct.request* %11) #12, !dbg !14207
  %cmp3 = icmp ule i32 %call2, 64, !dbg !14208
  br i1 %cmp3, label %if.then4, label %if.end14, !dbg !14209

if.then4:                                         ; preds = %if.end
  %12 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14210
  %call5 = call i64 @blk_rq_pos(%struct.request* %12) #12, !dbg !14213
  %and6 = and i64 %call5, 7, !dbg !14214
  %tobool7 = icmp ne i64 %and6, 0, !dbg !14214
  br i1 %tobool7, label %if.then12, label %lor.lhs.false8, !dbg !14215

lor.lhs.false8:                                   ; preds = %if.then4
  %13 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14216
  %call9 = call i32 @blk_rq_sectors(%struct.request* %13) #12, !dbg !14217
  %and10 = and i32 %call9, 7, !dbg !14218
  %tobool11 = icmp ne i32 %and10, 0, !dbg !14218
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !14219

if.then12:                                        ; preds = %lor.lhs.false8, %if.then4
  %14 = load %struct.mtip_cmd*, %struct.mtip_cmd** %cmd, align 8, !dbg !14220
  %unaligned = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %14, i32 0, i32 3, !dbg !14221
  store i32 1, i32* %unaligned, align 4, !dbg !14222
  br label %if.end13, !dbg !14220

if.end13:                                         ; preds = %if.then12, %lor.lhs.false8
  br label %if.end14, !dbg !14223

if.end14:                                         ; preds = %if.end13, %if.end
  %15 = load %struct.mtip_cmd*, %struct.mtip_cmd** %cmd, align 8, !dbg !14224
  %unaligned15 = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %15, i32 0, i32 3, !dbg !14225
  %16 = load i32, i32* %unaligned15, align 4, !dbg !14225
  %tobool16 = icmp ne i32 %16, 0, !dbg !14224
  br i1 %tobool16, label %land.lhs.true, label %if.end20, !dbg !14226

land.lhs.true:                                    ; preds = %if.end14
  %17 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !14227
  %port = getelementptr inbounds %struct.driver_data, %struct.driver_data* %17, i32 0, i32 7, !dbg !14228
  %18 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !14228
  %cmd_slot_unal = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %18, i32 0, i32 24, !dbg !14229
  store %struct.atomic_t* %cmd_slot_unal, %struct.atomic_t** %v.addr.i, align 8
  %19 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !14230
  %20 = bitcast %struct.atomic_t* %19 to i8*, !dbg !14230
  store i8* %20, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %21 = load i8*, i8** %v.addr.i.i, align 8, !dbg !14231
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !14232
  %conv.i.i = trunc i64 %22 to i32, !dbg !14232
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %21, i32 %conv.i.i) #14, !dbg !14233
  %23 = load i8*, i8** %v.addr.i.i, align 8, !dbg !14234
  %24 = load i64, i64* %size.addr.i.i, align 8, !dbg !14234
  call void @kcsan_check_access(i8* %23, i64 %24, i32 7) #14, !dbg !14234
  %25 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !14235
  store %struct.atomic_t* %25, %struct.atomic_t** %v.addr.i1.i, align 8
  %26 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !14236
  store %struct.atomic_t* %26, %struct.atomic_t** %v.addr.i.i.i, align 8
  %27 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !14237
  %counter.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %27, i32 0, i32 0, !dbg !14237
  %28 = load volatile i32, i32* %counter.i.i.i, align 4, !dbg !14237
  store i32 %28, i32* %c.i.i, align 4, !dbg !14178
  br label %do.body.i.i, !dbg !14238

do.body.i.i:                                      ; preds = %arch_atomic_try_cmpxchg.exit.i.i, %land.lhs.true
  %29 = load i32, i32* %c.i.i, align 4, !dbg !14239
  %sub.i.i = sub i32 %29, 1, !dbg !14241
  store i32 %sub.i.i, i32* %dec.i.i, align 4, !dbg !14242
  %30 = load i32, i32* %dec.i.i, align 4, !dbg !14243
  %cmp.i.i = icmp slt i32 %30, 0, !dbg !14243
  %lnot.i.i = xor i1 %cmp.i.i, true, !dbg !14243
  %lnot.ext.i.i = zext i1 %cmp.i.i to i32, !dbg !14243
  %conv.i2.i = sext i32 %lnot.ext.i.i to i64, !dbg !14243
  br i1 %cmp.i.i, label %if.then.i.i, label %if.end.i.i, !dbg !14245

if.then.i.i:                                      ; preds = %do.body.i.i
  br label %atomic_dec_if_positive.exit, !dbg !14246

if.end.i.i:                                       ; preds = %do.body.i.i
  %31 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !14247
  %32 = load i32, i32* %dec.i.i, align 4, !dbg !14248
  store %struct.atomic_t* %31, %struct.atomic_t** %v.addr.i5.i.i, align 8
  store i32* %c.i.i, i32** %old.addr.i.i.i, align 8
  store i32 %32, i32* %new.addr.i.i.i, align 4
  %33 = load i32*, i32** %old.addr.i.i.i, align 8, !dbg !14166
  store i32* %33, i32** %_old.i.i.i, align 8, !dbg !14166
  %34 = load i32*, i32** %_old.i.i.i, align 8, !dbg !14166
  %35 = load i32, i32* %34, align 4, !dbg !14166
  store i32 %35, i32* %__old.i.i.i, align 4, !dbg !14166
  %36 = load i32, i32* %new.addr.i.i.i, align 4, !dbg !14166
  store i32 %36, i32* %__new.i.i.i, align 4, !dbg !14166
  %37 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i5.i.i, align 8, !dbg !14166
  %counter.i6.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %37, i32 0, i32 0, !dbg !14166
  store i32* %counter.i6.i.i, i32** %__ptr.i.i.i, align 8, !dbg !14166
  %38 = load i32*, i32** %__ptr.i.i.i, align 8, !dbg !14166
  %39 = load i32, i32* %__old.i.i.i, align 4, !dbg !14166
  %40 = load i32, i32* %__new.i.i.i, align 4, !dbg !14166
  %41 = call { i8, i32 } asm sideeffect "cmpxchgl $3, $1\0A\09/* output condition code z*/\0A", "={@ccz},=*m,={ax},r,*m,2,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %38, i32 %40, i32* %38, i32 %39) #11, !dbg !14166, !srcloc !14249
  %asmresult.i.i.i = extractvalue { i8, i32 } %41, 0, !dbg !14166
  %asmresult1.i.i.i = extractvalue { i8, i32 } %41, 1, !dbg !14166
  store i8 %asmresult.i.i.i, i8* %success.i.i.i, align 1, !dbg !14166
  store i32 %asmresult1.i.i.i, i32* %__old.i.i.i, align 4, !dbg !14166
  %42 = load i8, i8* %success.i.i.i, align 1, !dbg !14250
  %tobool.i.i.i = trunc i8 %42 to i1, !dbg !14250
  %lnot.i.i.i = xor i1 %tobool.i.i.i, true, !dbg !14250
  %lnot3.i.i.i = xor i1 %tobool.i.i.i, true, !dbg !14250
  %lnot.ext.i.i.i = zext i1 %lnot3.i.i.i to i32, !dbg !14250
  %conv.i.i.i = sext i32 %lnot.ext.i.i.i to i64, !dbg !14250
  br i1 %lnot3.i.i.i, label %if.then.i.i.i, label %arch_atomic_try_cmpxchg.exit.i.i, !dbg !14166

if.then.i.i.i:                                    ; preds = %if.end.i.i
  %43 = load i32, i32* %__old.i.i.i, align 4, !dbg !14250
  %44 = load i32*, i32** %_old.i.i.i, align 8, !dbg !14250
  store i32 %43, i32* %44, align 4, !dbg !14250
  br label %arch_atomic_try_cmpxchg.exit.i.i, !dbg !14250

arch_atomic_try_cmpxchg.exit.i.i:                 ; preds = %if.then.i.i.i, %if.end.i.i
  %45 = load i8, i8* %success.i.i.i, align 1, !dbg !14166
  %tobool5.i.i.i = trunc i8 %45 to i1, !dbg !14166
  %lnot6.i.i.i = xor i1 %tobool5.i.i.i, true, !dbg !14166
  %lnot.ext9.i.i.i = zext i1 %tobool5.i.i.i to i32, !dbg !14166
  %conv10.i.i.i = sext i32 %lnot.ext9.i.i.i to i64, !dbg !14166
  store i64 %conv10.i.i.i, i64* %tmp.i.i.i, align 8, !dbg !14250
  %46 = load i64, i64* %tmp.i.i.i, align 8, !dbg !14166
  %tobool11.i.i.i = icmp ne i64 %46, 0, !dbg !14252
  %lnot3.i.i = xor i1 %tobool11.i.i.i, true, !dbg !14253
  br i1 %lnot3.i.i, label %do.body.i.i, label %atomic_dec_if_positive.exit, !dbg !14254, !llvm.loop !14255

atomic_dec_if_positive.exit:                      ; preds = %if.then.i.i, %arch_atomic_try_cmpxchg.exit.i.i
  %47 = load i32, i32* %dec.i.i, align 4, !dbg !14257
  %cmp18 = icmp sge i32 %47, 0, !dbg !14258
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !14259

if.then19:                                        ; preds = %atomic_dec_if_positive.exit
  store i1 true, i1* %retval, align 1, !dbg !14260
  br label %return, !dbg !14260

if.end20:                                         ; preds = %atomic_dec_if_positive.exit, %if.end14
  store i1 false, i1* %retval, align 1, !dbg !14261
  br label %return, !dbg !14261

return:                                           ; preds = %if.end20, %if.then19, %if.then
  %48 = load i1, i1* %retval, align 1, !dbg !14262
  ret i1 %48, !dbg !14262
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_se_active(%struct.driver_data* %dd) #2 !dbg !14263 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !7000, metadata !DIExpression()), !dbg !14266
  %retval = alloca i1, align 1
  %dd.addr = alloca %struct.driver_data*, align 8
  %to = alloca i64, align 8
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !14272, metadata !DIExpression()), !dbg !14273
  %0 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !14274
  %port = getelementptr inbounds %struct.driver_data, %struct.driver_data* %0, i32 0, i32 7, !dbg !14274
  %1 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !14274
  %flags = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %1, i32 0, i32 22, !dbg !14274
  %call = call zeroext i1 @test_bit(i64 2, i64* %flags) #12, !dbg !14274
  %lnot = xor i1 %call, true, !dbg !14274
  %lnot1 = xor i1 %lnot, true, !dbg !14274
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !14274
  %conv = sext i32 %lnot.ext to i64, !dbg !14274
  %tobool = icmp ne i64 %conv, 0, !dbg !14274
  br i1 %tobool, label %if.then, label %if.end16, !dbg !14275

if.then:                                          ; preds = %entry
  %2 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !14276
  %port2 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %2, i32 0, i32 7, !dbg !14277
  %3 = load %struct.mtip_port*, %struct.mtip_port** %port2, align 8, !dbg !14277
  %ic_pause_timer = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %3, i32 0, i32 23, !dbg !14278
  %4 = load i64, i64* %ic_pause_timer, align 8, !dbg !14278
  %tobool3 = icmp ne i64 %4, 0, !dbg !14276
  br i1 %tobool3, label %if.then4, label %if.end15, !dbg !14279

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i64* %to, metadata !14280, metadata !DIExpression()), !dbg !14281
  %5 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !14282
  %port5 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %5, i32 0, i32 7, !dbg !14283
  %6 = load %struct.mtip_port*, %struct.mtip_port** %port5, align 8, !dbg !14283
  %ic_pause_timer6 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %6, i32 0, i32 23, !dbg !14284
  %7 = load i64, i64* %ic_pause_timer6, align 8, !dbg !14284
  store i32 1000, i32* %m.addr.i, align 4
  %8 = load i32, i32* %m.addr.i, align 4, !dbg !14285
  %9 = call i1 @llvm.is.constant.i32(i32 %8) #11, !dbg !14286
  br i1 %9, label %if.then.i, label %if.else.i, !dbg !14287

if.then.i:                                        ; preds = %if.then4
  %10 = load i32, i32* %m.addr.i, align 4, !dbg !14288
  %cmp.i = icmp slt i32 %10, 0, !dbg !14289
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !14290

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !14291
  br label %msecs_to_jiffies.exit, !dbg !14291

if.end.i:                                         ; preds = %if.then.i
  %11 = load i32, i32* %m.addr.i, align 4, !dbg !14292
  %call.i = call i64 @_msecs_to_jiffies(i32 %11) #14, !dbg !14293
  store i64 %call.i, i64* %retval.i, align 8, !dbg !14294
  br label %msecs_to_jiffies.exit, !dbg !14294

if.else.i:                                        ; preds = %if.then4
  %12 = load i32, i32* %m.addr.i, align 4, !dbg !14295
  %call2.i = call i64 @__msecs_to_jiffies(i32 %12) #14, !dbg !14296
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !14297
  br label %msecs_to_jiffies.exit, !dbg !14297

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %13 = load i64, i64* %retval.i, align 8, !dbg !14298
  %add = add i64 %7, %13, !dbg !14299
  store i64 %add, i64* %to, align 8, !dbg !14281
  %14 = load i64, i64* %to, align 8, !dbg !14300
  %15 = load volatile i64, i64* @jiffies, align 8, !dbg !14300
  %sub = sub i64 %14, %15, !dbg !14300
  %cmp = icmp slt i64 %sub, 0, !dbg !14300
  br i1 %cmp, label %if.then9, label %if.end, !dbg !14302

if.then9:                                         ; preds = %msecs_to_jiffies.exit
  %16 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !14303
  %port10 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %16, i32 0, i32 7, !dbg !14305
  %17 = load %struct.mtip_port*, %struct.mtip_port** %port10, align 8, !dbg !14305
  %flags11 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %17, i32 0, i32 22, !dbg !14306
  call void @clear_bit(i64 2, i64* %flags11) #12, !dbg !14307
  %18 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !14308
  %dd_flag = getelementptr inbounds %struct.driver_data, %struct.driver_data* %18, i32 0, i32 11, !dbg !14309
  call void @clear_bit(i64 0, i64* %dd_flag) #12, !dbg !14310
  %19 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !14311
  %port12 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %19, i32 0, i32 7, !dbg !14312
  %20 = load %struct.mtip_port*, %struct.mtip_port** %port12, align 8, !dbg !14312
  %ic_pause_timer13 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %20, i32 0, i32 23, !dbg !14313
  store i64 0, i64* %ic_pause_timer13, align 8, !dbg !14314
  %21 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !14315
  %port14 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %21, i32 0, i32 7, !dbg !14315
  %22 = load %struct.mtip_port*, %struct.mtip_port** %port14, align 8, !dbg !14315
  %svc_wait = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %22, i32 0, i32 21, !dbg !14315
  call void @__wake_up(%struct.wait_queue_head* %svc_wait, i32 1, i32 1, i8* null) #12, !dbg !14315
  store i1 false, i1* %retval, align 1, !dbg !14316
  br label %return, !dbg !14316

if.end:                                           ; preds = %msecs_to_jiffies.exit
  br label %if.end15, !dbg !14317

if.end15:                                         ; preds = %if.end, %if.then
  store i1 true, i1* %retval, align 1, !dbg !14318
  br label %return, !dbg !14318

if.end16:                                         ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !14319
  br label %return, !dbg !14319

return:                                           ; preds = %if.end16, %if.end15, %if.then9
  %23 = load i1, i1* %retval, align 1, !dbg !14320
  ret i1 %23, !dbg !14320
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_stopped(%struct.driver_data* %dd, %struct.request* %rq) #2 !dbg !14321 {
entry:
  %retval = alloca i1, align 1
  %dd.addr = alloca %struct.driver_data*, align 8
  %rq.addr = alloca %struct.request*, align 8
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !14324, metadata !DIExpression()), !dbg !14325
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !14326, metadata !DIExpression()), !dbg !14327
  %0 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !14328
  %dd_flag = getelementptr inbounds %struct.driver_data, %struct.driver_data* %0, i32 0, i32 11, !dbg !14328
  %1 = load i64, i64* %dd_flag, align 8, !dbg !14328
  %and = and i64 %1, 271, !dbg !14328
  %tobool = icmp ne i64 %and, 0, !dbg !14328
  %lnot = xor i1 %tobool, true, !dbg !14328
  %lnot1 = xor i1 %lnot, true, !dbg !14328
  %lnot2 = xor i1 %lnot1, true, !dbg !14328
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !14328
  %conv = sext i32 %lnot.ext to i64, !dbg !14328
  %tobool3 = icmp ne i64 %conv, 0, !dbg !14328
  br i1 %tobool3, label %if.then, label %if.end, !dbg !14330

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !14331
  br label %return, !dbg !14331

if.end:                                           ; preds = %entry
  %2 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !14332
  %dd_flag4 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %2, i32 0, i32 11, !dbg !14334
  %call = call zeroext i1 @test_bit(i64 1, i64* %dd_flag4) #12, !dbg !14335
  br i1 %call, label %if.then5, label %if.end6, !dbg !14336

if.then5:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !14337
  br label %return, !dbg !14337

if.end6:                                          ; preds = %if.end
  %3 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !14338
  %dd_flag7 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %3, i32 0, i32 11, !dbg !14340
  %call8 = call zeroext i1 @test_bit(i64 2, i64* %dd_flag7) #12, !dbg !14341
  br i1 %call8, label %if.then9, label %if.end10, !dbg !14342

if.then9:                                         ; preds = %if.end6
  store i1 true, i1* %retval, align 1, !dbg !14343
  br label %return, !dbg !14343

if.end10:                                         ; preds = %if.end6
  %4 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !14344
  %dd_flag11 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %4, i32 0, i32 11, !dbg !14346
  %call12 = call zeroext i1 @test_bit(i64 3, i64* %dd_flag11) #12, !dbg !14347
  br i1 %call12, label %land.lhs.true, label %if.end18, !dbg !14348

land.lhs.true:                                    ; preds = %if.end10
  %5 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14349
  %cmd_flags = getelementptr inbounds %struct.request, %struct.request* %5, i32 0, i32 3, !dbg !14349
  %6 = load i32, i32* %cmd_flags, align 8, !dbg !14349
  %and14 = and i32 %6, 255, !dbg !14349
  %call15 = call zeroext i1 @op_is_write(i32 %and14) #12, !dbg !14349
  br i1 %call15, label %cond.true, label %cond.false, !dbg !14350

cond.true:                                        ; preds = %land.lhs.true
  br i1 true, label %if.then17, label %if.end18, !dbg !14349

cond.false:                                       ; preds = %land.lhs.true
  br i1 false, label %if.then17, label %if.end18, !dbg !14350

if.then17:                                        ; preds = %cond.false, %cond.true
  store i1 true, i1* %retval, align 1, !dbg !14351
  br label %return, !dbg !14351

if.end18:                                         ; preds = %cond.false, %cond.true, %if.end10
  %7 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !14352
  %dd_flag19 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %7, i32 0, i32 11, !dbg !14354
  %call20 = call zeroext i1 @test_bit(i64 0, i64* %dd_flag19) #12, !dbg !14355
  br i1 %call20, label %if.then21, label %if.end22, !dbg !14356

if.then21:                                        ; preds = %if.end18
  store i1 true, i1* %retval, align 1, !dbg !14357
  br label %return, !dbg !14357

if.end22:                                         ; preds = %if.end18
  %8 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !14358
  %dd_flag23 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %8, i32 0, i32 11, !dbg !14360
  %call24 = call zeroext i1 @test_bit(i64 8, i64* %dd_flag23) #12, !dbg !14361
  br i1 %call24, label %if.then25, label %if.end26, !dbg !14362

if.then25:                                        ; preds = %if.end22
  store i1 true, i1* %retval, align 1, !dbg !14363
  br label %return, !dbg !14363

if.end26:                                         ; preds = %if.end22
  store i1 false, i1* %retval, align 1, !dbg !14364
  br label %return, !dbg !14364

return:                                           ; preds = %if.end26, %if.then25, %if.then21, %if.then17, %if.then9, %if.then5, %if.then
  %9 = load i1, i1* %retval, align 1, !dbg !14365
  ret i1 %9, !dbg !14365
}

; Function Attrs: noredzone
declare dso_local void @blk_mq_start_request(%struct.request*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mtip_hw_submit_io(%struct.driver_data* %dd, %struct.request* %rq, %struct.mtip_cmd* %command, %struct.blk_mq_hw_ctx* %hctx) #2 !dbg !14366 {
entry:
  %dd.addr = alloca %struct.driver_data*, align 8
  %rq.addr = alloca %struct.request*, align 8
  %command.addr = alloca %struct.mtip_cmd*, align 8
  %hctx.addr = alloca %struct.blk_mq_hw_ctx*, align 8
  %hdr = alloca %struct.mtip_cmd_hdr*, align 8
  %fis = alloca %struct.host_to_dev_fis*, align 8
  %port1 = alloca %struct.mtip_port*, align 8
  %dma_dir = alloca i32, align 4
  %start = alloca i64, align 8
  %nsect = alloca i32, align 4
  %nents = alloca i32, align 4
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !14369, metadata !DIExpression()), !dbg !14370
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !14371, metadata !DIExpression()), !dbg !14372
  store %struct.mtip_cmd* %command, %struct.mtip_cmd** %command.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mtip_cmd** %command.addr, metadata !14373, metadata !DIExpression()), !dbg !14374
  store %struct.blk_mq_hw_ctx* %hctx, %struct.blk_mq_hw_ctx** %hctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.blk_mq_hw_ctx** %hctx.addr, metadata !14375, metadata !DIExpression()), !dbg !14376
  call void @llvm.dbg.declare(metadata %struct.mtip_cmd_hdr** %hdr, metadata !14377, metadata !DIExpression()), !dbg !14378
  %0 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !14379
  %port = getelementptr inbounds %struct.driver_data, %struct.driver_data* %0, i32 0, i32 7, !dbg !14380
  %1 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !14380
  %command_list = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %1, i32 0, i32 6, !dbg !14381
  %2 = load i8*, i8** %command_list, align 8, !dbg !14381
  %3 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14382
  %tag = getelementptr inbounds %struct.request, %struct.request* %3, i32 0, i32 5, !dbg !14383
  %4 = load i32, i32* %tag, align 8, !dbg !14383
  %conv = sext i32 %4 to i64, !dbg !14382
  %mul = mul i64 32, %conv, !dbg !14384
  %add.ptr = getelementptr i8, i8* %2, i64 %mul, !dbg !14385
  %5 = bitcast i8* %add.ptr to %struct.mtip_cmd_hdr*, !dbg !14379
  store %struct.mtip_cmd_hdr* %5, %struct.mtip_cmd_hdr** %hdr, align 8, !dbg !14378
  call void @llvm.dbg.declare(metadata %struct.host_to_dev_fis** %fis, metadata !14386, metadata !DIExpression()), !dbg !14387
  call void @llvm.dbg.declare(metadata %struct.mtip_port** %port1, metadata !14388, metadata !DIExpression()), !dbg !14389
  %6 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !14390
  %port2 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %6, i32 0, i32 7, !dbg !14391
  %7 = load %struct.mtip_port*, %struct.mtip_port** %port2, align 8, !dbg !14391
  store %struct.mtip_port* %7, %struct.mtip_port** %port1, align 8, !dbg !14389
  call void @llvm.dbg.declare(metadata i32* %dma_dir, metadata !14392, metadata !DIExpression()), !dbg !14393
  %8 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14394
  %cmd_flags = getelementptr inbounds %struct.request, %struct.request* %8, i32 0, i32 3, !dbg !14394
  %9 = load i32, i32* %cmd_flags, align 8, !dbg !14394
  %and = and i32 %9, 255, !dbg !14394
  %call = call zeroext i1 @op_is_write(i32 %and) #12, !dbg !14394
  %10 = zext i1 %call to i64, !dbg !14394
  %cond = select i1 %call, i32 1, i32 0, !dbg !14394
  %cmp = icmp eq i32 %cond, 0, !dbg !14395
  %11 = zext i1 %cmp to i64, !dbg !14394
  %cond5 = select i1 %cmp, i32 2, i32 1, !dbg !14394
  store i32 %cond5, i32* %dma_dir, align 4, !dbg !14393
  call void @llvm.dbg.declare(metadata i64* %start, metadata !14396, metadata !DIExpression()), !dbg !14397
  %12 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14398
  %call6 = call i64 @blk_rq_pos(%struct.request* %12) #12, !dbg !14399
  store i64 %call6, i64* %start, align 8, !dbg !14397
  call void @llvm.dbg.declare(metadata i32* %nsect, metadata !14400, metadata !DIExpression()), !dbg !14401
  %13 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14402
  %call7 = call i32 @blk_rq_sectors(%struct.request* %13) #12, !dbg !14403
  store i32 %call7, i32* %nsect, align 4, !dbg !14401
  call void @llvm.dbg.declare(metadata i32* %nents, metadata !14404, metadata !DIExpression()), !dbg !14405
  %14 = load %struct.blk_mq_hw_ctx*, %struct.blk_mq_hw_ctx** %hctx.addr, align 8, !dbg !14406
  %queue = getelementptr inbounds %struct.blk_mq_hw_ctx, %struct.blk_mq_hw_ctx* %14, i32 0, i32 7, !dbg !14407
  %15 = load %struct.request_queue*, %struct.request_queue** %queue, align 8, !dbg !14407
  %16 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14408
  %17 = load %struct.mtip_cmd*, %struct.mtip_cmd** %command.addr, align 8, !dbg !14409
  %18 = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %17, i32 0, i32 4, !dbg !14410
  %sg = bitcast %union.anon.85* %18 to [504 x %struct.scatterlist]*, !dbg !14410
  %arraydecay = getelementptr inbounds [504 x %struct.scatterlist], [504 x %struct.scatterlist]* %sg, i64 0, i64 0, !dbg !14409
  %call8 = call i32 @blk_rq_map_sg(%struct.request_queue* %15, %struct.request* %16, %struct.scatterlist* %arraydecay) #12, !dbg !14411
  store i32 %call8, i32* %nents, align 4, !dbg !14412
  %19 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !14413
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %19, i32 0, i32 4, !dbg !14413
  %20 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !14413
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 41, !dbg !14413
  %21 = load %struct.mtip_cmd*, %struct.mtip_cmd** %command.addr, align 8, !dbg !14413
  %22 = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %21, i32 0, i32 4, !dbg !14413
  %sg9 = bitcast %union.anon.85* %22 to [504 x %struct.scatterlist]*, !dbg !14413
  %arraydecay10 = getelementptr inbounds [504 x %struct.scatterlist], [504 x %struct.scatterlist]* %sg9, i64 0, i64 0, !dbg !14413
  %23 = load i32, i32* %nents, align 4, !dbg !14413
  %24 = load i32, i32* %dma_dir, align 4, !dbg !14413
  %call11 = call i32 @dma_map_sg_attrs(%struct.device* %dev, %struct.scatterlist* %arraydecay10, i32 %23, i32 %24, i64 0) #12, !dbg !14413
  store i32 %call11, i32* %nents, align 4, !dbg !14414
  %25 = load %struct.mtip_port*, %struct.mtip_port** %port1, align 8, !dbg !14415
  %flags = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %25, i32 0, i32 22, !dbg !14415
  %26 = bitcast i64* %flags to i8*, !dbg !14415
  call void @llvm.prefetch.p0i8(i8* %26, i32 0, i32 3, i32 1), !dbg !14415
  %27 = load i32, i32* %nents, align 4, !dbg !14416
  %28 = load %struct.mtip_cmd*, %struct.mtip_cmd** %command.addr, align 8, !dbg !14417
  %scatter_ents = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %28, i32 0, i32 2, !dbg !14418
  store i32 %27, i32* %scatter_ents, align 8, !dbg !14419
  %29 = load %struct.mtip_cmd*, %struct.mtip_cmd** %command.addr, align 8, !dbg !14420
  %retries = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %29, i32 0, i32 5, !dbg !14421
  store i32 2, i32* %retries, align 8, !dbg !14422
  %30 = load %struct.mtip_cmd*, %struct.mtip_cmd** %command.addr, align 8, !dbg !14423
  %command12 = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %30, i32 0, i32 0, !dbg !14424
  %31 = load i8*, i8** %command12, align 8, !dbg !14424
  %32 = bitcast i8* %31 to %struct.host_to_dev_fis*, !dbg !14423
  store %struct.host_to_dev_fis* %32, %struct.host_to_dev_fis** %fis, align 8, !dbg !14425
  %33 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis, align 8, !dbg !14426
  %type = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %33, i32 0, i32 0, !dbg !14427
  store i8 39, i8* %type, align 4, !dbg !14428
  %34 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis, align 8, !dbg !14429
  %opts = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %34, i32 0, i32 1, !dbg !14430
  store i8 -128, i8* %opts, align 1, !dbg !14431
  %35 = load i32, i32* %dma_dir, align 4, !dbg !14432
  %cmp13 = icmp eq i32 %35, 2, !dbg !14434
  br i1 %cmp13, label %if.then, label %if.else, !dbg !14435

if.then:                                          ; preds = %entry
  %36 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis, align 8, !dbg !14436
  %command15 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %36, i32 0, i32 2, !dbg !14437
  store i8 96, i8* %command15, align 2, !dbg !14438
  br label %if.end, !dbg !14436

if.else:                                          ; preds = %entry
  %37 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis, align 8, !dbg !14439
  %command16 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %37, i32 0, i32 2, !dbg !14440
  store i8 97, i8* %command16, align 2, !dbg !14441
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %38 = load i64, i64* %start, align 8, !dbg !14442
  %and17 = and i64 %38, 255, !dbg !14443
  %conv18 = trunc i64 %and17 to i8, !dbg !14442
  %39 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis, align 8, !dbg !14444
  %40 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %39, i32 0, i32 4, !dbg !14445
  %lba_low = bitcast %union.anon.87* %40 to i8*, !dbg !14445
  store i8 %conv18, i8* %lba_low, align 4, !dbg !14446
  %41 = load i64, i64* %start, align 8, !dbg !14447
  %shr = lshr i64 %41, 8, !dbg !14448
  %and19 = and i64 %shr, 255, !dbg !14449
  %conv20 = trunc i64 %and19 to i8, !dbg !14450
  %42 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis, align 8, !dbg !14451
  %43 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %42, i32 0, i32 5, !dbg !14452
  %lba_mid = bitcast %union.anon.88* %43 to i8*, !dbg !14452
  store i8 %conv20, i8* %lba_mid, align 1, !dbg !14453
  %44 = load i64, i64* %start, align 8, !dbg !14454
  %shr21 = lshr i64 %44, 16, !dbg !14455
  %and22 = and i64 %shr21, 255, !dbg !14456
  %conv23 = trunc i64 %and22 to i8, !dbg !14457
  %45 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis, align 8, !dbg !14458
  %46 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %45, i32 0, i32 6, !dbg !14459
  %lba_hi = bitcast %union.anon.89* %46 to i8*, !dbg !14459
  store i8 %conv23, i8* %lba_hi, align 2, !dbg !14460
  %47 = load i64, i64* %start, align 8, !dbg !14461
  %shr24 = lshr i64 %47, 24, !dbg !14462
  %and25 = and i64 %shr24, 255, !dbg !14463
  %conv26 = trunc i64 %and25 to i8, !dbg !14464
  %48 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis, align 8, !dbg !14465
  %49 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %48, i32 0, i32 8, !dbg !14466
  %lba_low_ex = bitcast %union.anon.91* %49 to i8*, !dbg !14466
  store i8 %conv26, i8* %lba_low_ex, align 4, !dbg !14467
  %50 = load i64, i64* %start, align 8, !dbg !14468
  %shr27 = lshr i64 %50, 32, !dbg !14469
  %and28 = and i64 %shr27, 255, !dbg !14470
  %conv29 = trunc i64 %and28 to i8, !dbg !14471
  %51 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis, align 8, !dbg !14472
  %52 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %51, i32 0, i32 9, !dbg !14473
  %lba_mid_ex = bitcast %union.anon.92* %52 to i8*, !dbg !14473
  store i8 %conv29, i8* %lba_mid_ex, align 1, !dbg !14474
  %53 = load i64, i64* %start, align 8, !dbg !14475
  %shr30 = lshr i64 %53, 40, !dbg !14476
  %and31 = and i64 %shr30, 255, !dbg !14477
  %conv32 = trunc i64 %and31 to i8, !dbg !14478
  %54 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis, align 8, !dbg !14479
  %55 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %54, i32 0, i32 10, !dbg !14480
  %lba_hi_ex = bitcast %union.anon.93* %55 to i8*, !dbg !14480
  store i8 %conv32, i8* %lba_hi_ex, align 2, !dbg !14481
  %56 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis, align 8, !dbg !14482
  %57 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %56, i32 0, i32 7, !dbg !14483
  %device = bitcast %union.anon.90* %57 to i8*, !dbg !14483
  store i8 64, i8* %device, align 1, !dbg !14484
  %58 = load i32, i32* %nsect, align 4, !dbg !14485
  %and33 = and i32 %58, 255, !dbg !14486
  %conv34 = trunc i32 %and33 to i8, !dbg !14485
  %59 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis, align 8, !dbg !14487
  %features = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %59, i32 0, i32 3, !dbg !14488
  store i8 %conv34, i8* %features, align 1, !dbg !14489
  %60 = load i32, i32* %nsect, align 4, !dbg !14490
  %shr35 = lshr i32 %60, 8, !dbg !14491
  %and36 = and i32 %shr35, 255, !dbg !14492
  %conv37 = trunc i32 %and36 to i8, !dbg !14493
  %61 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis, align 8, !dbg !14494
  %features_ex = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %61, i32 0, i32 11, !dbg !14495
  store i8 %conv37, i8* %features_ex, align 1, !dbg !14496
  %62 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14497
  %tag38 = getelementptr inbounds %struct.request, %struct.request* %62, i32 0, i32 5, !dbg !14498
  %63 = load i32, i32* %tag38, align 8, !dbg !14498
  %shl = shl i32 %63, 3, !dbg !14499
  %64 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14500
  %tag39 = getelementptr inbounds %struct.request, %struct.request* %64, i32 0, i32 5, !dbg !14501
  %65 = load i32, i32* %tag39, align 8, !dbg !14501
  %shr40 = ashr i32 %65, 5, !dbg !14502
  %or = or i32 %shl, %shr40, !dbg !14503
  %conv41 = trunc i32 %or to i8, !dbg !14504
  %66 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis, align 8, !dbg !14505
  %sect_count = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %66, i32 0, i32 12, !dbg !14506
  store i8 %conv41, i8* %sect_count, align 4, !dbg !14507
  %67 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis, align 8, !dbg !14508
  %sect_cnt_ex = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %67, i32 0, i32 13, !dbg !14509
  store i8 0, i8* %sect_cnt_ex, align 1, !dbg !14510
  %68 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis, align 8, !dbg !14511
  %control = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %68, i32 0, i32 15, !dbg !14512
  store i8 0, i8* %control, align 1, !dbg !14513
  %69 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis, align 8, !dbg !14514
  %res2 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %69, i32 0, i32 14, !dbg !14515
  store i8 0, i8* %res2, align 2, !dbg !14516
  %70 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis, align 8, !dbg !14517
  %res3 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %70, i32 0, i32 16, !dbg !14518
  store i32 0, i32* %res3, align 4, !dbg !14519
  %71 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !14520
  %72 = load %struct.mtip_cmd*, %struct.mtip_cmd** %command.addr, align 8, !dbg !14521
  %73 = load i32, i32* %nents, align 4, !dbg !14522
  call void @fill_command_sg(%struct.driver_data* %71, %struct.mtip_cmd* %72, i32 %73) #12, !dbg !14523
  %74 = load %struct.mtip_cmd*, %struct.mtip_cmd** %command.addr, align 8, !dbg !14524
  %unaligned = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %74, i32 0, i32 3, !dbg !14524
  %75 = load i32, i32* %unaligned, align 4, !dbg !14524
  %tobool = icmp ne i32 %75, 0, !dbg !14524
  %lnot = xor i1 %tobool, true, !dbg !14524
  %lnot42 = xor i1 %lnot, true, !dbg !14524
  %lnot.ext = zext i1 %lnot42 to i32, !dbg !14524
  %conv43 = sext i32 %lnot.ext to i64, !dbg !14524
  %tobool44 = icmp ne i64 %conv43, 0, !dbg !14524
  br i1 %tobool44, label %if.then45, label %if.end50, !dbg !14526

if.then45:                                        ; preds = %if.end
  %76 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis, align 8, !dbg !14527
  %77 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %76, i32 0, i32 7, !dbg !14528
  %device46 = bitcast %union.anon.90* %77 to i8*, !dbg !14528
  %78 = load i8, i8* %device46, align 1, !dbg !14529
  %conv47 = zext i8 %78 to i32, !dbg !14529
  %or48 = or i32 %conv47, 128, !dbg !14529
  %conv49 = trunc i32 %or48 to i8, !dbg !14529
  store i8 %conv49, i8* %device46, align 1, !dbg !14529
  br label %if.end50, !dbg !14527

if.end50:                                         ; preds = %if.then45, %if.end
  %79 = load %struct.mtip_cmd*, %struct.mtip_cmd** %command.addr, align 8, !dbg !14530
  %command_dma = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %79, i32 0, i32 1, !dbg !14530
  %80 = load i64, i64* %command_dma, align 8, !dbg !14530
  %and51 = and i64 %80, 4294967295, !dbg !14530
  %conv52 = trunc i64 %and51 to i32, !dbg !14530
  %81 = load %struct.mtip_cmd_hdr*, %struct.mtip_cmd_hdr** %hdr, align 8, !dbg !14531
  %ctba = getelementptr inbounds %struct.mtip_cmd_hdr, %struct.mtip_cmd_hdr* %81, i32 0, i32 2, !dbg !14532
  store i32 %conv52, i32* %ctba, align 4, !dbg !14533
  %82 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !14534
  %port53 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %82, i32 0, i32 7, !dbg !14536
  %83 = load %struct.mtip_port*, %struct.mtip_port** %port53, align 8, !dbg !14536
  %flags54 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %83, i32 0, i32 22, !dbg !14537
  %call55 = call zeroext i1 @test_bit(i64 10, i64* %flags54) #12, !dbg !14538
  br i1 %call55, label %if.then56, label %if.end61, !dbg !14539

if.then56:                                        ; preds = %if.end50
  %84 = load %struct.mtip_cmd*, %struct.mtip_cmd** %command.addr, align 8, !dbg !14540
  %command_dma57 = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %84, i32 0, i32 1, !dbg !14540
  %85 = load i64, i64* %command_dma57, align 8, !dbg !14540
  %shr58 = lshr i64 %85, 16, !dbg !14540
  %shr59 = lshr i64 %shr58, 16, !dbg !14540
  %conv60 = trunc i64 %shr59 to i32, !dbg !14540
  %86 = load %struct.mtip_cmd_hdr*, %struct.mtip_cmd_hdr** %hdr, align 8, !dbg !14541
  %ctbau = getelementptr inbounds %struct.mtip_cmd_hdr, %struct.mtip_cmd_hdr* %86, i32 0, i32 3, !dbg !14542
  store i32 %conv60, i32* %ctbau, align 4, !dbg !14543
  br label %if.end61, !dbg !14541

if.end61:                                         ; preds = %if.then56, %if.end50
  %87 = load i32, i32* %nents, align 4, !dbg !14544
  %shl62 = shl i32 %87, 16, !dbg !14544
  %or63 = or i32 %shl62, 5, !dbg !14544
  %or64 = or i32 %or63, 128, !dbg !14544
  %88 = load %struct.mtip_cmd_hdr*, %struct.mtip_cmd_hdr** %hdr, align 8, !dbg !14545
  %opts65 = getelementptr inbounds %struct.mtip_cmd_hdr, %struct.mtip_cmd_hdr* %88, i32 0, i32 0, !dbg !14546
  store i32 %or64, i32* %opts65, align 4, !dbg !14547
  %89 = load %struct.mtip_cmd_hdr*, %struct.mtip_cmd_hdr** %hdr, align 8, !dbg !14548
  %90 = getelementptr inbounds %struct.mtip_cmd_hdr, %struct.mtip_cmd_hdr* %89, i32 0, i32 1, !dbg !14549
  %byte_count = bitcast %union.anon.94* %90 to i32*, !dbg !14549
  store i32 0, i32* %byte_count, align 4, !dbg !14550
  %91 = load i32, i32* %dma_dir, align 4, !dbg !14551
  %92 = load %struct.mtip_cmd*, %struct.mtip_cmd** %command.addr, align 8, !dbg !14552
  %direction = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %92, i32 0, i32 6, !dbg !14553
  store i32 %91, i32* %direction, align 4, !dbg !14554
  %93 = load %struct.mtip_port*, %struct.mtip_port** %port1, align 8, !dbg !14555
  %flags66 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %93, i32 0, i32 22, !dbg !14555
  %94 = load i64, i64* %flags66, align 8, !dbg !14555
  %and67 = and i64 %94, 527, !dbg !14555
  %tobool68 = icmp ne i64 %and67, 0, !dbg !14555
  %lnot69 = xor i1 %tobool68, true, !dbg !14555
  %lnot71 = xor i1 %lnot69, true, !dbg !14555
  %lnot.ext72 = zext i1 %lnot71 to i32, !dbg !14555
  %conv73 = sext i32 %lnot.ext72 to i64, !dbg !14555
  %tobool74 = icmp ne i64 %conv73, 0, !dbg !14555
  br i1 %tobool74, label %if.then75, label %if.end80, !dbg !14557

if.then75:                                        ; preds = %if.end61
  %95 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14558
  %tag76 = getelementptr inbounds %struct.request, %struct.request* %95, i32 0, i32 5, !dbg !14560
  %96 = load i32, i32* %tag76, align 8, !dbg !14560
  %conv77 = sext i32 %96 to i64, !dbg !14558
  %97 = load %struct.mtip_port*, %struct.mtip_port** %port1, align 8, !dbg !14561
  %cmds_to_issue = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %97, i32 0, i32 20, !dbg !14562
  %arraydecay78 = getelementptr inbounds [4 x i64], [4 x i64]* %cmds_to_issue, i64 0, i64 0, !dbg !14561
  call void @set_bit(i64 %conv77, i64* %arraydecay78) #12, !dbg !14563
  %98 = load %struct.mtip_port*, %struct.mtip_port** %port1, align 8, !dbg !14564
  %flags79 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %98, i32 0, i32 22, !dbg !14565
  call void @set_bit(i64 5, i64* %flags79) #12, !dbg !14566
  br label %return, !dbg !14567

if.end80:                                         ; preds = %if.end61
  %99 = load %struct.mtip_port*, %struct.mtip_port** %port1, align 8, !dbg !14568
  %100 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14569
  %tag81 = getelementptr inbounds %struct.request, %struct.request* %100, i32 0, i32 5, !dbg !14570
  %101 = load i32, i32* %tag81, align 8, !dbg !14570
  call void @mtip_issue_ncq_command(%struct.mtip_port* %99, i32 %101) #12, !dbg !14571
  br label %return, !dbg !14572

return:                                           ; preds = %if.end80, %if.then75
  ret void, !dbg !14572
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @blk_rq_is_scsi(%struct.request* %rq) #2 !dbg !14573 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !14574, metadata !DIExpression()), !dbg !14575
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14576
  %cmd_flags = getelementptr inbounds %struct.request, %struct.request* %0, i32 0, i32 3, !dbg !14576
  %1 = load i32, i32* %cmd_flags, align 8, !dbg !14576
  %and = and i32 %1, 255, !dbg !14576
  %call = call zeroext i1 @blk_op_is_scsi(i32 %and) #12, !dbg !14577
  ret i1 %call, !dbg !14578
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @blk_rq_is_private(%struct.request* %rq) #2 !dbg !14579 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !14580, metadata !DIExpression()), !dbg !14581
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14582
  %cmd_flags = getelementptr inbounds %struct.request, %struct.request* %0, i32 0, i32 3, !dbg !14582
  %1 = load i32, i32* %cmd_flags, align 8, !dbg !14582
  %and = and i32 %1, 255, !dbg !14582
  %call = call zeroext i1 @blk_op_is_private(i32 %and) #12, !dbg !14583
  ret i1 %call, !dbg !14584
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @blk_op_is_scsi(i32 %op) #2 !dbg !14585 {
entry:
  %op.addr = alloca i32, align 4
  store i32 %op, i32* %op.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %op.addr, metadata !14588, metadata !DIExpression()), !dbg !14589
  %0 = load i32, i32* %op.addr, align 4, !dbg !14590
  %cmp = icmp eq i32 %0, 32, !dbg !14591
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !14592

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %op.addr, align 4, !dbg !14593
  %cmp1 = icmp eq i32 %1, 33, !dbg !14594
  br label %lor.end, !dbg !14592

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !14595
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @blk_op_is_private(i32 %op) #2 !dbg !14596 {
entry:
  %op.addr = alloca i32, align 4
  store i32 %op, i32* %op.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %op.addr, metadata !14597, metadata !DIExpression()), !dbg !14598
  %0 = load i32, i32* %op.addr, align 4, !dbg !14599
  %cmp = icmp eq i32 %0, 34, !dbg !14600
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !14601

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %op.addr, align 4, !dbg !14602
  %cmp1 = icmp eq i32 %1, 35, !dbg !14603
  br label %lor.end, !dbg !14601

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !14604
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mtip_issue_non_ncq_command(%struct.mtip_port* %port, i32 %tag) #2 !dbg !14605 {
entry:
  %port.addr = alloca %struct.mtip_port*, align 8
  %tag.addr = alloca i32, align 4
  store %struct.mtip_port* %port, %struct.mtip_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mtip_port** %port.addr, metadata !14608, metadata !DIExpression()), !dbg !14609
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !14610, metadata !DIExpression()), !dbg !14611
  %0 = load i32, i32* %tag.addr, align 4, !dbg !14612
  %and = and i32 %0, 31, !dbg !14612
  %shl = shl i32 1, %and, !dbg !14613
  %1 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !14614
  %cmd_issue = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %1, i32 0, i32 5, !dbg !14615
  %2 = load i32, i32* %tag.addr, align 4, !dbg !14616
  %shr = ashr i32 %2, 5, !dbg !14616
  %idxprom = sext i32 %shr to i64, !dbg !14614
  %arrayidx = getelementptr [8 x i8*], [8 x i8*]* %cmd_issue, i64 0, i64 %idxprom, !dbg !14614
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !14614
  call void @writel(i32 %shl, i8* %3) #12, !dbg !14617
  ret void, !dbg !14618
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @op_is_write(i32 %op) #2 !dbg !14619 {
entry:
  %op.addr = alloca i32, align 4
  store i32 %op, i32* %op.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %op.addr, metadata !14620, metadata !DIExpression()), !dbg !14621
  %0 = load i32, i32* %op.addr, align 4, !dbg !14622
  %and = and i32 %0, 1, !dbg !14623
  %tobool = icmp ne i32 %and, 0, !dbg !14624
  ret i1 %tobool, !dbg !14625
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @blk_rq_sectors(%struct.request* %rq) #2 !dbg !14626 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !14631, metadata !DIExpression()), !dbg !14632
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14633
  %call = call i32 @blk_rq_bytes(%struct.request* %0) #12, !dbg !14634
  %shr = lshr i32 %call, 9, !dbg !14635
  ret i32 %shr, !dbg !14636
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @blk_rq_pos(%struct.request* %rq) #2 !dbg !14637 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !14640, metadata !DIExpression()), !dbg !14641
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14642
  %__sector = getelementptr inbounds %struct.request, %struct.request* %0, i32 0, i32 8, !dbg !14643
  %1 = load i64, i64* %__sector, align 8, !dbg !14643
  ret i64 %1, !dbg !14644
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @blk_rq_bytes(%struct.request* %rq) #2 !dbg !14645 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !14646, metadata !DIExpression()), !dbg !14647
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14648
  %__data_len = getelementptr inbounds %struct.request, %struct.request* %0, i32 0, i32 7, !dbg !14649
  %1 = load i32, i32* %__data_len, align 8, !dbg !14649
  ret i32 %1, !dbg !14650
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @blk_rq_map_sg(%struct.request_queue* %q, %struct.request* %rq, %struct.scatterlist* %sglist) #2 !dbg !14651 {
entry:
  %q.addr = alloca %struct.request_queue*, align 8
  %rq.addr = alloca %struct.request*, align 8
  %sglist.addr = alloca %struct.scatterlist*, align 8
  %last_sg = alloca %struct.scatterlist*, align 8
  store %struct.request_queue* %q, %struct.request_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q.addr, metadata !14655, metadata !DIExpression()), !dbg !14656
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !14657, metadata !DIExpression()), !dbg !14658
  store %struct.scatterlist* %sglist, %struct.scatterlist** %sglist.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sglist.addr, metadata !14659, metadata !DIExpression()), !dbg !14660
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %last_sg, metadata !14661, metadata !DIExpression()), !dbg !14662
  store %struct.scatterlist* null, %struct.scatterlist** %last_sg, align 8, !dbg !14662
  %0 = load %struct.request_queue*, %struct.request_queue** %q.addr, align 8, !dbg !14663
  %1 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !14664
  %2 = load %struct.scatterlist*, %struct.scatterlist** %sglist.addr, align 8, !dbg !14665
  %call = call i32 @__blk_rq_map_sg(%struct.request_queue* %0, %struct.request* %1, %struct.scatterlist* %2, %struct.scatterlist** %last_sg) #12, !dbg !14666
  ret i32 %call, !dbg !14667
}

; Function Attrs: noredzone
declare dso_local i32 @dma_map_sg_attrs(%struct.device*, %struct.scatterlist*, i32, i32, i64) #1

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #9

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fill_command_sg(%struct.driver_data* %dd, %struct.mtip_cmd* %command, i32 %nents) #2 !dbg !14668 {
entry:
  %dd.addr = alloca %struct.driver_data*, align 8
  %command.addr = alloca %struct.mtip_cmd*, align 8
  %nents.addr = alloca i32, align 4
  %n = alloca i32, align 4
  %dma_len = alloca i32, align 4
  %command_sg = alloca %struct.mtip_cmd_sg*, align 8
  %sg = alloca %struct.scatterlist*, align 8
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !14671, metadata !DIExpression()), !dbg !14672
  store %struct.mtip_cmd* %command, %struct.mtip_cmd** %command.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mtip_cmd** %command.addr, metadata !14673, metadata !DIExpression()), !dbg !14674
  store i32 %nents, i32* %nents.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nents.addr, metadata !14675, metadata !DIExpression()), !dbg !14676
  call void @llvm.dbg.declare(metadata i32* %n, metadata !14677, metadata !DIExpression()), !dbg !14678
  call void @llvm.dbg.declare(metadata i32* %dma_len, metadata !14679, metadata !DIExpression()), !dbg !14680
  call void @llvm.dbg.declare(metadata %struct.mtip_cmd_sg** %command_sg, metadata !14681, metadata !DIExpression()), !dbg !14682
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg, metadata !14683, metadata !DIExpression()), !dbg !14684
  %0 = load %struct.mtip_cmd*, %struct.mtip_cmd** %command.addr, align 8, !dbg !14685
  %command1 = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %0, i32 0, i32 0, !dbg !14686
  %1 = load i8*, i8** %command1, align 8, !dbg !14686
  %add.ptr = getelementptr i8, i8* %1, i64 128, !dbg !14687
  %2 = bitcast i8* %add.ptr to %struct.mtip_cmd_sg*, !dbg !14685
  store %struct.mtip_cmd_sg* %2, %struct.mtip_cmd_sg** %command_sg, align 8, !dbg !14688
  store i32 0, i32* %n, align 4, !dbg !14689
  %3 = load %struct.mtip_cmd*, %struct.mtip_cmd** %command.addr, align 8, !dbg !14689
  %4 = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %3, i32 0, i32 4, !dbg !14689
  %sg2 = bitcast %union.anon.85* %4 to [504 x %struct.scatterlist]*, !dbg !14689
  %arraydecay = getelementptr inbounds [504 x %struct.scatterlist], [504 x %struct.scatterlist]* %sg2, i64 0, i64 0, !dbg !14689
  store %struct.scatterlist* %arraydecay, %struct.scatterlist** %sg, align 8, !dbg !14689
  br label %for.cond, !dbg !14689

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %n, align 4, !dbg !14691
  %6 = load i32, i32* %nents.addr, align 4, !dbg !14691
  %cmp = icmp slt i32 %5, %6, !dbg !14691
  br i1 %cmp, label %for.body, label %for.end, !dbg !14689

for.body:                                         ; preds = %for.cond
  %7 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !14693
  %dma_length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %7, i32 0, i32 4, !dbg !14693
  %8 = load i32, i32* %dma_length, align 8, !dbg !14693
  store i32 %8, i32* %dma_len, align 4, !dbg !14695
  %9 = load i32, i32* %dma_len, align 4, !dbg !14696
  %cmp3 = icmp ugt i32 %9, 4194304, !dbg !14698
  br i1 %cmp3, label %if.then, label %if.end, !dbg !14699

if.then:                                          ; preds = %for.body
  %10 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !14700
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %10, i32 0, i32 4, !dbg !14700
  %11 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !14700
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 41, !dbg !14700
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.71, i64 0, i64 0)) #13, !dbg !14700
  br label %if.end, !dbg !14700

if.end:                                           ; preds = %if.then, %for.body
  %12 = load i32, i32* %dma_len, align 4, !dbg !14701
  %sub = sub i32 %12, 1, !dbg !14701
  %and = and i32 %sub, 4194303, !dbg !14701
  %13 = load %struct.mtip_cmd_sg*, %struct.mtip_cmd_sg** %command_sg, align 8, !dbg !14702
  %info = getelementptr inbounds %struct.mtip_cmd_sg, %struct.mtip_cmd_sg* %13, i32 0, i32 3, !dbg !14703
  store i32 %and, i32* %info, align 4, !dbg !14704
  %14 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !14705
  %dma_address = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %14, i32 0, i32 3, !dbg !14705
  %15 = load i64, i64* %dma_address, align 8, !dbg !14705
  %conv = trunc i64 %15 to i32, !dbg !14705
  %16 = load %struct.mtip_cmd_sg*, %struct.mtip_cmd_sg** %command_sg, align 8, !dbg !14706
  %dba = getelementptr inbounds %struct.mtip_cmd_sg, %struct.mtip_cmd_sg* %16, i32 0, i32 0, !dbg !14707
  store i32 %conv, i32* %dba, align 4, !dbg !14708
  %17 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !14709
  %dma_address4 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %17, i32 0, i32 3, !dbg !14709
  %18 = load i64, i64* %dma_address4, align 8, !dbg !14709
  %shr = lshr i64 %18, 16, !dbg !14709
  %shr5 = lshr i64 %shr, 16, !dbg !14709
  %conv6 = trunc i64 %shr5 to i32, !dbg !14709
  %19 = load %struct.mtip_cmd_sg*, %struct.mtip_cmd_sg** %command_sg, align 8, !dbg !14710
  %dba_upper = getelementptr inbounds %struct.mtip_cmd_sg, %struct.mtip_cmd_sg* %19, i32 0, i32 1, !dbg !14711
  store i32 %conv6, i32* %dba_upper, align 4, !dbg !14712
  %20 = load %struct.mtip_cmd_sg*, %struct.mtip_cmd_sg** %command_sg, align 8, !dbg !14713
  %incdec.ptr = getelementptr %struct.mtip_cmd_sg, %struct.mtip_cmd_sg* %20, i32 1, !dbg !14713
  store %struct.mtip_cmd_sg* %incdec.ptr, %struct.mtip_cmd_sg** %command_sg, align 8, !dbg !14713
  br label %for.inc, !dbg !14714

for.inc:                                          ; preds = %if.end
  %21 = load i32, i32* %n, align 4, !dbg !14691
  %inc = add i32 %21, 1, !dbg !14691
  store i32 %inc, i32* %n, align 4, !dbg !14691
  %22 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !14691
  %call = call %struct.scatterlist* @sg_next(%struct.scatterlist* %22) #12, !dbg !14691
  store %struct.scatterlist* %call, %struct.scatterlist** %sg, align 8, !dbg !14691
  br label %for.cond, !dbg !14691, !llvm.loop !14715

for.end:                                          ; preds = %for.cond
  ret void, !dbg !14717
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mtip_issue_ncq_command(%struct.mtip_port* %port, i32 %tag) #2 !dbg !14718 {
entry:
  %lock.addr.i12 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i12, metadata !14719, metadata !DIExpression()), !dbg !14723
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !14725, metadata !DIExpression()), !dbg !14727
  %port.addr = alloca %struct.mtip_port*, align 8
  %tag.addr = alloca i32, align 4
  %group = alloca i32, align 4
  store %struct.mtip_port* %port, %struct.mtip_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mtip_port** %port.addr, metadata !14729, metadata !DIExpression()), !dbg !14730
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !14731, metadata !DIExpression()), !dbg !14732
  call void @llvm.dbg.declare(metadata i32* %group, metadata !14733, metadata !DIExpression()), !dbg !14734
  %0 = load i32, i32* %tag.addr, align 4, !dbg !14735
  %shr = ashr i32 %0, 5, !dbg !14736
  store i32 %shr, i32* %group, align 4, !dbg !14734
  %1 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !14737
  %cmd_issue_lock = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %1, i32 0, i32 25, !dbg !14738
  %2 = load i32, i32* %group, align 4, !dbg !14739
  %idxprom = sext i32 %2 to i64, !dbg !14737
  %arrayidx = getelementptr [8 x %struct.spinlock], [8 x %struct.spinlock]* %cmd_issue_lock, i64 0, i64 %idxprom, !dbg !14737
  store %struct.spinlock* %arrayidx, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !14740, !srcloc !14742
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !14743
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !14743
  %rlock.i = bitcast %union.anon.1* %4 to %struct.raw_spinlock*, !dbg !14743
  %5 = load i32, i32* %tag.addr, align 4, !dbg !14745
  %and = and i32 %5, 31, !dbg !14745
  %shl = shl i32 1, %and, !dbg !14746
  %6 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !14747
  %s_active = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %6, i32 0, i32 3, !dbg !14748
  %7 = load i32, i32* %tag.addr, align 4, !dbg !14749
  %shr1 = ashr i32 %7, 5, !dbg !14749
  %idxprom2 = sext i32 %shr1 to i64, !dbg !14747
  %arrayidx3 = getelementptr [8 x i8*], [8 x i8*]* %s_active, i64 0, i64 %idxprom2, !dbg !14747
  %8 = load i8*, i8** %arrayidx3, align 8, !dbg !14747
  call void @writel(i32 %shl, i8* %8) #12, !dbg !14750
  %9 = load i32, i32* %tag.addr, align 4, !dbg !14751
  %and4 = and i32 %9, 31, !dbg !14751
  %shl5 = shl i32 1, %and4, !dbg !14752
  %10 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !14753
  %cmd_issue = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %10, i32 0, i32 5, !dbg !14754
  %11 = load i32, i32* %tag.addr, align 4, !dbg !14755
  %shr6 = ashr i32 %11, 5, !dbg !14755
  %idxprom7 = sext i32 %shr6 to i64, !dbg !14753
  %arrayidx8 = getelementptr [8 x i8*], [8 x i8*]* %cmd_issue, i64 0, i64 %idxprom7, !dbg !14753
  %12 = load i8*, i8** %arrayidx8, align 8, !dbg !14753
  call void @writel(i32 %shl5, i8* %12) #12, !dbg !14756
  %13 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !14757
  %cmd_issue_lock9 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %13, i32 0, i32 25, !dbg !14758
  %14 = load i32, i32* %group, align 4, !dbg !14759
  %idxprom10 = sext i32 %14 to i64, !dbg !14757
  %arrayidx11 = getelementptr [8 x %struct.spinlock], [8 x %struct.spinlock]* %cmd_issue_lock9, i64 0, i64 %idxprom10, !dbg !14757
  store %struct.spinlock* %arrayidx11, %struct.spinlock** %lock.addr.i12, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !14760, !srcloc !14762
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i12, align 8, !dbg !14763
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !14763
  %rlock.i13 = bitcast %union.anon.1* %16 to %struct.raw_spinlock*, !dbg !14763
  ret void, !dbg !14765
}

; Function Attrs: noredzone
declare dso_local i32 @__blk_rq_map_sg(%struct.request_queue*, %struct.request*, %struct.scatterlist*, %struct.scatterlist**) #1

; Function Attrs: noredzone
declare dso_local %struct.scatterlist* @sg_next(%struct.scatterlist*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_set_bit(i64 %nr, i64* %addr) #2 !dbg !14766 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !14769, metadata !DIExpression()), !dbg !14771
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !14773, metadata !DIExpression()), !dbg !14774
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !14775, metadata !DIExpression()), !dbg !14777
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !8389, metadata !DIExpression()), !dbg !14778
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8393, metadata !DIExpression()), !dbg !14780
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !14781, metadata !DIExpression()), !dbg !14782
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !14783, metadata !DIExpression()), !dbg !14784
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !14785
  %1 = load i64, i64* %nr.addr, align 8, !dbg !14786
  %div = sdiv i64 %1, 64, !dbg !14786
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !14787
  %2 = bitcast i64* %add.ptr to i8*, !dbg !14785
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !14788
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !14789
  %conv.i = trunc i64 %4 to i32, !dbg !14789
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #14, !dbg !14790
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !14791
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !14791
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #14, !dbg !14791
  %7 = load i64, i64* %nr.addr, align 8, !dbg !14792
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !14793
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !14777
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !14777
  %11 = call i8 asm sideeffect " btsq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #11, !dbg !14777, !srcloc !14794
  store i8 %11, i8* %c.i, align 1, !dbg !14777
  %12 = load i8, i8* %c.i, align 1, !dbg !14777
  %tobool.i = trunc i8 %12 to i1, !dbg !14777
  %frombool.i = zext i1 %tobool.i to i8, !dbg !14777
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !14777
  %13 = load i8, i8* %tmp.i, align 1, !dbg !14777
  %tobool1.i = trunc i8 %13 to i1, !dbg !14777
  ret i1 %tobool1.i, !dbg !14795
}

; Function Attrs: noredzone
declare dso_local void @dma_unmap_sg_attrs(%struct.device*, %struct.scatterlist*, i32, i32, i64) #1

; Function Attrs: noredzone
declare dso_local void @blk_mq_end_request(%struct.request*, i8 zeroext) #1

; Function Attrs: noredzone
declare dso_local void @sg_init_table(%struct.scatterlist*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_get_identify(%struct.mtip_port* %port, i8* %user_buffer) #2 !dbg !14796 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !10825, metadata !DIExpression()), !dbg !14799
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !10841, metadata !DIExpression()), !dbg !14805
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !10843, metadata !DIExpression()), !dbg !14806
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !10845, metadata !DIExpression()), !dbg !14807
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !10847, metadata !DIExpression()), !dbg !14808
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !10851, metadata !DIExpression()), !dbg !14809
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !10853, metadata !DIExpression()), !dbg !14810
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !10855, metadata !DIExpression()), !dbg !14811
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.mtip_port*, align 8
  %user_buffer.addr = alloca i8*, align 8
  %rv = alloca i32, align 4
  %fis = alloca %struct.host_to_dev_fis, align 4
  store %struct.mtip_port* %port, %struct.mtip_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mtip_port** %port.addr, metadata !14812, metadata !DIExpression()), !dbg !14813
  store i8* %user_buffer, i8** %user_buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %user_buffer.addr, metadata !14814, metadata !DIExpression()), !dbg !14815
  call void @llvm.dbg.declare(metadata i32* %rv, metadata !14816, metadata !DIExpression()), !dbg !14817
  store i32 0, i32* %rv, align 4, !dbg !14817
  call void @llvm.dbg.declare(metadata %struct.host_to_dev_fis* %fis, metadata !14818, metadata !DIExpression()), !dbg !14819
  %0 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !14820
  %dd = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %0, i32 0, i32 0, !dbg !14822
  %1 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !14822
  %dd_flag = getelementptr inbounds %struct.driver_data, %struct.driver_data* %1, i32 0, i32 11, !dbg !14823
  %call = call zeroext i1 @test_bit(i64 1, i64* %dd_flag) #12, !dbg !14824
  br i1 %call, label %if.then, label %if.end, !dbg !14825

if.then:                                          ; preds = %entry
  store i32 -14, i32* %retval, align 4, !dbg !14826
  br label %return, !dbg !14826

if.end:                                           ; preds = %entry
  %2 = bitcast %struct.host_to_dev_fis* %fis to i8*, !dbg !14827
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 20, i1 false), !dbg !14827
  %type = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 0, !dbg !14828
  store i8 39, i8* %type, align 4, !dbg !14829
  %opts = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 1, !dbg !14830
  store i8 -128, i8* %opts, align 1, !dbg !14831
  %command = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 2, !dbg !14832
  store i8 -20, i8* %command, align 2, !dbg !14833
  %3 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !14834
  %identify_valid = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %3, i32 0, i32 1, !dbg !14835
  store i64 0, i64* %identify_valid, align 8, !dbg !14836
  %4 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !14837
  %identify = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %4, i32 0, i32 12, !dbg !14838
  %5 = load i16*, i16** %identify, align 8, !dbg !14838
  %6 = bitcast i16* %5 to i8*, !dbg !14839
  call void @llvm.memset.p0i8.i64(i8* align 2 %6, i8 0, i64 512, i1 false), !dbg !14839
  %7 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !14840
  %8 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !14842
  %identify_dma = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %8, i32 0, i32 13, !dbg !14843
  %9 = load i64, i64* %identify_dma, align 8, !dbg !14843
  %call1 = call i32 @mtip_exec_internal_command(%struct.mtip_port* %7, %struct.host_to_dev_fis* %fis, i32 5, i64 %9, i32 512, i32 0, i64 5000) #12, !dbg !14844
  %cmp = icmp slt i32 %call1, 0, !dbg !14845
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !14846

if.then2:                                         ; preds = %if.end
  store i32 -1, i32* %rv, align 4, !dbg !14847
  br label %out, !dbg !14849

if.end3:                                          ; preds = %if.end
  %10 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !14850
  %identify4 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %10, i32 0, i32 12, !dbg !14851
  %11 = load i16*, i16** %identify4, align 8, !dbg !14851
  %add.ptr = getelementptr i16, i16* %11, i64 27, !dbg !14852
  call void @ata_swap_string(i16* %add.ptr, i32 40) #12, !dbg !14853
  %12 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !14854
  %identify5 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %12, i32 0, i32 12, !dbg !14855
  %13 = load i16*, i16** %identify5, align 8, !dbg !14855
  %add.ptr6 = getelementptr i16, i16* %13, i64 23, !dbg !14856
  call void @ata_swap_string(i16* %add.ptr6, i32 8) #12, !dbg !14857
  %14 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !14858
  %identify7 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %14, i32 0, i32 12, !dbg !14859
  %15 = load i16*, i16** %identify7, align 8, !dbg !14859
  %add.ptr8 = getelementptr i16, i16* %15, i64 10, !dbg !14860
  call void @ata_swap_string(i16* %add.ptr8, i32 20) #12, !dbg !14861
  %16 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !14862
  %identify9 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %16, i32 0, i32 12, !dbg !14864
  %17 = load i16*, i16** %identify9, align 8, !dbg !14864
  %arrayidx = getelementptr i16, i16* %17, i64 128, !dbg !14862
  %18 = load i16, i16* %arrayidx, align 2, !dbg !14862
  %conv = zext i16 %18 to i32, !dbg !14862
  %and = and i32 %conv, 4, !dbg !14865
  %tobool = icmp ne i32 %and, 0, !dbg !14865
  br i1 %tobool, label %if.then10, label %if.else, !dbg !14866

if.then10:                                        ; preds = %if.end3
  %19 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !14867
  %dd11 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %19, i32 0, i32 0, !dbg !14868
  %20 = load %struct.driver_data*, %struct.driver_data** %dd11, align 8, !dbg !14868
  %dd_flag12 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %20, i32 0, i32 11, !dbg !14869
  call void @set_bit(i64 0, i64* %dd_flag12) #12, !dbg !14870
  br label %if.end15, !dbg !14870

if.else:                                          ; preds = %if.end3
  %21 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !14871
  %dd13 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %21, i32 0, i32 0, !dbg !14872
  %22 = load %struct.driver_data*, %struct.driver_data** %dd13, align 8, !dbg !14872
  %dd_flag14 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %22, i32 0, i32 11, !dbg !14873
  call void @clear_bit(i64 0, i64* %dd_flag14) #12, !dbg !14874
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then10
  %23 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !14875
  %identify_valid16 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %23, i32 0, i32 1, !dbg !14876
  store i64 1, i64* %identify_valid16, align 8, !dbg !14877
  %24 = load i8*, i8** %user_buffer.addr, align 8, !dbg !14878
  %tobool17 = icmp ne i8* %24, null, !dbg !14878
  br i1 %tobool17, label %if.then18, label %if.end24, !dbg !14879

if.then18:                                        ; preds = %if.end15
  %25 = load i8*, i8** %user_buffer.addr, align 8, !dbg !14880
  %26 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !14881
  %identify19 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %26, i32 0, i32 12, !dbg !14882
  %27 = load i16*, i16** %identify19, align 8, !dbg !14882
  %28 = bitcast i16* %27 to i8*, !dbg !14881
  store i8* %25, i8** %to.addr.i, align 8
  store i8* %28, i8** %from.addr.i, align 8
  store i64 512, i64* %n.addr.i, align 8
  %29 = load i8*, i8** %from.addr.i, align 8, !dbg !14883
  %30 = load i64, i64* %n.addr.i, align 8, !dbg !14883
  store i8* %29, i8** %addr.addr.i.i, align 8
  store i64 %30, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !14807
  %31 = load i32, i32* %sz.i.i, align 4, !dbg !14884
  %cmp.i.i = icmp sge i32 %31, 0, !dbg !14884
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !14884

land.rhs.i.i:                                     ; preds = %if.then18
  %32 = load i32, i32* %sz.i.i, align 4, !dbg !14884
  %conv.i.i = sext i32 %32 to i64, !dbg !14884
  %33 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !14884
  %cmp1.i.i = icmp ult i64 %conv.i.i, %33, !dbg !14884
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.then18
  %34 = phi i1 [ false, %if.then18 ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !14885
  %lnot.i.i = xor i1 %34, true, !dbg !14884
  %lnot.ext.i.i = zext i1 %34 to i32, !dbg !14884
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !14884
  br i1 %34, label %if.then.i.i, label %if.end10.i.i, !dbg !14886

if.then.i.i:                                      ; preds = %land.end.i.i
  %35 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !14887
  %36 = call i1 @llvm.is.constant.i64(i64 %35) #11, !dbg !14888
  br i1 %36, label %if.else.i.i, label %if.then5.i.i, !dbg !14889

if.then5.i.i:                                     ; preds = %if.then.i.i
  %37 = load i32, i32* %sz.i.i, align 4, !dbg !14890
  %38 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !14891
  call void @copy_overflow(i32 %37, i64 %38) #14, !dbg !14892
  br label %if.end9.i.i, !dbg !14892

if.else.i.i:                                      ; preds = %if.then.i.i
  %39 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !14893
  %tobool6.i.i = trunc i8 %39 to i1, !dbg !14893
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !14894

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #14, !dbg !14895
  br label %if.end.i.i, !dbg !14895

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #14, !dbg !14896
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !14897
  br label %check_copy_size.exit.i, !dbg !14897

if.end10.i.i:                                     ; preds = %land.end.i.i
  %40 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !14808
  %cmp11.i.i = icmp ugt i64 %40, 2147483647, !dbg !14808
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !14808
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !14808
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !14808
  %41 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !14898
  %tobool17.i.i = icmp ne i32 %41, 0, !dbg !14898
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !14898
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !14898
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !14898
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !14808

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.40, i64 0, i64 0), i32 150, i32 2307, i64 12) #11, !dbg !14899, !srcloc !10968
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #11, !dbg !14900, !srcloc !10971
  br label %if.end31.i.i, !dbg !14901

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %42 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !14808
  %tobool32.i.i = icmp ne i32 %42, 0, !dbg !14808
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !14808
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !14808
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !14808
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !14898
  %43 = load i64, i64* %tmp.i.i, align 8, !dbg !14808
  %tobool38.i.i = icmp ne i64 %43, 0, !dbg !14902
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !14903

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !14904
  br label %check_copy_size.exit.i, !dbg !14904

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %44 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !14905
  %45 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !14906
  %46 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !14907
  %tobool41.i.i = trunc i8 %46 to i1, !dbg !14907
  call void @check_object_size(i8* %44, i64 %45, i1 zeroext %tobool41.i.i) #14, !dbg !14908
  store i1 true, i1* %retval.i.i, align 1, !dbg !14909
  br label %check_copy_size.exit.i, !dbg !14909

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %47 = load i1, i1* %retval.i.i, align 1, !dbg !14910
  %lnot.i = xor i1 %47, true, !dbg !14883
  %lnot.ext.i = zext i1 %47 to i32, !dbg !14883
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !14883
  br i1 %47, label %if.then.i, label %copy_to_user.exit, !dbg !14911

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %48 = load i8*, i8** %to.addr.i, align 8, !dbg !14912
  %49 = load i8*, i8** %from.addr.i, align 8, !dbg !14913
  %50 = load i64, i64* %n.addr.i, align 8, !dbg !14914
  %call2.i = call i64 @_copy_to_user(i8* %48, i8* %49, i64 %50) #14, !dbg !14915
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !14916
  br label %copy_to_user.exit, !dbg !14917

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %51 = load i64, i64* %n.addr.i, align 8, !dbg !14918
  %tobool21 = icmp ne i64 %51, 0, !dbg !14919
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !14920

if.then22:                                        ; preds = %copy_to_user.exit
  store i32 -14, i32* %rv, align 4, !dbg !14921
  br label %out, !dbg !14923

if.end23:                                         ; preds = %copy_to_user.exit
  br label %if.end24, !dbg !14924

if.end24:                                         ; preds = %if.end23, %if.end15
  br label %out, !dbg !14878

out:                                              ; preds = %if.end24, %if.then22, %if.then2
  call void @llvm.dbg.label(metadata !14925), !dbg !14926
  %52 = load i32, i32* %rv, align 4, !dbg !14927
  store i32 %52, i32* %retval, align 4, !dbg !14928
  br label %return, !dbg !14928

return:                                           ; preds = %out, %if.then
  %53 = load i32, i32* %retval, align 4, !dbg !14929
  ret i32 %53, !dbg !14929
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mtip_dump_identify(%struct.mtip_port* %port) #2 !dbg !14930 {
entry:
  %port.addr = alloca %struct.mtip_port*, align 8
  %sectors = alloca i64, align 8
  %revid = alloca i16, align 2
  %cbuf = alloca [42 x i8], align 16
  store %struct.mtip_port* %port, %struct.mtip_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mtip_port** %port.addr, metadata !14931, metadata !DIExpression()), !dbg !14932
  call void @llvm.dbg.declare(metadata i64* %sectors, metadata !14933, metadata !DIExpression()), !dbg !14934
  call void @llvm.dbg.declare(metadata i16* %revid, metadata !14935, metadata !DIExpression()), !dbg !14936
  call void @llvm.dbg.declare(metadata [42 x i8]* %cbuf, metadata !14937, metadata !DIExpression()), !dbg !14941
  %0 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !14942
  %identify_valid = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %0, i32 0, i32 1, !dbg !14944
  %1 = load i64, i64* %identify_valid, align 8, !dbg !14944
  %tobool = icmp ne i64 %1, 0, !dbg !14942
  br i1 %tobool, label %if.end, label %if.then, !dbg !14945

if.then:                                          ; preds = %entry
  br label %return, !dbg !14946

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [42 x i8], [42 x i8]* %cbuf, i64 0, i64 0, !dbg !14947
  %2 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !14948
  %identify = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %2, i32 0, i32 12, !dbg !14949
  %3 = load i16*, i16** %identify, align 8, !dbg !14949
  %add.ptr = getelementptr i16, i16* %3, i64 10, !dbg !14950
  %4 = bitcast i16* %add.ptr to i8*, !dbg !14951
  %call = call i64 @strlcpy(i8* %arraydecay, i8* %4, i64 21) #12, !dbg !14952
  %5 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !14953
  %dd = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %5, i32 0, i32 0, !dbg !14953
  %6 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !14953
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %6, i32 0, i32 4, !dbg !14953
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !14953
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 41, !dbg !14953
  %arraydecay1 = getelementptr inbounds [42 x i8], [42 x i8]* %cbuf, i64 0, i64 0, !dbg !14953
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.78, i64 0, i64 0), i8* %arraydecay1) #13, !dbg !14953
  %arraydecay2 = getelementptr inbounds [42 x i8], [42 x i8]* %cbuf, i64 0, i64 0, !dbg !14954
  %8 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !14955
  %identify3 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %8, i32 0, i32 12, !dbg !14956
  %9 = load i16*, i16** %identify3, align 8, !dbg !14956
  %add.ptr4 = getelementptr i16, i16* %9, i64 23, !dbg !14957
  %10 = bitcast i16* %add.ptr4 to i8*, !dbg !14958
  %call5 = call i64 @strlcpy(i8* %arraydecay2, i8* %10, i64 9) #12, !dbg !14959
  %11 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !14960
  %dd6 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %11, i32 0, i32 0, !dbg !14960
  %12 = load %struct.driver_data*, %struct.driver_data** %dd6, align 8, !dbg !14960
  %pdev7 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %12, i32 0, i32 4, !dbg !14960
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pdev7, align 8, !dbg !14960
  %dev8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 41, !dbg !14960
  %arraydecay9 = getelementptr inbounds [42 x i8], [42 x i8]* %cbuf, i64 0, i64 0, !dbg !14960
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev8, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.79, i64 0, i64 0), i8* %arraydecay9) #13, !dbg !14960
  %arraydecay10 = getelementptr inbounds [42 x i8], [42 x i8]* %cbuf, i64 0, i64 0, !dbg !14961
  %14 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !14962
  %identify11 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %14, i32 0, i32 12, !dbg !14963
  %15 = load i16*, i16** %identify11, align 8, !dbg !14963
  %add.ptr12 = getelementptr i16, i16* %15, i64 27, !dbg !14964
  %16 = bitcast i16* %add.ptr12 to i8*, !dbg !14965
  %call13 = call i64 @strlcpy(i8* %arraydecay10, i8* %16, i64 41) #12, !dbg !14966
  %17 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !14967
  %dd14 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %17, i32 0, i32 0, !dbg !14967
  %18 = load %struct.driver_data*, %struct.driver_data** %dd14, align 8, !dbg !14967
  %pdev15 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %18, i32 0, i32 4, !dbg !14967
  %19 = load %struct.pci_dev*, %struct.pci_dev** %pdev15, align 8, !dbg !14967
  %dev16 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %19, i32 0, i32 41, !dbg !14967
  %arraydecay17 = getelementptr inbounds [42 x i8], [42 x i8]* %cbuf, i64 0, i64 0, !dbg !14967
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev16, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.80, i64 0, i64 0), i8* %arraydecay17) #13, !dbg !14967
  %20 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !14968
  %dd18 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %20, i32 0, i32 0, !dbg !14968
  %21 = load %struct.driver_data*, %struct.driver_data** %dd18, align 8, !dbg !14968
  %pdev19 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %21, i32 0, i32 4, !dbg !14968
  %22 = load %struct.pci_dev*, %struct.pci_dev** %pdev19, align 8, !dbg !14968
  %dev20 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %22, i32 0, i32 41, !dbg !14968
  %23 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !14968
  %identify21 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %23, i32 0, i32 12, !dbg !14968
  %24 = load i16*, i16** %identify21, align 8, !dbg !14968
  %arrayidx = getelementptr i16, i16* %24, i64 128, !dbg !14968
  %25 = load i16, i16* %arrayidx, align 2, !dbg !14968
  %conv = zext i16 %25 to i32, !dbg !14968
  %26 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !14968
  %identify22 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %26, i32 0, i32 12, !dbg !14968
  %27 = load i16*, i16** %identify22, align 8, !dbg !14968
  %arrayidx23 = getelementptr i16, i16* %27, i64 128, !dbg !14968
  %28 = load i16, i16* %arrayidx23, align 2, !dbg !14968
  %conv24 = zext i16 %28 to i32, !dbg !14968
  %and = and i32 %conv24, 4, !dbg !14968
  %tobool25 = icmp ne i32 %and, 0, !dbg !14968
  %29 = zext i1 %tobool25 to i64, !dbg !14968
  %cond = select i1 %tobool25, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.83, i64 0, i64 0), !dbg !14968
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev20, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.81, i64 0, i64 0), i32 %conv, i8* %cond) #13, !dbg !14968
  %30 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !14969
  %dd26 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %30, i32 0, i32 0, !dbg !14971
  %31 = load %struct.driver_data*, %struct.driver_data** %dd26, align 8, !dbg !14971
  %call27 = call zeroext i1 @mtip_hw_get_capacity(%struct.driver_data* %31, i64* %sectors) #12, !dbg !14972
  br i1 %call27, label %if.then28, label %if.end32, !dbg !14973

if.then28:                                        ; preds = %if.end
  %32 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !14974
  %dd29 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %32, i32 0, i32 0, !dbg !14974
  %33 = load %struct.driver_data*, %struct.driver_data** %dd29, align 8, !dbg !14974
  %pdev30 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %33, i32 0, i32 4, !dbg !14974
  %34 = load %struct.pci_dev*, %struct.pci_dev** %pdev30, align 8, !dbg !14974
  %dev31 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %34, i32 0, i32 41, !dbg !14974
  %35 = load i64, i64* %sectors, align 8, !dbg !14974
  %36 = load i64, i64* %sectors, align 8, !dbg !14974
  %mul = mul i64 %36, 512, !dbg !14974
  %shr = lshr i64 %mul, 20, !dbg !14974
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev31, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.84, i64 0, i64 0), i64 %35, i64 %shr) #13, !dbg !14974
  br label %if.end32, !dbg !14974

if.end32:                                         ; preds = %if.then28, %if.end
  %37 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !14975
  %dd33 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %37, i32 0, i32 0, !dbg !14976
  %38 = load %struct.driver_data*, %struct.driver_data** %dd33, align 8, !dbg !14976
  %pdev34 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %38, i32 0, i32 4, !dbg !14977
  %39 = load %struct.pci_dev*, %struct.pci_dev** %pdev34, align 8, !dbg !14977
  %call35 = call i32 @pci_read_config_word(%struct.pci_dev* %39, i32 8, i16* %revid) #12, !dbg !14978
  %40 = load i16, i16* %revid, align 2, !dbg !14979
  %conv36 = zext i16 %40 to i32, !dbg !14979
  %and37 = and i32 %conv36, 255, !dbg !14980
  switch i32 %and37, label %sw.default [
    i32 1, label %sw.bb
    i32 3, label %sw.bb40
  ], !dbg !14981

sw.bb:                                            ; preds = %if.end32
  %arraydecay38 = getelementptr inbounds [42 x i8], [42 x i8]* %cbuf, i64 0, i64 0, !dbg !14982
  %call39 = call i64 @strlcpy(i8* %arraydecay38, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.85, i64 0, i64 0), i64 3) #12, !dbg !14984
  br label %sw.epilog, !dbg !14985

sw.bb40:                                          ; preds = %if.end32
  %arraydecay41 = getelementptr inbounds [42 x i8], [42 x i8]* %cbuf, i64 0, i64 0, !dbg !14986
  %call42 = call i64 @strlcpy(i8* %arraydecay41, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.86, i64 0, i64 0), i64 3) #12, !dbg !14987
  br label %sw.epilog, !dbg !14988

sw.default:                                       ; preds = %if.end32
  %arraydecay43 = getelementptr inbounds [42 x i8], [42 x i8]* %cbuf, i64 0, i64 0, !dbg !14989
  %call44 = call i64 @strlcpy(i8* %arraydecay43, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.87, i64 0, i64 0), i64 2) #12, !dbg !14990
  br label %sw.epilog, !dbg !14991

sw.epilog:                                        ; preds = %sw.default, %sw.bb40, %sw.bb
  %41 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !14992
  %dd45 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %41, i32 0, i32 0, !dbg !14992
  %42 = load %struct.driver_data*, %struct.driver_data** %dd45, align 8, !dbg !14992
  %pdev46 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %42, i32 0, i32 4, !dbg !14992
  %43 = load %struct.pci_dev*, %struct.pci_dev** %pdev46, align 8, !dbg !14992
  %dev47 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %43, i32 0, i32 41, !dbg !14992
  %arraydecay48 = getelementptr inbounds [42 x i8], [42 x i8]* %cbuf, i64 0, i64 0, !dbg !14992
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev47, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.88, i64 0, i64 0), i8* %arraydecay48) #13, !dbg !14992
  br label %return, !dbg !14993

return:                                           ; preds = %sw.epilog, %if.then
  ret void, !dbg !14993
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_read_log_page(%struct.mtip_port* %port, i8 zeroext %page, i16* %buffer, i64 %buffer_dma, i32 %sectors) #2 !dbg !14994 {
entry:
  %port.addr = alloca %struct.mtip_port*, align 8
  %page.addr = alloca i8, align 1
  %buffer.addr = alloca i16*, align 8
  %buffer_dma.addr = alloca i64, align 8
  %sectors.addr = alloca i32, align 4
  %fis = alloca %struct.host_to_dev_fis, align 4
  store %struct.mtip_port* %port, %struct.mtip_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mtip_port** %port.addr, metadata !14997, metadata !DIExpression()), !dbg !14998
  store i8 %page, i8* %page.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %page.addr, metadata !14999, metadata !DIExpression()), !dbg !15000
  store i16* %buffer, i16** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %buffer.addr, metadata !15001, metadata !DIExpression()), !dbg !15002
  store i64 %buffer_dma, i64* %buffer_dma.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buffer_dma.addr, metadata !15003, metadata !DIExpression()), !dbg !15004
  store i32 %sectors, i32* %sectors.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sectors.addr, metadata !15005, metadata !DIExpression()), !dbg !15006
  call void @llvm.dbg.declare(metadata %struct.host_to_dev_fis* %fis, metadata !15007, metadata !DIExpression()), !dbg !15008
  %0 = bitcast %struct.host_to_dev_fis* %fis to i8*, !dbg !15009
  call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 20, i1 false), !dbg !15009
  %type = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 0, !dbg !15010
  store i8 39, i8* %type, align 4, !dbg !15011
  %opts = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 1, !dbg !15012
  store i8 -128, i8* %opts, align 1, !dbg !15013
  %command = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 2, !dbg !15014
  store i8 47, i8* %command, align 2, !dbg !15015
  %1 = load i32, i32* %sectors.addr, align 4, !dbg !15016
  %and = and i32 %1, 255, !dbg !15017
  %conv = trunc i32 %and to i8, !dbg !15016
  %sect_count = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 12, !dbg !15018
  store i8 %conv, i8* %sect_count, align 4, !dbg !15019
  %2 = load i32, i32* %sectors.addr, align 4, !dbg !15020
  %shr = lshr i32 %2, 8, !dbg !15021
  %and1 = and i32 %shr, 255, !dbg !15022
  %conv2 = trunc i32 %and1 to i8, !dbg !15023
  %sect_cnt_ex = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 13, !dbg !15024
  store i8 %conv2, i8* %sect_cnt_ex, align 1, !dbg !15025
  %3 = load i8, i8* %page.addr, align 1, !dbg !15026
  %4 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 4, !dbg !15027
  %lba_low = bitcast %union.anon.87* %4 to i8*, !dbg !15027
  store i8 %3, i8* %lba_low, align 4, !dbg !15028
  %5 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 5, !dbg !15029
  %lba_mid = bitcast %union.anon.88* %5 to i8*, !dbg !15029
  store i8 0, i8* %lba_mid, align 1, !dbg !15030
  %6 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 7, !dbg !15031
  %device = bitcast %union.anon.90* %6 to i8*, !dbg !15031
  store i8 -96, i8* %device, align 1, !dbg !15032
  %7 = load i16*, i16** %buffer.addr, align 8, !dbg !15033
  %8 = bitcast i16* %7 to i8*, !dbg !15034
  %9 = load i32, i32* %sectors.addr, align 4, !dbg !15035
  %mul = mul i32 %9, 512, !dbg !15036
  %conv3 = zext i32 %mul to i64, !dbg !15035
  call void @llvm.memset.p0i8.i64(i8* align 2 %8, i8 0, i64 %conv3, i1 false), !dbg !15034
  %10 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !15037
  %11 = load i64, i64* %buffer_dma.addr, align 8, !dbg !15038
  %12 = load i32, i32* %sectors.addr, align 4, !dbg !15039
  %mul4 = mul i32 %12, 512, !dbg !15040
  %call = call i32 @mtip_exec_internal_command(%struct.mtip_port* %10, %struct.host_to_dev_fis* %fis, i32 5, i64 %11, i32 %mul4, i32 0, i64 5000) #12, !dbg !15041
  ret i32 %call, !dbg !15042
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_get_smart_attr(%struct.mtip_port* %port, i32 %id, %struct.smart_attr* %attrib) #2 !dbg !15043 {
entry:
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.mtip_port*, align 8
  %id.addr = alloca i32, align 4
  %attrib.addr = alloca %struct.smart_attr*, align 8
  %rv = alloca i32, align 4
  %i = alloca i32, align 4
  %pattr = alloca %struct.smart_attr*, align 8
  store %struct.mtip_port* %port, %struct.mtip_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mtip_port** %port.addr, metadata !15046, metadata !DIExpression()), !dbg !15047
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !15048, metadata !DIExpression()), !dbg !15049
  store %struct.smart_attr* %attrib, %struct.smart_attr** %attrib.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.smart_attr** %attrib.addr, metadata !15050, metadata !DIExpression()), !dbg !15051
  call void @llvm.dbg.declare(metadata i32* %rv, metadata !15052, metadata !DIExpression()), !dbg !15053
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15054, metadata !DIExpression()), !dbg !15055
  call void @llvm.dbg.declare(metadata %struct.smart_attr** %pattr, metadata !15056, metadata !DIExpression()), !dbg !15057
  %0 = load %struct.smart_attr*, %struct.smart_attr** %attrib.addr, align 8, !dbg !15058
  %tobool = icmp ne %struct.smart_attr* %0, null, !dbg !15058
  br i1 %tobool, label %if.end, label %if.then, !dbg !15060

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !15061
  br label %return, !dbg !15061

if.end:                                           ; preds = %entry
  %1 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !15062
  %identify_valid = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %1, i32 0, i32 1, !dbg !15064
  %2 = load i64, i64* %identify_valid, align 8, !dbg !15064
  %tobool1 = icmp ne i64 %2, 0, !dbg !15062
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !15065

if.then2:                                         ; preds = %if.end
  %3 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !15066
  %dd = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %3, i32 0, i32 0, !dbg !15066
  %4 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !15066
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %4, i32 0, i32 4, !dbg !15066
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !15066
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 41, !dbg !15066
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.89, i64 0, i64 0)) #13, !dbg !15066
  store i32 -1, i32* %retval, align 4, !dbg !15068
  br label %return, !dbg !15068

if.end3:                                          ; preds = %if.end
  %6 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !15069
  %identify = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %6, i32 0, i32 12, !dbg !15071
  %7 = load i16*, i16** %identify, align 8, !dbg !15071
  %arrayidx = getelementptr i16, i16* %7, i64 82, !dbg !15069
  %8 = load i16, i16* %arrayidx, align 2, !dbg !15069
  %conv = zext i16 %8 to i32, !dbg !15069
  %and = and i32 %conv, 1, !dbg !15072
  %tobool4 = icmp ne i32 %and, 0, !dbg !15072
  br i1 %tobool4, label %if.end9, label %if.then5, !dbg !15073

if.then5:                                         ; preds = %if.end3
  %9 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !15074
  %dd6 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %9, i32 0, i32 0, !dbg !15074
  %10 = load %struct.driver_data*, %struct.driver_data** %dd6, align 8, !dbg !15074
  %pdev7 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %10, i32 0, i32 4, !dbg !15074
  %11 = load %struct.pci_dev*, %struct.pci_dev** %pdev7, align 8, !dbg !15074
  %dev8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 41, !dbg !15074
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev8, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.90, i64 0, i64 0)) #13, !dbg !15074
  store i32 -1, i32* %retval, align 4, !dbg !15076
  br label %return, !dbg !15076

if.end9:                                          ; preds = %if.end3
  %12 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !15077
  %identify10 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %12, i32 0, i32 12, !dbg !15079
  %13 = load i16*, i16** %identify10, align 8, !dbg !15079
  %arrayidx11 = getelementptr i16, i16* %13, i64 85, !dbg !15077
  %14 = load i16, i16* %arrayidx11, align 2, !dbg !15077
  %conv12 = zext i16 %14 to i32, !dbg !15077
  %and13 = and i32 %conv12, 1, !dbg !15080
  %tobool14 = icmp ne i32 %and13, 0, !dbg !15080
  br i1 %tobool14, label %if.end19, label %if.then15, !dbg !15081

if.then15:                                        ; preds = %if.end9
  %15 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !15082
  %dd16 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %15, i32 0, i32 0, !dbg !15082
  %16 = load %struct.driver_data*, %struct.driver_data** %dd16, align 8, !dbg !15082
  %pdev17 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %16, i32 0, i32 4, !dbg !15082
  %17 = load %struct.pci_dev*, %struct.pci_dev** %pdev17, align 8, !dbg !15082
  %dev18 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 41, !dbg !15082
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev18, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.91, i64 0, i64 0)) #13, !dbg !15082
  store i32 -1, i32* %retval, align 4, !dbg !15084
  br label %return, !dbg !15084

if.end19:                                         ; preds = %if.end9
  %18 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !15085
  %smart_buf = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %18, i32 0, i32 18, !dbg !15086
  %19 = load i8*, i8** %smart_buf, align 8, !dbg !15086
  call void @llvm.memset.p0i8.i64(i8* align 1 %19, i8 0, i64 512, i1 false), !dbg !15087
  %20 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !15088
  %21 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !15089
  %smart_buf20 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %21, i32 0, i32 18, !dbg !15090
  %22 = load i8*, i8** %smart_buf20, align 8, !dbg !15090
  %23 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !15091
  %smart_buf_dma = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %23, i32 0, i32 19, !dbg !15092
  %24 = load i64, i64* %smart_buf_dma, align 8, !dbg !15092
  %call = call i32 @mtip_get_smart_data(%struct.mtip_port* %20, i8* %22, i64 %24) #12, !dbg !15093
  store i32 %call, i32* %rv, align 4, !dbg !15094
  %25 = load i32, i32* %rv, align 4, !dbg !15095
  %tobool21 = icmp ne i32 %25, 0, !dbg !15095
  br i1 %tobool21, label %if.then22, label %if.end26, !dbg !15097

if.then22:                                        ; preds = %if.end19
  %26 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !15098
  %dd23 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %26, i32 0, i32 0, !dbg !15098
  %27 = load %struct.driver_data*, %struct.driver_data** %dd23, align 8, !dbg !15098
  %pdev24 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %27, i32 0, i32 4, !dbg !15098
  %28 = load %struct.pci_dev*, %struct.pci_dev** %pdev24, align 8, !dbg !15098
  %dev25 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %28, i32 0, i32 41, !dbg !15098
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev25, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.92, i64 0, i64 0)) #13, !dbg !15098
  %29 = load i32, i32* %rv, align 4, !dbg !15100
  store i32 %29, i32* %retval, align 4, !dbg !15101
  br label %return, !dbg !15101

if.end26:                                         ; preds = %if.end19
  %30 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !15102
  %smart_buf27 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %30, i32 0, i32 18, !dbg !15103
  %31 = load i8*, i8** %smart_buf27, align 8, !dbg !15103
  %add.ptr = getelementptr i8, i8* %31, i64 2, !dbg !15104
  %32 = bitcast i8* %add.ptr to %struct.smart_attr*, !dbg !15105
  store %struct.smart_attr* %32, %struct.smart_attr** %pattr, align 8, !dbg !15106
  store i32 0, i32* %i, align 4, !dbg !15107
  br label %for.cond, !dbg !15109

for.cond:                                         ; preds = %for.inc, %if.end26
  %33 = load i32, i32* %i, align 4, !dbg !15110
  %cmp = icmp slt i32 %33, 29, !dbg !15112
  br i1 %cmp, label %for.body, label %for.end, !dbg !15113

for.body:                                         ; preds = %for.cond
  %34 = load %struct.smart_attr*, %struct.smart_attr** %pattr, align 8, !dbg !15114
  %attr_id = getelementptr inbounds %struct.smart_attr, %struct.smart_attr* %34, i32 0, i32 0, !dbg !15116
  %35 = load i8, i8* %attr_id, align 1, !dbg !15116
  %conv29 = zext i8 %35 to i32, !dbg !15114
  %36 = load i32, i32* %id.addr, align 4, !dbg !15117
  %cmp30 = icmp eq i32 %conv29, %36, !dbg !15118
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !15119

if.then32:                                        ; preds = %for.body
  %37 = load %struct.smart_attr*, %struct.smart_attr** %attrib.addr, align 8, !dbg !15120
  %38 = bitcast %struct.smart_attr* %37 to i8*, !dbg !15122
  %39 = load %struct.smart_attr*, %struct.smart_attr** %pattr, align 8, !dbg !15123
  %40 = bitcast %struct.smart_attr* %39 to i8*, !dbg !15122
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %38, i8* align 1 %40, i64 12, i1 false), !dbg !15122
  br label %for.end, !dbg !15124

if.end33:                                         ; preds = %for.body
  br label %for.inc, !dbg !15117

for.inc:                                          ; preds = %if.end33
  %41 = load i32, i32* %i, align 4, !dbg !15125
  %inc = add i32 %41, 1, !dbg !15125
  store i32 %inc, i32* %i, align 4, !dbg !15125
  %42 = load %struct.smart_attr*, %struct.smart_attr** %pattr, align 8, !dbg !15126
  %incdec.ptr = getelementptr %struct.smart_attr, %struct.smart_attr* %42, i32 1, !dbg !15126
  store %struct.smart_attr* %incdec.ptr, %struct.smart_attr** %pattr, align 8, !dbg !15126
  br label %for.cond, !dbg !15127, !llvm.loop !15128

for.end:                                          ; preds = %if.then32, %for.cond
  %43 = load i32, i32* %i, align 4, !dbg !15130
  %cmp34 = icmp eq i32 %43, 29, !dbg !15132
  br i1 %cmp34, label %if.then36, label %if.end40, !dbg !15133

if.then36:                                        ; preds = %for.end
  %44 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !15134
  %dd37 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %44, i32 0, i32 0, !dbg !15134
  %45 = load %struct.driver_data*, %struct.driver_data** %dd37, align 8, !dbg !15134
  %pdev38 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %45, i32 0, i32 4, !dbg !15134
  %46 = load %struct.pci_dev*, %struct.pci_dev** %pdev38, align 8, !dbg !15134
  %dev39 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %46, i32 0, i32 41, !dbg !15134
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev39, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.93, i64 0, i64 0)) #13, !dbg !15134
  store i32 -22, i32* %rv, align 4, !dbg !15136
  br label %if.end40, !dbg !15137

if.end40:                                         ; preds = %if.then36, %for.end
  %47 = load i32, i32* %rv, align 4, !dbg !15138
  store i32 %47, i32* %retval, align 4, !dbg !15139
  br label %return, !dbg !15139

return:                                           ; preds = %if.end40, %if.then22, %if.then15, %if.then5, %if.then2, %if.then
  %48 = load i32, i32* %retval, align 4, !dbg !15140
  ret i32 %48, !dbg !15140
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ata_swap_string(i16* %buf, i32 %len) #2 !dbg !15141 {
entry:
  %buf.addr = alloca i16*, align 8
  %len.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i16* %buf, i16** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %buf.addr, metadata !15144, metadata !DIExpression()), !dbg !15145
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !15146, metadata !DIExpression()), !dbg !15147
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15148, metadata !DIExpression()), !dbg !15149
  store i32 0, i32* %i, align 4, !dbg !15150
  br label %for.cond, !dbg !15152

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !15153
  %1 = load i32, i32* %len.addr, align 4, !dbg !15155
  %div = udiv i32 %1, 2, !dbg !15156
  %cmp = icmp ult i32 %0, %div, !dbg !15157
  br i1 %cmp, label %for.body, label %for.end, !dbg !15158

for.body:                                         ; preds = %for.cond
  %2 = load i16*, i16** %buf.addr, align 8, !dbg !15159
  %3 = load i32, i32* %i, align 4, !dbg !15159
  %idxprom = sext i32 %3 to i64, !dbg !15159
  %arrayidx = getelementptr i16, i16* %2, i64 %idxprom, !dbg !15159
  call void @__swab16s(i16* %arrayidx) #12, !dbg !15159
  br label %for.inc, !dbg !15159

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !15160
  %inc = add i32 %4, 1, !dbg !15160
  store i32 %inc, i32* %i, align 4, !dbg !15160
  br label %for.cond, !dbg !15161, !llvm.loop !15162

for.end:                                          ; preds = %for.cond
  ret void, !dbg !15164
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__swab16s(i16* %p) #2 !dbg !15165 {
entry:
  %p.addr.i = alloca i16*, align 8
  call void @llvm.dbg.declare(metadata i16** %p.addr.i, metadata !15170, metadata !DIExpression()), !dbg !15176
  %p.addr = alloca i16*, align 8
  store i16* %p, i16** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %p.addr, metadata !15178, metadata !DIExpression()), !dbg !15179
  %0 = load i16*, i16** %p.addr, align 8, !dbg !15180
  store i16* %0, i16** %p.addr.i, align 8
  %1 = load i16*, i16** %p.addr.i, align 8, !dbg !15181
  %2 = load i16, i16* %1, align 2, !dbg !15181
  %3 = call i1 @llvm.is.constant.i16(i16 %2) #11, !dbg !15181
  br i1 %3, label %cond.true.i, label %cond.false.i, !dbg !15181

cond.true.i:                                      ; preds = %entry
  %4 = load i16*, i16** %p.addr.i, align 8, !dbg !15181
  %5 = load i16, i16* %4, align 2, !dbg !15181
  %conv.i = zext i16 %5 to i32, !dbg !15181
  %and.i = and i32 %conv.i, 255, !dbg !15181
  %shl.i = shl i32 %and.i, 8, !dbg !15181
  %6 = load i16*, i16** %p.addr.i, align 8, !dbg !15181
  %7 = load i16, i16* %6, align 2, !dbg !15181
  %conv1.i = zext i16 %7 to i32, !dbg !15181
  %and2.i = and i32 %conv1.i, 65280, !dbg !15181
  %shr.i = ashr i32 %and2.i, 8, !dbg !15181
  %or.i = or i32 %shl.i, %shr.i, !dbg !15181
  %conv3.i = trunc i32 %or.i to i16, !dbg !15181
  %conv4.i = zext i16 %conv3.i to i32, !dbg !15181
  br label %__swab16p.exit, !dbg !15181

cond.false.i:                                     ; preds = %entry
  %8 = load i16*, i16** %p.addr.i, align 8, !dbg !15181
  %9 = load i16, i16* %8, align 2, !dbg !15181
  %call.i = call zeroext i16 @__fswab16(i16 zeroext %9) #16, !dbg !15181
  %conv5.i = zext i16 %call.i to i32, !dbg !15181
  br label %__swab16p.exit, !dbg !15181

__swab16p.exit:                                   ; preds = %cond.true.i, %cond.false.i
  %cond.i = phi i32 [ %conv4.i, %cond.true.i ], [ %conv5.i, %cond.false.i ], !dbg !15181
  %conv6.i = trunc i32 %cond.i to i16, !dbg !15181
  %10 = load i16*, i16** %p.addr, align 8, !dbg !15182
  store i16 %conv6.i, i16* %10, align 2, !dbg !15183
  ret void, !dbg !15184
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i16(i16) #6

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal zeroext i16 @__fswab16(i16 zeroext %val) #8 !dbg !15185 {
entry:
  %val.addr = alloca i16, align 2
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !15188, metadata !DIExpression()), !dbg !15189
  %0 = load i16, i16* %val.addr, align 2, !dbg !15190
  %conv = zext i16 %0 to i32, !dbg !15190
  %and = and i32 %conv, 255, !dbg !15190
  %shl = shl i32 %and, 8, !dbg !15190
  %1 = load i16, i16* %val.addr, align 2, !dbg !15190
  %conv1 = zext i16 %1 to i32, !dbg !15190
  %and2 = and i32 %conv1, 65280, !dbg !15190
  %shr = ashr i32 %and2, 8, !dbg !15190
  %or = or i32 %shl, %shr, !dbg !15190
  %conv3 = trunc i32 %or to i16, !dbg !15190
  ret i16 %conv3, !dbg !15191
}

; Function Attrs: noredzone
declare dso_local i64 @strlcpy(i8*, i8*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_get_smart_data(%struct.mtip_port* %port, i8* %buffer, i64 %buffer_dma) #2 !dbg !15192 {
entry:
  %port.addr = alloca %struct.mtip_port*, align 8
  %buffer.addr = alloca i8*, align 8
  %buffer_dma.addr = alloca i64, align 8
  %fis = alloca %struct.host_to_dev_fis, align 4
  store %struct.mtip_port* %port, %struct.mtip_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mtip_port** %port.addr, metadata !15195, metadata !DIExpression()), !dbg !15196
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !15197, metadata !DIExpression()), !dbg !15198
  store i64 %buffer_dma, i64* %buffer_dma.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buffer_dma.addr, metadata !15199, metadata !DIExpression()), !dbg !15200
  call void @llvm.dbg.declare(metadata %struct.host_to_dev_fis* %fis, metadata !15201, metadata !DIExpression()), !dbg !15202
  %0 = bitcast %struct.host_to_dev_fis* %fis to i8*, !dbg !15203
  call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 20, i1 false), !dbg !15203
  %type = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 0, !dbg !15204
  store i8 39, i8* %type, align 4, !dbg !15205
  %opts = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 1, !dbg !15206
  store i8 -128, i8* %opts, align 1, !dbg !15207
  %command = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 2, !dbg !15208
  store i8 -80, i8* %command, align 2, !dbg !15209
  %features = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 3, !dbg !15210
  store i8 -48, i8* %features, align 1, !dbg !15211
  %sect_count = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 12, !dbg !15212
  store i8 1, i8* %sect_count, align 4, !dbg !15213
  %1 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 5, !dbg !15214
  %lba_mid = bitcast %union.anon.88* %1 to i8*, !dbg !15214
  store i8 79, i8* %lba_mid, align 1, !dbg !15215
  %2 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 6, !dbg !15216
  %lba_hi = bitcast %union.anon.89* %2 to i8*, !dbg !15216
  store i8 -62, i8* %lba_hi, align 2, !dbg !15217
  %3 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 7, !dbg !15218
  %device = bitcast %union.anon.90* %3 to i8*, !dbg !15218
  store i8 -96, i8* %device, align 1, !dbg !15219
  %4 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !15220
  %5 = load i64, i64* %buffer_dma.addr, align 8, !dbg !15221
  %call = call i32 @mtip_exec_internal_command(%struct.mtip_port* %4, %struct.host_to_dev_fis* %fis, i32 5, i64 %5, i32 512, i32 0, i64 15000) #12, !dbg !15222
  ret i32 %call, !dbg !15223
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sysfs_create_file(%struct.kobject* %kobj, %struct.attribute* %attr) #2 !dbg !15224 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  %attr.addr = alloca %struct.attribute*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !15229, metadata !DIExpression()), !dbg !15230
  store %struct.attribute* %attr, %struct.attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attribute** %attr.addr, metadata !15231, metadata !DIExpression()), !dbg !15232
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !15233
  %1 = load %struct.attribute*, %struct.attribute** %attr.addr, align 8, !dbg !15234
  %call = call i32 @sysfs_create_file_ns(%struct.kobject* %0, %struct.attribute* %1, i8* null) #12, !dbg !15235
  ret i32 %call, !dbg !15236
}

; Function Attrs: noredzone
declare dso_local i32 @sysfs_create_file_ns(%struct.kobject*, %struct.attribute*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mtip_hw_show_status(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #2 !dbg !15237 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %dd = alloca %struct.driver_data*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.gendisk*, align 8
  %size = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15238, metadata !DIExpression()), !dbg !15239
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !15240, metadata !DIExpression()), !dbg !15241
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15242, metadata !DIExpression()), !dbg !15243
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd, metadata !15244, metadata !DIExpression()), !dbg !15245
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15246, metadata !DIExpression()), !dbg !15248
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15248
  %1 = bitcast %struct.device* %0 to i8*, !dbg !15248
  store i8* %1, i8** %__mptr, align 8, !dbg !15248
  br label %do.body, !dbg !15248

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15249

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15248
  %add.ptr = getelementptr i8, i8* %2, i64 -104, !dbg !15248
  %3 = bitcast i8* %add.ptr to %struct.gendisk*, !dbg !15248
  store %struct.gendisk* %3, %struct.gendisk** %tmp, align 8, !dbg !15249
  %4 = load %struct.gendisk*, %struct.gendisk** %tmp, align 8, !dbg !15248
  %private_data = getelementptr inbounds %struct.gendisk, %struct.gendisk* %4, i32 0, i32 10, !dbg !15251
  %5 = load i8*, i8** %private_data, align 8, !dbg !15251
  %6 = bitcast i8* %5 to %struct.driver_data*, !dbg !15252
  store %struct.driver_data* %6, %struct.driver_data** %dd, align 8, !dbg !15245
  call void @llvm.dbg.declare(metadata i32* %size, metadata !15253, metadata !DIExpression()), !dbg !15254
  store i32 0, i32* %size, align 4, !dbg !15254
  %7 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !15255
  %dd_flag = getelementptr inbounds %struct.driver_data, %struct.driver_data* %7, i32 0, i32 11, !dbg !15257
  %call = call zeroext i1 @test_bit(i64 2, i64* %dd_flag) #12, !dbg !15258
  br i1 %call, label %if.then, label %if.else, !dbg !15259

if.then:                                          ; preds = %do.end
  %8 = load i8*, i8** %buf.addr, align 8, !dbg !15260
  %call1 = call i32 (i8*, i8*, ...) @sprintf(i8* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.96, i64 0, i64 0)) #12, !dbg !15261
  %9 = load i32, i32* %size, align 4, !dbg !15262
  %add = add i32 %9, %call1, !dbg !15262
  store i32 %add, i32* %size, align 4, !dbg !15262
  br label %if.end10, !dbg !15263

if.else:                                          ; preds = %do.end
  %10 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !15264
  %dd_flag2 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %10, i32 0, i32 11, !dbg !15266
  %call3 = call zeroext i1 @test_bit(i64 3, i64* %dd_flag2) #12, !dbg !15267
  br i1 %call3, label %if.then4, label %if.else7, !dbg !15268

if.then4:                                         ; preds = %if.else
  %11 = load i8*, i8** %buf.addr, align 8, !dbg !15269
  %call5 = call i32 (i8*, i8*, ...) @sprintf(i8* %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.97, i64 0, i64 0)) #12, !dbg !15270
  %12 = load i32, i32* %size, align 4, !dbg !15271
  %add6 = add i32 %12, %call5, !dbg !15271
  store i32 %add6, i32* %size, align 4, !dbg !15271
  br label %if.end, !dbg !15272

if.else7:                                         ; preds = %if.else
  %13 = load i8*, i8** %buf.addr, align 8, !dbg !15273
  %call8 = call i32 (i8*, i8*, ...) @sprintf(i8* %13, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.98, i64 0, i64 0)) #12, !dbg !15274
  %14 = load i32, i32* %size, align 4, !dbg !15275
  %add9 = add i32 %14, %call8, !dbg !15275
  store i32 %add9, i32* %size, align 4, !dbg !15275
  br label %if.end

if.end:                                           ; preds = %if.else7, %if.then4
  br label %if.end10

if.end10:                                         ; preds = %if.end, %if.then
  %15 = load i32, i32* %size, align 4, !dbg !15276
  %conv = sext i32 %15 to i64, !dbg !15276
  ret i64 %conv, !dbg !15277
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @kthread_should_stop() #1

; Function Attrs: noredzone
declare dso_local void @init_wait_entry(%struct.wait_queue_entry*, i32) #1

; Function Attrs: noredzone
declare dso_local i64 @prepare_to_wait_event(%struct.wait_queue_head*, %struct.wait_queue_entry*, i32) #1

; Function Attrs: noredzone
declare dso_local void @schedule() #1

; Function Attrs: noredzone
declare dso_local void @finish_wait(%struct.wait_queue_head*, %struct.wait_queue_entry*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mtip_handle_tfe(%struct.driver_data* %dd) #2 !dbg !15278 {
entry:
  %dd.addr = alloca %struct.driver_data*, align 8
  %group = alloca i32, align 4
  %tag = alloca i32, align 4
  %bit = alloca i32, align 4
  %reissue = alloca i32, align 4
  %rv = alloca i32, align 4
  %port = alloca %struct.mtip_port*, align 8
  %cmd = alloca %struct.mtip_cmd*, align 8
  %completed = alloca i32, align 4
  %fis = alloca %struct.host_to_dev_fis*, align 8
  %tagaccum = alloca [4 x i64], align 16
  %cmd_cnt = alloca i32, align 4
  %buf = alloca i8*, align 8
  %fail_reason = alloca i8*, align 8
  %fail_all_ncq_write = alloca i32, align 4
  %fail_all_ncq_cmds = alloca i32, align 4
  %__ms = alloca i64, align 8
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !15279, metadata !DIExpression()), !dbg !15280
  call void @llvm.dbg.declare(metadata i32* %group, metadata !15281, metadata !DIExpression()), !dbg !15282
  call void @llvm.dbg.declare(metadata i32* %tag, metadata !15283, metadata !DIExpression()), !dbg !15284
  call void @llvm.dbg.declare(metadata i32* %bit, metadata !15285, metadata !DIExpression()), !dbg !15286
  call void @llvm.dbg.declare(metadata i32* %reissue, metadata !15287, metadata !DIExpression()), !dbg !15288
  call void @llvm.dbg.declare(metadata i32* %rv, metadata !15289, metadata !DIExpression()), !dbg !15290
  call void @llvm.dbg.declare(metadata %struct.mtip_port** %port, metadata !15291, metadata !DIExpression()), !dbg !15292
  call void @llvm.dbg.declare(metadata %struct.mtip_cmd** %cmd, metadata !15293, metadata !DIExpression()), !dbg !15294
  call void @llvm.dbg.declare(metadata i32* %completed, metadata !15295, metadata !DIExpression()), !dbg !15296
  call void @llvm.dbg.declare(metadata %struct.host_to_dev_fis** %fis, metadata !15297, metadata !DIExpression()), !dbg !15298
  call void @llvm.dbg.declare(metadata [4 x i64]* %tagaccum, metadata !15299, metadata !DIExpression()), !dbg !15300
  call void @llvm.dbg.declare(metadata i32* %cmd_cnt, metadata !15301, metadata !DIExpression()), !dbg !15302
  store i32 0, i32* %cmd_cnt, align 4, !dbg !15302
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !15303, metadata !DIExpression()), !dbg !15304
  call void @llvm.dbg.declare(metadata i8** %fail_reason, metadata !15305, metadata !DIExpression()), !dbg !15306
  store i8* null, i8** %fail_reason, align 8, !dbg !15306
  call void @llvm.dbg.declare(metadata i32* %fail_all_ncq_write, metadata !15307, metadata !DIExpression()), !dbg !15308
  store i32 0, i32* %fail_all_ncq_write, align 4, !dbg !15308
  call void @llvm.dbg.declare(metadata i32* %fail_all_ncq_cmds, metadata !15309, metadata !DIExpression()), !dbg !15310
  store i32 0, i32* %fail_all_ncq_cmds, align 4, !dbg !15310
  %0 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15311
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %0, i32 0, i32 4, !dbg !15311
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !15311
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !15311
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.100, i64 0, i64 0)) #13, !dbg !15311
  %2 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15312
  %port1 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %2, i32 0, i32 7, !dbg !15313
  %3 = load %struct.mtip_port*, %struct.mtip_port** %port1, align 8, !dbg !15313
  store %struct.mtip_port* %3, %struct.mtip_port** %port, align 8, !dbg !15314
  %4 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !15315
  %flags = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %4, i32 0, i32 22, !dbg !15317
  %call = call zeroext i1 @test_bit(i64 0, i64* %flags) #12, !dbg !15318
  br i1 %call, label %if.then, label %if.end, !dbg !15319

if.then:                                          ; preds = %entry
  %5 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15320
  %call2 = call %struct.mtip_cmd* @mtip_cmd_from_tag(%struct.driver_data* %5, i32 0) #12, !dbg !15322
  store %struct.mtip_cmd* %call2, %struct.mtip_cmd** %cmd, align 8, !dbg !15323
  %6 = load %struct.mtip_cmd*, %struct.mtip_cmd** %cmd, align 8, !dbg !15324
  call void @mtip_complete_command(%struct.mtip_cmd* %6, i8 zeroext 10) #12, !dbg !15325
  br label %return, !dbg !15326

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [4 x i64], [4 x i64]* %tagaccum, i64 0, i64 0, !dbg !15327
  %7 = bitcast i64* %arraydecay to i8*, !dbg !15327
  call void @llvm.memset.p0i8.i64(i8* align 16 %7, i8 0, i64 32, i1 false), !dbg !15327
  store i32 0, i32* %group, align 4, !dbg !15328
  br label %for.cond, !dbg !15330

for.cond:                                         ; preds = %for.inc23, %if.end
  %8 = load i32, i32* %group, align 4, !dbg !15331
  %9 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15333
  %slot_groups = getelementptr inbounds %struct.driver_data, %struct.driver_data* %9, i32 0, i32 9, !dbg !15334
  %10 = load i32, i32* %slot_groups, align 4, !dbg !15334
  %cmp = icmp ult i32 %8, %10, !dbg !15335
  br i1 %cmp, label %for.body, label %for.end25, !dbg !15336

for.body:                                         ; preds = %for.cond
  %11 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !15337
  %completed3 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %11, i32 0, i32 4, !dbg !15339
  %12 = load i32, i32* %group, align 4, !dbg !15340
  %idxprom = sext i32 %12 to i64, !dbg !15337
  %arrayidx = getelementptr [8 x i8*], [8 x i8*]* %completed3, i64 0, i64 %idxprom, !dbg !15337
  %13 = load i8*, i8** %arrayidx, align 8, !dbg !15337
  %call4 = call i32 @readl(i8* %13) #12, !dbg !15341
  store i32 %call4, i32* %completed, align 4, !dbg !15342
  %14 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15343
  %pdev5 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %14, i32 0, i32 4, !dbg !15343
  %15 = load %struct.pci_dev*, %struct.pci_dev** %pdev5, align 8, !dbg !15343
  %dev6 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %15, i32 0, i32 41, !dbg !15343
  %16 = load i32, i32* %group, align 4, !dbg !15343
  %17 = load i32, i32* %completed, align 4, !dbg !15343
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev6, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.101, i64 0, i64 0), i32 %16, i32 %17) #13, !dbg !15343
  %18 = load i32, i32* %completed, align 4, !dbg !15344
  %19 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !15345
  %completed7 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %19, i32 0, i32 4, !dbg !15346
  %20 = load i32, i32* %group, align 4, !dbg !15347
  %idxprom8 = sext i32 %20 to i64, !dbg !15345
  %arrayidx9 = getelementptr [8 x i8*], [8 x i8*]* %completed7, i64 0, i64 %idxprom8, !dbg !15345
  %21 = load i8*, i8** %arrayidx9, align 8, !dbg !15345
  call void @writel(i32 %18, i8* %21) #12, !dbg !15348
  store i32 0, i32* %bit, align 4, !dbg !15349
  br label %for.cond10, !dbg !15351

for.cond10:                                       ; preds = %for.inc, %for.body
  %22 = load i32, i32* %bit, align 4, !dbg !15352
  %cmp11 = icmp slt i32 %22, 32, !dbg !15354
  br i1 %cmp11, label %land.rhs, label %land.end, !dbg !15355

land.rhs:                                         ; preds = %for.cond10
  %23 = load i32, i32* %completed, align 4, !dbg !15356
  %tobool = icmp ne i32 %23, 0, !dbg !15355
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond10
  %24 = phi i1 [ false, %for.cond10 ], [ %tobool, %land.rhs ], !dbg !15357
  br i1 %24, label %for.body12, label %for.end, !dbg !15358

for.body12:                                       ; preds = %land.end
  %25 = load i32, i32* %completed, align 4, !dbg !15359
  %26 = load i32, i32* %bit, align 4, !dbg !15362
  %shl = shl i32 1, %26, !dbg !15363
  %and = and i32 %25, %shl, !dbg !15364
  %tobool13 = icmp ne i32 %and, 0, !dbg !15364
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !15365

if.then14:                                        ; preds = %for.body12
  br label %for.inc, !dbg !15366

if.end15:                                         ; preds = %for.body12
  %27 = load i32, i32* %group, align 4, !dbg !15367
  %shl16 = shl i32 %27, 5, !dbg !15368
  %28 = load i32, i32* %bit, align 4, !dbg !15369
  %add = add i32 %shl16, %28, !dbg !15370
  store i32 %add, i32* %tag, align 4, !dbg !15371
  %29 = load i32, i32* %tag, align 4, !dbg !15372
  %cmp17 = icmp eq i32 %29, 0, !dbg !15374
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !15375

if.then18:                                        ; preds = %if.end15
  br label %for.inc, !dbg !15376

if.end19:                                         ; preds = %if.end15
  %30 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15377
  %31 = load i32, i32* %tag, align 4, !dbg !15378
  %call20 = call %struct.mtip_cmd* @mtip_cmd_from_tag(%struct.driver_data* %30, i32 %31) #12, !dbg !15379
  store %struct.mtip_cmd* %call20, %struct.mtip_cmd** %cmd, align 8, !dbg !15380
  %32 = load %struct.mtip_cmd*, %struct.mtip_cmd** %cmd, align 8, !dbg !15381
  call void @mtip_complete_command(%struct.mtip_cmd* %32, i8 zeroext 0) #12, !dbg !15382
  %33 = load i32, i32* %tag, align 4, !dbg !15383
  %conv = sext i32 %33 to i64, !dbg !15383
  %arraydecay21 = getelementptr inbounds [4 x i64], [4 x i64]* %tagaccum, i64 0, i64 0, !dbg !15384
  call void @set_bit(i64 %conv, i64* %arraydecay21) #12, !dbg !15385
  %34 = load i32, i32* %cmd_cnt, align 4, !dbg !15386
  %inc = add i32 %34, 1, !dbg !15386
  store i32 %inc, i32* %cmd_cnt, align 4, !dbg !15386
  br label %for.inc, !dbg !15387

for.inc:                                          ; preds = %if.end19, %if.then18, %if.then14
  %35 = load i32, i32* %bit, align 4, !dbg !15388
  %inc22 = add i32 %35, 1, !dbg !15388
  store i32 %inc22, i32* %bit, align 4, !dbg !15388
  br label %for.cond10, !dbg !15389, !llvm.loop !15390

for.end:                                          ; preds = %land.end
  br label %for.inc23, !dbg !15392

for.inc23:                                        ; preds = %for.end
  %36 = load i32, i32* %group, align 4, !dbg !15393
  %inc24 = add i32 %36, 1, !dbg !15393
  store i32 %inc24, i32* %group, align 4, !dbg !15393
  br label %for.cond, !dbg !15394, !llvm.loop !15395

for.end25:                                        ; preds = %for.cond
  %37 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15397
  %arraydecay26 = getelementptr inbounds [4 x i64], [4 x i64]* %tagaccum, i64 0, i64 0, !dbg !15398
  %38 = load i32, i32* %cmd_cnt, align 4, !dbg !15399
  call void @print_tags(%struct.driver_data* %37, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.102, i64 0, i64 0), i64* %arraydecay26, i32 %38) #12, !dbg !15400
  call void @llvm.dbg.declare(metadata i64* %__ms, metadata !15401, metadata !DIExpression()), !dbg !15403
  store i64 20, i64* %__ms, align 8, !dbg !15403
  br label %while.cond, !dbg !15403

while.cond:                                       ; preds = %while.body, %for.end25
  %39 = load i64, i64* %__ms, align 8, !dbg !15403
  %dec = add i64 %39, -1, !dbg !15403
  store i64 %dec, i64* %__ms, align 8, !dbg !15403
  %tobool27 = icmp ne i64 %39, 0, !dbg !15403
  br i1 %tobool27, label %while.body, label %while.end, !dbg !15403

while.body:                                       ; preds = %while.cond
  call void @__const_udelay(i64 4295000) #12, !dbg !15404
  br label %while.cond, !dbg !15403, !llvm.loop !15409

while.end:                                        ; preds = %while.cond
  %40 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !15410
  call void @mtip_restart_port(%struct.mtip_port* %40) #12, !dbg !15411
  %41 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15412
  %port28 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %41, i32 0, i32 7, !dbg !15413
  %42 = load %struct.mtip_port*, %struct.mtip_port** %port28, align 8, !dbg !15413
  %43 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15414
  %port29 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %43, i32 0, i32 7, !dbg !15415
  %44 = load %struct.mtip_port*, %struct.mtip_port** %port29, align 8, !dbg !15415
  %log_buf = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %44, i32 0, i32 16, !dbg !15416
  %45 = load i16*, i16** %log_buf, align 8, !dbg !15416
  %46 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15417
  %port30 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %46, i32 0, i32 7, !dbg !15418
  %47 = load %struct.mtip_port*, %struct.mtip_port** %port30, align 8, !dbg !15418
  %log_buf_dma = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %47, i32 0, i32 17, !dbg !15419
  %48 = load i64, i64* %log_buf_dma, align 8, !dbg !15419
  %call31 = call i32 @mtip_read_log_page(%struct.mtip_port* %42, i8 zeroext 16, i16* %45, i64 %48, i32 1) #12, !dbg !15420
  store i32 %call31, i32* %rv, align 4, !dbg !15421
  %49 = load i32, i32* %rv, align 4, !dbg !15422
  %tobool32 = icmp ne i32 %49, 0, !dbg !15422
  br i1 %tobool32, label %if.then33, label %if.else, !dbg !15424

if.then33:                                        ; preds = %while.end
  %50 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15425
  %pdev34 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %50, i32 0, i32 4, !dbg !15425
  %51 = load %struct.pci_dev*, %struct.pci_dev** %pdev34, align 8, !dbg !15425
  %dev35 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %51, i32 0, i32 41, !dbg !15425
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev35, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.72, i64 0, i64 0)) #13, !dbg !15425
  br label %if.end64, !dbg !15427

if.else:                                          ; preds = %while.end
  %52 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15428
  %port36 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %52, i32 0, i32 7, !dbg !15430
  %53 = load %struct.mtip_port*, %struct.mtip_port** %port36, align 8, !dbg !15430
  %log_buf37 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %53, i32 0, i32 16, !dbg !15431
  %54 = load i16*, i16** %log_buf37, align 8, !dbg !15431
  %55 = bitcast i16* %54 to i8*, !dbg !15432
  store i8* %55, i8** %buf, align 8, !dbg !15433
  %56 = load i8*, i8** %buf, align 8, !dbg !15434
  %arrayidx38 = getelementptr i8, i8* %56, i64 259, !dbg !15434
  %57 = load i8, i8* %arrayidx38, align 1, !dbg !15434
  %conv39 = zext i8 %57 to i32, !dbg !15434
  %and40 = and i32 %conv39, 1, !dbg !15436
  %tobool41 = icmp ne i32 %and40, 0, !dbg !15436
  br i1 %tobool41, label %if.then42, label %if.end45, !dbg !15437

if.then42:                                        ; preds = %if.else
  %58 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15438
  %pdev43 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %58, i32 0, i32 4, !dbg !15438
  %59 = load %struct.pci_dev*, %struct.pci_dev** %pdev43, align 8, !dbg !15438
  %dev44 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %59, i32 0, i32 41, !dbg !15438
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev44, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.73, i64 0, i64 0)) #13, !dbg !15438
  %60 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15440
  %dd_flag = getelementptr inbounds %struct.driver_data, %struct.driver_data* %60, i32 0, i32 11, !dbg !15441
  call void @set_bit(i64 3, i64* %dd_flag) #12, !dbg !15442
  store i32 1, i32* %fail_all_ncq_write, align 4, !dbg !15443
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.103, i64 0, i64 0), i8** %fail_reason, align 8, !dbg !15444
  br label %if.end45, !dbg !15445

if.end45:                                         ; preds = %if.then42, %if.else
  %61 = load i8*, i8** %buf, align 8, !dbg !15446
  %arrayidx46 = getelementptr i8, i8* %61, i64 288, !dbg !15446
  %62 = load i8, i8* %arrayidx46, align 1, !dbg !15446
  %conv47 = zext i8 %62 to i32, !dbg !15446
  %cmp48 = icmp eq i32 %conv47, 247, !dbg !15448
  br i1 %cmp48, label %if.then50, label %if.end54, !dbg !15449

if.then50:                                        ; preds = %if.end45
  %63 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15450
  %pdev51 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %63, i32 0, i32 4, !dbg !15450
  %64 = load %struct.pci_dev*, %struct.pci_dev** %pdev51, align 8, !dbg !15450
  %dev52 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %64, i32 0, i32 41, !dbg !15450
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev52, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.74, i64 0, i64 0)) #13, !dbg !15450
  %65 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15452
  %dd_flag53 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %65, i32 0, i32 11, !dbg !15453
  call void @set_bit(i64 2, i64* %dd_flag53) #12, !dbg !15454
  store i32 1, i32* %fail_all_ncq_cmds, align 4, !dbg !15455
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.104, i64 0, i64 0), i8** %fail_reason, align 8, !dbg !15456
  br label %if.end54, !dbg !15457

if.end54:                                         ; preds = %if.then50, %if.end45
  %66 = load i8*, i8** %buf, align 8, !dbg !15458
  %arrayidx55 = getelementptr i8, i8* %66, i64 288, !dbg !15458
  %67 = load i8, i8* %arrayidx55, align 1, !dbg !15458
  %conv56 = zext i8 %67 to i32, !dbg !15458
  %cmp57 = icmp eq i32 %conv56, 191, !dbg !15460
  br i1 %cmp57, label %if.then59, label %if.end63, !dbg !15461

if.then59:                                        ; preds = %if.end54
  %68 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15462
  %dd_flag60 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %68, i32 0, i32 11, !dbg !15464
  call void @set_bit(i64 8, i64* %dd_flag60) #12, !dbg !15465
  %69 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15466
  %pdev61 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %69, i32 0, i32 4, !dbg !15466
  %70 = load %struct.pci_dev*, %struct.pci_dev** %pdev61, align 8, !dbg !15466
  %dev62 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %70, i32 0, i32 41, !dbg !15466
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev62, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.105, i64 0, i64 0)) #13, !dbg !15466
  store i32 1, i32* %fail_all_ncq_cmds, align 4, !dbg !15467
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.106, i64 0, i64 0), i8** %fail_reason, align 8, !dbg !15468
  br label %if.end63, !dbg !15469

if.end63:                                         ; preds = %if.then59, %if.end54
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.then33
  %arraydecay65 = getelementptr inbounds [4 x i64], [4 x i64]* %tagaccum, i64 0, i64 0, !dbg !15470
  %71 = bitcast i64* %arraydecay65 to i8*, !dbg !15470
  call void @llvm.memset.p0i8.i64(i8* align 16 %71, i8 0, i64 32, i1 false), !dbg !15470
  store i32 0, i32* %group, align 4, !dbg !15471
  br label %for.cond66, !dbg !15473

for.cond66:                                       ; preds = %for.inc120, %if.end64
  %72 = load i32, i32* %group, align 4, !dbg !15474
  %73 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15476
  %slot_groups67 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %73, i32 0, i32 9, !dbg !15477
  %74 = load i32, i32* %slot_groups67, align 4, !dbg !15477
  %cmp68 = icmp ult i32 %72, %74, !dbg !15478
  br i1 %cmp68, label %for.body70, label %for.end122, !dbg !15479

for.body70:                                       ; preds = %for.cond66
  store i32 0, i32* %bit, align 4, !dbg !15480
  br label %for.cond71, !dbg !15483

for.cond71:                                       ; preds = %for.inc117, %for.body70
  %75 = load i32, i32* %bit, align 4, !dbg !15484
  %cmp72 = icmp slt i32 %75, 32, !dbg !15486
  br i1 %cmp72, label %for.body74, label %for.end119, !dbg !15487

for.body74:                                       ; preds = %for.cond71
  store i32 1, i32* %reissue, align 4, !dbg !15488
  %76 = load i32, i32* %group, align 4, !dbg !15490
  %shl75 = shl i32 %76, 5, !dbg !15491
  %77 = load i32, i32* %bit, align 4, !dbg !15492
  %add76 = add i32 %shl75, %77, !dbg !15493
  store i32 %add76, i32* %tag, align 4, !dbg !15494
  %78 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15495
  %79 = load i32, i32* %tag, align 4, !dbg !15496
  %call77 = call %struct.mtip_cmd* @mtip_cmd_from_tag(%struct.driver_data* %78, i32 %79) #12, !dbg !15497
  store %struct.mtip_cmd* %call77, %struct.mtip_cmd** %cmd, align 8, !dbg !15498
  %80 = load %struct.mtip_cmd*, %struct.mtip_cmd** %cmd, align 8, !dbg !15499
  %command = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %80, i32 0, i32 0, !dbg !15500
  %81 = load i8*, i8** %command, align 8, !dbg !15500
  %82 = bitcast i8* %81 to %struct.host_to_dev_fis*, !dbg !15501
  store %struct.host_to_dev_fis* %82, %struct.host_to_dev_fis** %fis, align 8, !dbg !15502
  %83 = load i32, i32* %tag, align 4, !dbg !15503
  %cmp78 = icmp eq i32 %83, 0, !dbg !15505
  br i1 %cmp78, label %if.then84, label %lor.lhs.false, !dbg !15506

lor.lhs.false:                                    ; preds = %for.body74
  %84 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis, align 8, !dbg !15507
  %command80 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %84, i32 0, i32 2, !dbg !15508
  %85 = load i8, i8* %command80, align 2, !dbg !15508
  %conv81 = zext i8 %85 to i32, !dbg !15507
  %cmp82 = icmp eq i32 %conv81, 239, !dbg !15509
  br i1 %cmp82, label %if.then84, label %if.else85, !dbg !15510

if.then84:                                        ; preds = %lor.lhs.false, %for.body74
  store i32 0, i32* %reissue, align 4, !dbg !15511
  br label %if.end104, !dbg !15512

if.else85:                                        ; preds = %lor.lhs.false
  %86 = load i32, i32* %fail_all_ncq_cmds, align 4, !dbg !15513
  %tobool86 = icmp ne i32 %86, 0, !dbg !15513
  br i1 %tobool86, label %if.then93, label %lor.lhs.false87, !dbg !15516

lor.lhs.false87:                                  ; preds = %if.else85
  %87 = load i32, i32* %fail_all_ncq_write, align 4, !dbg !15517
  %tobool88 = icmp ne i32 %87, 0, !dbg !15517
  br i1 %tobool88, label %land.lhs.true, label %if.end103, !dbg !15518

land.lhs.true:                                    ; preds = %lor.lhs.false87
  %88 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis, align 8, !dbg !15519
  %command89 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %88, i32 0, i32 2, !dbg !15520
  %89 = load i8, i8* %command89, align 2, !dbg !15520
  %conv90 = zext i8 %89 to i32, !dbg !15519
  %cmp91 = icmp eq i32 %conv90, 97, !dbg !15521
  br i1 %cmp91, label %if.then93, label %if.end103, !dbg !15522

if.then93:                                        ; preds = %land.lhs.true, %if.else85
  %90 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15523
  %pdev94 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %90, i32 0, i32 4, !dbg !15523
  %91 = load %struct.pci_dev*, %struct.pci_dev** %pdev94, align 8, !dbg !15523
  %dev95 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %91, i32 0, i32 41, !dbg !15523
  %92 = load %struct.host_to_dev_fis*, %struct.host_to_dev_fis** %fis, align 8, !dbg !15523
  %command96 = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %92, i32 0, i32 2, !dbg !15523
  %93 = load i8, i8* %command96, align 2, !dbg !15523
  %conv97 = zext i8 %93 to i32, !dbg !15523
  %cmp98 = icmp eq i32 %conv97, 97, !dbg !15523
  %94 = zext i1 %cmp98 to i64, !dbg !15523
  %cond = select i1 %cmp98, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.108, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.109, i64 0, i64 0), !dbg !15523
  %95 = load i32, i32* %tag, align 4, !dbg !15523
  %96 = load i8*, i8** %fail_reason, align 8, !dbg !15523
  %cmp100 = icmp ne i8* %96, null, !dbg !15523
  br i1 %cmp100, label %cond.true, label %cond.false, !dbg !15523

cond.true:                                        ; preds = %if.then93
  %97 = load i8*, i8** %fail_reason, align 8, !dbg !15523
  br label %cond.end, !dbg !15523

cond.false:                                       ; preds = %if.then93
  br label %cond.end, !dbg !15523

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond102 = phi i8* [ %97, %cond.true ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.110, i64 0, i64 0), %cond.false ], !dbg !15523
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev95, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.107, i64 0, i64 0), i8* %cond, i32 %95, i8* %cond102) #13, !dbg !15523
  %98 = load %struct.mtip_cmd*, %struct.mtip_cmd** %cmd, align 8, !dbg !15525
  call void @mtip_complete_command(%struct.mtip_cmd* %98, i8 zeroext 7) #12, !dbg !15526
  br label %for.inc117, !dbg !15527

if.end103:                                        ; preds = %land.lhs.true, %lor.lhs.false87
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.then84
  %99 = load i32, i32* %reissue, align 4, !dbg !15528
  %tobool105 = icmp ne i32 %99, 0, !dbg !15528
  br i1 %tobool105, label %land.lhs.true106, label %if.end113, !dbg !15530

land.lhs.true106:                                 ; preds = %if.end104
  %100 = load %struct.mtip_cmd*, %struct.mtip_cmd** %cmd, align 8, !dbg !15531
  %retries = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %100, i32 0, i32 5, !dbg !15532
  %101 = load i32, i32* %retries, align 8, !dbg !15533
  %dec107 = add i32 %101, -1, !dbg !15533
  store i32 %dec107, i32* %retries, align 8, !dbg !15533
  %cmp108 = icmp sgt i32 %101, 0, !dbg !15534
  br i1 %cmp108, label %if.then110, label %if.end113, !dbg !15535

if.then110:                                       ; preds = %land.lhs.true106
  %102 = load i32, i32* %tag, align 4, !dbg !15536
  %conv111 = sext i32 %102 to i64, !dbg !15536
  %arraydecay112 = getelementptr inbounds [4 x i64], [4 x i64]* %tagaccum, i64 0, i64 0, !dbg !15538
  call void @set_bit(i64 %conv111, i64* %arraydecay112) #12, !dbg !15539
  %103 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !15540
  %104 = load i32, i32* %tag, align 4, !dbg !15541
  call void @mtip_issue_ncq_command(%struct.mtip_port* %103, i32 %104) #12, !dbg !15542
  br label %for.inc117, !dbg !15543

if.end113:                                        ; preds = %land.lhs.true106, %if.end104
  %105 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !15544
  %dd114 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %105, i32 0, i32 0, !dbg !15544
  %106 = load %struct.driver_data*, %struct.driver_data** %dd114, align 8, !dbg !15544
  %pdev115 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %106, i32 0, i32 4, !dbg !15544
  %107 = load %struct.pci_dev*, %struct.pci_dev** %pdev115, align 8, !dbg !15544
  %dev116 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %107, i32 0, i32 41, !dbg !15544
  %108 = load i32, i32* %tag, align 4, !dbg !15544
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev116, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.111, i64 0, i64 0), i32 %108) #13, !dbg !15544
  %109 = load %struct.mtip_cmd*, %struct.mtip_cmd** %cmd, align 8, !dbg !15545
  call void @mtip_complete_command(%struct.mtip_cmd* %109, i8 zeroext 10) #12, !dbg !15546
  br label %for.inc117, !dbg !15547

for.inc117:                                       ; preds = %if.end113, %if.then110, %cond.end
  %110 = load i32, i32* %bit, align 4, !dbg !15548
  %inc118 = add i32 %110, 1, !dbg !15548
  store i32 %inc118, i32* %bit, align 4, !dbg !15548
  br label %for.cond71, !dbg !15549, !llvm.loop !15550

for.end119:                                       ; preds = %for.cond71
  br label %for.inc120, !dbg !15552

for.inc120:                                       ; preds = %for.end119
  %111 = load i32, i32* %group, align 4, !dbg !15553
  %inc121 = add i32 %111, 1, !dbg !15553
  store i32 %inc121, i32* %group, align 4, !dbg !15553
  br label %for.cond66, !dbg !15554, !llvm.loop !15555

for.end122:                                       ; preds = %for.cond66
  %112 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15557
  %arraydecay123 = getelementptr inbounds [4 x i64], [4 x i64]* %tagaccum, i64 0, i64 0, !dbg !15558
  %113 = load i32, i32* %cmd_cnt, align 4, !dbg !15559
  call void @print_tags(%struct.driver_data* %112, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.112, i64 0, i64 0), i64* %arraydecay123, i32 %113) #12, !dbg !15560
  br label %return, !dbg !15561

return:                                           ; preds = %for.end122, %if.then
  ret void, !dbg !15561
}

; Function Attrs: noredzone
declare dso_local void @blk_mq_tagset_busy_iter(%struct.blk_mq_tag_set*, i1 (%struct.request*, i8*, i1)*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mtip_queue_cmd(%struct.request* %req, i8* %data, i1 zeroext %reserved) #2 !dbg !15562 {
entry:
  %req.addr = alloca %struct.request*, align 8
  %data.addr = alloca i8*, align 8
  %reserved.addr = alloca i8, align 1
  %dd = alloca %struct.driver_data*, align 8
  store %struct.request* %req, %struct.request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %req.addr, metadata !15565, metadata !DIExpression()), !dbg !15566
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !15567, metadata !DIExpression()), !dbg !15568
  %frombool = zext i1 %reserved to i8
  store i8 %frombool, i8* %reserved.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %reserved.addr, metadata !15569, metadata !DIExpression()), !dbg !15570
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd, metadata !15571, metadata !DIExpression()), !dbg !15572
  %0 = load i8*, i8** %data.addr, align 8, !dbg !15573
  %1 = bitcast i8* %0 to %struct.driver_data*, !dbg !15573
  store %struct.driver_data* %1, %struct.driver_data** %dd, align 8, !dbg !15572
  %2 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !15574
  %tag = getelementptr inbounds %struct.request, %struct.request* %2, i32 0, i32 5, !dbg !15575
  %3 = load i32, i32* %tag, align 8, !dbg !15575
  %conv = sext i32 %3 to i64, !dbg !15574
  %4 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !15576
  %port = getelementptr inbounds %struct.driver_data, %struct.driver_data* %4, i32 0, i32 7, !dbg !15577
  %5 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !15577
  %cmds_to_issue = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %5, i32 0, i32 20, !dbg !15578
  %arraydecay = getelementptr inbounds [4 x i64], [4 x i64]* %cmds_to_issue, i64 0, i64 0, !dbg !15576
  call void @set_bit(i64 %conv, i64* %arraydecay) #12, !dbg !15579
  %6 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !15580
  call void @blk_abort_request(%struct.request* %6) #12, !dbg !15581
  ret i1 true, !dbg !15582
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mtip_abort_cmd(%struct.request* %req, i8* %data, i1 zeroext %reserved) #2 !dbg !15583 {
entry:
  %req.addr = alloca %struct.request*, align 8
  %data.addr = alloca i8*, align 8
  %reserved.addr = alloca i8, align 1
  %cmd = alloca %struct.mtip_cmd*, align 8
  %dd = alloca %struct.driver_data*, align 8
  store %struct.request* %req, %struct.request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %req.addr, metadata !15584, metadata !DIExpression()), !dbg !15585
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !15586, metadata !DIExpression()), !dbg !15587
  %frombool = zext i1 %reserved to i8
  store i8 %frombool, i8* %reserved.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %reserved.addr, metadata !15588, metadata !DIExpression()), !dbg !15589
  call void @llvm.dbg.declare(metadata %struct.mtip_cmd** %cmd, metadata !15590, metadata !DIExpression()), !dbg !15591
  %0 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !15592
  %call = call i8* @blk_mq_rq_to_pdu(%struct.request* %0) #12, !dbg !15593
  %1 = bitcast i8* %call to %struct.mtip_cmd*, !dbg !15593
  store %struct.mtip_cmd* %1, %struct.mtip_cmd** %cmd, align 8, !dbg !15591
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd, metadata !15594, metadata !DIExpression()), !dbg !15595
  %2 = load i8*, i8** %data.addr, align 8, !dbg !15596
  %3 = bitcast i8* %2 to %struct.driver_data*, !dbg !15596
  store %struct.driver_data* %3, %struct.driver_data** %dd, align 8, !dbg !15595
  %4 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !15597
  %tag = getelementptr inbounds %struct.request, %struct.request* %4, i32 0, i32 5, !dbg !15598
  %5 = load i32, i32* %tag, align 8, !dbg !15598
  %conv = sext i32 %5 to i64, !dbg !15597
  %6 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !15599
  %port = getelementptr inbounds %struct.driver_data, %struct.driver_data* %6, i32 0, i32 7, !dbg !15600
  %7 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !15600
  %cmds_to_issue = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %7, i32 0, i32 20, !dbg !15601
  %arraydecay = getelementptr inbounds [4 x i64], [4 x i64]* %cmds_to_issue, i64 0, i64 0, !dbg !15599
  call void @clear_bit(i64 %conv, i64* %arraydecay) #12, !dbg !15602
  %8 = load %struct.mtip_cmd*, %struct.mtip_cmd** %cmd, align 8, !dbg !15603
  %status = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %8, i32 0, i32 7, !dbg !15604
  store i8 10, i8* %status, align 8, !dbg !15605
  %9 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !15606
  call void @mtip_softirq_done_fn(%struct.request* %9) #12, !dbg !15607
  ret i1 true, !dbg !15608
}

; Function Attrs: noredzone
declare dso_local i64 @find_next_bit(i64*, i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_ftl_rebuild_poll(%struct.driver_data* %dd) #2 !dbg !15609 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !7000, metadata !DIExpression()), !dbg !15610
  %retval = alloca i32, align 4
  %dd.addr = alloca %struct.driver_data*, align 8
  %timeout = alloca i64, align 8
  %cnt = alloca i64, align 8
  %start = alloca i64, align 8
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !15612, metadata !DIExpression()), !dbg !15613
  call void @llvm.dbg.declare(metadata i64* %timeout, metadata !15614, metadata !DIExpression()), !dbg !15615
  call void @llvm.dbg.declare(metadata i64* %cnt, metadata !15616, metadata !DIExpression()), !dbg !15617
  store i64 0, i64* %cnt, align 8, !dbg !15617
  call void @llvm.dbg.declare(metadata i64* %start, metadata !15618, metadata !DIExpression()), !dbg !15619
  %0 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15620
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %0, i32 0, i32 4, !dbg !15620
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !15620
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !15620
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.115, i64 0, i64 0)) #13, !dbg !15620
  %2 = load volatile i64, i64* @jiffies, align 8, !dbg !15621
  store i64 %2, i64* %start, align 8, !dbg !15622
  %3 = load volatile i64, i64* @jiffies, align 8, !dbg !15623
  store i32 2400000, i32* %m.addr.i, align 4
  %4 = load i32, i32* %m.addr.i, align 4, !dbg !15624
  %5 = call i1 @llvm.is.constant.i32(i32 %4) #11, !dbg !15625
  br i1 %5, label %if.then.i, label %if.else.i, !dbg !15626

if.then.i:                                        ; preds = %entry
  %6 = load i32, i32* %m.addr.i, align 4, !dbg !15627
  %cmp.i = icmp slt i32 %6, 0, !dbg !15628
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !15629

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !15630
  br label %msecs_to_jiffies.exit, !dbg !15630

if.end.i:                                         ; preds = %if.then.i
  %7 = load i32, i32* %m.addr.i, align 4, !dbg !15631
  %call.i = call i64 @_msecs_to_jiffies(i32 %7) #14, !dbg !15632
  store i64 %call.i, i64* %retval.i, align 8, !dbg !15633
  br label %msecs_to_jiffies.exit, !dbg !15633

if.else.i:                                        ; preds = %entry
  %8 = load i32, i32* %m.addr.i, align 4, !dbg !15634
  %call2.i = call i64 @__msecs_to_jiffies(i32 %8) #14, !dbg !15635
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !15636
  br label %msecs_to_jiffies.exit, !dbg !15636

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %9 = load i64, i64* %retval.i, align 8, !dbg !15637
  %add = add i64 %3, %9, !dbg !15638
  store i64 %add, i64* %timeout, align 8, !dbg !15639
  br label %do.body, !dbg !15640

do.body:                                          ; preds = %do.cond, %msecs_to_jiffies.exit
  %10 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15641
  %dd_flag = getelementptr inbounds %struct.driver_data, %struct.driver_data* %10, i32 0, i32 11, !dbg !15641
  %call1 = call zeroext i1 @test_bit(i64 1, i64* %dd_flag) #12, !dbg !15641
  %lnot = xor i1 %call1, true, !dbg !15641
  %lnot2 = xor i1 %lnot, true, !dbg !15641
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !15641
  %conv = sext i32 %lnot.ext to i64, !dbg !15641
  %tobool = icmp ne i64 %conv, 0, !dbg !15641
  br i1 %tobool, label %if.then, label %if.end, !dbg !15644

if.then:                                          ; preds = %do.body
  store i32 -14, i32* %retval, align 4, !dbg !15645
  br label %return, !dbg !15645

if.end:                                           ; preds = %do.body
  %11 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15646
  %pdev3 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %11, i32 0, i32 4, !dbg !15648
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev3, align 8, !dbg !15648
  %call4 = call zeroext i1 @mtip_check_surprise_removal(%struct.pci_dev* %12) #12, !dbg !15649
  br i1 %call4, label %if.then5, label %if.end6, !dbg !15650

if.then5:                                         ; preds = %if.end
  store i32 -14, i32* %retval, align 4, !dbg !15651
  br label %return, !dbg !15651

if.end6:                                          ; preds = %if.end
  %13 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15652
  %port = getelementptr inbounds %struct.driver_data, %struct.driver_data* %13, i32 0, i32 7, !dbg !15654
  %14 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !15654
  %call7 = call i32 @mtip_get_identify(%struct.mtip_port* %14, i8* null) #12, !dbg !15655
  %cmp = icmp slt i32 %call7, 0, !dbg !15656
  br i1 %cmp, label %if.then9, label %if.end10, !dbg !15657

if.then9:                                         ; preds = %if.end6
  store i32 -14, i32* %retval, align 4, !dbg !15658
  br label %return, !dbg !15658

if.end10:                                         ; preds = %if.end6
  %15 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15659
  %port11 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %15, i32 0, i32 7, !dbg !15661
  %16 = load %struct.mtip_port*, %struct.mtip_port** %port11, align 8, !dbg !15661
  %identify = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %16, i32 0, i32 12, !dbg !15662
  %17 = load i16*, i16** %identify, align 8, !dbg !15662
  %add.ptr = getelementptr i16, i16* %17, i64 142, !dbg !15663
  %18 = load i16, i16* %add.ptr, align 2, !dbg !15664
  %conv12 = zext i16 %18 to i32, !dbg !15664
  %cmp13 = icmp eq i32 %conv12, 60753, !dbg !15665
  br i1 %cmp13, label %if.then15, label %if.else, !dbg !15666

if.then15:                                        ; preds = %if.end10
  call void @ssleep(i32 1) #12, !dbg !15667
  %19 = load i64, i64* %cnt, align 8, !dbg !15669
  %inc = add i64 %19, 1, !dbg !15669
  store i64 %inc, i64* %cnt, align 8, !dbg !15669
  %cmp16 = icmp uge i64 %19, 180, !dbg !15671
  br i1 %cmp16, label %if.then18, label %if.end22, !dbg !15672

if.then18:                                        ; preds = %if.then15
  %20 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15673
  %pdev19 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %20, i32 0, i32 4, !dbg !15673
  %21 = load %struct.pci_dev*, %struct.pci_dev** %pdev19, align 8, !dbg !15673
  %dev20 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %21, i32 0, i32 41, !dbg !15673
  %22 = load volatile i64, i64* @jiffies, align 8, !dbg !15673
  %23 = load i64, i64* %start, align 8, !dbg !15673
  %sub = sub i64 %22, %23, !dbg !15673
  %call21 = call i32 @jiffies_to_msecs(i64 %sub) #12, !dbg !15673
  %div = udiv i32 %call21, 1000, !dbg !15673
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev20, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.116, i64 0, i64 0), i32 %div) #13, !dbg !15673
  store i64 0, i64* %cnt, align 8, !dbg !15675
  br label %if.end22, !dbg !15676

if.end22:                                         ; preds = %if.then18, %if.then15
  br label %if.end29, !dbg !15677

if.else:                                          ; preds = %if.end10
  %24 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15678
  %pdev23 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %24, i32 0, i32 4, !dbg !15678
  %25 = load %struct.pci_dev*, %struct.pci_dev** %pdev23, align 8, !dbg !15678
  %dev24 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 41, !dbg !15678
  %26 = load volatile i64, i64* @jiffies, align 8, !dbg !15678
  %27 = load i64, i64* %start, align 8, !dbg !15678
  %sub25 = sub i64 %26, %27, !dbg !15678
  %call26 = call i32 @jiffies_to_msecs(i64 %sub25) #12, !dbg !15678
  %div27 = udiv i32 %call26, 1000, !dbg !15678
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev24, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.117, i64 0, i64 0), i32 %div27) #13, !dbg !15678
  %28 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15680
  %call28 = call i32 @mtip_block_initialize(%struct.driver_data* %28) #12, !dbg !15681
  store i32 0, i32* %retval, align 4, !dbg !15682
  br label %return, !dbg !15682

if.end29:                                         ; preds = %if.end22
  br label %do.cond, !dbg !15683

do.cond:                                          ; preds = %if.end29
  %29 = load volatile i64, i64* @jiffies, align 8, !dbg !15684
  %30 = load i64, i64* %timeout, align 8, !dbg !15684
  %sub30 = sub i64 %29, %30, !dbg !15684
  %cmp31 = icmp slt i64 %sub30, 0, !dbg !15684
  br i1 %cmp31, label %do.body, label %do.end, !dbg !15683, !llvm.loop !15685

do.end:                                           ; preds = %do.cond
  %31 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15687
  %pdev33 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %31, i32 0, i32 4, !dbg !15687
  %32 = load %struct.pci_dev*, %struct.pci_dev** %pdev33, align 8, !dbg !15687
  %dev34 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %32, i32 0, i32 41, !dbg !15687
  %33 = load volatile i64, i64* @jiffies, align 8, !dbg !15687
  %34 = load i64, i64* %start, align 8, !dbg !15687
  %sub35 = sub i64 %33, %34, !dbg !15687
  %call36 = call i32 @jiffies_to_msecs(i64 %sub35) #12, !dbg !15687
  %div37 = udiv i32 %call36, 1000, !dbg !15687
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev34, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.118, i64 0, i64 0), i32 %div37) #13, !dbg !15687
  store i32 -14, i32* %retval, align 4, !dbg !15688
  br label %return, !dbg !15688

return:                                           ; preds = %do.end, %if.else, %if.then9, %if.then5, %if.then
  %35 = load i32, i32* %retval, align 4, !dbg !15689
  ret i32 %35, !dbg !15689
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @print_tags(%struct.driver_data* %dd, i8* %msg, i64* %tagbits, i32 %cnt) #2 !dbg !15690 {
entry:
  %dd.addr = alloca %struct.driver_data*, align 8
  %msg.addr = alloca i8*, align 8
  %tagbits.addr = alloca i64*, align 8
  %cnt.addr = alloca i32, align 4
  %tagmap = alloca [128 x i8], align 16
  %group = alloca i32, align 4
  %tagmap_len = alloca i32, align 4
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !15693, metadata !DIExpression()), !dbg !15694
  store i8* %msg, i8** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %msg.addr, metadata !15695, metadata !DIExpression()), !dbg !15696
  store i64* %tagbits, i64** %tagbits.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %tagbits.addr, metadata !15697, metadata !DIExpression()), !dbg !15698
  store i32 %cnt, i32* %cnt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr, metadata !15699, metadata !DIExpression()), !dbg !15700
  call void @llvm.dbg.declare(metadata [128 x i8]* %tagmap, metadata !15701, metadata !DIExpression()), !dbg !15703
  call void @llvm.dbg.declare(metadata i32* %group, metadata !15704, metadata !DIExpression()), !dbg !15705
  call void @llvm.dbg.declare(metadata i32* %tagmap_len, metadata !15706, metadata !DIExpression()), !dbg !15707
  store i32 0, i32* %tagmap_len, align 4, !dbg !15707
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %tagmap, i64 0, i64 0, !dbg !15708
  call void @llvm.memset.p0i8.i64(i8* align 16 %arraydecay, i8 0, i64 128, i1 false), !dbg !15708
  store i32 4, i32* %group, align 4, !dbg !15709
  br label %for.cond, !dbg !15711

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %group, align 4, !dbg !15712
  %cmp = icmp sgt i32 %0, 0, !dbg !15714
  br i1 %cmp, label %for.body, label %for.end, !dbg !15715

for.body:                                         ; preds = %for.cond
  %arraydecay1 = getelementptr inbounds [128 x i8], [128 x i8]* %tagmap, i64 0, i64 0, !dbg !15716
  %1 = load i32, i32* %tagmap_len, align 4, !dbg !15717
  %idx.ext = sext i32 %1 to i64, !dbg !15718
  %add.ptr = getelementptr i8, i8* %arraydecay1, i64 %idx.ext, !dbg !15718
  %2 = load i64*, i64** %tagbits.addr, align 8, !dbg !15719
  %3 = load i32, i32* %group, align 4, !dbg !15720
  %sub = sub i32 %3, 1, !dbg !15721
  %idxprom = sext i32 %sub to i64, !dbg !15719
  %arrayidx = getelementptr i64, i64* %2, i64 %idxprom, !dbg !15719
  %4 = load i64, i64* %arrayidx, align 8, !dbg !15719
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.113, i64 0, i64 0), i64 %4) #12, !dbg !15722
  %5 = load i32, i32* %tagmap_len, align 4, !dbg !15723
  %add = add i32 %5, %call, !dbg !15723
  store i32 %add, i32* %tagmap_len, align 4, !dbg !15723
  br label %for.inc, !dbg !15724

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %group, align 4, !dbg !15725
  %dec = add i32 %6, -1, !dbg !15725
  store i32 %dec, i32* %group, align 4, !dbg !15725
  br label %for.cond, !dbg !15726, !llvm.loop !15727

for.end:                                          ; preds = %for.cond
  %7 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15729
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %7, i32 0, i32 4, !dbg !15729
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !15729
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 41, !dbg !15729
  %9 = load i32, i32* %cnt.addr, align 4, !dbg !15729
  %10 = load i8*, i8** %msg.addr, align 8, !dbg !15729
  %arraydecay2 = getelementptr inbounds [128 x i8], [128 x i8]* %tagmap, i64 0, i64 0, !dbg !15729
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.114, i64 0, i64 0), i32 %9, i8* %10, i8* %arraydecay2) #13, !dbg !15729
  ret void, !dbg !15730
}

; Function Attrs: noredzone
declare dso_local void @blk_abort_request(%struct.request*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ssleep(i32 %seconds) #2 !dbg !15731 {
entry:
  %seconds.addr = alloca i32, align 4
  store i32 %seconds, i32* %seconds.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %seconds.addr, metadata !15735, metadata !DIExpression()), !dbg !15736
  %0 = load i32, i32* %seconds.addr, align 4, !dbg !15737
  %mul = mul i32 %0, 1000, !dbg !15738
  call void @msleep(i32 %mul) #12, !dbg !15739
  ret void, !dbg !15740
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #2 !dbg !15741 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !15742, metadata !DIExpression()), !dbg !15744
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !15745, metadata !DIExpression()), !dbg !15744
  %0 = load i64, i64* %__edi, align 8, !dbg !15744
  store i64 %0, i64* %__edi, align 8, !dbg !15744
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !15746, metadata !DIExpression()), !dbg !15744
  %1 = load i64, i64* %__esi, align 8, !dbg !15744
  store i64 %1, i64* %__esi, align 8, !dbg !15744
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !15747, metadata !DIExpression()), !dbg !15744
  %2 = load i64, i64* %__edx, align 8, !dbg !15744
  store i64 %2, i64* %__edx, align 8, !dbg !15744
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !15748, metadata !DIExpression()), !dbg !15744
  %3 = load i64, i64* %__ecx, align 8, !dbg !15744
  store i64 %3, i64* %__ecx, align 8, !dbg !15744
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !15749, metadata !DIExpression()), !dbg !15744
  %4 = load i64, i64* %__eax, align 8, !dbg !15744
  store i64 %4, i64* %__eax, align 8, !dbg !15744
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !15744
  %6 = call i64 @llvm.read_register.i64(metadata !6437), !dbg !15750
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #11, !dbg !15750, !srcloc !15753
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !15750
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !15750
  store i64 %asmresult, i64* %__eax, align 8, !dbg !15750
  call void @llvm.write_register.i64(metadata !6437, i64 %asmresult1), !dbg !15750
  %8 = load i64, i64* %__eax, align 8, !dbg !15750
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !15754, metadata !DIExpression()), !dbg !15756
  store i64 -1, i64* %__mask, align 8, !dbg !15756
  %9 = load i64, i64* %__mask, align 8, !dbg !15756
  store i64 %9, i64* %tmp, align 8, !dbg !15756
  %10 = load i64, i64* %tmp, align 8, !dbg !15756
  %and = and i64 %8, %10, !dbg !15750
  store i64 %and, i64* %__ret, align 8, !dbg !15750
  %11 = load i64, i64* %__ret, align 8, !dbg !15744
  store i64 %11, i64* %tmp2, align 8, !dbg !15757
  %12 = load i64, i64* %tmp2, align 8, !dbg !15744
  ret i64 %12, !dbg !15758
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #2 !dbg !15759 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !15760, metadata !DIExpression()), !dbg !15762
  %0 = load i64, i64* %__edi, align 8, !dbg !15762
  store i64 %0, i64* %__edi, align 8, !dbg !15762
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !15763, metadata !DIExpression()), !dbg !15762
  %1 = load i64, i64* %__esi, align 8, !dbg !15762
  store i64 %1, i64* %__esi, align 8, !dbg !15762
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !15764, metadata !DIExpression()), !dbg !15762
  %2 = load i64, i64* %__edx, align 8, !dbg !15762
  store i64 %2, i64* %__edx, align 8, !dbg !15762
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !15765, metadata !DIExpression()), !dbg !15762
  %3 = load i64, i64* %__ecx, align 8, !dbg !15762
  store i64 %3, i64* %__ecx, align 8, !dbg !15762
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !15766, metadata !DIExpression()), !dbg !15762
  %4 = load i64, i64* %__eax, align 8, !dbg !15762
  store i64 %4, i64* %__eax, align 8, !dbg !15762
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !15762
  %6 = call i64 @llvm.read_register.i64(metadata !6437), !dbg !15762
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #11, !dbg !15762, !srcloc !15767
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !15762
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !15762
  store i64 %asmresult, i64* %__eax, align 8, !dbg !15762
  call void @llvm.write_register.i64(metadata !6437, i64 %asmresult1), !dbg !15762
  ret void, !dbg !15768
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #10

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #11

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #2 !dbg !15769 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !15772, metadata !DIExpression()), !dbg !15773
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !15774, metadata !DIExpression()), !dbg !15775
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !15776, metadata !DIExpression()), !dbg !15777
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !15778
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !15780
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !15781
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #12, !dbg !15782
  br i1 %call, label %if.end, label %if.then, !dbg !15783

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !15784

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !15785
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !15786
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !15787
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !15788
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !15789
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !15790
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !15791
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !15792
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !15793
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !15794
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !15795
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !15796
  br label %do.body, !dbg !15797

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !15798

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !15800

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !15798

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !15802
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !15802
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !15802
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !15802
  br label %do.end7, !dbg !15802

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !15798

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !15804
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #2 !dbg !15805 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !15808, metadata !DIExpression()), !dbg !15809
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !15810, metadata !DIExpression()), !dbg !15811
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !15812, metadata !DIExpression()), !dbg !15813
  ret i1 true, !dbg !15814
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #2 !dbg !15815 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !15818, metadata !DIExpression()), !dbg !15819
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !15820, metadata !DIExpression()), !dbg !15822
  %0 = load i64, i64* %__edi, align 8, !dbg !15822
  store i64 %0, i64* %__edi, align 8, !dbg !15822
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !15823, metadata !DIExpression()), !dbg !15822
  %1 = load i64, i64* %__esi, align 8, !dbg !15822
  store i64 %1, i64* %__esi, align 8, !dbg !15822
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !15824, metadata !DIExpression()), !dbg !15822
  %2 = load i64, i64* %__edx, align 8, !dbg !15822
  store i64 %2, i64* %__edx, align 8, !dbg !15822
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !15825, metadata !DIExpression()), !dbg !15822
  %3 = load i64, i64* %__ecx, align 8, !dbg !15822
  store i64 %3, i64* %__ecx, align 8, !dbg !15822
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !15826, metadata !DIExpression()), !dbg !15822
  %4 = load i64, i64* %__eax, align 8, !dbg !15822
  store i64 %4, i64* %__eax, align 8, !dbg !15822
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !15822
  %6 = call i64 @llvm.read_register.i64(metadata !6437), !dbg !15822
  %7 = load i64, i64* %f.addr, align 8, !dbg !15822
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #11, !dbg !15822, !srcloc !15827
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !15822
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !15822
  store i64 %asmresult, i64* %__eax, align 8, !dbg !15822
  call void @llvm.write_register.i64(metadata !6437, i64 %asmresult1), !dbg !15822
  ret void, !dbg !15828
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del_init(%struct.list_head* %entry1) #2 !dbg !15829 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !15830, metadata !DIExpression()), !dbg !15831
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !15832
  call void @__list_del_entry(%struct.list_head* %0) #12, !dbg !15833
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !15834
  call void @INIT_LIST_HEAD(%struct.list_head* %1) #12, !dbg !15835
  ret void, !dbg !15836
}

; Function Attrs: noredzone
declare dso_local void @synchronize_irq(i32) #1

; Function Attrs: noredzone
declare dso_local i32 @fsync_bdev(%struct.block_device*) #1

; Function Attrs: noredzone
declare dso_local void @blk_set_queue_dying(%struct.request_queue*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_block_remove(%struct.driver_data* %dd) #2 !dbg !15837 {
entry:
  %dd.addr = alloca %struct.driver_data*, align 8
  %kobj = alloca %struct.kobject*, align 8
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !15838, metadata !DIExpression()), !dbg !15839
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj, metadata !15840, metadata !DIExpression()), !dbg !15841
  %0 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15842
  call void @mtip_hw_debugfs_exit(%struct.driver_data* %0) #12, !dbg !15843
  %1 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15844
  %mtip_svc_handler = getelementptr inbounds %struct.driver_data, %struct.driver_data* %1, i32 0, i32 12, !dbg !15846
  %2 = load %struct.task_struct*, %struct.task_struct** %mtip_svc_handler, align 8, !dbg !15846
  %tobool = icmp ne %struct.task_struct* %2, null, !dbg !15844
  br i1 %tobool, label %if.then, label %if.end, !dbg !15847

if.then:                                          ; preds = %entry
  %3 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15848
  %port = getelementptr inbounds %struct.driver_data, %struct.driver_data* %3, i32 0, i32 7, !dbg !15850
  %4 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !15850
  %flags = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %4, i32 0, i32 22, !dbg !15851
  call void @set_bit(i64 8, i64* %flags) #12, !dbg !15852
  %5 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15853
  %port1 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %5, i32 0, i32 7, !dbg !15853
  %6 = load %struct.mtip_port*, %struct.mtip_port** %port1, align 8, !dbg !15853
  %svc_wait = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %6, i32 0, i32 21, !dbg !15853
  call void @__wake_up(%struct.wait_queue_head* %svc_wait, i32 1, i32 1, i8* null) #12, !dbg !15853
  %7 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15854
  %mtip_svc_handler2 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %7, i32 0, i32 12, !dbg !15855
  %8 = load %struct.task_struct*, %struct.task_struct** %mtip_svc_handler2, align 8, !dbg !15855
  %call = call i32 @kthread_stop(%struct.task_struct* %8) #12, !dbg !15856
  br label %if.end, !dbg !15857

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15858
  %dd_flag = getelementptr inbounds %struct.driver_data, %struct.driver_data* %9, i32 0, i32 11, !dbg !15860
  %call3 = call zeroext i1 @test_bit(i64 7, i64* %dd_flag) #12, !dbg !15861
  br i1 %call3, label %if.then4, label %if.end11, !dbg !15862

if.then4:                                         ; preds = %if.end
  %10 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15863
  %disk = getelementptr inbounds %struct.driver_data, %struct.driver_data* %10, i32 0, i32 3, !dbg !15863
  %11 = load %struct.gendisk*, %struct.gendisk** %disk, align 8, !dbg !15863
  %part0 = getelementptr inbounds %struct.gendisk, %struct.gendisk* %11, i32 0, i32 7, !dbg !15863
  %__dev = getelementptr inbounds %struct.hd_struct, %struct.hd_struct* %part0, i32 0, i32 5, !dbg !15863
  %kobj5 = getelementptr inbounds %struct.device, %struct.device* %__dev, i32 0, i32 0, !dbg !15865
  %call6 = call %struct.kobject* @kobject_get(%struct.kobject* %kobj5) #12, !dbg !15866
  store %struct.kobject* %call6, %struct.kobject** %kobj, align 8, !dbg !15867
  %12 = load %struct.kobject*, %struct.kobject** %kobj, align 8, !dbg !15868
  %tobool7 = icmp ne %struct.kobject* %12, null, !dbg !15868
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !15870

if.then8:                                         ; preds = %if.then4
  %13 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15871
  %14 = load %struct.kobject*, %struct.kobject** %kobj, align 8, !dbg !15873
  %call9 = call i32 @mtip_hw_sysfs_exit(%struct.driver_data* %13, %struct.kobject* %14) #12, !dbg !15874
  %15 = load %struct.kobject*, %struct.kobject** %kobj, align 8, !dbg !15875
  call void @kobject_put(%struct.kobject* %15) #12, !dbg !15876
  br label %if.end10, !dbg !15877

if.end10:                                         ; preds = %if.then8, %if.then4
  br label %if.end11, !dbg !15878

if.end11:                                         ; preds = %if.end10, %if.end
  %16 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15879
  %sr = getelementptr inbounds %struct.driver_data, %struct.driver_data* %16, i32 0, i32 14, !dbg !15881
  %17 = load i8, i8* %sr, align 8, !dbg !15881
  %tobool12 = trunc i8 %17 to i1, !dbg !15881
  br i1 %tobool12, label %if.else, label %if.then13, !dbg !15882

if.then13:                                        ; preds = %if.end11
  %18 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15883
  %port14 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %18, i32 0, i32 7, !dbg !15886
  %19 = load %struct.mtip_port*, %struct.mtip_port** %port14, align 8, !dbg !15886
  %call15 = call i32 @mtip_quiesce_io(%struct.mtip_port* %19, i64 45000) #12, !dbg !15887
  %tobool16 = icmp ne i32 %call15, 0, !dbg !15887
  br i1 %tobool16, label %if.end19, label %if.then17, !dbg !15888

if.then17:                                        ; preds = %if.then13
  %20 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15889
  %call18 = call i32 @mtip_standby_drive(%struct.driver_data* %20) #12, !dbg !15890
  br label %if.end19, !dbg !15890

if.end19:                                         ; preds = %if.then17, %if.then13
  br label %if.end21, !dbg !15891

if.else:                                          ; preds = %if.end11
  %21 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15892
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %21, i32 0, i32 4, !dbg !15892
  %22 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !15892
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %22, i32 0, i32 41, !dbg !15892
  %23 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15892
  %disk20 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %23, i32 0, i32 3, !dbg !15892
  %24 = load %struct.gendisk*, %struct.gendisk** %disk20, align 8, !dbg !15892
  %disk_name = getelementptr inbounds %struct.gendisk, %struct.gendisk* %24, i32 0, i32 3, !dbg !15892
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %disk_name, i64 0, i64 0, !dbg !15892
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.120, i64 0, i64 0), i8* %arraydecay) #13, !dbg !15892
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.end19
  %25 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15893
  %queue = getelementptr inbounds %struct.driver_data, %struct.driver_data* %25, i32 0, i32 5, !dbg !15894
  %26 = load %struct.request_queue*, %struct.request_queue** %queue, align 8, !dbg !15894
  call void @blk_freeze_queue_start(%struct.request_queue* %26) #12, !dbg !15895
  %27 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15896
  %queue22 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %27, i32 0, i32 5, !dbg !15897
  %28 = load %struct.request_queue*, %struct.request_queue** %queue22, align 8, !dbg !15897
  call void @blk_mq_quiesce_queue(%struct.request_queue* %28) #12, !dbg !15898
  %29 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15899
  %tags = getelementptr inbounds %struct.driver_data, %struct.driver_data* %29, i32 0, i32 6, !dbg !15900
  %30 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15901
  %31 = bitcast %struct.driver_data* %30 to i8*, !dbg !15901
  call void @blk_mq_tagset_busy_iter(%struct.blk_mq_tag_set* %tags, i1 (%struct.request*, i8*, i1)* @mtip_no_dev_cleanup, i8* %31) #12, !dbg !15902
  %32 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15903
  %queue23 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %32, i32 0, i32 5, !dbg !15904
  %33 = load %struct.request_queue*, %struct.request_queue** %queue23, align 8, !dbg !15904
  call void @blk_mq_unquiesce_queue(%struct.request_queue* %33) #12, !dbg !15905
  %34 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15906
  %bdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %34, i32 0, i32 21, !dbg !15908
  %35 = load %struct.block_device*, %struct.block_device** %bdev, align 8, !dbg !15908
  %tobool24 = icmp ne %struct.block_device* %35, null, !dbg !15906
  br i1 %tobool24, label %if.then25, label %if.end28, !dbg !15909

if.then25:                                        ; preds = %if.end21
  %36 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15910
  %bdev26 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %36, i32 0, i32 21, !dbg !15912
  %37 = load %struct.block_device*, %struct.block_device** %bdev26, align 8, !dbg !15912
  call void @bdput(%struct.block_device* %37) #12, !dbg !15913
  %38 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15914
  %bdev27 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %38, i32 0, i32 21, !dbg !15915
  store %struct.block_device* null, %struct.block_device** %bdev27, align 8, !dbg !15916
  br label %if.end28, !dbg !15917

if.end28:                                         ; preds = %if.then25, %if.end21
  %39 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15918
  %disk29 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %39, i32 0, i32 3, !dbg !15920
  %40 = load %struct.gendisk*, %struct.gendisk** %disk29, align 8, !dbg !15920
  %tobool30 = icmp ne %struct.gendisk* %40, null, !dbg !15918
  br i1 %tobool30, label %if.then31, label %if.end46, !dbg !15921

if.then31:                                        ; preds = %if.end28
  %41 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15922
  %dd_flag32 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %41, i32 0, i32 11, !dbg !15925
  %call33 = call zeroext i1 @test_bit(i64 7, i64* %dd_flag32) #12, !dbg !15926
  br i1 %call33, label %if.then34, label %if.end36, !dbg !15927

if.then34:                                        ; preds = %if.then31
  %42 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15928
  %disk35 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %42, i32 0, i32 3, !dbg !15929
  %43 = load %struct.gendisk*, %struct.gendisk** %disk35, align 8, !dbg !15929
  call void @del_gendisk(%struct.gendisk* %43) #12, !dbg !15930
  br label %if.end36, !dbg !15930

if.end36:                                         ; preds = %if.then34, %if.then31
  %44 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15931
  %disk37 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %44, i32 0, i32 3, !dbg !15933
  %45 = load %struct.gendisk*, %struct.gendisk** %disk37, align 8, !dbg !15933
  %queue38 = getelementptr inbounds %struct.gendisk, %struct.gendisk* %45, i32 0, i32 9, !dbg !15934
  %46 = load %struct.request_queue*, %struct.request_queue** %queue38, align 8, !dbg !15934
  %tobool39 = icmp ne %struct.request_queue* %46, null, !dbg !15931
  br i1 %tobool39, label %if.then40, label %if.end44, !dbg !15935

if.then40:                                        ; preds = %if.end36
  %47 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15936
  %queue41 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %47, i32 0, i32 5, !dbg !15938
  %48 = load %struct.request_queue*, %struct.request_queue** %queue41, align 8, !dbg !15938
  call void @blk_cleanup_queue(%struct.request_queue* %48) #12, !dbg !15939
  %49 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15940
  %tags42 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %49, i32 0, i32 6, !dbg !15941
  call void @blk_mq_free_tag_set(%struct.blk_mq_tag_set* %tags42) #12, !dbg !15942
  %50 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15943
  %queue43 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %50, i32 0, i32 5, !dbg !15944
  store %struct.request_queue* null, %struct.request_queue** %queue43, align 8, !dbg !15945
  br label %if.end44, !dbg !15946

if.end44:                                         ; preds = %if.then40, %if.end36
  %51 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15947
  %disk45 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %51, i32 0, i32 3, !dbg !15948
  %52 = load %struct.gendisk*, %struct.gendisk** %disk45, align 8, !dbg !15948
  call void @put_disk(%struct.gendisk* %52) #12, !dbg !15949
  br label %if.end46, !dbg !15950

if.end46:                                         ; preds = %if.end44, %if.end28
  %53 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15951
  %disk47 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %53, i32 0, i32 3, !dbg !15952
  store %struct.gendisk* null, %struct.gendisk** %disk47, align 8, !dbg !15953
  %54 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15954
  %index = getelementptr inbounds %struct.driver_data, %struct.driver_data* %54, i32 0, i32 10, !dbg !15955
  %55 = load i64, i64* %index, align 8, !dbg !15955
  %conv = trunc i64 %55 to i32, !dbg !15954
  call void @ida_free(%struct.ida* @rssd_index_ida, i32 %conv) #12, !dbg !15956
  %56 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !15957
  %call48 = call i32 @mtip_hw_exit(%struct.driver_data* %56) #12, !dbg !15958
  ret i32 0, !dbg !15959
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #2 !dbg !15960 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !15961, metadata !DIExpression()), !dbg !15962
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !15963
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #12, !dbg !15965
  br i1 %call, label %if.end, label %if.then, !dbg !15966

if.then:                                          ; preds = %entry
  br label %return, !dbg !15967

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !15968
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !15969
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !15969
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !15970
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !15971
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !15971
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #12, !dbg !15972
  br label %return, !dbg !15973

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !15973
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #2 !dbg !15974 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !15977, metadata !DIExpression()), !dbg !15978
  ret i1 true, !dbg !15979
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #2 !dbg !15980 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !15981, metadata !DIExpression()), !dbg !15982
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !15983, metadata !DIExpression()), !dbg !15984
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !15985
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !15986
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !15987
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !15988
  br label %do.body, !dbg !15989

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !15990

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !15992

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !15990

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !15994
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !15994
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !15994
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !15994
  br label %do.end5, !dbg !15994

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !15990

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !15996
}

; Function Attrs: noredzone
declare dso_local i32 @kthread_stop(%struct.task_struct*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_hw_sysfs_exit(%struct.driver_data* %dd, %struct.kobject* %kobj) #2 !dbg !15997 {
entry:
  %retval = alloca i32, align 4
  %dd.addr = alloca %struct.driver_data*, align 8
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !15998, metadata !DIExpression()), !dbg !15999
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !16000, metadata !DIExpression()), !dbg !16001
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !16002
  %tobool = icmp ne %struct.kobject* %0, null, !dbg !16002
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !16004

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16005
  %tobool1 = icmp ne %struct.driver_data* %1, null, !dbg !16005
  br i1 %tobool1, label %if.end, label %if.then, !dbg !16006

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !16007
  br label %return, !dbg !16007

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !16008
  call void @sysfs_remove_file(%struct.kobject* %2, %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_status, i32 0, i32 0)) #12, !dbg !16009
  store i32 0, i32* %retval, align 4, !dbg !16010
  br label %return, !dbg !16010

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !16011
  ret i32 %3, !dbg !16011
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_standby_drive(%struct.driver_data* %dd) #2 !dbg !16012 {
entry:
  %retval = alloca i32, align 4
  %dd.addr = alloca %struct.driver_data*, align 8
  %rv = alloca i32, align 4
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !16013, metadata !DIExpression()), !dbg !16014
  call void @llvm.dbg.declare(metadata i32* %rv, metadata !16015, metadata !DIExpression()), !dbg !16016
  store i32 0, i32* %rv, align 4, !dbg !16016
  %0 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16017
  %sr = getelementptr inbounds %struct.driver_data, %struct.driver_data* %0, i32 0, i32 14, !dbg !16019
  %1 = load i8, i8* %sr, align 8, !dbg !16019
  %tobool = trunc i8 %1 to i1, !dbg !16019
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !16020

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16021
  %port = getelementptr inbounds %struct.driver_data, %struct.driver_data* %2, i32 0, i32 7, !dbg !16022
  %3 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !16022
  %tobool1 = icmp ne %struct.mtip_port* %3, null, !dbg !16021
  br i1 %tobool1, label %if.end, label %if.then, !dbg !16023

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -19, i32* %retval, align 4, !dbg !16024
  br label %return, !dbg !16024

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16025
  %port2 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %4, i32 0, i32 7, !dbg !16027
  %5 = load %struct.mtip_port*, %struct.mtip_port** %port2, align 8, !dbg !16027
  %flags = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %5, i32 0, i32 22, !dbg !16028
  %call = call zeroext i1 @test_bit(i64 6, i64* %flags) #12, !dbg !16029
  br i1 %call, label %if.end13, label %land.lhs.true, !dbg !16030

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16031
  %dd_flag = getelementptr inbounds %struct.driver_data, %struct.driver_data* %6, i32 0, i32 11, !dbg !16032
  %call3 = call zeroext i1 @test_bit(i64 8, i64* %dd_flag) #12, !dbg !16033
  br i1 %call3, label %if.end13, label %land.lhs.true4, !dbg !16034

land.lhs.true4:                                   ; preds = %land.lhs.true
  %7 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16035
  %dd_flag5 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %7, i32 0, i32 11, !dbg !16036
  %call6 = call zeroext i1 @test_bit(i64 0, i64* %dd_flag5) #12, !dbg !16037
  br i1 %call6, label %if.end13, label %if.then7, !dbg !16038

if.then7:                                         ; preds = %land.lhs.true4
  %8 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16039
  %port8 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %8, i32 0, i32 7, !dbg !16041
  %9 = load %struct.mtip_port*, %struct.mtip_port** %port8, align 8, !dbg !16041
  %call9 = call i32 @mtip_standby_immediate(%struct.mtip_port* %9) #12, !dbg !16042
  store i32 %call9, i32* %rv, align 4, !dbg !16043
  %10 = load i32, i32* %rv, align 4, !dbg !16044
  %tobool10 = icmp ne i32 %10, 0, !dbg !16044
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !16046

if.then11:                                        ; preds = %if.then7
  %11 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16047
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %11, i32 0, i32 4, !dbg !16047
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !16047
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 41, !dbg !16047
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.121, i64 0, i64 0)) #13, !dbg !16047
  br label %if.end12, !dbg !16047

if.end12:                                         ; preds = %if.then11, %if.then7
  br label %if.end13, !dbg !16048

if.end13:                                         ; preds = %if.end12, %land.lhs.true4, %land.lhs.true, %if.end
  %13 = load i32, i32* %rv, align 4, !dbg !16049
  store i32 %13, i32* %retval, align 4, !dbg !16050
  br label %return, !dbg !16050

return:                                           ; preds = %if.end13, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !16051
  ret i32 %14, !dbg !16051
}

; Function Attrs: noredzone
declare dso_local void @blk_freeze_queue_start(%struct.request_queue*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mtip_no_dev_cleanup(%struct.request* %rq, i8* %data, i1 zeroext %reserv) #2 !dbg !16052 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  %data.addr = alloca i8*, align 8
  %reserv.addr = alloca i8, align 1
  %cmd = alloca %struct.mtip_cmd*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !16053, metadata !DIExpression()), !dbg !16054
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !16055, metadata !DIExpression()), !dbg !16056
  %frombool = zext i1 %reserv to i8
  store i8 %frombool, i8* %reserv.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %reserv.addr, metadata !16057, metadata !DIExpression()), !dbg !16058
  call void @llvm.dbg.declare(metadata %struct.mtip_cmd** %cmd, metadata !16059, metadata !DIExpression()), !dbg !16060
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !16061
  %call = call i8* @blk_mq_rq_to_pdu(%struct.request* %0) #12, !dbg !16062
  %1 = bitcast i8* %call to %struct.mtip_cmd*, !dbg !16062
  store %struct.mtip_cmd* %1, %struct.mtip_cmd** %cmd, align 8, !dbg !16060
  %2 = load %struct.mtip_cmd*, %struct.mtip_cmd** %cmd, align 8, !dbg !16063
  %status = getelementptr inbounds %struct.mtip_cmd, %struct.mtip_cmd* %2, i32 0, i32 7, !dbg !16064
  store i8 10, i8* %status, align 8, !dbg !16065
  %3 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !16066
  call void @blk_mq_complete_request(%struct.request* %3) #12, !dbg !16067
  ret i1 true, !dbg !16068
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sysfs_remove_file(%struct.kobject* %kobj, %struct.attribute* %attr) #2 !dbg !16069 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  %attr.addr = alloca %struct.attribute*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !16072, metadata !DIExpression()), !dbg !16073
  store %struct.attribute* %attr, %struct.attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attribute** %attr.addr, metadata !16074, metadata !DIExpression()), !dbg !16075
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !16076
  %1 = load %struct.attribute*, %struct.attribute** %attr.addr, align 8, !dbg !16077
  call void @sysfs_remove_file_ns(%struct.kobject* %0, %struct.attribute* %1, i8* null) #12, !dbg !16078
  ret void, !dbg !16079
}

; Function Attrs: noredzone
declare dso_local void @sysfs_remove_file_ns(%struct.kobject*, %struct.attribute*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_standby_immediate(%struct.mtip_port* %port) #2 !dbg !16080 {
entry:
  %port.addr = alloca %struct.mtip_port*, align 8
  %rv = alloca i32, align 4
  %fis = alloca %struct.host_to_dev_fis, align 4
  %start = alloca i64, align 8
  %timeout = alloca i32, align 4
  store %struct.mtip_port* %port, %struct.mtip_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mtip_port** %port.addr, metadata !16083, metadata !DIExpression()), !dbg !16084
  call void @llvm.dbg.declare(metadata i32* %rv, metadata !16085, metadata !DIExpression()), !dbg !16086
  call void @llvm.dbg.declare(metadata %struct.host_to_dev_fis* %fis, metadata !16087, metadata !DIExpression()), !dbg !16088
  call void @llvm.dbg.declare(metadata i64* %start, metadata !16089, metadata !DIExpression()), !dbg !16090
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !16091, metadata !DIExpression()), !dbg !16092
  %0 = bitcast %struct.host_to_dev_fis* %fis to i8*, !dbg !16093
  call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 20, i1 false), !dbg !16093
  %type = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 0, !dbg !16094
  store i8 39, i8* %type, align 4, !dbg !16095
  %opts = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 1, !dbg !16096
  store i8 -128, i8* %opts, align 1, !dbg !16097
  %command = getelementptr inbounds %struct.host_to_dev_fis, %struct.host_to_dev_fis* %fis, i32 0, i32 2, !dbg !16098
  store i8 -32, i8* %command, align 2, !dbg !16099
  %1 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !16100
  %dd = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %1, i32 0, i32 0, !dbg !16101
  %2 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !16101
  call void @mtip_set_timeout(%struct.driver_data* %2, %struct.host_to_dev_fis* %fis, i32* %timeout, i8 zeroext 0) #12, !dbg !16102
  %3 = load volatile i64, i64* @jiffies, align 8, !dbg !16103
  store i64 %3, i64* %start, align 8, !dbg !16104
  %4 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !16105
  %5 = load i32, i32* %timeout, align 4, !dbg !16106
  %conv = zext i32 %5 to i64, !dbg !16106
  %call = call i32 @mtip_exec_internal_command(%struct.mtip_port* %4, %struct.host_to_dev_fis* %fis, i32 5, i64 0, i32 0, i32 0, i64 %conv) #12, !dbg !16107
  store i32 %call, i32* %rv, align 4, !dbg !16108
  %6 = load i32, i32* %rv, align 4, !dbg !16109
  %tobool = icmp ne i32 %6, 0, !dbg !16109
  br i1 %tobool, label %if.then, label %if.end, !dbg !16111

if.then:                                          ; preds = %entry
  %7 = load %struct.mtip_port*, %struct.mtip_port** %port.addr, align 8, !dbg !16112
  %dd1 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %7, i32 0, i32 0, !dbg !16112
  %8 = load %struct.driver_data*, %struct.driver_data** %dd1, align 8, !dbg !16112
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %8, i32 0, i32 4, !dbg !16112
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !16112
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 41, !dbg !16112
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.122, i64 0, i64 0)) #13, !dbg !16112
  br label %if.end, !dbg !16112

if.end:                                           ; preds = %if.then, %entry
  %10 = load i32, i32* %rv, align 4, !dbg !16113
  ret i32 %10, !dbg !16114
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_block_suspend(%struct.driver_data* %dd) #2 !dbg !16115 {
entry:
  %dd.addr = alloca %struct.driver_data*, align 8
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !16116, metadata !DIExpression()), !dbg !16117
  %0 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16118
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %0, i32 0, i32 4, !dbg !16118
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !16118
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !16118
  %2 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16118
  %disk = getelementptr inbounds %struct.driver_data, %struct.driver_data* %2, i32 0, i32 3, !dbg !16118
  %3 = load %struct.gendisk*, %struct.gendisk** %disk, align 8, !dbg !16118
  %disk_name = getelementptr inbounds %struct.gendisk, %struct.gendisk* %3, i32 0, i32 3, !dbg !16118
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %disk_name, i64 0, i64 0, !dbg !16118
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.125, i64 0, i64 0), i8* %arraydecay) #13, !dbg !16118
  %4 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16119
  %call = call i32 @mtip_hw_suspend(%struct.driver_data* %4) #12, !dbg !16120
  ret i32 0, !dbg !16121
}

; Function Attrs: noredzone
declare dso_local i32 @pci_save_state(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local void @pci_disable_device(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local i32 @pci_set_power_state(%struct.pci_dev*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_hw_suspend(%struct.driver_data* %dd) #2 !dbg !16122 {
entry:
  %retval = alloca i32, align 4
  %dd.addr = alloca %struct.driver_data*, align 8
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !16123, metadata !DIExpression()), !dbg !16124
  %0 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16125
  %call = call i32 @mtip_standby_drive(%struct.driver_data* %0) #12, !dbg !16127
  %cmp = icmp ne i32 %call, 0, !dbg !16128
  br i1 %cmp, label %if.then, label %if.end, !dbg !16129

if.then:                                          ; preds = %entry
  %1 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16130
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %1, i32 0, i32 4, !dbg !16130
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !16130
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !16130
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.126, i64 0, i64 0)) #13, !dbg !16130
  store i32 -14, i32* %retval, align 4, !dbg !16132
  br label %return, !dbg !16132

if.end:                                           ; preds = %entry
  %3 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16133
  %mmio = getelementptr inbounds %struct.driver_data, %struct.driver_data* %3, i32 0, i32 0, !dbg !16134
  %4 = load i8*, i8** %mmio, align 8, !dbg !16134
  %add.ptr = getelementptr i8, i8* %4, i64 4, !dbg !16135
  %call1 = call i32 @readl(i8* %add.ptr) #12, !dbg !16136
  %and = and i32 %call1, -3, !dbg !16137
  %5 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16138
  %mmio2 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %5, i32 0, i32 0, !dbg !16139
  %6 = load i8*, i8** %mmio2, align 8, !dbg !16139
  %add.ptr3 = getelementptr i8, i8* %6, i64 4, !dbg !16140
  call void @writel(i32 %and, i8* %add.ptr3) #12, !dbg !16141
  %7 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16142
  %port = getelementptr inbounds %struct.driver_data, %struct.driver_data* %7, i32 0, i32 7, !dbg !16143
  %8 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !16143
  call void @mtip_deinit_port(%struct.mtip_port* %8) #12, !dbg !16144
  store i32 0, i32* %retval, align 4, !dbg !16145
  br label %return, !dbg !16145

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !16146
  ret i32 %9, !dbg !16146
}

; Function Attrs: noredzone
declare dso_local void @pci_restore_state(%struct.pci_dev*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_block_resume(%struct.driver_data* %dd) #2 !dbg !16147 {
entry:
  %dd.addr = alloca %struct.driver_data*, align 8
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !16148, metadata !DIExpression()), !dbg !16149
  %0 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16150
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %0, i32 0, i32 4, !dbg !16150
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !16150
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !16150
  %2 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16150
  %disk = getelementptr inbounds %struct.driver_data, %struct.driver_data* %2, i32 0, i32 3, !dbg !16150
  %3 = load %struct.gendisk*, %struct.gendisk** %disk, align 8, !dbg !16150
  %disk_name = getelementptr inbounds %struct.gendisk, %struct.gendisk* %3, i32 0, i32 3, !dbg !16150
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %disk_name, i64 0, i64 0, !dbg !16150
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.129, i64 0, i64 0), i8* %arraydecay) #13, !dbg !16150
  %4 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16151
  %call = call i32 @mtip_hw_resume(%struct.driver_data* %4) #12, !dbg !16152
  ret i32 0, !dbg !16153
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_hw_resume(%struct.driver_data* %dd) #2 !dbg !16154 {
entry:
  %retval = alloca i32, align 4
  %dd.addr = alloca %struct.driver_data*, align 8
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !16155, metadata !DIExpression()), !dbg !16156
  %0 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16157
  call void @hba_setup(%struct.driver_data* %0) #12, !dbg !16158
  %1 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16159
  %call = call i32 @mtip_hba_reset(%struct.driver_data* %1) #12, !dbg !16161
  %cmp = icmp ne i32 %call, 0, !dbg !16162
  br i1 %cmp, label %if.then, label %if.end, !dbg !16163

if.then:                                          ; preds = %entry
  %2 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16164
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %2, i32 0, i32 4, !dbg !16164
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !16164
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !16164
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.130, i64 0, i64 0)) #13, !dbg !16164
  store i32 -14, i32* %retval, align 4, !dbg !16166
  br label %return, !dbg !16166

if.end:                                           ; preds = %entry
  %4 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16167
  %port = getelementptr inbounds %struct.driver_data, %struct.driver_data* %4, i32 0, i32 7, !dbg !16168
  %5 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !16168
  call void @mtip_init_port(%struct.mtip_port* %5) #12, !dbg !16169
  %6 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16170
  %port1 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %6, i32 0, i32 7, !dbg !16171
  %7 = load %struct.mtip_port*, %struct.mtip_port** %port1, align 8, !dbg !16171
  call void @mtip_start_port(%struct.mtip_port* %7) #12, !dbg !16172
  %8 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16173
  %mmio = getelementptr inbounds %struct.driver_data, %struct.driver_data* %8, i32 0, i32 0, !dbg !16174
  %9 = load i8*, i8** %mmio, align 8, !dbg !16174
  %add.ptr = getelementptr i8, i8* %9, i64 4, !dbg !16175
  %call2 = call i32 @readl(i8* %add.ptr) #12, !dbg !16176
  %or = or i32 %call2, 2, !dbg !16177
  %10 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16178
  %mmio3 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %10, i32 0, i32 0, !dbg !16179
  %11 = load i8*, i8** %mmio3, align 8, !dbg !16179
  %add.ptr4 = getelementptr i8, i8* %11, i64 4, !dbg !16180
  call void @writel(i32 %or, i8* %add.ptr4) #12, !dbg !16181
  store i32 0, i32* %retval, align 4, !dbg !16182
  br label %return, !dbg !16182

return:                                           ; preds = %if.end, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !16183
  ret i32 %12, !dbg !16183
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_block_shutdown(%struct.driver_data* %dd) #2 !dbg !16184 {
entry:
  %dd.addr = alloca %struct.driver_data*, align 8
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !16185, metadata !DIExpression()), !dbg !16186
  %0 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16187
  %call = call i32 @mtip_hw_shutdown(%struct.driver_data* %0) #12, !dbg !16188
  %1 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16189
  %disk = getelementptr inbounds %struct.driver_data, %struct.driver_data* %1, i32 0, i32 3, !dbg !16191
  %2 = load %struct.gendisk*, %struct.gendisk** %disk, align 8, !dbg !16191
  %tobool = icmp ne %struct.gendisk* %2, null, !dbg !16189
  br i1 %tobool, label %if.then, label %if.end13, !dbg !16192

if.then:                                          ; preds = %entry
  %3 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16193
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %3, i32 0, i32 4, !dbg !16193
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !16193
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !16193
  %5 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16193
  %disk1 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %5, i32 0, i32 3, !dbg !16193
  %6 = load %struct.gendisk*, %struct.gendisk** %disk1, align 8, !dbg !16193
  %disk_name = getelementptr inbounds %struct.gendisk, %struct.gendisk* %6, i32 0, i32 3, !dbg !16193
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %disk_name, i64 0, i64 0, !dbg !16193
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.131, i64 0, i64 0), i8* %arraydecay) #13, !dbg !16193
  %7 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16195
  %dd_flag = getelementptr inbounds %struct.driver_data, %struct.driver_data* %7, i32 0, i32 11, !dbg !16197
  %call2 = call zeroext i1 @test_bit(i64 7, i64* %dd_flag) #12, !dbg !16198
  br i1 %call2, label %if.then3, label %if.end, !dbg !16199

if.then3:                                         ; preds = %if.then
  %8 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16200
  %disk4 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %8, i32 0, i32 3, !dbg !16201
  %9 = load %struct.gendisk*, %struct.gendisk** %disk4, align 8, !dbg !16201
  call void @del_gendisk(%struct.gendisk* %9) #12, !dbg !16202
  br label %if.end, !dbg !16202

if.end:                                           ; preds = %if.then3, %if.then
  %10 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16203
  %disk5 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %10, i32 0, i32 3, !dbg !16205
  %11 = load %struct.gendisk*, %struct.gendisk** %disk5, align 8, !dbg !16205
  %queue = getelementptr inbounds %struct.gendisk, %struct.gendisk* %11, i32 0, i32 9, !dbg !16206
  %12 = load %struct.request_queue*, %struct.request_queue** %queue, align 8, !dbg !16206
  %tobool6 = icmp ne %struct.request_queue* %12, null, !dbg !16203
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !16207

if.then7:                                         ; preds = %if.end
  %13 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16208
  %queue8 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %13, i32 0, i32 5, !dbg !16210
  %14 = load %struct.request_queue*, %struct.request_queue** %queue8, align 8, !dbg !16210
  call void @blk_cleanup_queue(%struct.request_queue* %14) #12, !dbg !16211
  %15 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16212
  %tags = getelementptr inbounds %struct.driver_data, %struct.driver_data* %15, i32 0, i32 6, !dbg !16213
  call void @blk_mq_free_tag_set(%struct.blk_mq_tag_set* %tags) #12, !dbg !16214
  br label %if.end9, !dbg !16215

if.end9:                                          ; preds = %if.then7, %if.end
  %16 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16216
  %disk10 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %16, i32 0, i32 3, !dbg !16217
  %17 = load %struct.gendisk*, %struct.gendisk** %disk10, align 8, !dbg !16217
  call void @put_disk(%struct.gendisk* %17) #12, !dbg !16218
  %18 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16219
  %disk11 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %18, i32 0, i32 3, !dbg !16220
  store %struct.gendisk* null, %struct.gendisk** %disk11, align 8, !dbg !16221
  %19 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16222
  %queue12 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %19, i32 0, i32 5, !dbg !16223
  store %struct.request_queue* null, %struct.request_queue** %queue12, align 8, !dbg !16224
  br label %if.end13, !dbg !16225

if.end13:                                         ; preds = %if.end9, %entry
  %20 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16226
  %index = getelementptr inbounds %struct.driver_data, %struct.driver_data* %20, i32 0, i32 10, !dbg !16227
  %21 = load i64, i64* %index, align 8, !dbg !16227
  %conv = trunc i64 %21 to i32, !dbg !16226
  call void @ida_free(%struct.ida* @rssd_index_ida, i32 %conv) #12, !dbg !16228
  ret i32 0, !dbg !16229
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mtip_hw_shutdown(%struct.driver_data* %dd) #2 !dbg !16230 {
entry:
  %dd.addr = alloca %struct.driver_data*, align 8
  store %struct.driver_data* %dd, %struct.driver_data** %dd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd.addr, metadata !16231, metadata !DIExpression()), !dbg !16232
  %0 = load %struct.driver_data*, %struct.driver_data** %dd.addr, align 8, !dbg !16233
  %call = call i32 @mtip_standby_drive(%struct.driver_data* %0) #12, !dbg !16234
  ret i32 0, !dbg !16235
}

; Function Attrs: noredzone
declare dso_local i64 @__modver_version_show(%struct.module_attribute*, %struct.module_kobject*, i8*) #1

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noredzone
declare dso_local i32 @register_blkdev(i32, i8*) #1

; Function Attrs: noredzone
declare dso_local i32 @__pci_register_driver(%struct.pci_driver*, %struct.module*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @debugfs_remove(%struct.dentry* %dentry) #2 !dbg !16236 {
entry:
  %dentry.addr = alloca %struct.dentry*, align 8
  store %struct.dentry* %dentry, %struct.dentry** %dentry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dentry** %dentry.addr, metadata !16237, metadata !DIExpression()), !dbg !16238
  ret void, !dbg !16239
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mtip_hw_read_device_status(%struct.file* %f, i8* %ubuf, i64 %len, i64* %offset) #2 !dbg !16240 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !10825, metadata !DIExpression()), !dbg !16241
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !10841, metadata !DIExpression()), !dbg !16244
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !10843, metadata !DIExpression()), !dbg !16245
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !10845, metadata !DIExpression()), !dbg !16246
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !10847, metadata !DIExpression()), !dbg !16247
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !10851, metadata !DIExpression()), !dbg !16248
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !10853, metadata !DIExpression()), !dbg !16249
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !10855, metadata !DIExpression()), !dbg !16250
  %retval = alloca i64, align 8
  %f.addr = alloca %struct.file*, align 8
  %ubuf.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %offset.addr = alloca i64*, align 8
  %dd = alloca %struct.driver_data*, align 8
  %size = alloca i32, align 4
  %buf = alloca i8*, align 8
  %rv = alloca i32, align 4
  store %struct.file* %f, %struct.file** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %f.addr, metadata !16251, metadata !DIExpression()), !dbg !16252
  store i8* %ubuf, i8** %ubuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ubuf.addr, metadata !16253, metadata !DIExpression()), !dbg !16254
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !16255, metadata !DIExpression()), !dbg !16256
  store i64* %offset, i64** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %offset.addr, metadata !16257, metadata !DIExpression()), !dbg !16258
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd, metadata !16259, metadata !DIExpression()), !dbg !16260
  %0 = load %struct.file*, %struct.file** %f.addr, align 8, !dbg !16261
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !16262
  %1 = load i8*, i8** %private_data, align 8, !dbg !16262
  %2 = bitcast i8* %1 to %struct.driver_data*, !dbg !16263
  store %struct.driver_data* %2, %struct.driver_data** %dd, align 8, !dbg !16260
  call void @llvm.dbg.declare(metadata i32* %size, metadata !16264, metadata !DIExpression()), !dbg !16265
  %3 = load i64*, i64** %offset.addr, align 8, !dbg !16266
  %4 = load i64, i64* %3, align 8, !dbg !16267
  %conv = trunc i64 %4 to i32, !dbg !16267
  store i32 %conv, i32* %size, align 4, !dbg !16265
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !16268, metadata !DIExpression()), !dbg !16269
  call void @llvm.dbg.declare(metadata i32* %rv, metadata !16270, metadata !DIExpression()), !dbg !16271
  store i32 0, i32* %rv, align 4, !dbg !16271
  %5 = load i64, i64* %len.addr, align 8, !dbg !16272
  %tobool = icmp ne i64 %5, 0, !dbg !16272
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !16274

lor.lhs.false:                                    ; preds = %entry
  %6 = load i64*, i64** %offset.addr, align 8, !dbg !16275
  %7 = load i64, i64* %6, align 8, !dbg !16276
  %tobool1 = icmp ne i64 %7, 0, !dbg !16276
  br i1 %tobool1, label %if.then, label %if.end, !dbg !16277

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i64 0, i64* %retval, align 8, !dbg !16278
  br label %return, !dbg !16278

if.end:                                           ; preds = %lor.lhs.false
  %call = call i8* @kzalloc(i64 1024, i32 3264) #12, !dbg !16279
  store i8* %call, i8** %buf, align 8, !dbg !16280
  %8 = load i8*, i8** %buf, align 8, !dbg !16281
  %tobool2 = icmp ne i8* %8, null, !dbg !16281
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !16283

if.then3:                                         ; preds = %if.end
  %9 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !16284
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %9, i32 0, i32 4, !dbg !16284
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !16284
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 41, !dbg !16284
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.139, i64 0, i64 0)) #13, !dbg !16284
  store i64 -12, i64* %retval, align 8, !dbg !16286
  br label %return, !dbg !16286

if.end4:                                          ; preds = %if.end
  %11 = load i8*, i8** %buf, align 8, !dbg !16287
  %call5 = call i64 @show_device_status(%struct.device_driver* null, i8* %11) #12, !dbg !16288
  %12 = load i32, i32* %size, align 4, !dbg !16289
  %conv6 = sext i32 %12 to i64, !dbg !16289
  %add = add i64 %conv6, %call5, !dbg !16289
  %conv7 = trunc i64 %add to i32, !dbg !16289
  store i32 %conv7, i32* %size, align 4, !dbg !16289
  %13 = load i32, i32* %size, align 4, !dbg !16290
  %conv8 = sext i32 %13 to i64, !dbg !16290
  %14 = load i64, i64* %len.addr, align 8, !dbg !16291
  %cmp = icmp ule i64 %conv8, %14, !dbg !16292
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !16290

cond.true:                                        ; preds = %if.end4
  %15 = load i32, i32* %size, align 4, !dbg !16293
  %conv10 = sext i32 %15 to i64, !dbg !16293
  br label %cond.end, !dbg !16290

cond.false:                                       ; preds = %if.end4
  %16 = load i64, i64* %len.addr, align 8, !dbg !16294
  br label %cond.end, !dbg !16290

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv10, %cond.true ], [ %16, %cond.false ], !dbg !16290
  %17 = load i64*, i64** %offset.addr, align 8, !dbg !16295
  store i64 %cond, i64* %17, align 8, !dbg !16296
  %18 = load i8*, i8** %ubuf.addr, align 8, !dbg !16297
  %19 = load i8*, i8** %buf, align 8, !dbg !16298
  %20 = load i64*, i64** %offset.addr, align 8, !dbg !16299
  %21 = load i64, i64* %20, align 8, !dbg !16300
  store i8* %18, i8** %to.addr.i, align 8
  store i8* %19, i8** %from.addr.i, align 8
  store i64 %21, i64* %n.addr.i, align 8
  %22 = load i8*, i8** %from.addr.i, align 8, !dbg !16301
  %23 = load i64, i64* %n.addr.i, align 8, !dbg !16301
  store i8* %22, i8** %addr.addr.i.i, align 8
  store i64 %23, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !16246
  %24 = load i32, i32* %sz.i.i, align 4, !dbg !16302
  %cmp.i.i = icmp sge i32 %24, 0, !dbg !16302
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !16302

land.rhs.i.i:                                     ; preds = %cond.end
  %25 = load i32, i32* %sz.i.i, align 4, !dbg !16302
  %conv.i.i = sext i32 %25 to i64, !dbg !16302
  %26 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !16302
  %cmp1.i.i = icmp ult i64 %conv.i.i, %26, !dbg !16302
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %cond.end
  %27 = phi i1 [ false, %cond.end ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !16303
  %lnot.i.i = xor i1 %27, true, !dbg !16302
  %lnot.ext.i.i = zext i1 %27 to i32, !dbg !16302
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !16302
  br i1 %27, label %if.then.i.i, label %if.end10.i.i, !dbg !16304

if.then.i.i:                                      ; preds = %land.end.i.i
  %28 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !16305
  %29 = call i1 @llvm.is.constant.i64(i64 %28) #11, !dbg !16306
  br i1 %29, label %if.else.i.i, label %if.then5.i.i, !dbg !16307

if.then5.i.i:                                     ; preds = %if.then.i.i
  %30 = load i32, i32* %sz.i.i, align 4, !dbg !16308
  %31 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !16309
  call void @copy_overflow(i32 %30, i64 %31) #14, !dbg !16310
  br label %if.end9.i.i, !dbg !16310

if.else.i.i:                                      ; preds = %if.then.i.i
  %32 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !16311
  %tobool6.i.i = trunc i8 %32 to i1, !dbg !16311
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !16312

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #14, !dbg !16313
  br label %if.end.i.i, !dbg !16313

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #14, !dbg !16314
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !16315
  br label %check_copy_size.exit.i, !dbg !16315

if.end10.i.i:                                     ; preds = %land.end.i.i
  %33 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !16247
  %cmp11.i.i = icmp ugt i64 %33, 2147483647, !dbg !16247
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !16247
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !16247
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !16247
  %34 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !16316
  %tobool17.i.i = icmp ne i32 %34, 0, !dbg !16316
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !16316
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !16316
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !16316
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !16247

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.40, i64 0, i64 0), i32 150, i32 2307, i64 12) #11, !dbg !16317, !srcloc !10968
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #11, !dbg !16318, !srcloc !10971
  br label %if.end31.i.i, !dbg !16319

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %35 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !16247
  %tobool32.i.i = icmp ne i32 %35, 0, !dbg !16247
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !16247
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !16247
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !16247
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !16316
  %36 = load i64, i64* %tmp.i.i, align 8, !dbg !16247
  %tobool38.i.i = icmp ne i64 %36, 0, !dbg !16320
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !16321

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !16322
  br label %check_copy_size.exit.i, !dbg !16322

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %37 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !16323
  %38 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !16324
  %39 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !16325
  %tobool41.i.i = trunc i8 %39 to i1, !dbg !16325
  call void @check_object_size(i8* %37, i64 %38, i1 zeroext %tobool41.i.i) #14, !dbg !16326
  store i1 true, i1* %retval.i.i, align 1, !dbg !16327
  br label %check_copy_size.exit.i, !dbg !16327

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %40 = load i1, i1* %retval.i.i, align 1, !dbg !16328
  %lnot.i = xor i1 %40, true, !dbg !16301
  %lnot.ext.i = zext i1 %40 to i32, !dbg !16301
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !16301
  br i1 %40, label %if.then.i, label %copy_to_user.exit, !dbg !16329

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %41 = load i8*, i8** %to.addr.i, align 8, !dbg !16330
  %42 = load i8*, i8** %from.addr.i, align 8, !dbg !16331
  %43 = load i64, i64* %n.addr.i, align 8, !dbg !16332
  %call2.i = call i64 @_copy_to_user(i8* %41, i8* %42, i64 %43) #14, !dbg !16333
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !16334
  br label %copy_to_user.exit, !dbg !16335

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %44 = load i64, i64* %n.addr.i, align 8, !dbg !16336
  %conv12 = trunc i64 %44 to i32, !dbg !16337
  store i32 %conv12, i32* %size, align 4, !dbg !16338
  %45 = load i32, i32* %size, align 4, !dbg !16339
  %tobool13 = icmp ne i32 %45, 0, !dbg !16339
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !16341

if.then14:                                        ; preds = %copy_to_user.exit
  store i32 -14, i32* %rv, align 4, !dbg !16342
  br label %if.end15, !dbg !16343

if.end15:                                         ; preds = %if.then14, %copy_to_user.exit
  %46 = load i8*, i8** %buf, align 8, !dbg !16344
  call void @kfree(i8* %46) #12, !dbg !16345
  %47 = load i32, i32* %rv, align 4, !dbg !16346
  %tobool16 = icmp ne i32 %47, 0, !dbg !16346
  br i1 %tobool16, label %cond.true17, label %cond.false19, !dbg !16346

cond.true17:                                      ; preds = %if.end15
  %48 = load i32, i32* %rv, align 4, !dbg !16347
  %conv18 = sext i32 %48 to i64, !dbg !16347
  br label %cond.end20, !dbg !16346

cond.false19:                                     ; preds = %if.end15
  %49 = load i64*, i64** %offset.addr, align 8, !dbg !16348
  %50 = load i64, i64* %49, align 8, !dbg !16349
  br label %cond.end20, !dbg !16346

cond.end20:                                       ; preds = %cond.false19, %cond.true17
  %cond21 = phi i64 [ %conv18, %cond.true17 ], [ %50, %cond.false19 ], !dbg !16346
  store i64 %cond21, i64* %retval, align 8, !dbg !16350
  br label %return, !dbg !16350

return:                                           ; preds = %cond.end20, %if.then3, %if.then
  %51 = load i64, i64* %retval, align 8, !dbg !16351
  ret i64 %51, !dbg !16351
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_device_status(%struct.device_driver* %drv, i8* %buf) #2 !dbg !16352 {
entry:
  %lock.addr.i165 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i165, metadata !6526, metadata !DIExpression()), !dbg !16355
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6532, metadata !DIExpression()), !dbg !16357
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6456, metadata !DIExpression()), !dbg !16358
  %drv.addr = alloca %struct.device_driver*, align 8
  %buf.addr = alloca i8*, align 8
  %size = alloca i32, align 4
  %dd = alloca %struct.driver_data*, align 8
  %tmp = alloca %struct.driver_data*, align 8
  %flags = alloca i64, align 8
  %id_buf = alloca [42 x i8], align 16
  %status = alloca i16, align 2
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp2 = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp23 = alloca %struct.driver_data*, align 8
  %__mptr24 = alloca i8*, align 8
  %tmp27 = alloca %struct.driver_data*, align 8
  %__mptr74 = alloca i8*, align 8
  %tmp79 = alloca %struct.driver_data*, align 8
  %__mptr85 = alloca i8*, align 8
  %tmp88 = alloca %struct.driver_data*, align 8
  %__mptr90 = alloca i8*, align 8
  %tmp94 = alloca %struct.driver_data*, align 8
  %__mptr156 = alloca i8*, align 8
  %tmp161 = alloca %struct.driver_data*, align 8
  store %struct.device_driver* %drv, %struct.device_driver** %drv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_driver** %drv.addr, metadata !16365, metadata !DIExpression()), !dbg !16366
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16367, metadata !DIExpression()), !dbg !16368
  call void @llvm.dbg.declare(metadata i32* %size, metadata !16369, metadata !DIExpression()), !dbg !16370
  store i32 0, i32* %size, align 4, !dbg !16370
  call void @llvm.dbg.declare(metadata %struct.driver_data** %dd, metadata !16371, metadata !DIExpression()), !dbg !16372
  call void @llvm.dbg.declare(metadata %struct.driver_data** %tmp, metadata !16373, metadata !DIExpression()), !dbg !16374
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !16375, metadata !DIExpression()), !dbg !16376
  call void @llvm.dbg.declare(metadata [42 x i8]* %id_buf, metadata !16377, metadata !DIExpression()), !dbg !16378
  call void @llvm.dbg.declare(metadata i16* %status, metadata !16379, metadata !DIExpression()), !dbg !16380
  store i16 0, i16* %status, align 2, !dbg !16380
  br label %do.body, !dbg !16381

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !16382

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !16383, metadata !DIExpression()), !dbg !16385
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !16386, metadata !DIExpression()), !dbg !16385
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !16385
  %conv = zext i1 %cmp to i32, !dbg !16385
  store i32 1, i32* %tmp2, align 4, !dbg !16385
  %0 = load i32, i32* %tmp2, align 4, !dbg !16385
  br label %do.body3, !dbg !16387

do.body3:                                         ; preds = %do.body1
  br label %do.body4, !dbg !16388

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !16389

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !16391, metadata !DIExpression()), !dbg !16394
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !16395, metadata !DIExpression()), !dbg !16394
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !16394
  %conv9 = zext i1 %cmp8 to i32, !dbg !16394
  store i32 1, i32* %tmp10, align 4, !dbg !16394
  %1 = load i32, i32* %tmp10, align 4, !dbg !16394
  %call = call i64 @arch_local_irq_save() #12, !dbg !16396
  store i64 %call, i64* %flags, align 8, !dbg !16396
  br label %do.end, !dbg !16396

do.end:                                           ; preds = %do.body5
  br label %do.end11, !dbg !16389

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !16388

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !16397, !srcloc !16398
  br label %do.body13, !dbg !16397

do.body13:                                        ; preds = %do.body12
  store %struct.spinlock* @dev_lock, %struct.spinlock** %lock.addr.i, align 8
  %2 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16399
  %3 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %2, i32 0, i32 0, !dbg !16400
  %rlock.i = bitcast %union.anon.1* %3 to %struct.raw_spinlock*, !dbg !16400
  br label %do.end15, !dbg !16401

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !16397

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !16388

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !16387

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !16382

do.end19:                                         ; preds = %do.end18
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !16402
  %5 = load i32, i32* %size, align 4, !dbg !16403
  %idxprom = sext i32 %5 to i64, !dbg !16402
  %arrayidx = getelementptr i8, i8* %4, i64 %idxprom, !dbg !16402
  %call20 = call i32 (i8*, i8*, ...) @sprintf(i8* %arrayidx, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.140, i64 0, i64 0)) #12, !dbg !16404
  %6 = load i32, i32* %size, align 4, !dbg !16405
  %add = add i32 %6, %call20, !dbg !16405
  store i32 %add, i32* %size, align 4, !dbg !16405
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !16406, metadata !DIExpression()), !dbg !16409
  %7 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @online_list, i32 0, i32 0), align 8, !dbg !16409
  %8 = bitcast %struct.list_head* %7 to i8*, !dbg !16409
  store i8* %8, i8** %__mptr, align 8, !dbg !16409
  br label %do.body21, !dbg !16409

do.body21:                                        ; preds = %do.end19
  br label %do.end22, !dbg !16410

do.end22:                                         ; preds = %do.body21
  %9 = load i8*, i8** %__mptr, align 8, !dbg !16409
  %add.ptr = getelementptr i8, i8* %9, i64 -832, !dbg !16409
  %10 = bitcast i8* %add.ptr to %struct.driver_data*, !dbg !16409
  store %struct.driver_data* %10, %struct.driver_data** %tmp23, align 8, !dbg !16410
  %11 = load %struct.driver_data*, %struct.driver_data** %tmp23, align 8, !dbg !16409
  store %struct.driver_data* %11, %struct.driver_data** %dd, align 8, !dbg !16412
  call void @llvm.dbg.declare(metadata i8** %__mptr24, metadata !16413, metadata !DIExpression()), !dbg !16415
  %12 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !16415
  %online_list = getelementptr inbounds %struct.driver_data, %struct.driver_data* %12, i32 0, i32 22, !dbg !16415
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %online_list, i32 0, i32 0, !dbg !16415
  %13 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !16415
  %14 = bitcast %struct.list_head* %13 to i8*, !dbg !16415
  store i8* %14, i8** %__mptr24, align 8, !dbg !16415
  br label %do.body25, !dbg !16415

do.body25:                                        ; preds = %do.end22
  br label %do.end26, !dbg !16416

do.end26:                                         ; preds = %do.body25
  %15 = load i8*, i8** %__mptr24, align 8, !dbg !16415
  %add.ptr28 = getelementptr i8, i8* %15, i64 -832, !dbg !16415
  %16 = bitcast i8* %add.ptr28 to %struct.driver_data*, !dbg !16415
  store %struct.driver_data* %16, %struct.driver_data** %tmp27, align 8, !dbg !16416
  %17 = load %struct.driver_data*, %struct.driver_data** %tmp27, align 8, !dbg !16415
  store %struct.driver_data* %17, %struct.driver_data** %tmp, align 8, !dbg !16412
  br label %for.cond, !dbg !16412

for.cond:                                         ; preds = %do.end78, %do.end26
  %18 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !16418
  %online_list29 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %18, i32 0, i32 22, !dbg !16418
  %cmp30 = icmp eq %struct.list_head* %online_list29, @online_list, !dbg !16418
  %lnot = xor i1 %cmp30, true, !dbg !16418
  br i1 %lnot, label %for.body, label %for.end, !dbg !16412

for.body:                                         ; preds = %for.cond
  %19 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !16420
  %pdev = getelementptr inbounds %struct.driver_data, %struct.driver_data* %19, i32 0, i32 4, !dbg !16423
  %20 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !16423
  %tobool = icmp ne %struct.pci_dev* %20, null, !dbg !16420
  br i1 %tobool, label %if.then, label %if.end73, !dbg !16424

if.then:                                          ; preds = %for.body
  %21 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !16425
  %port = getelementptr inbounds %struct.driver_data, %struct.driver_data* %21, i32 0, i32 7, !dbg !16428
  %22 = load %struct.mtip_port*, %struct.mtip_port** %port, align 8, !dbg !16428
  %tobool32 = icmp ne %struct.mtip_port* %22, null, !dbg !16425
  br i1 %tobool32, label %land.lhs.true, label %if.else, !dbg !16429

land.lhs.true:                                    ; preds = %if.then
  %23 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !16430
  %port33 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %23, i32 0, i32 7, !dbg !16431
  %24 = load %struct.mtip_port*, %struct.mtip_port** %port33, align 8, !dbg !16431
  %identify = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %24, i32 0, i32 12, !dbg !16432
  %25 = load i16*, i16** %identify, align 8, !dbg !16432
  %tobool34 = icmp ne i16* %25, null, !dbg !16430
  br i1 %tobool34, label %land.lhs.true35, label %if.else, !dbg !16433

land.lhs.true35:                                  ; preds = %land.lhs.true
  %26 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !16434
  %port36 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %26, i32 0, i32 7, !dbg !16435
  %27 = load %struct.mtip_port*, %struct.mtip_port** %port36, align 8, !dbg !16435
  %identify_valid = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %27, i32 0, i32 1, !dbg !16436
  %28 = load i64, i64* %identify_valid, align 8, !dbg !16436
  %tobool37 = icmp ne i64 %28, 0, !dbg !16434
  br i1 %tobool37, label %if.then38, label %if.else, !dbg !16437

if.then38:                                        ; preds = %land.lhs.true35
  %arraydecay = getelementptr inbounds [42 x i8], [42 x i8]* %id_buf, i64 0, i64 0, !dbg !16438
  %29 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !16440
  %port39 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %29, i32 0, i32 7, !dbg !16441
  %30 = load %struct.mtip_port*, %struct.mtip_port** %port39, align 8, !dbg !16441
  %identify40 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %30, i32 0, i32 12, !dbg !16442
  %31 = load i16*, i16** %identify40, align 8, !dbg !16442
  %add.ptr41 = getelementptr i16, i16* %31, i64 10, !dbg !16443
  %32 = bitcast i16* %add.ptr41 to i8*, !dbg !16444
  %call42 = call i64 @strlcpy(i8* %arraydecay, i8* %32, i64 21) #12, !dbg !16445
  %33 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !16446
  %port43 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %33, i32 0, i32 7, !dbg !16447
  %34 = load %struct.mtip_port*, %struct.mtip_port** %port43, align 8, !dbg !16447
  %identify44 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %34, i32 0, i32 12, !dbg !16448
  %35 = load i16*, i16** %identify44, align 8, !dbg !16448
  %add.ptr45 = getelementptr i16, i16* %35, i64 141, !dbg !16449
  %36 = load i16, i16* %add.ptr45, align 2, !dbg !16450
  store i16 %36, i16* %status, align 2, !dbg !16451
  br label %if.end, !dbg !16452

if.else:                                          ; preds = %land.lhs.true35, %land.lhs.true, %if.then
  %arraydecay46 = getelementptr inbounds [42 x i8], [42 x i8]* %id_buf, i64 0, i64 0, !dbg !16453
  call void @llvm.memset.p0i8.i64(i8* align 16 %arraydecay46, i8 0, i64 42, i1 false), !dbg !16453
  store i16 0, i16* %status, align 2, !dbg !16455
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then38
  %37 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !16456
  %port47 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %37, i32 0, i32 7, !dbg !16458
  %38 = load %struct.mtip_port*, %struct.mtip_port** %port47, align 8, !dbg !16458
  %tobool48 = icmp ne %struct.mtip_port* %38, null, !dbg !16456
  br i1 %tobool48, label %land.lhs.true49, label %if.else63, !dbg !16459

land.lhs.true49:                                  ; preds = %if.end
  %39 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !16460
  %port50 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %39, i32 0, i32 7, !dbg !16461
  %40 = load %struct.mtip_port*, %struct.mtip_port** %port50, align 8, !dbg !16461
  %flags51 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %40, i32 0, i32 22, !dbg !16462
  %call52 = call zeroext i1 @test_bit(i64 6, i64* %flags51) #12, !dbg !16463
  br i1 %call52, label %if.then54, label %if.else63, !dbg !16464

if.then54:                                        ; preds = %land.lhs.true49
  %41 = load i8*, i8** %buf.addr, align 8, !dbg !16465
  %42 = load i32, i32* %size, align 4, !dbg !16467
  %idxprom55 = sext i32 %42 to i64, !dbg !16465
  %arrayidx56 = getelementptr i8, i8* %41, i64 %idxprom55, !dbg !16465
  %43 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !16468
  %pdev57 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %43, i32 0, i32 4, !dbg !16469
  %44 = load %struct.pci_dev*, %struct.pci_dev** %pdev57, align 8, !dbg !16469
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %44, i32 0, i32 41, !dbg !16470
  %call58 = call i8* @dev_name(%struct.device* %dev) #12, !dbg !16471
  %arraydecay59 = getelementptr inbounds [42 x i8], [42 x i8]* %id_buf, i64 0, i64 0, !dbg !16472
  %45 = load i16, i16* %status, align 2, !dbg !16473
  %conv60 = zext i16 %45 to i32, !dbg !16473
  %call61 = call i32 (i8*, i8*, ...) @sprintf(i8* %arrayidx56, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.141, i64 0, i64 0), i8* %call58, i8* %arraydecay59, i32 %conv60) #12, !dbg !16474
  %46 = load i32, i32* %size, align 4, !dbg !16475
  %add62 = add i32 %46, %call61, !dbg !16475
  store i32 %add62, i32* %size, align 4, !dbg !16475
  br label %if.end72, !dbg !16476

if.else63:                                        ; preds = %land.lhs.true49, %if.end
  %47 = load i8*, i8** %buf.addr, align 8, !dbg !16477
  %48 = load i32, i32* %size, align 4, !dbg !16479
  %idxprom64 = sext i32 %48 to i64, !dbg !16477
  %arrayidx65 = getelementptr i8, i8* %47, i64 %idxprom64, !dbg !16477
  %49 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !16480
  %pdev66 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %49, i32 0, i32 4, !dbg !16481
  %50 = load %struct.pci_dev*, %struct.pci_dev** %pdev66, align 8, !dbg !16481
  %dev67 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %50, i32 0, i32 41, !dbg !16482
  %call68 = call i8* @dev_name(%struct.device* %dev67) #12, !dbg !16483
  %arraydecay69 = getelementptr inbounds [42 x i8], [42 x i8]* %id_buf, i64 0, i64 0, !dbg !16484
  %call70 = call i32 (i8*, i8*, ...) @sprintf(i8* %arrayidx65, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.142, i64 0, i64 0), i8* %call68, i8* %arraydecay69) #12, !dbg !16485
  %51 = load i32, i32* %size, align 4, !dbg !16486
  %add71 = add i32 %51, %call70, !dbg !16486
  store i32 %add71, i32* %size, align 4, !dbg !16486
  br label %if.end72

if.end72:                                         ; preds = %if.else63, %if.then54
  br label %if.end73, !dbg !16487

if.end73:                                         ; preds = %if.end72, %for.body
  br label %for.inc, !dbg !16488

for.inc:                                          ; preds = %if.end73
  %52 = load %struct.driver_data*, %struct.driver_data** %tmp, align 8, !dbg !16418
  store %struct.driver_data* %52, %struct.driver_data** %dd, align 8, !dbg !16418
  call void @llvm.dbg.declare(metadata i8** %__mptr74, metadata !16489, metadata !DIExpression()), !dbg !16491
  %53 = load %struct.driver_data*, %struct.driver_data** %tmp, align 8, !dbg !16491
  %online_list75 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %53, i32 0, i32 22, !dbg !16491
  %next76 = getelementptr inbounds %struct.list_head, %struct.list_head* %online_list75, i32 0, i32 0, !dbg !16491
  %54 = load %struct.list_head*, %struct.list_head** %next76, align 8, !dbg !16491
  %55 = bitcast %struct.list_head* %54 to i8*, !dbg !16491
  store i8* %55, i8** %__mptr74, align 8, !dbg !16491
  br label %do.body77, !dbg !16491

do.body77:                                        ; preds = %for.inc
  br label %do.end78, !dbg !16492

do.end78:                                         ; preds = %do.body77
  %56 = load i8*, i8** %__mptr74, align 8, !dbg !16491
  %add.ptr80 = getelementptr i8, i8* %56, i64 -832, !dbg !16491
  %57 = bitcast i8* %add.ptr80 to %struct.driver_data*, !dbg !16491
  store %struct.driver_data* %57, %struct.driver_data** %tmp79, align 8, !dbg !16492
  %58 = load %struct.driver_data*, %struct.driver_data** %tmp79, align 8, !dbg !16491
  store %struct.driver_data* %58, %struct.driver_data** %tmp, align 8, !dbg !16418
  br label %for.cond, !dbg !16418, !llvm.loop !16494

for.end:                                          ; preds = %for.cond
  %59 = load i8*, i8** %buf.addr, align 8, !dbg !16496
  %60 = load i32, i32* %size, align 4, !dbg !16497
  %idxprom81 = sext i32 %60 to i64, !dbg !16496
  %arrayidx82 = getelementptr i8, i8* %59, i64 %idxprom81, !dbg !16496
  %call83 = call i32 (i8*, i8*, ...) @sprintf(i8* %arrayidx82, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.143, i64 0, i64 0)) #12, !dbg !16498
  %61 = load i32, i32* %size, align 4, !dbg !16499
  %add84 = add i32 %61, %call83, !dbg !16499
  store i32 %add84, i32* %size, align 4, !dbg !16499
  call void @llvm.dbg.declare(metadata i8** %__mptr85, metadata !16500, metadata !DIExpression()), !dbg !16503
  %62 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @removing_list, i32 0, i32 0), align 8, !dbg !16503
  %63 = bitcast %struct.list_head* %62 to i8*, !dbg !16503
  store i8* %63, i8** %__mptr85, align 8, !dbg !16503
  br label %do.body86, !dbg !16503

do.body86:                                        ; preds = %for.end
  br label %do.end87, !dbg !16504

do.end87:                                         ; preds = %do.body86
  %64 = load i8*, i8** %__mptr85, align 8, !dbg !16503
  %add.ptr89 = getelementptr i8, i8* %64, i64 -848, !dbg !16503
  %65 = bitcast i8* %add.ptr89 to %struct.driver_data*, !dbg !16503
  store %struct.driver_data* %65, %struct.driver_data** %tmp88, align 8, !dbg !16504
  %66 = load %struct.driver_data*, %struct.driver_data** %tmp88, align 8, !dbg !16503
  store %struct.driver_data* %66, %struct.driver_data** %dd, align 8, !dbg !16506
  call void @llvm.dbg.declare(metadata i8** %__mptr90, metadata !16507, metadata !DIExpression()), !dbg !16509
  %67 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !16509
  %remove_list = getelementptr inbounds %struct.driver_data, %struct.driver_data* %67, i32 0, i32 23, !dbg !16509
  %next91 = getelementptr inbounds %struct.list_head, %struct.list_head* %remove_list, i32 0, i32 0, !dbg !16509
  %68 = load %struct.list_head*, %struct.list_head** %next91, align 8, !dbg !16509
  %69 = bitcast %struct.list_head* %68 to i8*, !dbg !16509
  store i8* %69, i8** %__mptr90, align 8, !dbg !16509
  br label %do.body92, !dbg !16509

do.body92:                                        ; preds = %do.end87
  br label %do.end93, !dbg !16510

do.end93:                                         ; preds = %do.body92
  %70 = load i8*, i8** %__mptr90, align 8, !dbg !16509
  %add.ptr95 = getelementptr i8, i8* %70, i64 -848, !dbg !16509
  %71 = bitcast i8* %add.ptr95 to %struct.driver_data*, !dbg !16509
  store %struct.driver_data* %71, %struct.driver_data** %tmp94, align 8, !dbg !16510
  %72 = load %struct.driver_data*, %struct.driver_data** %tmp94, align 8, !dbg !16509
  store %struct.driver_data* %72, %struct.driver_data** %tmp, align 8, !dbg !16506
  br label %for.cond96, !dbg !16506

for.cond96:                                       ; preds = %do.end160, %do.end93
  %73 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !16512
  %remove_list97 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %73, i32 0, i32 23, !dbg !16512
  %cmp98 = icmp eq %struct.list_head* %remove_list97, @removing_list, !dbg !16512
  %lnot100 = xor i1 %cmp98, true, !dbg !16512
  br i1 %lnot100, label %for.body101, label %for.end163, !dbg !16506

for.body101:                                      ; preds = %for.cond96
  %74 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !16514
  %pdev102 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %74, i32 0, i32 4, !dbg !16517
  %75 = load %struct.pci_dev*, %struct.pci_dev** %pdev102, align 8, !dbg !16517
  %tobool103 = icmp ne %struct.pci_dev* %75, null, !dbg !16514
  br i1 %tobool103, label %if.then104, label %if.end154, !dbg !16518

if.then104:                                       ; preds = %for.body101
  %76 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !16519
  %port105 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %76, i32 0, i32 7, !dbg !16522
  %77 = load %struct.mtip_port*, %struct.mtip_port** %port105, align 8, !dbg !16522
  %tobool106 = icmp ne %struct.mtip_port* %77, null, !dbg !16519
  br i1 %tobool106, label %land.lhs.true107, label %if.else124, !dbg !16523

land.lhs.true107:                                 ; preds = %if.then104
  %78 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !16524
  %port108 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %78, i32 0, i32 7, !dbg !16525
  %79 = load %struct.mtip_port*, %struct.mtip_port** %port108, align 8, !dbg !16525
  %identify109 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %79, i32 0, i32 12, !dbg !16526
  %80 = load i16*, i16** %identify109, align 8, !dbg !16526
  %tobool110 = icmp ne i16* %80, null, !dbg !16524
  br i1 %tobool110, label %land.lhs.true111, label %if.else124, !dbg !16527

land.lhs.true111:                                 ; preds = %land.lhs.true107
  %81 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !16528
  %port112 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %81, i32 0, i32 7, !dbg !16529
  %82 = load %struct.mtip_port*, %struct.mtip_port** %port112, align 8, !dbg !16529
  %identify_valid113 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %82, i32 0, i32 1, !dbg !16530
  %83 = load i64, i64* %identify_valid113, align 8, !dbg !16530
  %tobool114 = icmp ne i64 %83, 0, !dbg !16528
  br i1 %tobool114, label %if.then115, label %if.else124, !dbg !16531

if.then115:                                       ; preds = %land.lhs.true111
  %arraydecay116 = getelementptr inbounds [42 x i8], [42 x i8]* %id_buf, i64 0, i64 0, !dbg !16532
  %84 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !16534
  %port117 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %84, i32 0, i32 7, !dbg !16535
  %85 = load %struct.mtip_port*, %struct.mtip_port** %port117, align 8, !dbg !16535
  %identify118 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %85, i32 0, i32 12, !dbg !16536
  %86 = load i16*, i16** %identify118, align 8, !dbg !16536
  %add.ptr119 = getelementptr i16, i16* %86, i64 10, !dbg !16537
  %87 = bitcast i16* %add.ptr119 to i8*, !dbg !16538
  %call120 = call i64 @strlcpy(i8* %arraydecay116, i8* %87, i64 21) #12, !dbg !16539
  %88 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !16540
  %port121 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %88, i32 0, i32 7, !dbg !16541
  %89 = load %struct.mtip_port*, %struct.mtip_port** %port121, align 8, !dbg !16541
  %identify122 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %89, i32 0, i32 12, !dbg !16542
  %90 = load i16*, i16** %identify122, align 8, !dbg !16542
  %add.ptr123 = getelementptr i16, i16* %90, i64 141, !dbg !16543
  %91 = load i16, i16* %add.ptr123, align 2, !dbg !16544
  store i16 %91, i16* %status, align 2, !dbg !16545
  br label %if.end126, !dbg !16546

if.else124:                                       ; preds = %land.lhs.true111, %land.lhs.true107, %if.then104
  %arraydecay125 = getelementptr inbounds [42 x i8], [42 x i8]* %id_buf, i64 0, i64 0, !dbg !16547
  call void @llvm.memset.p0i8.i64(i8* align 16 %arraydecay125, i8 0, i64 42, i1 false), !dbg !16547
  store i16 0, i16* %status, align 2, !dbg !16549
  br label %if.end126

if.end126:                                        ; preds = %if.else124, %if.then115
  %92 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !16550
  %port127 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %92, i32 0, i32 7, !dbg !16552
  %93 = load %struct.mtip_port*, %struct.mtip_port** %port127, align 8, !dbg !16552
  %tobool128 = icmp ne %struct.mtip_port* %93, null, !dbg !16550
  br i1 %tobool128, label %land.lhs.true129, label %if.else144, !dbg !16553

land.lhs.true129:                                 ; preds = %if.end126
  %94 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !16554
  %port130 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %94, i32 0, i32 7, !dbg !16555
  %95 = load %struct.mtip_port*, %struct.mtip_port** %port130, align 8, !dbg !16555
  %flags131 = getelementptr inbounds %struct.mtip_port, %struct.mtip_port* %95, i32 0, i32 22, !dbg !16556
  %call132 = call zeroext i1 @test_bit(i64 6, i64* %flags131) #12, !dbg !16557
  br i1 %call132, label %if.then134, label %if.else144, !dbg !16558

if.then134:                                       ; preds = %land.lhs.true129
  %96 = load i8*, i8** %buf.addr, align 8, !dbg !16559
  %97 = load i32, i32* %size, align 4, !dbg !16561
  %idxprom135 = sext i32 %97 to i64, !dbg !16559
  %arrayidx136 = getelementptr i8, i8* %96, i64 %idxprom135, !dbg !16559
  %98 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !16562
  %pdev137 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %98, i32 0, i32 4, !dbg !16563
  %99 = load %struct.pci_dev*, %struct.pci_dev** %pdev137, align 8, !dbg !16563
  %dev138 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %99, i32 0, i32 41, !dbg !16564
  %call139 = call i8* @dev_name(%struct.device* %dev138) #12, !dbg !16565
  %arraydecay140 = getelementptr inbounds [42 x i8], [42 x i8]* %id_buf, i64 0, i64 0, !dbg !16566
  %100 = load i16, i16* %status, align 2, !dbg !16567
  %conv141 = zext i16 %100 to i32, !dbg !16567
  %call142 = call i32 (i8*, i8*, ...) @sprintf(i8* %arrayidx136, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.141, i64 0, i64 0), i8* %call139, i8* %arraydecay140, i32 %conv141) #12, !dbg !16568
  %101 = load i32, i32* %size, align 4, !dbg !16569
  %add143 = add i32 %101, %call142, !dbg !16569
  store i32 %add143, i32* %size, align 4, !dbg !16569
  br label %if.end153, !dbg !16570

if.else144:                                       ; preds = %land.lhs.true129, %if.end126
  %102 = load i8*, i8** %buf.addr, align 8, !dbg !16571
  %103 = load i32, i32* %size, align 4, !dbg !16573
  %idxprom145 = sext i32 %103 to i64, !dbg !16571
  %arrayidx146 = getelementptr i8, i8* %102, i64 %idxprom145, !dbg !16571
  %104 = load %struct.driver_data*, %struct.driver_data** %dd, align 8, !dbg !16574
  %pdev147 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %104, i32 0, i32 4, !dbg !16575
  %105 = load %struct.pci_dev*, %struct.pci_dev** %pdev147, align 8, !dbg !16575
  %dev148 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %105, i32 0, i32 41, !dbg !16576
  %call149 = call i8* @dev_name(%struct.device* %dev148) #12, !dbg !16577
  %arraydecay150 = getelementptr inbounds [42 x i8], [42 x i8]* %id_buf, i64 0, i64 0, !dbg !16578
  %call151 = call i32 (i8*, i8*, ...) @sprintf(i8* %arrayidx146, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.142, i64 0, i64 0), i8* %call149, i8* %arraydecay150) #12, !dbg !16579
  %106 = load i32, i32* %size, align 4, !dbg !16580
  %add152 = add i32 %106, %call151, !dbg !16580
  store i32 %add152, i32* %size, align 4, !dbg !16580
  br label %if.end153

if.end153:                                        ; preds = %if.else144, %if.then134
  br label %if.end154, !dbg !16581

if.end154:                                        ; preds = %if.end153, %for.body101
  br label %for.inc155, !dbg !16582

for.inc155:                                       ; preds = %if.end154
  %107 = load %struct.driver_data*, %struct.driver_data** %tmp, align 8, !dbg !16512
  store %struct.driver_data* %107, %struct.driver_data** %dd, align 8, !dbg !16512
  call void @llvm.dbg.declare(metadata i8** %__mptr156, metadata !16583, metadata !DIExpression()), !dbg !16585
  %108 = load %struct.driver_data*, %struct.driver_data** %tmp, align 8, !dbg !16585
  %remove_list157 = getelementptr inbounds %struct.driver_data, %struct.driver_data* %108, i32 0, i32 23, !dbg !16585
  %next158 = getelementptr inbounds %struct.list_head, %struct.list_head* %remove_list157, i32 0, i32 0, !dbg !16585
  %109 = load %struct.list_head*, %struct.list_head** %next158, align 8, !dbg !16585
  %110 = bitcast %struct.list_head* %109 to i8*, !dbg !16585
  store i8* %110, i8** %__mptr156, align 8, !dbg !16585
  br label %do.body159, !dbg !16585

do.body159:                                       ; preds = %for.inc155
  br label %do.end160, !dbg !16586

do.end160:                                        ; preds = %do.body159
  %111 = load i8*, i8** %__mptr156, align 8, !dbg !16585
  %add.ptr162 = getelementptr i8, i8* %111, i64 -848, !dbg !16585
  %112 = bitcast i8* %add.ptr162 to %struct.driver_data*, !dbg !16585
  store %struct.driver_data* %112, %struct.driver_data** %tmp161, align 8, !dbg !16586
  %113 = load %struct.driver_data*, %struct.driver_data** %tmp161, align 8, !dbg !16585
  store %struct.driver_data* %113, %struct.driver_data** %tmp, align 8, !dbg !16512
  br label %for.cond96, !dbg !16512, !llvm.loop !16588

for.end163:                                       ; preds = %for.cond96
  %114 = load i64, i64* %flags, align 8, !dbg !16590
  store %struct.spinlock* @dev_lock, %struct.spinlock** %lock.addr.i165, align 8
  store i64 %114, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1049, metadata !6889, metadata !DIExpression()) #11, !dbg !16591
  call void @llvm.dbg.declare(metadata !1049, metadata !6893, metadata !DIExpression()) #11, !dbg !16591
  store i32 1, i32* %tmp.i, align 4, !dbg !16591
  %115 = load i32, i32* %tmp.i, align 4, !dbg !16591
  call void @llvm.dbg.declare(metadata !1049, metadata !6894, metadata !DIExpression()) #11, !dbg !16592
  call void @llvm.dbg.declare(metadata !1049, metadata !6900, metadata !DIExpression()) #11, !dbg !16592
  store i32 1, i32* %tmp8.i, align 4, !dbg !16592
  %116 = load i32, i32* %tmp8.i, align 4, !dbg !16592
  %117 = load i64, i64* %flags.addr.i, align 8, !dbg !16593
  call void @arch_local_irq_restore(i64 %117) #14, !dbg !16593
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !16594, !srcloc !6904
  %118 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i165, align 8, !dbg !16595
  %119 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %118, i32 0, i32 0, !dbg !16595
  %rlock.i166 = bitcast %union.anon.1* %119 to %struct.raw_spinlock*, !dbg !16595
  %120 = load i32, i32* %size, align 4, !dbg !16596
  %conv164 = sext i32 %120 to i64, !dbg !16596
  ret i64 %conv164, !dbg !16597
}

attributes #0 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable willreturn }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { nounwind willreturn }
attributes #8 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #10 = { nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { noredzone }
attributes #13 = { cold noredzone }
attributes #14 = { noredzone nounwind }
attributes #15 = { nounwind readnone }
attributes #16 = { noredzone nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!6437}
!llvm.module.flags = !{!6438, !6439, !6440, !6441}
!llvm.ident = !{!6442}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "mtip_major", scope: !2, file: !3, line: 106, type: !443, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !887, globals: !6289, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/block/mtip32xx/mtip32xx.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !11, !18, !24, !31, !36, !44, !50, !64, !70, !76, !83, !87, !99, !104, !110, !116, !123, !129, !138, !146, !157, !174, !206, !231, !238, !413, !418, !435, !441, !854, !875, !880}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "writeback_sync_modes", file: !6, line: 41, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/writeback.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10}
!9 = !DIEnumerator(name: "WB_SYNC_NONE", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "WB_SYNC_ALL", value: 1, isUnsigned: true)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !12, line: 15, baseType: !7, size: 32, elements: !13)
!12 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!13 = !{!14, !15, !16, !17}
!14 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!15 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!16 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!17 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !19, line: 44, baseType: !7, size: 32, elements: !20)
!19 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!20 = !{!21, !22, !23}
!21 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!22 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!23 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !25, line: 343, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29, !30}
!27 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!30 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!31 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !32, line: 65, baseType: !7, size: 32, elements: !33)
!32 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!33 = !{!34, !35}
!34 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!35 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!36 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !37, line: 524, baseType: !7, size: 32, elements: !38)
!37 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!38 = !{!39, !40, !41, !42, !43}
!39 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!40 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!41 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!42 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!43 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !37, line: 502, baseType: !7, size: 32, elements: !45)
!45 = !{!46, !47, !48, !49}
!46 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!50 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !51, line: 76, baseType: !7, size: 32, elements: !52)
!51 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!52 = !{!53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63}
!53 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!54 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!55 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!56 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!57 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!58 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!59 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!60 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!61 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!62 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!63 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!64 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !65, line: 26, baseType: !7, size: 32, elements: !66)
!65 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!66 = !{!67, !68, !69}
!67 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!68 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!69 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!70 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mq_rq_state", file: !71, line: 118, baseType: !7, size: 32, elements: !72)
!71 = !DIFile(filename: "./include/linux/blkdev.h", directory: "/home/lizy2001/genbc/linux")
!72 = !{!73, !74, !75}
!73 = !DIEnumerator(name: "MQ_RQ_IDLE", value: 0, isUnsigned: true)
!74 = !DIEnumerator(name: "MQ_RQ_IN_FLIGHT", value: 1, isUnsigned: true)
!75 = !DIEnumerator(name: "MQ_RQ_COMPLETE", value: 2, isUnsigned: true)
!76 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "elv_merge", file: !77, line: 19, baseType: !7, size: 32, elements: !78)
!77 = !DIFile(filename: "./include/linux/elevator.h", directory: "/home/lizy2001/genbc/linux")
!78 = !{!79, !80, !81, !82}
!79 = !DIEnumerator(name: "ELEVATOR_NO_MERGE", value: 0, isUnsigned: true)
!80 = !DIEnumerator(name: "ELEVATOR_FRONT_MERGE", value: 1, isUnsigned: true)
!81 = !DIEnumerator(name: "ELEVATOR_BACK_MERGE", value: 2, isUnsigned: true)
!82 = !DIEnumerator(name: "ELEVATOR_DISCARD_MERGE", value: 3, isUnsigned: true)
!83 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_eh_timer_return", file: !71, line: 293, baseType: !7, size: 32, elements: !84)
!84 = !{!85, !86}
!85 = !DIEnumerator(name: "BLK_EH_DONE", value: 0, isUnsigned: true)
!86 = !DIEnumerator(name: "BLK_EH_RESET_TIMER", value: 1, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "wb_reason", file: !88, line: 49, baseType: !7, size: 32, elements: !89)
!88 = !DIFile(filename: "./include/linux/backing-dev-defs.h", directory: "/home/lizy2001/genbc/linux")
!89 = !{!90, !91, !92, !93, !94, !95, !96, !97, !98}
!90 = !DIEnumerator(name: "WB_REASON_BACKGROUND", value: 0, isUnsigned: true)
!91 = !DIEnumerator(name: "WB_REASON_VMSCAN", value: 1, isUnsigned: true)
!92 = !DIEnumerator(name: "WB_REASON_SYNC", value: 2, isUnsigned: true)
!93 = !DIEnumerator(name: "WB_REASON_PERIODIC", value: 3, isUnsigned: true)
!94 = !DIEnumerator(name: "WB_REASON_LAPTOP_TIMER", value: 4, isUnsigned: true)
!95 = !DIEnumerator(name: "WB_REASON_FS_FREE_SPACE", value: 5, isUnsigned: true)
!96 = !DIEnumerator(name: "WB_REASON_FORKER_THREAD", value: 6, isUnsigned: true)
!97 = !DIEnumerator(name: "WB_REASON_FOREIGN_FLUSH", value: 7, isUnsigned: true)
!98 = !DIEnumerator(name: "WB_REASON_MAX", value: 8, isUnsigned: true)
!99 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_zoned_model", file: !71, line: 315, baseType: !7, size: 32, elements: !100)
!100 = !{!101, !102, !103}
!101 = !DIEnumerator(name: "BLK_ZONED_NONE", value: 0, isUnsigned: true)
!102 = !DIEnumerator(name: "BLK_ZONED_HA", value: 1, isUnsigned: true)
!103 = !DIEnumerator(name: "BLK_ZONED_HM", value: 2, isUnsigned: true)
!104 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !105, line: 546, baseType: !7, size: 32, elements: !106)
!105 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!106 = !{!107, !108, !109}
!107 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!108 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!109 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!110 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !111, line: 16, baseType: !7, size: 32, elements: !112)
!111 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!112 = !{!113, !114, !115}
!113 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!114 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!115 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!116 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !117, line: 59, baseType: !7, size: 32, elements: !118)
!117 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!118 = !{!119, !120, !121, !122}
!119 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!120 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!121 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!122 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!123 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !124, line: 54, baseType: !7, size: 32, elements: !125)
!124 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!125 = !{!126, !127, !128}
!126 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!128 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!129 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !130, line: 296, baseType: !7, size: 32, elements: !131)
!130 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!131 = !{!132, !133, !134, !135, !136, !137}
!132 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!133 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!134 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!135 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!136 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!137 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!138 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !139, line: 9, baseType: !7, size: 32, elements: !140)
!139 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!140 = !{!141, !142, !143, !144, !145}
!141 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!142 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!143 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!144 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!145 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!146 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "node_states", file: !147, line: 391, baseType: !7, size: 32, elements: !148)
!147 = !DIFile(filename: "./include/linux/nodemask.h", directory: "/home/lizy2001/genbc/linux")
!148 = !{!149, !150, !151, !152, !153, !154, !155, !156}
!149 = !DIEnumerator(name: "N_POSSIBLE", value: 0, isUnsigned: true)
!150 = !DIEnumerator(name: "N_ONLINE", value: 1, isUnsigned: true)
!151 = !DIEnumerator(name: "N_NORMAL_MEMORY", value: 2, isUnsigned: true)
!152 = !DIEnumerator(name: "N_HIGH_MEMORY", value: 2, isUnsigned: true)
!153 = !DIEnumerator(name: "N_MEMORY", value: 3, isUnsigned: true)
!154 = !DIEnumerator(name: "N_CPU", value: 4, isUnsigned: true)
!155 = !DIEnumerator(name: "N_GENERIC_INITIATOR", value: 5, isUnsigned: true)
!156 = !DIEnumerator(name: "NR_NODE_STATES", value: 6, isUnsigned: true)
!157 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 308, baseType: !7, size: 32, elements: !159)
!158 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!159 = !{!160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173}
!160 = !DIEnumerator(name: "WQ_UNBOUND", value: 2, isUnsigned: true)
!161 = !DIEnumerator(name: "WQ_FREEZABLE", value: 4, isUnsigned: true)
!162 = !DIEnumerator(name: "WQ_MEM_RECLAIM", value: 8, isUnsigned: true)
!163 = !DIEnumerator(name: "WQ_HIGHPRI", value: 16, isUnsigned: true)
!164 = !DIEnumerator(name: "WQ_CPU_INTENSIVE", value: 32, isUnsigned: true)
!165 = !DIEnumerator(name: "WQ_SYSFS", value: 64, isUnsigned: true)
!166 = !DIEnumerator(name: "WQ_POWER_EFFICIENT", value: 128, isUnsigned: true)
!167 = !DIEnumerator(name: "__WQ_DRAINING", value: 65536, isUnsigned: true)
!168 = !DIEnumerator(name: "__WQ_ORDERED", value: 131072, isUnsigned: true)
!169 = !DIEnumerator(name: "__WQ_LEGACY", value: 262144, isUnsigned: true)
!170 = !DIEnumerator(name: "__WQ_ORDERED_EXPLICIT", value: 524288, isUnsigned: true)
!171 = !DIEnumerator(name: "WQ_MAX_ACTIVE", value: 512, isUnsigned: true)
!172 = !DIEnumerator(name: "WQ_MAX_UNBOUND_PER_CPU", value: 4, isUnsigned: true)
!173 = !DIEnumerator(name: "WQ_DFL_ACTIVE", value: 256, isUnsigned: true)
!174 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 30, baseType: !175, size: 64, elements: !176)
!175 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!176 = !{!177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205}
!177 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!178 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!179 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!180 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!181 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!182 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!183 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!184 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!185 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!186 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!187 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!188 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!189 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!190 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!191 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!192 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!193 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!194 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!195 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!196 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!197 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!198 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!199 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!200 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!201 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!202 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!203 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!204 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!205 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!206 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !207, line: 119, baseType: !7, size: 32, elements: !208)
!207 = !DIFile(filename: "drivers/block/mtip32xx/mtip32xx.h", directory: "/home/lizy2001/genbc/linux")
!208 = !{!209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230}
!209 = !DIEnumerator(name: "MTIP_PF_IC_ACTIVE_BIT", value: 0, isUnsigned: true)
!210 = !DIEnumerator(name: "MTIP_PF_EH_ACTIVE_BIT", value: 1, isUnsigned: true)
!211 = !DIEnumerator(name: "MTIP_PF_SE_ACTIVE_BIT", value: 2, isUnsigned: true)
!212 = !DIEnumerator(name: "MTIP_PF_DM_ACTIVE_BIT", value: 3, isUnsigned: true)
!213 = !DIEnumerator(name: "MTIP_PF_TO_ACTIVE_BIT", value: 9, isUnsigned: true)
!214 = !DIEnumerator(name: "MTIP_PF_PAUSE_IO", value: 527, isUnsigned: true)
!215 = !DIEnumerator(name: "MTIP_PF_HOST_CAP_64", value: 10, isUnsigned: true)
!216 = !DIEnumerator(name: "MTIP_PF_SVC_THD_ACTIVE_BIT", value: 4, isUnsigned: true)
!217 = !DIEnumerator(name: "MTIP_PF_ISSUE_CMDS_BIT", value: 5, isUnsigned: true)
!218 = !DIEnumerator(name: "MTIP_PF_REBUILD_BIT", value: 6, isUnsigned: true)
!219 = !DIEnumerator(name: "MTIP_PF_SVC_THD_STOP_BIT", value: 8, isUnsigned: true)
!220 = !DIEnumerator(name: "MTIP_PF_SVC_THD_WORK", value: 866, isUnsigned: true)
!221 = !DIEnumerator(name: "MTIP_DDF_SEC_LOCK_BIT", value: 0, isUnsigned: true)
!222 = !DIEnumerator(name: "MTIP_DDF_REMOVE_PENDING_BIT", value: 1, isUnsigned: true)
!223 = !DIEnumerator(name: "MTIP_DDF_OVER_TEMP_BIT", value: 2, isUnsigned: true)
!224 = !DIEnumerator(name: "MTIP_DDF_WRITE_PROTECT_BIT", value: 3, isUnsigned: true)
!225 = !DIEnumerator(name: "MTIP_DDF_CLEANUP_BIT", value: 5, isUnsigned: true)
!226 = !DIEnumerator(name: "MTIP_DDF_RESUME_BIT", value: 6, isUnsigned: true)
!227 = !DIEnumerator(name: "MTIP_DDF_INIT_DONE_BIT", value: 7, isUnsigned: true)
!228 = !DIEnumerator(name: "MTIP_DDF_REBUILD_FAILED_BIT", value: 8, isUnsigned: true)
!229 = !DIEnumerator(name: "MTIP_DDF_REMOVAL_BIT", value: 9, isUnsigned: true)
!230 = !DIEnumerator(name: "MTIP_DDF_STOP_IO", value: 271, isUnsigned: true)
!231 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !232, line: 305, baseType: !7, size: 32, elements: !233)
!232 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!233 = !{!234, !235, !236, !237}
!234 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!235 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!236 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!237 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!238 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !239, line: 39, baseType: !175, size: 64, elements: !240)
!239 = !DIFile(filename: "./include/../drivers/ata/ahci.h", directory: "/home/lizy2001/genbc/linux")
!240 = !{!241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412}
!241 = !DIEnumerator(name: "AHCI_MAX_PORTS", value: 32)
!242 = !DIEnumerator(name: "AHCI_MAX_CLKS", value: 5)
!243 = !DIEnumerator(name: "AHCI_MAX_SG", value: 168)
!244 = !DIEnumerator(name: "AHCI_DMA_BOUNDARY", value: 4294967295)
!245 = !DIEnumerator(name: "AHCI_MAX_CMDS", value: 32)
!246 = !DIEnumerator(name: "AHCI_CMD_SZ", value: 32)
!247 = !DIEnumerator(name: "AHCI_CMD_SLOT_SZ", value: 1024)
!248 = !DIEnumerator(name: "AHCI_RX_FIS_SZ", value: 256)
!249 = !DIEnumerator(name: "AHCI_CMD_TBL_CDB", value: 64)
!250 = !DIEnumerator(name: "AHCI_CMD_TBL_HDR_SZ", value: 128)
!251 = !DIEnumerator(name: "AHCI_CMD_TBL_SZ", value: 2816)
!252 = !DIEnumerator(name: "AHCI_CMD_TBL_AR_SZ", value: 90112)
!253 = !DIEnumerator(name: "AHCI_PORT_PRIV_DMA_SZ", value: 91392)
!254 = !DIEnumerator(name: "AHCI_PORT_PRIV_FBS_DMA_SZ", value: 95232)
!255 = !DIEnumerator(name: "AHCI_IRQ_ON_SG", value: -2147483648)
!256 = !DIEnumerator(name: "AHCI_CMD_ATAPI", value: 32)
!257 = !DIEnumerator(name: "AHCI_CMD_WRITE", value: 64)
!258 = !DIEnumerator(name: "AHCI_CMD_PREFETCH", value: 128)
!259 = !DIEnumerator(name: "AHCI_CMD_RESET", value: 256)
!260 = !DIEnumerator(name: "AHCI_CMD_CLR_BUSY", value: 1024)
!261 = !DIEnumerator(name: "RX_FIS_PIO_SETUP", value: 32)
!262 = !DIEnumerator(name: "RX_FIS_D2H_REG", value: 64)
!263 = !DIEnumerator(name: "RX_FIS_SDB", value: 88)
!264 = !DIEnumerator(name: "RX_FIS_UNK", value: 96)
!265 = !DIEnumerator(name: "HOST_CAP", value: 0)
!266 = !DIEnumerator(name: "HOST_CTL", value: 4)
!267 = !DIEnumerator(name: "HOST_IRQ_STAT", value: 8)
!268 = !DIEnumerator(name: "HOST_PORTS_IMPL", value: 12)
!269 = !DIEnumerator(name: "HOST_VERSION", value: 16)
!270 = !DIEnumerator(name: "HOST_EM_LOC", value: 28)
!271 = !DIEnumerator(name: "HOST_EM_CTL", value: 32)
!272 = !DIEnumerator(name: "HOST_CAP2", value: 36)
!273 = !DIEnumerator(name: "HOST_RESET", value: 1)
!274 = !DIEnumerator(name: "HOST_IRQ_EN", value: 2)
!275 = !DIEnumerator(name: "HOST_MRSM", value: 4)
!276 = !DIEnumerator(name: "HOST_AHCI_EN", value: -2147483648)
!277 = !DIEnumerator(name: "HOST_CAP_SXS", value: 32)
!278 = !DIEnumerator(name: "HOST_CAP_EMS", value: 64)
!279 = !DIEnumerator(name: "HOST_CAP_CCC", value: 128)
!280 = !DIEnumerator(name: "HOST_CAP_PART", value: 8192)
!281 = !DIEnumerator(name: "HOST_CAP_SSC", value: 16384)
!282 = !DIEnumerator(name: "HOST_CAP_PIO_MULTI", value: 32768)
!283 = !DIEnumerator(name: "HOST_CAP_FBS", value: 65536)
!284 = !DIEnumerator(name: "HOST_CAP_PMP", value: 131072)
!285 = !DIEnumerator(name: "HOST_CAP_ONLY", value: 262144)
!286 = !DIEnumerator(name: "HOST_CAP_CLO", value: 16777216)
!287 = !DIEnumerator(name: "HOST_CAP_LED", value: 33554432)
!288 = !DIEnumerator(name: "HOST_CAP_ALPM", value: 67108864)
!289 = !DIEnumerator(name: "HOST_CAP_SSS", value: 134217728)
!290 = !DIEnumerator(name: "HOST_CAP_MPS", value: 268435456)
!291 = !DIEnumerator(name: "HOST_CAP_SNTF", value: 536870912)
!292 = !DIEnumerator(name: "HOST_CAP_NCQ", value: 1073741824)
!293 = !DIEnumerator(name: "HOST_CAP_64", value: -2147483648)
!294 = !DIEnumerator(name: "HOST_CAP2_BOH", value: 1)
!295 = !DIEnumerator(name: "HOST_CAP2_NVMHCI", value: 2)
!296 = !DIEnumerator(name: "HOST_CAP2_APST", value: 4)
!297 = !DIEnumerator(name: "HOST_CAP2_SDS", value: 8)
!298 = !DIEnumerator(name: "HOST_CAP2_SADM", value: 16)
!299 = !DIEnumerator(name: "HOST_CAP2_DESO", value: 32)
!300 = !DIEnumerator(name: "PORT_LST_ADDR", value: 0)
!301 = !DIEnumerator(name: "PORT_LST_ADDR_HI", value: 4)
!302 = !DIEnumerator(name: "PORT_FIS_ADDR", value: 8)
!303 = !DIEnumerator(name: "PORT_FIS_ADDR_HI", value: 12)
!304 = !DIEnumerator(name: "PORT_IRQ_STAT", value: 16)
!305 = !DIEnumerator(name: "PORT_IRQ_MASK", value: 20)
!306 = !DIEnumerator(name: "PORT_CMD", value: 24)
!307 = !DIEnumerator(name: "PORT_TFDATA", value: 32)
!308 = !DIEnumerator(name: "PORT_SIG", value: 36)
!309 = !DIEnumerator(name: "PORT_CMD_ISSUE", value: 56)
!310 = !DIEnumerator(name: "PORT_SCR_STAT", value: 40)
!311 = !DIEnumerator(name: "PORT_SCR_CTL", value: 44)
!312 = !DIEnumerator(name: "PORT_SCR_ERR", value: 48)
!313 = !DIEnumerator(name: "PORT_SCR_ACT", value: 52)
!314 = !DIEnumerator(name: "PORT_SCR_NTF", value: 60)
!315 = !DIEnumerator(name: "PORT_FBS", value: 64)
!316 = !DIEnumerator(name: "PORT_DEVSLP", value: 68)
!317 = !DIEnumerator(name: "PORT_IRQ_COLD_PRES", value: -2147483648)
!318 = !DIEnumerator(name: "PORT_IRQ_TF_ERR", value: 1073741824)
!319 = !DIEnumerator(name: "PORT_IRQ_HBUS_ERR", value: 536870912)
!320 = !DIEnumerator(name: "PORT_IRQ_HBUS_DATA_ERR", value: 268435456)
!321 = !DIEnumerator(name: "PORT_IRQ_IF_ERR", value: 134217728)
!322 = !DIEnumerator(name: "PORT_IRQ_IF_NONFATAL", value: 67108864)
!323 = !DIEnumerator(name: "PORT_IRQ_OVERFLOW", value: 16777216)
!324 = !DIEnumerator(name: "PORT_IRQ_BAD_PMP", value: 8388608)
!325 = !DIEnumerator(name: "PORT_IRQ_PHYRDY", value: 4194304)
!326 = !DIEnumerator(name: "PORT_IRQ_DEV_ILCK", value: 128)
!327 = !DIEnumerator(name: "PORT_IRQ_CONNECT", value: 64)
!328 = !DIEnumerator(name: "PORT_IRQ_SG_DONE", value: 32)
!329 = !DIEnumerator(name: "PORT_IRQ_UNK_FIS", value: 16)
!330 = !DIEnumerator(name: "PORT_IRQ_SDB_FIS", value: 8)
!331 = !DIEnumerator(name: "PORT_IRQ_DMAS_FIS", value: 4)
!332 = !DIEnumerator(name: "PORT_IRQ_PIOS_FIS", value: 2)
!333 = !DIEnumerator(name: "PORT_IRQ_D2H_REG_FIS", value: 1)
!334 = !DIEnumerator(name: "PORT_IRQ_FREEZE", value: 683671632)
!335 = !DIEnumerator(name: "PORT_IRQ_ERROR", value: 2025848912)
!336 = !DIEnumerator(name: "DEF_PORT_IRQ", value: 2025848959)
!337 = !DIEnumerator(name: "PORT_CMD_ASP", value: 134217728)
!338 = !DIEnumerator(name: "PORT_CMD_ALPE", value: 67108864)
!339 = !DIEnumerator(name: "PORT_CMD_ATAPI", value: 16777216)
!340 = !DIEnumerator(name: "PORT_CMD_FBSCP", value: 4194304)
!341 = !DIEnumerator(name: "PORT_CMD_ESP", value: 2097152)
!342 = !DIEnumerator(name: "PORT_CMD_HPCP", value: 262144)
!343 = !DIEnumerator(name: "PORT_CMD_PMP", value: 131072)
!344 = !DIEnumerator(name: "PORT_CMD_LIST_ON", value: 32768)
!345 = !DIEnumerator(name: "PORT_CMD_FIS_ON", value: 16384)
!346 = !DIEnumerator(name: "PORT_CMD_FIS_RX", value: 16)
!347 = !DIEnumerator(name: "PORT_CMD_CLO", value: 8)
!348 = !DIEnumerator(name: "PORT_CMD_POWER_ON", value: 4)
!349 = !DIEnumerator(name: "PORT_CMD_SPIN_UP", value: 2)
!350 = !DIEnumerator(name: "PORT_CMD_START", value: 1)
!351 = !DIEnumerator(name: "PORT_CMD_ICC_MASK", value: -268435456)
!352 = !DIEnumerator(name: "PORT_CMD_ICC_ACTIVE", value: 268435456)
!353 = !DIEnumerator(name: "PORT_CMD_ICC_PARTIAL", value: 536870912)
!354 = !DIEnumerator(name: "PORT_CMD_ICC_SLUMBER", value: 1610612736)
!355 = !DIEnumerator(name: "PORT_FBS_DWE_OFFSET", value: 16)
!356 = !DIEnumerator(name: "PORT_FBS_ADO_OFFSET", value: 12)
!357 = !DIEnumerator(name: "PORT_FBS_DEV_OFFSET", value: 8)
!358 = !DIEnumerator(name: "PORT_FBS_DEV_MASK", value: 3840)
!359 = !DIEnumerator(name: "PORT_FBS_SDE", value: 4)
!360 = !DIEnumerator(name: "PORT_FBS_DEC", value: 2)
!361 = !DIEnumerator(name: "PORT_FBS_EN", value: 1)
!362 = !DIEnumerator(name: "PORT_DEVSLP_DM_OFFSET", value: 25)
!363 = !DIEnumerator(name: "PORT_DEVSLP_DM_MASK", value: 503316480)
!364 = !DIEnumerator(name: "PORT_DEVSLP_DITO_OFFSET", value: 15)
!365 = !DIEnumerator(name: "PORT_DEVSLP_MDAT_OFFSET", value: 10)
!366 = !DIEnumerator(name: "PORT_DEVSLP_DETO_OFFSET", value: 2)
!367 = !DIEnumerator(name: "PORT_DEVSLP_DSP", value: 2)
!368 = !DIEnumerator(name: "PORT_DEVSLP_ADSE", value: 1)
!369 = !DIEnumerator(name: "AHCI_HFLAG_NO_NCQ", value: 1)
!370 = !DIEnumerator(name: "AHCI_HFLAG_IGN_IRQ_IF_ERR", value: 2)
!371 = !DIEnumerator(name: "AHCI_HFLAG_IGN_SERR_INTERNAL", value: 4)
!372 = !DIEnumerator(name: "AHCI_HFLAG_32BIT_ONLY", value: 8)
!373 = !DIEnumerator(name: "AHCI_HFLAG_MV_PATA", value: 16)
!374 = !DIEnumerator(name: "AHCI_HFLAG_NO_MSI", value: 32)
!375 = !DIEnumerator(name: "AHCI_HFLAG_NO_PMP", value: 64)
!376 = !DIEnumerator(name: "AHCI_HFLAG_SECT255", value: 256)
!377 = !DIEnumerator(name: "AHCI_HFLAG_YES_NCQ", value: 512)
!378 = !DIEnumerator(name: "AHCI_HFLAG_NO_SUSPEND", value: 1024)
!379 = !DIEnumerator(name: "AHCI_HFLAG_SRST_TOUT_IS_OFFLINE", value: 2048)
!380 = !DIEnumerator(name: "AHCI_HFLAG_NO_SNTF", value: 4096)
!381 = !DIEnumerator(name: "AHCI_HFLAG_NO_FPDMA_AA", value: 8192)
!382 = !DIEnumerator(name: "AHCI_HFLAG_YES_FBS", value: 16384)
!383 = !DIEnumerator(name: "AHCI_HFLAG_DELAY_ENGINE", value: 32768)
!384 = !DIEnumerator(name: "AHCI_HFLAG_NO_DEVSLP", value: 131072)
!385 = !DIEnumerator(name: "AHCI_HFLAG_NO_FBS", value: 262144)
!386 = !DIEnumerator(name: "AHCI_HFLAG_MULTI_MSI", value: 1048576)
!387 = !DIEnumerator(name: "AHCI_HFLAG_WAKE_BEFORE_STOP", value: 4194304)
!388 = !DIEnumerator(name: "AHCI_HFLAG_YES_ALPM", value: 8388608)
!389 = !DIEnumerator(name: "AHCI_HFLAG_NO_WRITE_TO_RO", value: 16777216)
!390 = !DIEnumerator(name: "AHCI_HFLAG_IS_MOBILE", value: 33554432)
!391 = !DIEnumerator(name: "AHCI_HFLAG_SUSPEND_PHYS", value: 67108864)
!392 = !DIEnumerator(name: "AHCI_HFLAG_IGN_NOTSUPP_POWER_ON", value: 134217728)
!393 = !DIEnumerator(name: "AHCI_FLAG_COMMON", value: 393346)
!394 = !DIEnumerator(name: "ICH_MAP", value: 144)
!395 = !DIEnumerator(name: "PCS_6", value: 146)
!396 = !DIEnumerator(name: "PCS_7", value: 148)
!397 = !DIEnumerator(name: "EM_MAX_SLOTS", value: 8)
!398 = !DIEnumerator(name: "EM_MAX_RETRY", value: 5)
!399 = !DIEnumerator(name: "EM_CTL_RST", value: 512)
!400 = !DIEnumerator(name: "EM_CTL_TM", value: 256)
!401 = !DIEnumerator(name: "EM_CTL_MR", value: 1)
!402 = !DIEnumerator(name: "EM_CTL_ALHD", value: 67108864)
!403 = !DIEnumerator(name: "EM_CTL_XMT", value: 33554432)
!404 = !DIEnumerator(name: "EM_CTL_SMB", value: 16777216)
!405 = !DIEnumerator(name: "EM_CTL_SGPIO", value: 524288)
!406 = !DIEnumerator(name: "EM_CTL_SES", value: 262144)
!407 = !DIEnumerator(name: "EM_CTL_SAFTE", value: 131072)
!408 = !DIEnumerator(name: "EM_CTL_LED", value: 65536)
!409 = !DIEnumerator(name: "EM_MSG_TYPE_LED", value: 1)
!410 = !DIEnumerator(name: "EM_MSG_TYPE_SAFTE", value: 2)
!411 = !DIEnumerator(name: "EM_MSG_TYPE_SES2", value: 4)
!412 = !DIEnumerator(name: "EM_MSG_TYPE_SGPIO", value: 8)
!413 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !414, line: 10, baseType: !7, size: 32, elements: !415)
!414 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!415 = !{!416, !417}
!416 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!417 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!418 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !419, line: 391, baseType: !7, size: 32, elements: !420)
!419 = !DIFile(filename: "./include/linux/blk-mq.h", directory: "/home/lizy2001/genbc/linux")
!420 = !{!421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434}
!421 = !DIEnumerator(name: "BLK_MQ_F_SHOULD_MERGE", value: 1, isUnsigned: true)
!422 = !DIEnumerator(name: "BLK_MQ_F_TAG_QUEUE_SHARED", value: 2, isUnsigned: true)
!423 = !DIEnumerator(name: "BLK_MQ_F_STACKING", value: 4, isUnsigned: true)
!424 = !DIEnumerator(name: "BLK_MQ_F_TAG_HCTX_SHARED", value: 8, isUnsigned: true)
!425 = !DIEnumerator(name: "BLK_MQ_F_BLOCKING", value: 32, isUnsigned: true)
!426 = !DIEnumerator(name: "BLK_MQ_F_NO_SCHED", value: 64, isUnsigned: true)
!427 = !DIEnumerator(name: "BLK_MQ_F_ALLOC_POLICY_START_BIT", value: 8, isUnsigned: true)
!428 = !DIEnumerator(name: "BLK_MQ_F_ALLOC_POLICY_BITS", value: 1, isUnsigned: true)
!429 = !DIEnumerator(name: "BLK_MQ_S_STOPPED", value: 0, isUnsigned: true)
!430 = !DIEnumerator(name: "BLK_MQ_S_TAG_ACTIVE", value: 1, isUnsigned: true)
!431 = !DIEnumerator(name: "BLK_MQ_S_SCHED_RESTART", value: 2, isUnsigned: true)
!432 = !DIEnumerator(name: "BLK_MQ_S_INACTIVE", value: 3, isUnsigned: true)
!433 = !DIEnumerator(name: "BLK_MQ_MAX_DEPTH", value: 10240, isUnsigned: true)
!434 = !DIEnumerator(name: "BLK_MQ_CPU_WORK_BATCH", value: 8, isUnsigned: true)
!435 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !436, line: 11, baseType: !7, size: 32, elements: !437)
!436 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!437 = !{!438, !439, !440}
!438 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!439 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!440 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!441 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !442, line: 25, baseType: !443, size: 32, elements: !444)
!442 = !DIFile(filename: "./include/linux/ata.h", directory: "/home/lizy2001/genbc/linux")
!443 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!444 = !{!445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853}
!445 = !DIEnumerator(name: "ATA_MAX_DEVICES", value: 2)
!446 = !DIEnumerator(name: "ATA_MAX_PRD", value: 256)
!447 = !DIEnumerator(name: "ATA_SECT_SIZE", value: 512)
!448 = !DIEnumerator(name: "ATA_MAX_SECTORS_128", value: 128)
!449 = !DIEnumerator(name: "ATA_MAX_SECTORS", value: 256)
!450 = !DIEnumerator(name: "ATA_MAX_SECTORS_1024", value: 1024)
!451 = !DIEnumerator(name: "ATA_MAX_SECTORS_LBA48", value: 65535)
!452 = !DIEnumerator(name: "ATA_MAX_SECTORS_TAPE", value: 65535)
!453 = !DIEnumerator(name: "ATA_MAX_TRIM_RNUM", value: 64)
!454 = !DIEnumerator(name: "ATA_ID_WORDS", value: 256)
!455 = !DIEnumerator(name: "ATA_ID_CONFIG", value: 0)
!456 = !DIEnumerator(name: "ATA_ID_CYLS", value: 1)
!457 = !DIEnumerator(name: "ATA_ID_HEADS", value: 3)
!458 = !DIEnumerator(name: "ATA_ID_SECTORS", value: 6)
!459 = !DIEnumerator(name: "ATA_ID_SERNO", value: 10)
!460 = !DIEnumerator(name: "ATA_ID_BUF_SIZE", value: 21)
!461 = !DIEnumerator(name: "ATA_ID_FW_REV", value: 23)
!462 = !DIEnumerator(name: "ATA_ID_PROD", value: 27)
!463 = !DIEnumerator(name: "ATA_ID_MAX_MULTSECT", value: 47)
!464 = !DIEnumerator(name: "ATA_ID_DWORD_IO", value: 48)
!465 = !DIEnumerator(name: "ATA_ID_TRUSTED", value: 48)
!466 = !DIEnumerator(name: "ATA_ID_CAPABILITY", value: 49)
!467 = !DIEnumerator(name: "ATA_ID_OLD_PIO_MODES", value: 51)
!468 = !DIEnumerator(name: "ATA_ID_OLD_DMA_MODES", value: 52)
!469 = !DIEnumerator(name: "ATA_ID_FIELD_VALID", value: 53)
!470 = !DIEnumerator(name: "ATA_ID_CUR_CYLS", value: 54)
!471 = !DIEnumerator(name: "ATA_ID_CUR_HEADS", value: 55)
!472 = !DIEnumerator(name: "ATA_ID_CUR_SECTORS", value: 56)
!473 = !DIEnumerator(name: "ATA_ID_MULTSECT", value: 59)
!474 = !DIEnumerator(name: "ATA_ID_LBA_CAPACITY", value: 60)
!475 = !DIEnumerator(name: "ATA_ID_SWDMA_MODES", value: 62)
!476 = !DIEnumerator(name: "ATA_ID_MWDMA_MODES", value: 63)
!477 = !DIEnumerator(name: "ATA_ID_PIO_MODES", value: 64)
!478 = !DIEnumerator(name: "ATA_ID_EIDE_DMA_MIN", value: 65)
!479 = !DIEnumerator(name: "ATA_ID_EIDE_DMA_TIME", value: 66)
!480 = !DIEnumerator(name: "ATA_ID_EIDE_PIO", value: 67)
!481 = !DIEnumerator(name: "ATA_ID_EIDE_PIO_IORDY", value: 68)
!482 = !DIEnumerator(name: "ATA_ID_ADDITIONAL_SUPP", value: 69)
!483 = !DIEnumerator(name: "ATA_ID_QUEUE_DEPTH", value: 75)
!484 = !DIEnumerator(name: "ATA_ID_SATA_CAPABILITY", value: 76)
!485 = !DIEnumerator(name: "ATA_ID_SATA_CAPABILITY_2", value: 77)
!486 = !DIEnumerator(name: "ATA_ID_FEATURE_SUPP", value: 78)
!487 = !DIEnumerator(name: "ATA_ID_MAJOR_VER", value: 80)
!488 = !DIEnumerator(name: "ATA_ID_COMMAND_SET_1", value: 82)
!489 = !DIEnumerator(name: "ATA_ID_COMMAND_SET_2", value: 83)
!490 = !DIEnumerator(name: "ATA_ID_CFSSE", value: 84)
!491 = !DIEnumerator(name: "ATA_ID_CFS_ENABLE_1", value: 85)
!492 = !DIEnumerator(name: "ATA_ID_CFS_ENABLE_2", value: 86)
!493 = !DIEnumerator(name: "ATA_ID_CSF_DEFAULT", value: 87)
!494 = !DIEnumerator(name: "ATA_ID_UDMA_MODES", value: 88)
!495 = !DIEnumerator(name: "ATA_ID_HW_CONFIG", value: 93)
!496 = !DIEnumerator(name: "ATA_ID_SPG", value: 98)
!497 = !DIEnumerator(name: "ATA_ID_LBA_CAPACITY_2", value: 100)
!498 = !DIEnumerator(name: "ATA_ID_SECTOR_SIZE", value: 106)
!499 = !DIEnumerator(name: "ATA_ID_WWN", value: 108)
!500 = !DIEnumerator(name: "ATA_ID_LOGICAL_SECTOR_SIZE", value: 117)
!501 = !DIEnumerator(name: "ATA_ID_COMMAND_SET_3", value: 119)
!502 = !DIEnumerator(name: "ATA_ID_COMMAND_SET_4", value: 120)
!503 = !DIEnumerator(name: "ATA_ID_LAST_LUN", value: 126)
!504 = !DIEnumerator(name: "ATA_ID_DLF", value: 128)
!505 = !DIEnumerator(name: "ATA_ID_CSFO", value: 129)
!506 = !DIEnumerator(name: "ATA_ID_CFA_POWER", value: 160)
!507 = !DIEnumerator(name: "ATA_ID_CFA_KEY_MGMT", value: 162)
!508 = !DIEnumerator(name: "ATA_ID_CFA_MODES", value: 163)
!509 = !DIEnumerator(name: "ATA_ID_DATA_SET_MGMT", value: 169)
!510 = !DIEnumerator(name: "ATA_ID_SCT_CMD_XPORT", value: 206)
!511 = !DIEnumerator(name: "ATA_ID_ROT_SPEED", value: 217)
!512 = !DIEnumerator(name: "ATA_ID_PIO4", value: 2)
!513 = !DIEnumerator(name: "ATA_ID_SERNO_LEN", value: 20)
!514 = !DIEnumerator(name: "ATA_ID_FW_REV_LEN", value: 8)
!515 = !DIEnumerator(name: "ATA_ID_PROD_LEN", value: 40)
!516 = !DIEnumerator(name: "ATA_ID_WWN_LEN", value: 8)
!517 = !DIEnumerator(name: "ATA_PCI_CTL_OFS", value: 2)
!518 = !DIEnumerator(name: "ATA_PIO0", value: 1)
!519 = !DIEnumerator(name: "ATA_PIO1", value: 3)
!520 = !DIEnumerator(name: "ATA_PIO2", value: 7)
!521 = !DIEnumerator(name: "ATA_PIO3", value: 15)
!522 = !DIEnumerator(name: "ATA_PIO4", value: 31)
!523 = !DIEnumerator(name: "ATA_PIO5", value: 63)
!524 = !DIEnumerator(name: "ATA_PIO6", value: 127)
!525 = !DIEnumerator(name: "ATA_PIO4_ONLY", value: 16)
!526 = !DIEnumerator(name: "ATA_SWDMA0", value: 1)
!527 = !DIEnumerator(name: "ATA_SWDMA1", value: 3)
!528 = !DIEnumerator(name: "ATA_SWDMA2", value: 7)
!529 = !DIEnumerator(name: "ATA_SWDMA2_ONLY", value: 4)
!530 = !DIEnumerator(name: "ATA_MWDMA0", value: 1)
!531 = !DIEnumerator(name: "ATA_MWDMA1", value: 3)
!532 = !DIEnumerator(name: "ATA_MWDMA2", value: 7)
!533 = !DIEnumerator(name: "ATA_MWDMA3", value: 15)
!534 = !DIEnumerator(name: "ATA_MWDMA4", value: 31)
!535 = !DIEnumerator(name: "ATA_MWDMA12_ONLY", value: 6)
!536 = !DIEnumerator(name: "ATA_MWDMA2_ONLY", value: 4)
!537 = !DIEnumerator(name: "ATA_UDMA0", value: 1)
!538 = !DIEnumerator(name: "ATA_UDMA1", value: 3)
!539 = !DIEnumerator(name: "ATA_UDMA2", value: 7)
!540 = !DIEnumerator(name: "ATA_UDMA3", value: 15)
!541 = !DIEnumerator(name: "ATA_UDMA4", value: 31)
!542 = !DIEnumerator(name: "ATA_UDMA5", value: 63)
!543 = !DIEnumerator(name: "ATA_UDMA6", value: 127)
!544 = !DIEnumerator(name: "ATA_UDMA7", value: 255)
!545 = !DIEnumerator(name: "ATA_UDMA24_ONLY", value: 20)
!546 = !DIEnumerator(name: "ATA_UDMA_MASK_40C", value: 7)
!547 = !DIEnumerator(name: "ATA_PRD_SZ", value: 8)
!548 = !DIEnumerator(name: "ATA_PRD_TBL_SZ", value: 2048)
!549 = !DIEnumerator(name: "ATA_PRD_EOT", value: -2147483648)
!550 = !DIEnumerator(name: "ATA_DMA_TABLE_OFS", value: 4)
!551 = !DIEnumerator(name: "ATA_DMA_STATUS", value: 2)
!552 = !DIEnumerator(name: "ATA_DMA_CMD", value: 0)
!553 = !DIEnumerator(name: "ATA_DMA_WR", value: 8)
!554 = !DIEnumerator(name: "ATA_DMA_START", value: 1)
!555 = !DIEnumerator(name: "ATA_DMA_INTR", value: 4)
!556 = !DIEnumerator(name: "ATA_DMA_ERR", value: 2)
!557 = !DIEnumerator(name: "ATA_DMA_ACTIVE", value: 1)
!558 = !DIEnumerator(name: "ATA_HOB", value: 128)
!559 = !DIEnumerator(name: "ATA_NIEN", value: 2)
!560 = !DIEnumerator(name: "ATA_LBA", value: 64)
!561 = !DIEnumerator(name: "ATA_DEV1", value: 16)
!562 = !DIEnumerator(name: "ATA_DEVICE_OBS", value: 160)
!563 = !DIEnumerator(name: "ATA_DEVCTL_OBS", value: 8)
!564 = !DIEnumerator(name: "ATA_BUSY", value: 128)
!565 = !DIEnumerator(name: "ATA_DRDY", value: 64)
!566 = !DIEnumerator(name: "ATA_DF", value: 32)
!567 = !DIEnumerator(name: "ATA_DSC", value: 16)
!568 = !DIEnumerator(name: "ATA_DRQ", value: 8)
!569 = !DIEnumerator(name: "ATA_CORR", value: 4)
!570 = !DIEnumerator(name: "ATA_SENSE", value: 2)
!571 = !DIEnumerator(name: "ATA_ERR", value: 1)
!572 = !DIEnumerator(name: "ATA_SRST", value: 4)
!573 = !DIEnumerator(name: "ATA_ICRC", value: 128)
!574 = !DIEnumerator(name: "ATA_BBK", value: 128)
!575 = !DIEnumerator(name: "ATA_UNC", value: 64)
!576 = !DIEnumerator(name: "ATA_MC", value: 32)
!577 = !DIEnumerator(name: "ATA_IDNF", value: 16)
!578 = !DIEnumerator(name: "ATA_MCR", value: 8)
!579 = !DIEnumerator(name: "ATA_ABORTED", value: 4)
!580 = !DIEnumerator(name: "ATA_TRK0NF", value: 2)
!581 = !DIEnumerator(name: "ATA_AMNF", value: 1)
!582 = !DIEnumerator(name: "ATAPI_LFS", value: 240)
!583 = !DIEnumerator(name: "ATAPI_EOM", value: 2)
!584 = !DIEnumerator(name: "ATAPI_ILI", value: 1)
!585 = !DIEnumerator(name: "ATAPI_IO", value: 2)
!586 = !DIEnumerator(name: "ATAPI_COD", value: 1)
!587 = !DIEnumerator(name: "ATA_REG_DATA", value: 0)
!588 = !DIEnumerator(name: "ATA_REG_ERR", value: 1)
!589 = !DIEnumerator(name: "ATA_REG_NSECT", value: 2)
!590 = !DIEnumerator(name: "ATA_REG_LBAL", value: 3)
!591 = !DIEnumerator(name: "ATA_REG_LBAM", value: 4)
!592 = !DIEnumerator(name: "ATA_REG_LBAH", value: 5)
!593 = !DIEnumerator(name: "ATA_REG_DEVICE", value: 6)
!594 = !DIEnumerator(name: "ATA_REG_STATUS", value: 7)
!595 = !DIEnumerator(name: "ATA_REG_FEATURE", value: 1)
!596 = !DIEnumerator(name: "ATA_REG_CMD", value: 7)
!597 = !DIEnumerator(name: "ATA_REG_BYTEL", value: 4)
!598 = !DIEnumerator(name: "ATA_REG_BYTEH", value: 5)
!599 = !DIEnumerator(name: "ATA_REG_DEVSEL", value: 6)
!600 = !DIEnumerator(name: "ATA_REG_IRQ", value: 2)
!601 = !DIEnumerator(name: "ATA_CMD_DEV_RESET", value: 8)
!602 = !DIEnumerator(name: "ATA_CMD_CHK_POWER", value: 229)
!603 = !DIEnumerator(name: "ATA_CMD_STANDBY", value: 226)
!604 = !DIEnumerator(name: "ATA_CMD_IDLE", value: 227)
!605 = !DIEnumerator(name: "ATA_CMD_EDD", value: 144)
!606 = !DIEnumerator(name: "ATA_CMD_DOWNLOAD_MICRO", value: 146)
!607 = !DIEnumerator(name: "ATA_CMD_DOWNLOAD_MICRO_DMA", value: 147)
!608 = !DIEnumerator(name: "ATA_CMD_NOP", value: 0)
!609 = !DIEnumerator(name: "ATA_CMD_FLUSH", value: 231)
!610 = !DIEnumerator(name: "ATA_CMD_FLUSH_EXT", value: 234)
!611 = !DIEnumerator(name: "ATA_CMD_ID_ATA", value: 236)
!612 = !DIEnumerator(name: "ATA_CMD_ID_ATAPI", value: 161)
!613 = !DIEnumerator(name: "ATA_CMD_SERVICE", value: 162)
!614 = !DIEnumerator(name: "ATA_CMD_READ", value: 200)
!615 = !DIEnumerator(name: "ATA_CMD_READ_EXT", value: 37)
!616 = !DIEnumerator(name: "ATA_CMD_READ_QUEUED", value: 38)
!617 = !DIEnumerator(name: "ATA_CMD_READ_STREAM_EXT", value: 43)
!618 = !DIEnumerator(name: "ATA_CMD_READ_STREAM_DMA_EXT", value: 42)
!619 = !DIEnumerator(name: "ATA_CMD_WRITE", value: 202)
!620 = !DIEnumerator(name: "ATA_CMD_WRITE_EXT", value: 53)
!621 = !DIEnumerator(name: "ATA_CMD_WRITE_QUEUED", value: 54)
!622 = !DIEnumerator(name: "ATA_CMD_WRITE_STREAM_EXT", value: 59)
!623 = !DIEnumerator(name: "ATA_CMD_WRITE_STREAM_DMA_EXT", value: 58)
!624 = !DIEnumerator(name: "ATA_CMD_WRITE_FUA_EXT", value: 61)
!625 = !DIEnumerator(name: "ATA_CMD_WRITE_QUEUED_FUA_EXT", value: 62)
!626 = !DIEnumerator(name: "ATA_CMD_FPDMA_READ", value: 96)
!627 = !DIEnumerator(name: "ATA_CMD_FPDMA_WRITE", value: 97)
!628 = !DIEnumerator(name: "ATA_CMD_NCQ_NON_DATA", value: 99)
!629 = !DIEnumerator(name: "ATA_CMD_FPDMA_SEND", value: 100)
!630 = !DIEnumerator(name: "ATA_CMD_FPDMA_RECV", value: 101)
!631 = !DIEnumerator(name: "ATA_CMD_PIO_READ", value: 32)
!632 = !DIEnumerator(name: "ATA_CMD_PIO_READ_EXT", value: 36)
!633 = !DIEnumerator(name: "ATA_CMD_PIO_WRITE", value: 48)
!634 = !DIEnumerator(name: "ATA_CMD_PIO_WRITE_EXT", value: 52)
!635 = !DIEnumerator(name: "ATA_CMD_READ_MULTI", value: 196)
!636 = !DIEnumerator(name: "ATA_CMD_READ_MULTI_EXT", value: 41)
!637 = !DIEnumerator(name: "ATA_CMD_WRITE_MULTI", value: 197)
!638 = !DIEnumerator(name: "ATA_CMD_WRITE_MULTI_EXT", value: 57)
!639 = !DIEnumerator(name: "ATA_CMD_WRITE_MULTI_FUA_EXT", value: 206)
!640 = !DIEnumerator(name: "ATA_CMD_SET_FEATURES", value: 239)
!641 = !DIEnumerator(name: "ATA_CMD_SET_MULTI", value: 198)
!642 = !DIEnumerator(name: "ATA_CMD_PACKET", value: 160)
!643 = !DIEnumerator(name: "ATA_CMD_VERIFY", value: 64)
!644 = !DIEnumerator(name: "ATA_CMD_VERIFY_EXT", value: 66)
!645 = !DIEnumerator(name: "ATA_CMD_WRITE_UNCORR_EXT", value: 69)
!646 = !DIEnumerator(name: "ATA_CMD_STANDBYNOW1", value: 224)
!647 = !DIEnumerator(name: "ATA_CMD_IDLEIMMEDIATE", value: 225)
!648 = !DIEnumerator(name: "ATA_CMD_SLEEP", value: 230)
!649 = !DIEnumerator(name: "ATA_CMD_INIT_DEV_PARAMS", value: 145)
!650 = !DIEnumerator(name: "ATA_CMD_READ_NATIVE_MAX", value: 248)
!651 = !DIEnumerator(name: "ATA_CMD_READ_NATIVE_MAX_EXT", value: 39)
!652 = !DIEnumerator(name: "ATA_CMD_SET_MAX", value: 249)
!653 = !DIEnumerator(name: "ATA_CMD_SET_MAX_EXT", value: 55)
!654 = !DIEnumerator(name: "ATA_CMD_READ_LOG_EXT", value: 47)
!655 = !DIEnumerator(name: "ATA_CMD_WRITE_LOG_EXT", value: 63)
!656 = !DIEnumerator(name: "ATA_CMD_READ_LOG_DMA_EXT", value: 71)
!657 = !DIEnumerator(name: "ATA_CMD_WRITE_LOG_DMA_EXT", value: 87)
!658 = !DIEnumerator(name: "ATA_CMD_TRUSTED_NONDATA", value: 91)
!659 = !DIEnumerator(name: "ATA_CMD_TRUSTED_RCV", value: 92)
!660 = !DIEnumerator(name: "ATA_CMD_TRUSTED_RCV_DMA", value: 93)
!661 = !DIEnumerator(name: "ATA_CMD_TRUSTED_SND", value: 94)
!662 = !DIEnumerator(name: "ATA_CMD_TRUSTED_SND_DMA", value: 95)
!663 = !DIEnumerator(name: "ATA_CMD_PMP_READ", value: 228)
!664 = !DIEnumerator(name: "ATA_CMD_PMP_READ_DMA", value: 233)
!665 = !DIEnumerator(name: "ATA_CMD_PMP_WRITE", value: 232)
!666 = !DIEnumerator(name: "ATA_CMD_PMP_WRITE_DMA", value: 235)
!667 = !DIEnumerator(name: "ATA_CMD_CONF_OVERLAY", value: 177)
!668 = !DIEnumerator(name: "ATA_CMD_SEC_SET_PASS", value: 241)
!669 = !DIEnumerator(name: "ATA_CMD_SEC_UNLOCK", value: 242)
!670 = !DIEnumerator(name: "ATA_CMD_SEC_ERASE_PREP", value: 243)
!671 = !DIEnumerator(name: "ATA_CMD_SEC_ERASE_UNIT", value: 244)
!672 = !DIEnumerator(name: "ATA_CMD_SEC_FREEZE_LOCK", value: 245)
!673 = !DIEnumerator(name: "ATA_CMD_SEC_DISABLE_PASS", value: 246)
!674 = !DIEnumerator(name: "ATA_CMD_CONFIG_STREAM", value: 81)
!675 = !DIEnumerator(name: "ATA_CMD_SMART", value: 176)
!676 = !DIEnumerator(name: "ATA_CMD_MEDIA_LOCK", value: 222)
!677 = !DIEnumerator(name: "ATA_CMD_MEDIA_UNLOCK", value: 223)
!678 = !DIEnumerator(name: "ATA_CMD_DSM", value: 6)
!679 = !DIEnumerator(name: "ATA_CMD_CHK_MED_CRD_TYP", value: 209)
!680 = !DIEnumerator(name: "ATA_CMD_CFA_REQ_EXT_ERR", value: 3)
!681 = !DIEnumerator(name: "ATA_CMD_CFA_WRITE_NE", value: 56)
!682 = !DIEnumerator(name: "ATA_CMD_CFA_TRANS_SECT", value: 135)
!683 = !DIEnumerator(name: "ATA_CMD_CFA_ERASE", value: 192)
!684 = !DIEnumerator(name: "ATA_CMD_CFA_WRITE_MULT_NE", value: 205)
!685 = !DIEnumerator(name: "ATA_CMD_REQ_SENSE_DATA", value: 11)
!686 = !DIEnumerator(name: "ATA_CMD_SANITIZE_DEVICE", value: 180)
!687 = !DIEnumerator(name: "ATA_CMD_ZAC_MGMT_IN", value: 74)
!688 = !DIEnumerator(name: "ATA_CMD_ZAC_MGMT_OUT", value: 159)
!689 = !DIEnumerator(name: "ATA_CMD_RESTORE", value: 16)
!690 = !DIEnumerator(name: "ATA_SUBCMD_FPDMA_RECV_RD_LOG_DMA_EXT", value: 1)
!691 = !DIEnumerator(name: "ATA_SUBCMD_FPDMA_RECV_ZAC_MGMT_IN", value: 2)
!692 = !DIEnumerator(name: "ATA_SUBCMD_FPDMA_SEND_DSM", value: 0)
!693 = !DIEnumerator(name: "ATA_SUBCMD_FPDMA_SEND_WR_LOG_DMA_EXT", value: 2)
!694 = !DIEnumerator(name: "ATA_SUBCMD_NCQ_NON_DATA_ABORT_QUEUE", value: 0)
!695 = !DIEnumerator(name: "ATA_SUBCMD_NCQ_NON_DATA_SET_FEATURES", value: 5)
!696 = !DIEnumerator(name: "ATA_SUBCMD_NCQ_NON_DATA_ZERO_EXT", value: 6)
!697 = !DIEnumerator(name: "ATA_SUBCMD_NCQ_NON_DATA_ZAC_MGMT_OUT", value: 7)
!698 = !DIEnumerator(name: "ATA_SUBCMD_ZAC_MGMT_IN_REPORT_ZONES", value: 0)
!699 = !DIEnumerator(name: "ATA_SUBCMD_ZAC_MGMT_OUT_CLOSE_ZONE", value: 1)
!700 = !DIEnumerator(name: "ATA_SUBCMD_ZAC_MGMT_OUT_FINISH_ZONE", value: 2)
!701 = !DIEnumerator(name: "ATA_SUBCMD_ZAC_MGMT_OUT_OPEN_ZONE", value: 3)
!702 = !DIEnumerator(name: "ATA_SUBCMD_ZAC_MGMT_OUT_RESET_WRITE_POINTER", value: 4)
!703 = !DIEnumerator(name: "ATA_LOG_DIRECTORY", value: 0)
!704 = !DIEnumerator(name: "ATA_LOG_SATA_NCQ", value: 16)
!705 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA", value: 18)
!706 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV", value: 19)
!707 = !DIEnumerator(name: "ATA_LOG_IDENTIFY_DEVICE", value: 48)
!708 = !DIEnumerator(name: "ATA_LOG_SECURITY", value: 6)
!709 = !DIEnumerator(name: "ATA_LOG_SATA_SETTINGS", value: 8)
!710 = !DIEnumerator(name: "ATA_LOG_ZONED_INFORMATION", value: 9)
!711 = !DIEnumerator(name: "ATA_LOG_DEVSLP_OFFSET", value: 48)
!712 = !DIEnumerator(name: "ATA_LOG_DEVSLP_SIZE", value: 8)
!713 = !DIEnumerator(name: "ATA_LOG_DEVSLP_MDAT", value: 0)
!714 = !DIEnumerator(name: "ATA_LOG_DEVSLP_MDAT_MASK", value: 31)
!715 = !DIEnumerator(name: "ATA_LOG_DEVSLP_DETO", value: 1)
!716 = !DIEnumerator(name: "ATA_LOG_DEVSLP_VALID", value: 7)
!717 = !DIEnumerator(name: "ATA_LOG_DEVSLP_VALID_MASK", value: 128)
!718 = !DIEnumerator(name: "ATA_LOG_NCQ_PRIO_OFFSET", value: 9)
!719 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_SUBCMDS_OFFSET", value: 0)
!720 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_SUBCMDS_DSM", value: 1)
!721 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_DSM_OFFSET", value: 4)
!722 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_DSM_TRIM", value: 1)
!723 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_RD_LOG_OFFSET", value: 8)
!724 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_RD_LOG_SUPPORTED", value: 1)
!725 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_WR_LOG_OFFSET", value: 12)
!726 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_WR_LOG_SUPPORTED", value: 1)
!727 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_ZAC_MGMT_OFFSET", value: 16)
!728 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_ZAC_MGMT_OUT_SUPPORTED", value: 1)
!729 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_ZAC_MGMT_IN_SUPPORTED", value: 2)
!730 = !DIEnumerator(name: "ATA_LOG_NCQ_SEND_RECV_SIZE", value: 20)
!731 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_SUBCMDS_OFFSET", value: 0)
!732 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_OFFSET", value: 0)
!733 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_NCQ", value: 1)
!734 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_ALL", value: 2)
!735 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_STREAMING", value: 4)
!736 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_NON_STREAMING", value: 8)
!737 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ABORT_SELECTED", value: 16)
!738 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ZAC_MGMT_OFFSET", value: 28)
!739 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_ZAC_MGMT_OUT", value: 1)
!740 = !DIEnumerator(name: "ATA_LOG_NCQ_NON_DATA_SIZE", value: 64)
!741 = !DIEnumerator(name: "ATA_CMD_READ_LONG", value: 34)
!742 = !DIEnumerator(name: "ATA_CMD_READ_LONG_ONCE", value: 35)
!743 = !DIEnumerator(name: "ATA_CMD_WRITE_LONG", value: 50)
!744 = !DIEnumerator(name: "ATA_CMD_WRITE_LONG_ONCE", value: 51)
!745 = !DIEnumerator(name: "SETFEATURES_XFER", value: 3)
!746 = !DIEnumerator(name: "XFER_UDMA_7", value: 71)
!747 = !DIEnumerator(name: "XFER_UDMA_6", value: 70)
!748 = !DIEnumerator(name: "XFER_UDMA_5", value: 69)
!749 = !DIEnumerator(name: "XFER_UDMA_4", value: 68)
!750 = !DIEnumerator(name: "XFER_UDMA_3", value: 67)
!751 = !DIEnumerator(name: "XFER_UDMA_2", value: 66)
!752 = !DIEnumerator(name: "XFER_UDMA_1", value: 65)
!753 = !DIEnumerator(name: "XFER_UDMA_0", value: 64)
!754 = !DIEnumerator(name: "XFER_MW_DMA_4", value: 36)
!755 = !DIEnumerator(name: "XFER_MW_DMA_3", value: 35)
!756 = !DIEnumerator(name: "XFER_MW_DMA_2", value: 34)
!757 = !DIEnumerator(name: "XFER_MW_DMA_1", value: 33)
!758 = !DIEnumerator(name: "XFER_MW_DMA_0", value: 32)
!759 = !DIEnumerator(name: "XFER_SW_DMA_2", value: 18)
!760 = !DIEnumerator(name: "XFER_SW_DMA_1", value: 17)
!761 = !DIEnumerator(name: "XFER_SW_DMA_0", value: 16)
!762 = !DIEnumerator(name: "XFER_PIO_6", value: 14)
!763 = !DIEnumerator(name: "XFER_PIO_5", value: 13)
!764 = !DIEnumerator(name: "XFER_PIO_4", value: 12)
!765 = !DIEnumerator(name: "XFER_PIO_3", value: 11)
!766 = !DIEnumerator(name: "XFER_PIO_2", value: 10)
!767 = !DIEnumerator(name: "XFER_PIO_1", value: 9)
!768 = !DIEnumerator(name: "XFER_PIO_0", value: 8)
!769 = !DIEnumerator(name: "XFER_PIO_SLOW", value: 0)
!770 = !DIEnumerator(name: "SETFEATURES_WC_ON", value: 2)
!771 = !DIEnumerator(name: "SETFEATURES_WC_OFF", value: 130)
!772 = !DIEnumerator(name: "SETFEATURES_RA_ON", value: 170)
!773 = !DIEnumerator(name: "SETFEATURES_RA_OFF", value: 85)
!774 = !DIEnumerator(name: "SETFEATURES_AAM_ON", value: 66)
!775 = !DIEnumerator(name: "SETFEATURES_AAM_OFF", value: 194)
!776 = !DIEnumerator(name: "SETFEATURES_SPINUP", value: 7)
!777 = !DIEnumerator(name: "SETFEATURES_SPINUP_TIMEOUT", value: 30000)
!778 = !DIEnumerator(name: "SETFEATURES_SATA_ENABLE", value: 16)
!779 = !DIEnumerator(name: "SETFEATURES_SATA_DISABLE", value: 144)
!780 = !DIEnumerator(name: "SATA_FPDMA_OFFSET", value: 1)
!781 = !DIEnumerator(name: "SATA_FPDMA_AA", value: 2)
!782 = !DIEnumerator(name: "SATA_DIPM", value: 3)
!783 = !DIEnumerator(name: "SATA_FPDMA_IN_ORDER", value: 4)
!784 = !DIEnumerator(name: "SATA_AN", value: 5)
!785 = !DIEnumerator(name: "SATA_SSP", value: 6)
!786 = !DIEnumerator(name: "SATA_DEVSLP", value: 9)
!787 = !DIEnumerator(name: "SETFEATURE_SENSE_DATA", value: 195)
!788 = !DIEnumerator(name: "ATA_SET_MAX_ADDR", value: 0)
!789 = !DIEnumerator(name: "ATA_SET_MAX_PASSWD", value: 1)
!790 = !DIEnumerator(name: "ATA_SET_MAX_LOCK", value: 2)
!791 = !DIEnumerator(name: "ATA_SET_MAX_UNLOCK", value: 3)
!792 = !DIEnumerator(name: "ATA_SET_MAX_FREEZE_LOCK", value: 4)
!793 = !DIEnumerator(name: "ATA_SET_MAX_PASSWD_DMA", value: 5)
!794 = !DIEnumerator(name: "ATA_SET_MAX_UNLOCK_DMA", value: 6)
!795 = !DIEnumerator(name: "ATA_DCO_RESTORE", value: 192)
!796 = !DIEnumerator(name: "ATA_DCO_FREEZE_LOCK", value: 193)
!797 = !DIEnumerator(name: "ATA_DCO_IDENTIFY", value: 194)
!798 = !DIEnumerator(name: "ATA_DCO_SET", value: 195)
!799 = !DIEnumerator(name: "ATA_SMART_ENABLE", value: 216)
!800 = !DIEnumerator(name: "ATA_SMART_READ_VALUES", value: 208)
!801 = !DIEnumerator(name: "ATA_SMART_READ_THRESHOLDS", value: 209)
!802 = !DIEnumerator(name: "ATA_DSM_TRIM", value: 1)
!803 = !DIEnumerator(name: "ATA_SMART_LBAM_PASS", value: 79)
!804 = !DIEnumerator(name: "ATA_SMART_LBAH_PASS", value: 194)
!805 = !DIEnumerator(name: "ATAPI_PKT_DMA", value: 1)
!806 = !DIEnumerator(name: "ATAPI_DMADIR", value: 4)
!807 = !DIEnumerator(name: "ATAPI_CDB_LEN", value: 16)
!808 = !DIEnumerator(name: "SATA_PMP_MAX_PORTS", value: 15)
!809 = !DIEnumerator(name: "SATA_PMP_CTRL_PORT", value: 15)
!810 = !DIEnumerator(name: "SATA_PMP_GSCR_DWORDS", value: 128)
!811 = !DIEnumerator(name: "SATA_PMP_GSCR_PROD_ID", value: 0)
!812 = !DIEnumerator(name: "SATA_PMP_GSCR_REV", value: 1)
!813 = !DIEnumerator(name: "SATA_PMP_GSCR_PORT_INFO", value: 2)
!814 = !DIEnumerator(name: "SATA_PMP_GSCR_ERROR", value: 32)
!815 = !DIEnumerator(name: "SATA_PMP_GSCR_ERROR_EN", value: 33)
!816 = !DIEnumerator(name: "SATA_PMP_GSCR_FEAT", value: 64)
!817 = !DIEnumerator(name: "SATA_PMP_GSCR_FEAT_EN", value: 96)
!818 = !DIEnumerator(name: "SATA_PMP_PSCR_STATUS", value: 0)
!819 = !DIEnumerator(name: "SATA_PMP_PSCR_ERROR", value: 1)
!820 = !DIEnumerator(name: "SATA_PMP_PSCR_CONTROL", value: 2)
!821 = !DIEnumerator(name: "SATA_PMP_FEAT_BIST", value: 1)
!822 = !DIEnumerator(name: "SATA_PMP_FEAT_PMREQ", value: 2)
!823 = !DIEnumerator(name: "SATA_PMP_FEAT_DYNSSC", value: 4)
!824 = !DIEnumerator(name: "SATA_PMP_FEAT_NOTIFY", value: 8)
!825 = !DIEnumerator(name: "ATA_CBL_NONE", value: 0)
!826 = !DIEnumerator(name: "ATA_CBL_PATA40", value: 1)
!827 = !DIEnumerator(name: "ATA_CBL_PATA80", value: 2)
!828 = !DIEnumerator(name: "ATA_CBL_PATA40_SHORT", value: 3)
!829 = !DIEnumerator(name: "ATA_CBL_PATA_UNK", value: 4)
!830 = !DIEnumerator(name: "ATA_CBL_PATA_IGN", value: 5)
!831 = !DIEnumerator(name: "ATA_CBL_SATA", value: 6)
!832 = !DIEnumerator(name: "SCR_STATUS", value: 0)
!833 = !DIEnumerator(name: "SCR_ERROR", value: 1)
!834 = !DIEnumerator(name: "SCR_CONTROL", value: 2)
!835 = !DIEnumerator(name: "SCR_ACTIVE", value: 3)
!836 = !DIEnumerator(name: "SCR_NOTIFICATION", value: 4)
!837 = !DIEnumerator(name: "SERR_DATA_RECOVERED", value: 1)
!838 = !DIEnumerator(name: "SERR_COMM_RECOVERED", value: 2)
!839 = !DIEnumerator(name: "SERR_DATA", value: 256)
!840 = !DIEnumerator(name: "SERR_PERSISTENT", value: 512)
!841 = !DIEnumerator(name: "SERR_PROTOCOL", value: 1024)
!842 = !DIEnumerator(name: "SERR_INTERNAL", value: 2048)
!843 = !DIEnumerator(name: "SERR_PHYRDY_CHG", value: 65536)
!844 = !DIEnumerator(name: "SERR_PHY_INT_ERR", value: 131072)
!845 = !DIEnumerator(name: "SERR_COMM_WAKE", value: 262144)
!846 = !DIEnumerator(name: "SERR_10B_8B_ERR", value: 524288)
!847 = !DIEnumerator(name: "SERR_DISPARITY", value: 1048576)
!848 = !DIEnumerator(name: "SERR_CRC", value: 2097152)
!849 = !DIEnumerator(name: "SERR_HANDSHAKE", value: 4194304)
!850 = !DIEnumerator(name: "SERR_LINK_SEQ_ERR", value: 8388608)
!851 = !DIEnumerator(name: "SERR_TRANS_ST_ERROR", value: 16777216)
!852 = !DIEnumerator(name: "SERR_UNRECOG_FIS", value: 33554432)
!853 = !DIEnumerator(name: "SERR_DEV_XCHG", value: 67108864)
!854 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "req_opf", file: !855, line: 336, baseType: !7, size: 32, elements: !856)
!855 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!856 = !{!857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874}
!857 = !DIEnumerator(name: "REQ_OP_READ", value: 0, isUnsigned: true)
!858 = !DIEnumerator(name: "REQ_OP_WRITE", value: 1, isUnsigned: true)
!859 = !DIEnumerator(name: "REQ_OP_FLUSH", value: 2, isUnsigned: true)
!860 = !DIEnumerator(name: "REQ_OP_DISCARD", value: 3, isUnsigned: true)
!861 = !DIEnumerator(name: "REQ_OP_SECURE_ERASE", value: 5, isUnsigned: true)
!862 = !DIEnumerator(name: "REQ_OP_WRITE_SAME", value: 7, isUnsigned: true)
!863 = !DIEnumerator(name: "REQ_OP_WRITE_ZEROES", value: 9, isUnsigned: true)
!864 = !DIEnumerator(name: "REQ_OP_ZONE_OPEN", value: 10, isUnsigned: true)
!865 = !DIEnumerator(name: "REQ_OP_ZONE_CLOSE", value: 11, isUnsigned: true)
!866 = !DIEnumerator(name: "REQ_OP_ZONE_FINISH", value: 12, isUnsigned: true)
!867 = !DIEnumerator(name: "REQ_OP_ZONE_APPEND", value: 13, isUnsigned: true)
!868 = !DIEnumerator(name: "REQ_OP_ZONE_RESET", value: 15, isUnsigned: true)
!869 = !DIEnumerator(name: "REQ_OP_ZONE_RESET_ALL", value: 17, isUnsigned: true)
!870 = !DIEnumerator(name: "REQ_OP_SCSI_IN", value: 32, isUnsigned: true)
!871 = !DIEnumerator(name: "REQ_OP_SCSI_OUT", value: 33, isUnsigned: true)
!872 = !DIEnumerator(name: "REQ_OP_DRV_IN", value: 34, isUnsigned: true)
!873 = !DIEnumerator(name: "REQ_OP_DRV_OUT", value: 35, isUnsigned: true)
!874 = !DIEnumerator(name: "REQ_OP_LAST", value: 36, isUnsigned: true)
!875 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !419, line: 444, baseType: !7, size: 32, elements: !876)
!876 = !{!877, !878, !879}
!877 = !DIEnumerator(name: "BLK_MQ_REQ_NOWAIT", value: 1, isUnsigned: true)
!878 = !DIEnumerator(name: "BLK_MQ_REQ_RESERVED", value: 2, isUnsigned: true)
!879 = !DIEnumerator(name: "BLK_MQ_REQ_PREEMPT", value: 8, isUnsigned: true)
!880 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_data_direction", file: !881, line: 5, baseType: !7, size: 32, elements: !882)
!881 = !DIFile(filename: "./include/linux/dma-direction.h", directory: "/home/lizy2001/genbc/linux")
!882 = !{!883, !884, !885, !886}
!883 = !DIEnumerator(name: "DMA_BIDIRECTIONAL", value: 0, isUnsigned: true)
!884 = !DIEnumerator(name: "DMA_TO_DEVICE", value: 1, isUnsigned: true)
!885 = !DIEnumerator(name: "DMA_FROM_DEVICE", value: 2, isUnsigned: true)
!886 = !DIEnumerator(name: "DMA_NONE", value: 3, isUnsigned: true)
!887 = !{!888, !890, !891, !898, !901, !7, !908, !911, !940, !175, !942, !443, !944, !945, !6220, !6222, !6223, !6225, !1995, !1560, !6226, !3151, !6227, !939, !1502, !6228, !1818, !1698, !1076, !987, !6230, !1011, !952, !6241, !6066, !1413}
!888 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !889, line: 148, baseType: !7)
!889 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 64)
!892 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !893)
!893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !894, line: 17, size: 64, elements: !895)
!894 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!895 = !{!896}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !893, file: !894, line: 17, baseType: !897, size: 64)
!897 = !DICompositeType(tag: DW_TAG_array_type, baseType: !898, size: 64, elements: !899)
!898 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!899 = !{!900}
!900 = !DISubrange(count: 1)
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 64)
!902 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !903)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64)
!904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !889, line: 178, size: 128, elements: !905)
!905 = !{!906, !907}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !904, file: !889, line: 179, baseType: !903, size: 64)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !904, file: !889, line: 179, baseType: !903, size: 64, offset: 64)
!908 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !909, line: 31, baseType: !910)
!909 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!910 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64)
!912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mtip_work", file: !207, line: 172, size: 384, elements: !913)
!913 = !{!914, !935, !936, !937}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !912, file: !207, line: 173, baseType: !915, size: 256)
!915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !158, line: 102, size: 256, elements: !916)
!916 = !{!917, !928, !929}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !915, file: !158, line: 103, baseType: !918, size: 64)
!918 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !919, line: 13, baseType: !920)
!919 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!920 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !889, line: 175, baseType: !921)
!921 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !889, line: 173, size: 64, elements: !922)
!922 = !{!923}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !921, file: !889, line: 174, baseType: !924, size: 64)
!924 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !925, line: 22, baseType: !926)
!925 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!926 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !909, line: 30, baseType: !927)
!927 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !915, file: !158, line: 104, baseType: !904, size: 128, offset: 64)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !915, file: !158, line: 105, baseType: !930, size: 64, offset: 192)
!930 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !158, line: 21, baseType: !931)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64)
!932 = !DISubroutineType(types: !933)
!933 = !{null, !934}
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !912, file: !207, line: 174, baseType: !890, size: 64, offset: 256)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_binding", scope: !912, file: !207, line: 175, baseType: !443, size: 32, offset: 320)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "completed", scope: !912, file: !207, line: 176, baseType: !938, size: 32, offset: 352)
!938 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !925, line: 21, baseType: !939)
!939 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !909, line: 27, baseType: !7)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 64)
!941 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 64)
!943 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !443)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 64)
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64)
!946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "driver_data", file: !207, line: 423, size: 6976, elements: !947)
!947 = !{!948, !949, !950, !951, !5887, !6165, !6166, !6167, !6202, !6203, !6204, !6205, !6206, !6207, !6208, !6209, !6210, !6211, !6212, !6213, !6215, !6216, !6217, !6218, !6219}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "mmio", scope: !946, file: !207, line: 424, baseType: !890, size: 64)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !946, file: !207, line: 426, baseType: !443, size: 32, offset: 64)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "instance", scope: !946, file: !207, line: 428, baseType: !443, size: 32, offset: 96)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "disk", scope: !946, file: !207, line: 430, baseType: !952, size: 64, offset: 128)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 64)
!953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !954, line: 167, size: 8512, elements: !955)
!954 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!955 = !{!956, !957, !958, !959, !964, !966, !967, !5776, !5777, !5867, !5868, !5869, !5870, !5871, !5872, !5873, !5876, !5877, !5880, !5881, !5882, !5885}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !953, file: !954, line: 171, baseType: !443, size: 32)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !953, file: !954, line: 172, baseType: !443, size: 32, offset: 32)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !953, file: !954, line: 173, baseType: !443, size: 32, offset: 64)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !953, file: !954, line: 176, baseType: !960, size: 256, offset: 96)
!960 = !DICompositeType(tag: DW_TAG_array_type, baseType: !961, size: 256, elements: !962)
!961 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!962 = !{!963}
!963 = !DISubrange(count: 32)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !953, file: !954, line: 178, baseType: !965, size: 16, offset: 352)
!965 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !953, file: !954, line: 179, baseType: !965, size: 16, offset: 368)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !953, file: !954, line: 186, baseType: !968, size: 64, offset: 384)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64)
!969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !954, line: 149, size: 256, elements: !970)
!970 = !{!971, !980, !981, !5774}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !969, file: !954, line: 150, baseType: !972, size: 128, align: 64)
!972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !889, line: 216, size: 128, align: 64, elements: !973)
!973 = !{!974, !976}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !972, file: !889, line: 217, baseType: !975, size: 64)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !972, file: !889, line: 218, baseType: !977, size: 64, offset: 64)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 64)
!978 = !DISubroutineType(types: !979)
!979 = !{null, !975}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !969, file: !954, line: 151, baseType: !443, size: 32, offset: 128)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !969, file: !954, line: 152, baseType: !982, size: 64, offset: 192)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 64)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !954, line: 53, size: 6592, elements: !984)
!984 = !{!985, !988, !989, !990, !993, !1016, !5755, !5756, !5757, !5758, !5768}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !983, file: !954, line: 54, baseType: !986, size: 64)
!986 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !889, line: 125, baseType: !987)
!987 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !925, line: 23, baseType: !908)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !983, file: !954, line: 60, baseType: !986, size: 64, offset: 64)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !983, file: !954, line: 64, baseType: !898, size: 64, offset: 128)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !983, file: !954, line: 65, baseType: !991, size: 64, offset: 192)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64)
!992 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !954, line: 65, flags: DIFlagFwdDecl)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !983, file: !954, line: 66, baseType: !994, size: 128, offset: 256)
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !995, line: 105, size: 128, elements: !996)
!995 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!996 = !{!997, !998}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !994, file: !995, line: 110, baseType: !898, size: 64)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !994, file: !995, line: 118, baseType: !999, size: 64, offset: 64)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 64)
!1000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !995, line: 95, size: 448, elements: !1001)
!1001 = !{!1002, !1003, !1009, !1010, !1013, !1014, !1015}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1000, file: !995, line: 96, baseType: !918, size: 64)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1000, file: !995, line: 97, baseType: !1004, size: 64, offset: 64)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64)
!1005 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !995, line: 60, baseType: !1006)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{null, !1008}
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !1000, file: !995, line: 98, baseType: !1004, size: 64, offset: 128)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !1000, file: !995, line: 99, baseType: !1011, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1011 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !889, line: 30, baseType: !1012)
!1012 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !1000, file: !995, line: 100, baseType: !1011, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1000, file: !995, line: 101, baseType: !972, size: 128, align: 64, offset: 256)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1000, file: !995, line: 102, baseType: !1008, size: 64, offset: 384)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !983, file: !954, line: 68, baseType: !1017, size: 5568, offset: 384)
!1017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !25, line: 461, size: 5568, elements: !1018)
!1018 = !{!1019, !5221, !5222, !5225, !5226, !5277, !5368, !5369, !5370, !5371, !5372, !5381, !5475, !5488, !5682, !5683, !5687, !5689, !5690, !5691, !5695, !5701, !5702, !5705, !5706, !5707, !5708, !5709, !5710, !5711, !5743, !5744, !5745, !5748, !5751, !5752, !5753, !5754}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1017, file: !25, line: 462, baseType: !1020, size: 512)
!1020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !1021, line: 64, size: 512, elements: !1022)
!1021 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!1022 = !{!1023, !1026, !1027, !1029, !1089, !5088, !5215, !5216, !5217, !5218, !5219, !5220}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1020, file: !1021, line: 65, baseType: !1024, size: 64)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!1025 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !961)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1020, file: !1021, line: 66, baseType: !904, size: 128, offset: 64)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1020, file: !1021, line: 67, baseType: !1028, size: 64, offset: 192)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 64)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !1020, file: !1021, line: 68, baseType: !1030, size: 64, offset: 256)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !1021, line: 192, size: 704, elements: !1032)
!1032 = !{!1033, !1034, !1050, !1051}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1031, file: !1021, line: 193, baseType: !904, size: 128)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !1031, file: !1021, line: 194, baseType: !1035, offset: 128)
!1035 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !1036, line: 83, baseType: !1037)
!1036 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !1036, line: 71, elements: !1038)
!1038 = !{!1039}
!1039 = !DIDerivedType(tag: DW_TAG_member, scope: !1037, file: !1036, line: 72, baseType: !1040)
!1040 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1037, file: !1036, line: 72, elements: !1041)
!1041 = !{!1042}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !1040, file: !1036, line: 73, baseType: !1043)
!1043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !1036, line: 20, elements: !1044)
!1044 = !{!1045}
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1043, file: !1036, line: 21, baseType: !1046)
!1046 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !1047, line: 25, baseType: !1048)
!1047 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!1048 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1047, line: 25, elements: !1049)
!1049 = !{}
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1031, file: !1021, line: 195, baseType: !1020, size: 512, offset: 128)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !1031, file: !1021, line: 196, baseType: !1052, size: 64, offset: 640)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64)
!1053 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1054)
!1054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !1021, line: 156, size: 192, elements: !1055)
!1055 = !{!1056, !1061, !1066}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1054, file: !1021, line: 157, baseType: !1057, size: 64)
!1057 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1058)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 64)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{!443, !1030, !1028}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1054, file: !1021, line: 158, baseType: !1062, size: 64, offset: 64)
!1062 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1063)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64)
!1064 = !DISubroutineType(types: !1065)
!1065 = !{!1024, !1030, !1028}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !1054, file: !1021, line: 159, baseType: !1067, size: 64, offset: 128)
!1067 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1068)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{!443, !1030, !1028, !1071}
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64)
!1072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !1021, line: 148, size: 20736, elements: !1073)
!1073 = !{!1074, !1079, !1083, !1084, !1088}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !1072, file: !1021, line: 149, baseType: !1075, size: 192)
!1075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1076, size: 192, elements: !1077)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64)
!1077 = !{!1078}
!1078 = !DISubrange(count: 3)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !1072, file: !1021, line: 150, baseType: !1080, size: 4096, offset: 192)
!1080 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1076, size: 4096, elements: !1081)
!1081 = !{!1082}
!1082 = !DISubrange(count: 64)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !1072, file: !1021, line: 151, baseType: !443, size: 32, offset: 4288)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1072, file: !1021, line: 152, baseType: !1085, size: 16384, offset: 4320)
!1085 = !DICompositeType(tag: DW_TAG_array_type, baseType: !961, size: 16384, elements: !1086)
!1086 = !{!1087}
!1087 = !DISubrange(count: 2048)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !1072, file: !1021, line: 153, baseType: !443, size: 32, offset: 20704)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !1020, file: !1021, line: 69, baseType: !1090, size: 64, offset: 320)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 64)
!1091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !1021, line: 138, size: 448, elements: !1092)
!1092 = !{!1093, !1097, !1124, !1126, !5052, !5080, !5084}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1091, file: !1021, line: 139, baseType: !1094, size: 64)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{null, !1028}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !1091, file: !1021, line: 140, baseType: !1098, size: 64, offset: 64)
!1098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 64)
!1099 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1100)
!1100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !1101, line: 230, size: 128, elements: !1102)
!1101 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!1102 = !{!1103, !1117}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1100, file: !1101, line: 231, baseType: !1104, size: 64)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 64)
!1105 = !DISubroutineType(types: !1106)
!1106 = !{!1107, !1028, !1111, !1076}
!1107 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !889, line: 60, baseType: !1108)
!1108 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !1109, line: 73, baseType: !1110)
!1109 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!1110 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !1109, line: 15, baseType: !175)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !1101, line: 30, size: 128, elements: !1113)
!1113 = !{!1114, !1115}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1112, file: !1101, line: 31, baseType: !1024, size: 64)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1112, file: !1101, line: 32, baseType: !1116, size: 16, offset: 64)
!1116 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !889, line: 19, baseType: !965)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !1100, file: !1101, line: 232, baseType: !1118, size: 64, offset: 64)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 64)
!1119 = !DISubroutineType(types: !1120)
!1120 = !{!1107, !1028, !1111, !1024, !1121}
!1121 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !889, line: 55, baseType: !1122)
!1122 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !1109, line: 72, baseType: !1123)
!1123 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !1109, line: 16, baseType: !898)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !1091, file: !1021, line: 141, baseType: !1125, size: 64, offset: 128)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !1091, file: !1021, line: 142, baseType: !1127, size: 64, offset: 192)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64)
!1129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1130)
!1130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !1101, line: 84, size: 320, elements: !1131)
!1131 = !{!1132, !1133, !1137, !5049, !5050}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1130, file: !1101, line: 85, baseType: !1024, size: 64)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !1130, file: !1101, line: 86, baseType: !1134, size: 64, offset: 64)
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 64)
!1135 = !DISubroutineType(types: !1136)
!1136 = !{!1116, !1028, !1111, !443}
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !1130, file: !1101, line: 88, baseType: !1138, size: 64, offset: 128)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 64)
!1139 = !DISubroutineType(types: !1140)
!1140 = !{!1116, !1028, !1141, !443}
!1141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 64)
!1142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !1101, line: 168, size: 448, elements: !1143)
!1143 = !{!1144, !1145, !1146, !1147, !5044, !5045}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1142, file: !1101, line: 169, baseType: !1112, size: 128)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1142, file: !1101, line: 170, baseType: !1121, size: 64, offset: 128)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1142, file: !1101, line: 171, baseType: !890, size: 64, offset: 192)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1142, file: !1101, line: 172, baseType: !1148, size: 64, offset: 256)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 64)
!1149 = !DISubroutineType(types: !1150)
!1150 = !{!1107, !1151, !1028, !1141, !1076, !1313, !1121}
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 64)
!1152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !130, line: 916, size: 1856, align: 32, elements: !1153)
!1153 = !{!1154, !1164, !5009, !5010, !5011, !5012, !5013, !5014, !5015, !5016, !5017, !5018, !5027, !5028, !5037, !5038, !5039, !5040, !5041, !5042, !5043}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !1152, file: !130, line: 920, baseType: !1155, size: 128)
!1155 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1152, file: !130, line: 917, size: 128, elements: !1156)
!1156 = !{!1157, !1163}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !1155, file: !130, line: 918, baseType: !1158, size: 64)
!1158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !1159, line: 58, size: 64, elements: !1160)
!1159 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!1160 = !{!1161}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1158, file: !1159, line: 59, baseType: !1162, size: 64)
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 64)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !1155, file: !130, line: 919, baseType: !972, size: 128, align: 64)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !1152, file: !130, line: 921, baseType: !1165, size: 128, offset: 128)
!1165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !1166, line: 8, size: 128, elements: !1167)
!1166 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!1167 = !{!1168, !1172}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !1165, file: !1166, line: 9, baseType: !1169, size: 64)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 64)
!1170 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !1171, line: 18, flags: DIFlagFwdDecl)
!1171 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !1165, file: !1166, line: 10, baseType: !1173, size: 64, offset: 64)
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 64)
!1174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !1171, line: 89, size: 1536, elements: !1175)
!1175 = !{!1176, !1177, !1187, !1195, !1196, !1212, !4977, !4979, !4991, !4992, !4993, !4994, !4995, !5001, !5002, !5003}
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !1174, file: !1171, line: 91, baseType: !7, size: 32)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !1174, file: !1171, line: 92, baseType: !1178, size: 32, offset: 32)
!1178 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !1179, line: 277, baseType: !1180)
!1179 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!1180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !1179, line: 277, size: 32, elements: !1181)
!1181 = !{!1182}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1180, file: !1179, line: 277, baseType: !1183, size: 32)
!1183 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !1179, line: 70, baseType: !1184)
!1184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !1179, line: 65, size: 32, elements: !1185)
!1185 = !{!1186}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !1184, file: !1179, line: 66, baseType: !7, size: 32)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !1174, file: !1171, line: 93, baseType: !1188, size: 128, offset: 64)
!1188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !1189, line: 38, size: 128, elements: !1190)
!1189 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!1190 = !{!1191, !1193}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1188, file: !1189, line: 39, baseType: !1192, size: 64)
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !1188, file: !1189, line: 39, baseType: !1194, size: 64, offset: 64)
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 64)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !1174, file: !1171, line: 94, baseType: !1173, size: 64, offset: 192)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1174, file: !1171, line: 95, baseType: !1197, size: 128, offset: 256)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !1171, line: 47, size: 128, elements: !1198)
!1198 = !{!1199, !1208}
!1199 = !DIDerivedType(tag: DW_TAG_member, scope: !1197, file: !1171, line: 48, baseType: !1200, size: 64)
!1200 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1197, file: !1171, line: 48, size: 64, elements: !1201)
!1201 = !{!1202, !1207}
!1202 = !DIDerivedType(tag: DW_TAG_member, scope: !1200, file: !1171, line: 49, baseType: !1203, size: 64)
!1203 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1200, file: !1171, line: 49, size: 64, elements: !1204)
!1204 = !{!1205, !1206}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1203, file: !1171, line: 50, baseType: !938, size: 32)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1203, file: !1171, line: 50, baseType: !938, size: 32, offset: 32)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !1200, file: !1171, line: 52, baseType: !987, size: 64)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1197, file: !1171, line: 54, baseType: !1209, size: 64, offset: 64)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 64)
!1210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1211)
!1211 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !1174, file: !1171, line: 96, baseType: !1213, size: 64, offset: 384)
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 64)
!1214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !130, line: 610, size: 4224, elements: !1215)
!1215 = !{!1216, !1217, !1218, !1226, !1233, !1234, !1378, !4690, !4691, !4692, !4697, !4698, !4699, !4700, !4701, !4702, !4703, !4704, !4705, !4706, !4707, !4708, !4709, !4710, !4711, !4712, !4713, !4714, !4715, !4716, !4721, !4722, !4723, !4724, !4725, !4726, !4727, !4953, !4961, !4962, !4963, !4973, !4974, !4975, !4976}
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !1214, file: !130, line: 611, baseType: !1116, size: 16)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !1214, file: !130, line: 612, baseType: !965, size: 16, offset: 16)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !1214, file: !130, line: 613, baseType: !1219, size: 32, offset: 32)
!1219 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !1220, line: 23, baseType: !1221)
!1220 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1220, line: 21, size: 32, elements: !1222)
!1222 = !{!1223}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1221, file: !1220, line: 22, baseType: !1224, size: 32)
!1224 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !889, line: 32, baseType: !1225)
!1225 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !1109, line: 49, baseType: !7)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !1214, file: !130, line: 614, baseType: !1227, size: 32, offset: 64)
!1227 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !1220, line: 28, baseType: !1228)
!1228 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1220, line: 26, size: 32, elements: !1229)
!1229 = !{!1230}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1228, file: !1220, line: 27, baseType: !1231, size: 32)
!1231 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !889, line: 33, baseType: !1232)
!1232 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !1109, line: 50, baseType: !7)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !1214, file: !130, line: 615, baseType: !7, size: 32, offset: 96)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !1214, file: !130, line: 622, baseType: !1235, size: 64, offset: 128)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 64)
!1236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1237)
!1237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !130, line: 1864, size: 1536, align: 512, elements: !1238)
!1238 = !{!1239, !1243, !1256, !1260, !1266, !1270, !1274, !1278, !1282, !1286, !1290, !1291, !1297, !1301, !1325, !1354, !1358, !1364, !1369, !1373, !1374}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1237, file: !130, line: 1865, baseType: !1240, size: 64)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 64)
!1241 = !DISubroutineType(types: !1242)
!1242 = !{!1173, !1213, !1173, !7}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !1237, file: !130, line: 1866, baseType: !1244, size: 64, offset: 64)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 64)
!1245 = !DISubroutineType(types: !1246)
!1246 = !{!1024, !1173, !1213, !1247}
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 64)
!1248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !1249, line: 10, size: 128, elements: !1250)
!1249 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!1250 = !{!1251, !1255}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1248, file: !1249, line: 11, baseType: !1252, size: 64)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 64)
!1253 = !DISubroutineType(types: !1254)
!1254 = !{null, !890}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !1248, file: !1249, line: 12, baseType: !890, size: 64, offset: 64)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !1237, file: !130, line: 1867, baseType: !1257, size: 64, offset: 128)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 64)
!1258 = !DISubroutineType(types: !1259)
!1259 = !{!443, !1213, !443}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !1237, file: !130, line: 1868, baseType: !1261, size: 64, offset: 192)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 64)
!1262 = !DISubroutineType(types: !1263)
!1263 = !{!1264, !1213, !443}
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!1265 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !130, line: 581, flags: DIFlagFwdDecl)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !1237, file: !130, line: 1870, baseType: !1267, size: 64, offset: 256)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64)
!1268 = !DISubroutineType(types: !1269)
!1269 = !{!443, !1173, !1076, !443}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !1237, file: !130, line: 1872, baseType: !1271, size: 64, offset: 320)
!1271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1272, size: 64)
!1272 = !DISubroutineType(types: !1273)
!1273 = !{!443, !1213, !1173, !1116, !1011}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1237, file: !130, line: 1873, baseType: !1275, size: 64, offset: 384)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 64)
!1276 = !DISubroutineType(types: !1277)
!1277 = !{!443, !1173, !1213, !1173}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !1237, file: !130, line: 1874, baseType: !1279, size: 64, offset: 448)
!1279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 64)
!1280 = !DISubroutineType(types: !1281)
!1281 = !{!443, !1213, !1173}
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !1237, file: !130, line: 1875, baseType: !1283, size: 64, offset: 512)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 64)
!1284 = !DISubroutineType(types: !1285)
!1285 = !{!443, !1213, !1173, !1024}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !1237, file: !130, line: 1876, baseType: !1287, size: 64, offset: 576)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 64)
!1288 = !DISubroutineType(types: !1289)
!1289 = !{!443, !1213, !1173, !1116}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !1237, file: !130, line: 1877, baseType: !1279, size: 64, offset: 640)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !1237, file: !130, line: 1878, baseType: !1292, size: 64, offset: 704)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 64)
!1293 = !DISubroutineType(types: !1294)
!1294 = !{!443, !1213, !1173, !1116, !1295}
!1295 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !889, line: 16, baseType: !1296)
!1296 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !889, line: 13, baseType: !938)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !1237, file: !130, line: 1879, baseType: !1298, size: 64, offset: 768)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64)
!1299 = !DISubroutineType(types: !1300)
!1300 = !{!443, !1213, !1173, !1213, !1173, !7}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !1237, file: !130, line: 1881, baseType: !1302, size: 64, offset: 832)
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 64)
!1303 = !DISubroutineType(types: !1304)
!1304 = !{!443, !1173, !1305}
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64)
!1306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !130, line: 219, size: 640, elements: !1307)
!1307 = !{!1308, !1309, !1310, !1311, !1312, !1315, !1322, !1323, !1324}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !1306, file: !130, line: 220, baseType: !7, size: 32)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !1306, file: !130, line: 221, baseType: !1116, size: 16, offset: 32)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !1306, file: !130, line: 222, baseType: !1219, size: 32, offset: 64)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !1306, file: !130, line: 223, baseType: !1227, size: 32, offset: 96)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !1306, file: !130, line: 224, baseType: !1313, size: 64, offset: 128)
!1313 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !889, line: 46, baseType: !1314)
!1314 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !1109, line: 88, baseType: !927)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !1306, file: !130, line: 225, baseType: !1316, size: 128, offset: 192)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1317, line: 13, size: 128, elements: !1318)
!1317 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1318 = !{!1319, !1321}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1316, file: !1317, line: 14, baseType: !1320, size: 64)
!1320 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1317, line: 8, baseType: !926)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1316, file: !1317, line: 15, baseType: !175, size: 64, offset: 64)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !1306, file: !130, line: 226, baseType: !1316, size: 128, offset: 320)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !1306, file: !130, line: 227, baseType: !1316, size: 128, offset: 448)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !1306, file: !130, line: 234, baseType: !1151, size: 64, offset: 576)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !1237, file: !130, line: 1882, baseType: !1326, size: 64, offset: 896)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 64)
!1327 = !DISubroutineType(types: !1328)
!1328 = !{!443, !1329, !1331, !938, !7}
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 64)
!1330 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1165)
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 64)
!1332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !1333, line: 22, size: 1152, elements: !1334)
!1333 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!1334 = !{!1335, !1336, !1337, !1338, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !1332, file: !1333, line: 23, baseType: !938, size: 32)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1332, file: !1333, line: 24, baseType: !1116, size: 16, offset: 32)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !1332, file: !1333, line: 25, baseType: !7, size: 32, offset: 64)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !1332, file: !1333, line: 26, baseType: !1339, size: 32, offset: 96)
!1339 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !889, line: 104, baseType: !938)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1332, file: !1333, line: 27, baseType: !987, size: 64, offset: 128)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !1332, file: !1333, line: 28, baseType: !987, size: 64, offset: 192)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1332, file: !1333, line: 37, baseType: !987, size: 64, offset: 256)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1332, file: !1333, line: 38, baseType: !1295, size: 32, offset: 320)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !1332, file: !1333, line: 39, baseType: !1295, size: 32, offset: 352)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1332, file: !1333, line: 40, baseType: !1219, size: 32, offset: 384)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1332, file: !1333, line: 41, baseType: !1227, size: 32, offset: 416)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1332, file: !1333, line: 42, baseType: !1313, size: 64, offset: 448)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !1332, file: !1333, line: 43, baseType: !1316, size: 128, offset: 512)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !1332, file: !1333, line: 44, baseType: !1316, size: 128, offset: 640)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1332, file: !1333, line: 45, baseType: !1316, size: 128, offset: 768)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !1332, file: !1333, line: 46, baseType: !1316, size: 128, offset: 896)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1332, file: !1333, line: 47, baseType: !987, size: 64, offset: 1024)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !1332, file: !1333, line: 48, baseType: !987, size: 64, offset: 1088)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !1237, file: !130, line: 1883, baseType: !1355, size: 64, offset: 960)
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 64)
!1356 = !DISubroutineType(types: !1357)
!1357 = !{!1107, !1173, !1076, !1121}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !1237, file: !130, line: 1884, baseType: !1359, size: 64, offset: 1024)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 64)
!1360 = !DISubroutineType(types: !1361)
!1361 = !{!443, !1213, !1362, !987, !987}
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 64)
!1363 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !130, line: 50, flags: DIFlagFwdDecl)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !1237, file: !130, line: 1886, baseType: !1365, size: 64, offset: 1088)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 64)
!1366 = !DISubroutineType(types: !1367)
!1367 = !{!443, !1213, !1368, !443}
!1368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !1237, file: !130, line: 1887, baseType: !1370, size: 64, offset: 1152)
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 64)
!1371 = !DISubroutineType(types: !1372)
!1372 = !{!443, !1213, !1173, !1151, !7, !1116}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !1237, file: !130, line: 1890, baseType: !1287, size: 64, offset: 1216)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !1237, file: !130, line: 1891, baseType: !1375, size: 64, offset: 1280)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 64)
!1376 = !DISubroutineType(types: !1377)
!1377 = !{!443, !1213, !1264, !443}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !1214, file: !130, line: 623, baseType: !1379, size: 64, offset: 192)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 64)
!1380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !130, line: 1416, size: 9472, elements: !1381)
!1381 = !{!1382, !1383, !1384, !1385, !1386, !1387, !1437, !4304, !4386, !4469, !4473, !4474, !4475, !4476, !4477, !4478, !4479, !4480, !4485, !4489, !4490, !4491, !4492, !4495, !4496, !4497, !4538, !4564, !4565, !4566, !4567, !4568, !4569, !4572, !4573, !4580, !4581, !4582, !4583, !4584, !4643, !4644, !4659, !4660, !4661, !4662, !4663, !4664, !4665, !4666, !4681, !4682, !4683, !4684, !4685, !4686, !4687, !4688, !4689}
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !1380, file: !130, line: 1417, baseType: !904, size: 128)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !1380, file: !130, line: 1418, baseType: !1295, size: 32, offset: 128)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !1380, file: !130, line: 1419, baseType: !1211, size: 8, offset: 160)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !1380, file: !130, line: 1420, baseType: !898, size: 64, offset: 192)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !1380, file: !130, line: 1421, baseType: !1313, size: 64, offset: 256)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !1380, file: !130, line: 1422, baseType: !1388, size: 64, offset: 320)
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 64)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !130, line: 2228, size: 576, elements: !1390)
!1390 = !{!1391, !1392, !1393, !1400, !1404, !1408, !1412, !1416, !1417, !1427, !1430, !1431, !1432, !1434, !1435, !1436}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1389, file: !130, line: 2229, baseType: !1024, size: 64)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !1389, file: !130, line: 2230, baseType: !443, size: 32, offset: 64)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !1389, file: !130, line: 2238, baseType: !1394, size: 64, offset: 128)
!1394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1395, size: 64)
!1395 = !DISubroutineType(types: !1396)
!1396 = !{!443, !1397}
!1397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 64)
!1398 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !1399, line: 28, flags: DIFlagFwdDecl)
!1399 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !1389, file: !130, line: 2239, baseType: !1401, size: 64, offset: 192)
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1402, size: 64)
!1402 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1403)
!1403 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !130, line: 70, flags: DIFlagFwdDecl)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !1389, file: !130, line: 2240, baseType: !1405, size: 64, offset: 256)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 64)
!1406 = !DISubroutineType(types: !1407)
!1407 = !{!1173, !1388, !443, !1024, !890}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !1389, file: !130, line: 2242, baseType: !1409, size: 64, offset: 320)
!1409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 64)
!1410 = !DISubroutineType(types: !1411)
!1411 = !{null, !1379}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1389, file: !130, line: 2243, baseType: !1413, size: 64, offset: 384)
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 64)
!1414 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !1415, line: 189, flags: DIFlagFwdDecl)
!1415 = !DIFile(filename: "./include/linux/jump_label.h", directory: "/home/lizy2001/genbc/linux")
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1389, file: !130, line: 2244, baseType: !1388, size: 64, offset: 448)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !1389, file: !130, line: 2245, baseType: !1418, size: 64, offset: 512)
!1418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !889, line: 182, size: 64, elements: !1419)
!1419 = !{!1420}
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1418, file: !889, line: 183, baseType: !1421, size: 64)
!1421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1422, size: 64)
!1422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !889, line: 186, size: 128, elements: !1423)
!1423 = !{!1424, !1425}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1422, file: !889, line: 187, baseType: !1421, size: 64)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !1422, file: !889, line: 187, baseType: !1426, size: 64, offset: 64)
!1426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1421, size: 64)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !1389, file: !130, line: 2247, baseType: !1428, offset: 576)
!1428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !1429, line: 187, elements: !1049)
!1429 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !1389, file: !130, line: 2248, baseType: !1428, offset: 576)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !1389, file: !130, line: 2249, baseType: !1428, offset: 576)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !1389, file: !130, line: 2250, baseType: !1433, offset: 576)
!1433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1428, elements: !1077)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !1389, file: !130, line: 2252, baseType: !1428, offset: 576)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !1389, file: !130, line: 2253, baseType: !1428, offset: 576)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !1389, file: !130, line: 2254, baseType: !1428, offset: 576)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !1380, file: !130, line: 1423, baseType: !1438, size: 64, offset: 384)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64)
!1439 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1440)
!1440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !130, line: 1935, size: 1472, elements: !1441)
!1441 = !{!1442, !1446, !1450, !1451, !1455, !1475, !1479, !1480, !1481, !1485, !1489, !1490, !1491, !1492, !1498, !1503, !1504, !1553, !1554, !1555, !1556, !4288, !4303}
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !1440, file: !130, line: 1936, baseType: !1443, size: 64)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 64)
!1444 = !DISubroutineType(types: !1445)
!1445 = !{!1213, !1379}
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !1440, file: !130, line: 1937, baseType: !1447, size: 64, offset: 64)
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 64)
!1448 = !DISubroutineType(types: !1449)
!1449 = !{null, !1213}
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !1440, file: !130, line: 1938, baseType: !1447, size: 64, offset: 128)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !1440, file: !130, line: 1940, baseType: !1452, size: 64, offset: 192)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 64)
!1453 = !DISubroutineType(types: !1454)
!1454 = !{null, !1213, !443}
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !1440, file: !130, line: 1941, baseType: !1456, size: 64, offset: 256)
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 64)
!1457 = !DISubroutineType(types: !1458)
!1458 = !{!443, !1213, !1459}
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 64)
!1460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !6, line: 51, size: 320, elements: !1461)
!1461 = !{!1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_write", scope: !1460, file: !6, line: 52, baseType: !175, size: 64)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "pages_skipped", scope: !1460, file: !6, line: 54, baseType: !175, size: 64, offset: 64)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "range_start", scope: !1460, file: !6, line: 61, baseType: !1313, size: 64, offset: 128)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "range_end", scope: !1460, file: !6, line: 62, baseType: !1313, size: 64, offset: 192)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "sync_mode", scope: !1460, file: !6, line: 64, baseType: !5, size: 32, offset: 256)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "for_kupdate", scope: !1460, file: !6, line: 66, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "for_background", scope: !1460, file: !6, line: 67, baseType: !7, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_writepages", scope: !1460, file: !6, line: 68, baseType: !7, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "for_reclaim", scope: !1460, file: !6, line: 69, baseType: !7, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "range_cyclic", scope: !1460, file: !6, line: 70, baseType: !7, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "for_sync", scope: !1460, file: !6, line: 71, baseType: !7, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "no_cgroup_owner", scope: !1460, file: !6, line: 79, baseType: !7, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "punt_to_cgroup", scope: !1460, file: !6, line: 81, baseType: !7, size: 1, offset: 295, flags: DIFlagBitField, extraData: i64 288)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !1440, file: !130, line: 1942, baseType: !1476, size: 64, offset: 320)
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 64)
!1477 = !DISubroutineType(types: !1478)
!1478 = !{!443, !1213}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !1440, file: !130, line: 1943, baseType: !1447, size: 64, offset: 384)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !1440, file: !130, line: 1944, baseType: !1409, size: 64, offset: 448)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !1440, file: !130, line: 1945, baseType: !1482, size: 64, offset: 512)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 64)
!1483 = !DISubroutineType(types: !1484)
!1484 = !{!443, !1379, !443}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !1440, file: !130, line: 1946, baseType: !1486, size: 64, offset: 576)
!1486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1487, size: 64)
!1487 = !DISubroutineType(types: !1488)
!1488 = !{!443, !1379}
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !1440, file: !130, line: 1947, baseType: !1486, size: 64, offset: 640)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !1440, file: !130, line: 1948, baseType: !1486, size: 64, offset: 704)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !1440, file: !130, line: 1949, baseType: !1486, size: 64, offset: 768)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !1440, file: !130, line: 1950, baseType: !1493, size: 64, offset: 832)
!1493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1494, size: 64)
!1494 = !DISubroutineType(types: !1495)
!1495 = !{!443, !1173, !1496}
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 64)
!1497 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !130, line: 57, flags: DIFlagFwdDecl)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !1440, file: !130, line: 1951, baseType: !1499, size: 64, offset: 896)
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 64)
!1500 = !DISubroutineType(types: !1501)
!1501 = !{!443, !1379, !1502, !1076}
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 64)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !1440, file: !130, line: 1952, baseType: !1409, size: 64, offset: 960)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1440, file: !130, line: 1954, baseType: !1505, size: 64, offset: 1024)
!1505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1506, size: 64)
!1506 = !DISubroutineType(types: !1507)
!1507 = !{!443, !1508, !1173}
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 64)
!1509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !1510, line: 16, size: 896, elements: !1511)
!1510 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!1511 = !{!1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1526, !1548, !1549, !1552}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1509, file: !1510, line: 17, baseType: !1076, size: 64)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1509, file: !1510, line: 18, baseType: !1121, size: 64, offset: 64)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1509, file: !1510, line: 19, baseType: !1121, size: 64, offset: 128)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1509, file: !1510, line: 20, baseType: !1121, size: 64, offset: 192)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !1509, file: !1510, line: 21, baseType: !1121, size: 64, offset: 256)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1509, file: !1510, line: 22, baseType: !1313, size: 64, offset: 320)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !1509, file: !1510, line: 23, baseType: !1313, size: 64, offset: 384)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1509, file: !1510, line: 24, baseType: !1520, size: 192, offset: 448)
!1520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1521, line: 53, size: 192, elements: !1522)
!1521 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1522 = !{!1523, !1524, !1525}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1520, file: !1521, line: 54, baseType: !918, size: 64)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1520, file: !1521, line: 55, baseType: !1035, offset: 64)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1520, file: !1521, line: 59, baseType: !904, size: 128, offset: 64)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1509, file: !1510, line: 25, baseType: !1527, size: 64, offset: 640)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 64)
!1528 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1529)
!1529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !1510, line: 31, size: 256, elements: !1530)
!1530 = !{!1531, !1536, !1540, !1544}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1529, file: !1510, line: 32, baseType: !1532, size: 64)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 64)
!1533 = !DISubroutineType(types: !1534)
!1534 = !{!890, !1508, !1535}
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !1529, file: !1510, line: 33, baseType: !1537, size: 64, offset: 64)
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 64)
!1538 = !DISubroutineType(types: !1539)
!1539 = !{null, !1508, !890}
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1529, file: !1510, line: 34, baseType: !1541, size: 64, offset: 128)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 64)
!1542 = !DISubroutineType(types: !1543)
!1543 = !{!890, !1508, !890, !1535}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1529, file: !1510, line: 35, baseType: !1545, size: 64, offset: 192)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64)
!1546 = !DISubroutineType(types: !1547)
!1547 = !{!443, !1508, !890}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !1509, file: !1510, line: 26, baseType: !443, size: 32, offset: 704)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1509, file: !1510, line: 27, baseType: !1550, size: 64, offset: 768)
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 64)
!1551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1152)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1509, file: !1510, line: 28, baseType: !890, size: 64, offset: 832)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !1440, file: !130, line: 1955, baseType: !1505, size: 64, offset: 1088)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1440, file: !130, line: 1956, baseType: !1505, size: 64, offset: 1152)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !1440, file: !130, line: 1957, baseType: !1505, size: 64, offset: 1216)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !1440, file: !130, line: 1963, baseType: !1557, size: 64, offset: 1280)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 64)
!1558 = !DISubroutineType(types: !1559)
!1559 = !{!443, !1379, !1560, !888}
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 64)
!1561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !1562, line: 68, size: 512, align: 128, elements: !1563)
!1562 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!1563 = !{!1564, !1565, !4280, !4287}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1561, file: !1562, line: 69, baseType: !898, size: 64)
!1565 = !DIDerivedType(tag: DW_TAG_member, scope: !1561, file: !1562, line: 77, baseType: !1566, size: 320, offset: 64)
!1566 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1561, file: !1562, line: 77, size: 320, elements: !1567)
!1567 = !{!1568, !1991, !1996, !2024, !2032, !2038, !4231, !4279}
!1568 = !DIDerivedType(tag: DW_TAG_member, scope: !1566, file: !1562, line: 78, baseType: !1569, size: 320)
!1569 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1566, file: !1562, line: 78, size: 320, elements: !1570)
!1570 = !{!1571, !1572, !1989, !1990}
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1569, file: !1562, line: 84, baseType: !904, size: 128)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1569, file: !1562, line: 86, baseType: !1573, size: 64, offset: 128)
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 64)
!1574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !130, line: 451, size: 1216, align: 64, elements: !1575)
!1575 = !{!1576, !1577, !1584, !1585, !1590, !1605, !1614, !1615, !1616, !1617, !1982, !1983, !1986, !1987, !1988}
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1574, file: !130, line: 452, baseType: !1213, size: 64)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !1574, file: !130, line: 453, baseType: !1578, size: 128, offset: 64)
!1578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1579, line: 292, size: 128, elements: !1580)
!1579 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1580 = !{!1581, !1582, !1583}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1578, file: !1579, line: 293, baseType: !1035)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1578, file: !1579, line: 295, baseType: !888, size: 32)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1578, file: !1579, line: 296, baseType: !890, size: 64, offset: 64)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1574, file: !130, line: 454, baseType: !888, size: 32, offset: 192)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !1574, file: !130, line: 455, baseType: !1586, size: 32, offset: 224)
!1586 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !889, line: 168, baseType: !1587)
!1587 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !889, line: 166, size: 32, elements: !1588)
!1588 = !{!1589}
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !1587, file: !889, line: 167, baseType: !443, size: 32)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !1574, file: !130, line: 460, baseType: !1591, size: 128, offset: 256)
!1591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !1592, line: 125, size: 128, elements: !1593)
!1592 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!1593 = !{!1594, !1604}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1591, file: !1592, line: 126, baseType: !1595, size: 64)
!1595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !1592, line: 31, size: 64, elements: !1596)
!1596 = !{!1597}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1595, file: !1592, line: 32, baseType: !1598, size: 64)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 64)
!1599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !1592, line: 24, size: 192, align: 64, elements: !1600)
!1600 = !{!1601, !1602, !1603}
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !1599, file: !1592, line: 25, baseType: !898, size: 64)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !1599, file: !1592, line: 26, baseType: !1598, size: 64, offset: 64)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !1599, file: !1592, line: 27, baseType: !1598, size: 64, offset: 128)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1591, file: !1592, line: 127, baseType: !1598, size: 64, offset: 64)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !1574, file: !130, line: 461, baseType: !1606, size: 256, offset: 384)
!1606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1607, line: 35, size: 256, elements: !1608)
!1607 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1608 = !{!1609, !1610, !1611, !1613}
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1606, file: !1607, line: 36, baseType: !918, size: 64)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1606, file: !1607, line: 42, baseType: !918, size: 64, offset: 64)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1606, file: !1607, line: 46, baseType: !1612, offset: 128)
!1612 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !1036, line: 29, baseType: !1043)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1606, file: !1607, line: 47, baseType: !904, size: 128, offset: 128)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !1574, file: !130, line: 462, baseType: !898, size: 64, offset: 640)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !1574, file: !130, line: 463, baseType: !898, size: 64, offset: 704)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !1574, file: !130, line: 464, baseType: !898, size: 64, offset: 768)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !1574, file: !130, line: 465, baseType: !1618, size: 64, offset: 832)
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 64)
!1619 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1620)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !130, line: 367, size: 1408, elements: !1621)
!1621 = !{!1622, !1626, !1630, !1634, !1638, !1642, !1655, !1661, !1665, !1669, !1673, !1677, !1681, !1771, !1775, !1781, !1782, !1783, !1787, !1792, !1796, !1978}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !1620, file: !130, line: 368, baseType: !1623, size: 64)
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 64)
!1624 = !DISubroutineType(types: !1625)
!1625 = !{!443, !1560, !1459}
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !1620, file: !130, line: 369, baseType: !1627, size: 64, offset: 64)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 64)
!1628 = !DISubroutineType(types: !1629)
!1629 = !{!443, !1151, !1560}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !1620, file: !130, line: 372, baseType: !1631, size: 64, offset: 128)
!1631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1632, size: 64)
!1632 = !DISubroutineType(types: !1633)
!1633 = !{!443, !1573, !1459}
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !1620, file: !130, line: 375, baseType: !1635, size: 64, offset: 192)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64)
!1636 = !DISubroutineType(types: !1637)
!1637 = !{!443, !1560}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !1620, file: !130, line: 381, baseType: !1639, size: 64, offset: 256)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 64)
!1640 = !DISubroutineType(types: !1641)
!1641 = !{!443, !1151, !1573, !903, !7}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !1620, file: !130, line: 383, baseType: !1643, size: 64, offset: 320)
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1644, size: 64)
!1644 = !DISubroutineType(types: !1645)
!1645 = !{null, !1646}
!1646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1647, size: 64)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !1648, line: 795, size: 256, elements: !1649)
!1648 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!1649 = !{!1650, !1651, !1652, !1653, !1654}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1647, file: !1648, line: 796, baseType: !1151, size: 64)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1647, file: !1648, line: 797, baseType: !1573, size: 64, offset: 64)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !1647, file: !1648, line: 799, baseType: !898, size: 64, offset: 128)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !1647, file: !1648, line: 800, baseType: !7, size: 32, offset: 192)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !1647, file: !1648, line: 801, baseType: !7, size: 32, offset: 224)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !1620, file: !130, line: 385, baseType: !1656, size: 64, offset: 384)
!1656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 64)
!1657 = !DISubroutineType(types: !1658)
!1658 = !{!443, !1151, !1573, !1313, !7, !7, !1659, !1660}
!1659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 64)
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 64)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !1620, file: !130, line: 388, baseType: !1662, size: 64, offset: 448)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 64)
!1663 = !DISubroutineType(types: !1664)
!1664 = !{!443, !1151, !1573, !1313, !7, !7, !1560, !890}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !1620, file: !130, line: 393, baseType: !1666, size: 64, offset: 512)
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 64)
!1667 = !DISubroutineType(types: !1668)
!1668 = !{!986, !1573, !986}
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !1620, file: !130, line: 394, baseType: !1670, size: 64, offset: 576)
!1670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1671, size: 64)
!1671 = !DISubroutineType(types: !1672)
!1672 = !{null, !1560, !7, !7}
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !1620, file: !130, line: 395, baseType: !1674, size: 64, offset: 640)
!1674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1675, size: 64)
!1675 = !DISubroutineType(types: !1676)
!1676 = !{!443, !1560, !888}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !1620, file: !130, line: 396, baseType: !1678, size: 64, offset: 704)
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 64)
!1679 = !DISubroutineType(types: !1680)
!1680 = !{null, !1560}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !1620, file: !130, line: 397, baseType: !1682, size: 64, offset: 768)
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 64)
!1683 = !DISubroutineType(types: !1684)
!1684 = !{!1107, !1685, !1724}
!1685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1686, size: 64)
!1686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !130, line: 320, size: 384, elements: !1687)
!1687 = !{!1688, !1689, !1690, !1694, !1695, !1696, !1699, !1700}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1686, file: !130, line: 321, baseType: !1151, size: 64)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1686, file: !130, line: 326, baseType: !1313, size: 64, offset: 64)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1686, file: !130, line: 327, baseType: !1691, size: 64, offset: 128)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 64)
!1692 = !DISubroutineType(types: !1693)
!1693 = !{null, !1685, !175, !175}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1686, file: !130, line: 328, baseType: !890, size: 64, offset: 192)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1686, file: !130, line: 329, baseType: !443, size: 32, offset: 256)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1686, file: !130, line: 330, baseType: !1697, size: 16, offset: 288)
!1697 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !925, line: 19, baseType: !1698)
!1698 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !909, line: 24, baseType: !965)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1686, file: !130, line: 331, baseType: !1697, size: 16, offset: 304)
!1700 = !DIDerivedType(tag: DW_TAG_member, scope: !1686, file: !130, line: 332, baseType: !1701, size: 64, offset: 320)
!1701 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1686, file: !130, line: 332, size: 64, elements: !1702)
!1702 = !{!1703, !1704}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1701, file: !130, line: 333, baseType: !7, size: 32)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1701, file: !130, line: 334, baseType: !1705, size: 64)
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 64)
!1706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !1648, line: 569, size: 448, elements: !1707)
!1707 = !{!1708, !1709, !1710}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1706, file: !1648, line: 570, baseType: !1560, size: 64)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !1706, file: !1648, line: 571, baseType: !443, size: 32, offset: 64)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1706, file: !1648, line: 572, baseType: !1711, size: 320, offset: 128)
!1711 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !1712, line: 14, baseType: !1713)
!1712 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1712, line: 29, size: 320, elements: !1714)
!1714 = !{!1715, !1716, !1717, !1723}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1713, file: !1712, line: 30, baseType: !7, size: 32)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1713, file: !1712, line: 31, baseType: !890, size: 64, offset: 64)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1713, file: !1712, line: 32, baseType: !1718, size: 64, offset: 128)
!1718 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1712, line: 16, baseType: !1719)
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 64)
!1720 = !DISubroutineType(types: !1721)
!1721 = !{!443, !1722, !7, !443, !890}
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 64)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1713, file: !1712, line: 33, baseType: !904, size: 128, offset: 192)
!1724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1725, size: 64)
!1725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !1726, line: 29, size: 320, elements: !1727)
!1726 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1727 = !{!1728, !1729, !1730, !1731, !1762}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1725, file: !1726, line: 35, baseType: !7, size: 32)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !1725, file: !1726, line: 36, baseType: !1121, size: 64, offset: 64)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1725, file: !1726, line: 37, baseType: !1121, size: 64, offset: 128)
!1731 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1726, line: 38, baseType: !1732, size: 64, offset: 192)
!1732 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1725, file: !1726, line: 38, size: 64, elements: !1733)
!1733 = !{!1734, !1742, !1749, !1758}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !1732, file: !1726, line: 39, baseType: !1735, size: 64)
!1735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 64)
!1736 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1737)
!1737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !1738, line: 17, size: 128, elements: !1739)
!1738 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1739 = !{!1740, !1741}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1737, file: !1738, line: 19, baseType: !890, size: 64)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1737, file: !1738, line: 20, baseType: !1122, size: 64, offset: 64)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !1732, file: !1726, line: 40, baseType: !1743, size: 64)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 64)
!1744 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1745)
!1745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !1726, line: 15, size: 128, elements: !1746)
!1746 = !{!1747, !1748}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1745, file: !1726, line: 16, baseType: !890, size: 64)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1745, file: !1726, line: 17, baseType: !1121, size: 64, offset: 64)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !1732, file: !1726, line: 41, baseType: !1750, size: 64)
!1750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1751, size: 64)
!1751 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1752)
!1752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !1753, line: 31, size: 128, elements: !1754)
!1753 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!1754 = !{!1755, !1756, !1757}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !1752, file: !1753, line: 32, baseType: !1560, size: 64)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !1752, file: !1753, line: 33, baseType: !7, size: 32, offset: 64)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !1752, file: !1753, line: 34, baseType: !7, size: 32, offset: 96)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !1732, file: !1726, line: 42, baseType: !1759, size: 64)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 64)
!1760 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1761, line: 53, flags: DIFlagFwdDecl)
!1761 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1762 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1726, line: 44, baseType: !1763, size: 64, offset: 256)
!1763 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1725, file: !1726, line: 44, size: 64, elements: !1764)
!1764 = !{!1765, !1766}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !1763, file: !1726, line: 45, baseType: !898, size: 64)
!1766 = !DIDerivedType(tag: DW_TAG_member, scope: !1763, file: !1726, line: 46, baseType: !1767, size: 64)
!1767 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1763, file: !1726, line: 46, size: 64, elements: !1768)
!1768 = !{!1769, !1770}
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1767, file: !1726, line: 47, baseType: !7, size: 32)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !1767, file: !1726, line: 48, baseType: !7, size: 32, offset: 32)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !1620, file: !130, line: 402, baseType: !1772, size: 64, offset: 832)
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 64)
!1773 = !DISubroutineType(types: !1774)
!1774 = !{!443, !1573, !1560, !1560, !11}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !1620, file: !130, line: 404, baseType: !1776, size: 64, offset: 896)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 64)
!1777 = !DISubroutineType(types: !1778)
!1778 = !{!1011, !1560, !1779}
!1779 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1780, line: 305, baseType: !7)
!1780 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !1620, file: !130, line: 405, baseType: !1678, size: 64, offset: 960)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !1620, file: !130, line: 406, baseType: !1635, size: 64, offset: 1024)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !1620, file: !130, line: 407, baseType: !1784, size: 64, offset: 1088)
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 64)
!1785 = !DISubroutineType(types: !1786)
!1786 = !{!443, !1560, !898, !898}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !1620, file: !130, line: 409, baseType: !1788, size: 64, offset: 1152)
!1788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1789, size: 64)
!1789 = !DISubroutineType(types: !1790)
!1790 = !{null, !1560, !1791, !1791}
!1791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !1620, file: !130, line: 410, baseType: !1793, size: 64, offset: 1216)
!1793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1794, size: 64)
!1794 = !DISubroutineType(types: !1795)
!1795 = !{!443, !1573, !1560}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !1620, file: !130, line: 413, baseType: !1797, size: 64, offset: 1280)
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 64)
!1798 = !DISubroutineType(types: !1799)
!1799 = !{!443, !1800, !1151, !1977}
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 64)
!1801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !1802, line: 240, size: 1600, elements: !1803)
!1802 = !DIFile(filename: "./include/linux/swap.h", directory: "/home/lizy2001/genbc/linux")
!1803 = !{!1804, !1805, !1807, !1814, !1816, !1817, !1819, !1826, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1839, !1845, !1846, !1967, !1968, !1969, !1970, !1971, !1972, !1973}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1801, file: !1802, line: 241, baseType: !898, size: 64)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1801, file: !1802, line: 242, baseType: !1806, size: 16, offset: 64)
!1806 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1801, file: !1802, line: 243, baseType: !1808, size: 320, offset: 128)
!1808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "plist_node", file: !1809, line: 83, size: 320, elements: !1810)
!1809 = !DIFile(filename: "./include/linux/plist.h", directory: "/home/lizy2001/genbc/linux")
!1810 = !{!1811, !1812, !1813}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1808, file: !1809, line: 84, baseType: !443, size: 32)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "prio_list", scope: !1808, file: !1809, line: 85, baseType: !904, size: 128, offset: 64)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "node_list", scope: !1808, file: !1809, line: 86, baseType: !904, size: 128, offset: 192)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1801, file: !1802, line: 244, baseType: !1815, size: 8, offset: 448)
!1815 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1801, file: !1802, line: 245, baseType: !7, size: 32, offset: 480)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "swap_map", scope: !1801, file: !1802, line: 246, baseType: !1818, size: 64, offset: 512)
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 64)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_info", scope: !1801, file: !1802, line: 247, baseType: !1820, size: 64, offset: 576)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 64)
!1821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swap_cluster_info", file: !1802, line: 208, size: 32, elements: !1822)
!1822 = !{!1823, !1824, !1825}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1821, file: !1802, line: 209, baseType: !1035)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1821, file: !1802, line: 215, baseType: !7, size: 24, flags: DIFlagBitField, extraData: i64 0)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1821, file: !1802, line: 216, baseType: !7, size: 8, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "free_clusters", scope: !1801, file: !1802, line: 248, baseType: !1827, size: 64, offset: 640)
!1827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swap_cluster_list", file: !1802, line: 232, size: 64, elements: !1828)
!1828 = !{!1829, !1830}
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1827, file: !1802, line: 233, baseType: !1821, size: 32)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1827, file: !1802, line: 234, baseType: !1821, size: 32, offset: 32)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_bit", scope: !1801, file: !1802, line: 249, baseType: !7, size: 32, offset: 704)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "highest_bit", scope: !1801, file: !1802, line: 250, baseType: !7, size: 32, offset: 736)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1801, file: !1802, line: 251, baseType: !7, size: 32, offset: 768)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "inuse_pages", scope: !1801, file: !1802, line: 252, baseType: !7, size: 32, offset: 800)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_next", scope: !1801, file: !1802, line: 253, baseType: !7, size: 32, offset: 832)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_nr", scope: !1801, file: !1802, line: 254, baseType: !7, size: 32, offset: 864)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_next_cpu", scope: !1801, file: !1802, line: 255, baseType: !1838, size: 64, offset: 896)
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_cluster", scope: !1801, file: !1802, line: 256, baseType: !1840, size: 64, offset: 960)
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 64)
!1841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_cluster", file: !1802, line: 227, size: 64, elements: !1842)
!1842 = !{!1843, !1844}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1841, file: !1802, line: 228, baseType: !1821, size: 32)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1841, file: !1802, line: 229, baseType: !7, size: 32, offset: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "swap_extent_root", scope: !1801, file: !1802, line: 257, baseType: !1595, size: 64, offset: 1024)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "bdev", scope: !1801, file: !1802, line: 258, baseType: !1847, size: 64, offset: 1088)
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 64)
!1848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !855, line: 22, size: 1344, elements: !1849)
!1849 = !{!1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1864, !1865, !1866, !1867, !1868, !1965, !1966}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !1848, file: !855, line: 23, baseType: !1295, size: 32)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !1848, file: !855, line: 24, baseType: !443, size: 32, offset: 32)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !1848, file: !855, line: 25, baseType: !1213, size: 64, offset: 64)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !1848, file: !855, line: 26, baseType: !1379, size: 64, offset: 128)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !1848, file: !855, line: 27, baseType: !1520, size: 192, offset: 192)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !1848, file: !855, line: 28, baseType: !890, size: 64, offset: 384)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !1848, file: !855, line: 29, baseType: !890, size: 64, offset: 448)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !1848, file: !855, line: 30, baseType: !443, size: 32, offset: 512)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !1848, file: !855, line: 31, baseType: !1011, size: 8, offset: 544)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !1848, file: !855, line: 33, baseType: !904, size: 128, offset: 576)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !1848, file: !855, line: 35, baseType: !1847, size: 64, offset: 704)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !1848, file: !855, line: 36, baseType: !1862, size: 8, offset: 768)
!1862 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !925, line: 17, baseType: !1863)
!1863 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !909, line: 21, baseType: !1211)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !1848, file: !855, line: 37, baseType: !982, size: 64, offset: 832)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !1848, file: !855, line: 39, baseType: !7, size: 32, offset: 896)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !1848, file: !855, line: 41, baseType: !1035, offset: 928)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !1848, file: !855, line: 42, baseType: !952, size: 64, offset: 960)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !1848, file: !855, line: 43, baseType: !1869, size: 64, offset: 1024)
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 64)
!1870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !88, line: 165, size: 4672, elements: !1871)
!1871 = !{!1872, !1873, !1874, !1875, !1876, !1877, !1887, !1888, !1889, !1890, !1891, !1892, !1952, !1953, !1959, !1961, !1963, !1964}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1870, file: !88, line: 166, baseType: !987, size: 64)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1870, file: !88, line: 167, baseType: !1599, size: 192, align: 64, offset: 64)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_list", scope: !1870, file: !88, line: 168, baseType: !904, size: 128, offset: 256)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !1870, file: !88, line: 169, baseType: !898, size: 64, offset: 384)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "io_pages", scope: !1870, file: !88, line: 170, baseType: !898, size: 64, offset: 448)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !1870, file: !88, line: 172, baseType: !1878, size: 32, offset: 512)
!1878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !1879, line: 19, size: 32, elements: !1880)
!1879 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!1880 = !{!1881}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1878, file: !1879, line: 20, baseType: !1882, size: 32)
!1882 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1883, line: 113, baseType: !1884)
!1883 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1883, line: 111, size: 32, elements: !1885)
!1885 = !{!1886}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1884, file: !1883, line: 112, baseType: !1586, size: 32)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1870, file: !88, line: 173, baseType: !7, size: 32, offset: 544)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "min_ratio", scope: !1870, file: !88, line: 174, baseType: !7, size: 32, offset: 576)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "max_ratio", scope: !1870, file: !88, line: 175, baseType: !7, size: 32, offset: 608)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "max_prop_frac", scope: !1870, file: !88, line: 175, baseType: !7, size: 32, offset: 640)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "tot_write_bandwidth", scope: !1870, file: !88, line: 181, baseType: !918, size: 64, offset: 704)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "wb", scope: !1870, file: !88, line: 183, baseType: !1893, size: 2688, offset: 768)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bdi_writeback", file: !88, line: 107, size: 2688, elements: !1894)
!1894 = !{!1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1926, !1927, !1928, !1929, !1930, !1950, !1951}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "bdi", scope: !1893, file: !88, line: 108, baseType: !1869, size: 64)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1893, file: !88, line: 110, baseType: !898, size: 64, offset: 64)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "last_old_flush", scope: !1893, file: !88, line: 111, baseType: !898, size: 64, offset: 128)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty", scope: !1893, file: !88, line: 113, baseType: !904, size: 128, offset: 192)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "b_io", scope: !1893, file: !88, line: 114, baseType: !904, size: 128, offset: 320)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "b_more_io", scope: !1893, file: !88, line: 115, baseType: !904, size: 128, offset: 448)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty_time", scope: !1893, file: !88, line: 116, baseType: !904, size: 128, offset: 576)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !1893, file: !88, line: 117, baseType: !1035, offset: 704)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !1893, file: !88, line: 119, baseType: !1904, size: 256, offset: 704)
!1904 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1905, size: 256, elements: !1909)
!1905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !1906, line: 97, size: 64, elements: !1907)
!1906 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!1907 = !{!1908}
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1905, file: !1906, line: 98, baseType: !924, size: 64)
!1909 = !{!1910}
!1910 = !DISubrange(count: 4)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "congested", scope: !1893, file: !88, line: 121, baseType: !898, size: 64, offset: 960)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "bw_time_stamp", scope: !1893, file: !88, line: 123, baseType: !898, size: 64, offset: 1024)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_stamp", scope: !1893, file: !88, line: 124, baseType: !898, size: 64, offset: 1088)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "written_stamp", scope: !1893, file: !88, line: 125, baseType: !898, size: 64, offset: 1152)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "write_bandwidth", scope: !1893, file: !88, line: 126, baseType: !898, size: 64, offset: 1216)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "avg_write_bandwidth", scope: !1893, file: !88, line: 127, baseType: !898, size: 64, offset: 1280)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_ratelimit", scope: !1893, file: !88, line: 135, baseType: !898, size: 64, offset: 1344)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "balanced_dirty_ratelimit", scope: !1893, file: !88, line: 136, baseType: !898, size: 64, offset: 1408)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "completions", scope: !1893, file: !88, line: 138, baseType: !1920, size: 128, offset: 1472)
!1920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fprop_local_percpu", file: !1921, line: 76, size: 128, elements: !1922)
!1921 = !DIFile(filename: "./include/linux/flex_proportions.h", directory: "/home/lizy2001/genbc/linux")
!1922 = !{!1923, !1924, !1925}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1920, file: !1921, line: 78, baseType: !1905, size: 64)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !1920, file: !1921, line: 80, baseType: !7, size: 32, offset: 64)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1920, file: !1921, line: 81, baseType: !1612, offset: 96)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_exceeded", scope: !1893, file: !88, line: 139, baseType: !443, size: 32, offset: 1600)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "start_all_reason", scope: !1893, file: !88, line: 140, baseType: !87, size: 32, offset: 1632)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "work_lock", scope: !1893, file: !88, line: 142, baseType: !1035, offset: 1664)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !1893, file: !88, line: 143, baseType: !904, size: 128, offset: 1664)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "dwork", scope: !1893, file: !88, line: 144, baseType: !1931, size: 704, offset: 1792)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !158, line: 115, size: 704, elements: !1932)
!1932 = !{!1933, !1934, !1946, !1949}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1931, file: !158, line: 116, baseType: !915, size: 256)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !1931, file: !158, line: 117, baseType: !1935, size: 320, offset: 256)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !1936, line: 11, size: 320, elements: !1937)
!1936 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!1937 = !{!1938, !1939, !1940, !1945}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1935, file: !1936, line: 16, baseType: !1422, size: 128)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1935, file: !1936, line: 17, baseType: !898, size: 64, offset: 128)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1935, file: !1936, line: 18, baseType: !1941, size: 64, offset: 192)
!1941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 64)
!1942 = !DISubroutineType(types: !1943)
!1943 = !{null, !1944}
!1944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 64)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1935, file: !1936, line: 19, baseType: !938, size: 32, offset: 256)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !1931, file: !158, line: 120, baseType: !1947, size: 64, offset: 576)
!1947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1948, size: 64)
!1948 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !158, line: 18, flags: DIFlagFwdDecl)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1931, file: !158, line: 121, baseType: !443, size: 32, offset: 640)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sleep", scope: !1893, file: !88, line: 146, baseType: !898, size: 64, offset: 2496)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_node", scope: !1893, file: !88, line: 148, baseType: !904, size: 128, offset: 2560)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "wb_list", scope: !1870, file: !88, line: 184, baseType: !904, size: 128, offset: 3456)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "wb_waitq", scope: !1870, file: !88, line: 190, baseType: !1954, size: 128, offset: 3584)
!1954 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1712, line: 40, baseType: !1955)
!1955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1712, line: 36, size: 128, elements: !1956)
!1956 = !{!1957, !1958}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1955, file: !1712, line: 37, baseType: !1035)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1955, file: !1712, line: 38, baseType: !904, size: 128)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1870, file: !88, line: 192, baseType: !1960, size: 64, offset: 3712)
!1960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !1870, file: !88, line: 193, baseType: !1962, size: 512, offset: 3776)
!1962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !961, size: 512, elements: !1081)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1870, file: !88, line: 194, baseType: !1960, size: 64, offset: 4288)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "laptop_mode_wb_timer", scope: !1870, file: !88, line: 196, baseType: !1935, size: 320, offset: 4352)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !1848, file: !855, line: 46, baseType: !443, size: 32, offset: 1088)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !1848, file: !855, line: 48, baseType: !1520, size: 192, offset: 1152)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "swap_file", scope: !1801, file: !1802, line: 259, baseType: !1151, size: 64, offset: 1152)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "old_block_size", scope: !1801, file: !1802, line: 260, baseType: !7, size: 32, offset: 1216)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1801, file: !1802, line: 265, baseType: !1035, offset: 1248)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "cont_lock", scope: !1801, file: !1802, line: 278, baseType: !1035, offset: 1248)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "discard_work", scope: !1801, file: !1802, line: 282, baseType: !915, size: 256, offset: 1280)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "discard_clusters", scope: !1801, file: !1802, line: 283, baseType: !1827, size: 64, offset: 1536)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "avail_lists", scope: !1801, file: !1802, line: 284, baseType: !1974, offset: 1600)
!1974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1808, elements: !1975)
!1975 = !{!1976}
!1976 = !DISubrange(count: -1)
!1977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !1620, file: !130, line: 415, baseType: !1979, size: 64, offset: 1344)
!1979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1980, size: 64)
!1980 = !DISubroutineType(types: !1981)
!1981 = !{null, !1151}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1574, file: !130, line: 466, baseType: !898, size: 64, offset: 896)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !1574, file: !130, line: 467, baseType: !1984, size: 32, offset: 960)
!1984 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1985, line: 8, baseType: !938)
!1985 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !1574, file: !130, line: 468, baseType: !1035, offset: 992)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !1574, file: !130, line: 469, baseType: !904, size: 128, offset: 1024)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1574, file: !130, line: 470, baseType: !890, size: 64, offset: 1152)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1569, file: !1562, line: 87, baseType: !898, size: 64, offset: 192)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1569, file: !1562, line: 94, baseType: !898, size: 64, offset: 256)
!1991 = !DIDerivedType(tag: DW_TAG_member, scope: !1566, file: !1562, line: 96, baseType: !1992, size: 64)
!1992 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1566, file: !1562, line: 96, size: 64, elements: !1993)
!1993 = !{!1994}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1992, file: !1562, line: 101, baseType: !1995, size: 64)
!1995 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !889, line: 143, baseType: !987)
!1996 = !DIDerivedType(tag: DW_TAG_member, scope: !1566, file: !1562, line: 103, baseType: !1997, size: 320)
!1997 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1566, file: !1562, line: 103, size: 320, elements: !1998)
!1998 = !{!1999, !2009, !2012, !2013}
!1999 = !DIDerivedType(tag: DW_TAG_member, scope: !1997, file: !1562, line: 104, baseType: !2000, size: 128)
!2000 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1997, file: !1562, line: 104, size: 128, elements: !2001)
!2001 = !{!2002, !2003}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !2000, file: !1562, line: 105, baseType: !904, size: 128)
!2003 = !DIDerivedType(tag: DW_TAG_member, scope: !2000, file: !1562, line: 106, baseType: !2004, size: 128)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2000, file: !1562, line: 106, size: 128, elements: !2005)
!2005 = !{!2006, !2007, !2008}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2004, file: !1562, line: 107, baseType: !1560, size: 64)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2004, file: !1562, line: 109, baseType: !443, size: 32, offset: 64)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !2004, file: !1562, line: 110, baseType: !443, size: 32, offset: 96)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1997, file: !1562, line: 117, baseType: !2010, size: 64, offset: 128)
!2010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2011, size: 64)
!2011 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !1562, line: 117, flags: DIFlagFwdDecl)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1997, file: !1562, line: 119, baseType: !890, size: 64, offset: 192)
!2013 = !DIDerivedType(tag: DW_TAG_member, scope: !1997, file: !1562, line: 120, baseType: !2014, size: 64, offset: 256)
!2014 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1997, file: !1562, line: 120, size: 64, elements: !2015)
!2015 = !{!2016, !2017, !2018}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !2014, file: !1562, line: 121, baseType: !890, size: 64)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !2014, file: !1562, line: 122, baseType: !898, size: 64)
!2018 = !DIDerivedType(tag: DW_TAG_member, scope: !2014, file: !1562, line: 123, baseType: !2019, size: 32)
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2014, file: !1562, line: 123, size: 32, elements: !2020)
!2020 = !{!2021, !2022, !2023}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !2019, file: !1562, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2019, file: !1562, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2019, file: !1562, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2024 = !DIDerivedType(tag: DW_TAG_member, scope: !1566, file: !1562, line: 130, baseType: !2025, size: 192)
!2025 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1566, file: !1562, line: 130, size: 192, elements: !2026)
!2026 = !{!2027, !2028, !2029, !2030, !2031}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !2025, file: !1562, line: 131, baseType: !898, size: 64)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !2025, file: !1562, line: 134, baseType: !1211, size: 8, offset: 64)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !2025, file: !1562, line: 135, baseType: !1211, size: 8, offset: 72)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !2025, file: !1562, line: 136, baseType: !1586, size: 32, offset: 96)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !2025, file: !1562, line: 137, baseType: !7, size: 32, offset: 128)
!2032 = !DIDerivedType(tag: DW_TAG_member, scope: !1566, file: !1562, line: 139, baseType: !2033, size: 256)
!2033 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1566, file: !1562, line: 139, size: 256, elements: !2034)
!2034 = !{!2035, !2036, !2037}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !2033, file: !1562, line: 140, baseType: !898, size: 64)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !2033, file: !1562, line: 141, baseType: !1586, size: 32, offset: 64)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !2033, file: !1562, line: 143, baseType: !904, size: 128, offset: 128)
!2038 = !DIDerivedType(tag: DW_TAG_member, scope: !1566, file: !1562, line: 145, baseType: !2039, size: 256)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1566, file: !1562, line: 145, size: 256, elements: !2040)
!2040 = !{!2041, !2042, !2045, !2046, !4230}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !2039, file: !1562, line: 146, baseType: !898, size: 64)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !2039, file: !1562, line: 147, baseType: !2043, size: 64, offset: 64)
!2043 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !2044, line: 509, baseType: !1560)
!2044 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !2039, file: !1562, line: 148, baseType: !898, size: 64, offset: 128)
!2046 = !DIDerivedType(tag: DW_TAG_member, scope: !2039, file: !1562, line: 149, baseType: !2047, size: 64, offset: 192)
!2047 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2039, file: !1562, line: 149, size: 64, elements: !2048)
!2048 = !{!2049, !4229}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !2047, file: !1562, line: 150, baseType: !2050, size: 64)
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 64)
!2051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !1562, line: 388, size: 7296, elements: !2052)
!2052 = !{!2053, !4227}
!2053 = !DIDerivedType(tag: DW_TAG_member, scope: !2051, file: !1562, line: 389, baseType: !2054, size: 7296)
!2054 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2051, file: !1562, line: 389, size: 7296, elements: !2055)
!2055 = !{!2056, !2174, !2175, !2176, !2180, !2181, !2182, !2183, !2184, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2225, !2231, !2234, !2273, !2274, !4211, !4212, !4215, !4216, !4217, !4220, !4221, !4222, !4225, !4226}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2054, file: !1562, line: 390, baseType: !2057, size: 64)
!2057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 64)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !1562, line: 305, size: 1472, elements: !2059)
!2059 = !{!2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2074, !2075, !2080, !2081, !2084, !2168, !2169, !2170, !2171, !2172}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !2058, file: !1562, line: 308, baseType: !898, size: 64)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !2058, file: !1562, line: 309, baseType: !898, size: 64, offset: 64)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !2058, file: !1562, line: 313, baseType: !2057, size: 64, offset: 128)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !2058, file: !1562, line: 313, baseType: !2057, size: 64, offset: 192)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !2058, file: !1562, line: 315, baseType: !1599, size: 192, align: 64, offset: 256)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !2058, file: !1562, line: 323, baseType: !898, size: 64, offset: 448)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !2058, file: !1562, line: 327, baseType: !2050, size: 64, offset: 512)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !2058, file: !1562, line: 333, baseType: !2068, size: 64, offset: 576)
!2068 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !2044, line: 284, baseType: !2069)
!2069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !2044, line: 284, size: 64, elements: !2070)
!2070 = !{!2071}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !2069, file: !2044, line: 284, baseType: !2072, size: 64)
!2072 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !2073, line: 19, baseType: !898)
!2073 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !2058, file: !1562, line: 334, baseType: !898, size: 64, offset: 640)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !2058, file: !1562, line: 343, baseType: !2076, size: 256, offset: 704)
!2076 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2058, file: !1562, line: 340, size: 256, elements: !2077)
!2077 = !{!2078, !2079}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !2076, file: !1562, line: 341, baseType: !1599, size: 192, align: 64)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !2076, file: !1562, line: 342, baseType: !898, size: 64, offset: 192)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !2058, file: !1562, line: 351, baseType: !904, size: 128, offset: 960)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !2058, file: !1562, line: 353, baseType: !2082, size: 64, offset: 1088)
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 64)
!2083 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !1562, line: 353, flags: DIFlagFwdDecl)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !2058, file: !1562, line: 356, baseType: !2085, size: 64, offset: 1152)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 64)
!2086 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2087)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !105, line: 557, size: 832, elements: !2088)
!2088 = !{!2089, !2093, !2094, !2098, !2102, !2142, !2146, !2150, !2154, !2155, !2156, !2160, !2164}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2087, file: !105, line: 558, baseType: !2090, size: 64)
!2090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2091, size: 64)
!2091 = !DISubroutineType(types: !2092)
!2092 = !{null, !2057}
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !2087, file: !105, line: 559, baseType: !2090, size: 64, offset: 64)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !2087, file: !105, line: 560, baseType: !2095, size: 64, offset: 128)
!2095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2096, size: 64)
!2096 = !DISubroutineType(types: !2097)
!2097 = !{!443, !2057, !898}
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !2087, file: !105, line: 561, baseType: !2099, size: 64, offset: 192)
!2099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2100, size: 64)
!2100 = !DISubroutineType(types: !2101)
!2101 = !{!443, !2057}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !2087, file: !105, line: 562, baseType: !2103, size: 64, offset: 256)
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 64)
!2104 = !DISubroutineType(types: !2105)
!2105 = !{!2106, !2107}
!2106 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !1562, line: 682, baseType: !7)
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 64)
!2108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !105, line: 508, size: 768, elements: !2109)
!2109 = !{!2110, !2111, !2112, !2113, !2114, !2115, !2122, !2129, !2135, !2136, !2137, !2139, !2141}
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !2108, file: !105, line: 509, baseType: !2057, size: 64)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2108, file: !105, line: 510, baseType: !7, size: 32, offset: 64)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2108, file: !105, line: 511, baseType: !888, size: 32, offset: 96)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !2108, file: !105, line: 512, baseType: !898, size: 64, offset: 128)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !2108, file: !105, line: 513, baseType: !898, size: 64, offset: 192)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2108, file: !105, line: 514, baseType: !2116, size: 64, offset: 256)
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 64)
!2117 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !2044, line: 385, baseType: !2118)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2044, line: 385, size: 64, elements: !2119)
!2119 = !{!2120}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2118, file: !2044, line: 385, baseType: !2121, size: 64)
!2121 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !2073, line: 15, baseType: !898)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2108, file: !105, line: 516, baseType: !2123, size: 64, offset: 320)
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 64)
!2124 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !2044, line: 359, baseType: !2125)
!2125 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2044, line: 359, size: 64, elements: !2126)
!2126 = !{!2127}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2125, file: !2044, line: 359, baseType: !2128, size: 64)
!2128 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !2073, line: 16, baseType: !898)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !2108, file: !105, line: 519, baseType: !2130, size: 64, offset: 384)
!2130 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !2073, line: 21, baseType: !2131)
!2131 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2073, line: 21, size: 64, elements: !2132)
!2132 = !{!2133}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2131, file: !2073, line: 21, baseType: !2134, size: 64)
!2134 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !2073, line: 14, baseType: !898)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !2108, file: !105, line: 521, baseType: !1560, size: 64, offset: 448)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2108, file: !105, line: 522, baseType: !1560, size: 64, offset: 512)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2108, file: !105, line: 528, baseType: !2138, size: 64, offset: 576)
!2138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2130, size: 64)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2108, file: !105, line: 532, baseType: !2140, size: 64, offset: 640)
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 64)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !2108, file: !105, line: 536, baseType: !2043, size: 64, offset: 704)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !2087, file: !105, line: 563, baseType: !2143, size: 64, offset: 320)
!2143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 64)
!2144 = !DISubroutineType(types: !2145)
!2145 = !{!2106, !2107, !104}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !2087, file: !105, line: 565, baseType: !2147, size: 64, offset: 384)
!2147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2148, size: 64)
!2148 = !DISubroutineType(types: !2149)
!2149 = !{null, !2107, !898, !898}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !2087, file: !105, line: 567, baseType: !2151, size: 64, offset: 448)
!2151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 64)
!2152 = !DISubroutineType(types: !2153)
!2153 = !{!898, !2057}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !2087, file: !105, line: 571, baseType: !2103, size: 64, offset: 512)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !2087, file: !105, line: 574, baseType: !2103, size: 64, offset: 576)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !2087, file: !105, line: 579, baseType: !2157, size: 64, offset: 640)
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2158, size: 64)
!2158 = !DISubroutineType(types: !2159)
!2159 = !{!443, !2057, !898, !890, !443, !443}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2087, file: !105, line: 585, baseType: !2161, size: 64, offset: 704)
!2161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2162, size: 64)
!2162 = !DISubroutineType(types: !2163)
!2163 = !{!1024, !2057}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !2087, file: !105, line: 615, baseType: !2165, size: 64, offset: 768)
!2165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 64)
!2166 = !DISubroutineType(types: !2167)
!2167 = !{!1560, !2057, !898}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !2058, file: !1562, line: 359, baseType: !898, size: 64, offset: 1216)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !2058, file: !1562, line: 361, baseType: !1151, size: 64, offset: 1280)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !2058, file: !1562, line: 362, baseType: !890, size: 64, offset: 1344)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !2058, file: !1562, line: 365, baseType: !918, size: 64, offset: 1408)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !2058, file: !1562, line: 373, baseType: !2173, offset: 1472)
!2173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !1562, line: 296, elements: !1049)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !2054, file: !1562, line: 391, baseType: !1595, size: 64, offset: 64)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !2054, file: !1562, line: 392, baseType: !987, size: 64, offset: 128)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2054, file: !1562, line: 394, baseType: !2177, size: 64, offset: 192)
!2177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2178, size: 64)
!2178 = !DISubroutineType(types: !2179)
!2179 = !{!898, !1151, !898, !898, !898, !898}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !2054, file: !1562, line: 398, baseType: !898, size: 64, offset: 256)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !2054, file: !1562, line: 399, baseType: !898, size: 64, offset: 320)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !2054, file: !1562, line: 405, baseType: !898, size: 64, offset: 384)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !2054, file: !1562, line: 406, baseType: !898, size: 64, offset: 448)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2054, file: !1562, line: 407, baseType: !2185, size: 64, offset: 512)
!2185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2186, size: 64)
!2186 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !2044, line: 286, baseType: !2187)
!2187 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2044, line: 286, size: 64, elements: !2188)
!2188 = !{!2189}
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2187, file: !2044, line: 286, baseType: !2190, size: 64)
!2190 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !2073, line: 18, baseType: !898)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !2054, file: !1562, line: 416, baseType: !1586, size: 32, offset: 576)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !2054, file: !1562, line: 428, baseType: !1586, size: 32, offset: 608)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !2054, file: !1562, line: 437, baseType: !1586, size: 32, offset: 640)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !2054, file: !1562, line: 447, baseType: !1586, size: 32, offset: 672)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !2054, file: !1562, line: 450, baseType: !918, size: 64, offset: 704)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !2054, file: !1562, line: 452, baseType: !443, size: 32, offset: 768)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !2054, file: !1562, line: 454, baseType: !1035, offset: 800)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !2054, file: !1562, line: 457, baseType: !1606, size: 256, offset: 832)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !2054, file: !1562, line: 459, baseType: !904, size: 128, offset: 1088)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !2054, file: !1562, line: 466, baseType: !898, size: 64, offset: 1216)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !2054, file: !1562, line: 467, baseType: !898, size: 64, offset: 1280)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !2054, file: !1562, line: 469, baseType: !898, size: 64, offset: 1344)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2054, file: !1562, line: 470, baseType: !898, size: 64, offset: 1408)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !2054, file: !1562, line: 471, baseType: !920, size: 64, offset: 1472)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !2054, file: !1562, line: 472, baseType: !898, size: 64, offset: 1536)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !2054, file: !1562, line: 473, baseType: !898, size: 64, offset: 1600)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !2054, file: !1562, line: 474, baseType: !898, size: 64, offset: 1664)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !2054, file: !1562, line: 475, baseType: !898, size: 64, offset: 1728)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !2054, file: !1562, line: 477, baseType: !1035, offset: 1792)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !2054, file: !1562, line: 478, baseType: !898, size: 64, offset: 1792)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !2054, file: !1562, line: 478, baseType: !898, size: 64, offset: 1856)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !2054, file: !1562, line: 478, baseType: !898, size: 64, offset: 1920)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !2054, file: !1562, line: 478, baseType: !898, size: 64, offset: 1984)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !2054, file: !1562, line: 479, baseType: !898, size: 64, offset: 2048)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !2054, file: !1562, line: 479, baseType: !898, size: 64, offset: 2112)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !2054, file: !1562, line: 479, baseType: !898, size: 64, offset: 2176)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !2054, file: !1562, line: 480, baseType: !898, size: 64, offset: 2240)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !2054, file: !1562, line: 480, baseType: !898, size: 64, offset: 2304)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !2054, file: !1562, line: 480, baseType: !898, size: 64, offset: 2368)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !2054, file: !1562, line: 480, baseType: !898, size: 64, offset: 2432)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !2054, file: !1562, line: 482, baseType: !2222, size: 2816, offset: 2496)
!2222 = !DICompositeType(tag: DW_TAG_array_type, baseType: !898, size: 2816, elements: !2223)
!2223 = !{!2224}
!2224 = !DISubrange(count: 44)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !2054, file: !1562, line: 488, baseType: !2226, size: 256, offset: 5312)
!2226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !2227, line: 60, size: 256, elements: !2228)
!2227 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!2228 = !{!2229}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2226, file: !2227, line: 61, baseType: !2230, size: 256)
!2230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !918, size: 256, elements: !1909)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !2054, file: !1562, line: 490, baseType: !2232, size: 64, offset: 5568)
!2232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2233, size: 64)
!2233 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !1562, line: 490, flags: DIFlagFwdDecl)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2054, file: !1562, line: 493, baseType: !2235, size: 896, offset: 5632)
!2235 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !2236, line: 53, baseType: !2237)
!2236 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!2237 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2236, line: 13, size: 896, elements: !2238)
!2238 = !{!2239, !2240, !2241, !2242, !2245, !2246, !2247, !2248, !2268, !2269, !2270}
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !2237, file: !2236, line: 18, baseType: !987, size: 64)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !2237, file: !2236, line: 28, baseType: !920, size: 64, offset: 64)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !2237, file: !2236, line: 31, baseType: !1606, size: 256, offset: 128)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !2237, file: !2236, line: 32, baseType: !2243, size: 64, offset: 384)
!2243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2244, size: 64)
!2244 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !2236, line: 32, flags: DIFlagFwdDecl)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !2237, file: !2236, line: 37, baseType: !965, size: 16, offset: 448)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2237, file: !2236, line: 40, baseType: !1520, size: 192, offset: 512)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !2237, file: !2236, line: 41, baseType: !890, size: 64, offset: 704)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !2237, file: !2236, line: 42, baseType: !2249, size: 64, offset: 768)
!2249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2250, size: 64)
!2250 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2251)
!2251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !2252, line: 13, size: 896, elements: !2253)
!2252 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!2253 = !{!2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267}
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2251, file: !2252, line: 14, baseType: !890, size: 64)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2251, file: !2252, line: 15, baseType: !898, size: 64, offset: 64)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2251, file: !2252, line: 17, baseType: !898, size: 64, offset: 128)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !2251, file: !2252, line: 17, baseType: !898, size: 64, offset: 192)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !2251, file: !2252, line: 19, baseType: !175, size: 64, offset: 256)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !2251, file: !2252, line: 21, baseType: !175, size: 64, offset: 320)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !2251, file: !2252, line: 22, baseType: !175, size: 64, offset: 384)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !2251, file: !2252, line: 23, baseType: !175, size: 64, offset: 448)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !2251, file: !2252, line: 24, baseType: !175, size: 64, offset: 512)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !2251, file: !2252, line: 25, baseType: !175, size: 64, offset: 576)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !2251, file: !2252, line: 26, baseType: !175, size: 64, offset: 640)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !2251, file: !2252, line: 27, baseType: !175, size: 64, offset: 704)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !2251, file: !2252, line: 28, baseType: !175, size: 64, offset: 768)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !2251, file: !2252, line: 29, baseType: !175, size: 64, offset: 832)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !2237, file: !2236, line: 44, baseType: !1586, size: 32, offset: 832)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !2237, file: !2236, line: 50, baseType: !1697, size: 16, offset: 864)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !2237, file: !2236, line: 51, baseType: !2271, size: 16, offset: 880)
!2271 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !925, line: 18, baseType: !2272)
!2272 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !909, line: 23, baseType: !1806)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2054, file: !1562, line: 495, baseType: !898, size: 64, offset: 6528)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !2054, file: !1562, line: 497, baseType: !2275, size: 64, offset: 6592)
!2275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2276, size: 64)
!2276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !1562, line: 381, size: 384, elements: !2277)
!2277 = !{!2278, !2279, !4210}
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2276, file: !1562, line: 382, baseType: !1586, size: 32)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !2276, file: !1562, line: 383, baseType: !2280, size: 128, offset: 64)
!2280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !1562, line: 376, size: 128, elements: !2281)
!2281 = !{!2282, !4208}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2280, file: !1562, line: 377, baseType: !2283, size: 64)
!2283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2284, size: 64)
!2284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1761, line: 640, size: 48640, elements: !2285)
!2285 = !{!2286, !2292, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2307, !2325, !2336, !2419, !2420, !2421, !2425, !2426, !2428, !2429, !2430, !2431, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2510, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2542, !2544, !2545, !2546, !2558, !2559, !2560, !2561, !2562, !2563, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2587, !2592, !2918, !2919, !2920, !2921, !2925, !2928, !2931, !2934, !2937, !2973, !3074, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3120, !3121, !3122, !3123, !3124, !3129, !3130, !3131, !3134, !3135, !3226, !3235, !3240, !3241, !3870, !3873, !3874, !3953, !3954, !3957, !3958, !3961, !3962, !3963, !3967, !3968, !3969, !3982, !3983, !3984, !3994, !3999, !4000, !4006, !4007, !4008, !4009, !4010, !4011, !4012, !4013, !4029, !4030, !4031, !4032, !4033, !4034, !4035, !4036, !4037}
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !2284, file: !1761, line: 646, baseType: !2287, size: 128)
!2287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !2288, line: 56, size: 128, elements: !2289)
!2288 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!2289 = !{!2290, !2291}
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2287, file: !2288, line: 57, baseType: !898, size: 64)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2287, file: !2288, line: 58, baseType: !938, size: 32, offset: 64)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2284, file: !1761, line: 649, baseType: !2293, size: 64, offset: 128)
!2293 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !175)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !2284, file: !1761, line: 657, baseType: !890, size: 64, offset: 192)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2284, file: !1761, line: 658, baseType: !1882, size: 32, offset: 256)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2284, file: !1761, line: 660, baseType: !7, size: 32, offset: 288)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !2284, file: !1761, line: 661, baseType: !7, size: 32, offset: 320)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2284, file: !1761, line: 684, baseType: !443, size: 32, offset: 352)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2284, file: !1761, line: 686, baseType: !443, size: 32, offset: 384)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !2284, file: !1761, line: 687, baseType: !443, size: 32, offset: 416)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !2284, file: !1761, line: 688, baseType: !443, size: 32, offset: 448)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !2284, file: !1761, line: 689, baseType: !7, size: 32, offset: 480)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !2284, file: !1761, line: 691, baseType: !2304, size: 64, offset: 512)
!2304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2305, size: 64)
!2305 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2306)
!2306 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1761, line: 691, flags: DIFlagFwdDecl)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !2284, file: !1761, line: 692, baseType: !2308, size: 832, offset: 576)
!2308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1761, line: 451, size: 832, elements: !2309)
!2309 = !{!2310, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !2308, file: !1761, line: 453, baseType: !2311, size: 128)
!2311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1761, line: 325, size: 128, elements: !2312)
!2312 = !{!2313, !2314}
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2311, file: !1761, line: 326, baseType: !898, size: 64)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !2311, file: !1761, line: 327, baseType: !938, size: 32, offset: 64)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !2308, file: !1761, line: 454, baseType: !1599, size: 192, align: 64, offset: 128)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !2308, file: !1761, line: 455, baseType: !904, size: 128, offset: 320)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2308, file: !1761, line: 456, baseType: !7, size: 32, offset: 448)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !2308, file: !1761, line: 458, baseType: !987, size: 64, offset: 512)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2308, file: !1761, line: 459, baseType: !987, size: 64, offset: 576)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !2308, file: !1761, line: 460, baseType: !987, size: 64, offset: 640)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !2308, file: !1761, line: 461, baseType: !987, size: 64, offset: 704)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !2308, file: !1761, line: 463, baseType: !987, size: 64, offset: 768)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !2308, file: !1761, line: 465, baseType: !2324, offset: 832)
!2324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1761, line: 415, elements: !1049)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2284, file: !1761, line: 693, baseType: !2326, size: 384, offset: 1408)
!2326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1761, line: 489, size: 384, elements: !2327)
!2327 = !{!2328, !2329, !2330, !2331, !2332, !2333, !2334}
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !2326, file: !1761, line: 490, baseType: !904, size: 128)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2326, file: !1761, line: 491, baseType: !898, size: 64, offset: 128)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !2326, file: !1761, line: 492, baseType: !898, size: 64, offset: 192)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !2326, file: !1761, line: 493, baseType: !7, size: 32, offset: 256)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2326, file: !1761, line: 494, baseType: !965, size: 16, offset: 288)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !2326, file: !1761, line: 495, baseType: !965, size: 16, offset: 304)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !2326, file: !1761, line: 497, baseType: !2335, size: 64, offset: 320)
!2335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2326, size: 64)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !2284, file: !1761, line: 697, baseType: !2337, size: 1792, offset: 1792)
!2337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1761, line: 507, size: 1792, elements: !2338)
!2338 = !{!2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2416, !2417}
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2337, file: !1761, line: 508, baseType: !1599, size: 192, align: 64)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !2337, file: !1761, line: 515, baseType: !987, size: 64, offset: 192)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !2337, file: !1761, line: 516, baseType: !987, size: 64, offset: 256)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !2337, file: !1761, line: 517, baseType: !987, size: 64, offset: 320)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !2337, file: !1761, line: 518, baseType: !987, size: 64, offset: 384)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !2337, file: !1761, line: 519, baseType: !987, size: 64, offset: 448)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !2337, file: !1761, line: 526, baseType: !924, size: 64, offset: 512)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !2337, file: !1761, line: 527, baseType: !987, size: 64, offset: 576)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2337, file: !1761, line: 528, baseType: !7, size: 32, offset: 640)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !2337, file: !1761, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !2337, file: !1761, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !2337, file: !1761, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !2337, file: !1761, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !2337, file: !1761, line: 563, baseType: !2353, size: 512, offset: 704)
!2353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !32, line: 118, size: 512, elements: !2354)
!2354 = !{!2355, !2363, !2364, !2369, !2412, !2413, !2414, !2415}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2353, file: !32, line: 119, baseType: !2356, size: 256)
!2356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !2357, line: 9, size: 256, elements: !2358)
!2357 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!2358 = !{!2359, !2360}
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2356, file: !2357, line: 10, baseType: !1599, size: 192, align: 64)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2356, file: !2357, line: 11, baseType: !2361, size: 64, offset: 192)
!2361 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !2362, line: 29, baseType: !924)
!2362 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !2353, file: !32, line: 120, baseType: !2361, size: 64, offset: 256)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2353, file: !32, line: 121, baseType: !2365, size: 64, offset: 320)
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 64)
!2366 = !DISubroutineType(types: !2367)
!2367 = !{!31, !2368}
!2368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2353, size: 64)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2353, file: !32, line: 122, baseType: !2370, size: 64, offset: 384)
!2370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2371, size: 64)
!2371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !32, line: 159, size: 512, align: 512, elements: !2372)
!2372 = !{!2373, !2393, !2394, !2397, !2402, !2403, !2407, !2411}
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !2371, file: !32, line: 160, baseType: !2374, size: 64)
!2374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 64)
!2375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !32, line: 214, size: 4608, align: 512, elements: !2376)
!2376 = !{!2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389}
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2375, file: !32, line: 215, baseType: !1612)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2375, file: !32, line: 216, baseType: !7, size: 32)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !2375, file: !32, line: 217, baseType: !7, size: 32, offset: 32)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !2375, file: !32, line: 218, baseType: !7, size: 32, offset: 64)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !2375, file: !32, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !2375, file: !32, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !2375, file: !32, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !2375, file: !32, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !2375, file: !32, line: 233, baseType: !2361, size: 64, offset: 128)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !2375, file: !32, line: 234, baseType: !2368, size: 64, offset: 192)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !2375, file: !32, line: 235, baseType: !2361, size: 64, offset: 256)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !2375, file: !32, line: 236, baseType: !2368, size: 64, offset: 320)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !2375, file: !32, line: 237, baseType: !2390, size: 4096, offset: 512)
!2390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2371, size: 4096, elements: !2391)
!2391 = !{!2392}
!2392 = !DISubrange(count: 8)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2371, file: !32, line: 161, baseType: !7, size: 32, offset: 64)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2371, file: !32, line: 162, baseType: !2395, size: 32, offset: 96)
!2395 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !889, line: 27, baseType: !2396)
!2396 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !1109, line: 96, baseType: !443)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2371, file: !32, line: 163, baseType: !2398, size: 32, offset: 128)
!2398 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !1179, line: 276, baseType: !2399)
!2399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !1179, line: 276, size: 32, elements: !2400)
!2400 = !{!2401}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2399, file: !1179, line: 276, baseType: !1183, size: 32)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !2371, file: !32, line: 164, baseType: !2368, size: 64, offset: 192)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2371, file: !32, line: 165, baseType: !2404, size: 128, offset: 256)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !2357, line: 14, size: 128, elements: !2405)
!2405 = !{!2406}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2404, file: !2357, line: 15, baseType: !1591, size: 128)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !2371, file: !32, line: 166, baseType: !2408, size: 64, offset: 384)
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2409, size: 64)
!2409 = !DISubroutineType(types: !2410)
!2410 = !{!2361}
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2371, file: !32, line: 167, baseType: !2361, size: 64, offset: 448)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2353, file: !32, line: 123, baseType: !1862, size: 8, offset: 448)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !2353, file: !32, line: 124, baseType: !1862, size: 8, offset: 456)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !2353, file: !32, line: 125, baseType: !1862, size: 8, offset: 464)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !2353, file: !32, line: 126, baseType: !1862, size: 8, offset: 472)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !2337, file: !1761, line: 572, baseType: !2353, size: 512, offset: 1216)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !2337, file: !1761, line: 580, baseType: !2418, size: 64, offset: 1728)
!2418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 64)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2284, file: !1761, line: 721, baseType: !7, size: 32, offset: 3584)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !2284, file: !1761, line: 722, baseType: !443, size: 32, offset: 3616)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !2284, file: !1761, line: 723, baseType: !2422, size: 64, offset: 3648)
!2422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2423, size: 64)
!2423 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2424)
!2424 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !894, line: 17, baseType: !893)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !2284, file: !1761, line: 724, baseType: !2424, size: 64, offset: 3712)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !2284, file: !1761, line: 749, baseType: !2427, offset: 3776)
!2427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1761, line: 290, elements: !1049)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2284, file: !1761, line: 751, baseType: !904, size: 128, offset: 3776)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !2284, file: !1761, line: 757, baseType: !2050, size: 64, offset: 3904)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !2284, file: !1761, line: 758, baseType: !2050, size: 64, offset: 3968)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !2284, file: !1761, line: 761, baseType: !2432, size: 320, offset: 4032)
!2432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !2227, line: 34, size: 320, elements: !2433)
!2433 = !{!2434, !2435}
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !2432, file: !2227, line: 35, baseType: !987, size: 64)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !2432, file: !2227, line: 36, baseType: !2436, size: 256, offset: 64)
!2436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2057, size: 256, elements: !1909)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !2284, file: !1761, line: 766, baseType: !443, size: 32, offset: 4352)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !2284, file: !1761, line: 767, baseType: !443, size: 32, offset: 4384)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !2284, file: !1761, line: 768, baseType: !443, size: 32, offset: 4416)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !2284, file: !1761, line: 770, baseType: !443, size: 32, offset: 4448)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !2284, file: !1761, line: 772, baseType: !898, size: 64, offset: 4480)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !2284, file: !1761, line: 775, baseType: !7, size: 32, offset: 4544)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !2284, file: !1761, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !2284, file: !1761, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !2284, file: !1761, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !2284, file: !1761, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !2284, file: !1761, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !2284, file: !1761, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !2284, file: !1761, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !2284, file: !1761, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !2284, file: !1761, line: 831, baseType: !898, size: 64, offset: 4672)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !2284, file: !1761, line: 833, baseType: !2453, size: 384, offset: 4736)
!2453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !111, line: 25, size: 384, elements: !2454)
!2454 = !{!2455, !2460}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2453, file: !111, line: 26, baseType: !2456, size: 64)
!2456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2457, size: 64)
!2457 = !DISubroutineType(types: !2458)
!2458 = !{!175, !2459}
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2453, size: 64)
!2460 = !DIDerivedType(tag: DW_TAG_member, scope: !2453, file: !111, line: 27, baseType: !2461, size: 320, offset: 64)
!2461 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2453, file: !111, line: 27, size: 320, elements: !2462)
!2462 = !{!2463, !2473, !2500}
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !2461, file: !111, line: 36, baseType: !2464, size: 320)
!2464 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2461, file: !111, line: 29, size: 320, elements: !2465)
!2465 = !{!2466, !2468, !2469, !2470, !2471, !2472}
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !2464, file: !111, line: 30, baseType: !2467, size: 64)
!2467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 64)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2464, file: !111, line: 31, baseType: !938, size: 32, offset: 64)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2464, file: !111, line: 32, baseType: !938, size: 32, offset: 96)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !2464, file: !111, line: 33, baseType: !938, size: 32, offset: 128)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2464, file: !111, line: 34, baseType: !987, size: 64, offset: 192)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !2464, file: !111, line: 35, baseType: !2467, size: 64, offset: 256)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !2461, file: !111, line: 46, baseType: !2474, size: 192)
!2474 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2461, file: !111, line: 38, size: 192, elements: !2475)
!2475 = !{!2476, !2477, !2478, !2499}
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2474, file: !111, line: 39, baseType: !2395, size: 32)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2474, file: !111, line: 40, baseType: !110, size: 32, offset: 32)
!2478 = !DIDerivedType(tag: DW_TAG_member, scope: !2474, file: !111, line: 41, baseType: !2479, size: 64, offset: 64)
!2479 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2474, file: !111, line: 41, size: 64, elements: !2480)
!2480 = !{!2481, !2489}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !2479, file: !111, line: 42, baseType: !2482, size: 64)
!2482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2483, size: 64)
!2483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !2484, line: 7, size: 128, elements: !2485)
!2484 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!2485 = !{!2486, !2488}
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2483, file: !2484, line: 8, baseType: !2487, size: 64)
!2487 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !1109, line: 93, baseType: !927)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2483, file: !2484, line: 9, baseType: !927, size: 64, offset: 64)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !2479, file: !111, line: 43, baseType: !2490, size: 64)
!2490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2491, size: 64)
!2491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !2492, line: 7, size: 64, elements: !2493)
!2492 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!2493 = !{!2494, !2498}
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2491, file: !2492, line: 8, baseType: !2495, size: 32)
!2495 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !2492, line: 5, baseType: !2496)
!2496 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !925, line: 20, baseType: !2497)
!2497 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !909, line: 26, baseType: !443)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2491, file: !2492, line: 9, baseType: !2496, size: 32, offset: 32)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2474, file: !111, line: 45, baseType: !987, size: 64, offset: 128)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2461, file: !111, line: 54, baseType: !2501, size: 256)
!2501 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2461, file: !111, line: 48, size: 256, elements: !2502)
!2502 = !{!2503, !2506, !2507, !2508, !2509}
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !2501, file: !111, line: 49, baseType: !2504, size: 64)
!2504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2505, size: 64)
!2505 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !111, line: 14, flags: DIFlagFwdDecl)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !2501, file: !111, line: 50, baseType: !443, size: 32, offset: 64)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !2501, file: !111, line: 51, baseType: !443, size: 32, offset: 96)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2501, file: !111, line: 52, baseType: !898, size: 64, offset: 128)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2501, file: !111, line: 53, baseType: !898, size: 64, offset: 192)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2284, file: !1761, line: 835, baseType: !2511, size: 32, offset: 5120)
!2511 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !889, line: 22, baseType: !2512)
!2512 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !1109, line: 28, baseType: !443)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !2284, file: !1761, line: 836, baseType: !2511, size: 32, offset: 5152)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !2284, file: !1761, line: 840, baseType: !898, size: 64, offset: 5184)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !2284, file: !1761, line: 849, baseType: !2283, size: 64, offset: 5248)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2284, file: !1761, line: 852, baseType: !2283, size: 64, offset: 5312)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2284, file: !1761, line: 857, baseType: !904, size: 128, offset: 5376)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !2284, file: !1761, line: 858, baseType: !904, size: 128, offset: 5504)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !2284, file: !1761, line: 859, baseType: !2283, size: 64, offset: 5632)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !2284, file: !1761, line: 867, baseType: !904, size: 128, offset: 5696)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !2284, file: !1761, line: 868, baseType: !904, size: 128, offset: 5824)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !2284, file: !1761, line: 871, baseType: !2523, size: 64, offset: 5952)
!2523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2524, size: 64)
!2524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !139, line: 59, size: 768, elements: !2525)
!2525 = !{!2526, !2527, !2528, !2529, !2531, !2532, !2533, !2534}
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2524, file: !139, line: 61, baseType: !1882, size: 32)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2524, file: !139, line: 62, baseType: !7, size: 32, offset: 32)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2524, file: !139, line: 63, baseType: !1035, offset: 64)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2524, file: !139, line: 65, baseType: !2530, size: 256, offset: 64)
!2530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1418, size: 256, elements: !1909)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2524, file: !139, line: 66, baseType: !1418, size: 64, offset: 320)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !2524, file: !139, line: 68, baseType: !1954, size: 128, offset: 384)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2524, file: !139, line: 69, baseType: !972, size: 128, align: 64, offset: 512)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !2524, file: !139, line: 70, baseType: !2535, size: 128, offset: 640)
!2535 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2536, size: 128, elements: !899)
!2536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !139, line: 54, size: 128, elements: !2537)
!2537 = !{!2538, !2539}
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !2536, file: !139, line: 55, baseType: !443, size: 32)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2536, file: !139, line: 56, baseType: !2540, size: 64, offset: 64)
!2540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2541, size: 64)
!2541 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !139, line: 56, flags: DIFlagFwdDecl)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !2284, file: !1761, line: 872, baseType: !2543, size: 512, offset: 6016)
!2543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1422, size: 512, elements: !1909)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !2284, file: !1761, line: 873, baseType: !904, size: 128, offset: 6528)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !2284, file: !1761, line: 874, baseType: !904, size: 128, offset: 6656)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !2284, file: !1761, line: 876, baseType: !2547, size: 64, offset: 6784)
!2547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2548, size: 64)
!2548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !2549, line: 26, size: 192, elements: !2550)
!2549 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!2550 = !{!2551, !2552}
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2548, file: !2549, line: 27, baseType: !7, size: 32)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2548, file: !2549, line: 28, baseType: !2553, size: 128, offset: 64)
!2553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !2554, line: 43, size: 128, elements: !2555)
!2554 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!2555 = !{!2556, !2557}
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2553, file: !2554, line: 44, baseType: !1612)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !2553, file: !2554, line: 45, baseType: !904, size: 128)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !2284, file: !1761, line: 879, baseType: !1502, size: 64, offset: 6848)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !2284, file: !1761, line: 882, baseType: !1502, size: 64, offset: 6912)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2284, file: !1761, line: 884, baseType: !987, size: 64, offset: 6976)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2284, file: !1761, line: 885, baseType: !987, size: 64, offset: 7040)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2284, file: !1761, line: 890, baseType: !987, size: 64, offset: 7104)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2284, file: !1761, line: 891, baseType: !2564, size: 128, offset: 7168)
!2564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1761, line: 242, size: 128, elements: !2565)
!2565 = !{!2566, !2567, !2568}
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2564, file: !1761, line: 244, baseType: !987, size: 64)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2564, file: !1761, line: 245, baseType: !987, size: 64, offset: 64)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2564, file: !1761, line: 246, baseType: !1612, offset: 128)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2284, file: !1761, line: 900, baseType: !898, size: 64, offset: 7296)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2284, file: !1761, line: 901, baseType: !898, size: 64, offset: 7360)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !2284, file: !1761, line: 904, baseType: !987, size: 64, offset: 7424)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !2284, file: !1761, line: 907, baseType: !987, size: 64, offset: 7488)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2284, file: !1761, line: 910, baseType: !898, size: 64, offset: 7552)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2284, file: !1761, line: 911, baseType: !898, size: 64, offset: 7616)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2284, file: !1761, line: 914, baseType: !2576, size: 640, offset: 7680)
!2576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !2577, line: 123, size: 640, elements: !2578)
!2577 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!2578 = !{!2579, !2585, !2586}
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !2576, file: !2577, line: 124, baseType: !2580, size: 576)
!2580 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2581, size: 576, elements: !1077)
!2581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !2577, line: 108, size: 192, elements: !2582)
!2582 = !{!2583, !2584}
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !2581, file: !2577, line: 109, baseType: !987, size: 64)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !2581, file: !2577, line: 110, baseType: !2404, size: 128, offset: 64)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !2576, file: !2577, line: 125, baseType: !7, size: 32, offset: 576)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !2576, file: !2577, line: 126, baseType: !7, size: 32, offset: 608)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !2284, file: !1761, line: 917, baseType: !2588, size: 192, offset: 8320)
!2588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !2577, line: 134, size: 192, elements: !2589)
!2589 = !{!2590, !2591}
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2588, file: !2577, line: 135, baseType: !972, size: 128, align: 64)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !2588, file: !2577, line: 136, baseType: !7, size: 32, offset: 128)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !2284, file: !1761, line: 923, baseType: !2593, size: 64, offset: 8512)
!2593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2594, size: 64)
!2594 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2595)
!2595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !2596, line: 111, size: 1280, elements: !2597)
!2596 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!2597 = !{!2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2617, !2618, !2619, !2620, !2621, !2622, !2729, !2730, !2731, !2732, !2758, !2903, !2913}
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2595, file: !2596, line: 112, baseType: !1586, size: 32)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2595, file: !2596, line: 120, baseType: !1219, size: 32, offset: 32)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2595, file: !2596, line: 121, baseType: !1227, size: 32, offset: 64)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !2595, file: !2596, line: 122, baseType: !1219, size: 32, offset: 96)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !2595, file: !2596, line: 123, baseType: !1227, size: 32, offset: 128)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !2595, file: !2596, line: 124, baseType: !1219, size: 32, offset: 160)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !2595, file: !2596, line: 125, baseType: !1227, size: 32, offset: 192)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !2595, file: !2596, line: 126, baseType: !1219, size: 32, offset: 224)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !2595, file: !2596, line: 127, baseType: !1227, size: 32, offset: 256)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !2595, file: !2596, line: 128, baseType: !7, size: 32, offset: 288)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !2595, file: !2596, line: 129, baseType: !2609, size: 64, offset: 320)
!2609 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !2610, line: 26, baseType: !2611)
!2610 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!2611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !2610, line: 24, size: 64, elements: !2612)
!2612 = !{!2613}
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2611, file: !2610, line: 25, baseType: !2614, size: 64)
!2614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !939, size: 64, elements: !2615)
!2615 = !{!2616}
!2616 = !DISubrange(count: 2)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !2595, file: !2596, line: 130, baseType: !2609, size: 64, offset: 384)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !2595, file: !2596, line: 131, baseType: !2609, size: 64, offset: 448)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !2595, file: !2596, line: 132, baseType: !2609, size: 64, offset: 512)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !2595, file: !2596, line: 133, baseType: !2609, size: 64, offset: 576)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !2595, file: !2596, line: 135, baseType: !1211, size: 8, offset: 640)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !2595, file: !2596, line: 137, baseType: !2623, size: 64, offset: 704)
!2623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2624, size: 64)
!2624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !2625, line: 189, size: 1664, elements: !2626)
!2625 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!2626 = !{!2627, !2628, !2631, !2636, !2637, !2640, !2641, !2646, !2647, !2648, !2649, !2651, !2652, !2653, !2654, !2655, !2693, !2714}
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2624, file: !2625, line: 190, baseType: !1882, size: 32)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !2624, file: !2625, line: 191, baseType: !2629, size: 32, offset: 32)
!2629 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !2625, line: 28, baseType: !2630)
!2630 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !889, line: 98, baseType: !2496)
!2631 = !DIDerivedType(tag: DW_TAG_member, scope: !2624, file: !2625, line: 192, baseType: !2632, size: 192, offset: 64)
!2632 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2624, file: !2625, line: 192, size: 192, elements: !2633)
!2633 = !{!2634, !2635}
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !2632, file: !2625, line: 193, baseType: !904, size: 128)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !2632, file: !2625, line: 194, baseType: !1599, size: 192, align: 64)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !2624, file: !2625, line: 199, baseType: !1606, size: 256, offset: 256)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2624, file: !2625, line: 200, baseType: !2638, size: 64, offset: 512)
!2638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2639, size: 64)
!2639 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !2625, line: 200, flags: DIFlagFwdDecl)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !2624, file: !2625, line: 201, baseType: !890, size: 64, offset: 576)
!2641 = !DIDerivedType(tag: DW_TAG_member, scope: !2624, file: !2625, line: 202, baseType: !2642, size: 64, offset: 640)
!2642 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2624, file: !2625, line: 202, size: 64, elements: !2643)
!2643 = !{!2644, !2645}
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !2642, file: !2625, line: 203, baseType: !1320, size: 64)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !2642, file: !2625, line: 204, baseType: !1320, size: 64)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !2624, file: !2625, line: 206, baseType: !1320, size: 64, offset: 704)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2624, file: !2625, line: 207, baseType: !1219, size: 32, offset: 768)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2624, file: !2625, line: 208, baseType: !1227, size: 32, offset: 800)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !2624, file: !2625, line: 209, baseType: !2650, size: 32, offset: 832)
!2650 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !2625, line: 31, baseType: !1339)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !2624, file: !2625, line: 210, baseType: !965, size: 16, offset: 864)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !2624, file: !2625, line: 211, baseType: !965, size: 16, offset: 880)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2624, file: !2625, line: 215, baseType: !1806, size: 16, offset: 896)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2624, file: !2625, line: 222, baseType: !898, size: 64, offset: 960)
!2655 = !DIDerivedType(tag: DW_TAG_member, scope: !2624, file: !2625, line: 239, baseType: !2656, size: 320, offset: 1024)
!2656 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2624, file: !2625, line: 239, size: 320, elements: !2657)
!2657 = !{!2658, !2685}
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !2656, file: !2625, line: 240, baseType: !2659, size: 320)
!2659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !2625, line: 108, size: 320, elements: !2660)
!2660 = !{!2661, !2662, !2674, !2677, !2684}
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2659, file: !2625, line: 110, baseType: !898, size: 64)
!2662 = !DIDerivedType(tag: DW_TAG_member, scope: !2659, file: !2625, line: 111, baseType: !2663, size: 64, offset: 64)
!2663 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2659, file: !2625, line: 111, size: 64, elements: !2664)
!2664 = !{!2665, !2673}
!2665 = !DIDerivedType(tag: DW_TAG_member, scope: !2663, file: !2625, line: 112, baseType: !2666, size: 64)
!2666 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2663, file: !2625, line: 112, size: 64, elements: !2667)
!2667 = !{!2668, !2669}
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !2666, file: !2625, line: 114, baseType: !1697, size: 16)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !2666, file: !2625, line: 115, baseType: !2670, size: 48, offset: 16)
!2670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !961, size: 48, elements: !2671)
!2671 = !{!2672}
!2672 = !DISubrange(count: 6)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2663, file: !2625, line: 121, baseType: !898, size: 64)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2659, file: !2625, line: 123, baseType: !2675, size: 64, offset: 128)
!2675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2676, size: 64)
!2676 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !2625, line: 96, flags: DIFlagFwdDecl)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2659, file: !2625, line: 124, baseType: !2678, size: 64, offset: 192)
!2678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2679, size: 64)
!2679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !2625, line: 102, size: 192, elements: !2680)
!2680 = !{!2681, !2682, !2683}
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2679, file: !2625, line: 103, baseType: !972, size: 128, align: 64)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2679, file: !2625, line: 104, baseType: !1882, size: 32, offset: 128)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !2679, file: !2625, line: 105, baseType: !1011, size: 8, offset: 160)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2659, file: !2625, line: 125, baseType: !1024, size: 64, offset: 256)
!2685 = !DIDerivedType(tag: DW_TAG_member, scope: !2656, file: !2625, line: 241, baseType: !2686, size: 320)
!2686 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2656, file: !2625, line: 241, size: 320, elements: !2687)
!2687 = !{!2688, !2689, !2690, !2691, !2692}
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2686, file: !2625, line: 242, baseType: !898, size: 64)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !2686, file: !2625, line: 243, baseType: !898, size: 64, offset: 64)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2686, file: !2625, line: 244, baseType: !2675, size: 64, offset: 128)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2686, file: !2625, line: 245, baseType: !2678, size: 64, offset: 192)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2686, file: !2625, line: 246, baseType: !1076, size: 64, offset: 256)
!2693 = !DIDerivedType(tag: DW_TAG_member, scope: !2624, file: !2625, line: 254, baseType: !2694, size: 256, offset: 1344)
!2694 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2624, file: !2625, line: 254, size: 256, elements: !2695)
!2695 = !{!2696, !2702}
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !2694, file: !2625, line: 255, baseType: !2697, size: 256)
!2697 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !2625, line: 128, size: 256, elements: !2698)
!2698 = !{!2699, !2700}
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !2697, file: !2625, line: 129, baseType: !890, size: 64)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2697, file: !2625, line: 130, baseType: !2701, size: 256)
!2701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !890, size: 256, elements: !1909)
!2702 = !DIDerivedType(tag: DW_TAG_member, scope: !2694, file: !2625, line: 256, baseType: !2703, size: 256)
!2703 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2694, file: !2625, line: 256, size: 256, elements: !2704)
!2704 = !{!2705, !2706}
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !2703, file: !2625, line: 258, baseType: !904, size: 128)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !2703, file: !2625, line: 259, baseType: !2707, size: 128, offset: 128)
!2707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !2708, line: 22, size: 128, elements: !2709)
!2708 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!2709 = !{!2710, !2713}
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2707, file: !2708, line: 23, baseType: !2711, size: 64)
!2711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2712, size: 64)
!2712 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !2708, line: 23, flags: DIFlagFwdDecl)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !2707, file: !2708, line: 24, baseType: !898, size: 64, offset: 64)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !2624, file: !2625, line: 274, baseType: !2715, size: 64, offset: 1600)
!2715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2716, size: 64)
!2716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !2625, line: 170, size: 192, elements: !2717)
!2717 = !{!2718, !2727, !2728}
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2716, file: !2625, line: 171, baseType: !2719, size: 64)
!2719 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !2625, line: 165, baseType: !2720)
!2720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2721, size: 64)
!2721 = !DISubroutineType(types: !2722)
!2722 = !{!443, !2623, !2723, !2725, !2623}
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 64)
!2724 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2676)
!2725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2726, size: 64)
!2726 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2697)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2716, file: !2625, line: 172, baseType: !2623, size: 64, offset: 64)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !2716, file: !2625, line: 173, baseType: !2675, size: 64, offset: 128)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !2595, file: !2596, line: 138, baseType: !2623, size: 64, offset: 768)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !2595, file: !2596, line: 139, baseType: !2623, size: 64, offset: 832)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !2595, file: !2596, line: 140, baseType: !2623, size: 64, offset: 896)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2595, file: !2596, line: 145, baseType: !2733, size: 64, offset: 960)
!2733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2734, size: 64)
!2734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !2735, line: 13, size: 896, elements: !2736)
!2735 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!2736 = !{!2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747}
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2734, file: !2735, line: 14, baseType: !1882, size: 32)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !2734, file: !2735, line: 15, baseType: !1586, size: 32, offset: 32)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !2734, file: !2735, line: 16, baseType: !1586, size: 32, offset: 64)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !2734, file: !2735, line: 21, baseType: !918, size: 64, offset: 128)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !2734, file: !2735, line: 27, baseType: !898, size: 64, offset: 192)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !2734, file: !2735, line: 28, baseType: !898, size: 64, offset: 256)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !2734, file: !2735, line: 29, baseType: !918, size: 64, offset: 320)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !2734, file: !2735, line: 32, baseType: !1422, size: 128, offset: 384)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2734, file: !2735, line: 33, baseType: !1219, size: 32, offset: 512)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2734, file: !2735, line: 37, baseType: !918, size: 64, offset: 576)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !2734, file: !2735, line: 44, baseType: !2748, size: 256, offset: 640)
!2748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !2749, line: 15, size: 256, elements: !2750)
!2749 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!2750 = !{!2751, !2752, !2753, !2754, !2755, !2756, !2757}
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2748, file: !2749, line: 16, baseType: !1612)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !2748, file: !2749, line: 18, baseType: !443, size: 32)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !2748, file: !2749, line: 19, baseType: !443, size: 32, offset: 32)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !2748, file: !2749, line: 20, baseType: !443, size: 32, offset: 64)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !2748, file: !2749, line: 21, baseType: !443, size: 32, offset: 96)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !2748, file: !2749, line: 22, baseType: !898, size: 64, offset: 128)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2748, file: !2749, line: 23, baseType: !898, size: 64, offset: 192)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2595, file: !2596, line: 146, baseType: !2759, size: 64, offset: 1024)
!2759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2760, size: 64)
!2760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !2761, line: 56, size: 4160, elements: !2762)
!2761 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2762 = !{!2763, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2802, !2803, !2804, !2805, !2806, !2807, !2888, !2889, !2901}
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !2760, file: !2761, line: 57, baseType: !2764, size: 576)
!2764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !2761, line: 23, size: 576, elements: !2765)
!2765 = !{!2766, !2767}
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !2764, file: !2761, line: 24, baseType: !938, size: 32)
!2767 = !DIDerivedType(tag: DW_TAG_member, scope: !2764, file: !2761, line: 25, baseType: !2768, size: 512, offset: 64)
!2768 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2764, file: !2761, line: 25, size: 512, elements: !2769)
!2769 = !{!2770, !2779}
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !2768, file: !2761, line: 26, baseType: !2771, size: 480)
!2771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2772, size: 480, elements: !2777)
!2772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !2761, line: 17, size: 96, elements: !2773)
!2773 = !{!2774, !2775, !2776}
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2772, file: !2761, line: 18, baseType: !938, size: 32)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !2772, file: !2761, line: 19, baseType: !938, size: 32, offset: 32)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2772, file: !2761, line: 20, baseType: !938, size: 32, offset: 64)
!2777 = !{!2778}
!2778 = !DISubrange(count: 5)
!2779 = !DIDerivedType(tag: DW_TAG_member, scope: !2768, file: !2761, line: 27, baseType: !2780, size: 128)
!2780 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2768, file: !2761, line: 27, size: 128, elements: !2781)
!2781 = !{!2782, !2784}
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !2780, file: !2761, line: 28, baseType: !2783, size: 64)
!2783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2772, size: 64)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !2780, file: !2761, line: 29, baseType: !2783, size: 64, offset: 64)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !2760, file: !2761, line: 58, baseType: !2764, size: 576, offset: 576)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !2760, file: !2761, line: 59, baseType: !2764, size: 576, offset: 1152)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2760, file: !2761, line: 60, baseType: !1586, size: 32, offset: 1728)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2760, file: !2761, line: 61, baseType: !2759, size: 64, offset: 1792)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2760, file: !2761, line: 62, baseType: !443, size: 32, offset: 1856)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2760, file: !2761, line: 63, baseType: !1219, size: 32, offset: 1888)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2760, file: !2761, line: 64, baseType: !1227, size: 32, offset: 1920)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2760, file: !2761, line: 65, baseType: !2793, size: 192, offset: 1984)
!2793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !2794, line: 7, size: 192, elements: !2795)
!2794 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!2795 = !{!2796, !2797, !2801}
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !2793, file: !2794, line: 8, baseType: !918, size: 64)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2793, file: !2794, line: 9, baseType: !2798, size: 64, offset: 64)
!2798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2799, size: 64)
!2799 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2800)
!2800 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !2794, line: 5, flags: DIFlagFwdDecl)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !2793, file: !2794, line: 10, baseType: !7, size: 32, offset: 128)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2760, file: !2761, line: 66, baseType: !898, size: 64, offset: 2176)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !2760, file: !2761, line: 74, baseType: !904, size: 128, offset: 2240)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !2760, file: !2761, line: 75, baseType: !2623, size: 64, offset: 2368)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !2760, file: !2761, line: 76, baseType: !1606, size: 256, offset: 2432)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2760, file: !2761, line: 83, baseType: !915, size: 256, offset: 2688)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2760, file: !2761, line: 85, baseType: !2808, size: 768, offset: 2944)
!2808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !2809, line: 156, size: 768, elements: !2810)
!2809 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!2810 = !{!2811, !2816}
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !2808, file: !2809, line: 157, baseType: !2812, size: 64)
!2812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2813, size: 64)
!2813 = !DISubroutineType(types: !2814)
!2814 = !{!443, !2815}
!2815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2808, size: 64)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2808, file: !2809, line: 158, baseType: !2817, size: 704, offset: 64)
!2817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !2809, line: 150, size: 704, elements: !2818)
!2818 = !{!2819, !2887}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2817, file: !2809, line: 152, baseType: !2820, size: 640)
!2820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !2809, line: 131, size: 640, elements: !2821)
!2821 = !{!2822, !2855, !2856, !2857, !2877, !2878, !2880, !2886}
!2822 = !DIDerivedType(tag: DW_TAG_member, scope: !2820, file: !2809, line: 132, baseType: !2823, size: 192)
!2823 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2820, file: !2809, line: 132, size: 192, elements: !2824)
!2824 = !{!2825, !2854}
!2825 = !DIDerivedType(tag: DW_TAG_member, scope: !2823, file: !2809, line: 133, baseType: !2826, size: 192)
!2826 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2823, file: !2809, line: 133, size: 192, elements: !2827)
!2827 = !{!2828, !2851, !2852, !2853}
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !2826, file: !2809, line: 134, baseType: !2829, size: 64)
!2829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2830, size: 64)
!2830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !2809, line: 112, size: 512, elements: !2831)
!2831 = !{!2832, !2833, !2834, !2835, !2836, !2837, !2843, !2849, !2850}
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !2830, file: !2809, line: 113, baseType: !1024, size: 64)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2830, file: !2809, line: 114, baseType: !890, size: 64, offset: 64)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !2830, file: !2809, line: 115, baseType: !443, size: 32, offset: 128)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2830, file: !2809, line: 116, baseType: !1116, size: 16, offset: 160)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !2830, file: !2809, line: 117, baseType: !2829, size: 64, offset: 192)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !2830, file: !2809, line: 118, baseType: !2838, size: 64, offset: 256)
!2838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2839, size: 64)
!2839 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !2809, line: 47, baseType: !2840)
!2840 = !DISubroutineType(types: !2841)
!2841 = !{!443, !2829, !443, !890, !2842, !1535}
!2842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 64)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2830, file: !2809, line: 119, baseType: !2844, size: 64, offset: 320)
!2844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2845, size: 64)
!2845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !2809, line: 94, size: 192, elements: !2846)
!2846 = !{!2847, !2848}
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2845, file: !2809, line: 95, baseType: !1586, size: 32)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2845, file: !2809, line: 96, baseType: !1954, size: 128, offset: 64)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !2830, file: !2809, line: 120, baseType: !890, size: 64, offset: 384)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !2830, file: !2809, line: 121, baseType: !890, size: 64, offset: 448)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2826, file: !2809, line: 135, baseType: !443, size: 32, offset: 64)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2826, file: !2809, line: 136, baseType: !443, size: 32, offset: 96)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !2826, file: !2809, line: 137, baseType: !443, size: 32, offset: 128)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2823, file: !2809, line: 139, baseType: !972, size: 128, align: 64)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !2820, file: !2809, line: 141, baseType: !2547, size: 64, offset: 192)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !2820, file: !2809, line: 142, baseType: !2829, size: 64, offset: 256)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2820, file: !2809, line: 143, baseType: !2858, size: 64, offset: 320)
!2858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2859, size: 64)
!2859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !2809, line: 161, size: 960, elements: !2860)
!2860 = !{!2861, !2862, !2866, !2873}
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !2859, file: !2809, line: 162, baseType: !2808, size: 768)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !2859, file: !2809, line: 163, baseType: !2863, size: 64, offset: 768)
!2863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2864, size: 64)
!2864 = !DISubroutineType(types: !2865)
!2865 = !{!2815, !2858}
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !2859, file: !2809, line: 164, baseType: !2867, size: 64, offset: 832)
!2867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2868, size: 64)
!2868 = !DISubroutineType(types: !2869)
!2869 = !{null, !2870, !2829, !2871, !2872}
!2870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2820, size: 64)
!2871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 64)
!2872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !2859, file: !2809, line: 167, baseType: !2874, size: 64, offset: 896)
!2874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2875, size: 64)
!2875 = !DISubroutineType(types: !2876)
!2876 = !{!443, !2870, !2829}
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2820, file: !2809, line: 144, baseType: !2815, size: 64, offset: 384)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2820, file: !2809, line: 145, baseType: !2879, size: 64, offset: 448)
!2879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2817, size: 64)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2820, file: !2809, line: 146, baseType: !2881, size: 64, offset: 512)
!2881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2882, size: 64)
!2882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !2809, line: 124, size: 256, elements: !2883)
!2883 = !{!2884, !2885}
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2882, file: !2809, line: 125, baseType: !1599, size: 192, align: 64)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2882, file: !2809, line: 126, baseType: !2870, size: 64, offset: 192)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2820, file: !2809, line: 147, baseType: !1418, size: 64, offset: 576)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2817, file: !2809, line: 153, baseType: !1595, size: 64, offset: 640)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !2760, file: !2761, line: 86, baseType: !2870, size: 64, offset: 3712)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2760, file: !2761, line: 88, baseType: !2890, size: 64, offset: 3776)
!2890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2891, size: 64)
!2891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !2761, line: 92, size: 576, elements: !2892)
!2892 = !{!2893, !2894, !2895, !2896, !2897}
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2891, file: !2761, line: 93, baseType: !1422, size: 128)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2891, file: !2761, line: 94, baseType: !2759, size: 64, offset: 128)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2891, file: !2761, line: 95, baseType: !1219, size: 32, offset: 192)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2891, file: !2761, line: 96, baseType: !443, size: 32, offset: 224)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !2891, file: !2761, line: 97, baseType: !2898, size: 320, offset: 256)
!2898 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1586, size: 320, elements: !2899)
!2899 = !{!2900}
!2900 = !DISubrange(count: 10)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !2760, file: !2761, line: 89, baseType: !2902, size: 320, offset: 3840)
!2902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 320, elements: !2899)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !2595, file: !2596, line: 147, baseType: !2904, size: 64, offset: 1088)
!2904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2905, size: 64)
!2905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !2596, line: 25, size: 64, elements: !2906)
!2906 = !{!2907, !2908, !2909}
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2905, file: !2596, line: 26, baseType: !1586, size: 32)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !2905, file: !2596, line: 27, baseType: !443, size: 32, offset: 32)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2905, file: !2596, line: 28, baseType: !2910, offset: 64)
!2910 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1227, elements: !2911)
!2911 = !{!2912}
!2912 = !DISubrange(count: 0)
!2913 = !DIDerivedType(tag: DW_TAG_member, scope: !2595, file: !2596, line: 149, baseType: !2914, size: 128, offset: 1152)
!2914 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2595, file: !2596, line: 149, size: 128, elements: !2915)
!2915 = !{!2916, !2917}
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !2914, file: !2596, line: 150, baseType: !443, size: 32)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2914, file: !2596, line: 151, baseType: !972, size: 128, align: 64)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !2284, file: !1761, line: 926, baseType: !2593, size: 64, offset: 8576)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !2284, file: !1761, line: 929, baseType: !2593, size: 64, offset: 8640)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !2284, file: !1761, line: 933, baseType: !2623, size: 64, offset: 8704)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !2284, file: !1761, line: 943, baseType: !2922, size: 128, offset: 8768)
!2922 = !DICompositeType(tag: DW_TAG_array_type, baseType: !961, size: 128, elements: !2923)
!2923 = !{!2924}
!2924 = !DISubrange(count: 16)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !2284, file: !1761, line: 945, baseType: !2926, size: 64, offset: 8896)
!2926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2927, size: 64)
!2927 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1761, line: 49, flags: DIFlagFwdDecl)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !2284, file: !1761, line: 956, baseType: !2929, size: 64, offset: 8960)
!2929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2930, size: 64)
!2930 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1761, line: 45, flags: DIFlagFwdDecl)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2284, file: !1761, line: 959, baseType: !2932, size: 64, offset: 9024)
!2932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2933, size: 64)
!2933 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1761, line: 959, flags: DIFlagFwdDecl)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !2284, file: !1761, line: 962, baseType: !2935, size: 64, offset: 9088)
!2935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2936, size: 64)
!2936 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1761, line: 66, flags: DIFlagFwdDecl)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !2284, file: !1761, line: 966, baseType: !2938, size: 64, offset: 9152)
!2938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2939, size: 64)
!2939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !2940, line: 31, size: 576, elements: !2941)
!2940 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!2941 = !{!2942, !2943, !2946, !2949, !2952, !2953, !2956, !2959, !2960}
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2939, file: !2940, line: 32, baseType: !1586, size: 32)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !2939, file: !2940, line: 33, baseType: !2944, size: 64, offset: 64)
!2944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2945, size: 64)
!2945 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !2940, line: 9, flags: DIFlagFwdDecl)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !2939, file: !2940, line: 34, baseType: !2947, size: 64, offset: 128)
!2947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2948, size: 64)
!2948 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !2940, line: 10, flags: DIFlagFwdDecl)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !2939, file: !2940, line: 35, baseType: !2950, size: 64, offset: 192)
!2950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2951, size: 64)
!2951 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !2940, line: 8, flags: DIFlagFwdDecl)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !2939, file: !2940, line: 36, baseType: !2540, size: 64, offset: 256)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !2939, file: !2940, line: 37, baseType: !2954, size: 64, offset: 320)
!2954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2955, size: 64)
!2955 = !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !2625, line: 34, flags: DIFlagFwdDecl)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !2939, file: !2940, line: 38, baseType: !2957, size: 64, offset: 384)
!2957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2958, size: 64)
!2958 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !2940, line: 38, flags: DIFlagFwdDecl)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !2939, file: !2940, line: 39, baseType: !2957, size: 64, offset: 448)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !2939, file: !2940, line: 40, baseType: !2961, size: 64, offset: 512)
!2961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2962, size: 64)
!2962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !2963, line: 856, size: 448, elements: !2964)
!2963 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!2964 = !{!2965, !2966, !2967, !2968, !2969}
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2962, file: !2963, line: 857, baseType: !1882, size: 32)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2962, file: !2963, line: 858, baseType: !2793, size: 192, offset: 64)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2962, file: !2963, line: 859, baseType: !2759, size: 64, offset: 256)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2962, file: !2963, line: 860, baseType: !2890, size: 64, offset: 320)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !2962, file: !2963, line: 861, baseType: !2970, size: 64, offset: 384)
!2970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2971, size: 64)
!2971 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !2972, line: 16, flags: DIFlagFwdDecl)
!2972 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2284, file: !1761, line: 969, baseType: !2974, size: 64, offset: 9216)
!2974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2975, size: 64)
!2975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !2976, line: 82, size: 7296, elements: !2977)
!2976 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!2977 = !{!2978, !2979, !2980, !2981, !2982, !2983, !2984, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3013, !3022, !3023, !3025, !3026, !3027, !3030, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3060, !3061, !3068, !3069, !3070, !3071, !3072, !3073}
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !2975, file: !2976, line: 83, baseType: !1882, size: 32)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !2975, file: !2976, line: 84, baseType: !1586, size: 32, offset: 32)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2975, file: !2976, line: 85, baseType: !443, size: 32, offset: 64)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !2975, file: !2976, line: 86, baseType: !904, size: 128, offset: 128)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !2975, file: !2976, line: 88, baseType: !1954, size: 128, offset: 256)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !2975, file: !2976, line: 91, baseType: !2283, size: 64, offset: 384)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !2975, file: !2976, line: 94, baseType: !2985, size: 192, offset: 448)
!2985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !2986, line: 30, size: 192, elements: !2987)
!2986 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!2987 = !{!2988, !2989}
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2985, file: !2986, line: 31, baseType: !904, size: 128)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2985, file: !2986, line: 32, baseType: !2990, size: 64, offset: 128)
!2990 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !2991, line: 25, baseType: !2992)
!2991 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!2992 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2991, line: 23, size: 64, elements: !2993)
!2993 = !{!2994}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !2992, file: !2991, line: 24, baseType: !897, size: 64)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !2975, file: !2976, line: 97, baseType: !1418, size: 64, offset: 640)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !2975, file: !2976, line: 100, baseType: !443, size: 32, offset: 704)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !2975, file: !2976, line: 106, baseType: !443, size: 32, offset: 736)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !2975, file: !2976, line: 107, baseType: !2283, size: 64, offset: 768)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !2975, file: !2976, line: 110, baseType: !443, size: 32, offset: 832)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2975, file: !2976, line: 111, baseType: !7, size: 32, offset: 864)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !2975, file: !2976, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !2975, file: !2976, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !2975, file: !2976, line: 128, baseType: !443, size: 32, offset: 928)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !2975, file: !2976, line: 129, baseType: !904, size: 128, offset: 960)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !2975, file: !2976, line: 132, baseType: !2353, size: 512, offset: 1088)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !2975, file: !2976, line: 133, baseType: !2361, size: 64, offset: 1600)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !2975, file: !2976, line: 140, baseType: !3008, size: 256, offset: 1664)
!3008 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3009, size: 256, elements: !2615)
!3009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !2976, line: 38, size: 128, elements: !3010)
!3010 = !{!3011, !3012}
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3009, file: !2976, line: 39, baseType: !987, size: 64)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !3009, file: !2976, line: 40, baseType: !987, size: 64, offset: 64)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !2975, file: !2976, line: 146, baseType: !3014, size: 192, offset: 1920)
!3014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !2976, line: 66, size: 192, elements: !3015)
!3015 = !{!3016}
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !3014, file: !2976, line: 67, baseType: !3017, size: 192)
!3017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !2976, line: 47, size: 192, elements: !3018)
!3018 = !{!3019, !3020, !3021}
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3017, file: !2976, line: 48, baseType: !920, size: 64)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3017, file: !2976, line: 49, baseType: !920, size: 64, offset: 64)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !3017, file: !2976, line: 50, baseType: !920, size: 64, offset: 128)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2975, file: !2976, line: 150, baseType: !2576, size: 640, offset: 2112)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !2975, file: !2976, line: 153, baseType: !3024, size: 256, offset: 2752)
!3024 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2523, size: 256, elements: !1909)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !2975, file: !2976, line: 159, baseType: !2523, size: 64, offset: 3008)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !2975, file: !2976, line: 162, baseType: !443, size: 32, offset: 3072)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !2975, file: !2976, line: 164, baseType: !3028, size: 64, offset: 3136)
!3028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3029, size: 64)
!3029 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !2976, line: 164, flags: DIFlagFwdDecl)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !2975, file: !2976, line: 175, baseType: !3031, size: 32, offset: 3200)
!3031 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !1179, line: 805, baseType: !3032)
!3032 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1179, line: 798, size: 32, elements: !3033)
!3033 = !{!3034, !3035}
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !3032, file: !1179, line: 803, baseType: !1178, size: 32)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3032, file: !1179, line: 804, baseType: !1035, offset: 32)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2975, file: !2976, line: 176, baseType: !987, size: 64, offset: 3264)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2975, file: !2976, line: 176, baseType: !987, size: 64, offset: 3328)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !2975, file: !2976, line: 176, baseType: !987, size: 64, offset: 3392)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !2975, file: !2976, line: 176, baseType: !987, size: 64, offset: 3456)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2975, file: !2976, line: 177, baseType: !987, size: 64, offset: 3520)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !2975, file: !2976, line: 178, baseType: !987, size: 64, offset: 3584)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2975, file: !2976, line: 179, baseType: !2564, size: 128, offset: 3648)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2975, file: !2976, line: 180, baseType: !898, size: 64, offset: 3776)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2975, file: !2976, line: 180, baseType: !898, size: 64, offset: 3840)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !2975, file: !2976, line: 180, baseType: !898, size: 64, offset: 3904)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !2975, file: !2976, line: 180, baseType: !898, size: 64, offset: 3968)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2975, file: !2976, line: 181, baseType: !898, size: 64, offset: 4032)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2975, file: !2976, line: 181, baseType: !898, size: 64, offset: 4096)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !2975, file: !2976, line: 181, baseType: !898, size: 64, offset: 4160)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !2975, file: !2976, line: 181, baseType: !898, size: 64, offset: 4224)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !2975, file: !2976, line: 182, baseType: !898, size: 64, offset: 4288)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !2975, file: !2976, line: 182, baseType: !898, size: 64, offset: 4352)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !2975, file: !2976, line: 182, baseType: !898, size: 64, offset: 4416)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !2975, file: !2976, line: 182, baseType: !898, size: 64, offset: 4480)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !2975, file: !2976, line: 183, baseType: !898, size: 64, offset: 4544)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !2975, file: !2976, line: 183, baseType: !898, size: 64, offset: 4608)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2975, file: !2976, line: 184, baseType: !3058, offset: 4672)
!3058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !3059, line: 12, elements: !1049)
!3059 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !2975, file: !2976, line: 192, baseType: !910, size: 64, offset: 4672)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !2975, file: !2976, line: 203, baseType: !3062, size: 2048, offset: 4736)
!3062 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3063, size: 2048, elements: !2923)
!3063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !3064, line: 43, size: 128, elements: !3065)
!3064 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!3065 = !{!3066, !3067}
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !3063, file: !3064, line: 44, baseType: !1123, size: 64)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !3063, file: !3064, line: 45, baseType: !1123, size: 64, offset: 64)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !2975, file: !2976, line: 220, baseType: !1011, size: 8, offset: 6784)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !2975, file: !2976, line: 221, baseType: !1806, size: 16, offset: 6800)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !2975, file: !2976, line: 222, baseType: !1806, size: 16, offset: 6816)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !2975, file: !2976, line: 224, baseType: !2050, size: 64, offset: 6848)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !2975, file: !2976, line: 227, baseType: !1520, size: 192, offset: 6912)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !2975, file: !2976, line: 233, baseType: !1520, size: 192, offset: 7104)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !2284, file: !1761, line: 970, baseType: !3075, size: 64, offset: 9280)
!3075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3076, size: 64)
!3076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !2976, line: 20, size: 16576, elements: !3077)
!3077 = !{!3078, !3079, !3080, !3081}
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !3076, file: !2976, line: 21, baseType: !1035)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3076, file: !2976, line: 22, baseType: !1882, size: 32)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !3076, file: !2976, line: 23, baseType: !1954, size: 128, offset: 64)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3076, file: !2976, line: 24, baseType: !3082, size: 16384, offset: 192)
!3082 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3083, size: 16384, elements: !1081)
!3083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !2986, line: 49, size: 256, elements: !3084)
!3084 = !{!3085}
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !3083, file: !2986, line: 50, baseType: !3086, size: 256)
!3086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !2986, line: 35, size: 256, elements: !3087)
!3087 = !{!3088, !3095, !3096, !3102}
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !3086, file: !2986, line: 37, baseType: !3089, size: 64)
!3089 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !3090, line: 19, baseType: !3091)
!3090 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!3091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3092, size: 64)
!3092 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !3090, line: 18, baseType: !3093)
!3093 = !DISubroutineType(types: !3094)
!3094 = !{null, !443}
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !3086, file: !2986, line: 38, baseType: !898, size: 64, offset: 64)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !3086, file: !2986, line: 44, baseType: !3097, size: 64, offset: 128)
!3097 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !3090, line: 22, baseType: !3098)
!3098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3099, size: 64)
!3099 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !3090, line: 21, baseType: !3100)
!3100 = !DISubroutineType(types: !3101)
!3101 = !{null}
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !3086, file: !2986, line: 46, baseType: !2990, size: 64, offset: 192)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !2284, file: !1761, line: 971, baseType: !2990, size: 64, offset: 9344)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !2284, file: !1761, line: 972, baseType: !2990, size: 64, offset: 9408)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !2284, file: !1761, line: 974, baseType: !2990, size: 64, offset: 9472)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !2284, file: !1761, line: 975, baseType: !2985, size: 192, offset: 9536)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !2284, file: !1761, line: 976, baseType: !898, size: 64, offset: 9728)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !2284, file: !1761, line: 977, baseType: !1121, size: 64, offset: 9792)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !2284, file: !1761, line: 978, baseType: !7, size: 32, offset: 9856)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !2284, file: !1761, line: 980, baseType: !975, size: 64, offset: 9920)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !2284, file: !1761, line: 989, baseType: !3112, size: 128, offset: 9984)
!3112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !3113, line: 35, size: 128, elements: !3114)
!3113 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!3114 = !{!3115, !3116, !3117}
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3112, file: !3113, line: 36, baseType: !443, size: 32)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !3112, file: !3113, line: 37, baseType: !1586, size: 32, offset: 32)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3112, file: !3113, line: 38, baseType: !3118, size: 64, offset: 64)
!3118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3119, size: 64)
!3119 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !3113, line: 23, flags: DIFlagFwdDecl)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !2284, file: !1761, line: 992, baseType: !987, size: 64, offset: 10112)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !2284, file: !1761, line: 993, baseType: !987, size: 64, offset: 10176)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !2284, file: !1761, line: 996, baseType: !1035, offset: 10240)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !2284, file: !1761, line: 999, baseType: !1612, offset: 10240)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !2284, file: !1761, line: 1001, baseType: !3125, size: 64, offset: 10240)
!3125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1761, line: 636, size: 64, elements: !3126)
!3126 = !{!3127}
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3125, file: !1761, line: 637, baseType: !3128, size: 64)
!3128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3125, size: 64)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !2284, file: !1761, line: 1005, baseType: !1591, size: 128, offset: 10304)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !2284, file: !1761, line: 1007, baseType: !2283, size: 64, offset: 10432)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !2284, file: !1761, line: 1009, baseType: !3132, size: 64, offset: 10496)
!3132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3133, size: 64)
!3133 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1761, line: 1009, flags: DIFlagFwdDecl)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !2284, file: !1761, line: 1043, baseType: !890, size: 64, offset: 10560)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !2284, file: !1761, line: 1046, baseType: !3136, size: 64, offset: 10624)
!3136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3137, size: 64)
!3137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !3138, line: 554, size: 128, elements: !3139)
!3138 = !DIFile(filename: "./include/linux/bio.h", directory: "/home/lizy2001/genbc/linux")
!3139 = !{!3140, !3225}
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3137, file: !3138, line: 555, baseType: !3141, size: 64)
!3141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3142, size: 64)
!3142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio", file: !855, line: 203, size: 832, elements: !3143)
!3143 = !{!3144, !3145, !3146, !3147, !3148, !3149, !3150, !3152, !3153, !3154, !3161, !3166, !3167, !3186, !3187, !3188, !3189, !3190, !3224}
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "bi_next", scope: !3142, file: !855, line: 204, baseType: !3141, size: 64)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "bi_disk", scope: !3142, file: !855, line: 205, baseType: !952, size: 64, offset: 64)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "bi_opf", scope: !3142, file: !855, line: 206, baseType: !7, size: 32, offset: 128)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "bi_flags", scope: !3142, file: !855, line: 210, baseType: !965, size: 16, offset: 160)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "bi_ioprio", scope: !3142, file: !855, line: 211, baseType: !965, size: 16, offset: 176)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "bi_write_hint", scope: !3142, file: !855, line: 212, baseType: !965, size: 16, offset: 192)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "bi_status", scope: !3142, file: !855, line: 213, baseType: !3151, size: 8, offset: 208)
!3151 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_status_t", file: !855, line: 58, baseType: !1862)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "bi_partno", scope: !3142, file: !855, line: 214, baseType: !1862, size: 8, offset: 216)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_remaining", scope: !3142, file: !855, line: 215, baseType: !1586, size: 32, offset: 224)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "bi_iter", scope: !3142, file: !855, line: 217, baseType: !3155, size: 192, offset: 256)
!3155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bvec_iter", file: !1753, line: 37, size: 192, elements: !3156)
!3156 = !{!3157, !3158, !3159, !3160}
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "bi_sector", scope: !3155, file: !1753, line: 38, baseType: !986, size: 64)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "bi_size", scope: !3155, file: !1753, line: 40, baseType: !7, size: 32, offset: 64)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "bi_idx", scope: !3155, file: !1753, line: 42, baseType: !7, size: 32, offset: 96)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "bi_bvec_done", scope: !3155, file: !1753, line: 44, baseType: !7, size: 32, offset: 128)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "bi_end_io", scope: !3142, file: !855, line: 219, baseType: !3162, size: 64, offset: 448)
!3162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3163, size: 64)
!3163 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_end_io_t", file: !855, line: 19, baseType: !3164)
!3164 = !DISubroutineType(types: !3165)
!3165 = !{null, !3141}
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "bi_private", scope: !3142, file: !855, line: 221, baseType: !890, size: 64, offset: 512)
!3167 = !DIDerivedType(tag: DW_TAG_member, scope: !3142, file: !855, line: 240, baseType: !3168, size: 64, offset: 576)
!3168 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3142, file: !855, line: 240, size: 64, elements: !3169)
!3169 = !{!3170}
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "bi_integrity", scope: !3168, file: !855, line: 242, baseType: !3171, size: 64)
!3171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3172, size: 64)
!3172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_integrity_payload", file: !3138, line: 313, size: 832, elements: !3173)
!3173 = !{!3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3184}
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "bip_bio", scope: !3172, file: !3138, line: 314, baseType: !3141, size: 64)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "bip_iter", scope: !3172, file: !3138, line: 316, baseType: !3155, size: 192, offset: 64)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "bip_slab", scope: !3172, file: !3138, line: 318, baseType: !965, size: 16, offset: 256)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vcnt", scope: !3172, file: !3138, line: 319, baseType: !965, size: 16, offset: 272)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "bip_max_vcnt", scope: !3172, file: !3138, line: 320, baseType: !965, size: 16, offset: 288)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "bip_flags", scope: !3172, file: !3138, line: 321, baseType: !965, size: 16, offset: 304)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "bio_iter", scope: !3172, file: !3138, line: 323, baseType: !3155, size: 192, offset: 320)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "bip_work", scope: !3172, file: !3138, line: 325, baseType: !915, size: 256, offset: 512)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vec", scope: !3172, file: !3138, line: 327, baseType: !3183, size: 64, offset: 768)
!3183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 64)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "bip_inline_vecs", scope: !3172, file: !3138, line: 328, baseType: !3185, offset: 832)
!3185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1752, elements: !1975)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "bi_vcnt", scope: !3142, file: !855, line: 246, baseType: !965, size: 16, offset: 640)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "bi_max_vecs", scope: !3142, file: !855, line: 252, baseType: !965, size: 16, offset: 656)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_cnt", scope: !3142, file: !855, line: 254, baseType: !1586, size: 32, offset: 672)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "bi_io_vec", scope: !3142, file: !855, line: 256, baseType: !3183, size: 64, offset: 704)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "bi_pool", scope: !3142, file: !855, line: 258, baseType: !3191, size: 64, offset: 768)
!3191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3192, size: 64)
!3192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_set", file: !3138, line: 682, size: 2368, elements: !3193)
!3193 = !{!3194, !3195, !3196, !3217, !3218, !3219, !3220, !3221, !3222, !3223}
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "bio_slab", scope: !3192, file: !3138, line: 683, baseType: !2010, size: 64)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "front_pad", scope: !3192, file: !3138, line: 684, baseType: !7, size: 32, offset: 64)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "bio_pool", scope: !3192, file: !3138, line: 686, baseType: !3197, size: 448, offset: 128)
!3197 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !3198, line: 26, baseType: !3199)
!3198 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!3199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !3198, line: 16, size: 448, elements: !3200)
!3200 = !{!3201, !3202, !3203, !3204, !3205, !3206, !3211, !3216}
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3199, file: !3198, line: 17, baseType: !1035)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !3199, file: !3198, line: 18, baseType: !443, size: 32)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !3199, file: !3198, line: 19, baseType: !443, size: 32, offset: 32)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !3199, file: !3198, line: 20, baseType: !1660, size: 64, offset: 64)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !3199, file: !3198, line: 22, baseType: !890, size: 64, offset: 128)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3199, file: !3198, line: 23, baseType: !3207, size: 64, offset: 192)
!3207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3208, size: 64)
!3208 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !3198, line: 13, baseType: !3209)
!3209 = !DISubroutineType(types: !3210)
!3210 = !{!890, !888, !890}
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3199, file: !3198, line: 24, baseType: !3212, size: 64, offset: 256)
!3212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3213, size: 64)
!3213 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !3198, line: 14, baseType: !3214)
!3214 = !DISubroutineType(types: !3215)
!3215 = !{null, !890, !890}
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !3199, file: !3198, line: 25, baseType: !1954, size: 128, offset: 320)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_pool", scope: !3192, file: !3138, line: 687, baseType: !3197, size: 448, offset: 576)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "bio_integrity_pool", scope: !3192, file: !3138, line: 689, baseType: !3197, size: 448, offset: 1024)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_integrity_pool", scope: !3192, file: !3138, line: 690, baseType: !3197, size: 448, offset: 1472)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_lock", scope: !3192, file: !3138, line: 697, baseType: !1035, offset: 1920)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_list", scope: !3192, file: !3138, line: 698, baseType: !3137, size: 128, offset: 1920)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_work", scope: !3192, file: !3138, line: 699, baseType: !915, size: 256, offset: 2048)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_workqueue", scope: !3192, file: !3138, line: 700, baseType: !1947, size: 64, offset: 2304)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "bi_inline_vecs", scope: !3142, file: !855, line: 265, baseType: !3185, offset: 832)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3137, file: !3138, line: 556, baseType: !3141, size: 64, offset: 64)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !2284, file: !1761, line: 1050, baseType: !3227, size: 64, offset: 10688)
!3227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3228, size: 64)
!3228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !71, line: 1236, size: 320, elements: !3229)
!3229 = !{!3230, !3231, !3232, !3233, !3234}
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "mq_list", scope: !3228, file: !71, line: 1237, baseType: !904, size: 128)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !3228, file: !71, line: 1238, baseType: !904, size: 128, offset: 128)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "rq_count", scope: !3228, file: !71, line: 1239, baseType: !965, size: 16, offset: 256)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_queues", scope: !3228, file: !71, line: 1240, baseType: !1011, size: 8, offset: 272)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "nowait", scope: !3228, file: !71, line: 1241, baseType: !1011, size: 8, offset: 280)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !2284, file: !1761, line: 1054, baseType: !3236, size: 64, offset: 10752)
!3236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3237, size: 64)
!3237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1802, line: 131, size: 64, elements: !3238)
!3238 = !{!3239}
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "reclaimed_slab", scope: !3237, file: !1802, line: 132, baseType: !898, size: 64)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !2284, file: !1761, line: 1056, baseType: !1869, size: 64, offset: 10816)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !2284, file: !1761, line: 1058, baseType: !3242, size: 64, offset: 10880)
!3242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3243, size: 64)
!3243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !3244, line: 99, size: 704, elements: !3245)
!3244 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!3245 = !{!3246, !3247, !3248, !3249, !3250, !3251, !3252, !3868, !3869}
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3243, file: !3244, line: 100, baseType: !918, size: 64)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !3243, file: !3244, line: 101, baseType: !1586, size: 32, offset: 64)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !3243, file: !3244, line: 102, baseType: !1586, size: 32, offset: 96)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3243, file: !3244, line: 105, baseType: !1035, offset: 128)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !3243, file: !3244, line: 107, baseType: !965, size: 16, offset: 128)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !3243, file: !3244, line: 109, baseType: !1578, size: 128, offset: 192)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !3243, file: !3244, line: 110, baseType: !3253, size: 64, offset: 320)
!3253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3254, size: 64)
!3254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !3244, line: 73, size: 448, elements: !3255)
!3255 = !{!3256, !3856, !3857, !3862, !3867}
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !3254, file: !3244, line: 74, baseType: !3257, size: 64)
!3257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3258, size: 64)
!3258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !71, line: 399, size: 14464, elements: !3259)
!3259 = !{!3260, !3440, !3562, !3563, !3566, !3569, !3664, !3665, !3666, !3668, !3669, !3670, !3671, !3672, !3673, !3674, !3675, !3676, !3677, !3678, !3714, !3715, !3716, !3717, !3718, !3719, !3720, !3721, !3722, !3725, !3734, !3735, !3736, !3737, !3738, !3768, !3769, !3770, !3771, !3772, !3773, !3774, !3775, !3776, !3777, !3778, !3779, !3780, !3781, !3782, !3845, !3846, !3847, !3848, !3849, !3850, !3851, !3852, !3853, !3854}
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "last_merge", scope: !3258, file: !71, line: 400, baseType: !3261, size: 64)
!3261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3262, size: 64)
!3262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request", file: !71, line: 130, size: 2176, elements: !3263)
!3263 = !{!3264, !3265, !3268, !3351, !3352, !3354, !3355, !3356, !3357, !3358, !3359, !3360, !3361, !3366, !3373, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399, !3400, !3401, !3402, !3403, !3404, !3405, !3438, !3439}
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !3262, file: !71, line: 131, baseType: !3257, size: 64)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ctx", scope: !3262, file: !71, line: 132, baseType: !3266, size: 64, offset: 64)
!3266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3267, size: 64)
!3267 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ctx", file: !71, line: 132, flags: DIFlagFwdDecl)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "mq_hctx", scope: !3262, file: !71, line: 133, baseType: !3269, size: 64, offset: 128)
!3269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3270, size: 64)
!3270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_hw_ctx", file: !419, line: 16, size: 4032, elements: !3271)
!3271 = !{!3272, !3278, !3279, !3282, !3283, !3284, !3285, !3286, !3287, !3290, !3291, !3306, !3307, !3308, !3309, !3310, !3312, !3313, !3314, !3315, !3318, !3319, !3320, !3321, !3325, !3326, !3327, !3328, !3329, !3330, !3331, !3332, !3333, !3334, !3335, !3336}
!3272 = !DIDerivedType(tag: DW_TAG_member, scope: !3270, file: !419, line: 17, baseType: !3273, size: 192)
!3273 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3270, file: !419, line: 17, size: 192, elements: !3274)
!3274 = !{!3275, !3276, !3277}
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3273, file: !419, line: 19, baseType: !1035)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch", scope: !3273, file: !419, line: 27, baseType: !904, size: 128)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3273, file: !419, line: 32, baseType: !898, size: 64, offset: 128)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !3270, file: !419, line: 38, baseType: !1931, size: 704, offset: 192)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !3270, file: !419, line: 40, baseType: !3280, size: 64, offset: 896)
!3280 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_var_t", file: !894, line: 756, baseType: !3281)
!3281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !893, size: 64, elements: !899)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "next_cpu", scope: !3270, file: !419, line: 45, baseType: !443, size: 32, offset: 960)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "next_cpu_batch", scope: !3270, file: !419, line: 50, baseType: !443, size: 32, offset: 992)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3270, file: !419, line: 53, baseType: !898, size: 64, offset: 1024)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "sched_data", scope: !3270, file: !419, line: 59, baseType: !890, size: 64, offset: 1088)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3270, file: !419, line: 63, baseType: !3257, size: 64, offset: 1152)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !3270, file: !419, line: 65, baseType: !3288, size: 64, offset: 1216)
!3288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3289, size: 64)
!3289 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_flush_queue", file: !71, line: 40, flags: DIFlagFwdDecl)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3270, file: !419, line: 71, baseType: !890, size: 64, offset: 1280)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_map", scope: !3270, file: !419, line: 77, baseType: !3292, size: 192, offset: 1344)
!3292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap", file: !3293, line: 48, size: 192, elements: !3294)
!3293 = !DIFile(filename: "./include/linux/sbitmap.h", directory: "/home/lizy2001/genbc/linux")
!3294 = !{!3295, !3296, !3297, !3298}
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !3292, file: !3293, line: 52, baseType: !7, size: 32)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !3292, file: !3293, line: 57, baseType: !7, size: 32, offset: 32)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "map_nr", scope: !3292, file: !3293, line: 62, baseType: !7, size: 32, offset: 64)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3292, file: !3293, line: 67, baseType: !3299, size: 64, offset: 128)
!3299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3300, size: 64)
!3300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap_word", file: !3293, line: 20, size: 192, elements: !3301)
!3301 = !{!3302, !3303, !3304, !3305}
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !3300, file: !3293, line: 24, baseType: !898, size: 64)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !3300, file: !3293, line: 29, baseType: !898, size: 64, offset: 64)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "cleared", scope: !3300, file: !3293, line: 34, baseType: !898, size: 64, offset: 128)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "swap_lock", scope: !3300, file: !3293, line: 39, baseType: !1035, offset: 192)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_from", scope: !3270, file: !419, line: 83, baseType: !3266, size: 64, offset: 1536)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_busy", scope: !3270, file: !419, line: 89, baseType: !7, size: 32, offset: 1600)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3270, file: !419, line: 92, baseType: !965, size: 16, offset: 1632)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "nr_ctx", scope: !3270, file: !419, line: 94, baseType: !965, size: 16, offset: 1648)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "ctxs", scope: !3270, file: !419, line: 96, baseType: !3311, size: 64, offset: 1664)
!3311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3266, size: 64)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_wait_lock", scope: !3270, file: !419, line: 99, baseType: !1035, offset: 1728)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_wait", scope: !3270, file: !419, line: 104, baseType: !1711, size: 320, offset: 1728)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "wait_index", scope: !3270, file: !419, line: 110, baseType: !1586, size: 32, offset: 2048)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !3270, file: !419, line: 116, baseType: !3316, size: 64, offset: 2112)
!3316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3317, size: 64)
!3317 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tags", file: !419, line: 9, flags: DIFlagFwdDecl)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "sched_tags", scope: !3270, file: !419, line: 122, baseType: !3316, size: 64, offset: 2176)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "queued", scope: !3270, file: !419, line: 125, baseType: !898, size: 64, offset: 2240)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "run", scope: !3270, file: !419, line: 127, baseType: !898, size: 64, offset: 2304)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "dispatched", scope: !3270, file: !419, line: 130, baseType: !3322, size: 448, offset: 2368)
!3322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !898, size: 448, elements: !3323)
!3323 = !{!3324}
!3324 = !DISubrange(count: 7)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3270, file: !419, line: 133, baseType: !7, size: 32, offset: 2816)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "queue_num", scope: !3270, file: !419, line: 135, baseType: !7, size: 32, offset: 2848)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active", scope: !3270, file: !419, line: 141, baseType: !1586, size: 32, offset: 2880)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_queued", scope: !3270, file: !419, line: 145, baseType: !1586, size: 32, offset: 2912)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "cpuhp_online", scope: !3270, file: !419, line: 148, baseType: !1422, size: 128, offset: 2944)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "cpuhp_dead", scope: !3270, file: !419, line: 150, baseType: !1422, size: 128, offset: 3072)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3270, file: !419, line: 152, baseType: !1020, size: 512, offset: 3200)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "poll_considered", scope: !3270, file: !419, line: 155, baseType: !898, size: 64, offset: 3712)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "poll_invoked", scope: !3270, file: !419, line: 157, baseType: !898, size: 64, offset: 3776)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "poll_success", scope: !3270, file: !419, line: 159, baseType: !898, size: 64, offset: 3840)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "hctx_list", scope: !3270, file: !419, line: 175, baseType: !904, size: 128, offset: 3904)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "srcu", scope: !3270, file: !419, line: 182, baseType: !3337, offset: 4032)
!3337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3338, elements: !1975)
!3338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "srcu_struct", file: !3339, line: 16, size: 576, elements: !3340)
!3339 = !DIFile(filename: "./include/linux/srcutiny.h", directory: "/home/lizy2001/genbc/linux")
!3340 = !{!3341, !3343, !3344, !3345, !3346, !3347, !3348, !3350}
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_lock_nesting", scope: !3338, file: !3339, line: 17, baseType: !3342, size: 32)
!3342 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1806, size: 32, elements: !2615)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_idx", scope: !3338, file: !3339, line: 18, baseType: !1806, size: 16, offset: 32)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_running", scope: !3338, file: !3339, line: 19, baseType: !1862, size: 8, offset: 48)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_waiting", scope: !3338, file: !3339, line: 20, baseType: !1862, size: 8, offset: 56)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_wq", scope: !3338, file: !3339, line: 21, baseType: !2553, size: 128, offset: 64)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_head", scope: !3338, file: !3339, line: 23, baseType: !975, size: 64, offset: 192)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_tail", scope: !3338, file: !3339, line: 24, baseType: !3349, size: 64, offset: 256)
!3349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 64)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_work", scope: !3338, file: !3339, line: 25, baseType: !915, size: 256, offset: 320)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !3262, file: !71, line: 135, baseType: !7, size: 32, offset: 192)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "rq_flags", scope: !3262, file: !71, line: 136, baseType: !3353, size: 32, offset: 224)
!3353 = !DIDerivedType(tag: DW_TAG_typedef, name: "req_flags_t", file: !71, line: 66, baseType: !939)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !3262, file: !71, line: 138, baseType: !443, size: 32, offset: 256)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "internal_tag", scope: !3262, file: !71, line: 139, baseType: !443, size: 32, offset: 288)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "__data_len", scope: !3262, file: !71, line: 142, baseType: !7, size: 32, offset: 320)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "__sector", scope: !3262, file: !71, line: 143, baseType: !986, size: 64, offset: 384)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "bio", scope: !3262, file: !71, line: 145, baseType: !3141, size: 64, offset: 448)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "biotail", scope: !3262, file: !71, line: 146, baseType: !3141, size: 64, offset: 512)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "queuelist", scope: !3262, file: !71, line: 148, baseType: !904, size: 128, offset: 576)
!3361 = !DIDerivedType(tag: DW_TAG_member, scope: !3262, file: !71, line: 157, baseType: !3362, size: 128, offset: 704)
!3362 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3262, file: !71, line: 157, size: 128, elements: !3363)
!3363 = !{!3364, !3365}
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3362, file: !71, line: 158, baseType: !1422, size: 128)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_list", scope: !3362, file: !71, line: 159, baseType: !904, size: 128)
!3366 = !DIDerivedType(tag: DW_TAG_member, scope: !3262, file: !71, line: 167, baseType: !3367, size: 192, offset: 832)
!3367 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3262, file: !71, line: 167, size: 192, elements: !3368)
!3368 = !{!3369, !3370, !3371, !3372}
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !3367, file: !71, line: 168, baseType: !1599, size: 192, align: 64)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "special_vec", scope: !3367, file: !71, line: 169, baseType: !1752, size: 128)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "completion_data", scope: !3367, file: !71, line: 170, baseType: !890, size: 64)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !3367, file: !71, line: 171, baseType: !443, size: 32)
!3373 = !DIDerivedType(tag: DW_TAG_member, scope: !3262, file: !71, line: 180, baseType: !3374, size: 256, offset: 1024)
!3374 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3262, file: !71, line: 180, size: 256, elements: !3375)
!3375 = !{!3376, !3382}
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "elv", scope: !3374, file: !71, line: 184, baseType: !3377, size: 192)
!3377 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3374, file: !71, line: 181, size: 192, elements: !3378)
!3378 = !{!3379, !3380}
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "icq", scope: !3377, file: !71, line: 182, baseType: !3253, size: 64)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3377, file: !71, line: 183, baseType: !3381, size: 128, offset: 64)
!3381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !890, size: 128, elements: !2615)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !3374, file: !71, line: 190, baseType: !3383, size: 256)
!3383 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3374, file: !71, line: 186, size: 256, elements: !3384)
!3384 = !{!3385, !3386, !3387}
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3383, file: !71, line: 187, baseType: !7, size: 32)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3383, file: !71, line: 188, baseType: !904, size: 128, offset: 64)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "saved_end_io", scope: !3383, file: !71, line: 189, baseType: !3388, size: 64, offset: 192)
!3388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3389, size: 64)
!3389 = !DIDerivedType(tag: DW_TAG_typedef, name: "rq_end_io_fn", file: !71, line: 62, baseType: !3390)
!3390 = !DISubroutineType(types: !3391)
!3391 = !{null, !3261, !3151}
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "rq_disk", scope: !3262, file: !71, line: 193, baseType: !952, size: 64, offset: 1280)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !3262, file: !71, line: 194, baseType: !982, size: 64, offset: 1344)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !3262, file: !71, line: 200, baseType: !987, size: 64, offset: 1408)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "io_start_time_ns", scope: !3262, file: !71, line: 202, baseType: !987, size: 64, offset: 1472)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "stats_sectors", scope: !3262, file: !71, line: 212, baseType: !965, size: 16, offset: 1536)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "nr_phys_segments", scope: !3262, file: !71, line: 218, baseType: !965, size: 16, offset: 1552)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "nr_integrity_segments", scope: !3262, file: !71, line: 221, baseType: !965, size: 16, offset: 1568)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "write_hint", scope: !3262, file: !71, line: 229, baseType: !965, size: 16, offset: 1584)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !3262, file: !71, line: 230, baseType: !965, size: 16, offset: 1600)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3262, file: !71, line: 232, baseType: !70, size: 32, offset: 1632)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3262, file: !71, line: 233, baseType: !1882, size: 32, offset: 1664)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3262, file: !71, line: 235, baseType: !7, size: 32, offset: 1696)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !3262, file: !71, line: 236, baseType: !898, size: 64, offset: 1728)
!3405 = !DIDerivedType(tag: DW_TAG_member, scope: !3262, file: !71, line: 238, baseType: !3406, size: 256, offset: 1792)
!3406 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3262, file: !71, line: 238, size: 256, elements: !3407)
!3407 = !{!3408, !3437}
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !3406, file: !71, line: 239, baseType: !3409, size: 256)
!3409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_data", file: !3410, line: 23, size: 256, elements: !3411)
!3410 = !DIFile(filename: "./include/linux/smp.h", directory: "/home/lizy2001/genbc/linux")
!3411 = !{!3412, !3434, !3436}
!3412 = !DIDerivedType(tag: DW_TAG_member, scope: !3409, file: !3410, line: 24, baseType: !3413, size: 128)
!3413 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3409, file: !3410, line: 24, size: 128, elements: !3414)
!3414 = !{!3415, !3427}
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3413, file: !3410, line: 25, baseType: !3416, size: 128)
!3416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_node", file: !3417, line: 58, size: 128, elements: !3418)
!3417 = !DIFile(filename: "./include/linux/smp_types.h", directory: "/home/lizy2001/genbc/linux")
!3418 = !{!3419, !3420, !3425, !3426}
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !3416, file: !3417, line: 59, baseType: !1158, size: 64)
!3420 = !DIDerivedType(tag: DW_TAG_member, scope: !3416, file: !3417, line: 60, baseType: !3421, size: 32, offset: 64)
!3421 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3416, file: !3417, line: 60, size: 32, elements: !3422)
!3422 = !{!3423, !3424}
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "u_flags", scope: !3421, file: !3417, line: 61, baseType: !7, size: 32)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "a_flags", scope: !3421, file: !3417, line: 62, baseType: !1586, size: 32)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !3416, file: !3417, line: 65, baseType: !1697, size: 16, offset: 96)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !3416, file: !3417, line: 65, baseType: !1697, size: 16, offset: 112)
!3427 = !DIDerivedType(tag: DW_TAG_member, scope: !3413, file: !3410, line: 26, baseType: !3428, size: 128)
!3428 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3413, file: !3410, line: 26, size: 128, elements: !3429)
!3429 = !{!3430, !3431, !3432, !3433}
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !3428, file: !3410, line: 27, baseType: !1158, size: 64)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3428, file: !3410, line: 28, baseType: !7, size: 32, offset: 64)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !3428, file: !3410, line: 30, baseType: !1697, size: 16, offset: 96)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !3428, file: !3410, line: 30, baseType: !1697, size: 16, offset: 112)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3409, file: !3410, line: 34, baseType: !3435, size: 64, offset: 128)
!3435 = !DIDerivedType(tag: DW_TAG_typedef, name: "smp_call_func_t", file: !3410, line: 17, baseType: !1252)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3409, file: !3410, line: 35, baseType: !890, size: 64, offset: 192)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time", scope: !3406, file: !71, line: 240, baseType: !987, size: 64)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "end_io", scope: !3262, file: !71, line: 246, baseType: !3388, size: 64, offset: 2048)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "end_io_data", scope: !3262, file: !71, line: 247, baseType: !890, size: 64, offset: 2112)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "elevator", scope: !3258, file: !71, line: 401, baseType: !3441, size: 64, offset: 64)
!3441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3442, size: 64)
!3442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_queue", file: !77, line: 101, size: 4992, elements: !3443)
!3443 = !{!3444, !3556, !3557, !3558, !3559, !3560}
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3442, file: !77, line: 103, baseType: !3445, size: 64)
!3445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3446, size: 64)
!3446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_type", file: !77, line: 66, size: 2240, elements: !3447)
!3447 = !{!3448, !3449, !3531, !3532, !3533, !3546, !3547, !3548, !3550, !3551, !3555}
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache", scope: !3446, file: !77, line: 69, baseType: !2010, size: 64)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3446, file: !77, line: 72, baseType: !3450, size: 1408, offset: 64)
!3450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_mq_ops", file: !77, line: 29, size: 1408, elements: !3451)
!3451 = !{!3452, !3456, !3460, !3464, !3468, !3472, !3476, !3480, !3485, !3489, !3493, !3499, !3503, !3504, !3508, !3512, !3516, !3520, !3521, !3525, !3526, !3530}
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "init_sched", scope: !3450, file: !77, line: 30, baseType: !3453, size: 64)
!3453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3454, size: 64)
!3454 = !DISubroutineType(types: !3455)
!3455 = !{!443, !3257, !3445}
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "exit_sched", scope: !3450, file: !77, line: 31, baseType: !3457, size: 64, offset: 64)
!3457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3458, size: 64)
!3458 = !DISubroutineType(types: !3459)
!3459 = !{null, !3441}
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !3450, file: !77, line: 32, baseType: !3461, size: 64, offset: 128)
!3461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3462, size: 64)
!3462 = !DISubroutineType(types: !3463)
!3463 = !{!443, !3269, !7}
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !3450, file: !77, line: 33, baseType: !3465, size: 64, offset: 192)
!3465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3466, size: 64)
!3466 = !DISubroutineType(types: !3467)
!3467 = !{null, !3269, !7}
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "depth_updated", scope: !3450, file: !77, line: 34, baseType: !3469, size: 64, offset: 256)
!3469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3470, size: 64)
!3470 = !DISubroutineType(types: !3471)
!3471 = !{null, !3269}
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "allow_merge", scope: !3450, file: !77, line: 36, baseType: !3473, size: 64, offset: 320)
!3473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3474, size: 64)
!3474 = !DISubroutineType(types: !3475)
!3475 = !{!1011, !3257, !3261, !3141}
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "bio_merge", scope: !3450, file: !77, line: 37, baseType: !3477, size: 64, offset: 384)
!3477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3478, size: 64)
!3478 = !DISubroutineType(types: !3479)
!3479 = !{!1011, !3269, !3141, !7}
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "request_merge", scope: !3450, file: !77, line: 38, baseType: !3481, size: 64, offset: 448)
!3481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3482, size: 64)
!3482 = !DISubroutineType(types: !3483)
!3483 = !{!443, !3257, !3484, !3141}
!3484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3261, size: 64)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "request_merged", scope: !3450, file: !77, line: 39, baseType: !3486, size: 64, offset: 512)
!3486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3487, size: 64)
!3487 = !DISubroutineType(types: !3488)
!3488 = !{null, !3257, !3261, !76}
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "requests_merged", scope: !3450, file: !77, line: 40, baseType: !3490, size: 64, offset: 576)
!3490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3491, size: 64)
!3491 = !DISubroutineType(types: !3492)
!3492 = !{null, !3257, !3261, !3261}
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !3450, file: !77, line: 41, baseType: !3494, size: 64, offset: 640)
!3494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3495, size: 64)
!3495 = !DISubroutineType(types: !3496)
!3496 = !{null, !7, !3497}
!3497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3498, size: 64)
!3498 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_alloc_data", file: !77, line: 26, flags: DIFlagFwdDecl)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_request", scope: !3450, file: !77, line: 42, baseType: !3500, size: 64, offset: 704)
!3500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3501, size: 64)
!3501 = !DISubroutineType(types: !3502)
!3502 = !{null, !3261}
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "finish_request", scope: !3450, file: !77, line: 43, baseType: !3500, size: 64, offset: 768)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "insert_requests", scope: !3450, file: !77, line: 44, baseType: !3505, size: 64, offset: 832)
!3505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3506, size: 64)
!3506 = !DISubroutineType(types: !3507)
!3507 = !{null, !3269, !903, !1011}
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_request", scope: !3450, file: !77, line: 45, baseType: !3509, size: 64, offset: 896)
!3509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3510, size: 64)
!3510 = !DISubroutineType(types: !3511)
!3511 = !{!3261, !3269}
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "has_work", scope: !3450, file: !77, line: 46, baseType: !3513, size: 64, offset: 960)
!3513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3514, size: 64)
!3514 = !DISubroutineType(types: !3515)
!3515 = !{!1011, !3269}
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "completed_request", scope: !3450, file: !77, line: 47, baseType: !3517, size: 64, offset: 1024)
!3517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3518, size: 64)
!3518 = !DISubroutineType(types: !3519)
!3519 = !{null, !3261, !987}
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_request", scope: !3450, file: !77, line: 48, baseType: !3500, size: 64, offset: 1088)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "former_request", scope: !3450, file: !77, line: 49, baseType: !3522, size: 64, offset: 1152)
!3522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3523, size: 64)
!3523 = !DISubroutineType(types: !3524)
!3524 = !{!3261, !3257, !3261}
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !3450, file: !77, line: 50, baseType: !3522, size: 64, offset: 1216)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "init_icq", scope: !3450, file: !77, line: 51, baseType: !3527, size: 64, offset: 1280)
!3527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3528, size: 64)
!3528 = !DISubroutineType(types: !3529)
!3529 = !{null, !3253}
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "exit_icq", scope: !3450, file: !77, line: 52, baseType: !3527, size: 64, offset: 1344)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "icq_size", scope: !3446, file: !77, line: 74, baseType: !1121, size: 64, offset: 1472)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "icq_align", scope: !3446, file: !77, line: 75, baseType: !1121, size: 64, offset: 1536)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_attrs", scope: !3446, file: !77, line: 76, baseType: !3534, size: 64, offset: 1600)
!3534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3535, size: 64)
!3535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_fs_entry", file: !77, line: 57, size: 256, elements: !3536)
!3536 = !{!3537, !3538, !3542}
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3535, file: !77, line: 58, baseType: !1112, size: 128)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !3535, file: !77, line: 59, baseType: !3539, size: 64, offset: 128)
!3539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3540, size: 64)
!3540 = !DISubroutineType(types: !3541)
!3541 = !{!1107, !3441, !1076}
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !3535, file: !77, line: 60, baseType: !3543, size: 64, offset: 192)
!3543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3544, size: 64)
!3544 = !DISubroutineType(types: !3545)
!3545 = !{!1107, !3441, !1024, !1121}
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_name", scope: !3446, file: !77, line: 77, baseType: !1024, size: 64, offset: 1664)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_alias", scope: !3446, file: !77, line: 78, baseType: !1024, size: 64, offset: 1728)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_features", scope: !3446, file: !77, line: 79, baseType: !3549, size: 32, offset: 1792)
!3549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_owner", scope: !3446, file: !77, line: 80, baseType: !1413, size: 64, offset: 1856)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache_name", scope: !3446, file: !77, line: 87, baseType: !3552, size: 176, offset: 1920)
!3552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !961, size: 176, elements: !3553)
!3553 = !{!3554}
!3554 = !DISubrange(count: 22)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3446, file: !77, line: 88, baseType: !904, size: 128, offset: 2112)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_data", scope: !3442, file: !77, line: 104, baseType: !890, size: 64, offset: 64)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3442, file: !77, line: 105, baseType: !1020, size: 512, offset: 128)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !3442, file: !77, line: 106, baseType: !1520, size: 192, offset: 640)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !3442, file: !77, line: 107, baseType: !7, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3442, file: !77, line: 108, baseType: !3561, size: 4096, offset: 896)
!3561 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1418, size: 4096, elements: !1081)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "q_usage_counter", scope: !3258, file: !71, line: 403, baseType: !994, size: 128, offset: 128)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !3258, file: !71, line: 405, baseType: !3564, size: 64, offset: 256)
!3564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3565, size: 64)
!3565 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_queue_stats", file: !71, line: 43, flags: DIFlagFwdDecl)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "rq_qos", scope: !3258, file: !71, line: 406, baseType: !3567, size: 64, offset: 320)
!3567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3568, size: 64)
!3568 = !DICompositeType(tag: DW_TAG_structure_type, name: "rq_qos", file: !71, line: 42, flags: DIFlagFwdDecl)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ops", scope: !3258, file: !71, line: 408, baseType: !3570, size: 64, offset: 384)
!3570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3571, size: 64)
!3571 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3572)
!3572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ops", file: !419, line: 290, size: 960, elements: !3573)
!3573 = !{!3574, !3584, !3585, !3589, !3593, !3597, !3601, !3602, !3606, !3607, !3653, !3657, !3658, !3659, !3660}
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "queue_rq", scope: !3572, file: !419, line: 294, baseType: !3575, size: 64)
!3575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3576, size: 64)
!3576 = !DISubroutineType(types: !3577)
!3577 = !{!3151, !3269, !3578}
!3578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3579, size: 64)
!3579 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3580)
!3580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_queue_data", file: !419, line: 277, size: 128, elements: !3581)
!3581 = !{!3582, !3583}
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "rq", scope: !3580, file: !419, line: 278, baseType: !3261, size: 64)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !3580, file: !419, line: 279, baseType: !1011, size: 8, offset: 64)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "commit_rqs", scope: !3572, file: !419, line: 304, baseType: !3469, size: 64, offset: 64)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "get_budget", scope: !3572, file: !419, line: 312, baseType: !3586, size: 64, offset: 128)
!3586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3587, size: 64)
!3587 = !DISubroutineType(types: !3588)
!3588 = !{!1011, !3257}
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "put_budget", scope: !3572, file: !419, line: 317, baseType: !3590, size: 64, offset: 192)
!3590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3591, size: 64)
!3591 = !DISubroutineType(types: !3592)
!3592 = !{null, !3257}
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3572, file: !419, line: 322, baseType: !3594, size: 64, offset: 256)
!3594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3595, size: 64)
!3595 = !DISubroutineType(types: !3596)
!3596 = !{!83, !3261, !1011}
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3572, file: !419, line: 327, baseType: !3598, size: 64, offset: 320)
!3598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3599, size: 64)
!3599 = !DISubroutineType(types: !3600)
!3600 = !{!443, !3269}
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3572, file: !419, line: 332, baseType: !3500, size: 64, offset: 384)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !3572, file: !419, line: 339, baseType: !3603, size: 64, offset: 448)
!3603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3604, size: 64)
!3604 = !DISubroutineType(types: !3605)
!3605 = !{!443, !3269, !890, !7}
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !3572, file: !419, line: 343, baseType: !3465, size: 64, offset: 512)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "init_request", scope: !3572, file: !419, line: 352, baseType: !3608, size: 64, offset: 576)
!3608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3609, size: 64)
!3609 = !DISubroutineType(types: !3610)
!3610 = !{!443, !3611, !3261, !7, !7}
!3611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3612, size: 64)
!3612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tag_set", file: !419, line: 249, size: 2304, elements: !3613)
!3613 = !{!3614, !3621, !3622, !3623, !3624, !3625, !3626, !3627, !3628, !3629, !3630, !3631, !3632, !3648, !3649, !3651, !3652}
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3612, file: !419, line: 250, baseType: !3615, size: 384)
!3615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3616, size: 384, elements: !1077)
!3616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_queue_map", file: !419, line: 195, size: 128, elements: !3617)
!3617 = !{!3618, !3619, !3620}
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "mq_map", scope: !3616, file: !419, line: 196, baseType: !1838, size: 64)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "nr_queues", scope: !3616, file: !419, line: 197, baseType: !7, size: 32, offset: 64)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "queue_offset", scope: !3616, file: !419, line: 198, baseType: !7, size: 32, offset: 96)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "nr_maps", scope: !3612, file: !419, line: 251, baseType: !7, size: 32, offset: 384)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3612, file: !419, line: 252, baseType: !3570, size: 64, offset: 448)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !3612, file: !419, line: 253, baseType: !7, size: 32, offset: 512)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !3612, file: !419, line: 254, baseType: !7, size: 32, offset: 544)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tags", scope: !3612, file: !419, line: 255, baseType: !7, size: 32, offset: 576)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !3612, file: !419, line: 256, baseType: !7, size: 32, offset: 608)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3612, file: !419, line: 257, baseType: !443, size: 32, offset: 640)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3612, file: !419, line: 258, baseType: !7, size: 32, offset: 672)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3612, file: !419, line: 259, baseType: !7, size: 32, offset: 704)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3612, file: !419, line: 260, baseType: !890, size: 64, offset: 768)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "active_queues_shared_sbitmap", scope: !3612, file: !419, line: 261, baseType: !1586, size: 32, offset: 832)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "__bitmap_tags", scope: !3612, file: !419, line: 263, baseType: !3633, size: 512, offset: 896)
!3633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap_queue", file: !3293, line: 97, size: 512, elements: !3634)
!3634 = !{!3635, !3636, !3637, !3638, !3639, !3645, !3646, !3647}
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "sb", scope: !3633, file: !3293, line: 101, baseType: !3292, size: 192)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_hint", scope: !3633, file: !3293, line: 109, baseType: !1838, size: 64, offset: 192)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "wake_batch", scope: !3633, file: !3293, line: 115, baseType: !7, size: 32, offset: 256)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "wake_index", scope: !3633, file: !3293, line: 120, baseType: !1586, size: 32, offset: 288)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "ws", scope: !3633, file: !3293, line: 125, baseType: !3640, size: 64, offset: 320)
!3640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3641, size: 64)
!3641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbq_wait_state", file: !3293, line: 76, size: 192, elements: !3642)
!3642 = !{!3643, !3644}
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "wait_cnt", scope: !3641, file: !3293, line: 80, baseType: !1586, size: 32)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !3641, file: !3293, line: 85, baseType: !1954, size: 128, offset: 64)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "ws_active", scope: !3633, file: !3293, line: 130, baseType: !1586, size: 32, offset: 384)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "round_robin", scope: !3633, file: !3293, line: 135, baseType: !1011, size: 8, offset: 416)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "min_shallow_depth", scope: !3633, file: !3293, line: 141, baseType: !7, size: 32, offset: 448)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "__breserved_tags", scope: !3612, file: !419, line: 264, baseType: !3633, size: 512, offset: 1408)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !3612, file: !419, line: 265, baseType: !3650, size: 64, offset: 1920)
!3650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3316, size: 64)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "tag_list_lock", scope: !3612, file: !419, line: 267, baseType: !1520, size: 192, offset: 1984)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "tag_list", scope: !3612, file: !419, line: 268, baseType: !904, size: 128, offset: 2176)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "exit_request", scope: !3572, file: !419, line: 357, baseType: !3654, size: 64, offset: 640)
!3654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3655, size: 64)
!3655 = !DISubroutineType(types: !3656)
!3656 = !{null, !3611, !3261, !7}
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "initialize_rq_fn", scope: !3572, file: !419, line: 363, baseType: !3500, size: 64, offset: 704)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_rq", scope: !3572, file: !419, line: 369, baseType: !3500, size: 64, offset: 768)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !3572, file: !419, line: 374, baseType: !3586, size: 64, offset: 832)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "map_queues", scope: !3572, file: !419, line: 380, baseType: !3661, size: 64, offset: 896)
!3661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3662, size: 64)
!3662 = !DISubroutineType(types: !3663)
!3663 = !{!443, !3611}
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ctx", scope: !3258, file: !71, line: 411, baseType: !3266, size: 64, offset: 448)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !3258, file: !71, line: 413, baseType: !7, size: 32, offset: 512)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "queue_hw_ctx", scope: !3258, file: !71, line: 416, baseType: !3667, size: 64, offset: 576)
!3667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3269, size: 64)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !3258, file: !71, line: 417, baseType: !7, size: 32, offset: 640)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !3258, file: !71, line: 419, baseType: !1869, size: 64, offset: 704)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "queuedata", scope: !3258, file: !71, line: 425, baseType: !890, size: 64, offset: 768)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "queue_flags", scope: !3258, file: !71, line: 430, baseType: !898, size: 64, offset: 832)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "pm_only", scope: !3258, file: !71, line: 436, baseType: !1586, size: 32, offset: 896)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3258, file: !71, line: 442, baseType: !443, size: 32, offset: 928)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_gfp", scope: !3258, file: !71, line: 447, baseType: !888, size: 32, offset: 960)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !3258, file: !71, line: 449, baseType: !1035, offset: 992)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3258, file: !71, line: 454, baseType: !1020, size: 512, offset: 1024)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "mq_kobj", scope: !3258, file: !71, line: 459, baseType: !1028, size: 64, offset: 1536)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "integrity", scope: !3258, file: !71, line: 462, baseType: !3679, size: 128, offset: 1600)
!3679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity", file: !954, line: 159, size: 128, elements: !3680)
!3680 = !{!3681, !3710, !3711, !3712, !3713}
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !3679, file: !954, line: 160, baseType: !3682, size: 64)
!3682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3683, size: 64)
!3683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3684)
!3684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_profile", file: !71, line: 1664, size: 320, elements: !3685)
!3685 = !{!3686, !3700, !3701, !3704, !3709}
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "generate_fn", scope: !3684, file: !71, line: 1665, baseType: !3687, size: 64)
!3687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3688, size: 64)
!3688 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_processing_fn", file: !71, line: 1660, baseType: !3689)
!3689 = !DISubroutineType(types: !3690)
!3690 = !{!3151, !3691}
!3691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3692, size: 64)
!3692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_iter", file: !71, line: 1651, size: 320, elements: !3693)
!3693 = !{!3694, !3695, !3696, !3697, !3698, !3699}
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "prot_buf", scope: !3692, file: !71, line: 1652, baseType: !890, size: 64)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "data_buf", scope: !3692, file: !71, line: 1653, baseType: !890, size: 64, offset: 64)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !3692, file: !71, line: 1654, baseType: !986, size: 64, offset: 128)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !3692, file: !71, line: 1655, baseType: !7, size: 32, offset: 192)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !3692, file: !71, line: 1656, baseType: !965, size: 16, offset: 224)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !3692, file: !71, line: 1657, baseType: !1024, size: 64, offset: 256)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "verify_fn", scope: !3684, file: !71, line: 1666, baseType: !3687, size: 64, offset: 64)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fn", scope: !3684, file: !71, line: 1667, baseType: !3702, size: 64, offset: 128)
!3702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3703, size: 64)
!3703 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_prepare_fn", file: !71, line: 1661, baseType: !3501)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !3684, file: !71, line: 1668, baseType: !3705, size: 64, offset: 192)
!3705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3706, size: 64)
!3706 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_complete_fn", file: !71, line: 1662, baseType: !3707)
!3707 = !DISubroutineType(types: !3708)
!3708 = !{null, !3261, !7}
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3684, file: !71, line: 1669, baseType: !1024, size: 64, offset: 256)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3679, file: !954, line: 161, baseType: !1211, size: 8, offset: 64)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_size", scope: !3679, file: !954, line: 162, baseType: !1211, size: 8, offset: 72)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "interval_exp", scope: !3679, file: !954, line: 163, baseType: !1211, size: 8, offset: 80)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "tag_size", scope: !3679, file: !954, line: 164, baseType: !1211, size: 8, offset: 88)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3258, file: !71, line: 466, baseType: !1960, size: 64, offset: 1728)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_status", scope: !3258, file: !71, line: 467, baseType: !44, size: 32, offset: 1792)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending", scope: !3258, file: !71, line: 468, baseType: !7, size: 32, offset: 1824)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "nr_requests", scope: !3258, file: !71, line: 474, baseType: !898, size: 64, offset: 1856)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pad_mask", scope: !3258, file: !71, line: 476, baseType: !7, size: 32, offset: 1920)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !3258, file: !71, line: 477, baseType: !7, size: 32, offset: 1952)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "rq_timeout", scope: !3258, file: !71, line: 484, baseType: !7, size: 32, offset: 1984)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nsec", scope: !3258, file: !71, line: 485, baseType: !443, size: 32, offset: 2016)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cb", scope: !3258, file: !71, line: 487, baseType: !3723, size: 64, offset: 2048)
!3723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3724, size: 64)
!3724 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_stat_callback", file: !71, line: 44, flags: DIFlagFwdDecl)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "poll_stat", scope: !3258, file: !71, line: 488, baseType: !3726, size: 5120, offset: 2112)
!3726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3727, size: 5120, elements: !2923)
!3727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_rq_stat", file: !855, line: 540, size: 320, elements: !3728)
!3728 = !{!3729, !3730, !3731, !3732, !3733}
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !3727, file: !855, line: 541, baseType: !987, size: 64)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !3727, file: !855, line: 542, baseType: !987, size: 64, offset: 64)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3727, file: !855, line: 543, baseType: !987, size: 64, offset: 128)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "nr_samples", scope: !3727, file: !855, line: 544, baseType: !938, size: 32, offset: 192)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3727, file: !855, line: 545, baseType: !987, size: 64, offset: 256)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3258, file: !71, line: 490, baseType: !1935, size: 320, offset: 7232)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_work", scope: !3258, file: !71, line: 491, baseType: !915, size: 256, offset: 7552)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_requests_shared_sbitmap", scope: !3258, file: !71, line: 493, baseType: !1586, size: 32, offset: 7808)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !3258, file: !71, line: 495, baseType: !904, size: 128, offset: 7872)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !3258, file: !71, line: 502, baseType: !3739, size: 896, offset: 8000)
!3739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_limits", file: !71, line: 321, size: 896, elements: !3740)
!3740 = !{!3741, !3742, !3743, !3744, !3745, !3746, !3747, !3748, !3749, !3750, !3751, !3752, !3753, !3754, !3755, !3756, !3757, !3758, !3759, !3760, !3761, !3762, !3763, !3764, !3765, !3766, !3767}
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_pfn", scope: !3739, file: !71, line: 322, baseType: !898, size: 64)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "seg_boundary_mask", scope: !3739, file: !71, line: 323, baseType: !898, size: 64, offset: 64)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !3739, file: !71, line: 324, baseType: !898, size: 64, offset: 128)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_sectors", scope: !3739, file: !71, line: 326, baseType: !7, size: 32, offset: 192)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "max_dev_sectors", scope: !3739, file: !71, line: 327, baseType: !7, size: 32, offset: 224)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_sectors", scope: !3739, file: !71, line: 328, baseType: !7, size: 32, offset: 256)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !3739, file: !71, line: 329, baseType: !7, size: 32, offset: 288)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3739, file: !71, line: 330, baseType: !7, size: 32, offset: 320)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "physical_block_size", scope: !3739, file: !71, line: 331, baseType: !7, size: 32, offset: 352)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !3739, file: !71, line: 332, baseType: !7, size: 32, offset: 384)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_offset", scope: !3739, file: !71, line: 333, baseType: !7, size: 32, offset: 416)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "io_min", scope: !3739, file: !71, line: 334, baseType: !7, size: 32, offset: 448)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "io_opt", scope: !3739, file: !71, line: 335, baseType: !7, size: 32, offset: 480)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_sectors", scope: !3739, file: !71, line: 336, baseType: !7, size: 32, offset: 512)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_discard_sectors", scope: !3739, file: !71, line: 337, baseType: !7, size: 32, offset: 544)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_same_sectors", scope: !3739, file: !71, line: 338, baseType: !7, size: 32, offset: 576)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_zeroes_sectors", scope: !3739, file: !71, line: 339, baseType: !7, size: 32, offset: 608)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "max_zone_append_sectors", scope: !3739, file: !71, line: 340, baseType: !7, size: 32, offset: 640)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "discard_granularity", scope: !3739, file: !71, line: 341, baseType: !7, size: 32, offset: 672)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "discard_alignment", scope: !3739, file: !71, line: 342, baseType: !7, size: 32, offset: 704)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "max_segments", scope: !3739, file: !71, line: 344, baseType: !965, size: 16, offset: 736)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "max_integrity_segments", scope: !3739, file: !71, line: 345, baseType: !965, size: 16, offset: 752)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_segments", scope: !3739, file: !71, line: 346, baseType: !965, size: 16, offset: 768)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "misaligned", scope: !3739, file: !71, line: 348, baseType: !1211, size: 8, offset: 784)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "discard_misaligned", scope: !3739, file: !71, line: 349, baseType: !1211, size: 8, offset: 792)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "raid_partial_stripes_expensive", scope: !3739, file: !71, line: 350, baseType: !1211, size: 8, offset: 800)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "zoned", scope: !3739, file: !71, line: 351, baseType: !99, size: 32, offset: 832)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "required_elevator_features", scope: !3258, file: !71, line: 504, baseType: !7, size: 32, offset: 8896)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "sg_timeout", scope: !3258, file: !71, line: 534, baseType: !7, size: 32, offset: 8928)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "sg_reserved_size", scope: !3258, file: !71, line: 535, baseType: !7, size: 32, offset: 8960)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3258, file: !71, line: 536, baseType: !443, size: 32, offset: 8992)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_mutex", scope: !3258, file: !71, line: 537, baseType: !1520, size: 192, offset: 9024)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !3258, file: !71, line: 544, baseType: !3288, size: 64, offset: 9216)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_list", scope: !3258, file: !71, line: 546, baseType: !904, size: 128, offset: 9280)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_lock", scope: !3258, file: !71, line: 547, baseType: !1035, offset: 9408)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !3258, file: !71, line: 548, baseType: !1931, size: 704, offset: 9408)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !3258, file: !71, line: 550, baseType: !1520, size: 192, offset: 10112)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_dir_lock", scope: !3258, file: !71, line: 551, baseType: !1520, size: 192, offset: 10304)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_list", scope: !3258, file: !71, line: 557, baseType: !904, size: 128, offset: 10496)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_lock", scope: !3258, file: !71, line: 558, baseType: !1035, offset: 10624)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_depth", scope: !3258, file: !71, line: 560, baseType: !443, size: 32, offset: 10624)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_dev", scope: !3258, file: !71, line: 563, baseType: !3783, size: 256, offset: 10688)
!3783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_class_device", file: !3784, line: 18, size: 256, elements: !3785)
!3784 = !DIFile(filename: "./include/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!3785 = !{!3786, !3787, !3788, !3789}
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !3783, file: !3784, line: 19, baseType: !1960, size: 64)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !3783, file: !3784, line: 20, baseType: !443, size: 32, offset: 64)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3783, file: !3784, line: 21, baseType: !3257, size: 64, offset: 128)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3783, file: !3784, line: 22, baseType: !3790, size: 64, offset: 192)
!3790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3791, size: 64)
!3791 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3792)
!3792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_ops", file: !3784, line: 10, size: 256, elements: !3793)
!3793 = !{!3794, !3835, !3840, !3844}
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "check_proto", scope: !3792, file: !3784, line: 11, baseType: !3795, size: 64)
!3795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3796, size: 64)
!3796 = !DISubroutineType(types: !3797)
!3797 = !{!443, !3798}
!3798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3799, size: 64)
!3799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_io_v4", file: !3800, line: 22, size: 1280, elements: !3801)
!3800 = !DIFile(filename: "./include/uapi/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!3801 = !{!3802, !3803, !3804, !3805, !3806, !3807, !3808, !3809, !3810, !3811, !3812, !3813, !3814, !3815, !3816, !3817, !3818, !3819, !3820, !3821, !3822, !3823, !3824, !3825, !3826, !3827, !3828, !3829, !3830, !3831, !3832, !3833, !3834}
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "guard", scope: !3799, file: !3800, line: 23, baseType: !2497, size: 32)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !3799, file: !3800, line: 24, baseType: !939, size: 32, offset: 32)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "subprotocol", scope: !3799, file: !3800, line: 25, baseType: !939, size: 32, offset: 64)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !3799, file: !3800, line: 28, baseType: !939, size: 32, offset: 96)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3799, file: !3800, line: 29, baseType: !908, size: 64, offset: 128)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "request_tag", scope: !3799, file: !3800, line: 30, baseType: !908, size: 64, offset: 192)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "request_attr", scope: !3799, file: !3800, line: 31, baseType: !939, size: 32, offset: 256)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "request_priority", scope: !3799, file: !3800, line: 32, baseType: !939, size: 32, offset: 288)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "request_extra", scope: !3799, file: !3800, line: 33, baseType: !939, size: 32, offset: 320)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "max_response_len", scope: !3799, file: !3800, line: 34, baseType: !939, size: 32, offset: 352)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !3799, file: !3800, line: 35, baseType: !908, size: 64, offset: 384)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "dout_iovec_count", scope: !3799, file: !3800, line: 38, baseType: !939, size: 32, offset: 448)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xfer_len", scope: !3799, file: !3800, line: 40, baseType: !939, size: 32, offset: 480)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "din_iovec_count", scope: !3799, file: !3800, line: 41, baseType: !939, size: 32, offset: 512)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "din_xfer_len", scope: !3799, file: !3800, line: 42, baseType: !939, size: 32, offset: 544)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xferp", scope: !3799, file: !3800, line: 43, baseType: !908, size: 64, offset: 576)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "din_xferp", scope: !3799, file: !3800, line: 44, baseType: !908, size: 64, offset: 640)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3799, file: !3800, line: 46, baseType: !939, size: 32, offset: 704)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3799, file: !3800, line: 47, baseType: !939, size: 32, offset: 736)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ptr", scope: !3799, file: !3800, line: 48, baseType: !908, size: 64, offset: 768)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "spare_in", scope: !3799, file: !3800, line: 49, baseType: !939, size: 32, offset: 832)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "driver_status", scope: !3799, file: !3800, line: 51, baseType: !939, size: 32, offset: 864)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "transport_status", scope: !3799, file: !3800, line: 52, baseType: !939, size: 32, offset: 896)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "device_status", scope: !3799, file: !3800, line: 53, baseType: !939, size: 32, offset: 928)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "retry_delay", scope: !3799, file: !3800, line: 54, baseType: !939, size: 32, offset: 960)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3799, file: !3800, line: 55, baseType: !939, size: 32, offset: 992)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !3799, file: !3800, line: 56, baseType: !939, size: 32, offset: 1024)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "response_len", scope: !3799, file: !3800, line: 57, baseType: !939, size: 32, offset: 1056)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "din_resid", scope: !3799, file: !3800, line: 58, baseType: !2497, size: 32, offset: 1088)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "dout_resid", scope: !3799, file: !3800, line: 59, baseType: !2497, size: 32, offset: 1120)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "generated_tag", scope: !3799, file: !3800, line: 60, baseType: !908, size: 64, offset: 1152)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "spare_out", scope: !3799, file: !3800, line: 61, baseType: !939, size: 32, offset: 1216)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !3799, file: !3800, line: 63, baseType: !939, size: 32, offset: 1248)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "fill_hdr", scope: !3792, file: !3784, line: 12, baseType: !3836, size: 64, offset: 64)
!3836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3837, size: 64)
!3837 = !DISubroutineType(types: !3838)
!3838 = !{!443, !3261, !3798, !3839}
!3839 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !889, line: 150, baseType: !7)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "complete_rq", scope: !3792, file: !3784, line: 14, baseType: !3841, size: 64, offset: 128)
!3841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3842, size: 64)
!3842 = !DISubroutineType(types: !3843)
!3843 = !{!443, !3261, !3798}
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "free_rq", scope: !3792, file: !3784, line: 15, baseType: !3500, size: 64, offset: 192)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !3258, file: !71, line: 570, baseType: !972, size: 128, align: 64, offset: 10944)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_wq", scope: !3258, file: !71, line: 571, baseType: !1954, size: 128, offset: 11072)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_lock", scope: !3258, file: !71, line: 576, baseType: !1520, size: 192, offset: 11200)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !3258, file: !71, line: 578, baseType: !3611, size: 64, offset: 11392)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set_list", scope: !3258, file: !71, line: 579, baseType: !904, size: 128, offset: 11456)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "bio_split", scope: !3258, file: !71, line: 580, baseType: !3192, size: 2368, offset: 11584)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_dir", scope: !3258, file: !71, line: 582, baseType: !1173, size: 64, offset: 13952)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "mq_sysfs_init_done", scope: !3258, file: !71, line: 589, baseType: !1011, size: 8, offset: 14016)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !3258, file: !71, line: 591, baseType: !1121, size: 64, offset: 14080)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "write_hints", scope: !3258, file: !71, line: 594, baseType: !3855, size: 320, offset: 14144)
!3855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 320, elements: !2777)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !3254, file: !3244, line: 75, baseType: !3242, size: 64, offset: 64)
!3857 = !DIDerivedType(tag: DW_TAG_member, scope: !3254, file: !3244, line: 83, baseType: !3858, size: 128, offset: 128)
!3858 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3254, file: !3244, line: 83, size: 128, elements: !3859)
!3859 = !{!3860, !3861}
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !3858, file: !3244, line: 84, baseType: !904, size: 128)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !3858, file: !3244, line: 85, baseType: !2010, size: 64)
!3862 = !DIDerivedType(tag: DW_TAG_member, scope: !3254, file: !3244, line: 87, baseType: !3863, size: 128, offset: 256)
!3863 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3254, file: !3244, line: 87, size: 128, elements: !3864)
!3864 = !{!3865, !3866}
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !3863, file: !3244, line: 88, baseType: !1422, size: 128)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !3863, file: !3244, line: 89, baseType: !972, size: 128, align: 64)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3254, file: !3244, line: 92, baseType: !7, size: 32, offset: 384)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !3243, file: !3244, line: 111, baseType: !1418, size: 64, offset: 384)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !3243, file: !3244, line: 113, baseType: !915, size: 256, offset: 448)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !2284, file: !1761, line: 1061, baseType: !3871, size: 64, offset: 10944)
!3871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3872, size: 64)
!3872 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1761, line: 43, flags: DIFlagFwdDecl)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !2284, file: !1761, line: 1064, baseType: !898, size: 64, offset: 11008)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !2284, file: !1761, line: 1065, baseType: !3875, size: 64, offset: 11072)
!3875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3876, size: 64)
!3876 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !2986, line: 14, baseType: !3877)
!3877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !2986, line: 12, size: 384, elements: !3878)
!3878 = !{!3879}
!3879 = !DIDerivedType(tag: DW_TAG_member, scope: !3877, file: !2986, line: 13, baseType: !3880, size: 384)
!3880 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3877, file: !2986, line: 13, size: 384, elements: !3881)
!3881 = !{!3882, !3883, !3884, !3885}
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !3880, file: !2986, line: 13, baseType: !443, size: 32)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !3880, file: !2986, line: 13, baseType: !443, size: 32, offset: 32)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !3880, file: !2986, line: 13, baseType: !443, size: 32, offset: 64)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !3880, file: !2986, line: 13, baseType: !3886, size: 256, offset: 128)
!3886 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !3887, line: 32, size: 256, elements: !3888)
!3887 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!3888 = !{!3889, !3894, !3907, !3913, !3922, !3942, !3947}
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !3886, file: !3887, line: 37, baseType: !3890, size: 64)
!3890 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3886, file: !3887, line: 34, size: 64, elements: !3891)
!3891 = !{!3892, !3893}
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3890, file: !3887, line: 35, baseType: !2512, size: 32)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3890, file: !3887, line: 36, baseType: !1225, size: 32, offset: 32)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !3886, file: !3887, line: 45, baseType: !3895, size: 192)
!3895 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3886, file: !3887, line: 40, size: 192, elements: !3896)
!3896 = !{!3897, !3899, !3900, !3906}
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !3895, file: !3887, line: 41, baseType: !3898, size: 32)
!3898 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !1109, line: 95, baseType: !443)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !3895, file: !3887, line: 42, baseType: !443, size: 32, offset: 32)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3895, file: !3887, line: 43, baseType: !3901, size: 64, offset: 64)
!3901 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !3887, line: 11, baseType: !3902)
!3902 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !3887, line: 8, size: 64, elements: !3903)
!3903 = !{!3904, !3905}
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !3902, file: !3887, line: 9, baseType: !443, size: 32)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !3902, file: !3887, line: 10, baseType: !890, size: 64)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !3895, file: !3887, line: 44, baseType: !443, size: 32, offset: 128)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !3886, file: !3887, line: 52, baseType: !3908, size: 128)
!3908 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3886, file: !3887, line: 48, size: 128, elements: !3909)
!3909 = !{!3910, !3911, !3912}
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3908, file: !3887, line: 49, baseType: !2512, size: 32)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3908, file: !3887, line: 50, baseType: !1225, size: 32, offset: 32)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3908, file: !3887, line: 51, baseType: !3901, size: 64, offset: 64)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !3886, file: !3887, line: 61, baseType: !3914, size: 256)
!3914 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3886, file: !3887, line: 55, size: 256, elements: !3915)
!3915 = !{!3916, !3917, !3918, !3919, !3921}
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3914, file: !3887, line: 56, baseType: !2512, size: 32)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3914, file: !3887, line: 57, baseType: !1225, size: 32, offset: 32)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !3914, file: !3887, line: 58, baseType: !443, size: 32, offset: 64)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !3914, file: !3887, line: 59, baseType: !3920, size: 64, offset: 128)
!3920 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !1109, line: 94, baseType: !1110)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !3914, file: !3887, line: 60, baseType: !3920, size: 64, offset: 192)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !3886, file: !3887, line: 95, baseType: !3923, size: 256)
!3923 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3886, file: !3887, line: 64, size: 256, elements: !3924)
!3924 = !{!3925, !3926}
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !3923, file: !3887, line: 65, baseType: !890, size: 64)
!3926 = !DIDerivedType(tag: DW_TAG_member, scope: !3923, file: !3887, line: 77, baseType: !3927, size: 192, offset: 64)
!3927 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3923, file: !3887, line: 77, size: 192, elements: !3928)
!3928 = !{!3929, !3930, !3937}
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !3927, file: !3887, line: 82, baseType: !1806, size: 16)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !3927, file: !3887, line: 88, baseType: !3931, size: 192)
!3931 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3927, file: !3887, line: 84, size: 192, elements: !3932)
!3932 = !{!3933, !3935, !3936}
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !3931, file: !3887, line: 85, baseType: !3934, size: 64)
!3934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !961, size: 64, elements: !2391)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !3931, file: !3887, line: 86, baseType: !890, size: 64, offset: 64)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !3931, file: !3887, line: 87, baseType: !890, size: 64, offset: 128)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !3927, file: !3887, line: 93, baseType: !3938, size: 96)
!3938 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3927, file: !3887, line: 90, size: 96, elements: !3939)
!3939 = !{!3940, !3941}
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !3938, file: !3887, line: 91, baseType: !3934, size: 64)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !3938, file: !3887, line: 92, baseType: !939, size: 32, offset: 64)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !3886, file: !3887, line: 101, baseType: !3943, size: 128)
!3943 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3886, file: !3887, line: 98, size: 128, elements: !3944)
!3944 = !{!3945, !3946}
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !3943, file: !3887, line: 99, baseType: !175, size: 64)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !3943, file: !3887, line: 100, baseType: !443, size: 32, offset: 64)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !3886, file: !3887, line: 108, baseType: !3948, size: 128)
!3948 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3886, file: !3887, line: 104, size: 128, elements: !3949)
!3949 = !{!3950, !3951, !3952}
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !3948, file: !3887, line: 105, baseType: !890, size: 64)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !3948, file: !3887, line: 106, baseType: !443, size: 32, offset: 64)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !3948, file: !3887, line: 107, baseType: !7, size: 32, offset: 96)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2284, file: !1761, line: 1067, baseType: !3058, offset: 11136)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !2284, file: !1761, line: 1099, baseType: !3955, size: 64, offset: 11136)
!3955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3956, size: 64)
!3956 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1761, line: 56, flags: DIFlagFwdDecl)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !2284, file: !1761, line: 1103, baseType: !904, size: 128, offset: 11200)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !2284, file: !1761, line: 1104, baseType: !3959, size: 64, offset: 11328)
!3959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3960, size: 64)
!3960 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1761, line: 46, flags: DIFlagFwdDecl)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !2284, file: !1761, line: 1105, baseType: !1520, size: 192, offset: 11392)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !2284, file: !1761, line: 1106, baseType: !7, size: 32, offset: 11584)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !2284, file: !1761, line: 1109, baseType: !3964, size: 128, offset: 11648)
!3964 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3965, size: 128, elements: !2615)
!3965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3966, size: 64)
!3966 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1761, line: 51, flags: DIFlagFwdDecl)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !2284, file: !1761, line: 1110, baseType: !1520, size: 192, offset: 11776)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !2284, file: !1761, line: 1111, baseType: !904, size: 128, offset: 11968)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !2284, file: !1761, line: 1173, baseType: !3970, size: 64, offset: 12096)
!3970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3971, size: 64)
!3971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !3972, line: 62, size: 256, align: 256, elements: !3973)
!3972 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!3973 = !{!3974, !3975, !3976, !3981}
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !3971, file: !3972, line: 75, baseType: !939, size: 32)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !3971, file: !3972, line: 90, baseType: !939, size: 32, offset: 32)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !3971, file: !3972, line: 124, baseType: !3977, size: 64, offset: 64)
!3977 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3971, file: !3972, line: 109, size: 64, elements: !3978)
!3978 = !{!3979, !3980}
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !3977, file: !3972, line: 110, baseType: !908, size: 64)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3977, file: !3972, line: 112, baseType: !908, size: 64)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3971, file: !3972, line: 144, baseType: !939, size: 32, offset: 128)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !2284, file: !1761, line: 1174, baseType: !938, size: 32, offset: 12160)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !2284, file: !1761, line: 1179, baseType: !898, size: 64, offset: 12224)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !2284, file: !1761, line: 1182, baseType: !3985, size: 128, offset: 12288)
!3985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !2227, line: 76, size: 128, elements: !3986)
!3986 = !{!3987, !3992, !3993}
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3985, file: !2227, line: 85, baseType: !3988, size: 64)
!3988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !3989, line: 7, size: 64, elements: !3990)
!3989 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!3990 = !{!3991}
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !3988, file: !3989, line: 12, baseType: !893, size: 64)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !3985, file: !2227, line: 88, baseType: !1011, size: 8, offset: 64)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !3985, file: !2227, line: 95, baseType: !1011, size: 8, offset: 72)
!3994 = !DIDerivedType(tag: DW_TAG_member, scope: !2284, file: !1761, line: 1184, baseType: !3995, size: 128, offset: 12416)
!3995 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2284, file: !1761, line: 1184, size: 128, elements: !3996)
!3996 = !{!3997, !3998}
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !3995, file: !1761, line: 1185, baseType: !1882, size: 32)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3995, file: !1761, line: 1186, baseType: !972, size: 128, align: 64)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !2284, file: !1761, line: 1190, baseType: !1759, size: 64, offset: 12544)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !2284, file: !1761, line: 1192, baseType: !4001, size: 128, offset: 12608)
!4001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !2227, line: 64, size: 128, elements: !4002)
!4002 = !{!4003, !4004, !4005}
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !4001, file: !2227, line: 65, baseType: !1560, size: 64)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4001, file: !2227, line: 67, baseType: !939, size: 32, offset: 64)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4001, file: !2227, line: 68, baseType: !939, size: 32, offset: 96)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !2284, file: !1761, line: 1206, baseType: !443, size: 32, offset: 12736)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !2284, file: !1761, line: 1207, baseType: !443, size: 32, offset: 12768)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !2284, file: !1761, line: 1209, baseType: !898, size: 64, offset: 12800)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !2284, file: !1761, line: 1219, baseType: !987, size: 64, offset: 12864)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !2284, file: !1761, line: 1220, baseType: !987, size: 64, offset: 12928)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !2284, file: !1761, line: 1317, baseType: !443, size: 32, offset: 12992)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !2284, file: !1761, line: 1319, baseType: !2283, size: 64, offset: 13056)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !2284, file: !1761, line: 1322, baseType: !4014, size: 64, offset: 13120)
!4014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4015, size: 64)
!4015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !4016, line: 56, size: 512, elements: !4017)
!4016 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!4017 = !{!4018, !4019, !4020, !4021, !4022, !4023, !4024, !4026}
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4015, file: !4016, line: 57, baseType: !4014, size: 64)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4015, file: !4016, line: 58, baseType: !890, size: 64, offset: 64)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4015, file: !4016, line: 59, baseType: !898, size: 64, offset: 128)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4015, file: !4016, line: 60, baseType: !898, size: 64, offset: 192)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !4015, file: !4016, line: 61, baseType: !1659, size: 64, offset: 256)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !4015, file: !4016, line: 62, baseType: !7, size: 32, offset: 320)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !4015, file: !4016, line: 63, baseType: !4025, size: 64, offset: 384)
!4025 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !889, line: 153, baseType: !987)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !4015, file: !4016, line: 64, baseType: !4027, size: 64, offset: 448)
!4027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4028, size: 64)
!4028 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !2284, file: !1761, line: 1326, baseType: !1882, size: 32, offset: 13184)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !2284, file: !1761, line: 1342, baseType: !890, size: 64, offset: 13248)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !2284, file: !1761, line: 1343, baseType: !908, size: 64, offset: 13312)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !2284, file: !1761, line: 1344, baseType: !987, size: 64, offset: 13376)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !2284, file: !1761, line: 1345, baseType: !908, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !2284, file: !1761, line: 1346, baseType: !908, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !2284, file: !1761, line: 1347, baseType: !908, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !2284, file: !1761, line: 1348, baseType: !972, size: 128, align: 64, offset: 13504)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !2284, file: !1761, line: 1358, baseType: !4038, size: 34816, offset: 13824)
!4038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !4039, line: 485, size: 34816, elements: !4040)
!4039 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!4040 = !{!4041, !4059, !4060, !4061, !4062, !4063, !4064, !4065, !4066, !4070, !4071, !4072, !4073, !4074, !4075, !4078, !4079, !4080}
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !4038, file: !4039, line: 487, baseType: !4042, size: 192)
!4042 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4043, size: 192, elements: !1077)
!4043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !4044, line: 16, size: 64, elements: !4045)
!4044 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!4045 = !{!4046, !4047, !4048, !4049, !4050, !4051, !4052, !4053, !4054, !4055, !4056, !4057, !4058}
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !4043, file: !4044, line: 17, baseType: !1697, size: 16)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !4043, file: !4044, line: 18, baseType: !1697, size: 16, offset: 16)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !4043, file: !4044, line: 19, baseType: !1697, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4043, file: !4044, line: 19, baseType: !1697, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !4043, file: !4044, line: 19, baseType: !1697, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !4043, file: !4044, line: 19, baseType: !1697, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4043, file: !4044, line: 19, baseType: !1697, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !4043, file: !4044, line: 20, baseType: !1697, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !4043, file: !4044, line: 20, baseType: !1697, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !4043, file: !4044, line: 20, baseType: !1697, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4043, file: !4044, line: 20, baseType: !1697, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !4043, file: !4044, line: 20, baseType: !1697, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !4043, file: !4044, line: 20, baseType: !1697, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4038, file: !4039, line: 491, baseType: !898, size: 64, offset: 192)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !4038, file: !4039, line: 495, baseType: !965, size: 16, offset: 256)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !4038, file: !4039, line: 496, baseType: !965, size: 16, offset: 272)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !4038, file: !4039, line: 497, baseType: !965, size: 16, offset: 288)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !4038, file: !4039, line: 498, baseType: !965, size: 16, offset: 304)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !4038, file: !4039, line: 502, baseType: !898, size: 64, offset: 320)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !4038, file: !4039, line: 503, baseType: !898, size: 64, offset: 384)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !4038, file: !4039, line: 514, baseType: !4067, size: 256, offset: 448)
!4067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4068, size: 256, elements: !1909)
!4068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4069, size: 64)
!4069 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !4039, line: 483, flags: DIFlagFwdDecl)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !4038, file: !4039, line: 516, baseType: !898, size: 64, offset: 704)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !4038, file: !4039, line: 518, baseType: !898, size: 64, offset: 768)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !4038, file: !4039, line: 520, baseType: !898, size: 64, offset: 832)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !4038, file: !4039, line: 521, baseType: !898, size: 64, offset: 896)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !4038, file: !4039, line: 522, baseType: !898, size: 64, offset: 960)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !4038, file: !4039, line: 528, baseType: !4076, size: 64, offset: 1024)
!4076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4077, size: 64)
!4077 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !4039, line: 10, flags: DIFlagFwdDecl)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !4038, file: !4039, line: 535, baseType: !898, size: 64, offset: 1088)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !4038, file: !4039, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !4038, file: !4039, line: 540, baseType: !4081, size: 33280, offset: 1536)
!4081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !4082, line: 317, size: 33280, elements: !4083)
!4082 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!4083 = !{!4084, !4085, !4086}
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !4081, file: !4082, line: 330, baseType: !7, size: 32)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !4081, file: !4082, line: 337, baseType: !898, size: 64, offset: 64)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4081, file: !4082, line: 348, baseType: !4087, size: 32768, offset: 512)
!4087 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !4082, line: 304, size: 32768, elements: !4088)
!4088 = !{!4089, !4104, !4141, !4191, !4204}
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !4087, file: !4082, line: 305, baseType: !4090, size: 896)
!4090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !4082, line: 12, size: 896, elements: !4091)
!4091 = !{!4092, !4093, !4094, !4095, !4096, !4097, !4098, !4099, !4103}
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4090, file: !4082, line: 13, baseType: !938, size: 32)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4090, file: !4082, line: 14, baseType: !938, size: 32, offset: 32)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4090, file: !4082, line: 15, baseType: !938, size: 32, offset: 64)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4090, file: !4082, line: 16, baseType: !938, size: 32, offset: 96)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4090, file: !4082, line: 17, baseType: !938, size: 32, offset: 128)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4090, file: !4082, line: 18, baseType: !938, size: 32, offset: 160)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4090, file: !4082, line: 19, baseType: !938, size: 32, offset: 192)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4090, file: !4082, line: 22, baseType: !4100, size: 640, offset: 224)
!4100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !938, size: 640, elements: !4101)
!4101 = !{!4102}
!4102 = !DISubrange(count: 20)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4090, file: !4082, line: 25, baseType: !938, size: 32, offset: 864)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !4087, file: !4082, line: 306, baseType: !4105, size: 4096, align: 128)
!4105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !4082, line: 34, size: 4096, align: 128, elements: !4106)
!4106 = !{!4107, !4108, !4109, !4110, !4111, !4126, !4127, !4128, !4130, !4132, !4136}
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4105, file: !4082, line: 35, baseType: !1697, size: 16)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4105, file: !4082, line: 36, baseType: !1697, size: 16, offset: 16)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4105, file: !4082, line: 37, baseType: !1697, size: 16, offset: 32)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !4105, file: !4082, line: 38, baseType: !1697, size: 16, offset: 48)
!4111 = !DIDerivedType(tag: DW_TAG_member, scope: !4105, file: !4082, line: 39, baseType: !4112, size: 128, offset: 64)
!4112 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4105, file: !4082, line: 39, size: 128, elements: !4113)
!4113 = !{!4114, !4119}
!4114 = !DIDerivedType(tag: DW_TAG_member, scope: !4112, file: !4082, line: 40, baseType: !4115, size: 128)
!4115 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4112, file: !4082, line: 40, size: 128, elements: !4116)
!4116 = !{!4117, !4118}
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !4115, file: !4082, line: 41, baseType: !987, size: 64)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !4115, file: !4082, line: 42, baseType: !987, size: 64, offset: 64)
!4119 = !DIDerivedType(tag: DW_TAG_member, scope: !4112, file: !4082, line: 44, baseType: !4120, size: 128)
!4120 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4112, file: !4082, line: 44, size: 128, elements: !4121)
!4121 = !{!4122, !4123, !4124, !4125}
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4120, file: !4082, line: 45, baseType: !938, size: 32)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4120, file: !4082, line: 46, baseType: !938, size: 32, offset: 32)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4120, file: !4082, line: 47, baseType: !938, size: 32, offset: 64)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4120, file: !4082, line: 48, baseType: !938, size: 32, offset: 96)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !4105, file: !4082, line: 51, baseType: !938, size: 32, offset: 192)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !4105, file: !4082, line: 52, baseType: !938, size: 32, offset: 224)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4105, file: !4082, line: 55, baseType: !4129, size: 1024, offset: 256)
!4129 = !DICompositeType(tag: DW_TAG_array_type, baseType: !938, size: 1024, elements: !962)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !4105, file: !4082, line: 58, baseType: !4131, size: 2048, offset: 1280)
!4131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !938, size: 2048, elements: !1081)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !4105, file: !4082, line: 60, baseType: !4133, size: 384, offset: 3328)
!4133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !938, size: 384, elements: !4134)
!4134 = !{!4135}
!4135 = !DISubrange(count: 12)
!4136 = !DIDerivedType(tag: DW_TAG_member, scope: !4105, file: !4082, line: 62, baseType: !4137, size: 384, offset: 3712)
!4137 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4105, file: !4082, line: 62, size: 384, elements: !4138)
!4138 = !{!4139, !4140}
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !4137, file: !4082, line: 63, baseType: !4133, size: 384)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !4137, file: !4082, line: 64, baseType: !4133, size: 384)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !4087, file: !4082, line: 307, baseType: !4142, size: 1088)
!4142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !4082, line: 79, size: 1088, elements: !4143)
!4143 = !{!4144, !4145, !4146, !4147, !4148, !4149, !4150, !4151, !4152, !4153, !4154, !4155, !4156, !4157, !4158, !4190}
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4142, file: !4082, line: 80, baseType: !938, size: 32)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4142, file: !4082, line: 81, baseType: !938, size: 32, offset: 32)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4142, file: !4082, line: 82, baseType: !938, size: 32, offset: 64)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4142, file: !4082, line: 83, baseType: !938, size: 32, offset: 96)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4142, file: !4082, line: 84, baseType: !938, size: 32, offset: 128)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4142, file: !4082, line: 85, baseType: !938, size: 32, offset: 160)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4142, file: !4082, line: 86, baseType: !938, size: 32, offset: 192)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4142, file: !4082, line: 88, baseType: !4100, size: 640, offset: 224)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !4142, file: !4082, line: 89, baseType: !1862, size: 8, offset: 864)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !4142, file: !4082, line: 90, baseType: !1862, size: 8, offset: 872)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !4142, file: !4082, line: 91, baseType: !1862, size: 8, offset: 880)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !4142, file: !4082, line: 92, baseType: !1862, size: 8, offset: 888)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !4142, file: !4082, line: 93, baseType: !1862, size: 8, offset: 896)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !4142, file: !4082, line: 94, baseType: !1862, size: 8, offset: 904)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4142, file: !4082, line: 95, baseType: !4159, size: 64, offset: 960)
!4159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4160, size: 64)
!4160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !4161, line: 11, size: 128, elements: !4162)
!4161 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!4162 = !{!4163, !4164}
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !4160, file: !4161, line: 12, baseType: !175, size: 64)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4160, file: !4161, line: 13, baseType: !4165, size: 64, offset: 64)
!4165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4166, size: 64)
!4166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !4167, line: 56, size: 1344, elements: !4168)
!4167 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!4168 = !{!4169, !4170, !4171, !4172, !4173, !4174, !4175, !4176, !4177, !4178, !4179, !4180, !4181, !4182, !4183, !4184, !4185, !4186, !4187, !4188, !4189}
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !4166, file: !4167, line: 61, baseType: !898, size: 64)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !4166, file: !4167, line: 62, baseType: !898, size: 64, offset: 64)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !4166, file: !4167, line: 63, baseType: !898, size: 64, offset: 128)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !4166, file: !4167, line: 64, baseType: !898, size: 64, offset: 192)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !4166, file: !4167, line: 65, baseType: !898, size: 64, offset: 256)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !4166, file: !4167, line: 66, baseType: !898, size: 64, offset: 320)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !4166, file: !4167, line: 68, baseType: !898, size: 64, offset: 384)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !4166, file: !4167, line: 69, baseType: !898, size: 64, offset: 448)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !4166, file: !4167, line: 70, baseType: !898, size: 64, offset: 512)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !4166, file: !4167, line: 71, baseType: !898, size: 64, offset: 576)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !4166, file: !4167, line: 72, baseType: !898, size: 64, offset: 640)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !4166, file: !4167, line: 73, baseType: !898, size: 64, offset: 704)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !4166, file: !4167, line: 74, baseType: !898, size: 64, offset: 768)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !4166, file: !4167, line: 75, baseType: !898, size: 64, offset: 832)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !4166, file: !4167, line: 76, baseType: !898, size: 64, offset: 896)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !4166, file: !4167, line: 81, baseType: !898, size: 64, offset: 960)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !4166, file: !4167, line: 83, baseType: !898, size: 64, offset: 1024)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !4166, file: !4167, line: 84, baseType: !898, size: 64, offset: 1088)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4166, file: !4167, line: 85, baseType: !898, size: 64, offset: 1152)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4166, file: !4167, line: 86, baseType: !898, size: 64, offset: 1216)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !4166, file: !4167, line: 87, baseType: !898, size: 64, offset: 1280)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !4142, file: !4082, line: 96, baseType: !938, size: 32, offset: 1024)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !4087, file: !4082, line: 308, baseType: !4192, size: 4608, align: 512)
!4192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !4082, line: 289, size: 4608, align: 512, elements: !4193)
!4193 = !{!4194, !4195, !4202}
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !4192, file: !4082, line: 290, baseType: !4105, size: 4096, align: 128)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !4192, file: !4082, line: 291, baseType: !4196, size: 512, offset: 4096)
!4196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !4082, line: 268, size: 512, elements: !4197)
!4197 = !{!4198, !4199, !4200}
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !4196, file: !4082, line: 269, baseType: !987, size: 64)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !4196, file: !4082, line: 270, baseType: !987, size: 64, offset: 64)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4196, file: !4082, line: 271, baseType: !4201, size: 384, offset: 128)
!4201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 384, elements: !2671)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !4192, file: !4082, line: 292, baseType: !4203, offset: 4608)
!4203 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1862, elements: !2911)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !4087, file: !4082, line: 309, baseType: !4205, size: 32768)
!4205 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1862, size: 32768, elements: !4206)
!4206 = !{!4207}
!4207 = !DISubrange(count: 4096)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2280, file: !1562, line: 378, baseType: !4209, size: 64, offset: 64)
!4209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2280, size: 64)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !2276, file: !1562, line: 384, baseType: !2548, size: 192, offset: 192)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !2054, file: !1562, line: 500, baseType: !1035, offset: 6656)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !2054, file: !1562, line: 501, baseType: !4213, size: 64, offset: 6656)
!4213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4214, size: 64)
!4214 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !1562, line: 387, flags: DIFlagFwdDecl)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2054, file: !1562, line: 516, baseType: !2759, size: 64, offset: 6720)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !2054, file: !1562, line: 519, baseType: !1151, size: 64, offset: 6784)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !2054, file: !1562, line: 521, baseType: !4218, size: 64, offset: 6848)
!4218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4219, size: 64)
!4219 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !1562, line: 521, flags: DIFlagFwdDecl)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !2054, file: !1562, line: 545, baseType: !1586, size: 32, offset: 6912)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !2054, file: !1562, line: 548, baseType: !1011, size: 8, offset: 6944)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !2054, file: !1562, line: 550, baseType: !4223, offset: 6952)
!4223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !4224, line: 142, elements: !1049)
!4224 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !2054, file: !1562, line: 554, baseType: !915, size: 256, offset: 6976)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !2054, file: !1562, line: 557, baseType: !938, size: 32, offset: 7232)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !2051, file: !1562, line: 565, baseType: !4228, offset: 7296)
!4228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !898, elements: !1975)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !2047, file: !1562, line: 151, baseType: !1586, size: 32)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2039, file: !1562, line: 156, baseType: !1035, offset: 256)
!4231 = !DIDerivedType(tag: DW_TAG_member, scope: !1566, file: !1562, line: 159, baseType: !4232, size: 128)
!4232 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1566, file: !1562, line: 159, size: 128, elements: !4233)
!4233 = !{!4234, !4278}
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !4232, file: !1562, line: 161, baseType: !4235, size: 64)
!4235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4236, size: 64)
!4236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !117, line: 110, size: 1152, elements: !4237)
!4237 = !{!4238, !4248, !4249, !4250, !4251, !4252, !4253, !4265, !4266, !4267}
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !4236, file: !117, line: 111, baseType: !4239, size: 384)
!4239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !117, line: 19, size: 384, elements: !4240)
!4240 = !{!4241, !4243, !4244, !4245, !4246, !4247}
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !4239, file: !117, line: 20, baseType: !4242, size: 64)
!4242 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !898)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !4239, file: !117, line: 21, baseType: !4242, size: 64, offset: 64)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !4239, file: !117, line: 22, baseType: !4242, size: 64, offset: 128)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4239, file: !117, line: 23, baseType: !898, size: 64, offset: 192)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !4239, file: !117, line: 24, baseType: !898, size: 64, offset: 256)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4239, file: !117, line: 25, baseType: !898, size: 64, offset: 320)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4236, file: !117, line: 112, baseType: !1008, size: 64, offset: 384)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !4236, file: !117, line: 113, baseType: !994, size: 128, offset: 448)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !4236, file: !117, line: 114, baseType: !2548, size: 192, offset: 576)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4236, file: !117, line: 115, baseType: !116, size: 32, offset: 768)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4236, file: !117, line: 116, baseType: !7, size: 32, offset: 800)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4236, file: !117, line: 117, baseType: !4254, size: 64, offset: 832)
!4254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4255, size: 64)
!4255 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4256)
!4256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !117, line: 67, size: 256, elements: !4257)
!4257 = !{!4258, !4259, !4263, !4264}
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !4256, file: !117, line: 73, baseType: !1678, size: 64)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !4256, file: !117, line: 78, baseType: !4260, size: 64, offset: 64)
!4260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4261, size: 64)
!4261 = !DISubroutineType(types: !4262)
!4262 = !{null, !4235}
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !4256, file: !117, line: 83, baseType: !4260, size: 64, offset: 128)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !4256, file: !117, line: 89, baseType: !2103, size: 64, offset: 192)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4236, file: !117, line: 118, baseType: !890, size: 64, offset: 896)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !4236, file: !117, line: 119, baseType: !443, size: 32, offset: 960)
!4267 = !DIDerivedType(tag: DW_TAG_member, scope: !4236, file: !117, line: 120, baseType: !4268, size: 128, offset: 1024)
!4268 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4236, file: !117, line: 120, size: 128, elements: !4269)
!4269 = !{!4270, !4276}
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !4268, file: !117, line: 121, baseType: !4271, size: 128)
!4271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !4272, line: 6, size: 128, elements: !4273)
!4272 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!4273 = !{!4274, !4275}
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4271, file: !4272, line: 7, baseType: !987, size: 64)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4271, file: !4272, line: 8, baseType: !987, size: 64, offset: 64)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !4268, file: !117, line: 122, baseType: !4277)
!4277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4271, elements: !2911)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !4232, file: !1562, line: 162, baseType: !890, size: 64, offset: 64)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1566, file: !1562, line: 176, baseType: !972, size: 128, align: 64)
!4280 = !DIDerivedType(tag: DW_TAG_member, scope: !1561, file: !1562, line: 179, baseType: !4281, size: 32, offset: 384)
!4281 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1561, file: !1562, line: 179, size: 32, elements: !4282)
!4282 = !{!4283, !4284, !4285, !4286}
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !4281, file: !1562, line: 184, baseType: !1586, size: 32)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !4281, file: !1562, line: 192, baseType: !7, size: 32)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4281, file: !1562, line: 194, baseType: !7, size: 32)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !4281, file: !1562, line: 195, baseType: !443, size: 32)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !1561, file: !1562, line: 199, baseType: !1586, size: 32, offset: 416)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !1440, file: !130, line: 1964, baseType: !4289, size: 64, offset: 1344)
!4289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4290, size: 64)
!4290 = !DISubroutineType(types: !4291)
!4291 = !{!175, !1379, !4292}
!4292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4293, size: 64)
!4293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !4294, line: 12, size: 256, elements: !4295)
!4294 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!4295 = !{!4296, !4297, !4298, !4299, !4300}
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !4293, file: !4294, line: 13, baseType: !888, size: 32)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !4293, file: !4294, line: 16, baseType: !443, size: 32, offset: 32)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !4293, file: !4294, line: 23, baseType: !898, size: 64, offset: 64)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !4293, file: !4294, line: 30, baseType: !898, size: 64, offset: 128)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !4293, file: !4294, line: 33, baseType: !4301, size: 64, offset: 192)
!4301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4302, size: 64)
!4302 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !1562, line: 27, flags: DIFlagFwdDecl)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !1440, file: !130, line: 1966, baseType: !4289, size: 64, offset: 1408)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !1380, file: !130, line: 1424, baseType: !4305, size: 64, offset: 448)
!4305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4306, size: 64)
!4306 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4307)
!4307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !124, line: 322, size: 704, elements: !4308)
!4308 = !{!4309, !4355, !4359, !4363, !4364, !4365, !4366, !4367, !4372, !4377, !4381}
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !4307, file: !124, line: 323, baseType: !4310, size: 64)
!4310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4311, size: 64)
!4311 = !DISubroutineType(types: !4312)
!4312 = !{!443, !4313}
!4313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4314, size: 64)
!4314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !124, line: 294, size: 1600, elements: !4315)
!4315 = !{!4316, !4317, !4318, !4319, !4320, !4321, !4322, !4323, !4324, !4340, !4341, !4342}
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !4314, file: !124, line: 295, baseType: !1422, size: 128)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !4314, file: !124, line: 296, baseType: !904, size: 128, offset: 128)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !4314, file: !124, line: 297, baseType: !904, size: 128, offset: 256)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !4314, file: !124, line: 298, baseType: !904, size: 128, offset: 384)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !4314, file: !124, line: 299, baseType: !1520, size: 192, offset: 512)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !4314, file: !124, line: 300, baseType: !1035, offset: 704)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !4314, file: !124, line: 301, baseType: !1586, size: 32, offset: 704)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !4314, file: !124, line: 302, baseType: !1379, size: 64, offset: 768)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !4314, file: !124, line: 303, baseType: !4325, size: 64, offset: 832)
!4325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !124, line: 68, size: 64, elements: !4326)
!4326 = !{!4327, !4339}
!4327 = !DIDerivedType(tag: DW_TAG_member, scope: !4325, file: !124, line: 69, baseType: !4328, size: 32)
!4328 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4325, file: !124, line: 69, size: 32, elements: !4329)
!4329 = !{!4330, !4331, !4332}
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4328, file: !124, line: 70, baseType: !1219, size: 32)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !4328, file: !124, line: 71, baseType: !1227, size: 32)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !4328, file: !124, line: 72, baseType: !4333, size: 32)
!4333 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !4334, line: 24, baseType: !4335)
!4334 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!4335 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4334, line: 22, size: 32, elements: !4336)
!4336 = !{!4337}
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4335, file: !4334, line: 23, baseType: !4338, size: 32)
!4338 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !4334, line: 20, baseType: !1225)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4325, file: !124, line: 74, baseType: !123, size: 32, offset: 32)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !4314, file: !124, line: 304, baseType: !1313, size: 64, offset: 896)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !4314, file: !124, line: 305, baseType: !898, size: 64, offset: 960)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !4314, file: !124, line: 306, baseType: !4343, size: 576, offset: 1024)
!4343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !124, line: 205, size: 576, elements: !4344)
!4344 = !{!4345, !4347, !4348, !4349, !4350, !4351, !4352, !4353, !4354}
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !4343, file: !124, line: 206, baseType: !4346, size: 64)
!4346 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !124, line: 66, baseType: !927)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !4343, file: !124, line: 207, baseType: !4346, size: 64, offset: 64)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !4343, file: !124, line: 208, baseType: !4346, size: 64, offset: 128)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !4343, file: !124, line: 209, baseType: !4346, size: 64, offset: 192)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !4343, file: !124, line: 210, baseType: !4346, size: 64, offset: 256)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !4343, file: !124, line: 211, baseType: !4346, size: 64, offset: 320)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !4343, file: !124, line: 212, baseType: !4346, size: 64, offset: 384)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !4343, file: !124, line: 213, baseType: !1320, size: 64, offset: 448)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !4343, file: !124, line: 214, baseType: !1320, size: 64, offset: 512)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !4307, file: !124, line: 324, baseType: !4356, size: 64, offset: 64)
!4356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4357, size: 64)
!4357 = !DISubroutineType(types: !4358)
!4358 = !{!4313, !1379, !443}
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !4307, file: !124, line: 325, baseType: !4360, size: 64, offset: 128)
!4360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4361, size: 64)
!4361 = !DISubroutineType(types: !4362)
!4362 = !{null, !4313}
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !4307, file: !124, line: 326, baseType: !4310, size: 64, offset: 192)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !4307, file: !124, line: 327, baseType: !4310, size: 64, offset: 256)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !4307, file: !124, line: 328, baseType: !4310, size: 64, offset: 320)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !4307, file: !124, line: 329, baseType: !1482, size: 64, offset: 384)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !4307, file: !124, line: 332, baseType: !4368, size: 64, offset: 448)
!4368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4369, size: 64)
!4369 = !DISubroutineType(types: !4370)
!4370 = !{!4371, !1213}
!4371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4346, size: 64)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !4307, file: !124, line: 333, baseType: !4373, size: 64, offset: 512)
!4373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4374, size: 64)
!4374 = !DISubroutineType(types: !4375)
!4375 = !{!443, !1213, !4376}
!4376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4333, size: 64)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !4307, file: !124, line: 335, baseType: !4378, size: 64, offset: 576)
!4378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4379, size: 64)
!4379 = !DISubroutineType(types: !4380)
!4380 = !{!443, !1213, !4371}
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4307, file: !124, line: 337, baseType: !4382, size: 64, offset: 640)
!4382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4383, size: 64)
!4383 = !DISubroutineType(types: !4384)
!4384 = !{!443, !1379, !4385}
!4385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4325, size: 64)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !1380, file: !130, line: 1425, baseType: !4387, size: 64, offset: 512)
!4387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4388, size: 64)
!4388 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4389)
!4389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !124, line: 428, size: 704, elements: !4390)
!4390 = !{!4391, !4395, !4396, !4400, !4401, !4402, !4417, !4440, !4444, !4445, !4468}
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !4389, file: !124, line: 429, baseType: !4392, size: 64)
!4392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4393, size: 64)
!4393 = !DISubroutineType(types: !4394)
!4394 = !{!443, !1379, !443, !443, !1329}
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !4389, file: !124, line: 430, baseType: !1482, size: 64, offset: 64)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !4389, file: !124, line: 431, baseType: !4397, size: 64, offset: 128)
!4397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4398, size: 64)
!4398 = !DISubroutineType(types: !4399)
!4399 = !{!443, !1379, !7}
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !4389, file: !124, line: 432, baseType: !4397, size: 64, offset: 192)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !4389, file: !124, line: 433, baseType: !1482, size: 64, offset: 256)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !4389, file: !124, line: 434, baseType: !4403, size: 64, offset: 320)
!4403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4404, size: 64)
!4404 = !DISubroutineType(types: !4405)
!4405 = !{!443, !1379, !443, !4406}
!4406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4407, size: 64)
!4407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !124, line: 415, size: 256, elements: !4408)
!4408 = !{!4409, !4410, !4411, !4412, !4413, !4414, !4415, !4416}
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !4407, file: !124, line: 416, baseType: !443, size: 32)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !4407, file: !124, line: 417, baseType: !7, size: 32, offset: 32)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !4407, file: !124, line: 418, baseType: !7, size: 32, offset: 64)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !4407, file: !124, line: 420, baseType: !7, size: 32, offset: 96)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !4407, file: !124, line: 421, baseType: !7, size: 32, offset: 128)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !4407, file: !124, line: 422, baseType: !7, size: 32, offset: 160)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !4407, file: !124, line: 423, baseType: !7, size: 32, offset: 192)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !4407, file: !124, line: 424, baseType: !7, size: 32, offset: 224)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !4389, file: !124, line: 435, baseType: !4418, size: 64, offset: 384)
!4418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4419, size: 64)
!4419 = !DISubroutineType(types: !4420)
!4420 = !{!443, !1379, !4325, !4421}
!4421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4422, size: 64)
!4422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !124, line: 343, size: 960, elements: !4423)
!4423 = !{!4424, !4425, !4426, !4427, !4428, !4429, !4430, !4431, !4432, !4433, !4434, !4435, !4436, !4437, !4438, !4439}
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !4422, file: !124, line: 344, baseType: !443, size: 32)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !4422, file: !124, line: 345, baseType: !987, size: 64, offset: 64)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !4422, file: !124, line: 346, baseType: !987, size: 64, offset: 128)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !4422, file: !124, line: 347, baseType: !987, size: 64, offset: 192)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !4422, file: !124, line: 348, baseType: !987, size: 64, offset: 256)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !4422, file: !124, line: 349, baseType: !987, size: 64, offset: 320)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !4422, file: !124, line: 350, baseType: !987, size: 64, offset: 384)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !4422, file: !124, line: 351, baseType: !924, size: 64, offset: 448)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !4422, file: !124, line: 353, baseType: !924, size: 64, offset: 512)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !4422, file: !124, line: 354, baseType: !443, size: 32, offset: 576)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !4422, file: !124, line: 355, baseType: !443, size: 32, offset: 608)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !4422, file: !124, line: 356, baseType: !987, size: 64, offset: 640)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !4422, file: !124, line: 357, baseType: !987, size: 64, offset: 704)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !4422, file: !124, line: 358, baseType: !987, size: 64, offset: 768)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !4422, file: !124, line: 359, baseType: !924, size: 64, offset: 832)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !4422, file: !124, line: 360, baseType: !443, size: 32, offset: 896)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !4389, file: !124, line: 436, baseType: !4441, size: 64, offset: 448)
!4441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4442, size: 64)
!4442 = !DISubroutineType(types: !4443)
!4443 = !{!443, !1379, !4385, !4421}
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !4389, file: !124, line: 438, baseType: !4418, size: 64, offset: 512)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !4389, file: !124, line: 439, baseType: !4446, size: 64, offset: 576)
!4446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4447, size: 64)
!4447 = !DISubroutineType(types: !4448)
!4448 = !{!443, !1379, !4449}
!4449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4450, size: 64)
!4450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !124, line: 409, size: 1408, elements: !4451)
!4451 = !{!4452, !4453}
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !4450, file: !124, line: 410, baseType: !7, size: 32)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !4450, file: !124, line: 411, baseType: !4454, size: 1344, offset: 64)
!4454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4455, size: 1344, elements: !1077)
!4455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !124, line: 395, size: 448, elements: !4456)
!4456 = !{!4457, !4458, !4459, !4460, !4461, !4462, !4463, !4464, !4465, !4467}
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4455, file: !124, line: 396, baseType: !7, size: 32)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !4455, file: !124, line: 397, baseType: !7, size: 32, offset: 32)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !4455, file: !124, line: 399, baseType: !7, size: 32, offset: 64)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !4455, file: !124, line: 400, baseType: !7, size: 32, offset: 96)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !4455, file: !124, line: 401, baseType: !7, size: 32, offset: 128)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !4455, file: !124, line: 402, baseType: !7, size: 32, offset: 160)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !4455, file: !124, line: 403, baseType: !7, size: 32, offset: 192)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !4455, file: !124, line: 404, baseType: !910, size: 64, offset: 256)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !4455, file: !124, line: 405, baseType: !4466, size: 64, offset: 320)
!4466 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !889, line: 126, baseType: !987)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !4455, file: !124, line: 406, baseType: !4466, size: 64, offset: 384)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !4389, file: !124, line: 440, baseType: !4397, size: 64, offset: 640)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !1380, file: !130, line: 1426, baseType: !4470, size: 64, offset: 576)
!4470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4471, size: 64)
!4471 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4472)
!4472 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !130, line: 49, flags: DIFlagFwdDecl)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !1380, file: !130, line: 1427, baseType: !898, size: 64, offset: 640)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !1380, file: !130, line: 1428, baseType: !898, size: 64, offset: 704)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !1380, file: !130, line: 1429, baseType: !898, size: 64, offset: 768)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !1380, file: !130, line: 1430, baseType: !1173, size: 64, offset: 832)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !1380, file: !130, line: 1431, baseType: !1606, size: 256, offset: 896)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !1380, file: !130, line: 1432, baseType: !443, size: 32, offset: 1152)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !1380, file: !130, line: 1433, baseType: !1586, size: 32, offset: 1184)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !1380, file: !130, line: 1437, baseType: !4481, size: 64, offset: 1216)
!4481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4482, size: 64)
!4482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4483, size: 64)
!4483 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4484)
!4484 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !130, line: 1437, flags: DIFlagFwdDecl)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !1380, file: !130, line: 1449, baseType: !4486, size: 64, offset: 1280)
!4486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !1189, line: 34, size: 64, elements: !4487)
!4487 = !{!4488}
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !4486, file: !1189, line: 35, baseType: !1192, size: 64)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !1380, file: !130, line: 1450, baseType: !904, size: 128, offset: 1344)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !1380, file: !130, line: 1451, baseType: !1847, size: 64, offset: 1472)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !1380, file: !130, line: 1452, baseType: !1869, size: 64, offset: 1536)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !1380, file: !130, line: 1453, baseType: !4493, size: 64, offset: 1600)
!4493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4494, size: 64)
!4494 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !130, line: 1453, flags: DIFlagFwdDecl)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !1380, file: !130, line: 1454, baseType: !1422, size: 128, offset: 1664)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !1380, file: !130, line: 1455, baseType: !7, size: 32, offset: 1792)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !1380, file: !130, line: 1456, baseType: !4498, size: 2432, offset: 1856)
!4498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !124, line: 518, size: 2432, elements: !4499)
!4499 = !{!4500, !4501, !4502, !4504, !4536}
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4498, file: !124, line: 519, baseType: !7, size: 32)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !4498, file: !124, line: 520, baseType: !1606, size: 256, offset: 64)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !4498, file: !124, line: 521, baseType: !4503, size: 192, offset: 320)
!4503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1213, size: 192, elements: !1077)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4498, file: !124, line: 522, baseType: !4505, size: 1728, offset: 512)
!4505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4506, size: 1728, elements: !1077)
!4506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !124, line: 222, size: 576, elements: !4507)
!4507 = !{!4508, !4528, !4529, !4530, !4531, !4532, !4533, !4534, !4535}
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !4506, file: !124, line: 223, baseType: !4509, size: 64)
!4509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4510, size: 64)
!4510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !124, line: 443, size: 256, elements: !4511)
!4511 = !{!4512, !4513, !4526, !4527}
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !4510, file: !124, line: 444, baseType: !443, size: 32)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !4510, file: !124, line: 445, baseType: !4514, size: 64, offset: 64)
!4514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4515, size: 64)
!4515 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4516)
!4516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !124, line: 310, size: 512, elements: !4517)
!4517 = !{!4518, !4519, !4520, !4521, !4522, !4523, !4524, !4525}
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !4516, file: !124, line: 311, baseType: !1482, size: 64)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !4516, file: !124, line: 312, baseType: !1482, size: 64, offset: 64)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !4516, file: !124, line: 313, baseType: !1482, size: 64, offset: 128)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !4516, file: !124, line: 314, baseType: !1482, size: 64, offset: 192)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !4516, file: !124, line: 315, baseType: !4310, size: 64, offset: 256)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !4516, file: !124, line: 316, baseType: !4310, size: 64, offset: 320)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !4516, file: !124, line: 317, baseType: !4310, size: 64, offset: 384)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4516, file: !124, line: 318, baseType: !4382, size: 64, offset: 448)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !4510, file: !124, line: 446, baseType: !1413, size: 64, offset: 128)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !4510, file: !124, line: 447, baseType: !4509, size: 64, offset: 192)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !4506, file: !124, line: 224, baseType: !443, size: 32, offset: 64)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !4506, file: !124, line: 226, baseType: !904, size: 128, offset: 128)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !4506, file: !124, line: 227, baseType: !898, size: 64, offset: 256)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !4506, file: !124, line: 228, baseType: !7, size: 32, offset: 320)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !4506, file: !124, line: 229, baseType: !7, size: 32, offset: 352)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !4506, file: !124, line: 230, baseType: !4346, size: 64, offset: 384)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !4506, file: !124, line: 231, baseType: !4346, size: 64, offset: 448)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !4506, file: !124, line: 232, baseType: !890, size: 64, offset: 512)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4498, file: !124, line: 523, baseType: !4537, size: 192, offset: 2240)
!4537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4514, size: 192, elements: !1077)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !1380, file: !130, line: 1458, baseType: !4539, size: 2112, offset: 4288)
!4539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !130, line: 1410, size: 2112, elements: !4540)
!4540 = !{!4541, !4542, !4543}
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !4539, file: !130, line: 1411, baseType: !443, size: 32)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !4539, file: !130, line: 1412, baseType: !1954, size: 128, offset: 64)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !4539, file: !130, line: 1413, baseType: !4544, size: 1920, offset: 192)
!4544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4545, size: 1920, elements: !1077)
!4545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !4546, line: 12, size: 640, elements: !4547)
!4546 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!4547 = !{!4548, !4556, !4557, !4562, !4563}
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !4545, file: !4546, line: 13, baseType: !4549, size: 320)
!4549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !4550, line: 17, size: 320, elements: !4551)
!4550 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!4551 = !{!4552, !4553, !4554, !4555}
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !4549, file: !4550, line: 18, baseType: !443, size: 32)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !4549, file: !4550, line: 19, baseType: !443, size: 32, offset: 32)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !4549, file: !4550, line: 20, baseType: !1954, size: 128, offset: 64)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !4549, file: !4550, line: 22, baseType: !972, size: 128, align: 64, offset: 192)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !4545, file: !4546, line: 14, baseType: !1838, size: 64, offset: 320)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !4545, file: !4546, line: 15, baseType: !4558, size: 64, offset: 384)
!4558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !4559, line: 16, size: 64, elements: !4560)
!4559 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!4560 = !{!4561}
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !4558, file: !4559, line: 17, baseType: !2283, size: 64)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !4545, file: !4546, line: 16, baseType: !1954, size: 128, offset: 448)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !4545, file: !4546, line: 17, baseType: !1586, size: 32, offset: 576)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !1380, file: !130, line: 1465, baseType: !890, size: 64, offset: 6400)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !1380, file: !130, line: 1468, baseType: !938, size: 32, offset: 6464)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !1380, file: !130, line: 1470, baseType: !1320, size: 64, offset: 6528)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !1380, file: !130, line: 1471, baseType: !1320, size: 64, offset: 6592)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !1380, file: !130, line: 1473, baseType: !939, size: 32, offset: 6656)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !1380, file: !130, line: 1474, baseType: !4570, size: 64, offset: 6720)
!4570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4571, size: 64)
!4571 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !130, line: 603, flags: DIFlagFwdDecl)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !1380, file: !130, line: 1477, baseType: !960, size: 256, offset: 6784)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !1380, file: !130, line: 1478, baseType: !4574, size: 128, offset: 7040)
!4574 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !4575, line: 18, baseType: !4576)
!4575 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!4576 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4575, line: 16, size: 128, elements: !4577)
!4577 = !{!4578}
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !4576, file: !4575, line: 17, baseType: !4579, size: 128)
!4579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1863, size: 128, elements: !2923)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !1380, file: !130, line: 1480, baseType: !7, size: 32, offset: 7168)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !1380, file: !130, line: 1481, baseType: !3839, size: 32, offset: 7200)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !1380, file: !130, line: 1487, baseType: !1520, size: 192, offset: 7232)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !1380, file: !130, line: 1493, baseType: !1024, size: 64, offset: 7424)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !1380, file: !130, line: 1495, baseType: !4585, size: 64, offset: 7488)
!4585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4586, size: 64)
!4586 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4587)
!4587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !1171, line: 135, size: 1024, align: 512, elements: !4588)
!4588 = !{!4589, !4593, !4594, !4601, !4607, !4611, !4615, !4619, !4620, !4624, !4628, !4633, !4637}
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !4587, file: !1171, line: 136, baseType: !4590, size: 64)
!4590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4591, size: 64)
!4591 = !DISubroutineType(types: !4592)
!4592 = !{!443, !1173, !7}
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !4587, file: !1171, line: 137, baseType: !4590, size: 64, offset: 64)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !4587, file: !1171, line: 138, baseType: !4595, size: 64, offset: 128)
!4595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4596, size: 64)
!4596 = !DISubroutineType(types: !4597)
!4597 = !{!443, !4598, !4600}
!4598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4599, size: 64)
!4599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1174)
!4600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 64)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !4587, file: !1171, line: 139, baseType: !4602, size: 64, offset: 192)
!4602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4603, size: 64)
!4603 = !DISubroutineType(types: !4604)
!4604 = !{!443, !4598, !7, !1024, !4605}
!4605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4606, size: 64)
!4606 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1197)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !4587, file: !1171, line: 141, baseType: !4608, size: 64, offset: 256)
!4608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4609, size: 64)
!4609 = !DISubroutineType(types: !4610)
!4610 = !{!443, !4598}
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !4587, file: !1171, line: 142, baseType: !4612, size: 64, offset: 320)
!4612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4613, size: 64)
!4613 = !DISubroutineType(types: !4614)
!4614 = !{!443, !1173}
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !4587, file: !1171, line: 143, baseType: !4616, size: 64, offset: 384)
!4616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4617, size: 64)
!4617 = !DISubroutineType(types: !4618)
!4618 = !{null, !1173}
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !4587, file: !1171, line: 144, baseType: !4616, size: 64, offset: 448)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !4587, file: !1171, line: 145, baseType: !4621, size: 64, offset: 512)
!4621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4622, size: 64)
!4622 = !DISubroutineType(types: !4623)
!4623 = !{null, !1173, !1213}
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !4587, file: !1171, line: 146, baseType: !4625, size: 64, offset: 576)
!4625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4626, size: 64)
!4626 = !DISubroutineType(types: !4627)
!4627 = !{!1076, !1173, !1076, !443}
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !4587, file: !1171, line: 147, baseType: !4629, size: 64, offset: 640)
!4629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4630, size: 64)
!4630 = !DISubroutineType(types: !4631)
!4631 = !{!1169, !4632}
!4632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 64)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !4587, file: !1171, line: 148, baseType: !4634, size: 64, offset: 704)
!4634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4635, size: 64)
!4635 = !DISubroutineType(types: !4636)
!4636 = !{!443, !1329, !1011}
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !4587, file: !1171, line: 149, baseType: !4638, size: 64, offset: 768)
!4638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4639, size: 64)
!4639 = !DISubroutineType(types: !4640)
!4640 = !{!1173, !1173, !4641}
!4641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4642, size: 64)
!4642 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1214)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !1380, file: !130, line: 1500, baseType: !443, size: 32, offset: 7552)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !1380, file: !130, line: 1502, baseType: !4645, size: 448, offset: 7616)
!4645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !4294, line: 60, size: 448, elements: !4646)
!4646 = !{!4647, !4652, !4653, !4654, !4655, !4656, !4657}
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !4645, file: !4294, line: 61, baseType: !4648, size: 64)
!4648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4649, size: 64)
!4649 = !DISubroutineType(types: !4650)
!4650 = !{!898, !4651, !4292}
!4651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4645, size: 64)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !4645, file: !4294, line: 63, baseType: !4648, size: 64, offset: 64)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !4645, file: !4294, line: 66, baseType: !175, size: 64, offset: 128)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !4645, file: !4294, line: 67, baseType: !443, size: 32, offset: 192)
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4645, file: !4294, line: 68, baseType: !7, size: 32, offset: 224)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4645, file: !4294, line: 71, baseType: !904, size: 128, offset: 256)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !4645, file: !4294, line: 77, baseType: !4658, size: 64, offset: 384)
!4658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !1380, file: !130, line: 1505, baseType: !918, size: 64, offset: 8064)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !1380, file: !130, line: 1508, baseType: !918, size: 64, offset: 8128)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !1380, file: !130, line: 1511, baseType: !443, size: 32, offset: 8192)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !1380, file: !130, line: 1514, baseType: !1984, size: 32, offset: 8224)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !1380, file: !130, line: 1517, baseType: !1947, size: 64, offset: 8256)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !1380, file: !130, line: 1518, baseType: !1418, size: 64, offset: 8320)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !1380, file: !130, line: 1525, baseType: !2759, size: 64, offset: 8384)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !1380, file: !130, line: 1532, baseType: !4667, size: 64, offset: 8448)
!4667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !4668, line: 52, size: 64, elements: !4669)
!4668 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!4669 = !{!4670}
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4667, file: !4668, line: 53, baseType: !4671, size: 64)
!4671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4672, size: 64)
!4672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !4668, line: 40, size: 256, elements: !4673)
!4673 = !{!4674, !4675, !4680}
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4672, file: !4668, line: 42, baseType: !1035)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !4672, file: !4668, line: 44, baseType: !4676, size: 192)
!4676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !4668, line: 28, size: 192, elements: !4677)
!4677 = !{!4678, !4679}
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4676, file: !4668, line: 29, baseType: !904, size: 128)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4676, file: !4668, line: 31, baseType: !175, size: 64, offset: 128)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4672, file: !4668, line: 49, baseType: !175, size: 64, offset: 192)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !1380, file: !130, line: 1533, baseType: !4667, size: 64, offset: 8512)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1380, file: !130, line: 1534, baseType: !972, size: 128, align: 64, offset: 8576)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !1380, file: !130, line: 1535, baseType: !915, size: 256, offset: 8704)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !1380, file: !130, line: 1537, baseType: !1520, size: 192, offset: 8960)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !1380, file: !130, line: 1542, baseType: !443, size: 32, offset: 9152)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !1380, file: !130, line: 1545, baseType: !1035, offset: 9184)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !1380, file: !130, line: 1546, baseType: !904, size: 128, offset: 9216)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !1380, file: !130, line: 1548, baseType: !1035, offset: 9344)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !1380, file: !130, line: 1549, baseType: !904, size: 128, offset: 9344)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !1214, file: !130, line: 624, baseType: !1573, size: 64, offset: 256)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !1214, file: !130, line: 631, baseType: !898, size: 64, offset: 320)
!4692 = !DIDerivedType(tag: DW_TAG_member, scope: !1214, file: !130, line: 639, baseType: !4693, size: 32, offset: 384)
!4693 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1214, file: !130, line: 639, size: 32, elements: !4694)
!4694 = !{!4695, !4696}
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !4693, file: !130, line: 640, baseType: !3549, size: 32)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !4693, file: !130, line: 641, baseType: !7, size: 32)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !1214, file: !130, line: 643, baseType: !1295, size: 32, offset: 416)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !1214, file: !130, line: 644, baseType: !1313, size: 64, offset: 448)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !1214, file: !130, line: 645, baseType: !1316, size: 128, offset: 512)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !1214, file: !130, line: 646, baseType: !1316, size: 128, offset: 640)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !1214, file: !130, line: 647, baseType: !1316, size: 128, offset: 768)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !1214, file: !130, line: 648, baseType: !1035, offset: 896)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !1214, file: !130, line: 649, baseType: !965, size: 16, offset: 896)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !1214, file: !130, line: 650, baseType: !1862, size: 8, offset: 912)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !1214, file: !130, line: 651, baseType: !1862, size: 8, offset: 920)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !1214, file: !130, line: 652, baseType: !4466, size: 64, offset: 960)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !1214, file: !130, line: 659, baseType: !898, size: 64, offset: 1024)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !1214, file: !130, line: 660, baseType: !1606, size: 256, offset: 1088)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !1214, file: !130, line: 662, baseType: !898, size: 64, offset: 1344)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !1214, file: !130, line: 663, baseType: !898, size: 64, offset: 1408)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !1214, file: !130, line: 665, baseType: !1422, size: 128, offset: 1472)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !1214, file: !130, line: 666, baseType: !904, size: 128, offset: 1600)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !1214, file: !130, line: 675, baseType: !904, size: 128, offset: 1728)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !1214, file: !130, line: 676, baseType: !904, size: 128, offset: 1856)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !1214, file: !130, line: 677, baseType: !904, size: 128, offset: 1984)
!4716 = !DIDerivedType(tag: DW_TAG_member, scope: !1214, file: !130, line: 678, baseType: !4717, size: 128, offset: 2112)
!4717 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1214, file: !130, line: 678, size: 128, elements: !4718)
!4718 = !{!4719, !4720}
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !4717, file: !130, line: 679, baseType: !1418, size: 64)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !4717, file: !130, line: 680, baseType: !972, size: 128, align: 64)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !1214, file: !130, line: 682, baseType: !920, size: 64, offset: 2240)
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !1214, file: !130, line: 683, baseType: !920, size: 64, offset: 2304)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1214, file: !130, line: 684, baseType: !1586, size: 32, offset: 2368)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !1214, file: !130, line: 685, baseType: !1586, size: 32, offset: 2400)
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !1214, file: !130, line: 686, baseType: !1586, size: 32, offset: 2432)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !1214, file: !130, line: 688, baseType: !1586, size: 32, offset: 2464)
!4727 = !DIDerivedType(tag: DW_TAG_member, scope: !1214, file: !130, line: 690, baseType: !4728, size: 64, offset: 2496)
!4728 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1214, file: !130, line: 690, size: 64, elements: !4729)
!4729 = !{!4730, !4952}
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !4728, file: !130, line: 691, baseType: !4731, size: 64)
!4731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4732, size: 64)
!4732 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4733)
!4733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !130, line: 1822, size: 2048, elements: !4734)
!4734 = !{!4735, !4736, !4740, !4744, !4748, !4749, !4750, !4754, !4767, !4768, !4776, !4780, !4781, !4785, !4786, !4790, !4795, !4796, !4800, !4804, !4912, !4916, !4917, !4921, !4922, !4926, !4930, !4935, !4939, !4943, !4947, !4951}
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4733, file: !130, line: 1823, baseType: !1413, size: 64)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !4733, file: !130, line: 1824, baseType: !4737, size: 64, offset: 64)
!4737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4738, size: 64)
!4738 = !DISubroutineType(types: !4739)
!4739 = !{!1313, !1151, !1313, !443}
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4733, file: !130, line: 1825, baseType: !4741, size: 64, offset: 128)
!4741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4742, size: 64)
!4742 = !DISubroutineType(types: !4743)
!4743 = !{!1107, !1151, !1076, !1121, !1535}
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4733, file: !130, line: 1826, baseType: !4745, size: 64, offset: 192)
!4745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4746, size: 64)
!4746 = !DISubroutineType(types: !4747)
!4747 = !{!1107, !1151, !1024, !1121, !1535}
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !4733, file: !130, line: 1827, baseType: !1682, size: 64, offset: 256)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !4733, file: !130, line: 1828, baseType: !1682, size: 64, offset: 320)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !4733, file: !130, line: 1829, baseType: !4751, size: 64, offset: 384)
!4751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4752, size: 64)
!4752 = !DISubroutineType(types: !4753)
!4753 = !{!443, !1685, !1011}
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !4733, file: !130, line: 1830, baseType: !4755, size: 64, offset: 448)
!4755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4756, size: 64)
!4756 = !DISubroutineType(types: !4757)
!4757 = !{!443, !1151, !4758}
!4758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4759, size: 64)
!4759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !130, line: 1776, size: 128, elements: !4760)
!4760 = !{!4761, !4766}
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !4759, file: !130, line: 1777, baseType: !4762, size: 64)
!4762 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !130, line: 1773, baseType: !4763)
!4763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4764, size: 64)
!4764 = !DISubroutineType(types: !4765)
!4765 = !{!443, !4758, !1024, !443, !1313, !987, !7}
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !4759, file: !130, line: 1778, baseType: !1313, size: 64, offset: 64)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !4733, file: !130, line: 1831, baseType: !4755, size: 64, offset: 512)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4733, file: !130, line: 1832, baseType: !4769, size: 64, offset: 576)
!4769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4770, size: 64)
!4770 = !DISubroutineType(types: !4771)
!4771 = !{!4772, !1151, !4774}
!4772 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !4773, line: 52, baseType: !7)
!4773 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!4774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4775, size: 64)
!4775 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !1399, line: 27, flags: DIFlagFwdDecl)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !4733, file: !130, line: 1833, baseType: !4777, size: 64, offset: 640)
!4777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4778, size: 64)
!4778 = !DISubroutineType(types: !4779)
!4779 = !{!175, !1151, !7, !898}
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !4733, file: !130, line: 1834, baseType: !4777, size: 64, offset: 704)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4733, file: !130, line: 1835, baseType: !4782, size: 64, offset: 768)
!4782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4783, size: 64)
!4783 = !DISubroutineType(types: !4784)
!4784 = !{!443, !1151, !2057}
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !4733, file: !130, line: 1836, baseType: !898, size: 64, offset: 832)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4733, file: !130, line: 1837, baseType: !4787, size: 64, offset: 896)
!4787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4788, size: 64)
!4788 = !DISubroutineType(types: !4789)
!4789 = !{!443, !1213, !1151}
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !4733, file: !130, line: 1838, baseType: !4791, size: 64, offset: 960)
!4791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4792, size: 64)
!4792 = !DISubroutineType(types: !4793)
!4793 = !{!443, !1151, !4794}
!4794 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !130, line: 1007, baseType: !890)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4733, file: !130, line: 1839, baseType: !4787, size: 64, offset: 1024)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !4733, file: !130, line: 1840, baseType: !4797, size: 64, offset: 1088)
!4797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4798, size: 64)
!4798 = !DISubroutineType(types: !4799)
!4799 = !{!443, !1151, !1313, !1313, !443}
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !4733, file: !130, line: 1841, baseType: !4801, size: 64, offset: 1152)
!4801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4802, size: 64)
!4802 = !DISubroutineType(types: !4803)
!4803 = !{!443, !443, !1151, !443}
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4733, file: !130, line: 1842, baseType: !4805, size: 64, offset: 1216)
!4805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4806, size: 64)
!4806 = !DISubroutineType(types: !4807)
!4807 = !{!443, !1151, !443, !4808}
!4808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4809, size: 64)
!4809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !130, line: 1062, size: 1664, elements: !4810)
!4810 = !{!4811, !4812, !4813, !4814, !4815, !4816, !4817, !4818, !4819, !4820, !4821, !4822, !4823, !4824, !4825, !4842, !4843, !4844, !4857, !4888}
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !4809, file: !130, line: 1063, baseType: !4808, size: 64)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !4809, file: !130, line: 1064, baseType: !904, size: 128, offset: 64)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !4809, file: !130, line: 1065, baseType: !1422, size: 128, offset: 192)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !4809, file: !130, line: 1066, baseType: !904, size: 128, offset: 320)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !4809, file: !130, line: 1069, baseType: !904, size: 128, offset: 448)
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !4809, file: !130, line: 1072, baseType: !4794, size: 64, offset: 576)
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !4809, file: !130, line: 1073, baseType: !7, size: 32, offset: 640)
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !4809, file: !130, line: 1074, baseType: !1211, size: 8, offset: 672)
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !4809, file: !130, line: 1075, baseType: !7, size: 32, offset: 704)
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !4809, file: !130, line: 1076, baseType: !443, size: 32, offset: 736)
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !4809, file: !130, line: 1077, baseType: !1954, size: 128, offset: 768)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !4809, file: !130, line: 1078, baseType: !1151, size: 64, offset: 896)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !4809, file: !130, line: 1079, baseType: !1313, size: 64, offset: 960)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !4809, file: !130, line: 1080, baseType: !1313, size: 64, offset: 1024)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !4809, file: !130, line: 1082, baseType: !4826, size: 64, offset: 1088)
!4826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4827, size: 64)
!4827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !130, line: 1314, size: 320, elements: !4828)
!4828 = !{!4829, !4837, !4838, !4839, !4840, !4841}
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !4827, file: !130, line: 1315, baseType: !4830)
!4830 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !4831, line: 20, baseType: !4832)
!4831 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!4832 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4831, line: 11, elements: !4833)
!4833 = !{!4834}
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !4832, file: !4831, line: 12, baseType: !4835)
!4835 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !1047, line: 33, baseType: !4836)
!4836 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1047, line: 31, elements: !1049)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !4827, file: !130, line: 1316, baseType: !443, size: 32)
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !4827, file: !130, line: 1317, baseType: !443, size: 32, offset: 32)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !4827, file: !130, line: 1318, baseType: !4826, size: 64, offset: 64)
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !4827, file: !130, line: 1319, baseType: !1151, size: 64, offset: 128)
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !4827, file: !130, line: 1320, baseType: !972, size: 128, align: 64, offset: 192)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !4809, file: !130, line: 1084, baseType: !898, size: 64, offset: 1152)
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !4809, file: !130, line: 1085, baseType: !898, size: 64, offset: 1216)
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !4809, file: !130, line: 1087, baseType: !4845, size: 64, offset: 1280)
!4845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4846, size: 64)
!4846 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4847)
!4847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !130, line: 1011, size: 128, elements: !4848)
!4848 = !{!4849, !4853}
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !4847, file: !130, line: 1012, baseType: !4850, size: 64)
!4850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4851, size: 64)
!4851 = !DISubroutineType(types: !4852)
!4852 = !{null, !4808, !4808}
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !4847, file: !130, line: 1013, baseType: !4854, size: 64, offset: 64)
!4854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4855, size: 64)
!4855 = !DISubroutineType(types: !4856)
!4856 = !{null, !4808}
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !4809, file: !130, line: 1088, baseType: !4858, size: 64, offset: 1344)
!4858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4859, size: 64)
!4859 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4860)
!4860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !130, line: 1016, size: 512, elements: !4861)
!4861 = !{!4862, !4866, !4870, !4871, !4875, !4879, !4883, !4887}
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !4860, file: !130, line: 1017, baseType: !4863, size: 64)
!4863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4864, size: 64)
!4864 = !DISubroutineType(types: !4865)
!4865 = !{!4794, !4794}
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !4860, file: !130, line: 1018, baseType: !4867, size: 64, offset: 64)
!4867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4868, size: 64)
!4868 = !DISubroutineType(types: !4869)
!4869 = !{null, !4794}
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !4860, file: !130, line: 1019, baseType: !4854, size: 64, offset: 128)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !4860, file: !130, line: 1020, baseType: !4872, size: 64, offset: 192)
!4872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4873, size: 64)
!4873 = !DISubroutineType(types: !4874)
!4874 = !{!443, !4808, !443}
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !4860, file: !130, line: 1021, baseType: !4876, size: 64, offset: 256)
!4876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4877, size: 64)
!4877 = !DISubroutineType(types: !4878)
!4878 = !{!1011, !4808}
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !4860, file: !130, line: 1022, baseType: !4880, size: 64, offset: 320)
!4880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4881, size: 64)
!4881 = !DISubroutineType(types: !4882)
!4882 = !{!443, !4808, !443, !903}
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !4860, file: !130, line: 1023, baseType: !4884, size: 64, offset: 384)
!4884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4885, size: 64)
!4885 = !DISubroutineType(types: !4886)
!4886 = !{null, !4808, !1660}
!4887 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !4860, file: !130, line: 1024, baseType: !4876, size: 64, offset: 448)
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !4809, file: !130, line: 1097, baseType: !4889, size: 256, offset: 1408)
!4889 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4809, file: !130, line: 1089, size: 256, elements: !4890)
!4890 = !{!4891, !4900, !4906}
!4891 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !4889, file: !130, line: 1090, baseType: !4892, size: 256)
!4892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !4893, line: 10, size: 256, elements: !4894)
!4893 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!4894 = !{!4895, !4896, !4899}
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4892, file: !4893, line: 11, baseType: !938, size: 32)
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4892, file: !4893, line: 12, baseType: !4897, size: 64, offset: 64)
!4897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4898, size: 64)
!4898 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !4893, line: 5, flags: DIFlagFwdDecl)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4892, file: !4893, line: 13, baseType: !904, size: 128, offset: 128)
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !4889, file: !130, line: 1091, baseType: !4901, size: 64)
!4901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !4893, line: 17, size: 64, elements: !4902)
!4902 = !{!4903}
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4901, file: !4893, line: 18, baseType: !4904, size: 64)
!4904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4905, size: 64)
!4905 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !4893, line: 16, flags: DIFlagFwdDecl)
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !4889, file: !130, line: 1096, baseType: !4907, size: 192)
!4907 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4889, file: !130, line: 1092, size: 192, elements: !4908)
!4908 = !{!4909, !4910, !4911}
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4907, file: !130, line: 1093, baseType: !904, size: 128)
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4907, file: !130, line: 1094, baseType: !443, size: 32, offset: 128)
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !4907, file: !130, line: 1095, baseType: !7, size: 32, offset: 160)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !4733, file: !130, line: 1843, baseType: !4913, size: 64, offset: 1280)
!4913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4914, size: 64)
!4914 = !DISubroutineType(types: !4915)
!4915 = !{!1107, !1151, !1560, !443, !1121, !1535, !443}
!4916 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !4733, file: !130, line: 1844, baseType: !2177, size: 64, offset: 1344)
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !4733, file: !130, line: 1845, baseType: !4918, size: 64, offset: 1408)
!4918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4919, size: 64)
!4919 = !DISubroutineType(types: !4920)
!4920 = !{!443, !443}
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !4733, file: !130, line: 1846, baseType: !4805, size: 64, offset: 1472)
!4922 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !4733, file: !130, line: 1847, baseType: !4923, size: 64, offset: 1536)
!4923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4924, size: 64)
!4924 = !DISubroutineType(types: !4925)
!4925 = !{!1107, !1759, !1151, !1535, !1121, !7}
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !4733, file: !130, line: 1848, baseType: !4927, size: 64, offset: 1600)
!4927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4928, size: 64)
!4928 = !DISubroutineType(types: !4929)
!4929 = !{!1107, !1151, !1535, !1759, !1121, !7}
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !4733, file: !130, line: 1849, baseType: !4931, size: 64, offset: 1664)
!4931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4932, size: 64)
!4932 = !DISubroutineType(types: !4933)
!4933 = !{!443, !1151, !175, !4934, !1660}
!4934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4808, size: 64)
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !4733, file: !130, line: 1850, baseType: !4936, size: 64, offset: 1728)
!4936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4937, size: 64)
!4937 = !DISubroutineType(types: !4938)
!4938 = !{!175, !1151, !443, !1313, !1313}
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !4733, file: !130, line: 1852, baseType: !4940, size: 64, offset: 1792)
!4940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4941, size: 64)
!4941 = !DISubroutineType(types: !4942)
!4942 = !{null, !1508, !1151}
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !4733, file: !130, line: 1856, baseType: !4944, size: 64, offset: 1856)
!4944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4945, size: 64)
!4945 = !DISubroutineType(types: !4946)
!4946 = !{!1107, !1151, !1313, !1151, !1313, !1121, !7}
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !4733, file: !130, line: 1858, baseType: !4948, size: 64, offset: 1920)
!4948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4949, size: 64)
!4949 = !DISubroutineType(types: !4950)
!4950 = !{!1313, !1151, !1313, !1151, !1313, !1313, !7}
!4951 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !4733, file: !130, line: 1861, baseType: !4797, size: 64, offset: 1984)
!4952 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !4728, file: !130, line: 692, baseType: !1447, size: 64)
!4953 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !1214, file: !130, line: 694, baseType: !4954, size: 64, offset: 2560)
!4954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4955, size: 64)
!4955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !130, line: 1100, size: 384, elements: !4956)
!4956 = !{!4957, !4958, !4959, !4960}
!4957 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !4955, file: !130, line: 1101, baseType: !1035)
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !4955, file: !130, line: 1102, baseType: !904, size: 128)
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !4955, file: !130, line: 1103, baseType: !904, size: 128, offset: 128)
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !4955, file: !130, line: 1104, baseType: !904, size: 128, offset: 256)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !1214, file: !130, line: 695, baseType: !1574, size: 1216, align: 64, offset: 2624)
!4962 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !1214, file: !130, line: 696, baseType: !904, size: 128, offset: 3840)
!4963 = !DIDerivedType(tag: DW_TAG_member, scope: !1214, file: !130, line: 697, baseType: !4964, size: 64, offset: 3968)
!4964 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1214, file: !130, line: 697, size: 64, elements: !4965)
!4965 = !{!4966, !4967, !4968, !4971, !4972}
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !4964, file: !130, line: 698, baseType: !1759, size: 64)
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !4964, file: !130, line: 699, baseType: !1847, size: 64)
!4968 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !4964, file: !130, line: 700, baseType: !4969, size: 64)
!4969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4970, size: 64)
!4970 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !130, line: 700, flags: DIFlagFwdDecl)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !4964, file: !130, line: 701, baseType: !1076, size: 64)
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !4964, file: !130, line: 702, baseType: !7, size: 32)
!4973 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !1214, file: !130, line: 705, baseType: !939, size: 32, offset: 4032)
!4974 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !1214, file: !130, line: 708, baseType: !939, size: 32, offset: 4064)
!4975 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !1214, file: !130, line: 709, baseType: !4570, size: 64, offset: 4096)
!4976 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !1214, file: !130, line: 720, baseType: !890, size: 64, offset: 4160)
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !1174, file: !1171, line: 98, baseType: !4978, size: 256, offset: 448)
!4978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1211, size: 256, elements: !962)
!4979 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !1174, file: !1171, line: 101, baseType: !4980, size: 32, offset: 704)
!4980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !4981, line: 25, size: 32, elements: !4982)
!4981 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!4982 = !{!4983}
!4983 = !DIDerivedType(tag: DW_TAG_member, scope: !4980, file: !4981, line: 26, baseType: !4984, size: 32)
!4984 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4980, file: !4981, line: 26, size: 32, elements: !4985)
!4985 = !{!4986}
!4986 = !DIDerivedType(tag: DW_TAG_member, scope: !4984, file: !4981, line: 30, baseType: !4987, size: 32)
!4987 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4984, file: !4981, line: 30, size: 32, elements: !4988)
!4988 = !{!4989, !4990}
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4987, file: !4981, line: 31, baseType: !1035)
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4987, file: !4981, line: 32, baseType: !443, size: 32)
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !1174, file: !1171, line: 102, baseType: !4585, size: 64, offset: 768)
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !1174, file: !1171, line: 103, baseType: !1379, size: 64, offset: 832)
!4993 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !1174, file: !1171, line: 104, baseType: !898, size: 64, offset: 896)
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !1174, file: !1171, line: 105, baseType: !890, size: 64, offset: 960)
!4995 = !DIDerivedType(tag: DW_TAG_member, scope: !1174, file: !1171, line: 107, baseType: !4996, size: 128, offset: 1024)
!4996 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1174, file: !1171, line: 107, size: 128, elements: !4997)
!4997 = !{!4998, !4999}
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !4996, file: !1171, line: 108, baseType: !904, size: 128)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !4996, file: !1171, line: 109, baseType: !5000, size: 64)
!5000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64)
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !1174, file: !1171, line: 111, baseType: !904, size: 128, offset: 1152)
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !1174, file: !1171, line: 112, baseType: !904, size: 128, offset: 1280)
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !1174, file: !1171, line: 120, baseType: !5004, size: 128, offset: 1408)
!5004 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1174, file: !1171, line: 116, size: 128, elements: !5005)
!5005 = !{!5006, !5007, !5008}
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !5004, file: !1171, line: 117, baseType: !1422, size: 128)
!5007 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !5004, file: !1171, line: 118, baseType: !1188, size: 128)
!5008 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !5004, file: !1171, line: 119, baseType: !972, size: 128, align: 64)
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !1152, file: !130, line: 922, baseType: !1213, size: 64, offset: 256)
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !1152, file: !130, line: 923, baseType: !4731, size: 64, offset: 320)
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !1152, file: !130, line: 929, baseType: !1035, offset: 384)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !1152, file: !130, line: 930, baseType: !129, size: 32, offset: 384)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !1152, file: !130, line: 931, baseType: !918, size: 64, offset: 448)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !1152, file: !130, line: 932, baseType: !7, size: 32, offset: 512)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !1152, file: !130, line: 933, baseType: !3839, size: 32, offset: 544)
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !1152, file: !130, line: 934, baseType: !1520, size: 192, offset: 576)
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !1152, file: !130, line: 935, baseType: !1313, size: 64, offset: 768)
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !1152, file: !130, line: 936, baseType: !5019, size: 192, offset: 832)
!5019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !130, line: 885, size: 192, elements: !5020)
!5020 = !{!5021, !5022, !5023, !5024, !5025, !5026}
!5021 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5019, file: !130, line: 886, baseType: !4830)
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !5019, file: !130, line: 887, baseType: !2523, size: 64)
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !5019, file: !130, line: 888, baseType: !138, size: 32, offset: 64)
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !5019, file: !130, line: 889, baseType: !1219, size: 32, offset: 96)
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !5019, file: !130, line: 889, baseType: !1219, size: 32, offset: 128)
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !5019, file: !130, line: 890, baseType: !443, size: 32, offset: 160)
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !1152, file: !130, line: 937, baseType: !2593, size: 64, offset: 1024)
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !1152, file: !130, line: 938, baseType: !5029, size: 256, offset: 1088)
!5029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !130, line: 896, size: 256, elements: !5030)
!5030 = !{!5031, !5032, !5033, !5034, !5035, !5036}
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5029, file: !130, line: 897, baseType: !898, size: 64)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5029, file: !130, line: 898, baseType: !7, size: 32, offset: 64)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !5029, file: !130, line: 899, baseType: !7, size: 32, offset: 96)
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !5029, file: !130, line: 902, baseType: !7, size: 32, offset: 128)
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !5029, file: !130, line: 903, baseType: !7, size: 32, offset: 160)
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !5029, file: !130, line: 904, baseType: !1313, size: 64, offset: 192)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !1152, file: !130, line: 940, baseType: !987, size: 64, offset: 1344)
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1152, file: !130, line: 945, baseType: !890, size: 64, offset: 1408)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !1152, file: !130, line: 949, baseType: !904, size: 128, offset: 1472)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !1152, file: !130, line: 950, baseType: !904, size: 128, offset: 1600)
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !1152, file: !130, line: 952, baseType: !1573, size: 64, offset: 1728)
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !1152, file: !130, line: 953, baseType: !1984, size: 32, offset: 1792)
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !1152, file: !130, line: 954, baseType: !1984, size: 32, offset: 1824)
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1142, file: !1101, line: 174, baseType: !1148, size: 64, offset: 320)
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1142, file: !1101, line: 176, baseType: !5046, size: 64, offset: 384)
!5046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5047, size: 64)
!5047 = !DISubroutineType(types: !5048)
!5048 = !{!443, !1151, !1028, !1141, !2057}
!5049 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !1130, file: !1101, line: 90, baseType: !1125, size: 64, offset: 192)
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !1130, file: !1101, line: 91, baseType: !5051, size: 64, offset: 256)
!5051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 64)
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !1091, file: !1021, line: 143, baseType: !5053, size: 64, offset: 256)
!5053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5054, size: 64)
!5054 = !DISubroutineType(types: !5055)
!5055 = !{!5056, !1028}
!5056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5057, size: 64)
!5057 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5058)
!5058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !65, line: 39, size: 384, elements: !5059)
!5059 = !{!5060, !5061, !5065, !5069, !5075, !5079}
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5058, file: !65, line: 40, baseType: !64, size: 32)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !5058, file: !65, line: 41, baseType: !5062, size: 64, offset: 64)
!5062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5063, size: 64)
!5063 = !DISubroutineType(types: !5064)
!5064 = !{!1011}
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !5058, file: !65, line: 42, baseType: !5066, size: 64, offset: 128)
!5066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5067, size: 64)
!5067 = !DISubroutineType(types: !5068)
!5068 = !{!890}
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !5058, file: !65, line: 43, baseType: !5070, size: 64, offset: 192)
!5070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5071, size: 64)
!5071 = !DISubroutineType(types: !5072)
!5072 = !{!4027, !5073}
!5073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5074, size: 64)
!5074 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !65, line: 19, flags: DIFlagFwdDecl)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !5058, file: !65, line: 44, baseType: !5076, size: 64, offset: 256)
!5076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5077, size: 64)
!5077 = !DISubroutineType(types: !5078)
!5078 = !{!4027}
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !5058, file: !65, line: 45, baseType: !1252, size: 64, offset: 320)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !1091, file: !1021, line: 144, baseType: !5081, size: 64, offset: 320)
!5081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5082, size: 64)
!5082 = !DISubroutineType(types: !5083)
!5083 = !{!4027, !1028}
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !1091, file: !1021, line: 145, baseType: !5085, size: 64, offset: 384)
!5085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5086, size: 64)
!5086 = !DISubroutineType(types: !5087)
!5087 = !{null, !1028, !2871, !2872}
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !1020, file: !1021, line: 70, baseType: !5089, size: 64, offset: 384)
!5089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5090, size: 64)
!5090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !1399, line: 123, size: 1024, elements: !5091)
!5091 = !{!5092, !5093, !5094, !5095, !5096, !5097, !5098, !5099, !5208, !5209, !5210, !5211, !5212}
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5090, file: !1399, line: 124, baseType: !1586, size: 32)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !5090, file: !1399, line: 125, baseType: !1586, size: 32, offset: 32)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5090, file: !1399, line: 135, baseType: !5089, size: 64, offset: 64)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5090, file: !1399, line: 136, baseType: !1024, size: 64, offset: 128)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !5090, file: !1399, line: 138, baseType: !1599, size: 192, align: 64, offset: 192)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !5090, file: !1399, line: 140, baseType: !4027, size: 64, offset: 384)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !5090, file: !1399, line: 141, baseType: !7, size: 32, offset: 448)
!5099 = !DIDerivedType(tag: DW_TAG_member, scope: !5090, file: !1399, line: 142, baseType: !5100, size: 256, offset: 512)
!5100 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5090, file: !1399, line: 142, size: 256, elements: !5101)
!5101 = !{!5102, !5148, !5152}
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !5100, file: !1399, line: 143, baseType: !5103, size: 192)
!5103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !1399, line: 91, size: 192, elements: !5104)
!5104 = !{!5105, !5106, !5107}
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !5103, file: !1399, line: 92, baseType: !898, size: 64)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5103, file: !1399, line: 94, baseType: !1595, size: 64, offset: 64)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !5103, file: !1399, line: 100, baseType: !5108, size: 64, offset: 128)
!5108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5109, size: 64)
!5109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !1399, line: 180, size: 704, elements: !5110)
!5110 = !{!5111, !5112, !5113, !5120, !5121, !5122, !5146, !5147}
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !5109, file: !1399, line: 182, baseType: !5089, size: 64)
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5109, file: !1399, line: 183, baseType: !7, size: 32, offset: 64)
!5113 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !5109, file: !1399, line: 186, baseType: !5114, size: 192, offset: 128)
!5114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !5115, line: 19, size: 192, elements: !5116)
!5115 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!5116 = !{!5117, !5118, !5119}
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !5114, file: !5115, line: 20, baseType: !1578, size: 128)
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !5114, file: !5115, line: 21, baseType: !7, size: 32, offset: 128)
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !5114, file: !5115, line: 22, baseType: !7, size: 32, offset: 160)
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !5109, file: !1399, line: 187, baseType: !938, size: 32, offset: 320)
!5121 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !5109, file: !1399, line: 188, baseType: !938, size: 32, offset: 352)
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !5109, file: !1399, line: 189, baseType: !5123, size: 64, offset: 384)
!5123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5124, size: 64)
!5124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !1399, line: 168, size: 320, elements: !5125)
!5125 = !{!5126, !5130, !5134, !5138, !5142}
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !5124, file: !1399, line: 169, baseType: !5127, size: 64)
!5127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5128, size: 64)
!5128 = !DISubroutineType(types: !5129)
!5129 = !{!443, !1508, !5108}
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !5124, file: !1399, line: 171, baseType: !5131, size: 64, offset: 64)
!5131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5132, size: 64)
!5132 = !DISubroutineType(types: !5133)
!5133 = !{!443, !5089, !1024, !1116}
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !5124, file: !1399, line: 173, baseType: !5135, size: 64, offset: 128)
!5135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5136, size: 64)
!5136 = !DISubroutineType(types: !5137)
!5137 = !{!443, !5089}
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !5124, file: !1399, line: 174, baseType: !5139, size: 64, offset: 192)
!5139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5140, size: 64)
!5140 = !DISubroutineType(types: !5141)
!5141 = !{!443, !5089, !5089, !1024}
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !5124, file: !1399, line: 176, baseType: !5143, size: 64, offset: 256)
!5143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5144, size: 64)
!5144 = !DISubroutineType(types: !5145)
!5145 = !{!443, !1508, !5089, !5108}
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !5109, file: !1399, line: 192, baseType: !904, size: 128, offset: 448)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !5109, file: !1399, line: 194, baseType: !1954, size: 128, offset: 576)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !5100, file: !1399, line: 144, baseType: !5149, size: 64)
!5149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !1399, line: 103, size: 64, elements: !5150)
!5150 = !{!5151}
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !5149, file: !1399, line: 104, baseType: !5089, size: 64)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5100, file: !1399, line: 145, baseType: !5153, size: 256)
!5153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !1399, line: 107, size: 256, elements: !5154)
!5154 = !{!5155, !5203, !5206, !5207}
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5153, file: !1399, line: 108, baseType: !5156, size: 64)
!5156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5157, size: 64)
!5157 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5158)
!5158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !1399, line: 217, size: 768, elements: !5159)
!5159 = !{!5160, !5180, !5184, !5185, !5186, !5187, !5188, !5192, !5193, !5194, !5195, !5199}
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !5158, file: !1399, line: 222, baseType: !5161, size: 64)
!5161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5162, size: 64)
!5162 = !DISubroutineType(types: !5163)
!5163 = !{!443, !5164}
!5164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5165, size: 64)
!5165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !1399, line: 197, size: 1088, elements: !5166)
!5166 = !{!5167, !5168, !5169, !5170, !5171, !5172, !5173, !5174, !5175, !5176, !5177, !5178, !5179}
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !5165, file: !1399, line: 199, baseType: !5089, size: 64)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !5165, file: !1399, line: 200, baseType: !1151, size: 64, offset: 64)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !5165, file: !1399, line: 201, baseType: !1508, size: 64, offset: 128)
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !5165, file: !1399, line: 202, baseType: !890, size: 64, offset: 192)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !5165, file: !1399, line: 205, baseType: !1520, size: 192, offset: 256)
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !5165, file: !1399, line: 206, baseType: !1520, size: 192, offset: 448)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !5165, file: !1399, line: 207, baseType: !443, size: 32, offset: 640)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5165, file: !1399, line: 208, baseType: !904, size: 128, offset: 704)
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !5165, file: !1399, line: 209, baseType: !1076, size: 64, offset: 832)
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !5165, file: !1399, line: 211, baseType: !1121, size: 64, offset: 896)
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !5165, file: !1399, line: 212, baseType: !1011, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !5165, file: !1399, line: 213, baseType: !1011, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !5165, file: !1399, line: 214, baseType: !2085, size: 64, offset: 1024)
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5158, file: !1399, line: 223, baseType: !5181, size: 64, offset: 64)
!5181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5182, size: 64)
!5182 = !DISubroutineType(types: !5183)
!5183 = !{null, !5164}
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !5158, file: !1399, line: 236, baseType: !1545, size: 64, offset: 128)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !5158, file: !1399, line: 238, baseType: !1532, size: 64, offset: 192)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !5158, file: !1399, line: 239, baseType: !1541, size: 64, offset: 256)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !5158, file: !1399, line: 240, baseType: !1537, size: 64, offset: 320)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !5158, file: !1399, line: 242, baseType: !5189, size: 64, offset: 384)
!5189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5190, size: 64)
!5190 = !DISubroutineType(types: !5191)
!5191 = !{!1107, !5164, !1076, !1121, !1313}
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !5158, file: !1399, line: 252, baseType: !1121, size: 64, offset: 448)
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !5158, file: !1399, line: 259, baseType: !1011, size: 8, offset: 512)
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !5158, file: !1399, line: 260, baseType: !5189, size: 64, offset: 576)
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !5158, file: !1399, line: 263, baseType: !5196, size: 64, offset: 640)
!5196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5197, size: 64)
!5197 = !DISubroutineType(types: !5198)
!5198 = !{!4772, !5164, !4774}
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !5158, file: !1399, line: 266, baseType: !5200, size: 64, offset: 704)
!5200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5201, size: 64)
!5201 = !DISubroutineType(types: !5202)
!5202 = !{!443, !5164, !2057}
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !5153, file: !1399, line: 109, baseType: !5204, size: 64, offset: 64)
!5204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5205, size: 64)
!5205 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !1399, line: 31, flags: DIFlagFwdDecl)
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5153, file: !1399, line: 110, baseType: !1313, size: 64, offset: 128)
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !5153, file: !1399, line: 111, baseType: !5089, size: 64, offset: 192)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !5090, file: !1399, line: 148, baseType: !890, size: 64, offset: 768)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5090, file: !1399, line: 154, baseType: !987, size: 64, offset: 832)
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5090, file: !1399, line: 156, baseType: !965, size: 16, offset: 896)
!5211 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5090, file: !1399, line: 157, baseType: !1116, size: 16, offset: 912)
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !5090, file: !1399, line: 158, baseType: !5213, size: 64, offset: 960)
!5213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5214, size: 64)
!5214 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !1399, line: 32, flags: DIFlagFwdDecl)
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !1020, file: !1021, line: 71, baseType: !1878, size: 32, offset: 448)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !1020, file: !1021, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !1020, file: !1021, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!5218 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !1020, file: !1021, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !1020, file: !1021, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !1020, file: !1021, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1017, file: !25, line: 463, baseType: !1960, size: 64, offset: 512)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1017, file: !25, line: 465, baseType: !5223, size: 64, offset: 576)
!5223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5224, size: 64)
!5224 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !25, line: 36, flags: DIFlagFwdDecl)
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !1017, file: !25, line: 467, baseType: !1024, size: 64, offset: 640)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1017, file: !25, line: 468, baseType: !5227, size: 64, offset: 704)
!5227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5228, size: 64)
!5228 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5229)
!5229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !25, line: 87, size: 384, elements: !5230)
!5230 = !{!5231, !5232, !5233, !5237, !5242, !5246}
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5229, file: !25, line: 88, baseType: !1024, size: 64)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !5229, file: !25, line: 89, baseType: !1127, size: 64, offset: 64)
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !5229, file: !25, line: 90, baseType: !5234, size: 64, offset: 128)
!5234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5235, size: 64)
!5235 = !DISubroutineType(types: !5236)
!5236 = !{!443, !1960, !1071}
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !5229, file: !25, line: 91, baseType: !5238, size: 64, offset: 192)
!5238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5239, size: 64)
!5239 = !DISubroutineType(types: !5240)
!5240 = !{!1076, !1960, !5241, !2871, !2872}
!5241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5229, file: !25, line: 93, baseType: !5243, size: 64, offset: 256)
!5243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5244, size: 64)
!5244 = !DISubroutineType(types: !5245)
!5245 = !{null, !1960}
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !5229, file: !25, line: 95, baseType: !5247, size: 64, offset: 320)
!5247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5248, size: 64)
!5248 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5249)
!5249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !37, line: 278, size: 1472, elements: !5250)
!5250 = !{!5251, !5255, !5256, !5257, !5258, !5259, !5260, !5261, !5262, !5263, !5264, !5265, !5266, !5267, !5268, !5269, !5270, !5271, !5272, !5273, !5274, !5275, !5276}
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !5249, file: !37, line: 279, baseType: !5252, size: 64)
!5252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5253, size: 64)
!5253 = !DISubroutineType(types: !5254)
!5254 = !{!443, !1960}
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !5249, file: !37, line: 280, baseType: !5243, size: 64, offset: 64)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !5249, file: !37, line: 281, baseType: !5252, size: 64, offset: 128)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !5249, file: !37, line: 282, baseType: !5252, size: 64, offset: 192)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !5249, file: !37, line: 283, baseType: !5252, size: 64, offset: 256)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !5249, file: !37, line: 284, baseType: !5252, size: 64, offset: 320)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !5249, file: !37, line: 285, baseType: !5252, size: 64, offset: 384)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !5249, file: !37, line: 286, baseType: !5252, size: 64, offset: 448)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !5249, file: !37, line: 287, baseType: !5252, size: 64, offset: 512)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !5249, file: !37, line: 288, baseType: !5252, size: 64, offset: 576)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !5249, file: !37, line: 289, baseType: !5252, size: 64, offset: 640)
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !5249, file: !37, line: 290, baseType: !5252, size: 64, offset: 704)
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !5249, file: !37, line: 291, baseType: !5252, size: 64, offset: 768)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !5249, file: !37, line: 292, baseType: !5252, size: 64, offset: 832)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !5249, file: !37, line: 293, baseType: !5252, size: 64, offset: 896)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !5249, file: !37, line: 294, baseType: !5252, size: 64, offset: 960)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !5249, file: !37, line: 295, baseType: !5252, size: 64, offset: 1024)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !5249, file: !37, line: 296, baseType: !5252, size: 64, offset: 1088)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !5249, file: !37, line: 297, baseType: !5252, size: 64, offset: 1152)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !5249, file: !37, line: 298, baseType: !5252, size: 64, offset: 1216)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !5249, file: !37, line: 299, baseType: !5252, size: 64, offset: 1280)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !5249, file: !37, line: 300, baseType: !5252, size: 64, offset: 1344)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !5249, file: !37, line: 301, baseType: !5252, size: 64, offset: 1408)
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1017, file: !25, line: 470, baseType: !5278, size: 64, offset: 768)
!5278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5279, size: 64)
!5279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !5280, line: 82, size: 1408, elements: !5281)
!5280 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!5281 = !{!5282, !5283, !5284, !5285, !5286, !5287, !5288, !5347, !5348, !5349, !5350, !5351, !5352, !5353, !5354, !5355, !5356, !5357, !5358, !5359, !5363, !5366, !5367}
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5279, file: !5280, line: 83, baseType: !1024, size: 64)
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !5279, file: !5280, line: 84, baseType: !1024, size: 64, offset: 64)
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !5279, file: !5280, line: 85, baseType: !1960, size: 64, offset: 128)
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !5279, file: !5280, line: 86, baseType: !1127, size: 64, offset: 192)
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !5279, file: !5280, line: 87, baseType: !1127, size: 64, offset: 256)
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !5279, file: !5280, line: 88, baseType: !1127, size: 64, offset: 320)
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !5279, file: !5280, line: 90, baseType: !5289, size: 64, offset: 384)
!5289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5290, size: 64)
!5290 = !DISubroutineType(types: !5291)
!5291 = !{!443, !1960, !5292}
!5292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5293, size: 64)
!5293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !19, line: 95, size: 1152, elements: !5294)
!5294 = !{!5295, !5296, !5297, !5298, !5299, !5300, !5301, !5314, !5327, !5328, !5329, !5330, !5331, !5339, !5340, !5341, !5342, !5343, !5344}
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5293, file: !19, line: 96, baseType: !1024, size: 64)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !5293, file: !19, line: 97, baseType: !5278, size: 64, offset: 64)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5293, file: !19, line: 99, baseType: !1413, size: 64, offset: 128)
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !5293, file: !19, line: 100, baseType: !1024, size: 64, offset: 192)
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !5293, file: !19, line: 102, baseType: !1011, size: 8, offset: 256)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !5293, file: !19, line: 103, baseType: !18, size: 32, offset: 288)
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !5293, file: !19, line: 105, baseType: !5302, size: 64, offset: 320)
!5302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5303, size: 64)
!5303 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5304)
!5304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !5305, line: 262, size: 1600, elements: !5306)
!5305 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!5306 = !{!5307, !5308, !5309, !5313}
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5304, file: !5305, line: 263, baseType: !960, size: 256)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5304, file: !5305, line: 264, baseType: !960, size: 256, offset: 256)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !5304, file: !5305, line: 265, baseType: !5310, size: 1024, offset: 512)
!5310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !961, size: 1024, elements: !5311)
!5311 = !{!5312}
!5312 = !DISubrange(count: 128)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5304, file: !5305, line: 266, baseType: !4027, size: 64, offset: 1536)
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !5293, file: !19, line: 106, baseType: !5315, size: 64, offset: 384)
!5315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5316, size: 64)
!5316 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5317)
!5317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !5305, line: 210, size: 256, elements: !5318)
!5318 = !{!5319, !5323, !5325, !5326}
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5317, file: !5305, line: 211, baseType: !5320, size: 72)
!5320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1863, size: 72, elements: !5321)
!5321 = !{!5322}
!5322 = !DISubrange(count: 9)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !5317, file: !5305, line: 212, baseType: !5324, size: 64, offset: 128)
!5324 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !5305, line: 14, baseType: !898)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !5317, file: !5305, line: 213, baseType: !939, size: 32, offset: 192)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !5317, file: !5305, line: 214, baseType: !939, size: 32, offset: 224)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !5293, file: !19, line: 108, baseType: !5252, size: 64, offset: 448)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !5293, file: !19, line: 109, baseType: !5243, size: 64, offset: 512)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !5293, file: !19, line: 110, baseType: !5252, size: 64, offset: 576)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !5293, file: !19, line: 111, baseType: !5243, size: 64, offset: 640)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !5293, file: !19, line: 112, baseType: !5332, size: 64, offset: 704)
!5332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5333, size: 64)
!5333 = !DISubroutineType(types: !5334)
!5334 = !{!443, !1960, !5335}
!5335 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !37, line: 52, baseType: !5336)
!5336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !37, line: 50, size: 32, elements: !5337)
!5337 = !{!5338}
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !5336, file: !37, line: 51, baseType: !443, size: 32)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !5293, file: !19, line: 113, baseType: !5252, size: 64, offset: 768)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !5293, file: !19, line: 114, baseType: !1127, size: 64, offset: 832)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !5293, file: !19, line: 115, baseType: !1127, size: 64, offset: 896)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !5293, file: !19, line: 117, baseType: !5247, size: 64, offset: 960)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !5293, file: !19, line: 118, baseType: !5243, size: 64, offset: 1024)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5293, file: !19, line: 120, baseType: !5345, size: 64, offset: 1088)
!5345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5346, size: 64)
!5346 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !19, line: 120, flags: DIFlagFwdDecl)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !5279, file: !5280, line: 91, baseType: !5234, size: 64, offset: 448)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !5279, file: !5280, line: 92, baseType: !5252, size: 64, offset: 512)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !5279, file: !5280, line: 93, baseType: !5243, size: 64, offset: 576)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !5279, file: !5280, line: 94, baseType: !5252, size: 64, offset: 640)
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !5279, file: !5280, line: 95, baseType: !5243, size: 64, offset: 704)
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !5279, file: !5280, line: 97, baseType: !5252, size: 64, offset: 768)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !5279, file: !5280, line: 98, baseType: !5252, size: 64, offset: 832)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !5279, file: !5280, line: 100, baseType: !5332, size: 64, offset: 896)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !5279, file: !5280, line: 101, baseType: !5252, size: 64, offset: 960)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !5279, file: !5280, line: 103, baseType: !5252, size: 64, offset: 1024)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !5279, file: !5280, line: 105, baseType: !5252, size: 64, offset: 1088)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !5279, file: !5280, line: 107, baseType: !5247, size: 64, offset: 1152)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !5279, file: !5280, line: 109, baseType: !5360, size: 64, offset: 1216)
!5360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5361, size: 64)
!5361 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5362)
!5362 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !5280, line: 109, flags: DIFlagFwdDecl)
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5279, file: !5280, line: 111, baseType: !5364, size: 64, offset: 1280)
!5364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5365, size: 64)
!5365 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !5280, line: 111, flags: DIFlagFwdDecl)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !5279, file: !5280, line: 112, baseType: !1428, offset: 1344)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !5279, file: !5280, line: 114, baseType: !1011, size: 8, offset: 1344)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !1017, file: !25, line: 471, baseType: !5292, size: 64, offset: 832)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !1017, file: !25, line: 473, baseType: !890, size: 64, offset: 896)
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !1017, file: !25, line: 475, baseType: !890, size: 64, offset: 960)
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1017, file: !25, line: 480, baseType: !1520, size: 192, offset: 1024)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !1017, file: !25, line: 484, baseType: !5373, size: 576, offset: 1216)
!5373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !25, line: 361, size: 576, elements: !5374)
!5374 = !{!5375, !5376, !5377, !5378, !5379, !5380}
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !5373, file: !25, line: 362, baseType: !904, size: 128)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !5373, file: !25, line: 363, baseType: !904, size: 128, offset: 128)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !5373, file: !25, line: 364, baseType: !904, size: 128, offset: 256)
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !5373, file: !25, line: 365, baseType: !904, size: 128, offset: 384)
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !5373, file: !25, line: 366, baseType: !1011, size: 8, offset: 512)
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !5373, file: !25, line: 367, baseType: !24, size: 32, offset: 544)
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !1017, file: !25, line: 485, baseType: !5382, size: 2304, offset: 1792)
!5382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !37, line: 565, size: 2304, elements: !5383)
!5383 = !{!5384, !5385, !5386, !5387, !5388, !5389, !5390, !5391, !5392, !5393, !5394, !5395, !5396, !5397, !5398, !5399, !5426, !5427, !5428, !5429, !5430, !5431, !5432, !5433, !5434, !5435, !5436, !5437, !5438, !5439, !5440, !5441, !5442, !5443, !5444, !5445, !5446, !5447, !5448, !5449, !5450, !5451, !5452, !5453, !5454, !5455, !5456, !5457, !5458, !5468, !5472}
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !5382, file: !37, line: 566, baseType: !5335, size: 32)
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !5382, file: !37, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !5382, file: !37, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !5382, file: !37, line: 569, baseType: !1011, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !5382, file: !37, line: 570, baseType: !1011, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!5389 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !5382, file: !37, line: 571, baseType: !1011, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !5382, file: !37, line: 572, baseType: !1011, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !5382, file: !37, line: 573, baseType: !1011, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !5382, file: !37, line: 574, baseType: !1011, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !5382, file: !37, line: 575, baseType: !1011, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !5382, file: !37, line: 576, baseType: !1011, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !5382, file: !37, line: 577, baseType: !938, size: 32, offset: 64)
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5382, file: !37, line: 578, baseType: !1035, offset: 96)
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !5382, file: !37, line: 580, baseType: !904, size: 128, offset: 128)
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !5382, file: !37, line: 581, baseType: !2548, size: 192, offset: 256)
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !5382, file: !37, line: 582, baseType: !5400, size: 64, offset: 448)
!5400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5401, size: 64)
!5401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !5402, line: 43, size: 1472, elements: !5403)
!5402 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!5403 = !{!5404, !5405, !5406, !5407, !5408, !5411, !5412, !5413, !5414, !5415, !5416, !5417, !5418, !5419, !5420, !5421, !5422, !5423, !5424, !5425}
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5401, file: !5402, line: 44, baseType: !1024, size: 64)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5401, file: !5402, line: 45, baseType: !443, size: 32, offset: 64)
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !5401, file: !5402, line: 46, baseType: !904, size: 128, offset: 128)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5401, file: !5402, line: 47, baseType: !1035, offset: 256)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !5401, file: !5402, line: 48, baseType: !5409, size: 64, offset: 256)
!5409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5410, size: 64)
!5410 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !37, line: 533, flags: DIFlagFwdDecl)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !5401, file: !5402, line: 49, baseType: !1935, size: 320, offset: 320)
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !5401, file: !5402, line: 50, baseType: !898, size: 64, offset: 640)
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !5401, file: !5402, line: 51, baseType: !2361, size: 64, offset: 704)
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !5401, file: !5402, line: 52, baseType: !2361, size: 64, offset: 768)
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !5401, file: !5402, line: 53, baseType: !2361, size: 64, offset: 832)
!5416 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !5401, file: !5402, line: 54, baseType: !2361, size: 64, offset: 896)
!5417 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !5401, file: !5402, line: 55, baseType: !2361, size: 64, offset: 960)
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !5401, file: !5402, line: 56, baseType: !898, size: 64, offset: 1024)
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !5401, file: !5402, line: 57, baseType: !898, size: 64, offset: 1088)
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !5401, file: !5402, line: 58, baseType: !898, size: 64, offset: 1152)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !5401, file: !5402, line: 59, baseType: !898, size: 64, offset: 1216)
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !5401, file: !5402, line: 60, baseType: !898, size: 64, offset: 1280)
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5401, file: !5402, line: 61, baseType: !1960, size: 64, offset: 1344)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !5401, file: !5402, line: 62, baseType: !1011, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !5401, file: !5402, line: 63, baseType: !1011, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !5382, file: !37, line: 583, baseType: !1011, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !5382, file: !37, line: 584, baseType: !1011, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !5382, file: !37, line: 585, baseType: !1011, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !5382, file: !37, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !5382, file: !37, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !5382, file: !37, line: 592, baseType: !2353, size: 512, offset: 576)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !5382, file: !37, line: 593, baseType: !987, size: 64, offset: 1088)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !5382, file: !37, line: 594, baseType: !915, size: 256, offset: 1152)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !5382, file: !37, line: 595, baseType: !1954, size: 128, offset: 1408)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !5382, file: !37, line: 596, baseType: !5409, size: 64, offset: 1536)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !5382, file: !37, line: 597, baseType: !1586, size: 32, offset: 1600)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !5382, file: !37, line: 598, baseType: !1586, size: 32, offset: 1632)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !5382, file: !37, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !5382, file: !37, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !5382, file: !37, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !5382, file: !37, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !5382, file: !37, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !5382, file: !37, line: 604, baseType: !1011, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !5382, file: !37, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !5382, file: !37, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !5382, file: !37, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !5382, file: !37, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !5382, file: !37, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !5382, file: !37, line: 610, baseType: !7, size: 32, offset: 1696)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !5382, file: !37, line: 611, baseType: !36, size: 32, offset: 1728)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !5382, file: !37, line: 612, baseType: !44, size: 32, offset: 1760)
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !5382, file: !37, line: 613, baseType: !443, size: 32, offset: 1792)
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !5382, file: !37, line: 614, baseType: !443, size: 32, offset: 1824)
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !5382, file: !37, line: 615, baseType: !987, size: 64, offset: 1856)
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !5382, file: !37, line: 616, baseType: !987, size: 64, offset: 1920)
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !5382, file: !37, line: 617, baseType: !987, size: 64, offset: 1984)
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !5382, file: !37, line: 618, baseType: !987, size: 64, offset: 2048)
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !5382, file: !37, line: 620, baseType: !5459, size: 64, offset: 2112)
!5459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5460, size: 64)
!5460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !37, line: 536, size: 256, elements: !5461)
!5461 = !{!5462, !5463, !5464, !5465}
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5460, file: !37, line: 537, baseType: !1035)
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !5460, file: !37, line: 538, baseType: !7, size: 32)
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !5460, file: !37, line: 540, baseType: !904, size: 128, offset: 64)
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !5460, file: !37, line: 543, baseType: !5466, size: 64, offset: 192)
!5466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5467, size: 64)
!5467 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !37, line: 534, flags: DIFlagFwdDecl)
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !5382, file: !37, line: 621, baseType: !5469, size: 64, offset: 2176)
!5469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5470, size: 64)
!5470 = !DISubroutineType(types: !5471)
!5471 = !{null, !1960, !2496}
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !5382, file: !37, line: 622, baseType: !5473, size: 64, offset: 2240)
!5473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5474, size: 64)
!5474 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !37, line: 622, flags: DIFlagFwdDecl)
!5475 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !1017, file: !25, line: 486, baseType: !5476, size: 64, offset: 4096)
!5476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5477, size: 64)
!5477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !37, line: 642, size: 1792, elements: !5478)
!5478 = !{!5479, !5480, !5481, !5485, !5486, !5487}
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5477, file: !37, line: 643, baseType: !5249, size: 1472)
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5477, file: !37, line: 644, baseType: !5252, size: 64, offset: 1472)
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !5477, file: !37, line: 645, baseType: !5482, size: 64, offset: 1536)
!5482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5483, size: 64)
!5483 = !DISubroutineType(types: !5484)
!5484 = !{null, !1960, !1011}
!5485 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !5477, file: !37, line: 646, baseType: !5252, size: 64, offset: 1600)
!5486 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !5477, file: !37, line: 647, baseType: !5243, size: 64, offset: 1664)
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !5477, file: !37, line: 648, baseType: !5243, size: 64, offset: 1728)
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !1017, file: !25, line: 493, baseType: !5489, size: 64, offset: 4160)
!5489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5490, size: 64)
!5490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !51, line: 162, size: 1088, elements: !5491)
!5491 = !{!5492, !5493, !5494, !5666, !5667, !5668, !5669, !5670, !5671, !5674, !5675, !5676, !5677, !5678, !5679, !5680}
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !5490, file: !51, line: 163, baseType: !904, size: 128)
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5490, file: !51, line: 164, baseType: !1024, size: 64, offset: 128)
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5490, file: !51, line: 165, baseType: !5495, size: 64, offset: 192)
!5495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5496, size: 64)
!5496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5497)
!5497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !51, line: 105, size: 640, elements: !5498)
!5498 = !{!5499, !5617, !5628, !5633, !5637, !5643, !5647, !5651, !5658, !5662}
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !5497, file: !51, line: 106, baseType: !5500, size: 64)
!5500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5501, size: 64)
!5501 = !DISubroutineType(types: !5502)
!5502 = !{!443, !5489, !5503, !50}
!5503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5504, size: 64)
!5504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !5505, line: 51, size: 1344, elements: !5506)
!5505 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!5506 = !{!5507, !5508, !5510, !5511, !5601, !5610, !5611, !5612, !5613, !5614, !5615, !5616}
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5504, file: !5505, line: 52, baseType: !1024, size: 64)
!5508 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !5504, file: !5505, line: 53, baseType: !5509, size: 32, offset: 64)
!5509 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !5505, line: 28, baseType: !938)
!5510 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !5504, file: !5505, line: 54, baseType: !1024, size: 64, offset: 128)
!5511 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !5504, file: !5505, line: 55, baseType: !5512, size: 192, offset: 192)
!5512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !5513, line: 17, size: 192, elements: !5514)
!5513 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!5514 = !{!5515, !5517, !5600}
!5515 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !5512, file: !5513, line: 18, baseType: !5516, size: 64)
!5516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5512, size: 64)
!5517 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5512, file: !5513, line: 19, baseType: !5518, size: 64, offset: 64)
!5518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5519, size: 64)
!5519 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5520)
!5520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !5513, line: 110, size: 1152, elements: !5521)
!5521 = !{!5522, !5526, !5530, !5536, !5542, !5546, !5550, !5555, !5559, !5560, !5564, !5568, !5572, !5583, !5584, !5585, !5586, !5596}
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !5520, file: !5513, line: 111, baseType: !5523, size: 64)
!5523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5524, size: 64)
!5524 = !DISubroutineType(types: !5525)
!5525 = !{!5516, !5516}
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !5520, file: !5513, line: 112, baseType: !5527, size: 64, offset: 64)
!5527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5528, size: 64)
!5528 = !DISubroutineType(types: !5529)
!5529 = !{null, !5516}
!5530 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !5520, file: !5513, line: 113, baseType: !5531, size: 64, offset: 128)
!5531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5532, size: 64)
!5532 = !DISubroutineType(types: !5533)
!5533 = !{!1011, !5534}
!5534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5535, size: 64)
!5535 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5512)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !5520, file: !5513, line: 114, baseType: !5537, size: 64, offset: 192)
!5537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5538, size: 64)
!5538 = !DISubroutineType(types: !5539)
!5539 = !{!4027, !5534, !5540}
!5540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5541, size: 64)
!5541 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1017)
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !5520, file: !5513, line: 116, baseType: !5543, size: 64, offset: 256)
!5543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5544, size: 64)
!5544 = !DISubroutineType(types: !5545)
!5545 = !{!1011, !5534, !1024}
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !5520, file: !5513, line: 118, baseType: !5547, size: 64, offset: 320)
!5547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5548, size: 64)
!5548 = !DISubroutineType(types: !5549)
!5549 = !{!443, !5534, !1024, !7, !890, !1121}
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !5520, file: !5513, line: 123, baseType: !5551, size: 64, offset: 384)
!5551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5552, size: 64)
!5552 = !DISubroutineType(types: !5553)
!5553 = !{!443, !5534, !1024, !5554, !1121}
!5554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 64)
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !5520, file: !5513, line: 126, baseType: !5556, size: 64, offset: 448)
!5556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5557, size: 64)
!5557 = !DISubroutineType(types: !5558)
!5558 = !{!1024, !5534}
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !5520, file: !5513, line: 127, baseType: !5556, size: 64, offset: 512)
!5560 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !5520, file: !5513, line: 128, baseType: !5561, size: 64, offset: 576)
!5561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5562, size: 64)
!5562 = !DISubroutineType(types: !5563)
!5563 = !{!5516, !5534}
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !5520, file: !5513, line: 130, baseType: !5565, size: 64, offset: 640)
!5565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5566, size: 64)
!5566 = !DISubroutineType(types: !5567)
!5567 = !{!5516, !5534, !5516}
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !5520, file: !5513, line: 133, baseType: !5569, size: 64, offset: 704)
!5569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5570, size: 64)
!5570 = !DISubroutineType(types: !5571)
!5571 = !{!5516, !5534, !1024}
!5572 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !5520, file: !5513, line: 135, baseType: !5573, size: 64, offset: 768)
!5573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5574, size: 64)
!5574 = !DISubroutineType(types: !5575)
!5575 = !{!443, !5534, !1024, !1024, !7, !7, !5576}
!5576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5577, size: 64)
!5577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !5513, line: 43, size: 640, elements: !5578)
!5578 = !{!5579, !5580, !5581}
!5579 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !5577, file: !5513, line: 44, baseType: !5516, size: 64)
!5580 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !5577, file: !5513, line: 45, baseType: !7, size: 32, offset: 64)
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !5577, file: !5513, line: 46, baseType: !5582, size: 512, offset: 128)
!5582 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 512, elements: !2391)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !5520, file: !5513, line: 140, baseType: !5565, size: 64, offset: 832)
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !5520, file: !5513, line: 143, baseType: !5561, size: 64, offset: 896)
!5585 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !5520, file: !5513, line: 145, baseType: !5523, size: 64, offset: 960)
!5586 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !5520, file: !5513, line: 146, baseType: !5587, size: 64, offset: 1024)
!5587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5588, size: 64)
!5588 = !DISubroutineType(types: !5589)
!5589 = !{!443, !5534, !5590}
!5590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5591, size: 64)
!5591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !5513, line: 29, size: 128, elements: !5592)
!5592 = !{!5593, !5594, !5595}
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !5591, file: !5513, line: 30, baseType: !7, size: 32)
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5591, file: !5513, line: 31, baseType: !7, size: 32, offset: 32)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !5591, file: !5513, line: 32, baseType: !5534, size: 64, offset: 64)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !5520, file: !5513, line: 148, baseType: !5597, size: 64, offset: 1088)
!5597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5598, size: 64)
!5598 = !DISubroutineType(types: !5599)
!5599 = !{!443, !5534, !1960}
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5512, file: !5513, line: 20, baseType: !1960, size: 64, offset: 128)
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !5504, file: !5505, line: 57, baseType: !5602, size: 64, offset: 384)
!5602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5603, size: 64)
!5603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !5505, line: 31, size: 704, elements: !5604)
!5604 = !{!5605, !5606, !5607, !5608, !5609}
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5603, file: !5505, line: 32, baseType: !1076, size: 64)
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5603, file: !5505, line: 33, baseType: !443, size: 32, offset: 64)
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5603, file: !5505, line: 34, baseType: !890, size: 64, offset: 128)
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5603, file: !5505, line: 35, baseType: !5602, size: 64, offset: 192)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5603, file: !5505, line: 43, baseType: !1142, size: 448, offset: 256)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !5504, file: !5505, line: 58, baseType: !5602, size: 64, offset: 448)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5504, file: !5505, line: 59, baseType: !5503, size: 64, offset: 512)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !5504, file: !5505, line: 60, baseType: !5503, size: 64, offset: 576)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !5504, file: !5505, line: 61, baseType: !5503, size: 64, offset: 640)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5504, file: !5505, line: 63, baseType: !1020, size: 512, offset: 704)
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5504, file: !5505, line: 65, baseType: !898, size: 64, offset: 1216)
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5504, file: !5505, line: 66, baseType: !890, size: 64, offset: 1280)
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !5497, file: !51, line: 108, baseType: !5618, size: 64, offset: 64)
!5618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5619, size: 64)
!5619 = !DISubroutineType(types: !5620)
!5620 = !{!443, !5489, !5621, !50}
!5621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5622, size: 64)
!5622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !51, line: 63, size: 640, elements: !5623)
!5623 = !{!5624, !5625, !5626}
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !5622, file: !51, line: 64, baseType: !5516, size: 64)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !5622, file: !51, line: 65, baseType: !443, size: 32, offset: 64)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !5622, file: !51, line: 66, baseType: !5627, size: 512, offset: 96)
!5627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !938, size: 512, elements: !2923)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !5497, file: !51, line: 110, baseType: !5629, size: 64, offset: 128)
!5629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5630, size: 64)
!5630 = !DISubroutineType(types: !5631)
!5631 = !{!443, !5489, !7, !5632}
!5632 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !889, line: 164, baseType: !898)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !5497, file: !51, line: 111, baseType: !5634, size: 64, offset: 192)
!5634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5635, size: 64)
!5635 = !DISubroutineType(types: !5636)
!5636 = !{null, !5489, !7}
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !5497, file: !51, line: 112, baseType: !5638, size: 64, offset: 256)
!5638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5639, size: 64)
!5639 = !DISubroutineType(types: !5640)
!5640 = !{!443, !5489, !5503, !5641, !7, !944, !1838}
!5641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5642, size: 64)
!5642 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !938)
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !5497, file: !51, line: 117, baseType: !5644, size: 64, offset: 320)
!5644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5645, size: 64)
!5645 = !DISubroutineType(types: !5646)
!5646 = !{!443, !5489, !7, !7, !890}
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !5497, file: !51, line: 119, baseType: !5648, size: 64, offset: 384)
!5648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5649, size: 64)
!5649 = !DISubroutineType(types: !5650)
!5650 = !{null, !5489, !7, !7}
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !5497, file: !51, line: 121, baseType: !5652, size: 64, offset: 448)
!5652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5653, size: 64)
!5653 = !DISubroutineType(types: !5654)
!5654 = !{!443, !5489, !5655, !1011}
!5655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5656, size: 64)
!5656 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !5657, line: 11, flags: DIFlagFwdDecl)
!5657 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !5497, file: !51, line: 122, baseType: !5659, size: 64, offset: 512)
!5659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5660, size: 64)
!5660 = !DISubroutineType(types: !5661)
!5661 = !{null, !5489, !5655}
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !5497, file: !51, line: 123, baseType: !5663, size: 64, offset: 576)
!5663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5664, size: 64)
!5664 = !DISubroutineType(types: !5665)
!5665 = !{!443, !5489, !5621, !944, !1838}
!5666 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !5490, file: !51, line: 166, baseType: !890, size: 64, offset: 256)
!5667 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5490, file: !51, line: 167, baseType: !7, size: 32, offset: 320)
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !5490, file: !51, line: 168, baseType: !7, size: 32, offset: 352)
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !5490, file: !51, line: 171, baseType: !5516, size: 64, offset: 384)
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !5490, file: !51, line: 172, baseType: !50, size: 32, offset: 448)
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !5490, file: !51, line: 173, baseType: !5672, size: 64, offset: 512)
!5672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5673, size: 64)
!5673 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !51, line: 134, flags: DIFlagFwdDecl)
!5674 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5490, file: !51, line: 175, baseType: !5489, size: 64, offset: 576)
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !5490, file: !51, line: 182, baseType: !5632, size: 64, offset: 640)
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !5490, file: !51, line: 183, baseType: !7, size: 32, offset: 704)
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !5490, file: !51, line: 184, baseType: !7, size: 32, offset: 736)
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !5490, file: !51, line: 185, baseType: !1578, size: 128, offset: 768)
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !5490, file: !51, line: 186, baseType: !1520, size: 192, offset: 896)
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !5490, file: !51, line: 187, baseType: !5681, offset: 1088)
!5681 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !1975)
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !1017, file: !25, line: 499, baseType: !904, size: 128, offset: 4224)
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !1017, file: !25, line: 502, baseType: !5684, size: 64, offset: 4352)
!5684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5685, size: 64)
!5685 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5686)
!5686 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !25, line: 502, flags: DIFlagFwdDecl)
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !1017, file: !25, line: 504, baseType: !5688, size: 64, offset: 4416)
!5688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !1017, file: !25, line: 505, baseType: !987, size: 64, offset: 4480)
!5690 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !1017, file: !25, line: 510, baseType: !987, size: 64, offset: 4544)
!5691 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !1017, file: !25, line: 511, baseType: !5692, size: 64, offset: 4608)
!5692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5693, size: 64)
!5693 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5694)
!5694 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !25, line: 511, flags: DIFlagFwdDecl)
!5695 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !1017, file: !25, line: 513, baseType: !5696, size: 64, offset: 4672)
!5696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5697, size: 64)
!5697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !25, line: 288, size: 128, elements: !5698)
!5698 = !{!5699, !5700}
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !5697, file: !25, line: 293, baseType: !7, size: 32)
!5700 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !5697, file: !25, line: 294, baseType: !898, size: 64, offset: 64)
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !1017, file: !25, line: 515, baseType: !904, size: 128, offset: 4736)
!5702 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !1017, file: !25, line: 526, baseType: !5703, offset: 4864)
!5703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !5704, line: 5, elements: !1049)
!5704 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !1017, file: !25, line: 528, baseType: !5503, size: 64, offset: 4864)
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !1017, file: !25, line: 529, baseType: !5516, size: 64, offset: 4928)
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !1017, file: !25, line: 534, baseType: !1295, size: 32, offset: 4992)
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1017, file: !25, line: 535, baseType: !938, size: 32, offset: 5024)
!5709 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !1017, file: !25, line: 537, baseType: !1035, offset: 5056)
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !1017, file: !25, line: 538, baseType: !904, size: 128, offset: 5056)
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !1017, file: !25, line: 540, baseType: !5712, size: 64, offset: 5184)
!5712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5713, size: 64)
!5713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !5714, line: 54, size: 960, elements: !5715)
!5714 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!5715 = !{!5716, !5717, !5718, !5719, !5720, !5721, !5722, !5726, !5730, !5731, !5732, !5733, !5737, !5741, !5742}
!5716 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5713, file: !5714, line: 55, baseType: !1024, size: 64)
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5713, file: !5714, line: 56, baseType: !1413, size: 64, offset: 64)
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !5713, file: !5714, line: 58, baseType: !1127, size: 64, offset: 128)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !5713, file: !5714, line: 59, baseType: !1127, size: 64, offset: 192)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !5713, file: !5714, line: 60, baseType: !1028, size: 64, offset: 256)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !5713, file: !5714, line: 62, baseType: !5234, size: 64, offset: 320)
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !5713, file: !5714, line: 63, baseType: !5723, size: 64, offset: 384)
!5723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5724, size: 64)
!5724 = !DISubroutineType(types: !5725)
!5725 = !{!1076, !1960, !5241}
!5726 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !5713, file: !5714, line: 65, baseType: !5727, size: 64, offset: 448)
!5727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5728, size: 64)
!5728 = !DISubroutineType(types: !5729)
!5729 = !{null, !5712}
!5730 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !5713, file: !5714, line: 66, baseType: !5243, size: 64, offset: 512)
!5731 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !5713, file: !5714, line: 68, baseType: !5252, size: 64, offset: 576)
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !5713, file: !5714, line: 70, baseType: !5056, size: 64, offset: 640)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !5713, file: !5714, line: 71, baseType: !5734, size: 64, offset: 704)
!5734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5735, size: 64)
!5735 = !DISubroutineType(types: !5736)
!5736 = !{!4027, !1960}
!5737 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !5713, file: !5714, line: 73, baseType: !5738, size: 64, offset: 768)
!5738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5739, size: 64)
!5739 = !DISubroutineType(types: !5740)
!5740 = !{null, !1960, !2871, !2872}
!5741 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !5713, file: !5714, line: 75, baseType: !5247, size: 64, offset: 832)
!5742 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5713, file: !5714, line: 77, baseType: !5364, size: 64, offset: 896)
!5743 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !1017, file: !25, line: 541, baseType: !1127, size: 64, offset: 5248)
!5744 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1017, file: !25, line: 543, baseType: !5243, size: 64, offset: 5312)
!5745 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !1017, file: !25, line: 544, baseType: !5746, size: 64, offset: 5376)
!5746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5747, size: 64)
!5747 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !25, line: 45, flags: DIFlagFwdDecl)
!5748 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !1017, file: !25, line: 545, baseType: !5749, size: 64, offset: 5440)
!5749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5750, size: 64)
!5750 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !25, line: 47, flags: DIFlagFwdDecl)
!5751 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !1017, file: !25, line: 547, baseType: !1011, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !1017, file: !25, line: 548, baseType: !1011, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!5753 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !1017, file: !25, line: 549, baseType: !1011, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !1017, file: !25, line: 550, baseType: !1011, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !983, file: !954, line: 69, baseType: !1028, size: 64, offset: 5952)
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !983, file: !954, line: 70, baseType: !443, size: 32, offset: 6016)
!5757 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !983, file: !954, line: 70, baseType: !443, size: 32, offset: 6048)
!5758 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !983, file: !954, line: 71, baseType: !5759, size: 64, offset: 6080)
!5759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5760, size: 64)
!5760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !954, line: 48, size: 808, elements: !5761)
!5761 = !{!5762, !5766}
!5762 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !5760, file: !954, line: 49, baseType: !5763, size: 296)
!5763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !961, size: 296, elements: !5764)
!5764 = !{!5765}
!5765 = !DISubrange(count: 37)
!5766 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !5760, file: !954, line: 50, baseType: !5767, size: 512, offset: 296)
!5767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1862, size: 512, elements: !1081)
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !983, file: !954, line: 75, baseType: !5769, size: 448, offset: 6144)
!5769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !158, line: 124, size: 448, elements: !5770)
!5770 = !{!5771, !5772, !5773}
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !5769, file: !158, line: 125, baseType: !915, size: 256)
!5772 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5769, file: !158, line: 126, baseType: !972, size: 128, align: 64, offset: 256)
!5773 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !5769, file: !158, line: 129, baseType: !1947, size: 64, offset: 384)
!5774 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !969, file: !954, line: 153, baseType: !5775, offset: 256)
!5775 = !DICompositeType(tag: DW_TAG_array_type, baseType: !982, elements: !1975)
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !953, file: !954, line: 187, baseType: !983, size: 6592, offset: 448)
!5777 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !953, file: !954, line: 189, baseType: !5778, size: 64, offset: 7040)
!5778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5779, size: 64)
!5779 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5780)
!5780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !71, line: 1844, size: 960, elements: !5781)
!5781 = !{!5782, !5787, !5791, !5795, !5799, !5803, !5804, !5808, !5812, !5816, !5828, !5832, !5858, !5862, !5863}
!5782 = !DIDerivedType(tag: DW_TAG_member, name: "submit_bio", scope: !5780, file: !71, line: 1845, baseType: !5783, size: 64)
!5783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5784, size: 64)
!5784 = !DISubroutineType(types: !5785)
!5785 = !{!5786, !3141}
!5786 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_qc_t", file: !855, line: 515, baseType: !7)
!5787 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !5780, file: !71, line: 1846, baseType: !5788, size: 64, offset: 64)
!5788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5789, size: 64)
!5789 = !DISubroutineType(types: !5790)
!5790 = !{!443, !1847, !3839}
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5780, file: !71, line: 1847, baseType: !5792, size: 64, offset: 128)
!5792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5793, size: 64)
!5793 = !DISubroutineType(types: !5794)
!5794 = !{null, !952, !3839}
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "rw_page", scope: !5780, file: !71, line: 1848, baseType: !5796, size: 64, offset: 192)
!5796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5797, size: 64)
!5797 = !DISubroutineType(types: !5798)
!5798 = !{!443, !1847, !986, !1560, !7}
!5799 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !5780, file: !71, line: 1849, baseType: !5800, size: 64, offset: 256)
!5800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5801, size: 64)
!5801 = !DISubroutineType(types: !5802)
!5802 = !{!443, !1847, !3839, !7, !898}
!5803 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !5780, file: !71, line: 1850, baseType: !5800, size: 64, offset: 320)
!5804 = !DIDerivedType(tag: DW_TAG_member, name: "check_events", scope: !5780, file: !71, line: 1851, baseType: !5805, size: 64, offset: 384)
!5805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5806, size: 64)
!5806 = !DISubroutineType(types: !5807)
!5807 = !{!7, !952, !7}
!5808 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !5780, file: !71, line: 1853, baseType: !5809, size: 64, offset: 448)
!5809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5810, size: 64)
!5810 = !DISubroutineType(types: !5811)
!5811 = !{null, !952}
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "revalidate_disk", scope: !5780, file: !71, line: 1854, baseType: !5813, size: 64, offset: 512)
!5813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5814, size: 64)
!5814 = !DISubroutineType(types: !5815)
!5815 = !{!443, !952}
!5816 = !DIDerivedType(tag: DW_TAG_member, name: "getgeo", scope: !5780, file: !71, line: 1855, baseType: !5817, size: 64, offset: 576)
!5817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5818, size: 64)
!5818 = !DISubroutineType(types: !5819)
!5819 = !{!443, !1847, !5820}
!5820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5821, size: 64)
!5821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_geometry", file: !5822, line: 324, size: 128, elements: !5823)
!5822 = !DIFile(filename: "./include/uapi/linux/hdreg.h", directory: "/home/lizy2001/genbc/linux")
!5823 = !{!5824, !5825, !5826, !5827}
!5824 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !5821, file: !5822, line: 325, baseType: !1211, size: 8)
!5825 = !DIDerivedType(tag: DW_TAG_member, name: "sectors", scope: !5821, file: !5822, line: 326, baseType: !1211, size: 8, offset: 8)
!5826 = !DIDerivedType(tag: DW_TAG_member, name: "cylinders", scope: !5821, file: !5822, line: 327, baseType: !965, size: 16, offset: 16)
!5827 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5821, file: !5822, line: 328, baseType: !898, size: 64, offset: 64)
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "swap_slot_free_notify", scope: !5780, file: !71, line: 1857, baseType: !5829, size: 64, offset: 640)
!5829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5830, size: 64)
!5830 = !DISubroutineType(types: !5831)
!5831 = !{null, !1847, !898}
!5832 = !DIDerivedType(tag: DW_TAG_member, name: "report_zones", scope: !5780, file: !71, line: 1858, baseType: !5833, size: 64, offset: 704)
!5833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5834, size: 64)
!5834 = !DISubroutineType(types: !5835)
!5835 = !{!443, !952, !986, !7, !5836, !890}
!5836 = !DIDerivedType(tag: DW_TAG_typedef, name: "report_zones_cb", file: !71, line: 354, baseType: !5837)
!5837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5838, size: 64)
!5838 = !DISubroutineType(types: !5839)
!5839 = !{!443, !5840, !7, !890}
!5840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5841, size: 64)
!5841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_zone", file: !5842, line: 106, size: 512, elements: !5843)
!5842 = !DIFile(filename: "./include/uapi/linux/blkzoned.h", directory: "/home/lizy2001/genbc/linux")
!5843 = !{!5844, !5845, !5846, !5847, !5848, !5849, !5850, !5851, !5853, !5854}
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5841, file: !5842, line: 107, baseType: !908, size: 64)
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5841, file: !5842, line: 108, baseType: !908, size: 64, offset: 64)
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !5841, file: !5842, line: 109, baseType: !908, size: 64, offset: 128)
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5841, file: !5842, line: 110, baseType: !1863, size: 8, offset: 192)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !5841, file: !5842, line: 111, baseType: !1863, size: 8, offset: 200)
!5849 = !DIDerivedType(tag: DW_TAG_member, name: "non_seq", scope: !5841, file: !5842, line: 112, baseType: !1863, size: 8, offset: 208)
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !5841, file: !5842, line: 113, baseType: !1863, size: 8, offset: 216)
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !5841, file: !5842, line: 114, baseType: !5852, size: 32, offset: 224)
!5852 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1863, size: 32, elements: !1909)
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !5841, file: !5842, line: 115, baseType: !908, size: 64, offset: 256)
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5841, file: !5842, line: 116, baseType: !5855, size: 192, offset: 320)
!5855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1863, size: 192, elements: !5856)
!5856 = !{!5857}
!5857 = !DISubrange(count: 24)
!5858 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !5780, file: !71, line: 1860, baseType: !5859, size: 64, offset: 768)
!5859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5860, size: 64)
!5860 = !DISubroutineType(types: !5861)
!5861 = !{!1076, !952, !5241}
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5780, file: !71, line: 1861, baseType: !1413, size: 64, offset: 832)
!5863 = !DIDerivedType(tag: DW_TAG_member, name: "pr_ops", scope: !5780, file: !71, line: 1862, baseType: !5864, size: 64, offset: 896)
!5864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5865, size: 64)
!5865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5866)
!5866 = !DICompositeType(tag: DW_TAG_structure_type, name: "pr_ops", file: !71, line: 41, flags: DIFlagFwdDecl)
!5867 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !953, file: !954, line: 190, baseType: !3257, size: 64, offset: 7104)
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !953, file: !954, line: 191, baseType: !890, size: 64, offset: 7168)
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !953, file: !954, line: 193, baseType: !443, size: 32, offset: 7232)
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !953, file: !954, line: 194, baseType: !898, size: 64, offset: 7296)
!5871 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !953, file: !954, line: 196, baseType: !1606, size: 256, offset: 7360)
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !953, file: !954, line: 197, baseType: !1028, size: 64, offset: 7616)
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !953, file: !954, line: 199, baseType: !5874, size: 64, offset: 7680)
!5874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5875, size: 64)
!5875 = !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !954, line: 199, flags: DIFlagFwdDecl)
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !953, file: !954, line: 200, baseType: !1586, size: 32, offset: 7744)
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !953, file: !954, line: 201, baseType: !5878, size: 64, offset: 7808)
!5878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5879, size: 64)
!5879 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !954, line: 156, flags: DIFlagFwdDecl)
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !953, file: !954, line: 203, baseType: !1020, size: 512, offset: 7872)
!5881 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !953, file: !954, line: 208, baseType: !443, size: 32, offset: 8384)
!5882 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !953, file: !954, line: 209, baseType: !5883, size: 64, offset: 8448)
!5883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5884, size: 64)
!5884 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !954, line: 157, flags: DIFlagFwdDecl)
!5885 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !953, file: !954, line: 210, baseType: !5886, offset: 8512)
!5886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !1429, line: 192, elements: !1049)
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "pdev", scope: !946, file: !207, line: 432, baseType: !5888, size: 64, offset: 192)
!5888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5889, size: 64)
!5889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !5890, line: 309, size: 19264, elements: !5891)
!5890 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!5891 = !{!5892, !5893, !5968, !5969, !5970, !5971, !5982, !5983, !5984, !5985, !5986, !5987, !5988, !5989, !5990, !5991, !5992, !5993, !5994, !5995, !5996, !5997, !5998, !6063, !6064, !6065, !6067, !6068, !6069, !6070, !6071, !6072, !6073, !6074, !6075, !6076, !6077, !6078, !6079, !6080, !6081, !6082, !6083, !6084, !6085, !6086, !6089, !6090, !6091, !6092, !6093, !6094, !6095, !6096, !6100, !6101, !6102, !6103, !6104, !6105, !6106, !6107, !6108, !6109, !6110, !6111, !6112, !6113, !6114, !6115, !6116, !6117, !6118, !6119, !6120, !6121, !6122, !6123, !6124, !6125, !6126, !6127, !6128, !6129, !6130, !6131, !6132, !6133, !6134, !6135, !6136, !6137, !6139, !6140, !6141, !6142, !6143, !6144, !6146, !6147, !6148, !6151, !6158, !6159, !6160, !6161, !6162, !6163, !6164}
!5892 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !5889, file: !5890, line: 310, baseType: !904, size: 128)
!5893 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !5889, file: !5890, line: 311, baseType: !5894, size: 64, offset: 128)
!5894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5895, size: 64)
!5895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !5890, line: 605, size: 8064, elements: !5896)
!5896 = !{!5897, !5898, !5899, !5900, !5901, !5902, !5903, !5918, !5919, !5920, !5944, !5947, !5948, !5952, !5953, !5954, !5955, !5956, !5960, !5961, !5963, !5964, !5965, !5966, !5967}
!5897 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5895, file: !5890, line: 606, baseType: !904, size: 128)
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5895, file: !5890, line: 607, baseType: !5894, size: 64, offset: 128)
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5895, file: !5890, line: 608, baseType: !904, size: 128, offset: 192)
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !5895, file: !5890, line: 609, baseType: !904, size: 128, offset: 320)
!5901 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !5895, file: !5890, line: 610, baseType: !5888, size: 64, offset: 448)
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !5895, file: !5890, line: 611, baseType: !904, size: 128, offset: 512)
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !5895, file: !5890, line: 613, baseType: !5904, size: 256, offset: 640)
!5904 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5905, size: 256, elements: !1909)
!5905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5906, size: 64)
!5906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !5907, line: 20, size: 512, elements: !5908)
!5907 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!5908 = !{!5909, !5911, !5912, !5913, !5914, !5915, !5916, !5917}
!5909 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5906, file: !5907, line: 21, baseType: !5910, size: 64)
!5910 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !889, line: 158, baseType: !4025)
!5911 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !5906, file: !5907, line: 22, baseType: !5910, size: 64, offset: 64)
!5912 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5906, file: !5907, line: 23, baseType: !1024, size: 64, offset: 128)
!5913 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5906, file: !5907, line: 24, baseType: !898, size: 64, offset: 192)
!5914 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !5906, file: !5907, line: 25, baseType: !898, size: 64, offset: 256)
!5915 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5906, file: !5907, line: 26, baseType: !5905, size: 64, offset: 320)
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !5906, file: !5907, line: 26, baseType: !5905, size: 64, offset: 384)
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !5906, file: !5907, line: 26, baseType: !5905, size: 64, offset: 448)
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !5895, file: !5890, line: 614, baseType: !904, size: 128, offset: 896)
!5919 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !5895, file: !5890, line: 615, baseType: !5906, size: 512, offset: 1024)
!5920 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5895, file: !5890, line: 617, baseType: !5921, size: 64, offset: 1536)
!5921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5922, size: 64)
!5922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !5890, line: 731, size: 320, elements: !5923)
!5923 = !{!5924, !5928, !5932, !5936, !5940}
!5924 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !5922, file: !5890, line: 732, baseType: !5925, size: 64)
!5925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5926, size: 64)
!5926 = !DISubroutineType(types: !5927)
!5927 = !{!443, !5894}
!5928 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !5922, file: !5890, line: 733, baseType: !5929, size: 64, offset: 64)
!5929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5930, size: 64)
!5930 = !DISubroutineType(types: !5931)
!5931 = !{null, !5894}
!5932 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !5922, file: !5890, line: 734, baseType: !5933, size: 64, offset: 128)
!5933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5934, size: 64)
!5934 = !DISubroutineType(types: !5935)
!5935 = !{!890, !5894, !7, !443}
!5936 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !5922, file: !5890, line: 735, baseType: !5937, size: 64, offset: 192)
!5937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5938, size: 64)
!5938 = !DISubroutineType(types: !5939)
!5939 = !{!443, !5894, !7, !443, !443, !2467}
!5940 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !5922, file: !5890, line: 736, baseType: !5941, size: 64, offset: 256)
!5941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5942, size: 64)
!5942 = !DISubroutineType(types: !5943)
!5943 = !{!443, !5894, !7, !443, !443, !938}
!5944 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !5895, file: !5890, line: 618, baseType: !5945, size: 64, offset: 1600)
!5945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5946, size: 64)
!5946 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !5890, line: 537, flags: DIFlagFwdDecl)
!5947 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !5895, file: !5890, line: 619, baseType: !890, size: 64, offset: 1664)
!5948 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !5895, file: !5890, line: 620, baseType: !5949, size: 64, offset: 1728)
!5949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5950, size: 64)
!5950 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !5951, line: 123, flags: DIFlagFwdDecl)
!5951 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!5952 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !5895, file: !5890, line: 622, baseType: !1211, size: 8, offset: 1792)
!5953 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !5895, file: !5890, line: 623, baseType: !1211, size: 8, offset: 1800)
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !5895, file: !5890, line: 624, baseType: !1211, size: 8, offset: 1808)
!5955 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !5895, file: !5890, line: 625, baseType: !1211, size: 8, offset: 1816)
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5895, file: !5890, line: 630, baseType: !5957, size: 384, offset: 1824)
!5957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !961, size: 384, elements: !5958)
!5958 = !{!5959}
!5959 = !DISubrange(count: 48)
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !5895, file: !5890, line: 632, baseType: !965, size: 16, offset: 2208)
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !5895, file: !5890, line: 633, baseType: !5962, size: 16, offset: 2224)
!5962 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !5890, line: 237, baseType: !965)
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !5895, file: !5890, line: 634, baseType: !1960, size: 64, offset: 2240)
!5964 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5895, file: !5890, line: 635, baseType: !1017, size: 5568, offset: 2304)
!5965 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !5895, file: !5890, line: 636, baseType: !1141, size: 64, offset: 7872)
!5966 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !5895, file: !5890, line: 637, baseType: !1141, size: 64, offset: 7936)
!5967 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !5895, file: !5890, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!5968 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !5889, file: !5890, line: 312, baseType: !5894, size: 64, offset: 192)
!5969 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !5889, file: !5890, line: 314, baseType: !890, size: 64, offset: 256)
!5970 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !5889, file: !5890, line: 315, baseType: !5949, size: 64, offset: 320)
!5971 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !5889, file: !5890, line: 316, baseType: !5972, size: 64, offset: 384)
!5972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5973, size: 64)
!5973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !5890, line: 69, size: 832, elements: !5974)
!5974 = !{!5975, !5976, !5977, !5980, !5981}
!5975 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !5973, file: !5890, line: 70, baseType: !5894, size: 64)
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5973, file: !5890, line: 71, baseType: !904, size: 128, offset: 64)
!5977 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !5973, file: !5890, line: 72, baseType: !5978, size: 64, offset: 192)
!5978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5979, size: 64)
!5979 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !5890, line: 72, flags: DIFlagFwdDecl)
!5980 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !5973, file: !5890, line: 73, baseType: !1211, size: 8, offset: 256)
!5981 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5973, file: !5890, line: 74, baseType: !1020, size: 512, offset: 320)
!5982 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !5889, file: !5890, line: 318, baseType: !7, size: 32, offset: 448)
!5983 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !5889, file: !5890, line: 319, baseType: !965, size: 16, offset: 480)
!5984 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !5889, file: !5890, line: 320, baseType: !965, size: 16, offset: 496)
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !5889, file: !5890, line: 321, baseType: !965, size: 16, offset: 512)
!5986 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !5889, file: !5890, line: 322, baseType: !965, size: 16, offset: 528)
!5987 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !5889, file: !5890, line: 323, baseType: !7, size: 32, offset: 544)
!5988 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !5889, file: !5890, line: 324, baseType: !1862, size: 8, offset: 576)
!5989 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !5889, file: !5890, line: 325, baseType: !1862, size: 8, offset: 584)
!5990 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !5889, file: !5890, line: 330, baseType: !1862, size: 8, offset: 592)
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !5889, file: !5890, line: 331, baseType: !1862, size: 8, offset: 600)
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !5889, file: !5890, line: 332, baseType: !1862, size: 8, offset: 608)
!5993 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !5889, file: !5890, line: 333, baseType: !1862, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!5994 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !5889, file: !5890, line: 334, baseType: !1862, size: 8, offset: 624)
!5995 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !5889, file: !5890, line: 335, baseType: !1862, size: 8, offset: 632)
!5996 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !5889, file: !5890, line: 336, baseType: !1697, size: 16, offset: 640)
!5997 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !5889, file: !5890, line: 337, baseType: !944, size: 64, offset: 704)
!5998 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !5889, file: !5890, line: 339, baseType: !5999, size: 64, offset: 768)
!5999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6000, size: 64)
!6000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !5890, line: 858, size: 2048, elements: !6001)
!6001 = !{!6002, !6003, !6004, !6016, !6020, !6024, !6028, !6032, !6033, !6037, !6056, !6057, !6058}
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6000, file: !5890, line: 859, baseType: !904, size: 128)
!6003 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6000, file: !5890, line: 860, baseType: !1024, size: 64, offset: 128)
!6004 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !6000, file: !5890, line: 861, baseType: !6005, size: 64, offset: 192)
!6005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6006, size: 64)
!6006 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6007)
!6007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !5305, line: 38, size: 256, elements: !6008)
!6008 = !{!6009, !6010, !6011, !6012, !6013, !6014, !6015}
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !6007, file: !5305, line: 39, baseType: !939, size: 32)
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !6007, file: !5305, line: 39, baseType: !939, size: 32, offset: 32)
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !6007, file: !5305, line: 40, baseType: !939, size: 32, offset: 64)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !6007, file: !5305, line: 40, baseType: !939, size: 32, offset: 96)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !6007, file: !5305, line: 41, baseType: !939, size: 32, offset: 128)
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !6007, file: !5305, line: 41, baseType: !939, size: 32, offset: 160)
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !6007, file: !5305, line: 42, baseType: !5324, size: 64, offset: 192)
!6016 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !6000, file: !5890, line: 862, baseType: !6017, size: 64, offset: 256)
!6017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6018, size: 64)
!6018 = !DISubroutineType(types: !6019)
!6019 = !{!443, !5888, !6005}
!6020 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !6000, file: !5890, line: 863, baseType: !6021, size: 64, offset: 320)
!6021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6022, size: 64)
!6022 = !DISubroutineType(types: !6023)
!6023 = !{null, !5888}
!6024 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !6000, file: !5890, line: 864, baseType: !6025, size: 64, offset: 384)
!6025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6026, size: 64)
!6026 = !DISubroutineType(types: !6027)
!6027 = !{!443, !5888, !5335}
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6000, file: !5890, line: 865, baseType: !6029, size: 64, offset: 448)
!6029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6030, size: 64)
!6030 = !DISubroutineType(types: !6031)
!6031 = !{!443, !5888}
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !6000, file: !5890, line: 866, baseType: !6021, size: 64, offset: 512)
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !6000, file: !5890, line: 867, baseType: !6034, size: 64, offset: 576)
!6034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6035, size: 64)
!6035 = !DISubroutineType(types: !6036)
!6036 = !{!443, !5888, !443}
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !6000, file: !5890, line: 868, baseType: !6038, size: 64, offset: 640)
!6038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6039, size: 64)
!6039 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6040)
!6040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !5890, line: 795, size: 384, elements: !6041)
!6041 = !{!6042, !6048, !6052, !6053, !6054, !6055}
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !6040, file: !5890, line: 797, baseType: !6043, size: 64)
!6043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6044, size: 64)
!6044 = !DISubroutineType(types: !6045)
!6045 = !{!6046, !5888, !6047}
!6046 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !5890, line: 772, baseType: !7)
!6047 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !5890, line: 180, baseType: !7)
!6048 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !6040, file: !5890, line: 801, baseType: !6049, size: 64, offset: 64)
!6049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6050, size: 64)
!6050 = !DISubroutineType(types: !6051)
!6051 = !{!6046, !5888}
!6052 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !6040, file: !5890, line: 804, baseType: !6049, size: 64, offset: 128)
!6053 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !6040, file: !5890, line: 807, baseType: !6021, size: 64, offset: 192)
!6054 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !6040, file: !5890, line: 808, baseType: !6021, size: 64, offset: 256)
!6055 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6040, file: !5890, line: 811, baseType: !6021, size: 64, offset: 320)
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !6000, file: !5890, line: 869, baseType: !1127, size: 64, offset: 704)
!6057 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !6000, file: !5890, line: 870, baseType: !5293, size: 1152, offset: 768)
!6058 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !6000, file: !5890, line: 871, baseType: !6059, size: 128, offset: 1920)
!6059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !5890, line: 759, size: 128, elements: !6060)
!6060 = !{!6061, !6062}
!6061 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6059, file: !5890, line: 760, baseType: !1035)
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6059, file: !5890, line: 761, baseType: !904, size: 128)
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !5889, file: !5890, line: 340, baseType: !987, size: 64, offset: 832)
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !5889, file: !5890, line: 346, baseType: !5697, size: 128, offset: 896)
!6065 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !5889, file: !5890, line: 348, baseType: !6066, size: 32, offset: 1024)
!6066 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !5890, line: 155, baseType: !443)
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !5889, file: !5890, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !5889, file: !5890, line: 352, baseType: !1862, size: 8, offset: 1064)
!6069 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !5889, file: !5890, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !5889, file: !5890, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!6071 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !5889, file: !5890, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!6072 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !5889, file: !5890, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!6073 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !5889, file: !5890, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!6074 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !5889, file: !5890, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!6075 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !5889, file: !5890, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!6076 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !5889, file: !5890, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!6077 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !5889, file: !5890, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !5889, file: !5890, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !5889, file: !5890, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !5889, file: !5890, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !5889, file: !5890, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!6082 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !5889, file: !5890, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !5889, file: !5890, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!6084 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !5889, file: !5890, line: 376, baseType: !7, size: 32, offset: 1120)
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !5889, file: !5890, line: 377, baseType: !7, size: 32, offset: 1152)
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !5889, file: !5890, line: 380, baseType: !6087, size: 64, offset: 1216)
!6087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6088, size: 64)
!6088 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !5890, line: 303, flags: DIFlagFwdDecl)
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !5889, file: !5890, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !5889, file: !5890, line: 383, baseType: !443, size: 32, offset: 1312)
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !5889, file: !5890, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !5889, file: !5890, line: 387, baseType: !6047, size: 32, offset: 1376)
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5889, file: !5890, line: 388, baseType: !1017, size: 5568, offset: 1408)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !5889, file: !5890, line: 390, baseType: !443, size: 32, offset: 6976)
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !5889, file: !5890, line: 396, baseType: !7, size: 32, offset: 7008)
!6096 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !5889, file: !5890, line: 397, baseType: !6097, size: 8704, offset: 7040)
!6097 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5906, size: 8704, elements: !6098)
!6098 = !{!6099}
!6099 = !DISubrange(count: 17)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !5889, file: !5890, line: 399, baseType: !1011, size: 8, offset: 15744)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !5889, file: !5890, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !5889, file: !5890, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !5889, file: !5890, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !5889, file: !5890, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !5889, file: !5890, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !5889, file: !5890, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !5889, file: !5890, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !5889, file: !5890, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !5889, file: !5890, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !5889, file: !5890, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !5889, file: !5890, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!6112 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !5889, file: !5890, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!6113 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !5889, file: !5890, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!6114 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !5889, file: !5890, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !5889, file: !5890, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !5889, file: !5890, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !5889, file: !5890, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !5889, file: !5890, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !5889, file: !5890, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !5889, file: !5890, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !5889, file: !5890, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !5889, file: !5890, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !5889, file: !5890, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !5889, file: !5890, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !5889, file: !5890, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !5889, file: !5890, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !5889, file: !5890, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !5889, file: !5890, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !5889, file: !5890, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!6130 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !5889, file: !5890, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !5889, file: !5890, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !5889, file: !5890, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !5889, file: !5890, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !5889, file: !5890, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !5889, file: !5890, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!6136 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !5889, file: !5890, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!6137 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !5889, file: !5890, line: 450, baseType: !6138, size: 16, offset: 15792)
!6138 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !5890, line: 206, baseType: !965)
!6139 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !5889, file: !5890, line: 451, baseType: !1586, size: 32, offset: 15808)
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !5889, file: !5890, line: 453, baseType: !5627, size: 512, offset: 15840)
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !5889, file: !5890, line: 454, baseType: !1418, size: 64, offset: 16384)
!6142 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !5889, file: !5890, line: 455, baseType: !1141, size: 64, offset: 16448)
!6143 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !5889, file: !5890, line: 456, baseType: !443, size: 32, offset: 16512)
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !5889, file: !5890, line: 457, baseType: !6145, size: 1088, offset: 16576)
!6145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1141, size: 1088, elements: !6098)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !5889, file: !5890, line: 458, baseType: !6145, size: 1088, offset: 17664)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !5889, file: !5890, line: 469, baseType: !1127, size: 64, offset: 18752)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !5889, file: !5890, line: 471, baseType: !6149, size: 64, offset: 18816)
!6149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6150, size: 64)
!6150 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !5890, line: 304, flags: DIFlagFwdDecl)
!6151 = !DIDerivedType(tag: DW_TAG_member, scope: !5889, file: !5890, line: 478, baseType: !6152, size: 64, offset: 18880)
!6152 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5889, file: !5890, line: 478, size: 64, elements: !6153)
!6153 = !{!6154, !6157}
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !6152, file: !5890, line: 479, baseType: !6155, size: 64)
!6155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6156, size: 64)
!6156 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !5890, line: 305, flags: DIFlagFwdDecl)
!6157 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !6152, file: !5890, line: 480, baseType: !5888, size: 64)
!6158 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !5889, file: !5890, line: 482, baseType: !1697, size: 16, offset: 18944)
!6159 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !5889, file: !5890, line: 483, baseType: !1862, size: 8, offset: 18960)
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !5889, file: !5890, line: 497, baseType: !1697, size: 16, offset: 18976)
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !5889, file: !5890, line: 498, baseType: !4025, size: 64, offset: 19008)
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !5889, file: !5890, line: 499, baseType: !1121, size: 64, offset: 19072)
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !5889, file: !5890, line: 500, baseType: !1076, size: 64, offset: 19136)
!6164 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !5889, file: !5890, line: 502, baseType: !898, size: 64, offset: 19200)
!6165 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !946, file: !207, line: 434, baseType: !3257, size: 64, offset: 256)
!6166 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !946, file: !207, line: 436, baseType: !3612, size: 2304, offset: 320)
!6167 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !946, file: !207, line: 438, baseType: !6168, size: 64, offset: 2624)
!6168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6169, size: 64)
!6169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mtip_port", file: !207, line: 323, size: 3200, elements: !6170)
!6170 = !{!6171, !6172, !6173, !6174, !6176, !6177, !6178, !6179, !6180, !6181, !6182, !6183, !6184, !6186, !6187, !6188, !6189, !6190, !6191, !6193, !6194, !6196, !6197, !6198, !6199, !6200}
!6171 = !DIDerivedType(tag: DW_TAG_member, name: "dd", scope: !6169, file: !207, line: 325, baseType: !945, size: 64)
!6172 = !DIDerivedType(tag: DW_TAG_member, name: "identify_valid", scope: !6169, file: !207, line: 330, baseType: !898, size: 64, offset: 64)
!6173 = !DIDerivedType(tag: DW_TAG_member, name: "mmio", scope: !6169, file: !207, line: 332, baseType: !890, size: 64, offset: 128)
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !6169, file: !207, line: 334, baseType: !6175, size: 512, offset: 192)
!6175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !890, size: 512, elements: !2391)
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "completed", scope: !6169, file: !207, line: 336, baseType: !6175, size: 512, offset: 704)
!6177 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_issue", scope: !6169, file: !207, line: 338, baseType: !6175, size: 512, offset: 1216)
!6178 = !DIDerivedType(tag: DW_TAG_member, name: "command_list", scope: !6169, file: !207, line: 343, baseType: !890, size: 64, offset: 1728)
!6179 = !DIDerivedType(tag: DW_TAG_member, name: "command_list_dma", scope: !6169, file: !207, line: 348, baseType: !1995, size: 64, offset: 1792)
!6180 = !DIDerivedType(tag: DW_TAG_member, name: "rxfis", scope: !6169, file: !207, line: 353, baseType: !890, size: 64, offset: 1856)
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "rxfis_dma", scope: !6169, file: !207, line: 358, baseType: !1995, size: 64, offset: 1920)
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "block1", scope: !6169, file: !207, line: 362, baseType: !890, size: 64, offset: 1984)
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "block1_dma", scope: !6169, file: !207, line: 366, baseType: !1995, size: 64, offset: 2048)
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "identify", scope: !6169, file: !207, line: 371, baseType: !6185, size: 64, offset: 2112)
!6185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1697, size: 64)
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "identify_dma", scope: !6169, file: !207, line: 376, baseType: !1995, size: 64, offset: 2176)
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "sector_buffer", scope: !6169, file: !207, line: 381, baseType: !6185, size: 64, offset: 2240)
!6188 = !DIDerivedType(tag: DW_TAG_member, name: "sector_buffer_dma", scope: !6169, file: !207, line: 386, baseType: !1995, size: 64, offset: 2304)
!6189 = !DIDerivedType(tag: DW_TAG_member, name: "log_buf", scope: !6169, file: !207, line: 388, baseType: !6185, size: 64, offset: 2368)
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "log_buf_dma", scope: !6169, file: !207, line: 389, baseType: !1995, size: 64, offset: 2432)
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "smart_buf", scope: !6169, file: !207, line: 391, baseType: !6192, size: 64, offset: 2496)
!6192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 64)
!6193 = !DIDerivedType(tag: DW_TAG_member, name: "smart_buf_dma", scope: !6169, file: !207, line: 392, baseType: !1995, size: 64, offset: 2560)
!6194 = !DIDerivedType(tag: DW_TAG_member, name: "cmds_to_issue", scope: !6169, file: !207, line: 398, baseType: !6195, size: 256, offset: 2624)
!6195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !898, size: 256, elements: !1909)
!6196 = !DIDerivedType(tag: DW_TAG_member, name: "svc_wait", scope: !6169, file: !207, line: 400, baseType: !1954, size: 128, offset: 2880)
!6197 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6169, file: !207, line: 405, baseType: !898, size: 64, offset: 3008)
!6198 = !DIDerivedType(tag: DW_TAG_member, name: "ic_pause_timer", scope: !6169, file: !207, line: 409, baseType: !898, size: 64, offset: 3072)
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_slot_unal", scope: !6169, file: !207, line: 412, baseType: !1586, size: 32, offset: 3136)
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_issue_lock", scope: !6169, file: !207, line: 415, baseType: !6201, offset: 3168)
!6201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1035, elements: !2391)
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "product_type", scope: !946, file: !207, line: 440, baseType: !7, size: 32, offset: 2688)
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "slot_groups", scope: !946, file: !207, line: 442, baseType: !7, size: 32, offset: 2720)
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !946, file: !207, line: 444, baseType: !898, size: 64, offset: 2752)
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "dd_flag", scope: !946, file: !207, line: 446, baseType: !898, size: 64, offset: 2816)
!6206 = !DIDerivedType(tag: DW_TAG_member, name: "mtip_svc_handler", scope: !946, file: !207, line: 448, baseType: !2283, size: 64, offset: 2880)
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "dfs_node", scope: !946, file: !207, line: 450, baseType: !1173, size: 64, offset: 2944)
!6208 = !DIDerivedType(tag: DW_TAG_member, name: "sr", scope: !946, file: !207, line: 452, baseType: !1011, size: 8, offset: 3008)
!6209 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !946, file: !207, line: 454, baseType: !443, size: 32, offset: 3040)
!6210 = !DIDerivedType(tag: DW_TAG_member, name: "workq_name", scope: !946, file: !207, line: 456, baseType: !960, size: 256, offset: 3072)
!6211 = !DIDerivedType(tag: DW_TAG_member, name: "isr_workq", scope: !946, file: !207, line: 458, baseType: !1947, size: 64, offset: 3328)
!6212 = !DIDerivedType(tag: DW_TAG_member, name: "irq_workers_active", scope: !946, file: !207, line: 460, baseType: !1586, size: 32, offset: 3392)
!6213 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !946, file: !207, line: 462, baseType: !6214, size: 3072, offset: 3456)
!6214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !912, size: 3072, elements: !2391)
!6215 = !DIDerivedType(tag: DW_TAG_member, name: "isr_binding", scope: !946, file: !207, line: 464, baseType: !443, size: 32, offset: 6528)
!6216 = !DIDerivedType(tag: DW_TAG_member, name: "bdev", scope: !946, file: !207, line: 466, baseType: !1847, size: 64, offset: 6592)
!6217 = !DIDerivedType(tag: DW_TAG_member, name: "online_list", scope: !946, file: !207, line: 468, baseType: !904, size: 128, offset: 6656)
!6218 = !DIDerivedType(tag: DW_TAG_member, name: "remove_list", scope: !946, file: !207, line: 470, baseType: !904, size: 128, offset: 6784)
!6219 = !DIDerivedType(tag: DW_TAG_member, name: "unal_qdepth", scope: !946, file: !207, line: 472, baseType: !443, size: 32, offset: 6912)
!6220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6221, size: 64)
!6221 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !943)
!6222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!6223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6224, size: 64)
!6224 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !961)
!6225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2293, size: 64)
!6226 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !889, line: 107, baseType: !987)
!6227 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le32", file: !4773, line: 31, baseType: !939)
!6228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6229, size: 64)
!6229 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !938)
!6230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6231, size: 64)
!6231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "smart_attr", file: !207, line: 163, size: 96, elements: !6232)
!6232 = !{!6233, !6234, !6236, !6237, !6238, !6239}
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "attr_id", scope: !6231, file: !207, line: 164, baseType: !1862, size: 8)
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6231, file: !207, line: 165, baseType: !6235, size: 16, offset: 8)
!6235 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le16", file: !4773, line: 29, baseType: !1698)
!6236 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !6231, file: !207, line: 166, baseType: !1862, size: 8, offset: 24)
!6237 = !DIDerivedType(tag: DW_TAG_member, name: "worst", scope: !6231, file: !207, line: 167, baseType: !1862, size: 8, offset: 32)
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6231, file: !207, line: 168, baseType: !6227, size: 32, offset: 40)
!6239 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !6231, file: !207, line: 169, baseType: !6240, size: 24, offset: 72)
!6240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1862, size: 24, elements: !1077)
!6241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6242, size: 64)
!6242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "host_to_dev_fis", file: !207, line: 187, size: 160, elements: !6243)
!6243 = !{!6244, !6245, !6246, !6247, !6248, !6253, !6258, !6263, !6268, !6273, !6278, !6283, !6284, !6285, !6286, !6287, !6288}
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6242, file: !207, line: 199, baseType: !1211, size: 8)
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !6242, file: !207, line: 200, baseType: !1211, size: 8, offset: 8)
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !6242, file: !207, line: 201, baseType: !1211, size: 8, offset: 16)
!6247 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !6242, file: !207, line: 202, baseType: !1211, size: 8, offset: 24)
!6248 = !DIDerivedType(tag: DW_TAG_member, scope: !6242, file: !207, line: 204, baseType: !6249, size: 8, offset: 32)
!6249 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6242, file: !207, line: 204, size: 8, elements: !6250)
!6250 = !{!6251, !6252}
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "lba_low", scope: !6249, file: !207, line: 205, baseType: !1211, size: 8)
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "sector", scope: !6249, file: !207, line: 206, baseType: !1211, size: 8)
!6253 = !DIDerivedType(tag: DW_TAG_member, scope: !6242, file: !207, line: 208, baseType: !6254, size: 8, offset: 40)
!6254 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6242, file: !207, line: 208, size: 8, elements: !6255)
!6255 = !{!6256, !6257}
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "lba_mid", scope: !6254, file: !207, line: 209, baseType: !1211, size: 8)
!6257 = !DIDerivedType(tag: DW_TAG_member, name: "cyl_low", scope: !6254, file: !207, line: 210, baseType: !1211, size: 8)
!6258 = !DIDerivedType(tag: DW_TAG_member, scope: !6242, file: !207, line: 212, baseType: !6259, size: 8, offset: 48)
!6259 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6242, file: !207, line: 212, size: 8, elements: !6260)
!6260 = !{!6261, !6262}
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "lba_hi", scope: !6259, file: !207, line: 213, baseType: !1211, size: 8)
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "cyl_hi", scope: !6259, file: !207, line: 214, baseType: !1211, size: 8)
!6263 = !DIDerivedType(tag: DW_TAG_member, scope: !6242, file: !207, line: 216, baseType: !6264, size: 8, offset: 56)
!6264 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6242, file: !207, line: 216, size: 8, elements: !6265)
!6265 = !{!6266, !6267}
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !6264, file: !207, line: 217, baseType: !1211, size: 8)
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6264, file: !207, line: 218, baseType: !1211, size: 8)
!6268 = !DIDerivedType(tag: DW_TAG_member, scope: !6242, file: !207, line: 221, baseType: !6269, size: 8, offset: 64)
!6269 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6242, file: !207, line: 221, size: 8, elements: !6270)
!6270 = !{!6271, !6272}
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "lba_low_ex", scope: !6269, file: !207, line: 222, baseType: !1211, size: 8)
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "sector_ex", scope: !6269, file: !207, line: 223, baseType: !1211, size: 8)
!6273 = !DIDerivedType(tag: DW_TAG_member, scope: !6242, file: !207, line: 225, baseType: !6274, size: 8, offset: 72)
!6274 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6242, file: !207, line: 225, size: 8, elements: !6275)
!6275 = !{!6276, !6277}
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "lba_mid_ex", scope: !6274, file: !207, line: 226, baseType: !1211, size: 8)
!6277 = !DIDerivedType(tag: DW_TAG_member, name: "cyl_low_ex", scope: !6274, file: !207, line: 227, baseType: !1211, size: 8)
!6278 = !DIDerivedType(tag: DW_TAG_member, scope: !6242, file: !207, line: 229, baseType: !6279, size: 8, offset: 80)
!6279 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6242, file: !207, line: 229, size: 8, elements: !6280)
!6280 = !{!6281, !6282}
!6281 = !DIDerivedType(tag: DW_TAG_member, name: "lba_hi_ex", scope: !6279, file: !207, line: 230, baseType: !1211, size: 8)
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "cyl_hi_ex", scope: !6279, file: !207, line: 231, baseType: !1211, size: 8)
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "features_ex", scope: !6242, file: !207, line: 233, baseType: !1211, size: 8, offset: 88)
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "sect_count", scope: !6242, file: !207, line: 235, baseType: !1211, size: 8, offset: 96)
!6285 = !DIDerivedType(tag: DW_TAG_member, name: "sect_cnt_ex", scope: !6242, file: !207, line: 236, baseType: !1211, size: 8, offset: 104)
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "res2", scope: !6242, file: !207, line: 237, baseType: !1211, size: 8, offset: 112)
!6287 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !6242, file: !207, line: 238, baseType: !1211, size: 8, offset: 120)
!6288 = !DIDerivedType(tag: DW_TAG_member, name: "res3", scope: !6242, file: !207, line: 240, baseType: !7, size: 32, offset: 128)
!6289 = !{!6290, !6295, !6300, !6305, !6310, !6315, !6360, !6362, !0, !6367, !6369, !6371, !6374, !6379, !6381, !6384, !6389, !6392, !6397, !6399, !6405, !6407, !6409, !6411, !6425, !6427, !6429, !6431, !6433, !6435}
!6290 = !DIGlobalVariableExpression(var: !6291, expr: !DIExpression())
!6291 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author317", scope: !2, file: !3, line: 4446, type: !6292, isLocal: true, isDefinition: true, align: 8)
!6292 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1025, size: 312, elements: !6293)
!6293 = !{!6294}
!6294 = !DISubrange(count: 39)
!6295 = !DIGlobalVariableExpression(var: !6296, expr: !DIExpression())
!6296 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description318", scope: !2, file: !3, line: 4447, type: !6297, isLocal: true, isDefinition: true, align: 8)
!6297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1025, size: 432, elements: !6298)
!6298 = !{!6299}
!6299 = !DISubrange(count: 54)
!6300 = !DIGlobalVariableExpression(var: !6301, expr: !DIExpression())
!6301 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file319", scope: !2, file: !3, line: 4448, type: !6302, isLocal: true, isDefinition: true, align: 8)
!6302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1025, size: 368, elements: !6303)
!6303 = !{!6304}
!6304 = !DISubrange(count: 46)
!6305 = !DIGlobalVariableExpression(var: !6306, expr: !DIExpression())
!6306 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license320", scope: !2, file: !3, line: 4448, type: !6307, isLocal: true, isDefinition: true, align: 8)
!6307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1025, size: 168, elements: !6308)
!6308 = !{!6309}
!6309 = !DISubrange(count: 21)
!6310 = !DIGlobalVariableExpression(var: !6311, expr: !DIExpression())
!6311 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_version321", scope: !2, file: !3, line: 4449, type: !6312, isLocal: true, isDefinition: true, align: 8)
!6312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1025, size: 184, elements: !6313)
!6313 = !{!6314}
!6314 = !DISubrange(count: 23)
!6315 = !DIGlobalVariableExpression(var: !6316, expr: !DIExpression())
!6316 = distinct !DIGlobalVariable(name: "__modver_attr", scope: !2, file: !3, line: 4449, type: !6317, isLocal: true, isDefinition: true)
!6317 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6318)
!6318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6319, size: 64)
!6319 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6320)
!6320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_version_attribute", file: !6321, line: 65, size: 576, align: 64, elements: !6322)
!6321 = !DIFile(filename: "./include/linux/module.h", directory: "/home/lizy2001/genbc/linux")
!6322 = !{!6323, !6358, !6359}
!6323 = !DIDerivedType(tag: DW_TAG_member, name: "mattr", scope: !6320, file: !6321, line: 66, baseType: !6324, size: 448)
!6324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_attribute", file: !6321, line: 54, size: 448, elements: !6325)
!6325 = !{!6326, !6327, !6342, !6346, !6350, !6354}
!6326 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6324, file: !6321, line: 55, baseType: !1112, size: 128)
!6327 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !6324, file: !6321, line: 56, baseType: !6328, size: 64, offset: 128)
!6328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6329, size: 64)
!6329 = !DISubroutineType(types: !6330)
!6330 = !{!1107, !6331, !6332, !1076}
!6331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6324, size: 64)
!6332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6333, size: 64)
!6333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_kobject", file: !6321, line: 46, size: 768, elements: !6334)
!6334 = !{!6335, !6336, !6337, !6338, !6341}
!6335 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6333, file: !6321, line: 47, baseType: !1020, size: 512)
!6336 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !6333, file: !6321, line: 48, baseType: !1413, size: 64, offset: 512)
!6337 = !DIDerivedType(tag: DW_TAG_member, name: "drivers_dir", scope: !6333, file: !6321, line: 49, baseType: !1028, size: 64, offset: 576)
!6338 = !DIDerivedType(tag: DW_TAG_member, name: "mp", scope: !6333, file: !6321, line: 50, baseType: !6339, size: 64, offset: 640)
!6339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6340, size: 64)
!6340 = !DICompositeType(tag: DW_TAG_structure_type, name: "module_param_attrs", file: !6321, line: 50, flags: DIFlagFwdDecl)
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "kobj_completion", scope: !6333, file: !6321, line: 51, baseType: !2547, size: 64, offset: 704)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !6324, file: !6321, line: 58, baseType: !6343, size: 64, offset: 192)
!6343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6344, size: 64)
!6344 = !DISubroutineType(types: !6345)
!6345 = !{!1107, !6331, !6332, !1024, !1121}
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !6324, file: !6321, line: 60, baseType: !6347, size: 64, offset: 256)
!6347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6348, size: 64)
!6348 = !DISubroutineType(types: !6349)
!6349 = !{null, !1413, !1024}
!6350 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !6324, file: !6321, line: 61, baseType: !6351, size: 64, offset: 320)
!6351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6352, size: 64)
!6352 = !DISubroutineType(types: !6353)
!6353 = !{!443, !1413}
!6354 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !6324, file: !6321, line: 62, baseType: !6355, size: 64, offset: 384)
!6355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6356, size: 64)
!6356 = !DISubroutineType(types: !6357)
!6357 = !{null, !1413}
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !6320, file: !6321, line: 67, baseType: !1024, size: 64, offset: 448)
!6359 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !6320, file: !6321, line: 68, baseType: !1024, size: 64, offset: 512)
!6360 = !DIGlobalVariableExpression(var: !6361, expr: !DIExpression())
!6361 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_mtip_init322", scope: !2, file: !3, line: 4451, type: !890, isLocal: true, isDefinition: true)
!6362 = !DIGlobalVariableExpression(var: !6363, expr: !DIExpression())
!6363 = distinct !DIGlobalVariable(name: "__exitcall_mtip_exit", scope: !2, file: !3, line: 4452, type: !6364, isLocal: true, isDefinition: true)
!6364 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !6365, line: 117, baseType: !6366)
!6365 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!6366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3100, size: 64)
!6367 = !DIGlobalVariableExpression(var: !6368, expr: !DIExpression())
!6368 = distinct !DIGlobalVariable(name: "dfs_parent", scope: !2, file: !3, line: 107, type: !1173, isLocal: true, isDefinition: true)
!6369 = !DIGlobalVariableExpression(var: !6370, expr: !DIExpression())
!6370 = distinct !DIGlobalVariable(name: "mtip_pci_driver", scope: !2, file: !3, line: 4358, type: !6000, isLocal: true, isDefinition: true)
!6371 = !DIGlobalVariableExpression(var: !6372, expr: !DIExpression())
!6372 = distinct !DIGlobalVariable(name: "mtip_pci_tbl", scope: !2, file: !3, line: 4346, type: !6373, isLocal: true, isDefinition: true)
!6373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6006, size: 2048, elements: !2391)
!6374 = !DIGlobalVariableExpression(var: !6375, expr: !DIExpression())
!6375 = distinct !DIGlobalVariable(name: "next_node", scope: !6376, file: !3, line: 3915, type: !443, isLocal: true, isDefinition: true)
!6376 = distinct !DISubprogram(name: "mtip_get_next_rr_node", scope: !3, file: !3, line: 3913, type: !6377, scopeLine: 3914, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!6377 = !DISubroutineType(types: !6378)
!6378 = !{!443}
!6379 = !DIGlobalVariableExpression(var: !6380, expr: !DIExpression())
!6380 = distinct !DIGlobalVariable(name: "instance", scope: !2, file: !3, line: 96, type: !443, isLocal: true, isDefinition: true)
!6381 = !DIGlobalVariableExpression(var: !6382, expr: !DIExpression())
!6382 = distinct !DIGlobalVariable(name: "cpu_use", scope: !2, file: !3, line: 110, type: !6383, isLocal: true, isDefinition: true)
!6383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !938, size: 32, elements: !899)
!6384 = !DIGlobalVariableExpression(var: !6385, expr: !DIExpression())
!6385 = distinct !DIGlobalVariable(name: "__key", scope: !6386, file: !3, line: 3592, type: !1428, isLocal: true, isDefinition: true)
!6386 = distinct !DISubprogram(name: "mtip_block_initialize", scope: !3, file: !3, line: 3577, type: !6387, scopeLine: 3578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!6387 = !DISubroutineType(types: !6388)
!6388 = !{!443, !945}
!6389 = !DIGlobalVariableExpression(var: !6390, expr: !DIExpression())
!6390 = distinct !DIGlobalVariable(name: "__key", scope: !6391, file: !3, line: 2982, type: !1428, isLocal: true, isDefinition: true)
!6391 = distinct !DISubprogram(name: "mtip_hw_init", scope: !3, file: !3, line: 2869, type: !6387, scopeLine: 2870, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!6392 = !DIGlobalVariableExpression(var: !6393, expr: !DIExpression())
!6393 = distinct !DIGlobalVariable(name: "rssd_index_ida", scope: !2, file: !3, line: 112, type: !6394, isLocal: true, isDefinition: true)
!6394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ida", file: !5115, line: 244, size: 128, elements: !6395)
!6395 = !{!6396}
!6396 = !DIDerivedType(tag: DW_TAG_member, name: "xa", scope: !6394, file: !5115, line: 245, baseType: !1578, size: 128)
!6397 = !DIGlobalVariableExpression(var: !6398, expr: !DIExpression())
!6398 = distinct !DIGlobalVariable(name: "mtip_block_ops", scope: !2, file: !3, line: 3372, type: !5779, isLocal: true, isDefinition: true)
!6399 = !DIGlobalVariableExpression(var: !6400, expr: !DIExpression())
!6400 = distinct !DIGlobalVariable(name: "__warned", scope: !6401, file: !6402, line: 275, type: !1011, isLocal: true, isDefinition: true)
!6401 = distinct !DISubprogram(name: "dma_map_single_attrs", scope: !6402, file: !6402, line: 271, type: !6403, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!6402 = !DIFile(filename: "./include/linux/dma-mapping.h", directory: "/home/lizy2001/genbc/linux")
!6403 = !DISubroutineType(types: !6404)
!6404 = !{!1995, !1960, !890, !1121, !880, !898}
!6405 = !DIGlobalVariableExpression(var: !6406, expr: !DIExpression())
!6406 = distinct !DIGlobalVariable(name: "mtip_flags_fops", scope: !2, file: !3, line: 2380, type: !4732, isLocal: true, isDefinition: true)
!6407 = !DIGlobalVariableExpression(var: !6408, expr: !DIExpression())
!6408 = distinct !DIGlobalVariable(name: "mtip_regs_fops", scope: !2, file: !3, line: 2373, type: !4732, isLocal: true, isDefinition: true)
!6409 = !DIGlobalVariableExpression(var: !6410, expr: !DIExpression())
!6410 = distinct !DIGlobalVariable(name: "mtip_mq_ops", scope: !2, file: !3, line: 3558, type: !3571, isLocal: true, isDefinition: true)
!6411 = !DIGlobalVariableExpression(var: !6412, expr: !DIExpression())
!6412 = distinct !DIGlobalVariable(name: "dev_attr_status", scope: !2, file: !3, line: 2161, type: !6413, isLocal: true, isDefinition: true)
!6413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !25, line: 99, size: 256, elements: !6414)
!6414 = !{!6415, !6416, !6421}
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6413, file: !25, line: 100, baseType: !1112, size: 128)
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !6413, file: !25, line: 101, baseType: !6417, size: 64, offset: 128)
!6417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6418, size: 64)
!6418 = !DISubroutineType(types: !6419)
!6419 = !{!1107, !1960, !6420, !1076}
!6420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6413, size: 64)
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !6413, file: !25, line: 103, baseType: !6422, size: 64, offset: 192)
!6422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6423, size: 64)
!6423 = !DISubroutineType(types: !6424)
!6424 = !{!1107, !1960, !6420, !1024, !1121}
!6425 = !DIGlobalVariableExpression(var: !6426, expr: !DIExpression())
!6426 = distinct !DIGlobalVariable(name: "dev_lock", scope: !2, file: !3, line: 100, type: !1035, isLocal: true, isDefinition: true)
!6427 = !DIGlobalVariableExpression(var: !6428, expr: !DIExpression())
!6428 = distinct !DIGlobalVariable(name: "online_list", scope: !2, file: !3, line: 98, type: !904, isLocal: true, isDefinition: true)
!6429 = !DIGlobalVariableExpression(var: !6430, expr: !DIExpression())
!6430 = distinct !DIGlobalVariable(name: "removing_list", scope: !2, file: !3, line: 99, type: !904, isLocal: true, isDefinition: true)
!6431 = !DIGlobalVariableExpression(var: !6432, expr: !DIExpression())
!6432 = distinct !DIGlobalVariable(name: "___modver_attr", scope: !2, file: !3, line: 4449, type: !6320, isLocal: true, isDefinition: true)
!6433 = !DIGlobalVariableExpression(var: !6434, expr: !DIExpression())
!6434 = distinct !DIGlobalVariable(name: "mtip_device_status_fops", scope: !2, file: !3, line: 2366, type: !4732, isLocal: true, isDefinition: true)
!6435 = !DIGlobalVariableExpression(var: !6436, expr: !DIExpression())
!6436 = distinct !DIGlobalVariable(name: "dfs_device_status", scope: !2, file: !3, line: 108, type: !1173, isLocal: true, isDefinition: true)
!6437 = !{!"rsp"}
!6438 = !{i32 7, !"Dwarf Version", i32 4}
!6439 = !{i32 2, !"Debug Info Version", i32 3}
!6440 = !{i32 1, !"wchar_size", i32 2}
!6441 = !{i32 1, !"Code Model", i32 2}
!6442 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!6443 = distinct !DISubprogram(name: "mtip_exit", scope: !3, file: !3, line: 4435, type: !3100, scopeLine: 4436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!6444 = !DILocation(line: 4438, column: 20, scope: !6443)
!6445 = !DILocation(line: 4438, column: 2, scope: !6443)
!6446 = !DILocation(line: 4441, column: 2, scope: !6443)
!6447 = !DILocation(line: 4443, column: 27, scope: !6443)
!6448 = !DILocation(line: 4443, column: 2, scope: !6443)
!6449 = !DILocation(line: 4444, column: 1, scope: !6443)
!6450 = distinct !DISubprogram(name: "debugfs_remove_recursive", scope: !6451, file: !6451, line: 220, type: !4617, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!6451 = !DIFile(filename: "./include/linux/debugfs.h", directory: "/home/lizy2001/genbc/linux")
!6452 = !DILocalVariable(name: "dentry", arg: 1, scope: !6450, file: !6451, line: 220, type: !1173)
!6453 = !DILocation(line: 220, column: 60, scope: !6450)
!6454 = !DILocation(line: 221, column: 3, scope: !6450)
!6455 = distinct !DISubprogram(name: "mtip_init", scope: !3, file: !3, line: 4380, type: !6377, scopeLine: 4381, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!6456 = !DILocalVariable(name: "lock", arg: 1, scope: !6457, file: !6458, line: 327, type: !2140)
!6457 = distinct !DISubprogram(name: "spinlock_check", scope: !6458, file: !6458, line: 327, type: !6459, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!6458 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!6459 = !DISubroutineType(types: !6460)
!6460 = !{!6461, !2140}
!6461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 64)
!6462 = !DILocation(line: 327, column: 67, scope: !6457, inlinedAt: !6463)
!6463 = distinct !DILocation(line: 4386, column: 2, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6455, file: !3, line: 4386, column: 2)
!6465 = !DILocalVariable(name: "error", scope: !6455, file: !3, line: 4382, type: !443)
!6466 = !DILocation(line: 4382, column: 6, scope: !6455)
!6467 = !DILocation(line: 4384, column: 2, scope: !6455)
!6468 = !DILocation(line: 4386, column: 2, scope: !6455)
!6469 = !DILocation(line: 329, column: 10, scope: !6457, inlinedAt: !6463)
!6470 = !DILocation(line: 329, column: 16, scope: !6457, inlinedAt: !6463)
!6471 = !DILocation(line: 4386, column: 2, scope: !6464)
!6472 = !DILocation(line: 4388, column: 2, scope: !6455)
!6473 = !DILocation(line: 4389, column: 2, scope: !6455)
!6474 = !DILocation(line: 4392, column: 10, scope: !6455)
!6475 = !DILocation(line: 4392, column: 8, scope: !6455)
!6476 = !DILocation(line: 4393, column: 6, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6455, file: !3, line: 4393, column: 6)
!6478 = !DILocation(line: 4393, column: 12, scope: !6477)
!6479 = !DILocation(line: 4393, column: 6, scope: !6455)
!6480 = !DILocation(line: 4394, column: 3, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6477, file: !3, line: 4393, column: 18)
!6482 = !DILocation(line: 4396, column: 3, scope: !6481)
!6483 = !DILocation(line: 4398, column: 15, scope: !6455)
!6484 = !DILocation(line: 4398, column: 13, scope: !6455)
!6485 = !DILocation(line: 4400, column: 15, scope: !6455)
!6486 = !DILocation(line: 4400, column: 13, scope: !6455)
!6487 = !DILocation(line: 4401, column: 21, scope: !6488)
!6488 = distinct !DILexicalBlock(scope: !6455, file: !3, line: 4401, column: 6)
!6489 = !DILocation(line: 4401, column: 6, scope: !6488)
!6490 = !DILocation(line: 4401, column: 6, scope: !6455)
!6491 = !DILocation(line: 4402, column: 3, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6488, file: !3, line: 4401, column: 34)
!6493 = !DILocation(line: 4403, column: 14, scope: !6492)
!6494 = !DILocation(line: 4404, column: 2, scope: !6492)
!6495 = !DILocation(line: 4405, column: 6, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6455, file: !3, line: 4405, column: 6)
!6497 = !DILocation(line: 4405, column: 6, scope: !6455)
!6498 = !DILocation(line: 4407, column: 12, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6496, file: !3, line: 4405, column: 18)
!6500 = !DILocation(line: 4406, column: 23, scope: !6499)
!6501 = !DILocation(line: 4406, column: 21, scope: !6499)
!6502 = !DILocation(line: 4409, column: 22, scope: !6503)
!6503 = distinct !DILexicalBlock(scope: !6499, file: !3, line: 4409, column: 7)
!6504 = !DILocation(line: 4409, column: 7, scope: !6503)
!6505 = !DILocation(line: 4409, column: 7, scope: !6499)
!6506 = !DILocation(line: 4410, column: 4, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6503, file: !3, line: 4409, column: 42)
!6508 = !DILocation(line: 4411, column: 22, scope: !6507)
!6509 = !DILocation(line: 4412, column: 3, scope: !6507)
!6510 = !DILocation(line: 4413, column: 2, scope: !6499)
!6511 = !DILocation(line: 4416, column: 10, scope: !6455)
!6512 = !DILocation(line: 4416, column: 8, scope: !6455)
!6513 = !DILocation(line: 4417, column: 6, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6455, file: !3, line: 4417, column: 6)
!6515 = !DILocation(line: 4417, column: 6, scope: !6455)
!6516 = !DILocation(line: 4418, column: 18, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6514, file: !3, line: 4417, column: 13)
!6518 = !DILocation(line: 4418, column: 3, scope: !6517)
!6519 = !DILocation(line: 4419, column: 21, scope: !6517)
!6520 = !DILocation(line: 4419, column: 3, scope: !6517)
!6521 = !DILocation(line: 4420, column: 2, scope: !6517)
!6522 = !DILocation(line: 4422, column: 9, scope: !6455)
!6523 = !DILocation(line: 4422, column: 2, scope: !6455)
!6524 = !DILocation(line: 4423, column: 1, scope: !6455)
!6525 = distinct !DISubprogram(name: "mtip_pci_probe", scope: !3, file: !3, line: 3997, type: !6018, scopeLine: 3999, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!6526 = !DILocalVariable(name: "lock", arg: 1, scope: !6527, file: !6458, line: 407, type: !2140)
!6527 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !6458, file: !6458, line: 407, type: !6528, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!6528 = !DISubroutineType(types: !6529)
!6529 = !{null, !2140, !898}
!6530 = !DILocation(line: 407, column: 64, scope: !6527, inlinedAt: !6531)
!6531 = distinct !DILocation(line: 4154, column: 2, scope: !6525)
!6532 = !DILocalVariable(name: "flags", arg: 2, scope: !6527, file: !6458, line: 407, type: !898)
!6533 = !DILocation(line: 407, column: 84, scope: !6527, inlinedAt: !6531)
!6534 = !DILocation(line: 327, column: 67, scope: !6457, inlinedAt: !6535)
!6535 = distinct !DILocation(line: 4152, column: 2, scope: !6536)
!6536 = distinct !DILexicalBlock(scope: !6537, file: !3, line: 4152, column: 2)
!6537 = distinct !DILexicalBlock(scope: !6538, file: !3, line: 4152, column: 2)
!6538 = distinct !DILexicalBlock(scope: !6539, file: !3, line: 4152, column: 2)
!6539 = distinct !DILexicalBlock(scope: !6540, file: !3, line: 4152, column: 2)
!6540 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 4152, column: 2)
!6541 = !DILocalVariable(name: "pdev", arg: 1, scope: !6525, file: !3, line: 3997, type: !5888)
!6542 = !DILocation(line: 3997, column: 43, scope: !6525)
!6543 = !DILocalVariable(name: "ent", arg: 2, scope: !6525, file: !3, line: 3998, type: !6005)
!6544 = !DILocation(line: 3998, column: 32, scope: !6525)
!6545 = !DILocalVariable(name: "rv", scope: !6525, file: !3, line: 4000, type: !443)
!6546 = !DILocation(line: 4000, column: 6, scope: !6525)
!6547 = !DILocalVariable(name: "dd", scope: !6525, file: !3, line: 4001, type: !945)
!6548 = !DILocation(line: 4001, column: 22, scope: !6525)
!6549 = !DILocalVariable(name: "cpu_list", scope: !6525, file: !3, line: 4002, type: !6550)
!6550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !961, size: 2048, elements: !6551)
!6551 = !{!6552}
!6552 = !DISubrange(count: 256)
!6553 = !DILocation(line: 4002, column: 7, scope: !6525)
!6554 = !DILocalVariable(name: "node_mask", scope: !6525, file: !3, line: 4003, type: !891)
!6555 = !DILocation(line: 4003, column: 24, scope: !6525)
!6556 = !DILocalVariable(name: "cpu", scope: !6525, file: !3, line: 4004, type: !443)
!6557 = !DILocation(line: 4004, column: 6, scope: !6525)
!6558 = !DILocalVariable(name: "i", scope: !6525, file: !3, line: 4004, type: !443)
!6559 = !DILocation(line: 4004, column: 11, scope: !6525)
!6560 = !DILocalVariable(name: "j", scope: !6525, file: !3, line: 4004, type: !443)
!6561 = !DILocation(line: 4004, column: 18, scope: !6525)
!6562 = !DILocalVariable(name: "my_node", scope: !6525, file: !3, line: 4005, type: !443)
!6563 = !DILocation(line: 4005, column: 6, scope: !6525)
!6564 = !DILocalVariable(name: "flags", scope: !6525, file: !3, line: 4006, type: !898)
!6565 = !DILocation(line: 4006, column: 16, scope: !6525)
!6566 = !DILocation(line: 4009, column: 12, scope: !6525)
!6567 = !DILocation(line: 4009, column: 10, scope: !6525)
!6568 = !DILocation(line: 4010, column: 6, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 4010, column: 6)
!6570 = !DILocation(line: 4010, column: 14, scope: !6569)
!6571 = !DILocation(line: 4010, column: 6, scope: !6525)
!6572 = !DILocation(line: 4011, column: 8, scope: !6573)
!6573 = distinct !DILexicalBlock(scope: !6574, file: !3, line: 4011, column: 7)
!6574 = distinct !DILexicalBlock(scope: !6569, file: !3, line: 4010, column: 31)
!6575 = !DILocation(line: 4011, column: 7, scope: !6574)
!6576 = !DILocation(line: 4012, column: 14, scope: !6573)
!6577 = !DILocation(line: 4012, column: 12, scope: !6573)
!6578 = !DILocation(line: 4012, column: 4, scope: !6573)
!6579 = !DILocation(line: 4013, column: 2, scope: !6574)
!6580 = !DILocation(line: 4014, column: 3, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6569, file: !3, line: 4013, column: 9)
!6582 = !DILocation(line: 4015, column: 13, scope: !6581)
!6583 = !DILocation(line: 4015, column: 11, scope: !6581)
!6584 = !DILocation(line: 4017, column: 2, scope: !6525)
!6585 = !DILocation(line: 4021, column: 60, scope: !6525)
!6586 = !DILocation(line: 4021, column: 7, scope: !6525)
!6587 = !DILocation(line: 4021, column: 5, scope: !6525)
!6588 = !DILocation(line: 4022, column: 6, scope: !6589)
!6589 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 4022, column: 6)
!6590 = !DILocation(line: 4022, column: 9, scope: !6589)
!6591 = !DILocation(line: 4022, column: 6, scope: !6525)
!6592 = !DILocation(line: 4023, column: 3, scope: !6593)
!6593 = distinct !DILexicalBlock(scope: !6589, file: !3, line: 4022, column: 18)
!6594 = !DILocation(line: 4025, column: 3, scope: !6593)
!6595 = !DILocation(line: 4029, column: 18, scope: !6525)
!6596 = !DILocation(line: 4029, column: 24, scope: !6525)
!6597 = !DILocation(line: 4029, column: 2, scope: !6525)
!6598 = !DILocation(line: 4031, column: 26, scope: !6525)
!6599 = !DILocation(line: 4031, column: 7, scope: !6525)
!6600 = !DILocation(line: 4031, column: 5, scope: !6525)
!6601 = !DILocation(line: 4032, column: 6, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 4032, column: 6)
!6603 = !DILocation(line: 4032, column: 9, scope: !6602)
!6604 = !DILocation(line: 4032, column: 6, scope: !6525)
!6605 = !DILocation(line: 4033, column: 3, scope: !6606)
!6606 = distinct !DILexicalBlock(scope: !6602, file: !3, line: 4032, column: 14)
!6607 = !DILocation(line: 4034, column: 3, scope: !6606)
!6608 = !DILocation(line: 4038, column: 26, scope: !6525)
!6609 = !DILocation(line: 4038, column: 7, scope: !6525)
!6610 = !DILocation(line: 4038, column: 5, scope: !6525)
!6611 = !DILocation(line: 4039, column: 6, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 4039, column: 6)
!6613 = !DILocation(line: 4039, column: 9, scope: !6612)
!6614 = !DILocation(line: 4039, column: 6, scope: !6525)
!6615 = !DILocation(line: 4040, column: 3, scope: !6616)
!6616 = distinct !DILexicalBlock(scope: !6612, file: !3, line: 4039, column: 14)
!6617 = !DILocation(line: 4041, column: 3, scope: !6616)
!6618 = !DILocation(line: 4044, column: 34, scope: !6525)
!6619 = !DILocation(line: 4044, column: 40, scope: !6525)
!6620 = !DILocation(line: 4044, column: 7, scope: !6525)
!6621 = !DILocation(line: 4044, column: 5, scope: !6525)
!6622 = !DILocation(line: 4045, column: 6, scope: !6623)
!6623 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 4045, column: 6)
!6624 = !DILocation(line: 4045, column: 6, scope: !6525)
!6625 = !DILocation(line: 4046, column: 3, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !6623, file: !3, line: 4045, column: 10)
!6627 = !DILocation(line: 4047, column: 3, scope: !6626)
!6628 = !DILocation(line: 4051, column: 14, scope: !6525)
!6629 = !DILocation(line: 4051, column: 2, scope: !6525)
!6630 = !DILocation(line: 4051, column: 6, scope: !6525)
!6631 = !DILocation(line: 4051, column: 12, scope: !6525)
!6632 = !DILocation(line: 4052, column: 17, scope: !6525)
!6633 = !DILocation(line: 4052, column: 2, scope: !6525)
!6634 = !DILocation(line: 4052, column: 6, scope: !6525)
!6635 = !DILocation(line: 4052, column: 15, scope: !6525)
!6636 = !DILocation(line: 4053, column: 13, scope: !6525)
!6637 = !DILocation(line: 4053, column: 2, scope: !6525)
!6638 = !DILocation(line: 4053, column: 6, scope: !6525)
!6639 = !DILocation(line: 4053, column: 11, scope: !6525)
!6640 = !DILocation(line: 4054, column: 18, scope: !6525)
!6641 = !DILocation(line: 4054, column: 2, scope: !6525)
!6642 = !DILocation(line: 4054, column: 6, scope: !6525)
!6643 = !DILocation(line: 4054, column: 16, scope: !6525)
!6644 = !DILocation(line: 4056, column: 18, scope: !6525)
!6645 = !DILocation(line: 4056, column: 22, scope: !6525)
!6646 = !DILocation(line: 4056, column: 2, scope: !6525)
!6647 = !DILocation(line: 4057, column: 18, scope: !6525)
!6648 = !DILocation(line: 4057, column: 22, scope: !6525)
!6649 = !DILocation(line: 4057, column: 2, scope: !6525)
!6650 = !DILocation(line: 4059, column: 9, scope: !6525)
!6651 = !DILocation(line: 4059, column: 13, scope: !6525)
!6652 = !DILocation(line: 4059, column: 2, scope: !6525)
!6653 = !DILocation(line: 4060, column: 11, scope: !6525)
!6654 = !DILocation(line: 4060, column: 15, scope: !6525)
!6655 = !DILocation(line: 4060, column: 42, scope: !6525)
!6656 = !DILocation(line: 4060, column: 46, scope: !6525)
!6657 = !DILocation(line: 4060, column: 2, scope: !6525)
!6658 = !DILocation(line: 4062, column: 18, scope: !6525)
!6659 = !DILocation(line: 4062, column: 2, scope: !6525)
!6660 = !DILocation(line: 4062, column: 6, scope: !6525)
!6661 = !DILocation(line: 4062, column: 16, scope: !6525)
!6662 = !DILocation(line: 4063, column: 7, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 4063, column: 6)
!6664 = !DILocation(line: 4063, column: 11, scope: !6663)
!6665 = !DILocation(line: 4063, column: 6, scope: !6525)
!6666 = !DILocation(line: 4064, column: 3, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6663, file: !3, line: 4063, column: 22)
!6668 = !DILocation(line: 4065, column: 6, scope: !6667)
!6669 = !DILocation(line: 4066, column: 3, scope: !6667)
!6670 = !DILocation(line: 4069, column: 2, scope: !6525)
!6671 = !DILocation(line: 4071, column: 14, scope: !6525)
!6672 = !DILocation(line: 4071, column: 12, scope: !6525)
!6673 = !DILocation(line: 4072, column: 21, scope: !6674)
!6674 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 4072, column: 6)
!6675 = !DILocation(line: 4072, column: 7, scope: !6674)
!6676 = !DILocation(line: 4072, column: 6, scope: !6525)
!6677 = !DILocation(line: 4073, column: 3, scope: !6678)
!6678 = distinct !DILexicalBlock(scope: !6679, file: !3, line: 4073, column: 3)
!6679 = distinct !DILexicalBlock(scope: !6674, file: !3, line: 4072, column: 33)
!6680 = !DILocation(line: 4073, column: 3, scope: !6681)
!6681 = distinct !DILexicalBlock(scope: !6678, file: !3, line: 4073, column: 3)
!6682 = !DILocation(line: 4075, column: 23, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6681, file: !3, line: 4074, column: 3)
!6684 = !DILocation(line: 4075, column: 14, scope: !6683)
!6685 = !DILocation(line: 4075, column: 33, scope: !6683)
!6686 = !DILocation(line: 4075, column: 31, scope: !6683)
!6687 = !DILocation(line: 4075, column: 27, scope: !6683)
!6688 = !DILocation(line: 4075, column: 43, scope: !6683)
!6689 = !DILocation(line: 4075, column: 4, scope: !6683)
!6690 = !DILocation(line: 4076, column: 15, scope: !6683)
!6691 = !DILocation(line: 4076, column: 8, scope: !6683)
!6692 = !DILocation(line: 4076, column: 6, scope: !6683)
!6693 = !DILocation(line: 4077, column: 3, scope: !6683)
!6694 = distinct !{!6694, !6677, !6695}
!6695 = !DILocation(line: 4077, column: 3, scope: !6678)
!6696 = !DILocation(line: 4079, column: 3, scope: !6679)
!6697 = !DILocation(line: 4084, column: 2, scope: !6679)
!6698 = !DILocation(line: 4087, column: 47, scope: !6525)
!6699 = !DILocation(line: 4087, column: 51, scope: !6525)
!6700 = !DILocation(line: 4087, column: 20, scope: !6525)
!6701 = !DILocation(line: 4087, column: 2, scope: !6525)
!6702 = !DILocation(line: 4087, column: 6, scope: !6525)
!6703 = !DILocation(line: 4087, column: 18, scope: !6525)
!6704 = !DILocation(line: 4088, column: 2, scope: !6525)
!6705 = !DILocation(line: 4092, column: 28, scope: !6525)
!6706 = !DILocation(line: 4092, column: 32, scope: !6525)
!6707 = !DILocation(line: 4092, column: 2, scope: !6525)
!6708 = !DILocation(line: 4092, column: 6, scope: !6525)
!6709 = !DILocation(line: 4092, column: 14, scope: !6525)
!6710 = !DILocation(line: 4092, column: 26, scope: !6525)
!6711 = !DILocation(line: 4093, column: 55, scope: !6525)
!6712 = !DILocation(line: 4093, column: 59, scope: !6525)
!6713 = !DILocation(line: 4093, column: 28, scope: !6525)
!6714 = !DILocation(line: 4093, column: 2, scope: !6525)
!6715 = !DILocation(line: 4093, column: 6, scope: !6525)
!6716 = !DILocation(line: 4093, column: 14, scope: !6525)
!6717 = !DILocation(line: 4093, column: 26, scope: !6525)
!6718 = !DILocation(line: 4094, column: 55, scope: !6525)
!6719 = !DILocation(line: 4094, column: 59, scope: !6525)
!6720 = !DILocation(line: 4094, column: 28, scope: !6525)
!6721 = !DILocation(line: 4094, column: 2, scope: !6525)
!6722 = !DILocation(line: 4094, column: 6, scope: !6525)
!6723 = !DILocation(line: 4094, column: 14, scope: !6525)
!6724 = !DILocation(line: 4094, column: 26, scope: !6525)
!6725 = !DILocation(line: 4095, column: 28, scope: !6525)
!6726 = !DILocation(line: 4095, column: 32, scope: !6525)
!6727 = !DILocation(line: 4095, column: 40, scope: !6525)
!6728 = !DILocation(line: 4095, column: 2, scope: !6525)
!6729 = !DILocation(line: 4095, column: 6, scope: !6525)
!6730 = !DILocation(line: 4095, column: 14, scope: !6525)
!6731 = !DILocation(line: 4095, column: 26, scope: !6525)
!6732 = !DILocation(line: 4096, column: 28, scope: !6525)
!6733 = !DILocation(line: 4096, column: 32, scope: !6525)
!6734 = !DILocation(line: 4096, column: 40, scope: !6525)
!6735 = !DILocation(line: 4096, column: 2, scope: !6525)
!6736 = !DILocation(line: 4096, column: 6, scope: !6525)
!6737 = !DILocation(line: 4096, column: 14, scope: !6525)
!6738 = !DILocation(line: 4096, column: 26, scope: !6525)
!6739 = !DILocation(line: 4097, column: 28, scope: !6525)
!6740 = !DILocation(line: 4097, column: 32, scope: !6525)
!6741 = !DILocation(line: 4097, column: 40, scope: !6525)
!6742 = !DILocation(line: 4097, column: 2, scope: !6525)
!6743 = !DILocation(line: 4097, column: 6, scope: !6525)
!6744 = !DILocation(line: 4097, column: 14, scope: !6525)
!6745 = !DILocation(line: 4097, column: 26, scope: !6525)
!6746 = !DILocation(line: 4098, column: 28, scope: !6525)
!6747 = !DILocation(line: 4098, column: 32, scope: !6525)
!6748 = !DILocation(line: 4098, column: 40, scope: !6525)
!6749 = !DILocation(line: 4098, column: 2, scope: !6525)
!6750 = !DILocation(line: 4098, column: 6, scope: !6525)
!6751 = !DILocation(line: 4098, column: 14, scope: !6525)
!6752 = !DILocation(line: 4098, column: 26, scope: !6525)
!6753 = !DILocation(line: 4099, column: 28, scope: !6525)
!6754 = !DILocation(line: 4099, column: 32, scope: !6525)
!6755 = !DILocation(line: 4099, column: 40, scope: !6525)
!6756 = !DILocation(line: 4099, column: 2, scope: !6525)
!6757 = !DILocation(line: 4099, column: 6, scope: !6525)
!6758 = !DILocation(line: 4099, column: 14, scope: !6525)
!6759 = !DILocation(line: 4099, column: 26, scope: !6525)
!6760 = !DILocation(line: 4102, column: 2, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 4102, column: 2)
!6762 = !DILocation(line: 4102, column: 2, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6761, file: !3, line: 4102, column: 2)
!6764 = !DILocation(line: 4103, column: 3, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6763, file: !3, line: 4102, column: 28)
!6766 = !DILocation(line: 4104, column: 10, scope: !6767)
!6767 = distinct !DILexicalBlock(scope: !6765, file: !3, line: 4104, column: 3)
!6768 = !DILocation(line: 4104, column: 17, scope: !6767)
!6769 = !DILocation(line: 4104, column: 8, scope: !6767)
!6770 = !DILocation(line: 4104, column: 22, scope: !6771)
!6771 = distinct !DILexicalBlock(scope: !6767, file: !3, line: 4104, column: 3)
!6772 = !DILocation(line: 4104, column: 24, scope: !6771)
!6773 = !DILocation(line: 4104, column: 3, scope: !6767)
!6774 = !DILocation(line: 4105, column: 8, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6776, file: !3, line: 4105, column: 8)
!6776 = distinct !DILexicalBlock(scope: !6771, file: !3, line: 4104, column: 53)
!6777 = !DILocation(line: 4105, column: 12, scope: !6775)
!6778 = !DILocation(line: 4105, column: 17, scope: !6775)
!6779 = !DILocation(line: 4105, column: 20, scope: !6775)
!6780 = !DILocation(line: 4105, column: 35, scope: !6775)
!6781 = !DILocation(line: 4105, column: 32, scope: !6775)
!6782 = !DILocation(line: 4105, column: 8, scope: !6776)
!6783 = !DILocation(line: 4106, column: 24, scope: !6784)
!6784 = distinct !DILexicalBlock(scope: !6775, file: !3, line: 4105, column: 40)
!6785 = !DILocation(line: 4106, column: 15, scope: !6784)
!6786 = !DILocation(line: 4106, column: 34, scope: !6784)
!6787 = !DILocation(line: 4106, column: 32, scope: !6784)
!6788 = !DILocation(line: 4106, column: 28, scope: !6784)
!6789 = !DILocation(line: 4106, column: 44, scope: !6784)
!6790 = !DILocation(line: 4106, column: 5, scope: !6784)
!6791 = !DILocation(line: 4107, column: 16, scope: !6784)
!6792 = !DILocation(line: 4107, column: 9, scope: !6784)
!6793 = !DILocation(line: 4107, column: 7, scope: !6784)
!6794 = !DILocation(line: 4108, column: 4, scope: !6784)
!6795 = !DILocation(line: 4109, column: 3, scope: !6776)
!6796 = !DILocation(line: 4104, column: 49, scope: !6771)
!6797 = !DILocation(line: 4104, column: 3, scope: !6771)
!6798 = distinct !{!6798, !6773, !6799}
!6799 = !DILocation(line: 4109, column: 3, scope: !6767)
!6800 = !DILocation(line: 4110, column: 7, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6765, file: !3, line: 4110, column: 7)
!6802 = !DILocation(line: 4110, column: 7, scope: !6765)
!6803 = !DILocation(line: 4111, column: 4, scope: !6801)
!6804 = !DILocation(line: 4112, column: 2, scope: !6765)
!6805 = distinct !{!6805, !6760, !6806}
!6806 = !DILocation(line: 4112, column: 2, scope: !6761)
!6807 = !DILocation(line: 4114, column: 2, scope: !6525)
!6808 = !DILocation(line: 4114, column: 2, scope: !6809)
!6809 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 4114, column: 2)
!6810 = !DILocation(line: 4115, column: 2, scope: !6525)
!6811 = !DILocation(line: 4115, column: 2, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 4115, column: 2)
!6813 = !DILocation(line: 4116, column: 2, scope: !6525)
!6814 = !DILocation(line: 4116, column: 2, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 4116, column: 2)
!6816 = !DILocation(line: 4117, column: 2, scope: !6525)
!6817 = !DILocation(line: 4117, column: 2, scope: !6818)
!6818 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 4117, column: 2)
!6819 = !DILocation(line: 4118, column: 2, scope: !6525)
!6820 = !DILocation(line: 4118, column: 2, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 4118, column: 2)
!6822 = !DILocation(line: 4119, column: 2, scope: !6525)
!6823 = !DILocation(line: 4119, column: 2, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 4119, column: 2)
!6825 = !DILocation(line: 4120, column: 2, scope: !6525)
!6826 = !DILocation(line: 4120, column: 2, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 4120, column: 2)
!6828 = !DILocation(line: 4121, column: 2, scope: !6525)
!6829 = !DILocation(line: 4121, column: 2, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 4121, column: 2)
!6831 = !DILocation(line: 4123, column: 17, scope: !6525)
!6832 = !DILocation(line: 4123, column: 2, scope: !6525)
!6833 = !DILocation(line: 4124, column: 22, scope: !6525)
!6834 = !DILocation(line: 4124, column: 7, scope: !6525)
!6835 = !DILocation(line: 4124, column: 5, scope: !6525)
!6836 = !DILocation(line: 4125, column: 6, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 4125, column: 6)
!6838 = !DILocation(line: 4125, column: 6, scope: !6525)
!6839 = !DILocation(line: 4126, column: 3, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6837, file: !3, line: 4125, column: 10)
!6841 = !DILocation(line: 4128, column: 3, scope: !6840)
!6842 = !DILocation(line: 4131, column: 23, scope: !6525)
!6843 = !DILocation(line: 4131, column: 27, scope: !6525)
!6844 = !DILocation(line: 4131, column: 2, scope: !6525)
!6845 = !DILocation(line: 4134, column: 29, scope: !6525)
!6846 = !DILocation(line: 4134, column: 7, scope: !6525)
!6847 = !DILocation(line: 4134, column: 5, scope: !6525)
!6848 = !DILocation(line: 4135, column: 6, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 4135, column: 6)
!6850 = !DILocation(line: 4135, column: 9, scope: !6849)
!6851 = !DILocation(line: 4135, column: 6, scope: !6525)
!6852 = !DILocation(line: 4136, column: 3, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6849, file: !3, line: 4135, column: 14)
!6854 = !DILocation(line: 4138, column: 3, scope: !6853)
!6855 = !DILocation(line: 4145, column: 10, scope: !6525)
!6856 = !DILocation(line: 4146, column: 6, scope: !6857)
!6857 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 4146, column: 6)
!6858 = !DILocation(line: 4146, column: 9, scope: !6857)
!6859 = !DILocation(line: 4146, column: 6, scope: !6525)
!6860 = !DILocation(line: 4147, column: 36, scope: !6857)
!6861 = !DILocation(line: 4147, column: 40, scope: !6857)
!6862 = !DILocation(line: 4147, column: 3, scope: !6857)
!6863 = !DILocation(line: 4149, column: 6, scope: !6857)
!6864 = !DILocation(line: 4152, column: 2, scope: !6525)
!6865 = !DILocation(line: 4152, column: 2, scope: !6540)
!6866 = !DILocalVariable(name: "__dummy", scope: !6867, file: !3, line: 4152, type: !898)
!6867 = distinct !DILexicalBlock(scope: !6539, file: !3, line: 4152, column: 2)
!6868 = !DILocation(line: 4152, column: 2, scope: !6867)
!6869 = !DILocalVariable(name: "__dummy2", scope: !6867, file: !3, line: 4152, type: !898)
!6870 = !DILocation(line: 4152, column: 2, scope: !6539)
!6871 = !DILocation(line: 4152, column: 2, scope: !6538)
!6872 = !DILocation(line: 4152, column: 2, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6538, file: !3, line: 4152, column: 2)
!6874 = !DILocalVariable(name: "__dummy", scope: !6875, file: !3, line: 4152, type: !898)
!6875 = distinct !DILexicalBlock(scope: !6876, file: !3, line: 4152, column: 2)
!6876 = distinct !DILexicalBlock(scope: !6873, file: !3, line: 4152, column: 2)
!6877 = !DILocation(line: 4152, column: 2, scope: !6875)
!6878 = !DILocalVariable(name: "__dummy2", scope: !6875, file: !3, line: 4152, type: !898)
!6879 = !DILocation(line: 4152, column: 2, scope: !6876)
!6880 = !DILocation(line: 4152, column: 2, scope: !6537)
!6881 = !{i32 -2139228514}
!6882 = !DILocation(line: 329, column: 10, scope: !6457, inlinedAt: !6535)
!6883 = !DILocation(line: 329, column: 16, scope: !6457, inlinedAt: !6535)
!6884 = !DILocation(line: 4152, column: 2, scope: !6536)
!6885 = !DILocation(line: 4153, column: 12, scope: !6525)
!6886 = !DILocation(line: 4153, column: 16, scope: !6525)
!6887 = !DILocation(line: 4153, column: 2, scope: !6525)
!6888 = !DILocation(line: 4154, column: 36, scope: !6525)
!6889 = !DILocalVariable(name: "__dummy", scope: !6890, file: !6458, line: 409, type: !898)
!6890 = distinct !DILexicalBlock(scope: !6891, file: !6458, line: 409, column: 2)
!6891 = distinct !DILexicalBlock(scope: !6527, file: !6458, line: 409, column: 2)
!6892 = !DILocation(line: 409, column: 2, scope: !6890, inlinedAt: !6531)
!6893 = !DILocalVariable(name: "__dummy2", scope: !6890, file: !6458, line: 409, type: !898)
!6894 = !DILocalVariable(name: "__dummy", scope: !6895, file: !6458, line: 409, type: !898)
!6895 = distinct !DILexicalBlock(scope: !6896, file: !6458, line: 409, column: 2)
!6896 = distinct !DILexicalBlock(scope: !6897, file: !6458, line: 409, column: 2)
!6897 = distinct !DILexicalBlock(scope: !6898, file: !6458, line: 409, column: 2)
!6898 = distinct !DILexicalBlock(scope: !6891, file: !6458, line: 409, column: 2)
!6899 = !DILocation(line: 409, column: 2, scope: !6895, inlinedAt: !6531)
!6900 = !DILocalVariable(name: "__dummy2", scope: !6895, file: !6458, line: 409, type: !898)
!6901 = !DILocation(line: 409, column: 2, scope: !6896, inlinedAt: !6531)
!6902 = !DILocation(line: 409, column: 2, scope: !6903, inlinedAt: !6531)
!6903 = distinct !DILexicalBlock(scope: !6898, file: !6458, line: 409, column: 2)
!6904 = !{i32 -2145242787}
!6905 = !DILocation(line: 409, column: 2, scope: !6906, inlinedAt: !6531)
!6906 = distinct !DILexicalBlock(scope: !6903, file: !6458, line: 409, column: 2)
!6907 = !DILocation(line: 4156, column: 2, scope: !6525)
!6908 = !DILabel(scope: !6525, name: "block_initialize_err", file: !3, line: 4158)
!6909 = !DILocation(line: 4158, column: 1, scope: !6525)
!6910 = !DILocation(line: 4159, column: 18, scope: !6525)
!6911 = !DILocation(line: 4159, column: 2, scope: !6525)
!6912 = !DILabel(scope: !6525, name: "msi_initialize_err", file: !3, line: 4161)
!6913 = !DILocation(line: 4161, column: 1, scope: !6525)
!6914 = !DILocation(line: 4162, column: 6, scope: !6915)
!6915 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 4162, column: 6)
!6916 = !DILocation(line: 4162, column: 10, scope: !6915)
!6917 = !DILocation(line: 4162, column: 6, scope: !6525)
!6918 = !DILocation(line: 4163, column: 19, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6915, file: !3, line: 4162, column: 21)
!6920 = !DILocation(line: 4163, column: 23, scope: !6919)
!6921 = !DILocation(line: 4163, column: 3, scope: !6919)
!6922 = !DILocation(line: 4164, column: 21, scope: !6919)
!6923 = !DILocation(line: 4164, column: 25, scope: !6919)
!6924 = !DILocation(line: 4164, column: 3, scope: !6919)
!6925 = !DILocation(line: 4165, column: 12, scope: !6919)
!6926 = !DILocation(line: 4165, column: 16, scope: !6919)
!6927 = !DILocation(line: 4165, column: 24, scope: !6919)
!6928 = !DILocation(line: 4165, column: 3, scope: !6919)
!6929 = !DILocation(line: 4166, column: 12, scope: !6919)
!6930 = !DILocation(line: 4166, column: 16, scope: !6919)
!6931 = !DILocation(line: 4166, column: 24, scope: !6919)
!6932 = !DILocation(line: 4166, column: 3, scope: !6919)
!6933 = !DILocation(line: 4167, column: 12, scope: !6919)
!6934 = !DILocation(line: 4167, column: 16, scope: !6919)
!6935 = !DILocation(line: 4167, column: 24, scope: !6919)
!6936 = !DILocation(line: 4167, column: 3, scope: !6919)
!6937 = !DILocation(line: 4168, column: 2, scope: !6919)
!6938 = !DILabel(scope: !6525, name: "setmask_err", file: !3, line: 4169)
!6939 = !DILocation(line: 4169, column: 1, scope: !6525)
!6940 = !DILocation(line: 4170, column: 23, scope: !6525)
!6941 = !DILocation(line: 4170, column: 2, scope: !6525)
!6942 = !DILabel(scope: !6525, name: "iomap_err", file: !3, line: 4172)
!6943 = !DILocation(line: 4172, column: 1, scope: !6525)
!6944 = !DILocation(line: 4173, column: 8, scope: !6525)
!6945 = !DILocation(line: 4173, column: 2, scope: !6525)
!6946 = !DILocation(line: 4174, column: 18, scope: !6525)
!6947 = !DILocation(line: 4174, column: 2, scope: !6525)
!6948 = !DILocation(line: 4175, column: 9, scope: !6525)
!6949 = !DILocation(line: 4175, column: 2, scope: !6525)
!6950 = !DILabel(scope: !6525, name: "done", file: !3, line: 4176)
!6951 = !DILocation(line: 4176, column: 1, scope: !6525)
!6952 = !DILocation(line: 4177, column: 9, scope: !6525)
!6953 = !DILocation(line: 4177, column: 2, scope: !6525)
!6954 = !DILocation(line: 4178, column: 1, scope: !6525)
!6955 = distinct !DISubprogram(name: "mtip_pci_remove", scope: !3, file: !3, line: 4187, type: !6022, scopeLine: 4188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!6956 = !DILocation(line: 407, column: 64, scope: !6527, inlinedAt: !6957)
!6957 = distinct !DILocation(line: 4235, column: 2, scope: !6955)
!6958 = !DILocation(line: 407, column: 84, scope: !6527, inlinedAt: !6957)
!6959 = !DILocation(line: 327, column: 67, scope: !6457, inlinedAt: !6960)
!6960 = distinct !DILocation(line: 4233, column: 2, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6962, file: !3, line: 4233, column: 2)
!6962 = distinct !DILexicalBlock(scope: !6963, file: !3, line: 4233, column: 2)
!6963 = distinct !DILexicalBlock(scope: !6964, file: !3, line: 4233, column: 2)
!6964 = distinct !DILexicalBlock(scope: !6965, file: !3, line: 4233, column: 2)
!6965 = distinct !DILexicalBlock(scope: !6955, file: !3, line: 4233, column: 2)
!6966 = !DILocalVariable(name: "v", arg: 1, scope: !6967, file: !6968, line: 23, type: !6971)
!6967 = distinct !DISubprogram(name: "arch_atomic_read", scope: !6968, file: !6968, line: 23, type: !6969, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!6968 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!6969 = !DISubroutineType(types: !6970)
!6970 = !{!443, !6971}
!6971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6972, size: 64)
!6972 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1586)
!6973 = !DILocation(line: 23, column: 61, scope: !6967, inlinedAt: !6974)
!6974 = distinct !DILocation(line: 28, column: 9, scope: !6975, inlinedAt: !6977)
!6975 = distinct !DISubprogram(name: "atomic_read", scope: !6976, file: !6976, line: 25, type: !6969, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!6976 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!6977 = distinct !DILocation(line: 4212, column: 6, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6955, file: !3, line: 4212, column: 6)
!6979 = !DILocalVariable(name: "v", arg: 1, scope: !6980, file: !6981, line: 69, type: !6984)
!6980 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !6981, file: !6981, line: 69, type: !6982, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!6981 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!6982 = !DISubroutineType(types: !6983)
!6983 = !{null, !6984, !1121}
!6984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6985, size: 64)
!6985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6986)
!6986 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!6987 = !DILocation(line: 69, column: 73, scope: !6980, inlinedAt: !6988)
!6988 = distinct !DILocation(line: 27, column: 2, scope: !6975, inlinedAt: !6977)
!6989 = !DILocalVariable(name: "size", arg: 2, scope: !6980, file: !6981, line: 69, type: !1121)
!6990 = !DILocation(line: 69, column: 83, scope: !6980, inlinedAt: !6988)
!6991 = !DILocalVariable(name: "v", arg: 1, scope: !6975, file: !6976, line: 25, type: !6971)
!6992 = !DILocation(line: 25, column: 29, scope: !6975, inlinedAt: !6977)
!6993 = !DILocation(line: 23, column: 61, scope: !6967, inlinedAt: !6994)
!6994 = distinct !DILocation(line: 28, column: 9, scope: !6975, inlinedAt: !6995)
!6995 = distinct !DILocation(line: 4206, column: 11, scope: !6955)
!6996 = !DILocation(line: 69, column: 73, scope: !6980, inlinedAt: !6997)
!6997 = distinct !DILocation(line: 27, column: 2, scope: !6975, inlinedAt: !6995)
!6998 = !DILocation(line: 69, column: 83, scope: !6980, inlinedAt: !6997)
!6999 = !DILocation(line: 25, column: 29, scope: !6975, inlinedAt: !6995)
!7000 = !DILocalVariable(name: "m", arg: 1, scope: !7001, file: !7002, line: 363, type: !3549)
!7001 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !7002, file: !7002, line: 363, type: !7003, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!7002 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!7003 = !DISubroutineType(types: !7004)
!7004 = !{!898, !3549}
!7005 = !DILocation(line: 363, column: 74, scope: !7001, inlinedAt: !7006)
!7006 = distinct !DILocation(line: 4203, column: 17, scope: !6955)
!7007 = !DILocation(line: 407, column: 64, scope: !6527, inlinedAt: !7008)
!7008 = distinct !DILocation(line: 4197, column: 2, scope: !6955)
!7009 = !DILocation(line: 407, column: 84, scope: !6527, inlinedAt: !7008)
!7010 = !DILocation(line: 327, column: 67, scope: !6457, inlinedAt: !7011)
!7011 = distinct !DILocation(line: 4194, column: 2, scope: !7012)
!7012 = distinct !DILexicalBlock(scope: !7013, file: !3, line: 4194, column: 2)
!7013 = distinct !DILexicalBlock(scope: !7014, file: !3, line: 4194, column: 2)
!7014 = distinct !DILexicalBlock(scope: !7015, file: !3, line: 4194, column: 2)
!7015 = distinct !DILexicalBlock(scope: !7016, file: !3, line: 4194, column: 2)
!7016 = distinct !DILexicalBlock(scope: !6955, file: !3, line: 4194, column: 2)
!7017 = !DILocalVariable(name: "pdev", arg: 1, scope: !6955, file: !3, line: 4187, type: !5888)
!7018 = !DILocation(line: 4187, column: 45, scope: !6955)
!7019 = !DILocalVariable(name: "dd", scope: !6955, file: !3, line: 4189, type: !945)
!7020 = !DILocation(line: 4189, column: 22, scope: !6955)
!7021 = !DILocation(line: 4189, column: 43, scope: !6955)
!7022 = !DILocation(line: 4189, column: 27, scope: !6955)
!7023 = !DILocalVariable(name: "flags", scope: !6955, file: !3, line: 4190, type: !898)
!7024 = !DILocation(line: 4190, column: 16, scope: !6955)
!7025 = !DILocalVariable(name: "to", scope: !6955, file: !3, line: 4190, type: !898)
!7026 = !DILocation(line: 4190, column: 23, scope: !6955)
!7027 = !DILocation(line: 4192, column: 33, scope: !6955)
!7028 = !DILocation(line: 4192, column: 37, scope: !6955)
!7029 = !DILocation(line: 4192, column: 2, scope: !6955)
!7030 = !DILocation(line: 4194, column: 2, scope: !6955)
!7031 = !DILocation(line: 4194, column: 2, scope: !7016)
!7032 = !DILocalVariable(name: "__dummy", scope: !7033, file: !3, line: 4194, type: !898)
!7033 = distinct !DILexicalBlock(scope: !7015, file: !3, line: 4194, column: 2)
!7034 = !DILocation(line: 4194, column: 2, scope: !7033)
!7035 = !DILocalVariable(name: "__dummy2", scope: !7033, file: !3, line: 4194, type: !898)
!7036 = !DILocation(line: 4194, column: 2, scope: !7015)
!7037 = !DILocation(line: 4194, column: 2, scope: !7014)
!7038 = !DILocation(line: 4194, column: 2, scope: !7039)
!7039 = distinct !DILexicalBlock(scope: !7014, file: !3, line: 4194, column: 2)
!7040 = !DILocalVariable(name: "__dummy", scope: !7041, file: !3, line: 4194, type: !898)
!7041 = distinct !DILexicalBlock(scope: !7042, file: !3, line: 4194, column: 2)
!7042 = distinct !DILexicalBlock(scope: !7039, file: !3, line: 4194, column: 2)
!7043 = !DILocation(line: 4194, column: 2, scope: !7041)
!7044 = !DILocalVariable(name: "__dummy2", scope: !7041, file: !3, line: 4194, type: !898)
!7045 = !DILocation(line: 4194, column: 2, scope: !7042)
!7046 = !DILocation(line: 4194, column: 2, scope: !7013)
!7047 = !{i32 -2139227495}
!7048 = !DILocation(line: 329, column: 10, scope: !6457, inlinedAt: !7011)
!7049 = !DILocation(line: 329, column: 16, scope: !6457, inlinedAt: !7011)
!7050 = !DILocation(line: 4194, column: 2, scope: !7012)
!7051 = !DILocation(line: 4195, column: 17, scope: !6955)
!7052 = !DILocation(line: 4195, column: 21, scope: !6955)
!7053 = !DILocation(line: 4195, column: 2, scope: !6955)
!7054 = !DILocation(line: 4196, column: 12, scope: !6955)
!7055 = !DILocation(line: 4196, column: 16, scope: !6955)
!7056 = !DILocation(line: 4196, column: 2, scope: !6955)
!7057 = !DILocation(line: 4197, column: 36, scope: !6955)
!7058 = !DILocation(line: 409, column: 2, scope: !6890, inlinedAt: !7008)
!7059 = !DILocation(line: 409, column: 2, scope: !6895, inlinedAt: !7008)
!7060 = !DILocation(line: 409, column: 2, scope: !6896, inlinedAt: !7008)
!7061 = !DILocation(line: 409, column: 2, scope: !6903, inlinedAt: !7008)
!7062 = !DILocation(line: 409, column: 2, scope: !6906, inlinedAt: !7008)
!7063 = !DILocation(line: 4199, column: 30, scope: !6955)
!7064 = !DILocation(line: 4199, column: 2, scope: !6955)
!7065 = !DILocation(line: 4200, column: 18, scope: !6955)
!7066 = !DILocation(line: 4200, column: 22, scope: !6955)
!7067 = !DILocation(line: 4200, column: 28, scope: !6955)
!7068 = !DILocation(line: 4200, column: 2, scope: !6955)
!7069 = !DILocation(line: 4203, column: 7, scope: !6955)
!7070 = !DILocation(line: 365, column: 27, scope: !7071, inlinedAt: !7006)
!7071 = distinct !DILexicalBlock(scope: !7001, file: !7002, line: 365, column: 6)
!7072 = !DILocation(line: 365, column: 6, scope: !7071, inlinedAt: !7006)
!7073 = !DILocation(line: 365, column: 6, scope: !7001, inlinedAt: !7006)
!7074 = !DILocation(line: 366, column: 12, scope: !7075, inlinedAt: !7006)
!7075 = distinct !DILexicalBlock(scope: !7076, file: !7002, line: 366, column: 7)
!7076 = distinct !DILexicalBlock(scope: !7071, file: !7002, line: 365, column: 31)
!7077 = !DILocation(line: 366, column: 14, scope: !7075, inlinedAt: !7006)
!7078 = !DILocation(line: 366, column: 7, scope: !7076, inlinedAt: !7006)
!7079 = !DILocation(line: 367, column: 4, scope: !7075, inlinedAt: !7006)
!7080 = !DILocation(line: 368, column: 28, scope: !7076, inlinedAt: !7006)
!7081 = !DILocation(line: 368, column: 10, scope: !7076, inlinedAt: !7006)
!7082 = !DILocation(line: 368, column: 3, scope: !7076, inlinedAt: !7006)
!7083 = !DILocation(line: 370, column: 29, scope: !7084, inlinedAt: !7006)
!7084 = distinct !DILexicalBlock(scope: !7071, file: !7002, line: 369, column: 9)
!7085 = !DILocation(line: 370, column: 10, scope: !7084, inlinedAt: !7006)
!7086 = !DILocation(line: 370, column: 3, scope: !7084, inlinedAt: !7006)
!7087 = !DILocation(line: 372, column: 1, scope: !7001, inlinedAt: !7006)
!7088 = !DILocation(line: 4203, column: 15, scope: !6955)
!7089 = !DILocation(line: 4203, column: 5, scope: !6955)
!7090 = !DILocation(line: 4204, column: 2, scope: !6955)
!7091 = !DILocation(line: 4205, column: 3, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !6955, file: !3, line: 4204, column: 5)
!7093 = !DILocation(line: 4206, column: 2, scope: !7092)
!7094 = !DILocation(line: 4206, column: 24, scope: !6955)
!7095 = !DILocation(line: 4206, column: 28, scope: !6955)
!7096 = !DILocation(line: 27, column: 25, scope: !6975, inlinedAt: !6995)
!7097 = !DILocation(line: 71, column: 19, scope: !6980, inlinedAt: !6997)
!7098 = !DILocation(line: 71, column: 22, scope: !6980, inlinedAt: !6997)
!7099 = !DILocation(line: 71, column: 2, scope: !6980, inlinedAt: !6997)
!7100 = !DILocation(line: 72, column: 2, scope: !6980, inlinedAt: !6997)
!7101 = !DILocation(line: 28, column: 26, scope: !6975, inlinedAt: !6995)
!7102 = !DILocation(line: 29, column: 9, scope: !6967, inlinedAt: !6994)
!7103 = !DILocation(line: 4206, column: 48, scope: !6955)
!7104 = !DILocation(line: 4206, column: 53, scope: !6955)
!7105 = !DILocation(line: 4207, column: 3, scope: !6955)
!7106 = !DILocation(line: 0, scope: !6955)
!7107 = distinct !{!7107, !7090, !7108}
!7108 = !DILocation(line: 4207, column: 27, scope: !6955)
!7109 = !DILocation(line: 4209, column: 7, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !6955, file: !3, line: 4209, column: 6)
!7111 = !DILocation(line: 4209, column: 11, scope: !7110)
!7112 = !DILocation(line: 4209, column: 6, scope: !6955)
!7113 = !DILocation(line: 4210, column: 14, scope: !7110)
!7114 = !DILocation(line: 4210, column: 18, scope: !7110)
!7115 = !DILocation(line: 4210, column: 3, scope: !7110)
!7116 = !DILocation(line: 4212, column: 19, scope: !6978)
!7117 = !DILocation(line: 4212, column: 23, scope: !6978)
!7118 = !DILocation(line: 27, column: 25, scope: !6975, inlinedAt: !6977)
!7119 = !DILocation(line: 71, column: 19, scope: !6980, inlinedAt: !6988)
!7120 = !DILocation(line: 71, column: 22, scope: !6980, inlinedAt: !6988)
!7121 = !DILocation(line: 71, column: 2, scope: !6980, inlinedAt: !6988)
!7122 = !DILocation(line: 72, column: 2, scope: !6980, inlinedAt: !6988)
!7123 = !DILocation(line: 28, column: 26, scope: !6975, inlinedAt: !6977)
!7124 = !DILocation(line: 29, column: 9, scope: !6967, inlinedAt: !6974)
!7125 = !DILocation(line: 4212, column: 43, scope: !6978)
!7126 = !DILocation(line: 4212, column: 6, scope: !6955)
!7127 = !DILocation(line: 4213, column: 3, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !6978, file: !3, line: 4212, column: 49)
!7129 = !DILocation(line: 4215, column: 2, scope: !7128)
!7130 = !DILocation(line: 4217, column: 22, scope: !6955)
!7131 = !DILocation(line: 4217, column: 26, scope: !6955)
!7132 = !DILocation(line: 4217, column: 2, scope: !6955)
!7133 = !DILocation(line: 4218, column: 40, scope: !6955)
!7134 = !DILocation(line: 4218, column: 44, scope: !6955)
!7135 = !DILocation(line: 4218, column: 2, scope: !6955)
!7136 = !DILocation(line: 4221, column: 20, scope: !6955)
!7137 = !DILocation(line: 4221, column: 2, scope: !6955)
!7138 = !DILocation(line: 4223, column: 6, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !6955, file: !3, line: 4223, column: 6)
!7140 = !DILocation(line: 4223, column: 10, scope: !7139)
!7141 = !DILocation(line: 4223, column: 6, scope: !6955)
!7142 = !DILocation(line: 4224, column: 19, scope: !7143)
!7143 = distinct !DILexicalBlock(scope: !7139, file: !3, line: 4223, column: 21)
!7144 = !DILocation(line: 4224, column: 23, scope: !7143)
!7145 = !DILocation(line: 4224, column: 3, scope: !7143)
!7146 = !DILocation(line: 4225, column: 21, scope: !7143)
!7147 = !DILocation(line: 4225, column: 25, scope: !7143)
!7148 = !DILocation(line: 4225, column: 3, scope: !7143)
!7149 = !DILocation(line: 4226, column: 12, scope: !7143)
!7150 = !DILocation(line: 4226, column: 16, scope: !7143)
!7151 = !DILocation(line: 4226, column: 24, scope: !7143)
!7152 = !DILocation(line: 4226, column: 3, scope: !7143)
!7153 = !DILocation(line: 4227, column: 12, scope: !7143)
!7154 = !DILocation(line: 4227, column: 16, scope: !7143)
!7155 = !DILocation(line: 4227, column: 24, scope: !7143)
!7156 = !DILocation(line: 4227, column: 3, scope: !7143)
!7157 = !DILocation(line: 4228, column: 12, scope: !7143)
!7158 = !DILocation(line: 4228, column: 16, scope: !7143)
!7159 = !DILocation(line: 4228, column: 24, scope: !7143)
!7160 = !DILocation(line: 4228, column: 3, scope: !7143)
!7161 = !DILocation(line: 4229, column: 2, scope: !7143)
!7162 = !DILocation(line: 4231, column: 18, scope: !6955)
!7163 = !DILocation(line: 4231, column: 2, scope: !6955)
!7164 = !DILocation(line: 4233, column: 2, scope: !6955)
!7165 = !DILocation(line: 4233, column: 2, scope: !6965)
!7166 = !DILocalVariable(name: "__dummy", scope: !7167, file: !3, line: 4233, type: !898)
!7167 = distinct !DILexicalBlock(scope: !6964, file: !3, line: 4233, column: 2)
!7168 = !DILocation(line: 4233, column: 2, scope: !7167)
!7169 = !DILocalVariable(name: "__dummy2", scope: !7167, file: !3, line: 4233, type: !898)
!7170 = !DILocation(line: 4233, column: 2, scope: !6964)
!7171 = !DILocation(line: 4233, column: 2, scope: !6963)
!7172 = !DILocation(line: 4233, column: 2, scope: !7173)
!7173 = distinct !DILexicalBlock(scope: !6963, file: !3, line: 4233, column: 2)
!7174 = !DILocalVariable(name: "__dummy", scope: !7175, file: !3, line: 4233, type: !898)
!7175 = distinct !DILexicalBlock(scope: !7176, file: !3, line: 4233, column: 2)
!7176 = distinct !DILexicalBlock(scope: !7173, file: !3, line: 4233, column: 2)
!7177 = !DILocation(line: 4233, column: 2, scope: !7175)
!7178 = !DILocalVariable(name: "__dummy2", scope: !7175, file: !3, line: 4233, type: !898)
!7179 = !DILocation(line: 4233, column: 2, scope: !7176)
!7180 = !DILocation(line: 4233, column: 2, scope: !6962)
!7181 = !{i32 -2139225971}
!7182 = !DILocation(line: 329, column: 10, scope: !6457, inlinedAt: !6960)
!7183 = !DILocation(line: 329, column: 16, scope: !6457, inlinedAt: !6960)
!7184 = !DILocation(line: 4233, column: 2, scope: !6961)
!7185 = !DILocation(line: 4234, column: 17, scope: !6955)
!7186 = !DILocation(line: 4234, column: 21, scope: !6955)
!7187 = !DILocation(line: 4234, column: 2, scope: !6955)
!7188 = !DILocation(line: 4235, column: 36, scope: !6955)
!7189 = !DILocation(line: 409, column: 2, scope: !6890, inlinedAt: !6957)
!7190 = !DILocation(line: 409, column: 2, scope: !6895, inlinedAt: !6957)
!7191 = !DILocation(line: 409, column: 2, scope: !6896, inlinedAt: !6957)
!7192 = !DILocation(line: 409, column: 2, scope: !6903, inlinedAt: !6957)
!7193 = !DILocation(line: 409, column: 2, scope: !6906, inlinedAt: !6957)
!7194 = !DILocation(line: 4237, column: 8, scope: !6955)
!7195 = !DILocation(line: 4237, column: 2, scope: !6955)
!7196 = !DILocation(line: 4239, column: 23, scope: !6955)
!7197 = !DILocation(line: 4239, column: 2, scope: !6955)
!7198 = !DILocation(line: 4240, column: 18, scope: !6955)
!7199 = !DILocation(line: 4240, column: 2, scope: !6955)
!7200 = !DILocation(line: 4241, column: 1, scope: !6955)
!7201 = distinct !DISubprogram(name: "mtip_pci_suspend", scope: !3, file: !3, line: 4250, type: !6026, scopeLine: 4251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!7202 = !DILocalVariable(name: "pdev", arg: 1, scope: !7201, file: !3, line: 4250, type: !5888)
!7203 = !DILocation(line: 4250, column: 45, scope: !7201)
!7204 = !DILocalVariable(name: "mesg", arg: 2, scope: !7201, file: !3, line: 4250, type: !5335)
!7205 = !DILocation(line: 4250, column: 64, scope: !7201)
!7206 = !DILocalVariable(name: "rv", scope: !7201, file: !3, line: 4252, type: !443)
!7207 = !DILocation(line: 4252, column: 6, scope: !7201)
!7208 = !DILocalVariable(name: "dd", scope: !7201, file: !3, line: 4253, type: !945)
!7209 = !DILocation(line: 4253, column: 22, scope: !7201)
!7210 = !DILocation(line: 4253, column: 43, scope: !7201)
!7211 = !DILocation(line: 4253, column: 27, scope: !7201)
!7212 = !DILocation(line: 4255, column: 7, scope: !7213)
!7213 = distinct !DILexicalBlock(scope: !7201, file: !3, line: 4255, column: 6)
!7214 = !DILocation(line: 4255, column: 6, scope: !7201)
!7215 = !DILocation(line: 4256, column: 3, scope: !7216)
!7216 = distinct !DILexicalBlock(scope: !7213, file: !3, line: 4255, column: 11)
!7217 = !DILocation(line: 4258, column: 3, scope: !7216)
!7218 = !DILocation(line: 4261, column: 32, scope: !7201)
!7219 = !DILocation(line: 4261, column: 36, scope: !7201)
!7220 = !DILocation(line: 4261, column: 2, scope: !7201)
!7221 = !DILocation(line: 4264, column: 26, scope: !7201)
!7222 = !DILocation(line: 4264, column: 7, scope: !7201)
!7223 = !DILocation(line: 4264, column: 5, scope: !7201)
!7224 = !DILocation(line: 4265, column: 6, scope: !7225)
!7225 = distinct !DILexicalBlock(scope: !7201, file: !3, line: 4265, column: 6)
!7226 = !DILocation(line: 4265, column: 9, scope: !7225)
!7227 = !DILocation(line: 4265, column: 6, scope: !7201)
!7228 = !DILocation(line: 4266, column: 3, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7225, file: !3, line: 4265, column: 14)
!7230 = !DILocation(line: 4268, column: 10, scope: !7229)
!7231 = !DILocation(line: 4268, column: 3, scope: !7229)
!7232 = !DILocation(line: 4275, column: 17, scope: !7201)
!7233 = !DILocation(line: 4275, column: 2, scope: !7201)
!7234 = !DILocation(line: 4276, column: 21, scope: !7201)
!7235 = !DILocation(line: 4276, column: 2, scope: !7201)
!7236 = !DILocation(line: 4279, column: 22, scope: !7201)
!7237 = !DILocation(line: 4279, column: 2, scope: !7201)
!7238 = !DILocation(line: 4281, column: 9, scope: !7201)
!7239 = !DILocation(line: 4281, column: 2, scope: !7201)
!7240 = !DILocation(line: 4282, column: 1, scope: !7201)
!7241 = distinct !DISubprogram(name: "mtip_pci_resume", scope: !3, file: !3, line: 4291, type: !6030, scopeLine: 4292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!7242 = !DILocalVariable(name: "pdev", arg: 1, scope: !7241, file: !3, line: 4291, type: !5888)
!7243 = !DILocation(line: 4291, column: 44, scope: !7241)
!7244 = !DILocalVariable(name: "rv", scope: !7241, file: !3, line: 4293, type: !443)
!7245 = !DILocation(line: 4293, column: 6, scope: !7241)
!7246 = !DILocalVariable(name: "dd", scope: !7241, file: !3, line: 4294, type: !945)
!7247 = !DILocation(line: 4294, column: 22, scope: !7241)
!7248 = !DILocation(line: 4296, column: 23, scope: !7241)
!7249 = !DILocation(line: 4296, column: 7, scope: !7241)
!7250 = !DILocation(line: 4296, column: 5, scope: !7241)
!7251 = !DILocation(line: 4297, column: 7, scope: !7252)
!7252 = distinct !DILexicalBlock(scope: !7241, file: !3, line: 4297, column: 6)
!7253 = !DILocation(line: 4297, column: 6, scope: !7241)
!7254 = !DILocation(line: 4298, column: 3, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !7252, file: !3, line: 4297, column: 11)
!7256 = !DILocation(line: 4300, column: 3, scope: !7255)
!7257 = !DILocation(line: 4304, column: 22, scope: !7241)
!7258 = !DILocation(line: 4304, column: 2, scope: !7241)
!7259 = !DILocation(line: 4307, column: 20, scope: !7241)
!7260 = !DILocation(line: 4307, column: 2, scope: !7241)
!7261 = !DILocation(line: 4310, column: 26, scope: !7241)
!7262 = !DILocation(line: 4310, column: 7, scope: !7241)
!7263 = !DILocation(line: 4310, column: 5, scope: !7241)
!7264 = !DILocation(line: 4311, column: 6, scope: !7265)
!7265 = distinct !DILexicalBlock(scope: !7241, file: !3, line: 4311, column: 6)
!7266 = !DILocation(line: 4311, column: 9, scope: !7265)
!7267 = !DILocation(line: 4311, column: 6, scope: !7241)
!7268 = !DILocation(line: 4312, column: 3, scope: !7269)
!7269 = distinct !DILexicalBlock(scope: !7265, file: !3, line: 4311, column: 14)
!7270 = !DILocation(line: 4314, column: 3, scope: !7269)
!7271 = !DILocation(line: 4316, column: 17, scope: !7241)
!7272 = !DILocation(line: 4316, column: 2, scope: !7241)
!7273 = !DILocation(line: 4322, column: 25, scope: !7241)
!7274 = !DILocation(line: 4322, column: 7, scope: !7241)
!7275 = !DILocation(line: 4322, column: 5, scope: !7241)
!7276 = !DILocation(line: 4323, column: 6, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7241, file: !3, line: 4323, column: 6)
!7278 = !DILocation(line: 4323, column: 9, scope: !7277)
!7279 = !DILocation(line: 4323, column: 6, scope: !7241)
!7280 = !DILocation(line: 4324, column: 3, scope: !7277)
!7281 = !DILocation(line: 4323, column: 11, scope: !7277)
!7282 = !DILabel(scope: !7241, name: "err", file: !3, line: 4326)
!7283 = !DILocation(line: 4326, column: 1, scope: !7241)
!7284 = !DILocation(line: 4327, column: 34, scope: !7241)
!7285 = !DILocation(line: 4327, column: 38, scope: !7241)
!7286 = !DILocation(line: 4327, column: 2, scope: !7241)
!7287 = !DILocation(line: 4329, column: 9, scope: !7241)
!7288 = !DILocation(line: 4329, column: 2, scope: !7241)
!7289 = !DILocation(line: 4330, column: 1, scope: !7241)
!7290 = distinct !DISubprogram(name: "mtip_pci_shutdown", scope: !3, file: !3, line: 4338, type: !6022, scopeLine: 4339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!7291 = !DILocalVariable(name: "pdev", arg: 1, scope: !7290, file: !3, line: 4338, type: !5888)
!7292 = !DILocation(line: 4338, column: 47, scope: !7290)
!7293 = !DILocalVariable(name: "dd", scope: !7290, file: !3, line: 4340, type: !945)
!7294 = !DILocation(line: 4340, column: 22, scope: !7290)
!7295 = !DILocation(line: 4340, column: 43, scope: !7290)
!7296 = !DILocation(line: 4340, column: 27, scope: !7290)
!7297 = !DILocation(line: 4341, column: 6, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !7290, file: !3, line: 4341, column: 6)
!7299 = !DILocation(line: 4341, column: 6, scope: !7290)
!7300 = !DILocation(line: 4342, column: 23, scope: !7298)
!7301 = !DILocation(line: 4342, column: 3, scope: !7298)
!7302 = !DILocation(line: 4343, column: 1, scope: !7290)
!7303 = distinct !DISubprogram(name: "node_state", scope: !147, file: !147, line: 465, type: !7304, scopeLine: 466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!7304 = !DISubroutineType(types: !7305)
!7305 = !{!443, !443, !146}
!7306 = !DILocalVariable(name: "node", arg: 1, scope: !7303, file: !147, line: 465, type: !443)
!7307 = !DILocation(line: 465, column: 34, scope: !7303)
!7308 = !DILocalVariable(name: "state", arg: 2, scope: !7303, file: !147, line: 465, type: !146)
!7309 = !DILocation(line: 465, column: 57, scope: !7303)
!7310 = !DILocation(line: 467, column: 9, scope: !7303)
!7311 = !DILocation(line: 467, column: 14, scope: !7303)
!7312 = !DILocation(line: 467, column: 2, scope: !7303)
!7313 = !DILocation(line: 3917, column: 6, scope: !7314)
!7314 = distinct !DILexicalBlock(scope: !6376, file: !3, line: 3917, column: 6)
!7315 = !DILocation(line: 3917, column: 16, scope: !7314)
!7316 = !DILocation(line: 3917, column: 6, scope: !6376)
!7317 = !DILocation(line: 3918, column: 13, scope: !7318)
!7318 = distinct !DILexicalBlock(scope: !7314, file: !3, line: 3917, column: 33)
!7319 = !DILocation(line: 3919, column: 10, scope: !7318)
!7320 = !DILocation(line: 3919, column: 3, scope: !7318)
!7321 = !DILocation(line: 3922, column: 12, scope: !6376)
!7322 = !DILocation(line: 3923, column: 6, scope: !7323)
!7323 = distinct !DILexicalBlock(scope: !6376, file: !3, line: 3923, column: 6)
!7324 = !DILocation(line: 3923, column: 16, scope: !7323)
!7325 = !DILocation(line: 3923, column: 6, scope: !6376)
!7326 = !DILocation(line: 3924, column: 13, scope: !7323)
!7327 = !DILocation(line: 3924, column: 3, scope: !7323)
!7328 = !DILocation(line: 3925, column: 9, scope: !6376)
!7329 = !DILocation(line: 3925, column: 2, scope: !6376)
!7330 = !DILocation(line: 3926, column: 1, scope: !6376)
!7331 = distinct !DISubprogram(name: "dev_to_node", scope: !25, file: !25, line: 630, type: !5253, scopeLine: 631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!7332 = !DILocalVariable(name: "dev", arg: 1, scope: !7331, file: !25, line: 630, type: !1960)
!7333 = !DILocation(line: 630, column: 46, scope: !7331)
!7334 = !DILocation(line: 632, column: 2, scope: !7331)
!7335 = distinct !DISubprogram(name: "kzalloc_node", scope: !232, file: !232, line: 673, type: !7336, scopeLine: 674, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!7336 = !DISubroutineType(types: !7337)
!7337 = !{!890, !1121, !888, !443}
!7338 = !DILocalVariable(name: "size", arg: 1, scope: !7339, file: !232, line: 416, type: !1121)
!7339 = distinct !DISubprogram(name: "__kmalloc_node", scope: !232, file: !232, line: 416, type: !7336, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!7340 = !DILocation(line: 416, column: 52, scope: !7339, inlinedAt: !7341)
!7341 = distinct !DILocation(line: 575, column: 9, scope: !7342, inlinedAt: !7343)
!7342 = distinct !DISubprogram(name: "kmalloc_node", scope: !232, file: !232, line: 560, type: !7336, scopeLine: 561, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!7343 = distinct !DILocation(line: 675, column: 9, scope: !7335)
!7344 = !DILocalVariable(name: "flags", arg: 2, scope: !7339, file: !232, line: 416, type: !888)
!7345 = !DILocation(line: 416, column: 64, scope: !7339, inlinedAt: !7341)
!7346 = !DILocalVariable(name: "node", arg: 3, scope: !7339, file: !232, line: 416, type: !443)
!7347 = !DILocation(line: 416, column: 75, scope: !7339, inlinedAt: !7341)
!7348 = !DILocalVariable(name: "s", arg: 1, scope: !7349, file: !232, line: 421, type: !2010)
!7349 = distinct !DISubprogram(name: "kmem_cache_alloc_node", scope: !232, file: !232, line: 421, type: !7350, scopeLine: 422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!7350 = !DISubroutineType(types: !7351)
!7351 = !{!890, !2010, !888, !443}
!7352 = !DILocation(line: 421, column: 71, scope: !7349, inlinedAt: !7353)
!7353 = distinct !DILocation(line: 459, column: 14, scope: !7354, inlinedAt: !7357)
!7354 = distinct !DISubprogram(name: "kmem_cache_alloc_node_trace", scope: !232, file: !232, line: 455, type: !7355, scopeLine: 458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!7355 = !DISubroutineType(types: !7356)
!7356 = !{!890, !2010, !888, !443, !1121}
!7357 = distinct !DILocation(line: 570, column: 10, scope: !7358, inlinedAt: !7343)
!7358 = distinct !DILexicalBlock(scope: !7359, file: !232, line: 564, column: 35)
!7359 = distinct !DILexicalBlock(scope: !7342, file: !232, line: 563, column: 6)
!7360 = !DILocalVariable(name: "flags", arg: 2, scope: !7349, file: !232, line: 421, type: !888)
!7361 = !DILocation(line: 421, column: 80, scope: !7349, inlinedAt: !7353)
!7362 = !DILocalVariable(name: "node", arg: 3, scope: !7349, file: !232, line: 421, type: !443)
!7363 = !DILocation(line: 421, column: 91, scope: !7349, inlinedAt: !7353)
!7364 = !DILocalVariable(name: "s", arg: 1, scope: !7354, file: !232, line: 455, type: !2010)
!7365 = !DILocation(line: 455, column: 48, scope: !7354, inlinedAt: !7357)
!7366 = !DILocalVariable(name: "gfpflags", arg: 2, scope: !7354, file: !232, line: 456, type: !888)
!7367 = !DILocation(line: 456, column: 16, scope: !7354, inlinedAt: !7357)
!7368 = !DILocalVariable(name: "node", arg: 3, scope: !7354, file: !232, line: 457, type: !443)
!7369 = !DILocation(line: 457, column: 14, scope: !7354, inlinedAt: !7357)
!7370 = !DILocalVariable(name: "size", arg: 4, scope: !7354, file: !232, line: 457, type: !1121)
!7371 = !DILocation(line: 457, column: 27, scope: !7354, inlinedAt: !7357)
!7372 = !DILocalVariable(name: "ret", scope: !7354, file: !232, line: 459, type: !890)
!7373 = !DILocation(line: 459, column: 8, scope: !7354, inlinedAt: !7357)
!7374 = !DILocalVariable(name: "flags", arg: 1, scope: !7375, file: !232, line: 318, type: !888)
!7375 = distinct !DISubprogram(name: "kmalloc_type", scope: !232, file: !232, line: 318, type: !7376, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!7376 = !DISubroutineType(types: !7377)
!7377 = !{!231, !888}
!7378 = !DILocation(line: 318, column: 67, scope: !7375, inlinedAt: !7379)
!7379 = distinct !DILocation(line: 571, column: 20, scope: !7358, inlinedAt: !7343)
!7380 = !DILocalVariable(name: "size", arg: 1, scope: !7381, file: !232, line: 346, type: !1121)
!7381 = distinct !DISubprogram(name: "kmalloc_index", scope: !232, file: !232, line: 346, type: !7382, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!7382 = !DISubroutineType(types: !7383)
!7383 = !{!7, !1121}
!7384 = !DILocation(line: 346, column: 58, scope: !7381, inlinedAt: !7385)
!7385 = distinct !DILocation(line: 565, column: 20, scope: !7358, inlinedAt: !7343)
!7386 = !DILocalVariable(name: "size", arg: 1, scope: !7342, file: !232, line: 560, type: !1121)
!7387 = !DILocation(line: 560, column: 50, scope: !7342, inlinedAt: !7343)
!7388 = !DILocalVariable(name: "flags", arg: 2, scope: !7342, file: !232, line: 560, type: !888)
!7389 = !DILocation(line: 560, column: 62, scope: !7342, inlinedAt: !7343)
!7390 = !DILocalVariable(name: "node", arg: 3, scope: !7342, file: !232, line: 560, type: !443)
!7391 = !DILocation(line: 560, column: 73, scope: !7342, inlinedAt: !7343)
!7392 = !DILocalVariable(name: "i", scope: !7358, file: !232, line: 565, type: !7)
!7393 = !DILocation(line: 565, column: 16, scope: !7358, inlinedAt: !7343)
!7394 = !DILocalVariable(name: "size", arg: 1, scope: !7335, file: !232, line: 673, type: !1121)
!7395 = !DILocation(line: 673, column: 41, scope: !7335)
!7396 = !DILocalVariable(name: "flags", arg: 2, scope: !7335, file: !232, line: 673, type: !888)
!7397 = !DILocation(line: 673, column: 53, scope: !7335)
!7398 = !DILocalVariable(name: "node", arg: 3, scope: !7335, file: !232, line: 673, type: !443)
!7399 = !DILocation(line: 673, column: 64, scope: !7335)
!7400 = !DILocation(line: 675, column: 22, scope: !7335)
!7401 = !DILocation(line: 675, column: 28, scope: !7335)
!7402 = !DILocation(line: 675, column: 34, scope: !7335)
!7403 = !DILocation(line: 675, column: 48, scope: !7335)
!7404 = !DILocation(line: 563, column: 27, scope: !7359, inlinedAt: !7343)
!7405 = !DILocation(line: 563, column: 6, scope: !7359, inlinedAt: !7343)
!7406 = !DILocation(line: 563, column: 33, scope: !7359, inlinedAt: !7343)
!7407 = !DILocation(line: 564, column: 3, scope: !7359, inlinedAt: !7343)
!7408 = !DILocation(line: 564, column: 8, scope: !7359, inlinedAt: !7343)
!7409 = !DILocation(line: 563, column: 6, scope: !7342, inlinedAt: !7343)
!7410 = !DILocation(line: 565, column: 34, scope: !7358, inlinedAt: !7343)
!7411 = !DILocation(line: 348, column: 7, scope: !7412, inlinedAt: !7385)
!7412 = distinct !DILexicalBlock(scope: !7381, file: !232, line: 348, column: 6)
!7413 = !DILocation(line: 348, column: 6, scope: !7381, inlinedAt: !7385)
!7414 = !DILocation(line: 349, column: 3, scope: !7412, inlinedAt: !7385)
!7415 = !DILocation(line: 351, column: 6, scope: !7416, inlinedAt: !7385)
!7416 = distinct !DILexicalBlock(scope: !7381, file: !232, line: 351, column: 6)
!7417 = !DILocation(line: 351, column: 11, scope: !7416, inlinedAt: !7385)
!7418 = !DILocation(line: 351, column: 6, scope: !7381, inlinedAt: !7385)
!7419 = !DILocation(line: 352, column: 3, scope: !7416, inlinedAt: !7385)
!7420 = !DILocation(line: 354, column: 32, scope: !7421, inlinedAt: !7385)
!7421 = distinct !DILexicalBlock(scope: !7381, file: !232, line: 354, column: 6)
!7422 = !DILocation(line: 354, column: 37, scope: !7421, inlinedAt: !7385)
!7423 = !DILocation(line: 354, column: 42, scope: !7421, inlinedAt: !7385)
!7424 = !DILocation(line: 354, column: 45, scope: !7421, inlinedAt: !7385)
!7425 = !DILocation(line: 354, column: 50, scope: !7421, inlinedAt: !7385)
!7426 = !DILocation(line: 354, column: 6, scope: !7381, inlinedAt: !7385)
!7427 = !DILocation(line: 355, column: 3, scope: !7421, inlinedAt: !7385)
!7428 = !DILocation(line: 356, column: 32, scope: !7429, inlinedAt: !7385)
!7429 = distinct !DILexicalBlock(scope: !7381, file: !232, line: 356, column: 6)
!7430 = !DILocation(line: 356, column: 37, scope: !7429, inlinedAt: !7385)
!7431 = !DILocation(line: 356, column: 43, scope: !7429, inlinedAt: !7385)
!7432 = !DILocation(line: 356, column: 46, scope: !7429, inlinedAt: !7385)
!7433 = !DILocation(line: 356, column: 51, scope: !7429, inlinedAt: !7385)
!7434 = !DILocation(line: 356, column: 6, scope: !7381, inlinedAt: !7385)
!7435 = !DILocation(line: 357, column: 3, scope: !7429, inlinedAt: !7385)
!7436 = !DILocation(line: 358, column: 6, scope: !7437, inlinedAt: !7385)
!7437 = distinct !DILexicalBlock(scope: !7381, file: !232, line: 358, column: 6)
!7438 = !DILocation(line: 358, column: 11, scope: !7437, inlinedAt: !7385)
!7439 = !DILocation(line: 358, column: 6, scope: !7381, inlinedAt: !7385)
!7440 = !DILocation(line: 358, column: 26, scope: !7437, inlinedAt: !7385)
!7441 = !DILocation(line: 359, column: 6, scope: !7442, inlinedAt: !7385)
!7442 = distinct !DILexicalBlock(scope: !7381, file: !232, line: 359, column: 6)
!7443 = !DILocation(line: 359, column: 11, scope: !7442, inlinedAt: !7385)
!7444 = !DILocation(line: 359, column: 6, scope: !7381, inlinedAt: !7385)
!7445 = !DILocation(line: 359, column: 26, scope: !7442, inlinedAt: !7385)
!7446 = !DILocation(line: 360, column: 6, scope: !7447, inlinedAt: !7385)
!7447 = distinct !DILexicalBlock(scope: !7381, file: !232, line: 360, column: 6)
!7448 = !DILocation(line: 360, column: 11, scope: !7447, inlinedAt: !7385)
!7449 = !DILocation(line: 360, column: 6, scope: !7381, inlinedAt: !7385)
!7450 = !DILocation(line: 360, column: 26, scope: !7447, inlinedAt: !7385)
!7451 = !DILocation(line: 361, column: 6, scope: !7452, inlinedAt: !7385)
!7452 = distinct !DILexicalBlock(scope: !7381, file: !232, line: 361, column: 6)
!7453 = !DILocation(line: 361, column: 11, scope: !7452, inlinedAt: !7385)
!7454 = !DILocation(line: 361, column: 6, scope: !7381, inlinedAt: !7385)
!7455 = !DILocation(line: 361, column: 26, scope: !7452, inlinedAt: !7385)
!7456 = !DILocation(line: 362, column: 6, scope: !7457, inlinedAt: !7385)
!7457 = distinct !DILexicalBlock(scope: !7381, file: !232, line: 362, column: 6)
!7458 = !DILocation(line: 362, column: 11, scope: !7457, inlinedAt: !7385)
!7459 = !DILocation(line: 362, column: 6, scope: !7381, inlinedAt: !7385)
!7460 = !DILocation(line: 362, column: 26, scope: !7457, inlinedAt: !7385)
!7461 = !DILocation(line: 363, column: 6, scope: !7462, inlinedAt: !7385)
!7462 = distinct !DILexicalBlock(scope: !7381, file: !232, line: 363, column: 6)
!7463 = !DILocation(line: 363, column: 11, scope: !7462, inlinedAt: !7385)
!7464 = !DILocation(line: 363, column: 6, scope: !7381, inlinedAt: !7385)
!7465 = !DILocation(line: 363, column: 26, scope: !7462, inlinedAt: !7385)
!7466 = !DILocation(line: 364, column: 6, scope: !7467, inlinedAt: !7385)
!7467 = distinct !DILexicalBlock(scope: !7381, file: !232, line: 364, column: 6)
!7468 = !DILocation(line: 364, column: 11, scope: !7467, inlinedAt: !7385)
!7469 = !DILocation(line: 364, column: 6, scope: !7381, inlinedAt: !7385)
!7470 = !DILocation(line: 364, column: 26, scope: !7467, inlinedAt: !7385)
!7471 = !DILocation(line: 365, column: 6, scope: !7472, inlinedAt: !7385)
!7472 = distinct !DILexicalBlock(scope: !7381, file: !232, line: 365, column: 6)
!7473 = !DILocation(line: 365, column: 11, scope: !7472, inlinedAt: !7385)
!7474 = !DILocation(line: 365, column: 6, scope: !7381, inlinedAt: !7385)
!7475 = !DILocation(line: 365, column: 26, scope: !7472, inlinedAt: !7385)
!7476 = !DILocation(line: 366, column: 6, scope: !7477, inlinedAt: !7385)
!7477 = distinct !DILexicalBlock(scope: !7381, file: !232, line: 366, column: 6)
!7478 = !DILocation(line: 366, column: 11, scope: !7477, inlinedAt: !7385)
!7479 = !DILocation(line: 366, column: 6, scope: !7381, inlinedAt: !7385)
!7480 = !DILocation(line: 366, column: 26, scope: !7477, inlinedAt: !7385)
!7481 = !DILocation(line: 367, column: 6, scope: !7482, inlinedAt: !7385)
!7482 = distinct !DILexicalBlock(scope: !7381, file: !232, line: 367, column: 6)
!7483 = !DILocation(line: 367, column: 11, scope: !7482, inlinedAt: !7385)
!7484 = !DILocation(line: 367, column: 6, scope: !7381, inlinedAt: !7385)
!7485 = !DILocation(line: 367, column: 26, scope: !7482, inlinedAt: !7385)
!7486 = !DILocation(line: 368, column: 6, scope: !7487, inlinedAt: !7385)
!7487 = distinct !DILexicalBlock(scope: !7381, file: !232, line: 368, column: 6)
!7488 = !DILocation(line: 368, column: 11, scope: !7487, inlinedAt: !7385)
!7489 = !DILocation(line: 368, column: 6, scope: !7381, inlinedAt: !7385)
!7490 = !DILocation(line: 368, column: 26, scope: !7487, inlinedAt: !7385)
!7491 = !DILocation(line: 369, column: 6, scope: !7492, inlinedAt: !7385)
!7492 = distinct !DILexicalBlock(scope: !7381, file: !232, line: 369, column: 6)
!7493 = !DILocation(line: 369, column: 11, scope: !7492, inlinedAt: !7385)
!7494 = !DILocation(line: 369, column: 6, scope: !7381, inlinedAt: !7385)
!7495 = !DILocation(line: 369, column: 26, scope: !7492, inlinedAt: !7385)
!7496 = !DILocation(line: 370, column: 6, scope: !7497, inlinedAt: !7385)
!7497 = distinct !DILexicalBlock(scope: !7381, file: !232, line: 370, column: 6)
!7498 = !DILocation(line: 370, column: 11, scope: !7497, inlinedAt: !7385)
!7499 = !DILocation(line: 370, column: 6, scope: !7381, inlinedAt: !7385)
!7500 = !DILocation(line: 370, column: 26, scope: !7497, inlinedAt: !7385)
!7501 = !DILocation(line: 371, column: 6, scope: !7502, inlinedAt: !7385)
!7502 = distinct !DILexicalBlock(scope: !7381, file: !232, line: 371, column: 6)
!7503 = !DILocation(line: 371, column: 11, scope: !7502, inlinedAt: !7385)
!7504 = !DILocation(line: 371, column: 6, scope: !7381, inlinedAt: !7385)
!7505 = !DILocation(line: 371, column: 26, scope: !7502, inlinedAt: !7385)
!7506 = !DILocation(line: 372, column: 6, scope: !7507, inlinedAt: !7385)
!7507 = distinct !DILexicalBlock(scope: !7381, file: !232, line: 372, column: 6)
!7508 = !DILocation(line: 372, column: 11, scope: !7507, inlinedAt: !7385)
!7509 = !DILocation(line: 372, column: 6, scope: !7381, inlinedAt: !7385)
!7510 = !DILocation(line: 372, column: 26, scope: !7507, inlinedAt: !7385)
!7511 = !DILocation(line: 373, column: 6, scope: !7512, inlinedAt: !7385)
!7512 = distinct !DILexicalBlock(scope: !7381, file: !232, line: 373, column: 6)
!7513 = !DILocation(line: 373, column: 11, scope: !7512, inlinedAt: !7385)
!7514 = !DILocation(line: 373, column: 6, scope: !7381, inlinedAt: !7385)
!7515 = !DILocation(line: 373, column: 26, scope: !7512, inlinedAt: !7385)
!7516 = !DILocation(line: 374, column: 6, scope: !7517, inlinedAt: !7385)
!7517 = distinct !DILexicalBlock(scope: !7381, file: !232, line: 374, column: 6)
!7518 = !DILocation(line: 374, column: 11, scope: !7517, inlinedAt: !7385)
!7519 = !DILocation(line: 374, column: 6, scope: !7381, inlinedAt: !7385)
!7520 = !DILocation(line: 374, column: 26, scope: !7517, inlinedAt: !7385)
!7521 = !DILocation(line: 375, column: 6, scope: !7522, inlinedAt: !7385)
!7522 = distinct !DILexicalBlock(scope: !7381, file: !232, line: 375, column: 6)
!7523 = !DILocation(line: 375, column: 11, scope: !7522, inlinedAt: !7385)
!7524 = !DILocation(line: 375, column: 6, scope: !7381, inlinedAt: !7385)
!7525 = !DILocation(line: 375, column: 27, scope: !7522, inlinedAt: !7385)
!7526 = !DILocation(line: 376, column: 6, scope: !7527, inlinedAt: !7385)
!7527 = distinct !DILexicalBlock(scope: !7381, file: !232, line: 376, column: 6)
!7528 = !DILocation(line: 376, column: 11, scope: !7527, inlinedAt: !7385)
!7529 = !DILocation(line: 376, column: 6, scope: !7381, inlinedAt: !7385)
!7530 = !DILocation(line: 376, column: 32, scope: !7527, inlinedAt: !7385)
!7531 = !DILocation(line: 377, column: 6, scope: !7532, inlinedAt: !7385)
!7532 = distinct !DILexicalBlock(scope: !7381, file: !232, line: 377, column: 6)
!7533 = !DILocation(line: 377, column: 11, scope: !7532, inlinedAt: !7385)
!7534 = !DILocation(line: 377, column: 6, scope: !7381, inlinedAt: !7385)
!7535 = !DILocation(line: 377, column: 32, scope: !7532, inlinedAt: !7385)
!7536 = !DILocation(line: 378, column: 6, scope: !7537, inlinedAt: !7385)
!7537 = distinct !DILexicalBlock(scope: !7381, file: !232, line: 378, column: 6)
!7538 = !DILocation(line: 378, column: 11, scope: !7537, inlinedAt: !7385)
!7539 = !DILocation(line: 378, column: 6, scope: !7381, inlinedAt: !7385)
!7540 = !DILocation(line: 378, column: 32, scope: !7537, inlinedAt: !7385)
!7541 = !DILocation(line: 379, column: 6, scope: !7542, inlinedAt: !7385)
!7542 = distinct !DILexicalBlock(scope: !7381, file: !232, line: 379, column: 6)
!7543 = !DILocation(line: 379, column: 11, scope: !7542, inlinedAt: !7385)
!7544 = !DILocation(line: 379, column: 6, scope: !7381, inlinedAt: !7385)
!7545 = !DILocation(line: 379, column: 33, scope: !7542, inlinedAt: !7385)
!7546 = !DILocation(line: 380, column: 6, scope: !7547, inlinedAt: !7385)
!7547 = distinct !DILexicalBlock(scope: !7381, file: !232, line: 380, column: 6)
!7548 = !DILocation(line: 380, column: 11, scope: !7547, inlinedAt: !7385)
!7549 = !DILocation(line: 380, column: 6, scope: !7381, inlinedAt: !7385)
!7550 = !DILocation(line: 380, column: 33, scope: !7547, inlinedAt: !7385)
!7551 = !DILocation(line: 381, column: 6, scope: !7552, inlinedAt: !7385)
!7552 = distinct !DILexicalBlock(scope: !7381, file: !232, line: 381, column: 6)
!7553 = !DILocation(line: 381, column: 11, scope: !7552, inlinedAt: !7385)
!7554 = !DILocation(line: 381, column: 6, scope: !7381, inlinedAt: !7385)
!7555 = !DILocation(line: 381, column: 33, scope: !7552, inlinedAt: !7385)
!7556 = !DILocation(line: 382, column: 2, scope: !7557, inlinedAt: !7385)
!7557 = distinct !DILexicalBlock(scope: !7558, file: !232, line: 382, column: 2)
!7558 = distinct !DILexicalBlock(scope: !7381, file: !232, line: 382, column: 2)
!7559 = !{i32 -2143340288, i32 -2143340259, i32 -2143340213, i32 -2143340155, i32 -2143340101, i32 -2143340047, i32 -2143339992, i32 -2143339961}
!7560 = !DILocation(line: 382, column: 2, scope: !7561, inlinedAt: !7385)
!7561 = distinct !DILexicalBlock(scope: !7562, file: !232, line: 382, column: 2)
!7562 = distinct !DILexicalBlock(scope: !7558, file: !232, line: 382, column: 2)
!7563 = !{i32 -2143339518, i32 -2143339511, i32 -2143339457, i32 -2143339426, i32 -2143339396}
!7564 = !DILocation(line: 382, column: 2, scope: !7562, inlinedAt: !7385)
!7565 = !DILocation(line: 386, column: 1, scope: !7381, inlinedAt: !7385)
!7566 = !DILocation(line: 567, column: 8, scope: !7567, inlinedAt: !7343)
!7567 = distinct !DILexicalBlock(scope: !7358, file: !232, line: 567, column: 7)
!7568 = !DILocation(line: 567, column: 7, scope: !7358, inlinedAt: !7343)
!7569 = !DILocation(line: 568, column: 4, scope: !7567, inlinedAt: !7343)
!7570 = !DILocation(line: 571, column: 33, scope: !7358, inlinedAt: !7343)
!7571 = !DILocation(line: 325, column: 6, scope: !7572, inlinedAt: !7379)
!7572 = distinct !DILexicalBlock(scope: !7375, file: !232, line: 325, column: 6)
!7573 = !DILocation(line: 325, column: 6, scope: !7375, inlinedAt: !7379)
!7574 = !DILocation(line: 326, column: 3, scope: !7572, inlinedAt: !7379)
!7575 = !DILocation(line: 332, column: 9, scope: !7375, inlinedAt: !7379)
!7576 = !DILocation(line: 332, column: 15, scope: !7375, inlinedAt: !7379)
!7577 = !DILocation(line: 332, column: 2, scope: !7375, inlinedAt: !7379)
!7578 = !DILocation(line: 336, column: 1, scope: !7375, inlinedAt: !7379)
!7579 = !DILocation(line: 571, column: 5, scope: !7358, inlinedAt: !7343)
!7580 = !DILocation(line: 571, column: 41, scope: !7358, inlinedAt: !7343)
!7581 = !DILocation(line: 572, column: 7, scope: !7358, inlinedAt: !7343)
!7582 = !DILocation(line: 572, column: 14, scope: !7358, inlinedAt: !7343)
!7583 = !DILocation(line: 572, column: 20, scope: !7358, inlinedAt: !7343)
!7584 = !DILocation(line: 459, column: 36, scope: !7354, inlinedAt: !7357)
!7585 = !DILocation(line: 459, column: 39, scope: !7354, inlinedAt: !7357)
!7586 = !DILocation(line: 459, column: 49, scope: !7354, inlinedAt: !7357)
!7587 = !DILocation(line: 423, column: 26, scope: !7349, inlinedAt: !7353)
!7588 = !DILocation(line: 423, column: 29, scope: !7349, inlinedAt: !7353)
!7589 = !DILocation(line: 423, column: 9, scope: !7349, inlinedAt: !7353)
!7590 = !DILocation(line: 461, column: 22, scope: !7354, inlinedAt: !7357)
!7591 = !DILocation(line: 461, column: 25, scope: !7354, inlinedAt: !7357)
!7592 = !DILocation(line: 461, column: 30, scope: !7354, inlinedAt: !7357)
!7593 = !DILocation(line: 461, column: 36, scope: !7354, inlinedAt: !7357)
!7594 = !DILocation(line: 461, column: 8, scope: !7354, inlinedAt: !7357)
!7595 = !DILocation(line: 461, column: 6, scope: !7354, inlinedAt: !7357)
!7596 = !DILocation(line: 462, column: 9, scope: !7354, inlinedAt: !7357)
!7597 = !DILocation(line: 570, column: 3, scope: !7358, inlinedAt: !7343)
!7598 = !DILocation(line: 575, column: 24, scope: !7342, inlinedAt: !7343)
!7599 = !DILocation(line: 575, column: 30, scope: !7342, inlinedAt: !7343)
!7600 = !DILocation(line: 575, column: 37, scope: !7342, inlinedAt: !7343)
!7601 = !DILocation(line: 418, column: 19, scope: !7339, inlinedAt: !7341)
!7602 = !DILocation(line: 418, column: 25, scope: !7339, inlinedAt: !7341)
!7603 = !DILocation(line: 418, column: 9, scope: !7339, inlinedAt: !7341)
!7604 = !DILocation(line: 575, column: 2, scope: !7342, inlinedAt: !7343)
!7605 = !DILocation(line: 576, column: 1, scope: !7342, inlinedAt: !7343)
!7606 = !DILocation(line: 675, column: 2, scope: !7335)
!7607 = distinct !DISubprogram(name: "pci_set_drvdata", scope: !5890, file: !5890, line: 1870, type: !7608, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!7608 = !DISubroutineType(types: !7609)
!7609 = !{null, !5888, !890}
!7610 = !DILocalVariable(name: "pdev", arg: 1, scope: !7607, file: !5890, line: 1870, type: !5888)
!7611 = !DILocation(line: 1870, column: 52, scope: !7607)
!7612 = !DILocalVariable(name: "data", arg: 2, scope: !7607, file: !5890, line: 1870, type: !890)
!7613 = !DILocation(line: 1870, column: 64, scope: !7607)
!7614 = !DILocation(line: 1872, column: 19, scope: !7607)
!7615 = !DILocation(line: 1872, column: 25, scope: !7607)
!7616 = !DILocation(line: 1872, column: 30, scope: !7607)
!7617 = !DILocation(line: 1872, column: 2, scope: !7607)
!7618 = !DILocation(line: 1873, column: 1, scope: !7607)
!7619 = distinct !DISubprogram(name: "dma_set_mask_and_coherent", scope: !6402, file: !6402, line: 420, type: !7620, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!7620 = !DISubroutineType(types: !7621)
!7621 = !{!443, !1960, !987}
!7622 = !DILocalVariable(name: "dev", arg: 1, scope: !7619, file: !6402, line: 420, type: !1960)
!7623 = !DILocation(line: 420, column: 60, scope: !7619)
!7624 = !DILocalVariable(name: "mask", arg: 2, scope: !7619, file: !6402, line: 420, type: !987)
!7625 = !DILocation(line: 420, column: 69, scope: !7619)
!7626 = !DILocalVariable(name: "rc", scope: !7619, file: !6402, line: 422, type: !443)
!7627 = !DILocation(line: 422, column: 6, scope: !7619)
!7628 = !DILocation(line: 422, column: 24, scope: !7619)
!7629 = !DILocation(line: 422, column: 29, scope: !7619)
!7630 = !DILocation(line: 422, column: 11, scope: !7619)
!7631 = !DILocation(line: 423, column: 6, scope: !7632)
!7632 = distinct !DILexicalBlock(scope: !7619, file: !6402, line: 423, column: 6)
!7633 = !DILocation(line: 423, column: 9, scope: !7632)
!7634 = !DILocation(line: 423, column: 6, scope: !7619)
!7635 = !DILocation(line: 424, column: 25, scope: !7632)
!7636 = !DILocation(line: 424, column: 30, scope: !7632)
!7637 = !DILocation(line: 424, column: 3, scope: !7632)
!7638 = !DILocation(line: 425, column: 9, scope: !7619)
!7639 = !DILocation(line: 425, column: 2, scope: !7619)
!7640 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !7641, file: !7641, line: 33, type: !7642, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!7641 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!7642 = !DISubroutineType(types: !7643)
!7643 = !{null, !903}
!7644 = !DILocalVariable(name: "list", arg: 1, scope: !7640, file: !7641, line: 33, type: !903)
!7645 = !DILocation(line: 33, column: 53, scope: !7640)
!7646 = !DILocation(line: 35, column: 2, scope: !7640)
!7647 = !DILocation(line: 35, column: 2, scope: !7648)
!7648 = distinct !DILexicalBlock(scope: !7640, file: !7641, line: 35, column: 2)
!7649 = !DILocation(line: 35, column: 2, scope: !7650)
!7650 = distinct !DILexicalBlock(scope: !7648, file: !7641, line: 35, column: 2)
!7651 = !DILocation(line: 35, column: 2, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !7648, file: !7641, line: 35, column: 2)
!7653 = !DILocation(line: 36, column: 15, scope: !7640)
!7654 = !DILocation(line: 36, column: 2, scope: !7640)
!7655 = !DILocation(line: 36, column: 8, scope: !7640)
!7656 = !DILocation(line: 36, column: 13, scope: !7640)
!7657 = !DILocation(line: 37, column: 1, scope: !7640)
!7658 = distinct !DISubprogram(name: "cpumask_empty", scope: !894, file: !894, line: 543, type: !7659, scopeLine: 544, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!7659 = !DISubroutineType(types: !7660)
!7660 = !{!1011, !891}
!7661 = !DILocalVariable(name: "srcp", arg: 1, scope: !7658, file: !894, line: 543, type: !891)
!7662 = !DILocation(line: 543, column: 56, scope: !7658)
!7663 = !DILocation(line: 545, column: 22, scope: !7658)
!7664 = !DILocation(line: 545, column: 9, scope: !7658)
!7665 = !DILocation(line: 545, column: 2, scope: !7658)
!7666 = distinct !DISubprogram(name: "cpumask_weight", scope: !894, file: !894, line: 561, type: !7667, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!7667 = !DISubroutineType(types: !7668)
!7668 = !{!7, !891}
!7669 = !DILocalVariable(name: "w", arg: 1, scope: !7670, file: !7671, line: 43, type: !908)
!7670 = distinct !DISubprogram(name: "__arch_hweight64", scope: !7671, file: !7671, line: 43, type: !7672, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!7671 = !DIFile(filename: "./arch/x86/include/asm/arch_hweight.h", directory: "/home/lizy2001/genbc/linux")
!7672 = !DISubroutineType(types: !7673)
!7673 = !{!898, !908}
!7674 = !DILocation(line: 43, column: 61, scope: !7670, inlinedAt: !7675)
!7675 = distinct !DILocation(line: 75, column: 41, scope: !7676, inlinedAt: !7680)
!7676 = distinct !DISubprogram(name: "hweight_long", scope: !7677, file: !7677, line: 73, type: !7678, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!7677 = !DIFile(filename: "./include/linux/bitops.h", directory: "/home/lizy2001/genbc/linux")
!7678 = !DISubroutineType(types: !7679)
!7679 = !{!898, !898}
!7680 = distinct !DILocation(line: 401, column: 10, scope: !7681, inlinedAt: !7687)
!7681 = distinct !DILexicalBlock(scope: !7683, file: !7682, line: 400, column: 6)
!7682 = !DIFile(filename: "./include/linux/bitmap.h", directory: "/home/lizy2001/genbc/linux")
!7683 = distinct !DISubprogram(name: "bitmap_weight", scope: !7682, file: !7682, line: 398, type: !7684, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!7684 = !DISubroutineType(types: !7685)
!7685 = !{!443, !7686, !7}
!7686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4242, size: 64)
!7687 = distinct !DILocation(line: 563, column: 9, scope: !7666)
!7688 = !DILocalVariable(name: "res", scope: !7670, file: !7671, line: 45, type: !898)
!7689 = !DILocation(line: 45, column: 16, scope: !7670, inlinedAt: !7675)
!7690 = !DILocalVariable(name: "w", arg: 1, scope: !7676, file: !7677, line: 73, type: !898)
!7691 = !DILocation(line: 73, column: 65, scope: !7676, inlinedAt: !7680)
!7692 = !DILocalVariable(name: "src", arg: 1, scope: !7683, file: !7682, line: 398, type: !7686)
!7693 = !DILocation(line: 398, column: 63, scope: !7683, inlinedAt: !7687)
!7694 = !DILocalVariable(name: "nbits", arg: 2, scope: !7683, file: !7682, line: 398, type: !7)
!7695 = !DILocation(line: 398, column: 81, scope: !7683, inlinedAt: !7687)
!7696 = !DILocalVariable(name: "srcp", arg: 1, scope: !7666, file: !894, line: 561, type: !891)
!7697 = !DILocation(line: 561, column: 65, scope: !7666)
!7698 = !DILocation(line: 563, column: 23, scope: !7666)
!7699 = !DILocation(line: 400, column: 6, scope: !7681, inlinedAt: !7687)
!7700 = !DILocation(line: 400, column: 6, scope: !7683, inlinedAt: !7687)
!7701 = !DILocation(line: 401, column: 24, scope: !7681, inlinedAt: !7687)
!7702 = !DILocation(line: 401, column: 23, scope: !7681, inlinedAt: !7687)
!7703 = !DILocation(line: 401, column: 30, scope: !7681, inlinedAt: !7687)
!7704 = !DILocation(line: 401, column: 28, scope: !7681, inlinedAt: !7687)
!7705 = !DILocation(line: 75, column: 41, scope: !7676, inlinedAt: !7680)
!7706 = !DILocation(line: 49, column: 15, scope: !7670, inlinedAt: !7675)
!7707 = !DILocation(line: 47, column: 2, scope: !7670, inlinedAt: !7675)
!7708 = !{i32 -2146607351, i32 -2146607323, i32 -2146607317, i32 -2146607301, i32 -2146607285, i32 -2146607258, i32 -2146606925, i32 -2146607643, i32 -2146606919, i32 -2146606871, i32 -2146606807, i32 -2146606745, i32 -2146606688, i32 -2146606632, i32 -2146607563, i32 -2146607538, i32 -2146606398, i32 -2146606268, i32 -2146606337, i32 -2146606254, i32 -2146607438}
!7709 = !DILocation(line: 51, column: 9, scope: !7670, inlinedAt: !7675)
!7710 = !DILocation(line: 401, column: 10, scope: !7681, inlinedAt: !7687)
!7711 = !DILocation(line: 401, column: 3, scope: !7681, inlinedAt: !7687)
!7712 = !DILocation(line: 402, column: 25, scope: !7683, inlinedAt: !7687)
!7713 = !DILocation(line: 402, column: 30, scope: !7683, inlinedAt: !7687)
!7714 = !DILocation(line: 402, column: 9, scope: !7683, inlinedAt: !7687)
!7715 = !DILocation(line: 402, column: 2, scope: !7683, inlinedAt: !7687)
!7716 = !DILocation(line: 403, column: 1, scope: !7683, inlinedAt: !7687)
!7717 = !DILocation(line: 563, column: 2, scope: !7666)
!7718 = distinct !DISubprogram(name: "get_least_used_cpu_on_node", scope: !3, file: !3, line: 3892, type: !4919, scopeLine: 3893, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!7719 = !DILocalVariable(name: "node", arg: 1, scope: !7718, file: !3, line: 3892, type: !443)
!7720 = !DILocation(line: 3892, column: 43, scope: !7718)
!7721 = !DILocalVariable(name: "cpu", scope: !7718, file: !3, line: 3894, type: !443)
!7722 = !DILocation(line: 3894, column: 6, scope: !7718)
!7723 = !DILocalVariable(name: "least_used_cpu", scope: !7718, file: !3, line: 3894, type: !443)
!7724 = !DILocation(line: 3894, column: 11, scope: !7718)
!7725 = !DILocalVariable(name: "least_cnt", scope: !7718, file: !3, line: 3894, type: !443)
!7726 = !DILocation(line: 3894, column: 27, scope: !7718)
!7727 = !DILocalVariable(name: "node_mask", scope: !7718, file: !3, line: 3895, type: !891)
!7728 = !DILocation(line: 3895, column: 24, scope: !7718)
!7729 = !DILocation(line: 3897, column: 14, scope: !7718)
!7730 = !DILocation(line: 3897, column: 12, scope: !7718)
!7731 = !DILocation(line: 3898, column: 33, scope: !7718)
!7732 = !DILocation(line: 3898, column: 19, scope: !7718)
!7733 = !DILocation(line: 3898, column: 17, scope: !7718)
!7734 = !DILocation(line: 3899, column: 22, scope: !7718)
!7735 = !DILocation(line: 3899, column: 14, scope: !7718)
!7736 = !DILocation(line: 3899, column: 12, scope: !7718)
!7737 = !DILocation(line: 3900, column: 8, scope: !7718)
!7738 = !DILocation(line: 3900, column: 6, scope: !7718)
!7739 = !DILocation(line: 3902, column: 2, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7718, file: !3, line: 3902, column: 2)
!7741 = !DILocation(line: 3902, column: 2, scope: !7742)
!7742 = distinct !DILexicalBlock(scope: !7740, file: !3, line: 3902, column: 2)
!7743 = !DILocation(line: 3903, column: 15, scope: !7744)
!7744 = distinct !DILexicalBlock(scope: !7745, file: !3, line: 3903, column: 7)
!7745 = distinct !DILexicalBlock(scope: !7742, file: !3, line: 3902, column: 31)
!7746 = !DILocation(line: 3903, column: 7, scope: !7744)
!7747 = !DILocation(line: 3903, column: 22, scope: !7744)
!7748 = !DILocation(line: 3903, column: 20, scope: !7744)
!7749 = !DILocation(line: 3903, column: 7, scope: !7745)
!7750 = !DILocation(line: 3904, column: 21, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7744, file: !3, line: 3903, column: 33)
!7752 = !DILocation(line: 3904, column: 19, scope: !7751)
!7753 = !DILocation(line: 3905, column: 24, scope: !7751)
!7754 = !DILocation(line: 3905, column: 16, scope: !7751)
!7755 = !DILocation(line: 3905, column: 14, scope: !7751)
!7756 = !DILocation(line: 3906, column: 3, scope: !7751)
!7757 = !DILocation(line: 3907, column: 2, scope: !7745)
!7758 = distinct !{!7758, !7739, !7759}
!7759 = !DILocation(line: 3907, column: 2, scope: !7740)
!7760 = !DILocation(line: 3908, column: 10, scope: !7718)
!7761 = !DILocation(line: 3908, column: 2, scope: !7718)
!7762 = !DILocation(line: 3908, column: 25, scope: !7718)
!7763 = !DILocation(line: 3909, column: 9, scope: !7718)
!7764 = !DILocation(line: 3909, column: 2, scope: !7718)
!7765 = distinct !DISubprogram(name: "__init_work", scope: !158, file: !158, line: 215, type: !7766, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!7766 = !DISubroutineType(types: !7767)
!7767 = !{null, !934, !443}
!7768 = !DILocalVariable(name: "work", arg: 1, scope: !7765, file: !158, line: 215, type: !934)
!7769 = !DILocation(line: 215, column: 52, scope: !7765)
!7770 = !DILocalVariable(name: "onstack", arg: 2, scope: !7765, file: !158, line: 215, type: !443)
!7771 = !DILocation(line: 215, column: 62, scope: !7765)
!7772 = !DILocation(line: 215, column: 73, scope: !7765)
!7773 = distinct !DISubprogram(name: "mtip_workq_sdbf0", scope: !3, file: !3, line: 3928, type: !932, scopeLine: 3928, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!7774 = !DILocalVariable(name: "work", arg: 1, scope: !7773, file: !3, line: 3928, type: !934)
!7775 = !DILocation(line: 3928, column: 8, scope: !7773)
!7776 = !DILocalVariable(name: "w", scope: !7773, file: !3, line: 3928, type: !911)
!7777 = distinct !DISubprogram(name: "mtip_workq_sdbf1", scope: !3, file: !3, line: 3929, type: !932, scopeLine: 3929, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!7778 = !DILocalVariable(name: "work", arg: 1, scope: !7777, file: !3, line: 3929, type: !934)
!7779 = !DILocation(line: 3929, column: 8, scope: !7777)
!7780 = !DILocalVariable(name: "w", scope: !7777, file: !3, line: 3929, type: !911)
!7781 = distinct !DISubprogram(name: "mtip_workq_sdbf2", scope: !3, file: !3, line: 3930, type: !932, scopeLine: 3930, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!7782 = !DILocalVariable(name: "work", arg: 1, scope: !7781, file: !3, line: 3930, type: !934)
!7783 = !DILocation(line: 3930, column: 8, scope: !7781)
!7784 = !DILocalVariable(name: "w", scope: !7781, file: !3, line: 3930, type: !911)
!7785 = distinct !DISubprogram(name: "mtip_workq_sdbf3", scope: !3, file: !3, line: 3931, type: !932, scopeLine: 3931, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!7786 = !DILocalVariable(name: "work", arg: 1, scope: !7785, file: !3, line: 3931, type: !934)
!7787 = !DILocation(line: 3931, column: 8, scope: !7785)
!7788 = !DILocalVariable(name: "w", scope: !7785, file: !3, line: 3931, type: !911)
!7789 = distinct !DISubprogram(name: "mtip_workq_sdbf4", scope: !3, file: !3, line: 3932, type: !932, scopeLine: 3932, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!7790 = !DILocalVariable(name: "work", arg: 1, scope: !7789, file: !3, line: 3932, type: !934)
!7791 = !DILocation(line: 3932, column: 8, scope: !7789)
!7792 = !DILocalVariable(name: "w", scope: !7789, file: !3, line: 3932, type: !911)
!7793 = distinct !DISubprogram(name: "mtip_workq_sdbf5", scope: !3, file: !3, line: 3933, type: !932, scopeLine: 3933, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!7794 = !DILocalVariable(name: "work", arg: 1, scope: !7793, file: !3, line: 3933, type: !934)
!7795 = !DILocation(line: 3933, column: 8, scope: !7793)
!7796 = !DILocalVariable(name: "w", scope: !7793, file: !3, line: 3933, type: !911)
!7797 = distinct !DISubprogram(name: "mtip_workq_sdbf6", scope: !3, file: !3, line: 3934, type: !932, scopeLine: 3934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!7798 = !DILocalVariable(name: "work", arg: 1, scope: !7797, file: !3, line: 3934, type: !934)
!7799 = !DILocation(line: 3934, column: 8, scope: !7797)
!7800 = !DILocalVariable(name: "w", scope: !7797, file: !3, line: 3934, type: !911)
!7801 = distinct !DISubprogram(name: "mtip_workq_sdbf7", scope: !3, file: !3, line: 3935, type: !932, scopeLine: 3935, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!7802 = !DILocalVariable(name: "work", arg: 1, scope: !7801, file: !3, line: 3935, type: !934)
!7803 = !DILocation(line: 3935, column: 8, scope: !7801)
!7804 = !DILocalVariable(name: "w", scope: !7801, file: !3, line: 3935, type: !911)
!7805 = distinct !DISubprogram(name: "mtip_fix_ero_nosnoop", scope: !3, file: !3, line: 3961, type: !7806, scopeLine: 3962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!7806 = !DISubroutineType(types: !7807)
!7807 = !{null, !945, !5888}
!7808 = !DILocalVariable(name: "dd", arg: 1, scope: !7805, file: !3, line: 3961, type: !945)
!7809 = !DILocation(line: 3961, column: 54, scope: !7805)
!7810 = !DILocalVariable(name: "pdev", arg: 2, scope: !7805, file: !3, line: 3961, type: !5888)
!7811 = !DILocation(line: 3961, column: 74, scope: !7805)
!7812 = !DILocation(line: 3967, column: 6, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !7805, file: !3, line: 3967, column: 6)
!7814 = !DILocation(line: 3967, column: 12, scope: !7813)
!7815 = !DILocation(line: 3967, column: 16, scope: !7813)
!7816 = !DILocation(line: 3967, column: 19, scope: !7813)
!7817 = !DILocation(line: 3967, column: 25, scope: !7813)
!7818 = !DILocation(line: 3967, column: 30, scope: !7813)
!7819 = !DILocation(line: 3967, column: 6, scope: !7805)
!7820 = !DILocation(line: 3968, column: 7, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7822, file: !3, line: 3968, column: 7)
!7822 = distinct !DILexicalBlock(scope: !7813, file: !3, line: 3967, column: 36)
!7823 = !DILocation(line: 3968, column: 13, scope: !7821)
!7824 = !DILocation(line: 3968, column: 18, scope: !7821)
!7825 = !DILocation(line: 3968, column: 24, scope: !7821)
!7826 = !DILocation(line: 3968, column: 31, scope: !7821)
!7827 = !DILocation(line: 3968, column: 52, scope: !7821)
!7828 = !DILocation(line: 3969, column: 9, scope: !7821)
!7829 = !DILocation(line: 3969, column: 15, scope: !7821)
!7830 = !DILocation(line: 3969, column: 20, scope: !7821)
!7831 = !DILocation(line: 3969, column: 26, scope: !7821)
!7832 = !DILocation(line: 3969, column: 33, scope: !7821)
!7833 = !DILocation(line: 3969, column: 43, scope: !7821)
!7834 = !DILocation(line: 3968, column: 7, scope: !7822)
!7835 = !DILocation(line: 3970, column: 27, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7821, file: !3, line: 3969, column: 55)
!7837 = !DILocation(line: 3970, column: 31, scope: !7836)
!7838 = !DILocation(line: 3970, column: 37, scope: !7836)
!7839 = !DILocation(line: 3970, column: 42, scope: !7836)
!7840 = !DILocation(line: 3970, column: 4, scope: !7836)
!7841 = !DILocation(line: 3971, column: 3, scope: !7836)
!7842 = !DILocalVariable(name: "parent_dev", scope: !7843, file: !3, line: 3973, type: !5888)
!7843 = distinct !DILexicalBlock(scope: !7821, file: !3, line: 3971, column: 10)
!7844 = !DILocation(line: 3973, column: 20, scope: !7843)
!7845 = !DILocation(line: 3973, column: 33, scope: !7843)
!7846 = !DILocation(line: 3973, column: 39, scope: !7843)
!7847 = !DILocation(line: 3973, column: 44, scope: !7843)
!7848 = !DILocation(line: 3974, column: 8, scope: !7849)
!7849 = distinct !DILexicalBlock(scope: !7843, file: !3, line: 3974, column: 8)
!7850 = !DILocation(line: 3974, column: 20, scope: !7849)
!7851 = !DILocation(line: 3974, column: 24, scope: !7849)
!7852 = !DILocation(line: 3975, column: 5, scope: !7849)
!7853 = !DILocation(line: 3975, column: 17, scope: !7849)
!7854 = !DILocation(line: 3975, column: 22, scope: !7849)
!7855 = !DILocation(line: 3975, column: 29, scope: !7849)
!7856 = !DILocation(line: 3976, column: 5, scope: !7849)
!7857 = !DILocation(line: 3976, column: 17, scope: !7849)
!7858 = !DILocation(line: 3976, column: 22, scope: !7849)
!7859 = !DILocation(line: 3976, column: 30, scope: !7849)
!7860 = !DILocation(line: 3976, column: 35, scope: !7849)
!7861 = !DILocation(line: 3977, column: 5, scope: !7849)
!7862 = !DILocation(line: 3977, column: 17, scope: !7849)
!7863 = !DILocation(line: 3977, column: 22, scope: !7849)
!7864 = !DILocation(line: 3977, column: 30, scope: !7849)
!7865 = !DILocation(line: 3977, column: 36, scope: !7849)
!7866 = !DILocation(line: 3977, column: 43, scope: !7849)
!7867 = !DILocation(line: 3978, column: 25, scope: !7849)
!7868 = !DILocation(line: 3979, column: 6, scope: !7849)
!7869 = !DILocation(line: 3979, column: 18, scope: !7849)
!7870 = !DILocation(line: 3979, column: 23, scope: !7849)
!7871 = !DILocation(line: 3979, column: 31, scope: !7849)
!7872 = !DILocation(line: 3979, column: 37, scope: !7849)
!7873 = !DILocation(line: 3979, column: 44, scope: !7849)
!7874 = !DILocation(line: 3980, column: 14, scope: !7849)
!7875 = !DILocation(line: 3974, column: 8, scope: !7843)
!7876 = !DILocation(line: 3981, column: 28, scope: !7877)
!7877 = distinct !DILexicalBlock(scope: !7849, file: !3, line: 3980, column: 25)
!7878 = !DILocation(line: 3982, column: 6, scope: !7877)
!7879 = !DILocation(line: 3982, column: 18, scope: !7877)
!7880 = !DILocation(line: 3982, column: 23, scope: !7877)
!7881 = !DILocation(line: 3982, column: 31, scope: !7877)
!7882 = !DILocation(line: 3981, column: 5, scope: !7877)
!7883 = !DILocation(line: 3983, column: 4, scope: !7877)
!7884 = !DILocation(line: 3985, column: 2, scope: !7822)
!7885 = !DILocation(line: 3986, column: 1, scope: !7805)
!7886 = !DILocalVariable(name: "dd", arg: 1, scope: !6386, file: !3, line: 3577, type: !945)
!7887 = !DILocation(line: 3577, column: 54, scope: !6386)
!7888 = !DILocalVariable(name: "rv", scope: !6386, file: !3, line: 3579, type: !443)
!7889 = !DILocation(line: 3579, column: 6, scope: !6386)
!7890 = !DILocalVariable(name: "wait_for_rebuild", scope: !6386, file: !3, line: 3579, type: !443)
!7891 = !DILocation(line: 3579, column: 14, scope: !6386)
!7892 = !DILocalVariable(name: "capacity", scope: !6386, file: !3, line: 3580, type: !986)
!7893 = !DILocation(line: 3580, column: 11, scope: !6386)
!7894 = !DILocalVariable(name: "index", scope: !6386, file: !3, line: 3581, type: !7)
!7895 = !DILocation(line: 3581, column: 15, scope: !6386)
!7896 = !DILocalVariable(name: "kobj", scope: !6386, file: !3, line: 3582, type: !1028)
!7897 = !DILocation(line: 3582, column: 18, scope: !6386)
!7898 = !DILocation(line: 3584, column: 6, scope: !7899)
!7899 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 3584, column: 6)
!7900 = !DILocation(line: 3584, column: 10, scope: !7899)
!7901 = !DILocation(line: 3584, column: 6, scope: !6386)
!7902 = !DILocation(line: 3585, column: 3, scope: !7899)
!7903 = !DILocation(line: 3587, column: 19, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 3587, column: 6)
!7905 = !DILocation(line: 3587, column: 6, scope: !7904)
!7906 = !DILocation(line: 3587, column: 6, scope: !6386)
!7907 = !DILocation(line: 3588, column: 6, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7904, file: !3, line: 3587, column: 24)
!7909 = !DILocation(line: 3589, column: 3, scope: !7908)
!7910 = !DILocalVariable(name: "__name", scope: !7911, file: !3, line: 3592, type: !1024)
!7911 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 3592, column: 13)
!7912 = !DILocation(line: 3592, column: 13, scope: !7911)
!7913 = !DILocalVariable(name: "__disk", scope: !7911, file: !3, line: 3592, type: !952)
!7914 = !DILocation(line: 3592, column: 13, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !7911, file: !3, line: 3592, column: 13)
!7916 = !DILocation(line: 3592, column: 13, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !7915, file: !3, line: 3592, column: 13)
!7918 = !DILocation(line: 3592, column: 2, scope: !6386)
!7919 = !DILocation(line: 3592, column: 6, scope: !6386)
!7920 = !DILocation(line: 3592, column: 11, scope: !6386)
!7921 = !DILocation(line: 3593, column: 6, scope: !7922)
!7922 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 3593, column: 6)
!7923 = !DILocation(line: 3593, column: 10, scope: !7922)
!7924 = !DILocation(line: 3593, column: 16, scope: !7922)
!7925 = !DILocation(line: 3593, column: 6, scope: !6386)
!7926 = !DILocation(line: 3594, column: 3, scope: !7927)
!7927 = distinct !DILexicalBlock(scope: !7922, file: !3, line: 3593, column: 25)
!7928 = !DILocation(line: 3596, column: 6, scope: !7927)
!7929 = !DILocation(line: 3597, column: 3, scope: !7927)
!7930 = !DILocation(line: 3600, column: 7, scope: !6386)
!7931 = !DILocation(line: 3600, column: 5, scope: !6386)
!7932 = !DILocation(line: 3601, column: 6, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 3601, column: 6)
!7934 = !DILocation(line: 3601, column: 9, scope: !7933)
!7935 = !DILocation(line: 3601, column: 6, scope: !6386)
!7936 = !DILocation(line: 3602, column: 3, scope: !7933)
!7937 = !DILocation(line: 3603, column: 10, scope: !6386)
!7938 = !DILocation(line: 3603, column: 8, scope: !6386)
!7939 = !DILocation(line: 3606, column: 5, scope: !6386)
!7940 = !DILocation(line: 3607, column: 5, scope: !6386)
!7941 = !DILocation(line: 3607, column: 9, scope: !6386)
!7942 = !DILocation(line: 3607, column: 15, scope: !6386)
!7943 = !DILocation(line: 3605, column: 7, scope: !6386)
!7944 = !DILocation(line: 3605, column: 5, scope: !6386)
!7945 = !DILocation(line: 3609, column: 6, scope: !7946)
!7946 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 3609, column: 6)
!7947 = !DILocation(line: 3609, column: 6, scope: !6386)
!7948 = !DILocation(line: 3610, column: 3, scope: !7946)
!7949 = !DILocation(line: 3612, column: 21, scope: !6386)
!7950 = !DILocation(line: 3612, column: 25, scope: !6386)
!7951 = !DILocation(line: 3612, column: 2, scope: !6386)
!7952 = !DILocation(line: 3612, column: 6, scope: !6386)
!7953 = !DILocation(line: 3612, column: 12, scope: !6386)
!7954 = !DILocation(line: 3612, column: 19, scope: !6386)
!7955 = !DILocation(line: 3613, column: 26, scope: !6386)
!7956 = !DILocation(line: 3613, column: 32, scope: !6386)
!7957 = !DILocation(line: 3613, column: 2, scope: !6386)
!7958 = !DILocation(line: 3613, column: 6, scope: !6386)
!7959 = !DILocation(line: 3613, column: 12, scope: !6386)
!7960 = !DILocation(line: 3613, column: 24, scope: !6386)
!7961 = !DILocation(line: 3614, column: 2, scope: !6386)
!7962 = !DILocation(line: 3614, column: 6, scope: !6386)
!7963 = !DILocation(line: 3614, column: 12, scope: !6386)
!7964 = !DILocation(line: 3614, column: 20, scope: !6386)
!7965 = !DILocation(line: 3615, column: 2, scope: !6386)
!7966 = !DILocation(line: 3615, column: 6, scope: !6386)
!7967 = !DILocation(line: 3615, column: 12, scope: !6386)
!7968 = !DILocation(line: 3615, column: 18, scope: !6386)
!7969 = !DILocation(line: 3616, column: 27, scope: !6386)
!7970 = !DILocation(line: 3616, column: 2, scope: !6386)
!7971 = !DILocation(line: 3616, column: 6, scope: !6386)
!7972 = !DILocation(line: 3616, column: 12, scope: !6386)
!7973 = !DILocation(line: 3616, column: 25, scope: !6386)
!7974 = !DILocation(line: 3617, column: 15, scope: !6386)
!7975 = !DILocation(line: 3617, column: 2, scope: !6386)
!7976 = !DILocation(line: 3617, column: 6, scope: !6386)
!7977 = !DILocation(line: 3617, column: 13, scope: !6386)
!7978 = !DILocation(line: 3619, column: 23, scope: !6386)
!7979 = !DILocation(line: 3619, column: 2, scope: !6386)
!7980 = !DILocation(line: 3621, column: 10, scope: !6386)
!7981 = !DILocation(line: 3621, column: 14, scope: !6386)
!7982 = !DILocation(line: 3621, column: 2, scope: !6386)
!7983 = !DILocation(line: 3622, column: 2, scope: !6386)
!7984 = !DILocation(line: 3622, column: 6, scope: !6386)
!7985 = !DILocation(line: 3622, column: 11, scope: !6386)
!7986 = !DILocation(line: 3622, column: 15, scope: !6386)
!7987 = !DILocation(line: 3623, column: 2, scope: !6386)
!7988 = !DILocation(line: 3623, column: 6, scope: !6386)
!7989 = !DILocation(line: 3623, column: 11, scope: !6386)
!7990 = !DILocation(line: 3623, column: 24, scope: !6386)
!7991 = !DILocation(line: 3624, column: 2, scope: !6386)
!7992 = !DILocation(line: 3624, column: 6, scope: !6386)
!7993 = !DILocation(line: 3624, column: 11, scope: !6386)
!7994 = !DILocation(line: 3624, column: 23, scope: !6386)
!7995 = !DILocation(line: 3625, column: 2, scope: !6386)
!7996 = !DILocation(line: 3625, column: 6, scope: !6386)
!7997 = !DILocation(line: 3625, column: 11, scope: !6386)
!7998 = !DILocation(line: 3625, column: 25, scope: !6386)
!7999 = !DILocation(line: 3626, column: 2, scope: !6386)
!8000 = !DILocation(line: 3626, column: 6, scope: !6386)
!8001 = !DILocation(line: 3626, column: 11, scope: !6386)
!8002 = !DILocation(line: 3626, column: 20, scope: !6386)
!8003 = !DILocation(line: 3627, column: 23, scope: !6386)
!8004 = !DILocation(line: 3627, column: 27, scope: !6386)
!8005 = !DILocation(line: 3627, column: 2, scope: !6386)
!8006 = !DILocation(line: 3627, column: 6, scope: !6386)
!8007 = !DILocation(line: 3627, column: 11, scope: !6386)
!8008 = !DILocation(line: 3627, column: 21, scope: !6386)
!8009 = !DILocation(line: 3628, column: 2, scope: !6386)
!8010 = !DILocation(line: 3628, column: 6, scope: !6386)
!8011 = !DILocation(line: 3628, column: 11, scope: !6386)
!8012 = !DILocation(line: 3628, column: 17, scope: !6386)
!8013 = !DILocation(line: 3629, column: 25, scope: !6386)
!8014 = !DILocation(line: 3629, column: 2, scope: !6386)
!8015 = !DILocation(line: 3629, column: 6, scope: !6386)
!8016 = !DILocation(line: 3629, column: 11, scope: !6386)
!8017 = !DILocation(line: 3629, column: 23, scope: !6386)
!8018 = !DILocation(line: 3630, column: 2, scope: !6386)
!8019 = !DILocation(line: 3630, column: 6, scope: !6386)
!8020 = !DILocation(line: 3630, column: 11, scope: !6386)
!8021 = !DILocation(line: 3630, column: 19, scope: !6386)
!8022 = !DILocation(line: 3632, column: 29, scope: !6386)
!8023 = !DILocation(line: 3632, column: 33, scope: !6386)
!8024 = !DILocation(line: 3632, column: 7, scope: !6386)
!8025 = !DILocation(line: 3632, column: 5, scope: !6386)
!8026 = !DILocation(line: 3633, column: 6, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 3633, column: 6)
!8028 = !DILocation(line: 3633, column: 6, scope: !6386)
!8029 = !DILocation(line: 3634, column: 3, scope: !8030)
!8030 = distinct !DILexicalBlock(scope: !8027, file: !3, line: 3633, column: 10)
!8031 = !DILocation(line: 3636, column: 3, scope: !8030)
!8032 = !DILocation(line: 3640, column: 33, scope: !6386)
!8033 = !DILocation(line: 3640, column: 37, scope: !6386)
!8034 = !DILocation(line: 3640, column: 14, scope: !6386)
!8035 = !DILocation(line: 3640, column: 2, scope: !6386)
!8036 = !DILocation(line: 3640, column: 6, scope: !6386)
!8037 = !DILocation(line: 3640, column: 12, scope: !6386)
!8038 = !DILocation(line: 3641, column: 13, scope: !8039)
!8039 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 3641, column: 6)
!8040 = !DILocation(line: 3641, column: 17, scope: !8039)
!8041 = !DILocation(line: 3641, column: 6, scope: !8039)
!8042 = !DILocation(line: 3641, column: 6, scope: !6386)
!8043 = !DILocation(line: 3642, column: 3, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !8039, file: !3, line: 3641, column: 25)
!8045 = !DILocation(line: 3644, column: 6, scope: !8044)
!8046 = !DILocation(line: 3645, column: 3, scope: !8044)
!8047 = !DILocation(line: 3648, column: 21, scope: !6386)
!8048 = !DILocation(line: 3648, column: 25, scope: !6386)
!8049 = !DILocation(line: 3648, column: 2, scope: !6386)
!8050 = !DILocation(line: 3648, column: 6, scope: !6386)
!8051 = !DILocation(line: 3648, column: 12, scope: !6386)
!8052 = !DILocation(line: 3648, column: 19, scope: !6386)
!8053 = !DILocation(line: 3649, column: 25, scope: !6386)
!8054 = !DILocation(line: 3649, column: 2, scope: !6386)
!8055 = !DILocation(line: 3649, column: 6, scope: !6386)
!8056 = !DILocation(line: 3649, column: 13, scope: !6386)
!8057 = !DILocation(line: 3649, column: 23, scope: !6386)
!8058 = !DILabel(scope: !6386, name: "skip_create_disk", file: !3, line: 3651)
!8059 = !DILocation(line: 3651, column: 1, scope: !6386)
!8060 = !DILocation(line: 3653, column: 42, scope: !6386)
!8061 = !DILocation(line: 3653, column: 21, scope: !6386)
!8062 = !DILocation(line: 3653, column: 19, scope: !6386)
!8063 = !DILocation(line: 3654, column: 6, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 3654, column: 6)
!8065 = !DILocation(line: 3654, column: 23, scope: !8064)
!8066 = !DILocation(line: 3654, column: 6, scope: !6386)
!8067 = !DILocation(line: 3655, column: 3, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !8064, file: !3, line: 3654, column: 28)
!8069 = !DILocation(line: 3657, column: 6, scope: !8068)
!8070 = !DILocation(line: 3658, column: 3, scope: !8068)
!8071 = !DILocation(line: 3665, column: 6, scope: !8072)
!8072 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 3665, column: 6)
!8073 = !DILocation(line: 3665, column: 23, scope: !8072)
!8074 = !DILocation(line: 3665, column: 6, scope: !6386)
!8075 = !DILocation(line: 3666, column: 3, scope: !8072)
!8076 = !DILocation(line: 3669, column: 40, scope: !6386)
!8077 = !DILocation(line: 3669, column: 44, scope: !6386)
!8078 = !DILocation(line: 3669, column: 2, scope: !6386)
!8079 = !DILocation(line: 3670, column: 46, scope: !6386)
!8080 = !DILocation(line: 3670, column: 50, scope: !6386)
!8081 = !DILocation(line: 3670, column: 2, scope: !6386)
!8082 = !DILocation(line: 3671, column: 25, scope: !6386)
!8083 = !DILocation(line: 3671, column: 29, scope: !6386)
!8084 = !DILocation(line: 3671, column: 2, scope: !6386)
!8085 = !DILocation(line: 3672, column: 32, scope: !6386)
!8086 = !DILocation(line: 3672, column: 36, scope: !6386)
!8087 = !DILocation(line: 3672, column: 2, scope: !6386)
!8088 = !DILocation(line: 3673, column: 27, scope: !6386)
!8089 = !DILocation(line: 3673, column: 31, scope: !6386)
!8090 = !DILocation(line: 3673, column: 2, scope: !6386)
!8091 = !DILocation(line: 3674, column: 29, scope: !6386)
!8092 = !DILocation(line: 3674, column: 33, scope: !6386)
!8093 = !DILocation(line: 3674, column: 2, scope: !6386)
!8094 = !DILocation(line: 3675, column: 24, scope: !6386)
!8095 = !DILocation(line: 3675, column: 28, scope: !6386)
!8096 = !DILocation(line: 3675, column: 34, scope: !6386)
!8097 = !DILocation(line: 3675, column: 2, scope: !6386)
!8098 = !DILocation(line: 3676, column: 19, scope: !6386)
!8099 = !DILocation(line: 3676, column: 23, scope: !6386)
!8100 = !DILocation(line: 3676, column: 2, scope: !6386)
!8101 = !DILocation(line: 3679, column: 29, scope: !8102)
!8102 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 3679, column: 6)
!8103 = !DILocation(line: 3679, column: 8, scope: !8102)
!8104 = !DILocation(line: 3679, column: 6, scope: !6386)
!8105 = !DILocation(line: 3680, column: 3, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !8102, file: !3, line: 3679, column: 46)
!8107 = !DILocation(line: 3682, column: 6, scope: !8106)
!8108 = !DILocation(line: 3683, column: 3, scope: !8106)
!8109 = !DILocation(line: 3685, column: 15, scope: !6386)
!8110 = !DILocation(line: 3685, column: 19, scope: !6386)
!8111 = !DILocation(line: 3685, column: 25, scope: !6386)
!8112 = !DILocation(line: 3685, column: 2, scope: !6386)
!8113 = !DILocation(line: 3688, column: 19, scope: !6386)
!8114 = !DILocation(line: 3688, column: 23, scope: !6386)
!8115 = !DILocation(line: 3688, column: 29, scope: !6386)
!8116 = !DILocation(line: 3688, column: 34, scope: !6386)
!8117 = !DILocation(line: 3688, column: 38, scope: !6386)
!8118 = !DILocation(line: 3688, column: 2, scope: !6386)
!8119 = !DILocation(line: 3690, column: 24, scope: !6386)
!8120 = !DILocation(line: 3690, column: 28, scope: !6386)
!8121 = !DILocation(line: 3690, column: 13, scope: !6386)
!8122 = !DILocation(line: 3690, column: 2, scope: !6386)
!8123 = !DILocation(line: 3690, column: 6, scope: !6386)
!8124 = !DILocation(line: 3690, column: 11, scope: !6386)
!8125 = !DILocation(line: 3695, column: 22, scope: !6386)
!8126 = !DILocation(line: 3695, column: 45, scope: !6386)
!8127 = !DILocation(line: 3695, column: 9, scope: !6386)
!8128 = !DILocation(line: 3695, column: 7, scope: !6386)
!8129 = !DILocation(line: 3696, column: 6, scope: !8130)
!8130 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 3696, column: 6)
!8131 = !DILocation(line: 3696, column: 6, scope: !6386)
!8132 = !DILocation(line: 3697, column: 22, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !8130, file: !3, line: 3696, column: 12)
!8134 = !DILocation(line: 3697, column: 26, scope: !8133)
!8135 = !DILocation(line: 3697, column: 3, scope: !8133)
!8136 = !DILocation(line: 3698, column: 15, scope: !8133)
!8137 = !DILocation(line: 3698, column: 3, scope: !8133)
!8138 = !DILocation(line: 3699, column: 2, scope: !8133)
!8139 = !DILocation(line: 3701, column: 6, scope: !8140)
!8140 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 3701, column: 6)
!8141 = !DILocation(line: 3701, column: 10, scope: !8140)
!8142 = !DILocation(line: 3701, column: 6, scope: !6386)
!8143 = !DILocation(line: 3702, column: 36, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8140, file: !3, line: 3701, column: 28)
!8145 = !DILocation(line: 3702, column: 40, scope: !8144)
!8146 = !DILocation(line: 3702, column: 3, scope: !8144)
!8147 = !DILocation(line: 3703, column: 10, scope: !8144)
!8148 = !DILocation(line: 3703, column: 3, scope: !8144)
!8149 = !DILabel(scope: !6386, name: "start_service_thread", file: !3, line: 3706)
!8150 = !DILocation(line: 3706, column: 1, scope: !6386)
!8151 = !DILocation(line: 3708, column: 7, scope: !6386)
!8152 = !DILocation(line: 3708, column: 11, scope: !6386)
!8153 = !DILocation(line: 3708, column: 15, scope: !6386)
!8154 = !DILocation(line: 3709, column: 28, scope: !6386)
!8155 = !DILocation(line: 3707, column: 25, scope: !6386)
!8156 = !DILocation(line: 3707, column: 2, scope: !6386)
!8157 = !DILocation(line: 3707, column: 6, scope: !6386)
!8158 = !DILocation(line: 3707, column: 23, scope: !6386)
!8159 = !DILocation(line: 3711, column: 13, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 3711, column: 6)
!8161 = !DILocation(line: 3711, column: 17, scope: !8160)
!8162 = !DILocation(line: 3711, column: 6, scope: !8160)
!8163 = !DILocation(line: 3711, column: 6, scope: !6386)
!8164 = !DILocation(line: 3712, column: 3, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8160, file: !3, line: 3711, column: 36)
!8166 = !DILocation(line: 3713, column: 3, scope: !8165)
!8167 = !DILocation(line: 3713, column: 7, scope: !8165)
!8168 = !DILocation(line: 3713, column: 24, scope: !8165)
!8169 = !DILocation(line: 3714, column: 6, scope: !8165)
!8170 = !DILocation(line: 3715, column: 3, scope: !8165)
!8171 = !DILocation(line: 3717, column: 18, scope: !6386)
!8172 = !DILocation(line: 3717, column: 22, scope: !6386)
!8173 = !DILocation(line: 3717, column: 2, scope: !6386)
!8174 = !DILocation(line: 3718, column: 6, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 3718, column: 6)
!8176 = !DILocation(line: 3718, column: 23, scope: !8175)
!8177 = !DILocation(line: 3718, column: 6, scope: !6386)
!8178 = !DILocation(line: 3719, column: 8, scope: !8175)
!8179 = !DILocation(line: 3719, column: 6, scope: !8175)
!8180 = !DILocation(line: 3719, column: 3, scope: !8175)
!8181 = !DILocation(line: 3721, column: 9, scope: !6386)
!8182 = !DILocation(line: 3721, column: 2, scope: !6386)
!8183 = !DILabel(scope: !6386, name: "kthread_run_error", file: !3, line: 3723)
!8184 = !DILocation(line: 3723, column: 1, scope: !6386)
!8185 = !DILocation(line: 3724, column: 8, scope: !6386)
!8186 = !DILocation(line: 3724, column: 12, scope: !6386)
!8187 = !DILocation(line: 3724, column: 2, scope: !6386)
!8188 = !DILocation(line: 3725, column: 2, scope: !6386)
!8189 = !DILocation(line: 3725, column: 6, scope: !6386)
!8190 = !DILocation(line: 3725, column: 11, scope: !6386)
!8191 = !DILocation(line: 3728, column: 14, scope: !6386)
!8192 = !DILocation(line: 3728, column: 18, scope: !6386)
!8193 = !DILocation(line: 3728, column: 2, scope: !6386)
!8194 = !DILabel(scope: !6386, name: "read_capacity_error", file: !3, line: 3730)
!8195 = !DILocation(line: 3730, column: 1, scope: !6386)
!8196 = !DILabel(scope: !6386, name: "init_hw_cmds_error", file: !3, line: 3731)
!8197 = !DILocation(line: 3731, column: 1, scope: !6386)
!8198 = !DILocation(line: 3732, column: 20, scope: !6386)
!8199 = !DILocation(line: 3732, column: 24, scope: !6386)
!8200 = !DILocation(line: 3732, column: 2, scope: !6386)
!8201 = !DILabel(scope: !6386, name: "block_queue_alloc_init_error", file: !3, line: 3733)
!8202 = !DILocation(line: 3733, column: 1, scope: !6386)
!8203 = !DILocation(line: 3734, column: 23, scope: !6386)
!8204 = !DILocation(line: 3734, column: 27, scope: !6386)
!8205 = !DILocation(line: 3734, column: 2, scope: !6386)
!8206 = !DILabel(scope: !6386, name: "block_queue_alloc_tag_error", file: !3, line: 3735)
!8207 = !DILocation(line: 3735, column: 1, scope: !6386)
!8208 = !DILocation(line: 3736, column: 23, scope: !6386)
!8209 = !DILocation(line: 3736, column: 2, scope: !6386)
!8210 = !DILabel(scope: !6386, name: "disk_index_error", file: !3, line: 3737)
!8211 = !DILocation(line: 3737, column: 1, scope: !6386)
!8212 = !DILocation(line: 3738, column: 28, scope: !6386)
!8213 = !DILocation(line: 3738, column: 2, scope: !6386)
!8214 = !DILabel(scope: !6386, name: "ida_get_error", file: !3, line: 3740)
!8215 = !DILocation(line: 3740, column: 1, scope: !6386)
!8216 = !DILocation(line: 3741, column: 11, scope: !6386)
!8217 = !DILocation(line: 3741, column: 15, scope: !6386)
!8218 = !DILocation(line: 3741, column: 2, scope: !6386)
!8219 = !DILabel(scope: !6386, name: "alloc_disk_error", file: !3, line: 3743)
!8220 = !DILocation(line: 3743, column: 1, scope: !6386)
!8221 = !DILocation(line: 3744, column: 15, scope: !6386)
!8222 = !DILocation(line: 3744, column: 2, scope: !6386)
!8223 = !DILabel(scope: !6386, name: "protocol_init_error", file: !3, line: 3746)
!8224 = !DILocation(line: 3746, column: 1, scope: !6386)
!8225 = !DILocation(line: 3747, column: 9, scope: !6386)
!8226 = !DILocation(line: 3747, column: 2, scope: !6386)
!8227 = !DILocation(line: 3748, column: 1, scope: !6386)
!8228 = distinct !DISubprogram(name: "set_bit", scope: !8229, file: !8229, line: 26, type: !8230, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!8229 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!8230 = !DISubroutineType(types: !8231)
!8231 = !{null, !175, !8232}
!8232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8233, size: 64)
!8233 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !898)
!8234 = !DILocalVariable(name: "nr", arg: 1, scope: !8235, file: !8236, line: 52, type: !175)
!8235 = distinct !DISubprogram(name: "arch_set_bit", scope: !8236, file: !8236, line: 52, type: !8230, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!8236 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!8237 = !DILocation(line: 52, column: 19, scope: !8235, inlinedAt: !8238)
!8238 = distinct !DILocation(line: 29, column: 2, scope: !8228)
!8239 = !DILocalVariable(name: "addr", arg: 2, scope: !8235, file: !8236, line: 52, type: !8232)
!8240 = !DILocation(line: 52, column: 47, scope: !8235, inlinedAt: !8238)
!8241 = !DILocalVariable(name: "v", arg: 1, scope: !8242, file: !6981, line: 84, type: !6984)
!8242 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !6981, file: !6981, line: 84, type: !6982, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!8243 = !DILocation(line: 84, column: 74, scope: !8242, inlinedAt: !8244)
!8244 = distinct !DILocation(line: 28, column: 2, scope: !8228)
!8245 = !DILocalVariable(name: "size", arg: 2, scope: !8242, file: !6981, line: 84, type: !1121)
!8246 = !DILocation(line: 84, column: 84, scope: !8242, inlinedAt: !8244)
!8247 = !DILocalVariable(name: "nr", arg: 1, scope: !8228, file: !8229, line: 26, type: !175)
!8248 = !DILocation(line: 26, column: 33, scope: !8228)
!8249 = !DILocalVariable(name: "addr", arg: 2, scope: !8228, file: !8229, line: 26, type: !8232)
!8250 = !DILocation(line: 26, column: 61, scope: !8228)
!8251 = !DILocation(line: 28, column: 26, scope: !8228)
!8252 = !DILocation(line: 28, column: 33, scope: !8228)
!8253 = !DILocation(line: 28, column: 31, scope: !8228)
!8254 = !DILocation(line: 86, column: 20, scope: !8242, inlinedAt: !8244)
!8255 = !DILocation(line: 86, column: 23, scope: !8242, inlinedAt: !8244)
!8256 = !DILocation(line: 86, column: 2, scope: !8242, inlinedAt: !8244)
!8257 = !DILocation(line: 87, column: 2, scope: !8242, inlinedAt: !8244)
!8258 = !DILocation(line: 29, column: 15, scope: !8228)
!8259 = !DILocation(line: 29, column: 19, scope: !8228)
!8260 = !DILocation(line: 54, column: 27, scope: !8261, inlinedAt: !8238)
!8261 = distinct !DILexicalBlock(scope: !8235, file: !8236, line: 54, column: 6)
!8262 = !DILocation(line: 54, column: 6, scope: !8261, inlinedAt: !8238)
!8263 = !DILocation(line: 54, column: 6, scope: !8235, inlinedAt: !8238)
!8264 = !DILocation(line: 56, column: 6, scope: !8265, inlinedAt: !8238)
!8265 = distinct !DILexicalBlock(scope: !8261, file: !8236, line: 54, column: 32)
!8266 = !DILocation(line: 57, column: 12, scope: !8265, inlinedAt: !8238)
!8267 = !DILocation(line: 55, column: 3, scope: !8265, inlinedAt: !8238)
!8268 = !{i32 -2146625756}
!8269 = !DILocation(line: 59, column: 2, scope: !8265, inlinedAt: !8238)
!8270 = !DILocation(line: 61, column: 8, scope: !8271, inlinedAt: !8238)
!8271 = distinct !DILexicalBlock(scope: !8261, file: !8236, line: 59, column: 9)
!8272 = !DILocation(line: 61, column: 32, scope: !8271, inlinedAt: !8238)
!8273 = !DILocation(line: 60, column: 3, scope: !8271, inlinedAt: !8238)
!8274 = !{i32 -2146625624}
!8275 = !DILocation(line: 30, column: 1, scope: !8228)
!8276 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !8277, file: !8277, line: 666, type: !8278, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!8277 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!8278 = !DISubroutineType(types: !8279)
!8279 = !{!898}
!8280 = !DILocalVariable(name: "f", scope: !8276, file: !8277, line: 668, type: !898)
!8281 = !DILocation(line: 668, column: 16, scope: !8276)
!8282 = !DILocation(line: 670, column: 6, scope: !8276)
!8283 = !DILocation(line: 670, column: 4, scope: !8276)
!8284 = !DILocation(line: 671, column: 2, scope: !8276)
!8285 = !DILocation(line: 672, column: 9, scope: !8276)
!8286 = !DILocation(line: 672, column: 2, scope: !8276)
!8287 = distinct !DISubprogram(name: "list_add", scope: !7641, file: !7641, line: 84, type: !8288, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!8288 = !DISubroutineType(types: !8289)
!8289 = !{null, !903, !903}
!8290 = !DILocalVariable(name: "new", arg: 1, scope: !8287, file: !7641, line: 84, type: !903)
!8291 = !DILocation(line: 84, column: 47, scope: !8287)
!8292 = !DILocalVariable(name: "head", arg: 2, scope: !8287, file: !7641, line: 84, type: !903)
!8293 = !DILocation(line: 84, column: 70, scope: !8287)
!8294 = !DILocation(line: 86, column: 13, scope: !8287)
!8295 = !DILocation(line: 86, column: 18, scope: !8287)
!8296 = !DILocation(line: 86, column: 24, scope: !8287)
!8297 = !DILocation(line: 86, column: 30, scope: !8287)
!8298 = !DILocation(line: 86, column: 2, scope: !8287)
!8299 = !DILocation(line: 87, column: 1, scope: !8287)
!8300 = distinct !DISubprogram(name: "drop_cpu", scope: !3, file: !3, line: 3887, type: !3093, scopeLine: 3888, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!8301 = !DILocalVariable(name: "cpu", arg: 1, scope: !8300, file: !3, line: 3887, type: !443)
!8302 = !DILocation(line: 3887, column: 26, scope: !8300)
!8303 = !DILocation(line: 3889, column: 10, scope: !8300)
!8304 = !DILocation(line: 3889, column: 2, scope: !8300)
!8305 = !DILocation(line: 3889, column: 14, scope: !8300)
!8306 = !DILocation(line: 3890, column: 1, scope: !8300)
!8307 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !8308, file: !8308, line: 137, type: !8309, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!8308 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!8309 = !DISubroutineType(types: !8310)
!8310 = !{!890, !2010, !4027, !1121, !888}
!8311 = !DILocalVariable(name: "s", arg: 1, scope: !8307, file: !8308, line: 137, type: !2010)
!8312 = !DILocation(line: 137, column: 54, scope: !8307)
!8313 = !DILocalVariable(name: "object", arg: 2, scope: !8307, file: !8308, line: 137, type: !4027)
!8314 = !DILocation(line: 137, column: 69, scope: !8307)
!8315 = !DILocalVariable(name: "size", arg: 3, scope: !8307, file: !8308, line: 138, type: !1121)
!8316 = !DILocation(line: 138, column: 12, scope: !8307)
!8317 = !DILocalVariable(name: "flags", arg: 4, scope: !8307, file: !8308, line: 138, type: !888)
!8318 = !DILocation(line: 138, column: 24, scope: !8307)
!8319 = !DILocation(line: 140, column: 17, scope: !8307)
!8320 = !DILocation(line: 140, column: 2, scope: !8307)
!8321 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !25, file: !25, line: 660, type: !8322, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!8322 = !DISubroutineType(types: !8323)
!8323 = !{null, !1960, !890}
!8324 = !DILocalVariable(name: "dev", arg: 1, scope: !8321, file: !25, line: 660, type: !1960)
!8325 = !DILocation(line: 660, column: 51, scope: !8321)
!8326 = !DILocalVariable(name: "data", arg: 2, scope: !8321, file: !25, line: 660, type: !890)
!8327 = !DILocation(line: 660, column: 62, scope: !8321)
!8328 = !DILocation(line: 662, column: 21, scope: !8321)
!8329 = !DILocation(line: 662, column: 2, scope: !8321)
!8330 = !DILocation(line: 662, column: 7, scope: !8321)
!8331 = !DILocation(line: 662, column: 19, scope: !8321)
!8332 = !DILocation(line: 663, column: 1, scope: !8321)
!8333 = distinct !DISubprogram(name: "bitmap_empty", scope: !7682, file: !7682, line: 382, type: !7684, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!8334 = !DILocalVariable(name: "src", arg: 1, scope: !8333, file: !7682, line: 382, type: !7686)
!8335 = !DILocation(line: 382, column: 53, scope: !8333)
!8336 = !DILocalVariable(name: "nbits", arg: 2, scope: !8333, file: !7682, line: 382, type: !7)
!8337 = !DILocation(line: 382, column: 67, scope: !8333)
!8338 = !DILocation(line: 384, column: 6, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8333, file: !7682, line: 384, column: 6)
!8340 = !DILocation(line: 384, column: 6, scope: !8333)
!8341 = !DILocation(line: 385, column: 14, scope: !8339)
!8342 = !DILocation(line: 385, column: 13, scope: !8339)
!8343 = !DILocation(line: 385, column: 20, scope: !8339)
!8344 = !DILocation(line: 385, column: 18, scope: !8339)
!8345 = !DILocation(line: 385, column: 10, scope: !8339)
!8346 = !DILocation(line: 385, column: 3, scope: !8339)
!8347 = !DILocation(line: 387, column: 24, scope: !8333)
!8348 = !DILocation(line: 387, column: 29, scope: !8333)
!8349 = !DILocation(line: 387, column: 9, scope: !8333)
!8350 = !DILocation(line: 387, column: 39, scope: !8333)
!8351 = !DILocation(line: 387, column: 36, scope: !8333)
!8352 = !DILocation(line: 387, column: 2, scope: !8333)
!8353 = !DILocation(line: 388, column: 1, scope: !8333)
!8354 = distinct !DISubprogram(name: "cpumask_first", scope: !894, file: !894, line: 150, type: !7667, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!8355 = !DILocalVariable(name: "srcp", arg: 1, scope: !8354, file: !894, line: 150, type: !891)
!8356 = !DILocation(line: 150, column: 64, scope: !8354)
!8357 = !DILocation(line: 152, column: 2, scope: !8354)
!8358 = distinct !DISubprogram(name: "mtip_workq_sdbfx", scope: !3, file: !3, line: 658, type: !8359, scopeLine: 660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!8359 = !DISubroutineType(types: !8360)
!8360 = !{null, !6168, !443, !938}
!8361 = !DILocalVariable(name: "i", arg: 1, scope: !8362, file: !6968, line: 163, type: !443)
!8362 = distinct !DISubprogram(name: "arch_atomic_add_return", scope: !6968, file: !6968, line: 163, type: !8363, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!8363 = !DISubroutineType(types: !8364)
!8364 = !{!443, !443, !8365}
!8365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1586, size: 64)
!8366 = !DILocation(line: 163, column: 55, scope: !8362, inlinedAt: !8367)
!8367 = distinct !DILocation(line: 178, column: 9, scope: !8368, inlinedAt: !8369)
!8368 = distinct !DISubprogram(name: "arch_atomic_sub_return", scope: !6968, file: !6968, line: 176, type: !8363, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!8369 = distinct !DILocation(line: 457, column: 9, scope: !8370, inlinedAt: !8374)
!8370 = distinct !DISubprogram(name: "arch_atomic_dec_return", scope: !8371, file: !8371, line: 455, type: !8372, scopeLine: 456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!8371 = !DIFile(filename: "./include/linux/atomic-arch-fallback.h", directory: "/home/lizy2001/genbc/linux")
!8372 = !DISubroutineType(types: !8373)
!8373 = !{!443, !8365}
!8374 = distinct !DILocation(line: 341, column: 9, scope: !8375, inlinedAt: !8376)
!8375 = distinct !DISubprogram(name: "atomic_dec_return", scope: !6976, file: !6976, line: 338, type: !8372, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!8376 = distinct !DILocation(line: 688, column: 6, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8358, file: !3, line: 688, column: 6)
!8378 = !DILocalVariable(name: "v", arg: 2, scope: !8362, file: !6968, line: 163, type: !8365)
!8379 = !DILocation(line: 163, column: 68, scope: !8362, inlinedAt: !8367)
!8380 = !DILocalVariable(name: "__ret", scope: !8381, file: !6968, line: 165, type: !443)
!8381 = distinct !DILexicalBlock(scope: !8362, file: !6968, line: 165, column: 13)
!8382 = !DILocation(line: 165, column: 13, scope: !8381, inlinedAt: !8367)
!8383 = !DILocalVariable(name: "i", arg: 1, scope: !8368, file: !6968, line: 176, type: !443)
!8384 = !DILocation(line: 176, column: 55, scope: !8368, inlinedAt: !8369)
!8385 = !DILocalVariable(name: "v", arg: 2, scope: !8368, file: !6968, line: 176, type: !8365)
!8386 = !DILocation(line: 176, column: 68, scope: !8368, inlinedAt: !8369)
!8387 = !DILocalVariable(name: "v", arg: 1, scope: !8370, file: !8371, line: 455, type: !8365)
!8388 = !DILocation(line: 455, column: 34, scope: !8370, inlinedAt: !8374)
!8389 = !DILocalVariable(name: "v", arg: 1, scope: !8390, file: !6981, line: 99, type: !6984)
!8390 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !6981, file: !6981, line: 99, type: !6982, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!8391 = !DILocation(line: 99, column: 79, scope: !8390, inlinedAt: !8392)
!8392 = distinct !DILocation(line: 340, column: 2, scope: !8375, inlinedAt: !8376)
!8393 = !DILocalVariable(name: "size", arg: 2, scope: !8390, file: !6981, line: 99, type: !1121)
!8394 = !DILocation(line: 99, column: 89, scope: !8390, inlinedAt: !8392)
!8395 = !DILocalVariable(name: "v", arg: 1, scope: !8375, file: !6976, line: 338, type: !8365)
!8396 = !DILocation(line: 338, column: 29, scope: !8375, inlinedAt: !8376)
!8397 = !DILocalVariable(name: "port", arg: 1, scope: !8358, file: !3, line: 658, type: !6168)
!8398 = !DILocation(line: 658, column: 55, scope: !8358)
!8399 = !DILocalVariable(name: "group", arg: 2, scope: !8358, file: !3, line: 658, type: !443)
!8400 = !DILocation(line: 658, column: 65, scope: !8358)
!8401 = !DILocalVariable(name: "completed", arg: 3, scope: !8358, file: !3, line: 659, type: !938)
!8402 = !DILocation(line: 659, column: 12, scope: !8358)
!8403 = !DILocalVariable(name: "dd", scope: !8358, file: !3, line: 661, type: !945)
!8404 = !DILocation(line: 661, column: 22, scope: !8358)
!8405 = !DILocation(line: 661, column: 27, scope: !8358)
!8406 = !DILocation(line: 661, column: 33, scope: !8358)
!8407 = !DILocalVariable(name: "tag", scope: !8358, file: !3, line: 662, type: !443)
!8408 = !DILocation(line: 662, column: 6, scope: !8358)
!8409 = !DILocalVariable(name: "bit", scope: !8358, file: !3, line: 662, type: !443)
!8410 = !DILocation(line: 662, column: 11, scope: !8358)
!8411 = !DILocalVariable(name: "command", scope: !8358, file: !3, line: 663, type: !8412)
!8412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8413, size: 64)
!8413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mtip_cmd", file: !207, line: 302, size: 129344, elements: !8414)
!8414 = !{!8415, !8416, !8417, !8418, !8419, !8442, !8443, !8444}
!8415 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !8413, file: !207, line: 303, baseType: !890, size: 64)
!8416 = !DIDerivedType(tag: DW_TAG_member, name: "command_dma", scope: !8413, file: !207, line: 305, baseType: !1995, size: 64, offset: 64)
!8417 = !DIDerivedType(tag: DW_TAG_member, name: "scatter_ents", scope: !8413, file: !207, line: 307, baseType: !443, size: 32, offset: 128)
!8418 = !DIDerivedType(tag: DW_TAG_member, name: "unaligned", scope: !8413, file: !207, line: 309, baseType: !443, size: 32, offset: 160)
!8419 = !DIDerivedType(tag: DW_TAG_member, scope: !8413, file: !207, line: 311, baseType: !8420, size: 129024, offset: 192)
!8420 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8413, file: !207, line: 311, size: 129024, elements: !8421)
!8421 = !{!8422, !8434}
!8422 = !DIDerivedType(tag: DW_TAG_member, name: "sg", scope: !8420, file: !207, line: 312, baseType: !8423, size: 129024)
!8423 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8424, size: 129024, elements: !8432)
!8424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !8425, line: 11, size: 256, elements: !8426)
!8425 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!8426 = !{!8427, !8428, !8429, !8430, !8431}
!8427 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !8424, file: !8425, line: 12, baseType: !898, size: 64)
!8428 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !8424, file: !8425, line: 13, baseType: !7, size: 32, offset: 64)
!8429 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !8424, file: !8425, line: 14, baseType: !7, size: 32, offset: 96)
!8430 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !8424, file: !8425, line: 15, baseType: !1995, size: 64, offset: 128)
!8431 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !8424, file: !8425, line: 17, baseType: !7, size: 32, offset: 192)
!8432 = !{!8433}
!8433 = !DISubrange(count: 504)
!8434 = !DIDerivedType(tag: DW_TAG_member, name: "icmd", scope: !8420, file: !207, line: 313, baseType: !8435, size: 64)
!8435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8436, size: 64)
!8436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mtip_int_cmd", file: !3, line: 933, size: 192, elements: !8437)
!8437 = !{!8438, !8439, !8440, !8441}
!8438 = !DIDerivedType(tag: DW_TAG_member, name: "fis_len", scope: !8436, file: !3, line: 934, baseType: !443, size: 32)
!8439 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !8436, file: !3, line: 935, baseType: !1995, size: 64, offset: 64)
!8440 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !8436, file: !3, line: 936, baseType: !443, size: 32, offset: 128)
!8441 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !8436, file: !3, line: 937, baseType: !938, size: 32, offset: 160)
!8442 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !8413, file: !207, line: 316, baseType: !443, size: 32, offset: 129216)
!8443 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !8413, file: !207, line: 318, baseType: !443, size: 32, offset: 129248)
!8444 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !8413, file: !207, line: 319, baseType: !3151, size: 8, offset: 129280)
!8445 = !DILocation(line: 663, column: 19, scope: !8358)
!8446 = !DILocation(line: 665, column: 7, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8358, file: !3, line: 665, column: 6)
!8448 = !DILocation(line: 665, column: 6, scope: !8358)
!8449 = !DILocalVariable(name: "__ret_warn_on", scope: !8450, file: !3, line: 666, type: !443)
!8450 = distinct !DILexicalBlock(scope: !8451, file: !3, line: 666, column: 3)
!8451 = distinct !DILexicalBlock(scope: !8447, file: !3, line: 665, column: 18)
!8452 = !DILocation(line: 666, column: 3, scope: !8450)
!8453 = !DILocation(line: 666, column: 3, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !8450, file: !3, line: 666, column: 3)
!8455 = !DILocation(line: 666, column: 3, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8454, file: !3, line: 666, column: 3)
!8457 = !DILocation(line: 666, column: 3, scope: !8458)
!8458 = distinct !DILexicalBlock(scope: !8456, file: !3, line: 666, column: 3)
!8459 = !DILocation(line: 666, column: 3, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8456, file: !3, line: 666, column: 3)
!8461 = !{i32 -2139283452, i32 -2139283423, i32 -2139283377, i32 -2139283319, i32 -2139283265, i32 -2139283211, i32 -2139283156, i32 -2139283125}
!8462 = !DILocation(line: 666, column: 3, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8456, file: !3, line: 666, column: 3)
!8464 = !{i32 -2139282699, i32 -2139282692, i32 -2139282640, i32 -2139282609, i32 -2139282579}
!8465 = !DILocation(line: 666, column: 3, scope: !8466)
!8466 = distinct !DILexicalBlock(scope: !8456, file: !3, line: 666, column: 3)
!8467 = !DILocation(line: 667, column: 3, scope: !8451)
!8468 = !DILocation(line: 670, column: 9, scope: !8358)
!8469 = !DILocation(line: 670, column: 20, scope: !8358)
!8470 = !DILocation(line: 670, column: 26, scope: !8358)
!8471 = !DILocation(line: 670, column: 36, scope: !8358)
!8472 = !DILocation(line: 670, column: 2, scope: !8358)
!8473 = !DILocation(line: 673, column: 11, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !8358, file: !3, line: 673, column: 2)
!8475 = !DILocation(line: 673, column: 7, scope: !8474)
!8476 = !DILocation(line: 673, column: 17, scope: !8477)
!8477 = distinct !DILexicalBlock(scope: !8474, file: !3, line: 673, column: 2)
!8478 = !DILocation(line: 673, column: 21, scope: !8477)
!8479 = !DILocation(line: 673, column: 27, scope: !8477)
!8480 = !DILocation(line: 673, column: 30, scope: !8477)
!8481 = !DILocation(line: 0, scope: !8477)
!8482 = !DILocation(line: 673, column: 2, scope: !8474)
!8483 = !DILocation(line: 674, column: 7, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8485, file: !3, line: 674, column: 7)
!8485 = distinct !DILexicalBlock(scope: !8477, file: !3, line: 673, column: 48)
!8486 = !DILocation(line: 674, column: 17, scope: !8484)
!8487 = !DILocation(line: 674, column: 7, scope: !8485)
!8488 = !DILocation(line: 675, column: 11, scope: !8489)
!8489 = distinct !DILexicalBlock(scope: !8484, file: !3, line: 674, column: 25)
!8490 = !DILocation(line: 675, column: 17, scope: !8489)
!8491 = !DILocation(line: 675, column: 25, scope: !8489)
!8492 = !DILocation(line: 675, column: 23, scope: !8489)
!8493 = !DILocation(line: 675, column: 8, scope: !8489)
!8494 = !DILocation(line: 678, column: 8, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8489, file: !3, line: 678, column: 8)
!8496 = !DILocation(line: 678, column: 8, scope: !8489)
!8497 = !DILocation(line: 679, column: 5, scope: !8495)
!8498 = !DILocation(line: 681, column: 32, scope: !8489)
!8499 = !DILocation(line: 681, column: 36, scope: !8489)
!8500 = !DILocation(line: 681, column: 14, scope: !8489)
!8501 = !DILocation(line: 681, column: 12, scope: !8489)
!8502 = !DILocation(line: 682, column: 26, scope: !8489)
!8503 = !DILocation(line: 682, column: 4, scope: !8489)
!8504 = !DILocation(line: 683, column: 3, scope: !8489)
!8505 = !DILocation(line: 684, column: 13, scope: !8485)
!8506 = !DILocation(line: 685, column: 2, scope: !8485)
!8507 = !DILocation(line: 673, column: 44, scope: !8477)
!8508 = !DILocation(line: 673, column: 2, scope: !8477)
!8509 = distinct !{!8509, !8482, !8510}
!8510 = !DILocation(line: 685, column: 2, scope: !8474)
!8511 = !DILocation(line: 688, column: 25, scope: !8377)
!8512 = !DILocation(line: 688, column: 29, scope: !8377)
!8513 = !DILocation(line: 340, column: 31, scope: !8375, inlinedAt: !8376)
!8514 = !DILocation(line: 101, column: 20, scope: !8390, inlinedAt: !8392)
!8515 = !DILocation(line: 101, column: 23, scope: !8390, inlinedAt: !8392)
!8516 = !DILocation(line: 101, column: 2, scope: !8390, inlinedAt: !8392)
!8517 = !DILocation(line: 102, column: 2, scope: !8390, inlinedAt: !8392)
!8518 = !DILocation(line: 341, column: 32, scope: !8375, inlinedAt: !8376)
!8519 = !DILocation(line: 457, column: 35, scope: !8370, inlinedAt: !8374)
!8520 = !DILocation(line: 178, column: 33, scope: !8368, inlinedAt: !8369)
!8521 = !DILocation(line: 178, column: 32, scope: !8368, inlinedAt: !8369)
!8522 = !DILocation(line: 178, column: 36, scope: !8368, inlinedAt: !8369)
!8523 = !DILocation(line: 165, column: 9, scope: !8362, inlinedAt: !8367)
!8524 = !{i32 -2146967689}
!8525 = !DILocation(line: 165, column: 11, scope: !8362, inlinedAt: !8367)
!8526 = !DILocation(line: 688, column: 49, scope: !8377)
!8527 = !DILocation(line: 688, column: 6, scope: !8358)
!8528 = !DILocation(line: 689, column: 22, scope: !8377)
!8529 = !DILocation(line: 689, column: 26, scope: !8377)
!8530 = !DILocation(line: 689, column: 31, scope: !8377)
!8531 = !DILocation(line: 689, column: 3, scope: !8377)
!8532 = !DILocation(line: 690, column: 1, scope: !8358)
!8533 = distinct !DISubprogram(name: "writel", scope: !8534, file: !8534, line: 67, type: !8535, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!8534 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!8535 = !DISubroutineType(types: !8536)
!8536 = !{null, !7, !8537}
!8537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6986, size: 64)
!8538 = !DILocalVariable(name: "val", arg: 1, scope: !8533, file: !8534, line: 67, type: !7)
!8539 = !DILocation(line: 67, column: 1, scope: !8533)
!8540 = !DILocalVariable(name: "addr", arg: 2, scope: !8533, file: !8534, line: 67, type: !8537)
!8541 = !{i32 -2143489817}
!8542 = distinct !DISubprogram(name: "mtip_cmd_from_tag", scope: !3, file: !3, line: 162, type: !8543, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!8543 = !DISubroutineType(types: !8544)
!8544 = !{!8412, !945, !7}
!8545 = !DILocalVariable(name: "dd", arg: 1, scope: !8542, file: !3, line: 162, type: !945)
!8546 = !DILocation(line: 162, column: 63, scope: !8542)
!8547 = !DILocalVariable(name: "tag", arg: 2, scope: !8542, file: !3, line: 163, type: !7)
!8548 = !DILocation(line: 163, column: 21, scope: !8542)
!8549 = !DILocalVariable(name: "hctx", scope: !8542, file: !3, line: 165, type: !3269)
!8550 = !DILocation(line: 165, column: 24, scope: !8542)
!8551 = !DILocation(line: 165, column: 31, scope: !8542)
!8552 = !DILocation(line: 165, column: 35, scope: !8542)
!8553 = !DILocation(line: 165, column: 42, scope: !8542)
!8554 = !DILocation(line: 167, column: 43, scope: !8542)
!8555 = !DILocation(line: 167, column: 49, scope: !8542)
!8556 = !DILocation(line: 167, column: 55, scope: !8542)
!8557 = !DILocation(line: 167, column: 26, scope: !8542)
!8558 = !DILocation(line: 167, column: 9, scope: !8542)
!8559 = !DILocation(line: 167, column: 2, scope: !8542)
!8560 = distinct !DISubprogram(name: "mtip_complete_command", scope: !3, file: !3, line: 490, type: !8561, scopeLine: 491, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!8561 = !DISubroutineType(types: !8562)
!8562 = !{null, !8412, !3151}
!8563 = !DILocalVariable(name: "cmd", arg: 1, scope: !8560, file: !3, line: 490, type: !8412)
!8564 = !DILocation(line: 490, column: 52, scope: !8560)
!8565 = !DILocalVariable(name: "status", arg: 2, scope: !8560, file: !3, line: 490, type: !3151)
!8566 = !DILocation(line: 490, column: 70, scope: !8560)
!8567 = !DILocalVariable(name: "req", scope: !8560, file: !3, line: 492, type: !3261)
!8568 = !DILocation(line: 492, column: 18, scope: !8560)
!8569 = !DILocation(line: 492, column: 43, scope: !8560)
!8570 = !DILocation(line: 492, column: 24, scope: !8560)
!8571 = !DILocation(line: 494, column: 16, scope: !8560)
!8572 = !DILocation(line: 494, column: 2, scope: !8560)
!8573 = !DILocation(line: 494, column: 7, scope: !8560)
!8574 = !DILocation(line: 494, column: 14, scope: !8560)
!8575 = !DILocation(line: 495, column: 6, scope: !8576)
!8576 = distinct !DILexicalBlock(scope: !8560, file: !3, line: 495, column: 6)
!8577 = !DILocation(line: 495, column: 6, scope: !8560)
!8578 = !DILocation(line: 496, column: 27, scope: !8576)
!8579 = !DILocation(line: 496, column: 3, scope: !8576)
!8580 = !DILocation(line: 497, column: 1, scope: !8560)
!8581 = distinct !DISubprogram(name: "blk_mq_rq_to_pdu", scope: !419, file: !419, line: 567, type: !8582, scopeLine: 568, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!8582 = !DISubroutineType(types: !8583)
!8583 = !{!890, !3261}
!8584 = !DILocalVariable(name: "rq", arg: 1, scope: !8581, file: !419, line: 567, type: !3261)
!8585 = !DILocation(line: 567, column: 54, scope: !8581)
!8586 = !DILocation(line: 569, column: 9, scope: !8581)
!8587 = !DILocation(line: 569, column: 12, scope: !8581)
!8588 = !DILocation(line: 569, column: 2, scope: !8581)
!8589 = distinct !DISubprogram(name: "blk_mq_rq_from_pdu", scope: !419, file: !419, line: 553, type: !8590, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!8590 = !DISubroutineType(types: !8591)
!8591 = !{!3261, !890}
!8592 = !DILocalVariable(name: "pdu", arg: 1, scope: !8589, file: !419, line: 553, type: !890)
!8593 = !DILocation(line: 553, column: 56, scope: !8589)
!8594 = !DILocation(line: 555, column: 9, scope: !8589)
!8595 = !DILocation(line: 555, column: 13, scope: !8589)
!8596 = !DILocation(line: 555, column: 2, scope: !8589)
!8597 = distinct !DISubprogram(name: "blk_should_fake_timeout", scope: !419, file: !419, line: 536, type: !3587, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!8598 = !DILocalVariable(name: "q", arg: 1, scope: !8597, file: !419, line: 536, type: !3257)
!8599 = !DILocation(line: 536, column: 66, scope: !8597)
!8600 = !DILocation(line: 541, column: 2, scope: !8597)
!8601 = distinct !DISubprogram(name: "kasan_check_write", scope: !8602, file: !8602, line: 38, type: !8603, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!8602 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!8603 = !DISubroutineType(types: !8604)
!8604 = !{!1011, !6984, !7}
!8605 = !DILocalVariable(name: "p", arg: 1, scope: !8601, file: !8602, line: 38, type: !6984)
!8606 = !DILocation(line: 38, column: 59, scope: !8601)
!8607 = !DILocalVariable(name: "size", arg: 2, scope: !8601, file: !8602, line: 38, type: !7)
!8608 = !DILocation(line: 38, column: 75, scope: !8601)
!8609 = !DILocation(line: 40, column: 2, scope: !8601)
!8610 = distinct !DISubprogram(name: "kcsan_check_access", scope: !8611, file: !8611, line: 178, type: !8612, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!8611 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!8612 = !DISubroutineType(types: !8613)
!8613 = !{null, !6984, !1121, !443}
!8614 = !DILocalVariable(name: "ptr", arg: 1, scope: !8610, file: !8611, line: 178, type: !6984)
!8615 = !DILocation(line: 178, column: 60, scope: !8610)
!8616 = !DILocalVariable(name: "size", arg: 2, scope: !8610, file: !8611, line: 178, type: !1121)
!8617 = !DILocation(line: 178, column: 72, scope: !8610)
!8618 = !DILocalVariable(name: "type", arg: 3, scope: !8610, file: !8611, line: 179, type: !443)
!8619 = !DILocation(line: 179, column: 15, scope: !8610)
!8620 = !DILocation(line: 179, column: 23, scope: !8610)
!8621 = distinct !DISubprogram(name: "mtip_disable_link_opts", scope: !3, file: !3, line: 3937, type: !7806, scopeLine: 3938, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!8622 = !DILocalVariable(name: "dd", arg: 1, scope: !8621, file: !3, line: 3937, type: !945)
!8623 = !DILocation(line: 3937, column: 56, scope: !8621)
!8624 = !DILocalVariable(name: "pdev", arg: 2, scope: !8621, file: !3, line: 3937, type: !5888)
!8625 = !DILocation(line: 3937, column: 76, scope: !8621)
!8626 = !DILocalVariable(name: "pos", scope: !8621, file: !3, line: 3939, type: !443)
!8627 = !DILocation(line: 3939, column: 6, scope: !8621)
!8628 = !DILocalVariable(name: "pcie_dev_ctrl", scope: !8621, file: !3, line: 3940, type: !965)
!8629 = !DILocation(line: 3940, column: 17, scope: !8621)
!8630 = !DILocation(line: 3942, column: 28, scope: !8621)
!8631 = !DILocation(line: 3942, column: 8, scope: !8621)
!8632 = !DILocation(line: 3942, column: 6, scope: !8621)
!8633 = !DILocation(line: 3943, column: 6, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !8621, file: !3, line: 3943, column: 6)
!8635 = !DILocation(line: 3943, column: 6, scope: !8621)
!8636 = !DILocation(line: 3944, column: 24, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8634, file: !3, line: 3943, column: 11)
!8638 = !DILocation(line: 3945, column: 4, scope: !8637)
!8639 = !DILocation(line: 3945, column: 8, scope: !8637)
!8640 = !DILocation(line: 3944, column: 3, scope: !8637)
!8641 = !DILocation(line: 3947, column: 7, scope: !8642)
!8642 = distinct !DILexicalBlock(scope: !8637, file: !3, line: 3947, column: 7)
!8643 = !DILocation(line: 3947, column: 21, scope: !8642)
!8644 = !DILocation(line: 3947, column: 33, scope: !8642)
!8645 = !DILocation(line: 3948, column: 7, scope: !8642)
!8646 = !DILocation(line: 3948, column: 21, scope: !8642)
!8647 = !DILocation(line: 3947, column: 7, scope: !8637)
!8648 = !DILocation(line: 3949, column: 4, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !8642, file: !3, line: 3948, column: 33)
!8650 = !DILocation(line: 3952, column: 18, scope: !8649)
!8651 = !DILocation(line: 3954, column: 26, scope: !8649)
!8652 = !DILocation(line: 3955, column: 5, scope: !8649)
!8653 = !DILocation(line: 3955, column: 9, scope: !8649)
!8654 = !DILocation(line: 3956, column: 5, scope: !8649)
!8655 = !DILocation(line: 3954, column: 4, scope: !8649)
!8656 = !DILocation(line: 3957, column: 3, scope: !8649)
!8657 = !DILocation(line: 3958, column: 2, scope: !8637)
!8658 = !DILocation(line: 3959, column: 1, scope: !8621)
!8659 = !DILocation(line: 363, column: 74, scope: !7001, inlinedAt: !8660)
!8660 = distinct !DILocation(line: 2929, column: 22, scope: !6391)
!8661 = !DILocation(line: 327, column: 67, scope: !6457, inlinedAt: !8662)
!8662 = distinct !DILocation(line: 2907, column: 3, scope: !8663)
!8663 = distinct !DILexicalBlock(scope: !8664, file: !3, line: 2907, column: 3)
!8664 = distinct !DILexicalBlock(scope: !8665, file: !3, line: 2906, column: 2)
!8665 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 2906, column: 2)
!8666 = !DILocalVariable(name: "v", arg: 1, scope: !8667, file: !6968, line: 39, type: !8365)
!8667 = distinct !DISubprogram(name: "arch_atomic_set", scope: !6968, file: !6968, line: 39, type: !8668, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!8668 = !DISubroutineType(types: !8669)
!8669 = !{null, !8365, !443}
!8670 = !DILocation(line: 39, column: 55, scope: !8667, inlinedAt: !8671)
!8671 = distinct !DILocation(line: 46, column: 2, scope: !8672, inlinedAt: !8673)
!8672 = distinct !DISubprogram(name: "atomic_set", scope: !6976, file: !6976, line: 43, type: !8668, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!8673 = distinct !DILocation(line: 2903, column: 2, scope: !6391)
!8674 = !DILocalVariable(name: "i", arg: 2, scope: !8667, file: !6968, line: 39, type: !443)
!8675 = !DILocation(line: 39, column: 62, scope: !8667, inlinedAt: !8671)
!8676 = !DILocation(line: 84, column: 74, scope: !8242, inlinedAt: !8677)
!8677 = distinct !DILocation(line: 45, column: 2, scope: !8672, inlinedAt: !8673)
!8678 = !DILocation(line: 84, column: 84, scope: !8242, inlinedAt: !8677)
!8679 = !DILocalVariable(name: "v", arg: 1, scope: !8672, file: !6976, line: 43, type: !8365)
!8680 = !DILocation(line: 43, column: 22, scope: !8672, inlinedAt: !8673)
!8681 = !DILocalVariable(name: "i", arg: 2, scope: !8672, file: !6976, line: 43, type: !443)
!8682 = !DILocation(line: 43, column: 29, scope: !8672, inlinedAt: !8673)
!8683 = !DILocalVariable(name: "dd", arg: 1, scope: !6391, file: !3, line: 2869, type: !945)
!8684 = !DILocation(line: 2869, column: 45, scope: !6391)
!8685 = !DILocalVariable(name: "i", scope: !6391, file: !3, line: 2871, type: !443)
!8686 = !DILocation(line: 2871, column: 6, scope: !6391)
!8687 = !DILocalVariable(name: "rv", scope: !6391, file: !3, line: 2872, type: !443)
!8688 = !DILocation(line: 2872, column: 6, scope: !6391)
!8689 = !DILocalVariable(name: "timeout", scope: !6391, file: !3, line: 2873, type: !898)
!8690 = !DILocation(line: 2873, column: 16, scope: !6391)
!8691 = !DILocalVariable(name: "timetaken", scope: !6391, file: !3, line: 2873, type: !898)
!8692 = !DILocation(line: 2873, column: 25, scope: !6391)
!8693 = !DILocation(line: 2875, column: 30, scope: !6391)
!8694 = !DILocation(line: 2875, column: 34, scope: !6391)
!8695 = !DILocation(line: 2875, column: 13, scope: !6391)
!8696 = !DILocation(line: 2875, column: 2, scope: !6391)
!8697 = !DILocation(line: 2875, column: 6, scope: !6391)
!8698 = !DILocation(line: 2875, column: 11, scope: !6391)
!8699 = !DILocation(line: 2877, column: 22, scope: !6391)
!8700 = !DILocation(line: 2877, column: 2, scope: !6391)
!8701 = !DILocation(line: 2878, column: 6, scope: !8702)
!8702 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 2878, column: 6)
!8703 = !DILocation(line: 2878, column: 10, scope: !8702)
!8704 = !DILocation(line: 2878, column: 23, scope: !8702)
!8705 = !DILocation(line: 2878, column: 6, scope: !6391)
!8706 = !DILocation(line: 2879, column: 6, scope: !8707)
!8707 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 2878, column: 48)
!8708 = !DILocation(line: 2880, column: 3, scope: !8707)
!8709 = !DILocation(line: 2883, column: 12, scope: !6391)
!8710 = !DILocation(line: 2883, column: 2, scope: !6391)
!8711 = !DILocation(line: 2886, column: 5, scope: !6391)
!8712 = !DILocation(line: 2886, column: 9, scope: !6391)
!8713 = !DILocation(line: 2885, column: 13, scope: !6391)
!8714 = !DILocation(line: 2885, column: 2, scope: !6391)
!8715 = !DILocation(line: 2885, column: 6, scope: !6391)
!8716 = !DILocation(line: 2885, column: 11, scope: !6391)
!8717 = !DILocation(line: 2887, column: 7, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 2887, column: 6)
!8719 = !DILocation(line: 2887, column: 11, scope: !8718)
!8720 = !DILocation(line: 2887, column: 6, scope: !6391)
!8721 = !DILocation(line: 2888, column: 3, scope: !8722)
!8722 = distinct !DILexicalBlock(scope: !8718, file: !3, line: 2887, column: 17)
!8723 = !DILocation(line: 2890, column: 3, scope: !8722)
!8724 = !DILocation(line: 2894, column: 9, scope: !8725)
!8725 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 2894, column: 2)
!8726 = !DILocation(line: 2894, column: 7, scope: !8725)
!8727 = !DILocation(line: 2894, column: 14, scope: !8728)
!8728 = distinct !DILexicalBlock(scope: !8725, file: !3, line: 2894, column: 2)
!8729 = !DILocation(line: 2894, column: 16, scope: !8728)
!8730 = !DILocation(line: 2894, column: 2, scope: !8725)
!8731 = !DILocation(line: 2895, column: 22, scope: !8728)
!8732 = !DILocation(line: 2895, column: 26, scope: !8728)
!8733 = !DILocation(line: 2895, column: 3, scope: !8728)
!8734 = !DILocation(line: 2895, column: 7, scope: !8728)
!8735 = !DILocation(line: 2895, column: 12, scope: !8728)
!8736 = !DILocation(line: 2895, column: 15, scope: !8728)
!8737 = !DILocation(line: 2895, column: 20, scope: !8728)
!8738 = !DILocation(line: 2894, column: 41, scope: !8728)
!8739 = !DILocation(line: 2894, column: 2, scope: !8728)
!8740 = distinct !{!8740, !8730, !8741}
!8741 = !DILocation(line: 2895, column: 26, scope: !8725)
!8742 = !DILocation(line: 2898, column: 40, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 2898, column: 6)
!8744 = !DILocation(line: 2898, column: 6, scope: !8743)
!8745 = !DILocation(line: 2898, column: 6, scope: !6391)
!8746 = !DILocation(line: 2899, column: 3, scope: !8743)
!8747 = !DILocation(line: 2899, column: 7, scope: !8743)
!8748 = !DILocation(line: 2899, column: 19, scope: !8743)
!8749 = !DILocation(line: 2901, column: 3, scope: !8743)
!8750 = !DILocation(line: 2901, column: 7, scope: !8743)
!8751 = !DILocation(line: 2901, column: 19, scope: !8743)
!8752 = !DILocation(line: 2903, column: 14, scope: !6391)
!8753 = !DILocation(line: 2903, column: 18, scope: !6391)
!8754 = !DILocation(line: 2903, column: 24, scope: !6391)
!8755 = !DILocation(line: 2903, column: 39, scope: !6391)
!8756 = !DILocation(line: 2903, column: 43, scope: !6391)
!8757 = !DILocation(line: 45, column: 26, scope: !8672, inlinedAt: !8673)
!8758 = !DILocation(line: 86, column: 20, scope: !8242, inlinedAt: !8677)
!8759 = !DILocation(line: 86, column: 23, scope: !8242, inlinedAt: !8677)
!8760 = !DILocation(line: 86, column: 2, scope: !8242, inlinedAt: !8677)
!8761 = !DILocation(line: 87, column: 2, scope: !8242, inlinedAt: !8677)
!8762 = !DILocation(line: 46, column: 18, scope: !8672, inlinedAt: !8673)
!8763 = !DILocation(line: 46, column: 21, scope: !8672, inlinedAt: !8673)
!8764 = !DILocation(line: 41, column: 2, scope: !8765, inlinedAt: !8671)
!8765 = distinct !DILexicalBlock(scope: !8667, file: !6968, line: 41, column: 2)
!8766 = !DILocation(line: 2906, column: 9, scope: !8665)
!8767 = !DILocation(line: 2906, column: 7, scope: !8665)
!8768 = !DILocation(line: 2906, column: 14, scope: !8664)
!8769 = !DILocation(line: 2906, column: 16, scope: !8664)
!8770 = !DILocation(line: 2906, column: 2, scope: !8665)
!8771 = !DILocation(line: 2907, column: 3, scope: !8664)
!8772 = !DILocation(line: 2907, column: 3, scope: !8663)
!8773 = !DILocation(line: 329, column: 10, scope: !6457, inlinedAt: !8662)
!8774 = !DILocation(line: 329, column: 16, scope: !6457, inlinedAt: !8662)
!8775 = !DILocation(line: 2906, column: 41, scope: !8664)
!8776 = !DILocation(line: 2906, column: 2, scope: !8664)
!8777 = distinct !{!8777, !8770, !8778}
!8778 = !DILocation(line: 2907, column: 3, scope: !8665)
!8779 = !DILocation(line: 2910, column: 19, scope: !6391)
!8780 = !DILocation(line: 2910, column: 23, scope: !6391)
!8781 = !DILocation(line: 2910, column: 28, scope: !6391)
!8782 = !DILocation(line: 2910, column: 2, scope: !6391)
!8783 = !DILocation(line: 2910, column: 6, scope: !6391)
!8784 = !DILocation(line: 2910, column: 12, scope: !6391)
!8785 = !DILocation(line: 2910, column: 17, scope: !6391)
!8786 = !DILocation(line: 2911, column: 17, scope: !6391)
!8787 = !DILocation(line: 2911, column: 2, scope: !6391)
!8788 = !DILocation(line: 2911, column: 6, scope: !6391)
!8789 = !DILocation(line: 2911, column: 12, scope: !6391)
!8790 = !DILocation(line: 2911, column: 15, scope: !6391)
!8791 = !DILocation(line: 2914, column: 22, scope: !6391)
!8792 = !DILocation(line: 2914, column: 7, scope: !6391)
!8793 = !DILocation(line: 2914, column: 5, scope: !6391)
!8794 = !DILocation(line: 2915, column: 6, scope: !8795)
!8795 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 2915, column: 6)
!8796 = !DILocation(line: 2915, column: 9, scope: !8795)
!8797 = !DILocation(line: 2915, column: 6, scope: !6391)
!8798 = !DILocation(line: 2916, column: 3, scope: !8795)
!8799 = !DILocation(line: 2919, column: 9, scope: !8800)
!8800 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 2919, column: 2)
!8801 = !DILocation(line: 2919, column: 7, scope: !8800)
!8802 = !DILocation(line: 2919, column: 14, scope: !8803)
!8803 = distinct !DILexicalBlock(scope: !8800, file: !3, line: 2919, column: 2)
!8804 = !DILocation(line: 2919, column: 18, scope: !8803)
!8805 = !DILocation(line: 2919, column: 22, scope: !8803)
!8806 = !DILocation(line: 2919, column: 16, scope: !8803)
!8807 = !DILocation(line: 2919, column: 2, scope: !8800)
!8808 = !DILocation(line: 2921, column: 4, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8803, file: !3, line: 2919, column: 40)
!8810 = !DILocation(line: 2921, column: 8, scope: !8809)
!8811 = !DILocation(line: 2921, column: 14, scope: !8809)
!8812 = !DILocation(line: 2921, column: 21, scope: !8809)
!8813 = !DILocation(line: 2921, column: 22, scope: !8809)
!8814 = !DILocation(line: 2921, column: 19, scope: !8809)
!8815 = !DILocation(line: 2921, column: 28, scope: !8809)
!8816 = !DILocation(line: 2920, column: 3, scope: !8809)
!8817 = !DILocation(line: 2920, column: 7, scope: !8809)
!8818 = !DILocation(line: 2920, column: 13, scope: !8809)
!8819 = !DILocation(line: 2920, column: 22, scope: !8809)
!8820 = !DILocation(line: 2920, column: 25, scope: !8809)
!8821 = !DILocation(line: 2923, column: 4, scope: !8809)
!8822 = !DILocation(line: 2923, column: 8, scope: !8809)
!8823 = !DILocation(line: 2923, column: 14, scope: !8809)
!8824 = !DILocation(line: 2923, column: 21, scope: !8809)
!8825 = !DILocation(line: 2923, column: 22, scope: !8809)
!8826 = !DILocation(line: 2923, column: 19, scope: !8809)
!8827 = !DILocation(line: 2923, column: 28, scope: !8809)
!8828 = !DILocation(line: 2922, column: 3, scope: !8809)
!8829 = !DILocation(line: 2922, column: 7, scope: !8809)
!8830 = !DILocation(line: 2922, column: 13, scope: !8809)
!8831 = !DILocation(line: 2922, column: 23, scope: !8809)
!8832 = !DILocation(line: 2922, column: 26, scope: !8809)
!8833 = !DILocation(line: 2925, column: 4, scope: !8809)
!8834 = !DILocation(line: 2925, column: 8, scope: !8809)
!8835 = !DILocation(line: 2925, column: 14, scope: !8809)
!8836 = !DILocation(line: 2925, column: 21, scope: !8809)
!8837 = !DILocation(line: 2925, column: 22, scope: !8809)
!8838 = !DILocation(line: 2925, column: 19, scope: !8809)
!8839 = !DILocation(line: 2925, column: 28, scope: !8809)
!8840 = !DILocation(line: 2924, column: 3, scope: !8809)
!8841 = !DILocation(line: 2924, column: 7, scope: !8809)
!8842 = !DILocation(line: 2924, column: 13, scope: !8809)
!8843 = !DILocation(line: 2924, column: 23, scope: !8809)
!8844 = !DILocation(line: 2924, column: 26, scope: !8809)
!8845 = !DILocation(line: 2926, column: 2, scope: !8809)
!8846 = !DILocation(line: 2919, column: 36, scope: !8803)
!8847 = !DILocation(line: 2919, column: 2, scope: !8803)
!8848 = distinct !{!8848, !8807, !8849}
!8849 = !DILocation(line: 2926, column: 2, scope: !8800)
!8850 = !DILocation(line: 2928, column: 14, scope: !6391)
!8851 = !DILocation(line: 2928, column: 12, scope: !6391)
!8852 = !DILocation(line: 2929, column: 12, scope: !6391)
!8853 = !DILocation(line: 365, column: 27, scope: !7071, inlinedAt: !8660)
!8854 = !DILocation(line: 365, column: 6, scope: !7071, inlinedAt: !8660)
!8855 = !DILocation(line: 365, column: 6, scope: !7001, inlinedAt: !8660)
!8856 = !DILocation(line: 366, column: 12, scope: !7075, inlinedAt: !8660)
!8857 = !DILocation(line: 366, column: 14, scope: !7075, inlinedAt: !8660)
!8858 = !DILocation(line: 366, column: 7, scope: !7076, inlinedAt: !8660)
!8859 = !DILocation(line: 367, column: 4, scope: !7075, inlinedAt: !8660)
!8860 = !DILocation(line: 368, column: 28, scope: !7076, inlinedAt: !8660)
!8861 = !DILocation(line: 368, column: 10, scope: !7076, inlinedAt: !8660)
!8862 = !DILocation(line: 368, column: 3, scope: !7076, inlinedAt: !8660)
!8863 = !DILocation(line: 370, column: 29, scope: !7084, inlinedAt: !8660)
!8864 = !DILocation(line: 370, column: 10, scope: !7084, inlinedAt: !8660)
!8865 = !DILocation(line: 370, column: 3, scope: !7084, inlinedAt: !8660)
!8866 = !DILocation(line: 372, column: 1, scope: !7001, inlinedAt: !8660)
!8867 = !DILocation(line: 2929, column: 20, scope: !6391)
!8868 = !DILocation(line: 2929, column: 10, scope: !6391)
!8869 = !DILocation(line: 2930, column: 2, scope: !6391)
!8870 = !DILocation(line: 2930, column: 17, scope: !6391)
!8871 = !DILocation(line: 2930, column: 21, scope: !6391)
!8872 = !DILocation(line: 2930, column: 27, scope: !6391)
!8873 = !DILocation(line: 2930, column: 32, scope: !6391)
!8874 = !DILocation(line: 2930, column: 11, scope: !6391)
!8875 = !DILocation(line: 2930, column: 49, scope: !6391)
!8876 = !DILocation(line: 2930, column: 57, scope: !6391)
!8877 = !DILocation(line: 2930, column: 66, scope: !6391)
!8878 = !DILocation(line: 2931, column: 4, scope: !6391)
!8879 = !DILocation(line: 0, scope: !6391)
!8880 = !DILocalVariable(name: "__ms", scope: !8881, file: !3, line: 2932, type: !898)
!8881 = distinct !DILexicalBlock(scope: !8882, file: !3, line: 2932, column: 3)
!8882 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 2931, column: 35)
!8883 = !DILocation(line: 2932, column: 3, scope: !8881)
!8884 = !DILocation(line: 2932, column: 3, scope: !8885)
!8885 = distinct !DILexicalBlock(scope: !8886, file: !3, line: 2932, column: 3)
!8886 = distinct !DILexicalBlock(scope: !8887, file: !3, line: 2932, column: 3)
!8887 = distinct !DILexicalBlock(scope: !8888, file: !3, line: 2932, column: 3)
!8888 = distinct !DILexicalBlock(scope: !8881, file: !3, line: 2932, column: 3)
!8889 = distinct !{!8889, !8883, !8883}
!8890 = distinct !{!8890, !8869, !8891}
!8891 = !DILocation(line: 2933, column: 2, scope: !6391)
!8892 = !DILocation(line: 2934, column: 6, scope: !8893)
!8893 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 2934, column: 6)
!8894 = !DILocation(line: 2934, column: 6, scope: !6391)
!8895 = !DILocation(line: 2935, column: 15, scope: !8896)
!8896 = distinct !DILexicalBlock(scope: !8893, file: !3, line: 2934, column: 55)
!8897 = !DILocation(line: 2935, column: 25, scope: !8896)
!8898 = !DILocation(line: 2935, column: 23, scope: !8896)
!8899 = !DILocation(line: 2935, column: 13, scope: !8896)
!8900 = !DILocation(line: 2936, column: 3, scope: !8896)
!8901 = !DILocation(line: 2939, column: 6, scope: !8896)
!8902 = !DILocation(line: 2940, column: 3, scope: !8896)
!8903 = !DILocation(line: 2942, column: 6, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 2942, column: 6)
!8905 = !DILocation(line: 2942, column: 6, scope: !6391)
!8906 = !DILocation(line: 2943, column: 15, scope: !8907)
!8907 = distinct !DILexicalBlock(scope: !8904, file: !3, line: 2942, column: 69)
!8908 = !DILocation(line: 2943, column: 25, scope: !8907)
!8909 = !DILocation(line: 2943, column: 23, scope: !8907)
!8910 = !DILocation(line: 2943, column: 13, scope: !8907)
!8911 = !DILocation(line: 2944, column: 3, scope: !8907)
!8912 = !DILocation(line: 2947, column: 6, scope: !8907)
!8913 = !DILocation(line: 2948, column: 3, scope: !8907)
!8914 = !DILocation(line: 2952, column: 14, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 2952, column: 6)
!8916 = !DILocation(line: 2952, column: 18, scope: !8915)
!8917 = !DILocation(line: 2952, column: 23, scope: !8915)
!8918 = !DILocation(line: 2952, column: 8, scope: !8915)
!8919 = !DILocation(line: 2952, column: 35, scope: !8915)
!8920 = !DILocation(line: 2952, column: 6, scope: !6391)
!8921 = !DILocation(line: 2953, column: 22, scope: !8922)
!8922 = distinct !DILexicalBlock(scope: !8923, file: !3, line: 2953, column: 7)
!8923 = distinct !DILexicalBlock(scope: !8915, file: !3, line: 2952, column: 54)
!8924 = !DILocation(line: 2953, column: 7, scope: !8922)
!8925 = !DILocation(line: 2953, column: 26, scope: !8922)
!8926 = !DILocation(line: 2953, column: 7, scope: !8923)
!8927 = !DILocation(line: 2954, column: 4, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8922, file: !3, line: 2953, column: 31)
!8929 = !DILocation(line: 2956, column: 7, scope: !8928)
!8930 = !DILocation(line: 2957, column: 4, scope: !8928)
!8931 = !DILocation(line: 2959, column: 2, scope: !8923)
!8932 = !DILocation(line: 2961, column: 16, scope: !8933)
!8933 = distinct !DILexicalBlock(scope: !8915, file: !3, line: 2959, column: 9)
!8934 = !DILocation(line: 2961, column: 20, scope: !8933)
!8935 = !DILocation(line: 2961, column: 25, scope: !8933)
!8936 = !DILocation(line: 2961, column: 10, scope: !8933)
!8937 = !DILocation(line: 2962, column: 4, scope: !8933)
!8938 = !DILocation(line: 2962, column: 8, scope: !8933)
!8939 = !DILocation(line: 2962, column: 13, scope: !8933)
!8940 = !DILocation(line: 2961, column: 3, scope: !8933)
!8941 = !DILocation(line: 2965, column: 17, scope: !6391)
!8942 = !DILocation(line: 2965, column: 21, scope: !6391)
!8943 = !DILocation(line: 2965, column: 2, scope: !6391)
!8944 = !DILocation(line: 2966, column: 18, scope: !6391)
!8945 = !DILocation(line: 2966, column: 22, scope: !6391)
!8946 = !DILocation(line: 2966, column: 2, scope: !6391)
!8947 = !DILocation(line: 2969, column: 19, scope: !6391)
!8948 = !DILocation(line: 2969, column: 23, scope: !6391)
!8949 = !DILocation(line: 2969, column: 29, scope: !6391)
!8950 = !DILocation(line: 2970, column: 24, scope: !6391)
!8951 = !DILocation(line: 2970, column: 28, scope: !6391)
!8952 = !DILocation(line: 2970, column: 34, scope: !6391)
!8953 = !DILocation(line: 2970, column: 5, scope: !6391)
!8954 = !DILocation(line: 2970, column: 40, scope: !6391)
!8955 = !DILocation(line: 2969, column: 7, scope: !6391)
!8956 = !DILocation(line: 2969, column: 5, scope: !6391)
!8957 = !DILocation(line: 2971, column: 6, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 2971, column: 6)
!8959 = !DILocation(line: 2971, column: 6, scope: !6391)
!8960 = !DILocation(line: 2972, column: 3, scope: !8961)
!8961 = distinct !DILexicalBlock(scope: !8958, file: !3, line: 2971, column: 10)
!8962 = !DILocation(line: 2974, column: 3, scope: !8961)
!8963 = !DILocation(line: 2976, column: 24, scope: !6391)
!8964 = !DILocation(line: 2976, column: 28, scope: !6391)
!8965 = !DILocation(line: 2976, column: 34, scope: !6391)
!8966 = !DILocation(line: 2976, column: 52, scope: !6391)
!8967 = !DILocation(line: 2976, column: 56, scope: !6391)
!8968 = !DILocation(line: 2976, column: 39, scope: !6391)
!8969 = !DILocation(line: 2976, column: 2, scope: !6391)
!8970 = !DILocation(line: 2979, column: 15, scope: !6391)
!8971 = !DILocation(line: 2979, column: 19, scope: !6391)
!8972 = !DILocation(line: 2979, column: 24, scope: !6391)
!8973 = !DILocation(line: 2979, column: 9, scope: !6391)
!8974 = !DILocation(line: 2979, column: 36, scope: !6391)
!8975 = !DILocation(line: 2980, column: 6, scope: !6391)
!8976 = !DILocation(line: 2980, column: 10, scope: !6391)
!8977 = !DILocation(line: 2980, column: 15, scope: !6391)
!8978 = !DILocation(line: 2979, column: 2, scope: !6391)
!8979 = !DILocation(line: 2982, column: 2, scope: !6391)
!8980 = !DILocation(line: 2982, column: 2, scope: !8981)
!8981 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 2982, column: 2)
!8982 = !DILocation(line: 2984, column: 45, scope: !8983)
!8983 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 2984, column: 6)
!8984 = !DILocation(line: 2984, column: 49, scope: !8983)
!8985 = !DILocation(line: 2984, column: 6, scope: !8983)
!8986 = !DILocation(line: 2984, column: 6, scope: !6391)
!8987 = !DILocation(line: 2985, column: 6, scope: !8988)
!8988 = distinct !DILexicalBlock(scope: !8983, file: !3, line: 2984, column: 59)
!8989 = !DILocation(line: 2986, column: 3, scope: !8988)
!8990 = !DILocation(line: 2989, column: 9, scope: !6391)
!8991 = !DILocation(line: 2989, column: 2, scope: !6391)
!8992 = !DILabel(scope: !6391, name: "out3", file: !3, line: 2991)
!8993 = !DILocation(line: 2991, column: 1, scope: !6391)
!8994 = !DILocation(line: 2993, column: 15, scope: !6391)
!8995 = !DILocation(line: 2993, column: 19, scope: !6391)
!8996 = !DILocation(line: 2993, column: 24, scope: !6391)
!8997 = !DILocation(line: 2993, column: 9, scope: !6391)
!8998 = !DILocation(line: 2993, column: 36, scope: !6391)
!8999 = !DILocation(line: 2994, column: 4, scope: !6391)
!9000 = !DILocation(line: 2994, column: 8, scope: !6391)
!9001 = !DILocation(line: 2994, column: 13, scope: !6391)
!9002 = !DILocation(line: 2993, column: 2, scope: !6391)
!9003 = !DILocation(line: 2997, column: 24, scope: !6391)
!9004 = !DILocation(line: 2997, column: 28, scope: !6391)
!9005 = !DILocation(line: 2997, column: 34, scope: !6391)
!9006 = !DILocation(line: 2997, column: 2, scope: !6391)
!9007 = !DILocation(line: 2998, column: 11, scope: !6391)
!9008 = !DILocation(line: 2998, column: 15, scope: !6391)
!9009 = !DILocation(line: 2998, column: 21, scope: !6391)
!9010 = !DILocation(line: 2998, column: 26, scope: !6391)
!9011 = !DILocation(line: 2998, column: 2, scope: !6391)
!9012 = !DILabel(scope: !6391, name: "out2", file: !3, line: 3000)
!9013 = !DILocation(line: 3000, column: 1, scope: !6391)
!9014 = !DILocation(line: 3001, column: 19, scope: !6391)
!9015 = !DILocation(line: 3001, column: 23, scope: !6391)
!9016 = !DILocation(line: 3001, column: 2, scope: !6391)
!9017 = !DILocation(line: 3002, column: 16, scope: !6391)
!9018 = !DILocation(line: 3002, column: 2, scope: !6391)
!9019 = !DILabel(scope: !6391, name: "out1", file: !3, line: 3004)
!9020 = !DILocation(line: 3004, column: 1, scope: !6391)
!9021 = !DILocation(line: 3006, column: 8, scope: !6391)
!9022 = !DILocation(line: 3006, column: 12, scope: !6391)
!9023 = !DILocation(line: 3006, column: 2, scope: !6391)
!9024 = !DILocation(line: 3008, column: 9, scope: !6391)
!9025 = !DILocation(line: 3008, column: 2, scope: !6391)
!9026 = !DILocation(line: 3009, column: 1, scope: !6391)
!9027 = distinct !DISubprogram(name: "ida_alloc", scope: !5115, file: !5115, line: 271, type: !9028, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!9028 = !DISubroutineType(types: !9029)
!9029 = !{!443, !9030, !888}
!9030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6394, size: 64)
!9031 = !DILocalVariable(name: "ida", arg: 1, scope: !9027, file: !5115, line: 271, type: !9030)
!9032 = !DILocation(line: 271, column: 41, scope: !9027)
!9033 = !DILocalVariable(name: "gfp", arg: 2, scope: !9027, file: !5115, line: 271, type: !888)
!9034 = !DILocation(line: 271, column: 52, scope: !9027)
!9035 = !DILocation(line: 273, column: 25, scope: !9027)
!9036 = !DILocation(line: 273, column: 37, scope: !9027)
!9037 = !DILocation(line: 273, column: 9, scope: !9027)
!9038 = !DILocation(line: 273, column: 2, scope: !9027)
!9039 = distinct !DISubprogram(name: "rssd_disk_name_format", scope: !3, file: !3, line: 3162, type: !9040, scopeLine: 3166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!9040 = !DISubroutineType(types: !9041)
!9041 = !{!443, !1076, !443, !1076, !443}
!9042 = !DILocalVariable(name: "prefix", arg: 1, scope: !9039, file: !3, line: 3162, type: !1076)
!9043 = !DILocation(line: 3162, column: 40, scope: !9039)
!9044 = !DILocalVariable(name: "index", arg: 2, scope: !9039, file: !3, line: 3163, type: !443)
!9045 = !DILocation(line: 3163, column: 10, scope: !9039)
!9046 = !DILocalVariable(name: "buf", arg: 3, scope: !9039, file: !3, line: 3164, type: !1076)
!9047 = !DILocation(line: 3164, column: 12, scope: !9039)
!9048 = !DILocalVariable(name: "buflen", arg: 4, scope: !9039, file: !3, line: 3165, type: !443)
!9049 = !DILocation(line: 3165, column: 10, scope: !9039)
!9050 = !DILocalVariable(name: "base", scope: !9039, file: !3, line: 3167, type: !9051)
!9051 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !443)
!9052 = !DILocation(line: 3167, column: 12, scope: !9039)
!9053 = !DILocalVariable(name: "begin", scope: !9039, file: !3, line: 3168, type: !1076)
!9054 = !DILocation(line: 3168, column: 8, scope: !9039)
!9055 = !DILocation(line: 3168, column: 16, scope: !9039)
!9056 = !DILocation(line: 3168, column: 29, scope: !9039)
!9057 = !DILocation(line: 3168, column: 22, scope: !9039)
!9058 = !DILocation(line: 3168, column: 20, scope: !9039)
!9059 = !DILocalVariable(name: "end", scope: !9039, file: !3, line: 3169, type: !1076)
!9060 = !DILocation(line: 3169, column: 8, scope: !9039)
!9061 = !DILocation(line: 3169, column: 14, scope: !9039)
!9062 = !DILocation(line: 3169, column: 20, scope: !9039)
!9063 = !DILocation(line: 3169, column: 18, scope: !9039)
!9064 = !DILocalVariable(name: "p", scope: !9039, file: !3, line: 3170, type: !1076)
!9065 = !DILocation(line: 3170, column: 8, scope: !9039)
!9066 = !DILocalVariable(name: "unit", scope: !9039, file: !3, line: 3171, type: !443)
!9067 = !DILocation(line: 3171, column: 6, scope: !9039)
!9068 = !DILocation(line: 3173, column: 6, scope: !9039)
!9069 = !DILocation(line: 3173, column: 10, scope: !9039)
!9070 = !DILocation(line: 3173, column: 4, scope: !9039)
!9071 = !DILocation(line: 3174, column: 3, scope: !9039)
!9072 = !DILocation(line: 3174, column: 5, scope: !9039)
!9073 = !DILocation(line: 3175, column: 7, scope: !9039)
!9074 = !DILocation(line: 3176, column: 2, scope: !9039)
!9075 = !DILocation(line: 3177, column: 7, scope: !9076)
!9076 = distinct !DILexicalBlock(scope: !9077, file: !3, line: 3177, column: 7)
!9077 = distinct !DILexicalBlock(scope: !9039, file: !3, line: 3176, column: 5)
!9078 = !DILocation(line: 3177, column: 12, scope: !9076)
!9079 = !DILocation(line: 3177, column: 9, scope: !9076)
!9080 = !DILocation(line: 3177, column: 7, scope: !9077)
!9081 = !DILocation(line: 3178, column: 4, scope: !9076)
!9082 = !DILocation(line: 3179, column: 17, scope: !9077)
!9083 = !DILocation(line: 3179, column: 25, scope: !9077)
!9084 = !DILocation(line: 3179, column: 23, scope: !9077)
!9085 = !DILocation(line: 3179, column: 14, scope: !9077)
!9086 = !DILocation(line: 3179, column: 10, scope: !9077)
!9087 = !DILocation(line: 3179, column: 4, scope: !9077)
!9088 = !DILocation(line: 3179, column: 8, scope: !9077)
!9089 = !DILocation(line: 3180, column: 12, scope: !9077)
!9090 = !DILocation(line: 3180, column: 20, scope: !9077)
!9091 = !DILocation(line: 3180, column: 18, scope: !9077)
!9092 = !DILocation(line: 3180, column: 26, scope: !9077)
!9093 = !DILocation(line: 3180, column: 9, scope: !9077)
!9094 = !DILocation(line: 3181, column: 2, scope: !9077)
!9095 = !DILocation(line: 3181, column: 11, scope: !9039)
!9096 = !DILocation(line: 3181, column: 17, scope: !9039)
!9097 = distinct !{!9097, !9074, !9098}
!9098 = !DILocation(line: 3181, column: 21, scope: !9039)
!9099 = !DILocation(line: 3183, column: 10, scope: !9039)
!9100 = !DILocation(line: 3183, column: 17, scope: !9039)
!9101 = !DILocation(line: 3183, column: 20, scope: !9039)
!9102 = !DILocation(line: 3183, column: 26, scope: !9039)
!9103 = !DILocation(line: 3183, column: 24, scope: !9039)
!9104 = !DILocation(line: 3183, column: 2, scope: !9039)
!9105 = !DILocation(line: 3184, column: 9, scope: !9039)
!9106 = !DILocation(line: 3184, column: 14, scope: !9039)
!9107 = !DILocation(line: 3184, column: 29, scope: !9039)
!9108 = !DILocation(line: 3184, column: 22, scope: !9039)
!9109 = !DILocation(line: 3184, column: 2, scope: !9039)
!9110 = !DILocation(line: 3186, column: 2, scope: !9039)
!9111 = !DILocation(line: 3187, column: 1, scope: !9039)
!9112 = distinct !DISubprogram(name: "mtip_hw_debugfs_init", scope: !3, file: !3, line: 2428, type: !6387, scopeLine: 2429, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!9113 = !DILocalVariable(name: "dd", arg: 1, scope: !9112, file: !3, line: 2428, type: !945)
!9114 = !DILocation(line: 2428, column: 53, scope: !9112)
!9115 = !DILocation(line: 2430, column: 7, scope: !9116)
!9116 = distinct !DILexicalBlock(scope: !9112, file: !3, line: 2430, column: 6)
!9117 = !DILocation(line: 2430, column: 6, scope: !9112)
!9118 = !DILocation(line: 2431, column: 3, scope: !9116)
!9119 = !DILocation(line: 2433, column: 36, scope: !9112)
!9120 = !DILocation(line: 2433, column: 40, scope: !9112)
!9121 = !DILocation(line: 2433, column: 46, scope: !9112)
!9122 = !DILocation(line: 2433, column: 57, scope: !9112)
!9123 = !DILocation(line: 2433, column: 17, scope: !9112)
!9124 = !DILocation(line: 2433, column: 2, scope: !9112)
!9125 = !DILocation(line: 2433, column: 6, scope: !9112)
!9126 = !DILocation(line: 2433, column: 15, scope: !9112)
!9127 = !DILocation(line: 2434, column: 21, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9112, file: !3, line: 2434, column: 6)
!9129 = !DILocation(line: 2434, column: 25, scope: !9128)
!9130 = !DILocation(line: 2434, column: 6, scope: !9128)
!9131 = !DILocation(line: 2434, column: 6, scope: !9112)
!9132 = !DILocation(line: 2435, column: 3, scope: !9133)
!9133 = distinct !DILexicalBlock(scope: !9128, file: !3, line: 2434, column: 36)
!9134 = !DILocation(line: 2438, column: 3, scope: !9133)
!9135 = !DILocation(line: 2438, column: 7, scope: !9133)
!9136 = !DILocation(line: 2438, column: 16, scope: !9133)
!9137 = !DILocation(line: 2439, column: 3, scope: !9133)
!9138 = !DILocation(line: 2442, column: 37, scope: !9112)
!9139 = !DILocation(line: 2442, column: 41, scope: !9112)
!9140 = !DILocation(line: 2442, column: 51, scope: !9112)
!9141 = !DILocation(line: 2442, column: 2, scope: !9112)
!9142 = !DILocation(line: 2443, column: 41, scope: !9112)
!9143 = !DILocation(line: 2443, column: 45, scope: !9112)
!9144 = !DILocation(line: 2443, column: 55, scope: !9112)
!9145 = !DILocation(line: 2443, column: 2, scope: !9112)
!9146 = !DILocation(line: 2446, column: 2, scope: !9112)
!9147 = !DILocation(line: 2447, column: 1, scope: !9112)
!9148 = distinct !DISubprogram(name: "IS_ERR", scope: !9149, file: !9149, line: 34, type: !9150, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!9149 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!9150 = !DISubroutineType(types: !9151)
!9151 = !{!1011, !4027}
!9152 = !DILocalVariable(name: "ptr", arg: 1, scope: !9148, file: !9149, line: 34, type: !4027)
!9153 = !DILocation(line: 34, column: 60, scope: !9148)
!9154 = !DILocation(line: 36, column: 9, scope: !9148)
!9155 = !DILocation(line: 36, column: 2, scope: !9148)
!9156 = distinct !DISubprogram(name: "mtip_hw_get_identify", scope: !3, file: !3, line: 2805, type: !6387, scopeLine: 2806, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!9157 = !DILocalVariable(name: "dd", arg: 1, scope: !9156, file: !3, line: 2805, type: !945)
!9158 = !DILocation(line: 2805, column: 53, scope: !9156)
!9159 = !DILocalVariable(name: "attr242", scope: !9156, file: !3, line: 2807, type: !6231)
!9160 = !DILocation(line: 2807, column: 20, scope: !9156)
!9161 = !DILocalVariable(name: "buf", scope: !9156, file: !3, line: 2808, type: !1818)
!9162 = !DILocation(line: 2808, column: 17, scope: !9156)
!9163 = !DILocalVariable(name: "rv", scope: !9156, file: !3, line: 2809, type: !443)
!9164 = !DILocation(line: 2809, column: 6, scope: !9156)
!9165 = !DILocation(line: 2811, column: 24, scope: !9166)
!9166 = distinct !DILexicalBlock(scope: !9156, file: !3, line: 2811, column: 6)
!9167 = !DILocation(line: 2811, column: 28, scope: !9166)
!9168 = !DILocation(line: 2811, column: 6, scope: !9166)
!9169 = !DILocation(line: 2811, column: 40, scope: !9166)
!9170 = !DILocation(line: 2811, column: 6, scope: !9156)
!9171 = !DILocation(line: 2812, column: 3, scope: !9166)
!9172 = !DILocation(line: 2814, column: 8, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9156, file: !3, line: 2814, column: 6)
!9174 = !DILocation(line: 2814, column: 12, scope: !9173)
!9175 = !DILocation(line: 2814, column: 18, scope: !9173)
!9176 = !DILocation(line: 2814, column: 27, scope: !9173)
!9177 = !DILocation(line: 2814, column: 6, scope: !9173)
!9178 = !DILocation(line: 2814, column: 54, scope: !9173)
!9179 = !DILocation(line: 2814, column: 6, scope: !9156)
!9180 = !DILocation(line: 2816, column: 33, scope: !9181)
!9181 = distinct !DILexicalBlock(scope: !9173, file: !3, line: 2815, column: 27)
!9182 = !DILocation(line: 2816, column: 37, scope: !9181)
!9183 = !DILocation(line: 2816, column: 43, scope: !9181)
!9184 = !DILocation(line: 2816, column: 3, scope: !9181)
!9185 = !DILocation(line: 2817, column: 3, scope: !9181)
!9186 = !DILocation(line: 2819, column: 21, scope: !9156)
!9187 = !DILocation(line: 2819, column: 25, scope: !9156)
!9188 = !DILocation(line: 2819, column: 2, scope: !9156)
!9189 = !DILocation(line: 2822, column: 26, scope: !9156)
!9190 = !DILocation(line: 2822, column: 30, scope: !9156)
!9191 = !DILocation(line: 2823, column: 5, scope: !9156)
!9192 = !DILocation(line: 2823, column: 9, scope: !9156)
!9193 = !DILocation(line: 2823, column: 15, scope: !9156)
!9194 = !DILocation(line: 2824, column: 5, scope: !9156)
!9195 = !DILocation(line: 2824, column: 9, scope: !9156)
!9196 = !DILocation(line: 2824, column: 15, scope: !9156)
!9197 = !DILocation(line: 2822, column: 7, scope: !9156)
!9198 = !DILocation(line: 2822, column: 5, scope: !9156)
!9199 = !DILocation(line: 2825, column: 6, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9156, file: !3, line: 2825, column: 6)
!9201 = !DILocation(line: 2825, column: 6, scope: !9156)
!9202 = !DILocation(line: 2826, column: 3, scope: !9203)
!9203 = distinct !DILexicalBlock(scope: !9200, file: !3, line: 2825, column: 10)
!9204 = !DILocation(line: 2829, column: 2, scope: !9203)
!9205 = !DILocation(line: 2830, column: 26, scope: !9206)
!9206 = distinct !DILexicalBlock(scope: !9200, file: !3, line: 2829, column: 9)
!9207 = !DILocation(line: 2830, column: 30, scope: !9206)
!9208 = !DILocation(line: 2830, column: 36, scope: !9206)
!9209 = !DILocation(line: 2830, column: 9, scope: !9206)
!9210 = !DILocation(line: 2830, column: 7, scope: !9206)
!9211 = !DILocation(line: 2831, column: 7, scope: !9212)
!9212 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 2831, column: 7)
!9213 = !DILocation(line: 2831, column: 16, scope: !9212)
!9214 = !DILocation(line: 2831, column: 7, scope: !9206)
!9215 = !DILocation(line: 2832, column: 4, scope: !9216)
!9216 = distinct !DILexicalBlock(scope: !9212, file: !3, line: 2831, column: 23)
!9217 = !DILocation(line: 2834, column: 41, scope: !9216)
!9218 = !DILocation(line: 2834, column: 45, scope: !9216)
!9219 = !DILocation(line: 2834, column: 4, scope: !9216)
!9220 = !DILocation(line: 2835, column: 3, scope: !9216)
!9221 = !DILocation(line: 2836, column: 7, scope: !9222)
!9222 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 2836, column: 7)
!9223 = !DILocation(line: 2836, column: 16, scope: !9222)
!9224 = !DILocation(line: 2836, column: 7, scope: !9206)
!9225 = !DILocation(line: 2837, column: 4, scope: !9226)
!9226 = distinct !DILexicalBlock(scope: !9222, file: !3, line: 2836, column: 25)
!9227 = !DILocation(line: 2839, column: 37, scope: !9226)
!9228 = !DILocation(line: 2839, column: 41, scope: !9226)
!9229 = !DILocation(line: 2839, column: 4, scope: !9226)
!9230 = !DILocation(line: 2840, column: 3, scope: !9226)
!9231 = !DILocation(line: 2841, column: 7, scope: !9232)
!9232 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 2841, column: 7)
!9233 = !DILocation(line: 2841, column: 16, scope: !9232)
!9234 = !DILocation(line: 2841, column: 7, scope: !9206)
!9235 = !DILocation(line: 2842, column: 4, scope: !9236)
!9236 = distinct !DILexicalBlock(scope: !9232, file: !3, line: 2841, column: 25)
!9237 = !DILocation(line: 2844, column: 42, scope: !9236)
!9238 = !DILocation(line: 2844, column: 46, scope: !9236)
!9239 = !DILocation(line: 2844, column: 4, scope: !9236)
!9240 = !DILocation(line: 2845, column: 3, scope: !9236)
!9241 = !DILocation(line: 2849, column: 2, scope: !9156)
!9242 = !DILocation(line: 2850, column: 26, scope: !9243)
!9243 = distinct !DILexicalBlock(scope: !9156, file: !3, line: 2850, column: 6)
!9244 = !DILocation(line: 2850, column: 30, scope: !9243)
!9245 = !DILocation(line: 2850, column: 6, scope: !9243)
!9246 = !DILocation(line: 2850, column: 6, scope: !9156)
!9247 = !DILocation(line: 2851, column: 3, scope: !9243)
!9248 = !DILocation(line: 2854, column: 3, scope: !9243)
!9249 = !DILocation(line: 2858, column: 9, scope: !9156)
!9250 = !DILocation(line: 2858, column: 2, scope: !9156)
!9251 = !DILocation(line: 2859, column: 1, scope: !9156)
!9252 = distinct !DISubprogram(name: "dma_set_max_seg_size", scope: !6402, file: !6402, line: 459, type: !9253, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!9253 = !DISubroutineType(types: !9254)
!9254 = !{!443, !1960, !7}
!9255 = !DILocalVariable(name: "dev", arg: 1, scope: !9252, file: !6402, line: 459, type: !1960)
!9256 = !DILocation(line: 459, column: 55, scope: !9252)
!9257 = !DILocalVariable(name: "size", arg: 2, scope: !9252, file: !6402, line: 459, type: !7)
!9258 = !DILocation(line: 459, column: 73, scope: !9252)
!9259 = !DILocation(line: 461, column: 6, scope: !9260)
!9260 = distinct !DILexicalBlock(scope: !9252, file: !6402, line: 461, column: 6)
!9261 = !DILocation(line: 461, column: 11, scope: !9260)
!9262 = !DILocation(line: 461, column: 6, scope: !9252)
!9263 = !DILocation(line: 462, column: 38, scope: !9264)
!9264 = distinct !DILexicalBlock(scope: !9260, file: !6402, line: 461, column: 22)
!9265 = !DILocation(line: 462, column: 3, scope: !9264)
!9266 = !DILocation(line: 462, column: 8, scope: !9264)
!9267 = !DILocation(line: 462, column: 19, scope: !9264)
!9268 = !DILocation(line: 462, column: 36, scope: !9264)
!9269 = !DILocation(line: 463, column: 3, scope: !9264)
!9270 = !DILocation(line: 465, column: 2, scope: !9252)
!9271 = !DILocation(line: 466, column: 1, scope: !9252)
!9272 = distinct !DISubprogram(name: "mtip_hw_get_capacity", scope: !3, file: !3, line: 1382, type: !9273, scopeLine: 1383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!9273 = !DISubroutineType(types: !9274)
!9274 = !{!1011, !945, !1977}
!9275 = !DILocalVariable(name: "dd", arg: 1, scope: !9272, file: !3, line: 1382, type: !945)
!9276 = !DILocation(line: 1382, column: 54, scope: !9272)
!9277 = !DILocalVariable(name: "sectors", arg: 2, scope: !9272, file: !3, line: 1382, type: !1977)
!9278 = !DILocation(line: 1382, column: 68, scope: !9272)
!9279 = !DILocalVariable(name: "port", scope: !9272, file: !3, line: 1384, type: !6168)
!9280 = !DILocation(line: 1384, column: 20, scope: !9272)
!9281 = !DILocation(line: 1384, column: 27, scope: !9272)
!9282 = !DILocation(line: 1384, column: 31, scope: !9272)
!9283 = !DILocalVariable(name: "total", scope: !9272, file: !3, line: 1385, type: !987)
!9284 = !DILocation(line: 1385, column: 6, scope: !9272)
!9285 = !DILocalVariable(name: "raw0", scope: !9272, file: !3, line: 1385, type: !987)
!9286 = !DILocation(line: 1385, column: 13, scope: !9272)
!9287 = !DILocalVariable(name: "raw1", scope: !9272, file: !3, line: 1385, type: !987)
!9288 = !DILocation(line: 1385, column: 19, scope: !9272)
!9289 = !DILocalVariable(name: "raw2", scope: !9272, file: !3, line: 1385, type: !987)
!9290 = !DILocation(line: 1385, column: 25, scope: !9272)
!9291 = !DILocalVariable(name: "raw3", scope: !9272, file: !3, line: 1385, type: !987)
!9292 = !DILocation(line: 1385, column: 31, scope: !9272)
!9293 = !DILocation(line: 1386, column: 9, scope: !9272)
!9294 = !DILocation(line: 1386, column: 15, scope: !9272)
!9295 = !DILocation(line: 1386, column: 7, scope: !9272)
!9296 = !DILocation(line: 1387, column: 9, scope: !9272)
!9297 = !DILocation(line: 1387, column: 15, scope: !9272)
!9298 = !DILocation(line: 1387, column: 7, scope: !9272)
!9299 = !DILocation(line: 1388, column: 9, scope: !9272)
!9300 = !DILocation(line: 1388, column: 15, scope: !9272)
!9301 = !DILocation(line: 1388, column: 7, scope: !9272)
!9302 = !DILocation(line: 1389, column: 9, scope: !9272)
!9303 = !DILocation(line: 1389, column: 15, scope: !9272)
!9304 = !DILocation(line: 1389, column: 7, scope: !9272)
!9305 = !DILocation(line: 1390, column: 10, scope: !9272)
!9306 = !DILocation(line: 1390, column: 17, scope: !9272)
!9307 = !DILocation(line: 1390, column: 21, scope: !9272)
!9308 = !DILocation(line: 1390, column: 15, scope: !9272)
!9309 = !DILocation(line: 1390, column: 28, scope: !9272)
!9310 = !DILocation(line: 1390, column: 32, scope: !9272)
!9311 = !DILocation(line: 1390, column: 26, scope: !9272)
!9312 = !DILocation(line: 1390, column: 39, scope: !9272)
!9313 = !DILocation(line: 1390, column: 43, scope: !9272)
!9314 = !DILocation(line: 1390, column: 37, scope: !9272)
!9315 = !DILocation(line: 1390, column: 8, scope: !9272)
!9316 = !DILocation(line: 1391, column: 13, scope: !9272)
!9317 = !DILocation(line: 1391, column: 3, scope: !9272)
!9318 = !DILocation(line: 1391, column: 11, scope: !9272)
!9319 = !DILocation(line: 1392, column: 18, scope: !9272)
!9320 = !DILocation(line: 1392, column: 24, scope: !9272)
!9321 = !DILocation(line: 1392, column: 17, scope: !9272)
!9322 = !DILocation(line: 1392, column: 16, scope: !9272)
!9323 = !DILocation(line: 1392, column: 2, scope: !9272)
!9324 = distinct !DISubprogram(name: "set_capacity", scope: !954, file: !954, line: 333, type: !9325, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!9325 = !DISubroutineType(types: !9326)
!9326 = !{null, !952, !986}
!9327 = !DILocalVariable(name: "disk", arg: 1, scope: !9324, file: !954, line: 333, type: !952)
!9328 = !DILocation(line: 333, column: 49, scope: !9324)
!9329 = !DILocalVariable(name: "size", arg: 2, scope: !9324, file: !954, line: 333, type: !986)
!9330 = !DILocation(line: 333, column: 64, scope: !9324)
!9331 = !DILocation(line: 335, column: 25, scope: !9324)
!9332 = !DILocation(line: 335, column: 2, scope: !9324)
!9333 = !DILocation(line: 335, column: 8, scope: !9324)
!9334 = !DILocation(line: 335, column: 14, scope: !9324)
!9335 = !DILocation(line: 335, column: 23, scope: !9324)
!9336 = !DILocation(line: 336, column: 1, scope: !9324)
!9337 = distinct !DISubprogram(name: "mtip_hw_sysfs_init", scope: !3, file: !3, line: 2397, type: !9338, scopeLine: 2398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!9338 = !DISubroutineType(types: !9339)
!9339 = !{!443, !945, !1028}
!9340 = !DILocalVariable(name: "dd", arg: 1, scope: !9337, file: !3, line: 2397, type: !945)
!9341 = !DILocation(line: 2397, column: 51, scope: !9337)
!9342 = !DILocalVariable(name: "kobj", arg: 2, scope: !9337, file: !3, line: 2397, type: !1028)
!9343 = !DILocation(line: 2397, column: 71, scope: !9337)
!9344 = !DILocation(line: 2399, column: 7, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !9337, file: !3, line: 2399, column: 6)
!9346 = !DILocation(line: 2399, column: 12, scope: !9345)
!9347 = !DILocation(line: 2399, column: 16, scope: !9345)
!9348 = !DILocation(line: 2399, column: 6, scope: !9337)
!9349 = !DILocation(line: 2400, column: 3, scope: !9345)
!9350 = !DILocation(line: 2402, column: 24, scope: !9351)
!9351 = distinct !DILexicalBlock(scope: !9337, file: !3, line: 2402, column: 6)
!9352 = !DILocation(line: 2402, column: 6, scope: !9351)
!9353 = !DILocation(line: 2402, column: 6, scope: !9337)
!9354 = !DILocation(line: 2403, column: 3, scope: !9351)
!9355 = !DILocation(line: 2405, column: 2, scope: !9337)
!9356 = !DILocation(line: 2406, column: 1, scope: !9337)
!9357 = distinct !DISubprogram(name: "mtip_service_thread", scope: !3, file: !3, line: 2631, type: !9358, scopeLine: 2632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!9358 = !DISubroutineType(types: !9359)
!9359 = !{!443, !890}
!9360 = !DILocation(line: 23, column: 61, scope: !6967, inlinedAt: !9361)
!9361 = distinct !DILocation(line: 28, column: 9, scope: !6975, inlinedAt: !9362)
!9362 = distinct !DILocation(line: 2679, column: 8, scope: !9363)
!9363 = distinct !DILexicalBlock(scope: !9364, file: !3, line: 2679, column: 8)
!9364 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 2671, column: 54)
!9365 = distinct !DILexicalBlock(scope: !9366, file: !3, line: 2671, column: 7)
!9366 = distinct !DILexicalBlock(scope: !9357, file: !3, line: 2638, column: 12)
!9367 = !DILocation(line: 69, column: 73, scope: !6980, inlinedAt: !9368)
!9368 = distinct !DILocation(line: 27, column: 2, scope: !6975, inlinedAt: !9362)
!9369 = !DILocation(line: 69, column: 83, scope: !6980, inlinedAt: !9368)
!9370 = !DILocation(line: 25, column: 29, scope: !6975, inlinedAt: !9362)
!9371 = !DILocation(line: 23, column: 61, scope: !6967, inlinedAt: !9372)
!9372 = distinct !DILocation(line: 28, column: 9, scope: !6975, inlinedAt: !9373)
!9373 = distinct !DILocation(line: 2676, column: 13, scope: !9364)
!9374 = !DILocation(line: 69, column: 73, scope: !6980, inlinedAt: !9375)
!9375 = distinct !DILocation(line: 27, column: 2, scope: !6975, inlinedAt: !9373)
!9376 = !DILocation(line: 69, column: 83, scope: !6980, inlinedAt: !9375)
!9377 = !DILocation(line: 25, column: 29, scope: !6975, inlinedAt: !9373)
!9378 = !DILocation(line: 363, column: 74, scope: !7001, inlinedAt: !9379)
!9379 = distinct !DILocation(line: 2672, column: 19, scope: !9364)
!9380 = !DILocalVariable(name: "data", arg: 1, scope: !9357, file: !3, line: 2631, type: !890)
!9381 = !DILocation(line: 2631, column: 38, scope: !9357)
!9382 = !DILocalVariable(name: "dd", scope: !9357, file: !3, line: 2633, type: !945)
!9383 = !DILocation(line: 2633, column: 22, scope: !9357)
!9384 = !DILocation(line: 2633, column: 49, scope: !9357)
!9385 = !DILocation(line: 2633, column: 27, scope: !9357)
!9386 = !DILocalVariable(name: "slot", scope: !9357, file: !3, line: 2634, type: !898)
!9387 = !DILocation(line: 2634, column: 16, scope: !9357)
!9388 = !DILocalVariable(name: "slot_start", scope: !9357, file: !3, line: 2634, type: !898)
!9389 = !DILocation(line: 2634, column: 22, scope: !9357)
!9390 = !DILocalVariable(name: "slot_wrap", scope: !9357, file: !3, line: 2634, type: !898)
!9391 = !DILocation(line: 2634, column: 34, scope: !9357)
!9392 = !DILocalVariable(name: "to", scope: !9357, file: !3, line: 2634, type: !898)
!9393 = !DILocation(line: 2634, column: 45, scope: !9357)
!9394 = !DILocalVariable(name: "num_cmd_slots", scope: !9357, file: !3, line: 2635, type: !7)
!9395 = !DILocation(line: 2635, column: 15, scope: !9357)
!9396 = !DILocation(line: 2635, column: 31, scope: !9357)
!9397 = !DILocation(line: 2635, column: 35, scope: !9357)
!9398 = !DILocation(line: 2635, column: 47, scope: !9357)
!9399 = !DILocalVariable(name: "port", scope: !9357, file: !3, line: 2636, type: !6168)
!9400 = !DILocation(line: 2636, column: 20, scope: !9357)
!9401 = !DILocation(line: 2636, column: 27, scope: !9357)
!9402 = !DILocation(line: 2636, column: 31, scope: !9357)
!9403 = !DILocation(line: 2638, column: 2, scope: !9357)
!9404 = !DILocation(line: 2639, column: 7, scope: !9405)
!9405 = distinct !DILexicalBlock(scope: !9366, file: !3, line: 2639, column: 7)
!9406 = !DILocation(line: 2639, column: 29, scope: !9405)
!9407 = !DILocation(line: 2640, column: 40, scope: !9405)
!9408 = !DILocation(line: 2640, column: 46, scope: !9405)
!9409 = !DILocation(line: 2640, column: 4, scope: !9405)
!9410 = !DILocation(line: 2639, column: 7, scope: !9366)
!9411 = !DILocation(line: 2641, column: 4, scope: !9405)
!9412 = !DILocation(line: 2642, column: 42, scope: !9366)
!9413 = !DILocation(line: 2642, column: 48, scope: !9366)
!9414 = !DILocation(line: 2642, column: 3, scope: !9366)
!9415 = !DILocalVariable(name: "__ret", scope: !9416, file: !3, line: 2648, type: !443)
!9416 = distinct !DILexicalBlock(scope: !9366, file: !3, line: 2648, column: 3)
!9417 = !DILocation(line: 2648, column: 3, scope: !9416)
!9418 = !DILocation(line: 2648, column: 3, scope: !9419)
!9419 = distinct !DILexicalBlock(scope: !9416, file: !3, line: 2648, column: 3)
!9420 = !DILocation(line: 2648, column: 3, scope: !9421)
!9421 = distinct !DILexicalBlock(scope: !9419, file: !3, line: 2648, column: 3)
!9422 = !DILocation(line: 2648, column: 3, scope: !9423)
!9423 = distinct !DILexicalBlock(scope: !9416, file: !3, line: 2648, column: 3)
!9424 = !DILocalVariable(name: "__wq_entry", scope: !9425, file: !3, line: 2648, type: !1713)
!9425 = distinct !DILexicalBlock(scope: !9423, file: !3, line: 2648, column: 3)
!9426 = !DILocation(line: 2648, column: 3, scope: !9425)
!9427 = !DILocalVariable(name: "__ret", scope: !9425, file: !3, line: 2648, type: !175)
!9428 = !DILocalVariable(name: "__int", scope: !9429, file: !3, line: 2648, type: !175)
!9429 = distinct !DILexicalBlock(scope: !9430, file: !3, line: 2648, column: 3)
!9430 = distinct !DILexicalBlock(scope: !9431, file: !3, line: 2648, column: 3)
!9431 = distinct !DILexicalBlock(scope: !9425, file: !3, line: 2648, column: 3)
!9432 = !DILocation(line: 2648, column: 3, scope: !9429)
!9433 = !DILocation(line: 2648, column: 3, scope: !9434)
!9434 = distinct !DILexicalBlock(scope: !9429, file: !3, line: 2648, column: 3)
!9435 = !DILocation(line: 2648, column: 3, scope: !9436)
!9436 = distinct !DILexicalBlock(scope: !9429, file: !3, line: 2648, column: 3)
!9437 = !DILocation(line: 2648, column: 3, scope: !9438)
!9438 = distinct !DILexicalBlock(scope: !9436, file: !3, line: 2648, column: 3)
!9439 = !DILocation(line: 2648, column: 3, scope: !9430)
!9440 = distinct !{!9440, !9441, !9441}
!9441 = !DILocation(line: 2648, column: 3, scope: !9431)
!9442 = !DILabel(scope: !9425, name: "__out", file: !3, line: 2648)
!9443 = !DILocation(line: 2651, column: 7, scope: !9444)
!9444 = distinct !DILexicalBlock(scope: !9366, file: !3, line: 2651, column: 7)
!9445 = !DILocation(line: 2651, column: 29, scope: !9444)
!9446 = !DILocation(line: 2652, column: 40, scope: !9444)
!9447 = !DILocation(line: 2652, column: 46, scope: !9444)
!9448 = !DILocation(line: 2652, column: 4, scope: !9444)
!9449 = !DILocation(line: 2651, column: 7, scope: !9366)
!9450 = !DILocation(line: 2653, column: 4, scope: !9444)
!9451 = !DILocation(line: 2655, column: 7, scope: !9452)
!9452 = distinct !DILexicalBlock(scope: !9366, file: !3, line: 2655, column: 7)
!9453 = !DILocation(line: 2655, column: 7, scope: !9366)
!9454 = !DILocation(line: 2657, column: 4, scope: !9452)
!9455 = !DILocation(line: 2659, column: 40, scope: !9366)
!9456 = !DILocation(line: 2659, column: 46, scope: !9366)
!9457 = !DILocation(line: 2659, column: 3, scope: !9366)
!9458 = !DILabel(scope: !9366, name: "restart_eh", file: !3, line: 2661)
!9459 = !DILocation(line: 2661, column: 1, scope: !9366)
!9460 = !DILocation(line: 2663, column: 40, scope: !9461)
!9461 = distinct !DILexicalBlock(scope: !9366, file: !3, line: 2663, column: 7)
!9462 = !DILocation(line: 2663, column: 46, scope: !9461)
!9463 = !DILocation(line: 2663, column: 7, scope: !9461)
!9464 = !DILocation(line: 2663, column: 7, scope: !9366)
!9465 = !DILocation(line: 2664, column: 20, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9461, file: !3, line: 2663, column: 54)
!9467 = !DILocation(line: 2664, column: 4, scope: !9466)
!9468 = !DILocation(line: 2665, column: 38, scope: !9466)
!9469 = !DILocation(line: 2665, column: 44, scope: !9466)
!9470 = !DILocation(line: 2665, column: 4, scope: !9466)
!9471 = !DILocation(line: 2666, column: 3, scope: !9466)
!9472 = !DILocation(line: 2668, column: 40, scope: !9473)
!9473 = distinct !DILexicalBlock(scope: !9366, file: !3, line: 2668, column: 7)
!9474 = !DILocation(line: 2668, column: 46, scope: !9473)
!9475 = !DILocation(line: 2668, column: 7, scope: !9473)
!9476 = !DILocation(line: 2668, column: 7, scope: !9366)
!9477 = !DILocation(line: 2669, column: 4, scope: !9473)
!9478 = !DILocation(line: 2671, column: 40, scope: !9365)
!9479 = !DILocation(line: 2671, column: 46, scope: !9365)
!9480 = !DILocation(line: 2671, column: 7, scope: !9365)
!9481 = !DILocation(line: 2671, column: 7, scope: !9366)
!9482 = !DILocation(line: 2672, column: 9, scope: !9364)
!9483 = !DILocation(line: 365, column: 27, scope: !7071, inlinedAt: !9379)
!9484 = !DILocation(line: 365, column: 6, scope: !7071, inlinedAt: !9379)
!9485 = !DILocation(line: 365, column: 6, scope: !7001, inlinedAt: !9379)
!9486 = !DILocation(line: 366, column: 12, scope: !7075, inlinedAt: !9379)
!9487 = !DILocation(line: 366, column: 14, scope: !7075, inlinedAt: !9379)
!9488 = !DILocation(line: 366, column: 7, scope: !7076, inlinedAt: !9379)
!9489 = !DILocation(line: 367, column: 4, scope: !7075, inlinedAt: !9379)
!9490 = !DILocation(line: 368, column: 28, scope: !7076, inlinedAt: !9379)
!9491 = !DILocation(line: 368, column: 10, scope: !7076, inlinedAt: !9379)
!9492 = !DILocation(line: 368, column: 3, scope: !7076, inlinedAt: !9379)
!9493 = !DILocation(line: 370, column: 29, scope: !7084, inlinedAt: !9379)
!9494 = !DILocation(line: 370, column: 10, scope: !7084, inlinedAt: !9379)
!9495 = !DILocation(line: 370, column: 3, scope: !7084, inlinedAt: !9379)
!9496 = !DILocation(line: 372, column: 1, scope: !7001, inlinedAt: !9379)
!9497 = !DILocation(line: 2672, column: 17, scope: !9364)
!9498 = !DILocation(line: 2672, column: 7, scope: !9364)
!9499 = !DILocation(line: 2674, column: 4, scope: !9364)
!9500 = !DILocalVariable(name: "__ms", scope: !9501, file: !3, line: 2675, type: !898)
!9501 = distinct !DILexicalBlock(scope: !9502, file: !3, line: 2675, column: 5)
!9502 = distinct !DILexicalBlock(scope: !9364, file: !3, line: 2674, column: 7)
!9503 = !DILocation(line: 2675, column: 5, scope: !9501)
!9504 = !DILocation(line: 2675, column: 5, scope: !9505)
!9505 = distinct !DILexicalBlock(scope: !9506, file: !3, line: 2675, column: 5)
!9506 = distinct !DILexicalBlock(scope: !9507, file: !3, line: 2675, column: 5)
!9507 = distinct !DILexicalBlock(scope: !9508, file: !3, line: 2675, column: 5)
!9508 = distinct !DILexicalBlock(scope: !9501, file: !3, line: 2675, column: 5)
!9509 = distinct !{!9509, !9503, !9503}
!9510 = !DILocation(line: 2676, column: 4, scope: !9502)
!9511 = !DILocation(line: 2676, column: 26, scope: !9364)
!9512 = !DILocation(line: 2676, column: 30, scope: !9364)
!9513 = !DILocation(line: 27, column: 25, scope: !6975, inlinedAt: !9373)
!9514 = !DILocation(line: 71, column: 19, scope: !6980, inlinedAt: !9375)
!9515 = !DILocation(line: 71, column: 22, scope: !6980, inlinedAt: !9375)
!9516 = !DILocation(line: 71, column: 2, scope: !6980, inlinedAt: !9375)
!9517 = !DILocation(line: 72, column: 2, scope: !6980, inlinedAt: !9375)
!9518 = !DILocation(line: 28, column: 26, scope: !6975, inlinedAt: !9373)
!9519 = !DILocation(line: 29, column: 9, scope: !6967, inlinedAt: !9372)
!9520 = !DILocation(line: 2676, column: 50, scope: !9364)
!9521 = !DILocation(line: 2676, column: 55, scope: !9364)
!9522 = !DILocation(line: 2677, column: 5, scope: !9364)
!9523 = !DILocation(line: 0, scope: !9364)
!9524 = distinct !{!9524, !9499, !9525}
!9525 = !DILocation(line: 2677, column: 29, scope: !9364)
!9526 = !DILocation(line: 2679, column: 21, scope: !9363)
!9527 = !DILocation(line: 2679, column: 25, scope: !9363)
!9528 = !DILocation(line: 27, column: 25, scope: !6975, inlinedAt: !9362)
!9529 = !DILocation(line: 71, column: 19, scope: !6980, inlinedAt: !9368)
!9530 = !DILocation(line: 71, column: 22, scope: !6980, inlinedAt: !9368)
!9531 = !DILocation(line: 71, column: 2, scope: !6980, inlinedAt: !9368)
!9532 = !DILocation(line: 72, column: 2, scope: !6980, inlinedAt: !9368)
!9533 = !DILocation(line: 28, column: 26, scope: !6975, inlinedAt: !9362)
!9534 = !DILocation(line: 29, column: 9, scope: !6967, inlinedAt: !9361)
!9535 = !DILocation(line: 2679, column: 45, scope: !9363)
!9536 = !DILocation(line: 2679, column: 8, scope: !9364)
!9537 = !DILocation(line: 2680, column: 5, scope: !9363)
!9538 = !DILocation(line: 2683, column: 25, scope: !9364)
!9539 = !DILocation(line: 2683, column: 29, scope: !9364)
!9540 = !DILocation(line: 2683, column: 4, scope: !9364)
!9541 = !DILocation(line: 2685, column: 29, scope: !9364)
!9542 = !DILocation(line: 2685, column: 33, scope: !9364)
!9543 = !DILocation(line: 2685, column: 55, scope: !9364)
!9544 = !DILocation(line: 2685, column: 4, scope: !9364)
!9545 = !DILocation(line: 2687, column: 37, scope: !9364)
!9546 = !DILocation(line: 2687, column: 41, scope: !9364)
!9547 = !DILocation(line: 2687, column: 47, scope: !9364)
!9548 = !DILocation(line: 2687, column: 4, scope: !9364)
!9549 = !DILocation(line: 2689, column: 26, scope: !9550)
!9550 = distinct !DILexicalBlock(scope: !9364, file: !3, line: 2689, column: 8)
!9551 = !DILocation(line: 2689, column: 8, scope: !9550)
!9552 = !DILocation(line: 2689, column: 8, scope: !9364)
!9553 = !DILocation(line: 2690, column: 30, scope: !9550)
!9554 = !DILocation(line: 2690, column: 34, scope: !9550)
!9555 = !DILocation(line: 2691, column: 24, scope: !9550)
!9556 = !DILocation(line: 2690, column: 5, scope: !9550)
!9557 = !DILocation(line: 2693, column: 38, scope: !9364)
!9558 = !DILocation(line: 2693, column: 42, scope: !9364)
!9559 = !DILocation(line: 2693, column: 48, scope: !9364)
!9560 = !DILocation(line: 2693, column: 4, scope: !9364)
!9561 = !DILocation(line: 2695, column: 27, scope: !9364)
!9562 = !DILocation(line: 2695, column: 31, scope: !9364)
!9563 = !DILocation(line: 2695, column: 4, scope: !9364)
!9564 = !DILocation(line: 2696, column: 3, scope: !9364)
!9565 = !DILocation(line: 2698, column: 41, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9366, file: !3, line: 2698, column: 7)
!9567 = !DILocation(line: 2698, column: 47, scope: !9566)
!9568 = !DILocation(line: 2698, column: 7, scope: !9566)
!9569 = !DILocation(line: 2698, column: 7, scope: !9366)
!9570 = !DILocation(line: 2699, column: 9, scope: !9571)
!9571 = distinct !DILexicalBlock(scope: !9566, file: !3, line: 2698, column: 55)
!9572 = !DILocation(line: 2701, column: 17, scope: !9571)
!9573 = !DILocation(line: 2701, column: 15, scope: !9571)
!9574 = !DILocation(line: 2702, column: 14, scope: !9571)
!9575 = !DILocation(line: 2703, column: 4, scope: !9571)
!9576 = !DILocation(line: 2704, column: 26, scope: !9577)
!9577 = distinct !DILexicalBlock(scope: !9571, file: !3, line: 2703, column: 14)
!9578 = !DILocation(line: 2704, column: 32, scope: !9577)
!9579 = !DILocation(line: 2705, column: 7, scope: !9577)
!9580 = !DILocation(line: 2705, column: 22, scope: !9577)
!9581 = !DILocation(line: 2704, column: 12, scope: !9577)
!9582 = !DILocation(line: 2704, column: 10, scope: !9577)
!9583 = !DILocation(line: 2706, column: 9, scope: !9584)
!9584 = distinct !DILexicalBlock(scope: !9577, file: !3, line: 2706, column: 9)
!9585 = !DILocation(line: 2706, column: 19, scope: !9584)
!9586 = !DILocation(line: 2706, column: 9, scope: !9577)
!9587 = !DILocation(line: 2707, column: 11, scope: !9588)
!9588 = distinct !DILexicalBlock(scope: !9589, file: !3, line: 2707, column: 10)
!9589 = distinct !DILexicalBlock(scope: !9584, file: !3, line: 2706, column: 25)
!9590 = !DILocation(line: 2707, column: 25, scope: !9588)
!9591 = !DILocation(line: 2707, column: 22, scope: !9588)
!9592 = !DILocation(line: 2707, column: 31, scope: !9588)
!9593 = !DILocation(line: 2708, column: 8, scope: !9588)
!9594 = !DILocation(line: 2708, column: 16, scope: !9588)
!9595 = !DILocation(line: 2708, column: 13, scope: !9588)
!9596 = !DILocation(line: 2707, column: 10, scope: !9589)
!9597 = !DILocation(line: 2709, column: 7, scope: !9588)
!9598 = !DILocation(line: 2710, column: 5, scope: !9589)
!9599 = !DILocation(line: 2711, column: 9, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9577, file: !3, line: 2711, column: 9)
!9601 = !DILocation(line: 2711, column: 9, scope: !9577)
!9602 = !DILocation(line: 2712, column: 19, scope: !9600)
!9603 = !DILocation(line: 2712, column: 17, scope: !9600)
!9604 = !DILocation(line: 2712, column: 6, scope: !9600)
!9605 = !DILocation(line: 2714, column: 9, scope: !9606)
!9606 = distinct !DILexicalBlock(scope: !9577, file: !3, line: 2714, column: 9)
!9607 = !DILocation(line: 2714, column: 9, scope: !9577)
!9608 = !DILocation(line: 2715, column: 11, scope: !9609)
!9609 = distinct !DILexicalBlock(scope: !9606, file: !3, line: 2714, column: 42)
!9610 = !DILocation(line: 2716, column: 16, scope: !9609)
!9611 = !DILocation(line: 2717, column: 6, scope: !9609)
!9612 = distinct !{!9612, !9575, !9613}
!9613 = !DILocation(line: 2724, column: 4, scope: !9571)
!9614 = !DILocation(line: 2721, column: 28, scope: !9577)
!9615 = !DILocation(line: 2721, column: 34, scope: !9577)
!9616 = !DILocation(line: 2721, column: 5, scope: !9577)
!9617 = !DILocation(line: 2723, column: 15, scope: !9577)
!9618 = !DILocation(line: 2723, column: 21, scope: !9577)
!9619 = !DILocation(line: 2723, column: 27, scope: !9577)
!9620 = !DILocation(line: 2723, column: 5, scope: !9577)
!9621 = !DILocation(line: 2726, column: 39, scope: !9571)
!9622 = !DILocation(line: 2726, column: 45, scope: !9571)
!9623 = !DILocation(line: 2726, column: 4, scope: !9571)
!9624 = !DILocation(line: 2727, column: 3, scope: !9571)
!9625 = !DILocation(line: 2729, column: 38, scope: !9626)
!9626 = distinct !DILexicalBlock(scope: !9366, file: !3, line: 2729, column: 7)
!9627 = !DILocation(line: 2729, column: 44, scope: !9626)
!9628 = !DILocation(line: 2729, column: 7, scope: !9626)
!9629 = !DILocation(line: 2729, column: 7, scope: !9366)
!9630 = !DILocation(line: 2730, column: 30, scope: !9631)
!9631 = distinct !DILexicalBlock(scope: !9632, file: !3, line: 2730, column: 8)
!9632 = distinct !DILexicalBlock(scope: !9626, file: !3, line: 2729, column: 52)
!9633 = !DILocation(line: 2730, column: 8, scope: !9631)
!9634 = !DILocation(line: 2730, column: 34, scope: !9631)
!9635 = !DILocation(line: 2730, column: 8, scope: !9632)
!9636 = !DILocation(line: 2731, column: 37, scope: !9631)
!9637 = !DILocation(line: 2731, column: 43, scope: !9631)
!9638 = !DILocation(line: 2731, column: 5, scope: !9631)
!9639 = !DILocation(line: 2732, column: 3, scope: !9632)
!9640 = distinct !{!9640, !9403, !9641}
!9641 = !DILocation(line: 2733, column: 2, scope: !9357)
!9642 = !DILabel(scope: !9357, name: "st_out", file: !3, line: 2735)
!9643 = !DILocation(line: 2735, column: 1, scope: !9357)
!9644 = !DILocation(line: 2736, column: 2, scope: !9357)
!9645 = distinct !DISubprogram(name: "mtip_hw_debugfs_exit", scope: !3, file: !3, line: 2449, type: !9646, scopeLine: 2450, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!9646 = !DISubroutineType(types: !9647)
!9647 = !{null, !945}
!9648 = !DILocalVariable(name: "dd", arg: 1, scope: !9645, file: !3, line: 2449, type: !945)
!9649 = !DILocation(line: 2449, column: 54, scope: !9645)
!9650 = !DILocation(line: 2451, column: 27, scope: !9645)
!9651 = !DILocation(line: 2451, column: 31, scope: !9645)
!9652 = !DILocation(line: 2451, column: 2, scope: !9645)
!9653 = !DILocation(line: 2452, column: 1, scope: !9645)
!9654 = distinct !DISubprogram(name: "mtip_hw_exit", scope: !3, file: !3, line: 3040, type: !6387, scopeLine: 3041, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!9655 = !DILocalVariable(name: "dd", arg: 1, scope: !9654, file: !3, line: 3040, type: !945)
!9656 = !DILocation(line: 3040, column: 45, scope: !9654)
!9657 = !DILocation(line: 3042, column: 7, scope: !9658)
!9658 = distinct !DILexicalBlock(scope: !9654, file: !3, line: 3042, column: 6)
!9659 = !DILocation(line: 3042, column: 11, scope: !9658)
!9660 = !DILocation(line: 3042, column: 6, scope: !9654)
!9661 = !DILocation(line: 3044, column: 20, scope: !9662)
!9662 = distinct !DILexicalBlock(scope: !9658, file: !3, line: 3042, column: 15)
!9663 = !DILocation(line: 3044, column: 24, scope: !9662)
!9664 = !DILocation(line: 3044, column: 3, scope: !9662)
!9665 = !DILocation(line: 3047, column: 16, scope: !9662)
!9666 = !DILocation(line: 3047, column: 20, scope: !9662)
!9667 = !DILocation(line: 3047, column: 25, scope: !9662)
!9668 = !DILocation(line: 3047, column: 10, scope: !9662)
!9669 = !DILocation(line: 3047, column: 37, scope: !9662)
!9670 = !DILocation(line: 3048, column: 5, scope: !9662)
!9671 = !DILocation(line: 3048, column: 9, scope: !9662)
!9672 = !DILocation(line: 3048, column: 14, scope: !9662)
!9673 = !DILocation(line: 3047, column: 3, scope: !9662)
!9674 = !DILocation(line: 3049, column: 2, scope: !9662)
!9675 = !DILocation(line: 3052, column: 24, scope: !9654)
!9676 = !DILocation(line: 3052, column: 28, scope: !9654)
!9677 = !DILocation(line: 3052, column: 34, scope: !9654)
!9678 = !DILocation(line: 3052, column: 2, scope: !9654)
!9679 = !DILocation(line: 3053, column: 11, scope: !9654)
!9680 = !DILocation(line: 3053, column: 15, scope: !9654)
!9681 = !DILocation(line: 3053, column: 21, scope: !9654)
!9682 = !DILocation(line: 3053, column: 26, scope: !9654)
!9683 = !DILocation(line: 3053, column: 2, scope: !9654)
!9684 = !DILocation(line: 3054, column: 2, scope: !9654)
!9685 = !DILocation(line: 3057, column: 16, scope: !9654)
!9686 = !DILocation(line: 3057, column: 2, scope: !9654)
!9687 = !DILocation(line: 3060, column: 8, scope: !9654)
!9688 = !DILocation(line: 3060, column: 12, scope: !9654)
!9689 = !DILocation(line: 3060, column: 2, scope: !9654)
!9690 = !DILocation(line: 3061, column: 2, scope: !9654)
!9691 = !DILocation(line: 3061, column: 6, scope: !9654)
!9692 = !DILocation(line: 3061, column: 11, scope: !9654)
!9693 = !DILocation(line: 3063, column: 2, scope: !9654)
!9694 = distinct !DISubprogram(name: "mtip_detect_product", scope: !3, file: !3, line: 2489, type: !9646, scopeLine: 2490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!9695 = !DILocalVariable(name: "dd", arg: 1, scope: !9694, file: !3, line: 2489, type: !945)
!9696 = !DILocation(line: 2489, column: 53, scope: !9694)
!9697 = !DILocalVariable(name: "hwdata", scope: !9694, file: !3, line: 2491, type: !938)
!9698 = !DILocation(line: 2491, column: 6, scope: !9694)
!9699 = !DILocalVariable(name: "rev", scope: !9694, file: !3, line: 2492, type: !7)
!9700 = !DILocation(line: 2492, column: 15, scope: !9694)
!9701 = !DILocalVariable(name: "slotgroups", scope: !9694, file: !3, line: 2492, type: !7)
!9702 = !DILocation(line: 2492, column: 20, scope: !9694)
!9703 = !DILocation(line: 2501, column: 17, scope: !9694)
!9704 = !DILocation(line: 2501, column: 21, scope: !9694)
!9705 = !DILocation(line: 2501, column: 26, scope: !9694)
!9706 = !DILocation(line: 2501, column: 11, scope: !9694)
!9707 = !DILocation(line: 2501, column: 9, scope: !9694)
!9708 = !DILocation(line: 2503, column: 2, scope: !9694)
!9709 = !DILocation(line: 2503, column: 6, scope: !9694)
!9710 = !DILocation(line: 2503, column: 19, scope: !9694)
!9711 = !DILocation(line: 2504, column: 2, scope: !9694)
!9712 = !DILocation(line: 2504, column: 6, scope: !9694)
!9713 = !DILocation(line: 2504, column: 18, scope: !9694)
!9714 = !DILocation(line: 2506, column: 6, scope: !9715)
!9715 = distinct !DILexicalBlock(scope: !9694, file: !3, line: 2506, column: 6)
!9716 = !DILocation(line: 2506, column: 13, scope: !9715)
!9717 = !DILocation(line: 2506, column: 6, scope: !9694)
!9718 = !DILocation(line: 2507, column: 3, scope: !9719)
!9719 = distinct !DILexicalBlock(scope: !9715, file: !3, line: 2506, column: 20)
!9720 = !DILocation(line: 2507, column: 7, scope: !9719)
!9721 = !DILocation(line: 2507, column: 20, scope: !9719)
!9722 = !DILocation(line: 2508, column: 10, scope: !9719)
!9723 = !DILocation(line: 2508, column: 17, scope: !9719)
!9724 = !DILocation(line: 2508, column: 32, scope: !9719)
!9725 = !DILocation(line: 2508, column: 7, scope: !9719)
!9726 = !DILocation(line: 2509, column: 17, scope: !9719)
!9727 = !DILocation(line: 2509, column: 24, scope: !9719)
!9728 = !DILocation(line: 2509, column: 44, scope: !9719)
!9729 = !DILocation(line: 2509, column: 14, scope: !9719)
!9730 = !DILocation(line: 2510, column: 3, scope: !9719)
!9731 = !DILocation(line: 2517, column: 7, scope: !9732)
!9732 = distinct !DILexicalBlock(scope: !9719, file: !3, line: 2517, column: 7)
!9733 = !DILocation(line: 2517, column: 18, scope: !9732)
!9734 = !DILocation(line: 2517, column: 7, scope: !9719)
!9735 = !DILocation(line: 2518, column: 4, scope: !9736)
!9736 = distinct !DILexicalBlock(scope: !9732, file: !3, line: 2517, column: 42)
!9737 = !DILocation(line: 2521, column: 15, scope: !9736)
!9738 = !DILocation(line: 2522, column: 3, scope: !9736)
!9739 = !DILocation(line: 2523, column: 21, scope: !9719)
!9740 = !DILocation(line: 2523, column: 3, scope: !9719)
!9741 = !DILocation(line: 2523, column: 7, scope: !9719)
!9742 = !DILocation(line: 2523, column: 19, scope: !9719)
!9743 = !DILocation(line: 2524, column: 3, scope: !9719)
!9744 = !DILocation(line: 2527, column: 2, scope: !9694)
!9745 = !DILocation(line: 2528, column: 1, scope: !9694)
!9746 = distinct !DISubprogram(name: "hba_setup", scope: !3, file: !3, line: 2462, type: !9646, scopeLine: 2463, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!9747 = !DILocalVariable(name: "dd", arg: 1, scope: !9746, file: !3, line: 2462, type: !945)
!9748 = !DILocation(line: 2462, column: 50, scope: !9746)
!9749 = !DILocalVariable(name: "hwdata", scope: !9746, file: !3, line: 2464, type: !938)
!9750 = !DILocation(line: 2464, column: 6, scope: !9746)
!9751 = !DILocation(line: 2465, column: 17, scope: !9746)
!9752 = !DILocation(line: 2465, column: 21, scope: !9746)
!9753 = !DILocation(line: 2465, column: 26, scope: !9746)
!9754 = !DILocation(line: 2465, column: 11, scope: !9746)
!9755 = !DILocation(line: 2465, column: 9, scope: !9746)
!9756 = !DILocation(line: 2468, column: 9, scope: !9746)
!9757 = !DILocation(line: 2468, column: 16, scope: !9746)
!9758 = !DILocation(line: 2469, column: 30, scope: !9746)
!9759 = !DILocation(line: 2471, column: 3, scope: !9746)
!9760 = !DILocation(line: 2471, column: 7, scope: !9746)
!9761 = !DILocation(line: 2471, column: 12, scope: !9746)
!9762 = !DILocation(line: 2468, column: 2, scope: !9746)
!9763 = !DILocation(line: 2472, column: 1, scope: !9746)
!9764 = distinct !DISubprogram(name: "mtip_device_unaligned_constrained", scope: !3, file: !3, line: 2474, type: !6387, scopeLine: 2475, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!9765 = !DILocalVariable(name: "dd", arg: 1, scope: !9764, file: !3, line: 2474, type: !945)
!9766 = !DILocation(line: 2474, column: 66, scope: !9764)
!9767 = !DILocation(line: 2476, column: 10, scope: !9764)
!9768 = !DILocation(line: 2476, column: 14, scope: !9764)
!9769 = !DILocation(line: 2476, column: 20, scope: !9764)
!9770 = !DILocation(line: 2476, column: 27, scope: !9764)
!9771 = !DILocation(line: 2476, column: 2, scope: !9764)
!9772 = distinct !DISubprogram(name: "mtip_dma_alloc", scope: !3, file: !3, line: 2769, type: !6387, scopeLine: 2770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!9773 = !DILocalVariable(name: "dd", arg: 1, scope: !9772, file: !3, line: 2769, type: !945)
!9774 = !DILocation(line: 2769, column: 47, scope: !9772)
!9775 = !DILocalVariable(name: "port", scope: !9772, file: !3, line: 2771, type: !6168)
!9776 = !DILocation(line: 2771, column: 20, scope: !9772)
!9777 = !DILocation(line: 2771, column: 27, scope: !9772)
!9778 = !DILocation(line: 2771, column: 31, scope: !9772)
!9779 = !DILocation(line: 2775, column: 23, scope: !9772)
!9780 = !DILocation(line: 2775, column: 27, scope: !9772)
!9781 = !DILocation(line: 2775, column: 33, scope: !9772)
!9782 = !DILocation(line: 2776, column: 7, scope: !9772)
!9783 = !DILocation(line: 2776, column: 13, scope: !9772)
!9784 = !DILocation(line: 2775, column: 3, scope: !9772)
!9785 = !DILocation(line: 2774, column: 2, scope: !9772)
!9786 = !DILocation(line: 2774, column: 8, scope: !9772)
!9787 = !DILocation(line: 2774, column: 15, scope: !9772)
!9788 = !DILocation(line: 2777, column: 7, scope: !9789)
!9789 = distinct !DILexicalBlock(scope: !9772, file: !3, line: 2777, column: 6)
!9790 = !DILocation(line: 2777, column: 13, scope: !9789)
!9791 = !DILocation(line: 2777, column: 6, scope: !9772)
!9792 = !DILocation(line: 2778, column: 3, scope: !9789)
!9793 = !DILocation(line: 2782, column: 23, scope: !9772)
!9794 = !DILocation(line: 2782, column: 27, scope: !9772)
!9795 = !DILocation(line: 2782, column: 33, scope: !9772)
!9796 = !DILocation(line: 2783, column: 7, scope: !9772)
!9797 = !DILocation(line: 2783, column: 13, scope: !9772)
!9798 = !DILocation(line: 2782, column: 3, scope: !9772)
!9799 = !DILocation(line: 2781, column: 2, scope: !9772)
!9800 = !DILocation(line: 2781, column: 8, scope: !9772)
!9801 = !DILocation(line: 2781, column: 21, scope: !9772)
!9802 = !DILocation(line: 2784, column: 7, scope: !9803)
!9803 = distinct !DILexicalBlock(scope: !9772, file: !3, line: 2784, column: 6)
!9804 = !DILocation(line: 2784, column: 13, scope: !9803)
!9805 = !DILocation(line: 2784, column: 6, scope: !9772)
!9806 = !DILocation(line: 2785, column: 22, scope: !9807)
!9807 = distinct !DILexicalBlock(scope: !9803, file: !3, line: 2784, column: 27)
!9808 = !DILocation(line: 2785, column: 26, scope: !9807)
!9809 = !DILocation(line: 2785, column: 32, scope: !9807)
!9810 = !DILocation(line: 2786, column: 6, scope: !9807)
!9811 = !DILocation(line: 2786, column: 12, scope: !9807)
!9812 = !DILocation(line: 2786, column: 20, scope: !9807)
!9813 = !DILocation(line: 2786, column: 26, scope: !9807)
!9814 = !DILocation(line: 2785, column: 3, scope: !9807)
!9815 = !DILocation(line: 2787, column: 3, scope: !9807)
!9816 = !DILocation(line: 2787, column: 9, scope: !9807)
!9817 = !DILocation(line: 2787, column: 16, scope: !9807)
!9818 = !DILocation(line: 2788, column: 3, scope: !9807)
!9819 = !DILocation(line: 2788, column: 9, scope: !9807)
!9820 = !DILocation(line: 2788, column: 20, scope: !9807)
!9821 = !DILocation(line: 2789, column: 3, scope: !9807)
!9822 = !DILocation(line: 2793, column: 24, scope: !9772)
!9823 = !DILocation(line: 2793, column: 30, scope: !9772)
!9824 = !DILocation(line: 2793, column: 37, scope: !9772)
!9825 = !DILocation(line: 2793, column: 2, scope: !9772)
!9826 = !DILocation(line: 2793, column: 8, scope: !9772)
!9827 = !DILocation(line: 2793, column: 22, scope: !9772)
!9828 = !DILocation(line: 2794, column: 24, scope: !9772)
!9829 = !DILocation(line: 2794, column: 30, scope: !9772)
!9830 = !DILocation(line: 2794, column: 41, scope: !9772)
!9831 = !DILocation(line: 2794, column: 2, scope: !9772)
!9832 = !DILocation(line: 2794, column: 8, scope: !9772)
!9833 = !DILocation(line: 2794, column: 22, scope: !9772)
!9834 = !DILocation(line: 2795, column: 24, scope: !9772)
!9835 = !DILocation(line: 2795, column: 30, scope: !9772)
!9836 = !DILocation(line: 2795, column: 37, scope: !9772)
!9837 = !DILocation(line: 2795, column: 2, scope: !9772)
!9838 = !DILocation(line: 2795, column: 8, scope: !9772)
!9839 = !DILocation(line: 2795, column: 22, scope: !9772)
!9840 = !DILocation(line: 2796, column: 24, scope: !9772)
!9841 = !DILocation(line: 2796, column: 30, scope: !9772)
!9842 = !DILocation(line: 2796, column: 41, scope: !9772)
!9843 = !DILocation(line: 2796, column: 2, scope: !9772)
!9844 = !DILocation(line: 2796, column: 8, scope: !9772)
!9845 = !DILocation(line: 2796, column: 22, scope: !9772)
!9846 = !DILocation(line: 2797, column: 24, scope: !9772)
!9847 = !DILocation(line: 2797, column: 30, scope: !9772)
!9848 = !DILocation(line: 2797, column: 37, scope: !9772)
!9849 = !DILocation(line: 2797, column: 2, scope: !9772)
!9850 = !DILocation(line: 2797, column: 8, scope: !9772)
!9851 = !DILocation(line: 2797, column: 22, scope: !9772)
!9852 = !DILocation(line: 2798, column: 24, scope: !9772)
!9853 = !DILocation(line: 2798, column: 30, scope: !9772)
!9854 = !DILocation(line: 2798, column: 41, scope: !9772)
!9855 = !DILocation(line: 2798, column: 2, scope: !9772)
!9856 = !DILocation(line: 2798, column: 8, scope: !9772)
!9857 = !DILocation(line: 2798, column: 22, scope: !9772)
!9858 = !DILocation(line: 2799, column: 24, scope: !9772)
!9859 = !DILocation(line: 2799, column: 30, scope: !9772)
!9860 = !DILocation(line: 2799, column: 37, scope: !9772)
!9861 = !DILocation(line: 2799, column: 2, scope: !9772)
!9862 = !DILocation(line: 2799, column: 8, scope: !9772)
!9863 = !DILocation(line: 2799, column: 22, scope: !9772)
!9864 = !DILocation(line: 2800, column: 24, scope: !9772)
!9865 = !DILocation(line: 2800, column: 30, scope: !9772)
!9866 = !DILocation(line: 2800, column: 41, scope: !9772)
!9867 = !DILocation(line: 2800, column: 2, scope: !9772)
!9868 = !DILocation(line: 2800, column: 8, scope: !9772)
!9869 = !DILocation(line: 2800, column: 22, scope: !9772)
!9870 = !DILocation(line: 2802, column: 2, scope: !9772)
!9871 = !DILocation(line: 2803, column: 1, scope: !9772)
!9872 = distinct !DISubprogram(name: "readl", scope: !8534, file: !8534, line: 59, type: !9873, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!9873 = !DISubroutineType(types: !9874)
!9874 = !{!7, !6984}
!9875 = !DILocalVariable(name: "addr", arg: 1, scope: !9872, file: !8534, line: 59, type: !6984)
!9876 = !DILocation(line: 59, column: 1, scope: !9872)
!9877 = !DILocalVariable(name: "ret", scope: !9872, file: !8534, line: 59, type: !7)
!9878 = !{i32 -2143492210}
!9879 = distinct !DISubprogram(name: "mtip_check_surprise_removal", scope: !3, file: !3, line: 139, type: !9880, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!9880 = !DISubroutineType(types: !9881)
!9881 = !{!1011, !5888}
!9882 = !DILocalVariable(name: "pdev", arg: 1, scope: !9879, file: !3, line: 139, type: !5888)
!9883 = !DILocation(line: 139, column: 57, scope: !9879)
!9884 = !DILocalVariable(name: "vendor_id", scope: !9879, file: !3, line: 141, type: !1697)
!9885 = !DILocation(line: 141, column: 6, scope: !9879)
!9886 = !DILocalVariable(name: "dd", scope: !9879, file: !3, line: 142, type: !945)
!9887 = !DILocation(line: 142, column: 22, scope: !9879)
!9888 = !DILocation(line: 142, column: 43, scope: !9879)
!9889 = !DILocation(line: 142, column: 27, scope: !9879)
!9890 = !DILocation(line: 144, column: 6, scope: !9891)
!9891 = distinct !DILexicalBlock(scope: !9879, file: !3, line: 144, column: 6)
!9892 = !DILocation(line: 144, column: 10, scope: !9891)
!9893 = !DILocation(line: 144, column: 6, scope: !9879)
!9894 = !DILocation(line: 145, column: 3, scope: !9891)
!9895 = !DILocation(line: 148, column: 23, scope: !9879)
!9896 = !DILocation(line: 148, column: 2, scope: !9879)
!9897 = !DILocation(line: 149, column: 6, scope: !9898)
!9898 = distinct !DILexicalBlock(scope: !9879, file: !3, line: 149, column: 6)
!9899 = !DILocation(line: 149, column: 16, scope: !9898)
!9900 = !DILocation(line: 149, column: 6, scope: !9879)
!9901 = !DILocation(line: 150, column: 3, scope: !9902)
!9902 = distinct !DILexicalBlock(scope: !9898, file: !3, line: 149, column: 27)
!9903 = !DILocation(line: 150, column: 7, scope: !9902)
!9904 = !DILocation(line: 150, column: 10, scope: !9902)
!9905 = !DILocation(line: 151, column: 7, scope: !9906)
!9906 = distinct !DILexicalBlock(scope: !9902, file: !3, line: 151, column: 7)
!9907 = !DILocation(line: 151, column: 11, scope: !9906)
!9908 = !DILocation(line: 151, column: 7, scope: !9902)
!9909 = !DILocation(line: 152, column: 40, scope: !9906)
!9910 = !DILocation(line: 152, column: 44, scope: !9906)
!9911 = !DILocation(line: 152, column: 4, scope: !9906)
!9912 = !DILocation(line: 154, column: 4, scope: !9906)
!9913 = !DILocation(line: 156, column: 3, scope: !9902)
!9914 = !DILocation(line: 159, column: 2, scope: !9879)
!9915 = !DILocation(line: 160, column: 1, scope: !9879)
!9916 = distinct !DISubprogram(name: "test_bit", scope: !9917, file: !9917, line: 132, type: !9918, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!9917 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!9918 = !DISubroutineType(types: !9919)
!9919 = !{!1011, !175, !9920}
!9920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9921, size: 64)
!9921 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8233)
!9922 = !DILocalVariable(name: "nr", arg: 1, scope: !9923, file: !8236, line: 210, type: !175)
!9923 = distinct !DISubprogram(name: "variable_test_bit", scope: !8236, file: !8236, line: 210, type: !9918, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!9924 = !DILocation(line: 210, column: 52, scope: !9923, inlinedAt: !9925)
!9925 = distinct !DILocation(line: 135, column: 9, scope: !9916)
!9926 = !DILocalVariable(name: "addr", arg: 2, scope: !9923, file: !8236, line: 210, type: !9920)
!9927 = !DILocation(line: 210, column: 86, scope: !9923, inlinedAt: !9925)
!9928 = !DILocalVariable(name: "oldbit", scope: !9923, file: !8236, line: 212, type: !1011)
!9929 = !DILocation(line: 212, column: 7, scope: !9923, inlinedAt: !9925)
!9930 = !DILocalVariable(name: "nr", arg: 1, scope: !9931, file: !8236, line: 204, type: !175)
!9931 = distinct !DISubprogram(name: "constant_test_bit", scope: !8236, file: !8236, line: 204, type: !9918, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!9932 = !DILocation(line: 204, column: 52, scope: !9931, inlinedAt: !9933)
!9933 = distinct !DILocation(line: 135, column: 9, scope: !9916)
!9934 = !DILocalVariable(name: "addr", arg: 2, scope: !9931, file: !8236, line: 204, type: !9920)
!9935 = !DILocation(line: 204, column: 86, scope: !9931, inlinedAt: !9933)
!9936 = !DILocation(line: 69, column: 73, scope: !6980, inlinedAt: !9937)
!9937 = distinct !DILocation(line: 134, column: 2, scope: !9916)
!9938 = !DILocation(line: 69, column: 83, scope: !6980, inlinedAt: !9937)
!9939 = !DILocalVariable(name: "nr", arg: 1, scope: !9916, file: !9917, line: 132, type: !175)
!9940 = !DILocation(line: 132, column: 34, scope: !9916)
!9941 = !DILocalVariable(name: "addr", arg: 2, scope: !9916, file: !9917, line: 132, type: !9920)
!9942 = !DILocation(line: 132, column: 68, scope: !9916)
!9943 = !DILocation(line: 134, column: 25, scope: !9916)
!9944 = !DILocation(line: 134, column: 32, scope: !9916)
!9945 = !DILocation(line: 134, column: 30, scope: !9916)
!9946 = !DILocation(line: 71, column: 19, scope: !6980, inlinedAt: !9937)
!9947 = !DILocation(line: 71, column: 22, scope: !6980, inlinedAt: !9937)
!9948 = !DILocation(line: 71, column: 2, scope: !6980, inlinedAt: !9937)
!9949 = !DILocation(line: 72, column: 2, scope: !6980, inlinedAt: !9937)
!9950 = !DILocation(line: 135, column: 9, scope: !9916)
!9951 = !DILocation(line: 206, column: 19, scope: !9931, inlinedAt: !9933)
!9952 = !DILocation(line: 206, column: 22, scope: !9931, inlinedAt: !9933)
!9953 = !DILocation(line: 206, column: 15, scope: !9931, inlinedAt: !9933)
!9954 = !DILocation(line: 207, column: 4, scope: !9931, inlinedAt: !9933)
!9955 = !DILocation(line: 207, column: 9, scope: !9931, inlinedAt: !9933)
!9956 = !DILocation(line: 207, column: 12, scope: !9931, inlinedAt: !9933)
!9957 = !DILocation(line: 206, column: 44, scope: !9931, inlinedAt: !9933)
!9958 = !DILocation(line: 207, column: 37, scope: !9931, inlinedAt: !9933)
!9959 = !DILocation(line: 217, column: 33, scope: !9923, inlinedAt: !9925)
!9960 = !DILocation(line: 217, column: 46, scope: !9923, inlinedAt: !9925)
!9961 = !DILocation(line: 214, column: 2, scope: !9923, inlinedAt: !9925)
!9962 = !{i32 -2146616508, i32 -2146616448}
!9963 = !DILocation(line: 219, column: 9, scope: !9923, inlinedAt: !9925)
!9964 = !DILocation(line: 135, column: 2, scope: !9916)
!9965 = distinct !DISubprogram(name: "mtip_hba_reset", scope: !3, file: !3, line: 179, type: !6387, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!9966 = !DILocation(line: 363, column: 74, scope: !7001, inlinedAt: !9967)
!9967 = distinct !DILocation(line: 193, column: 22, scope: !9965)
!9968 = !DILocalVariable(name: "dd", arg: 1, scope: !9965, file: !3, line: 179, type: !945)
!9969 = !DILocation(line: 179, column: 47, scope: !9965)
!9970 = !DILocalVariable(name: "timeout", scope: !9965, file: !3, line: 181, type: !898)
!9971 = !DILocation(line: 181, column: 16, scope: !9965)
!9972 = !DILocation(line: 184, column: 21, scope: !9965)
!9973 = !DILocation(line: 184, column: 25, scope: !9965)
!9974 = !DILocation(line: 184, column: 30, scope: !9965)
!9975 = !DILocation(line: 184, column: 2, scope: !9965)
!9976 = !DILocation(line: 187, column: 8, scope: !9965)
!9977 = !DILocation(line: 187, column: 12, scope: !9965)
!9978 = !DILocation(line: 187, column: 17, scope: !9965)
!9979 = !DILocation(line: 187, column: 2, scope: !9965)
!9980 = !DILocation(line: 193, column: 12, scope: !9965)
!9981 = !DILocation(line: 365, column: 27, scope: !7071, inlinedAt: !9967)
!9982 = !DILocation(line: 365, column: 6, scope: !7071, inlinedAt: !9967)
!9983 = !DILocation(line: 365, column: 6, scope: !7001, inlinedAt: !9967)
!9984 = !DILocation(line: 366, column: 12, scope: !7075, inlinedAt: !9967)
!9985 = !DILocation(line: 366, column: 14, scope: !7075, inlinedAt: !9967)
!9986 = !DILocation(line: 366, column: 7, scope: !7076, inlinedAt: !9967)
!9987 = !DILocation(line: 367, column: 4, scope: !7075, inlinedAt: !9967)
!9988 = !DILocation(line: 368, column: 28, scope: !7076, inlinedAt: !9967)
!9989 = !DILocation(line: 368, column: 10, scope: !7076, inlinedAt: !9967)
!9990 = !DILocation(line: 368, column: 3, scope: !7076, inlinedAt: !9967)
!9991 = !DILocation(line: 370, column: 29, scope: !7084, inlinedAt: !9967)
!9992 = !DILocation(line: 370, column: 10, scope: !7084, inlinedAt: !9967)
!9993 = !DILocation(line: 370, column: 3, scope: !7084, inlinedAt: !9967)
!9994 = !DILocation(line: 372, column: 1, scope: !7001, inlinedAt: !9967)
!9995 = !DILocation(line: 193, column: 20, scope: !9965)
!9996 = !DILocation(line: 193, column: 10, scope: !9965)
!9997 = !DILocation(line: 194, column: 2, scope: !9965)
!9998 = !DILocalVariable(name: "__ms", scope: !9999, file: !3, line: 195, type: !898)
!9999 = distinct !DILexicalBlock(scope: !10000, file: !3, line: 195, column: 3)
!10000 = distinct !DILexicalBlock(scope: !9965, file: !3, line: 194, column: 5)
!10001 = !DILocation(line: 195, column: 3, scope: !9999)
!10002 = !DILocation(line: 195, column: 3, scope: !10003)
!10003 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 195, column: 3)
!10004 = distinct !DILexicalBlock(scope: !10005, file: !3, line: 195, column: 3)
!10005 = distinct !DILexicalBlock(scope: !10006, file: !3, line: 195, column: 3)
!10006 = distinct !DILexicalBlock(scope: !9999, file: !3, line: 195, column: 3)
!10007 = distinct !{!10007, !10001, !10001}
!10008 = !DILocation(line: 196, column: 46, scope: !10009)
!10009 = distinct !DILexicalBlock(scope: !10000, file: !3, line: 196, column: 7)
!10010 = !DILocation(line: 196, column: 50, scope: !10009)
!10011 = !DILocation(line: 196, column: 7, scope: !10009)
!10012 = !DILocation(line: 196, column: 7, scope: !10000)
!10013 = !DILocation(line: 197, column: 4, scope: !10009)
!10014 = !DILocation(line: 199, column: 2, scope: !10000)
!10015 = !DILocation(line: 199, column: 18, scope: !9965)
!10016 = !DILocation(line: 199, column: 22, scope: !9965)
!10017 = !DILocation(line: 199, column: 27, scope: !9965)
!10018 = !DILocation(line: 199, column: 12, scope: !9965)
!10019 = !DILocation(line: 199, column: 39, scope: !9965)
!10020 = !DILocation(line: 200, column: 4, scope: !9965)
!10021 = !DILocation(line: 200, column: 7, scope: !9965)
!10022 = !DILocation(line: 0, scope: !9965)
!10023 = distinct !{!10023, !9997, !10024}
!10024 = !DILocation(line: 200, column: 36, scope: !9965)
!10025 = !DILocation(line: 202, column: 12, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !9965, file: !3, line: 202, column: 6)
!10027 = !DILocation(line: 202, column: 16, scope: !10026)
!10028 = !DILocation(line: 202, column: 21, scope: !10026)
!10029 = !DILocation(line: 202, column: 6, scope: !10026)
!10030 = !DILocation(line: 202, column: 33, scope: !10026)
!10031 = !DILocation(line: 202, column: 6, scope: !9965)
!10032 = !DILocation(line: 203, column: 3, scope: !10026)
!10033 = !DILocation(line: 205, column: 2, scope: !9965)
!10034 = !DILocation(line: 206, column: 1, scope: !9965)
!10035 = distinct !DISubprogram(name: "mtip_init_port", scope: !3, file: !3, line: 332, type: !10036, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!10036 = !DISubroutineType(types: !10037)
!10037 = !{null, !6168}
!10038 = !DILocalVariable(name: "port", arg: 1, scope: !10035, file: !3, line: 332, type: !6168)
!10039 = !DILocation(line: 332, column: 46, scope: !10035)
!10040 = !DILocalVariable(name: "i", scope: !10035, file: !3, line: 334, type: !443)
!10041 = !DILocation(line: 334, column: 6, scope: !10035)
!10042 = !DILocation(line: 335, column: 19, scope: !10035)
!10043 = !DILocation(line: 335, column: 2, scope: !10035)
!10044 = !DILocation(line: 338, column: 12, scope: !10045)
!10045 = distinct !DILexicalBlock(scope: !10035, file: !3, line: 338, column: 6)
!10046 = !DILocation(line: 338, column: 18, scope: !10045)
!10047 = !DILocation(line: 338, column: 22, scope: !10045)
!10048 = !DILocation(line: 338, column: 27, scope: !10045)
!10049 = !DILocation(line: 338, column: 6, scope: !10045)
!10050 = !DILocation(line: 338, column: 39, scope: !10045)
!10051 = !DILocation(line: 338, column: 6, scope: !10035)
!10052 = !DILocation(line: 339, column: 11, scope: !10053)
!10053 = distinct !DILexicalBlock(scope: !10045, file: !3, line: 338, column: 54)
!10054 = !DILocation(line: 339, column: 17, scope: !10053)
!10055 = !DILocation(line: 339, column: 34, scope: !10053)
!10056 = !DILocation(line: 339, column: 41, scope: !10053)
!10057 = !DILocation(line: 339, column: 10, scope: !10053)
!10058 = !DILocation(line: 340, column: 5, scope: !10053)
!10059 = !DILocation(line: 340, column: 11, scope: !10053)
!10060 = !DILocation(line: 340, column: 16, scope: !10053)
!10061 = !DILocation(line: 339, column: 3, scope: !10053)
!10062 = !DILocation(line: 341, column: 11, scope: !10053)
!10063 = !DILocation(line: 341, column: 17, scope: !10053)
!10064 = !DILocation(line: 341, column: 27, scope: !10053)
!10065 = !DILocation(line: 341, column: 34, scope: !10053)
!10066 = !DILocation(line: 341, column: 10, scope: !10053)
!10067 = !DILocation(line: 342, column: 5, scope: !10053)
!10068 = !DILocation(line: 342, column: 11, scope: !10053)
!10069 = !DILocation(line: 342, column: 16, scope: !10053)
!10070 = !DILocation(line: 341, column: 3, scope: !10053)
!10071 = !DILocation(line: 343, column: 33, scope: !10053)
!10072 = !DILocation(line: 343, column: 39, scope: !10053)
!10073 = !DILocation(line: 343, column: 3, scope: !10053)
!10074 = !DILocation(line: 344, column: 2, scope: !10053)
!10075 = !DILocation(line: 346, column: 9, scope: !10035)
!10076 = !DILocation(line: 346, column: 15, scope: !10035)
!10077 = !DILocation(line: 346, column: 32, scope: !10035)
!10078 = !DILocation(line: 347, column: 4, scope: !10035)
!10079 = !DILocation(line: 347, column: 10, scope: !10035)
!10080 = !DILocation(line: 347, column: 15, scope: !10035)
!10081 = !DILocation(line: 346, column: 2, scope: !10035)
!10082 = !DILocation(line: 348, column: 9, scope: !10035)
!10083 = !DILocation(line: 348, column: 15, scope: !10035)
!10084 = !DILocation(line: 348, column: 25, scope: !10035)
!10085 = !DILocation(line: 348, column: 39, scope: !10035)
!10086 = !DILocation(line: 348, column: 45, scope: !10035)
!10087 = !DILocation(line: 348, column: 50, scope: !10035)
!10088 = !DILocation(line: 348, column: 2, scope: !10035)
!10089 = !DILocation(line: 351, column: 15, scope: !10035)
!10090 = !DILocation(line: 351, column: 21, scope: !10035)
!10091 = !DILocation(line: 351, column: 26, scope: !10035)
!10092 = !DILocation(line: 351, column: 9, scope: !10035)
!10093 = !DILocation(line: 351, column: 43, scope: !10035)
!10094 = !DILocation(line: 351, column: 49, scope: !10035)
!10095 = !DILocation(line: 351, column: 54, scope: !10035)
!10096 = !DILocation(line: 351, column: 2, scope: !10035)
!10097 = !DILocation(line: 354, column: 9, scope: !10098)
!10098 = distinct !DILexicalBlock(scope: !10035, file: !3, line: 354, column: 2)
!10099 = !DILocation(line: 354, column: 7, scope: !10098)
!10100 = !DILocation(line: 354, column: 14, scope: !10101)
!10101 = distinct !DILexicalBlock(scope: !10098, file: !3, line: 354, column: 2)
!10102 = !DILocation(line: 354, column: 18, scope: !10101)
!10103 = !DILocation(line: 354, column: 24, scope: !10101)
!10104 = !DILocation(line: 354, column: 28, scope: !10101)
!10105 = !DILocation(line: 354, column: 16, scope: !10101)
!10106 = !DILocation(line: 354, column: 2, scope: !10098)
!10107 = !DILocation(line: 355, column: 22, scope: !10101)
!10108 = !DILocation(line: 355, column: 28, scope: !10101)
!10109 = !DILocation(line: 355, column: 38, scope: !10101)
!10110 = !DILocation(line: 355, column: 3, scope: !10101)
!10111 = !DILocation(line: 354, column: 42, scope: !10101)
!10112 = !DILocation(line: 354, column: 2, scope: !10101)
!10113 = distinct !{!10113, !10106, !10114}
!10114 = !DILocation(line: 355, column: 40, scope: !10098)
!10115 = !DILocation(line: 358, column: 15, scope: !10035)
!10116 = !DILocation(line: 358, column: 21, scope: !10035)
!10117 = !DILocation(line: 358, column: 26, scope: !10035)
!10118 = !DILocation(line: 358, column: 9, scope: !10035)
!10119 = !DILocation(line: 358, column: 44, scope: !10035)
!10120 = !DILocation(line: 358, column: 50, scope: !10035)
!10121 = !DILocation(line: 358, column: 55, scope: !10035)
!10122 = !DILocation(line: 358, column: 2, scope: !10035)
!10123 = !DILocation(line: 361, column: 15, scope: !10035)
!10124 = !DILocation(line: 361, column: 21, scope: !10035)
!10125 = !DILocation(line: 361, column: 25, scope: !10035)
!10126 = !DILocation(line: 361, column: 30, scope: !10035)
!10127 = !DILocation(line: 361, column: 9, scope: !10035)
!10128 = !DILocation(line: 362, column: 6, scope: !10035)
!10129 = !DILocation(line: 362, column: 12, scope: !10035)
!10130 = !DILocation(line: 362, column: 16, scope: !10035)
!10131 = !DILocation(line: 362, column: 21, scope: !10035)
!10132 = !DILocation(line: 361, column: 2, scope: !10035)
!10133 = !DILocation(line: 365, column: 23, scope: !10035)
!10134 = !DILocation(line: 365, column: 29, scope: !10035)
!10135 = !DILocation(line: 365, column: 34, scope: !10035)
!10136 = !DILocation(line: 365, column: 2, scope: !10035)
!10137 = !DILocation(line: 366, column: 1, scope: !10035)
!10138 = distinct !DISubprogram(name: "mtip_start_port", scope: !3, file: !3, line: 289, type: !10036, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!10139 = !DILocalVariable(name: "port", arg: 1, scope: !10138, file: !3, line: 289, type: !6168)
!10140 = !DILocation(line: 289, column: 54, scope: !10138)
!10141 = !DILocation(line: 292, column: 18, scope: !10138)
!10142 = !DILocation(line: 292, column: 2, scope: !10138)
!10143 = !DILocation(line: 295, column: 21, scope: !10138)
!10144 = !DILocation(line: 295, column: 2, scope: !10138)
!10145 = !DILocation(line: 296, column: 1, scope: !10138)
!10146 = distinct !DISubprogram(name: "request_irq", scope: !5951, file: !5951, line: 157, type: !10147, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!10147 = !DISubroutineType(types: !10148)
!10148 = !{!443, !7, !10149, !898, !1024, !890}
!10149 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !5951, line: 92, baseType: !10150)
!10150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10151, size: 64)
!10151 = !DISubroutineType(types: !10152)
!10152 = !{!10153, !443, !890}
!10153 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !436, line: 17, baseType: !435)
!10154 = !DILocalVariable(name: "irq", arg: 1, scope: !10146, file: !5951, line: 157, type: !7)
!10155 = !DILocation(line: 157, column: 26, scope: !10146)
!10156 = !DILocalVariable(name: "handler", arg: 2, scope: !10146, file: !5951, line: 157, type: !10149)
!10157 = !DILocation(line: 157, column: 45, scope: !10146)
!10158 = !DILocalVariable(name: "flags", arg: 3, scope: !10146, file: !5951, line: 157, type: !898)
!10159 = !DILocation(line: 157, column: 68, scope: !10146)
!10160 = !DILocalVariable(name: "name", arg: 4, scope: !10146, file: !5951, line: 158, type: !1024)
!10161 = !DILocation(line: 158, column: 18, scope: !10146)
!10162 = !DILocalVariable(name: "dev", arg: 5, scope: !10146, file: !5951, line: 158, type: !890)
!10163 = !DILocation(line: 158, column: 30, scope: !10146)
!10164 = !DILocation(line: 160, column: 30, scope: !10146)
!10165 = !DILocation(line: 160, column: 35, scope: !10146)
!10166 = !DILocation(line: 160, column: 50, scope: !10146)
!10167 = !DILocation(line: 160, column: 57, scope: !10146)
!10168 = !DILocation(line: 160, column: 63, scope: !10146)
!10169 = !DILocation(line: 160, column: 9, scope: !10146)
!10170 = !DILocation(line: 160, column: 2, scope: !10146)
!10171 = distinct !DISubprogram(name: "mtip_irq_handler", scope: !3, file: !3, line: 831, type: !10151, scopeLine: 832, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!10172 = !DILocalVariable(name: "irq", arg: 1, scope: !10171, file: !3, line: 831, type: !443)
!10173 = !DILocation(line: 831, column: 41, scope: !10171)
!10174 = !DILocalVariable(name: "instance", arg: 2, scope: !10171, file: !3, line: 831, type: !890)
!10175 = !DILocation(line: 831, column: 52, scope: !10171)
!10176 = !DILocalVariable(name: "dd", scope: !10171, file: !3, line: 833, type: !945)
!10177 = !DILocation(line: 833, column: 22, scope: !10171)
!10178 = !DILocation(line: 833, column: 27, scope: !10171)
!10179 = !DILocation(line: 835, column: 25, scope: !10171)
!10180 = !DILocation(line: 835, column: 9, scope: !10171)
!10181 = !DILocation(line: 835, column: 2, scope: !10171)
!10182 = distinct !DISubprogram(name: "irq_set_affinity_hint", scope: !5951, file: !5951, line: 384, type: !10183, scopeLine: 386, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!10183 = !DISubroutineType(types: !10184)
!10184 = !{!443, !7, !891}
!10185 = !DILocalVariable(name: "irq", arg: 1, scope: !10182, file: !5951, line: 384, type: !7)
!10186 = !DILocation(line: 384, column: 54, scope: !10182)
!10187 = !DILocalVariable(name: "m", arg: 2, scope: !10182, file: !5951, line: 385, type: !891)
!10188 = !DILocation(line: 385, column: 28, scope: !10182)
!10189 = !DILocation(line: 387, column: 2, scope: !10182)
!10190 = distinct !DISubprogram(name: "get_cpu_mask", scope: !894, file: !894, line: 884, type: !10191, scopeLine: 885, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!10191 = !DISubroutineType(types: !10192)
!10192 = !{!891, !7}
!10193 = !DILocalVariable(name: "cpu", arg: 1, scope: !10190, file: !894, line: 884, type: !7)
!10194 = !DILocation(line: 884, column: 63, scope: !10190)
!10195 = !DILocalVariable(name: "p", scope: !10190, file: !894, line: 886, type: !7686)
!10196 = !DILocation(line: 886, column: 23, scope: !10190)
!10197 = !DILocation(line: 886, column: 46, scope: !10190)
!10198 = !DILocation(line: 886, column: 50, scope: !10190)
!10199 = !DILocation(line: 886, column: 44, scope: !10190)
!10200 = !DILocation(line: 886, column: 27, scope: !10190)
!10201 = !DILocation(line: 887, column: 7, scope: !10190)
!10202 = !DILocation(line: 887, column: 11, scope: !10190)
!10203 = !DILocation(line: 887, column: 4, scope: !10190)
!10204 = !DILocation(line: 888, column: 9, scope: !10190)
!10205 = !DILocation(line: 888, column: 2, scope: !10190)
!10206 = distinct !DISubprogram(name: "mtip_deinit_port", scope: !3, file: !3, line: 307, type: !10036, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!10207 = !DILocalVariable(name: "port", arg: 1, scope: !10206, file: !3, line: 307, type: !6168)
!10208 = !DILocation(line: 307, column: 55, scope: !10206)
!10209 = !DILocation(line: 310, column: 12, scope: !10206)
!10210 = !DILocation(line: 310, column: 18, scope: !10206)
!10211 = !DILocation(line: 310, column: 23, scope: !10206)
!10212 = !DILocation(line: 310, column: 2, scope: !10206)
!10213 = !DILocation(line: 313, column: 21, scope: !10206)
!10214 = !DILocation(line: 313, column: 2, scope: !10206)
!10215 = !DILocation(line: 316, column: 18, scope: !10206)
!10216 = !DILocation(line: 316, column: 2, scope: !10206)
!10217 = !DILocation(line: 317, column: 1, scope: !10206)
!10218 = distinct !DISubprogram(name: "mtip_dma_free", scope: !3, file: !3, line: 2747, type: !9646, scopeLine: 2748, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!10219 = !DILocalVariable(name: "dd", arg: 1, scope: !10218, file: !3, line: 2747, type: !945)
!10220 = !DILocation(line: 2747, column: 47, scope: !10218)
!10221 = !DILocalVariable(name: "port", scope: !10218, file: !3, line: 2749, type: !6168)
!10222 = !DILocation(line: 2749, column: 20, scope: !10218)
!10223 = !DILocation(line: 2749, column: 27, scope: !10218)
!10224 = !DILocation(line: 2749, column: 31, scope: !10218)
!10225 = !DILocation(line: 2751, column: 6, scope: !10226)
!10226 = distinct !DILexicalBlock(scope: !10218, file: !3, line: 2751, column: 6)
!10227 = !DILocation(line: 2751, column: 12, scope: !10226)
!10228 = !DILocation(line: 2751, column: 6, scope: !10218)
!10229 = !DILocation(line: 2752, column: 22, scope: !10226)
!10230 = !DILocation(line: 2752, column: 26, scope: !10226)
!10231 = !DILocation(line: 2752, column: 32, scope: !10226)
!10232 = !DILocation(line: 2753, column: 6, scope: !10226)
!10233 = !DILocation(line: 2753, column: 12, scope: !10226)
!10234 = !DILocation(line: 2753, column: 20, scope: !10226)
!10235 = !DILocation(line: 2753, column: 26, scope: !10226)
!10236 = !DILocation(line: 2752, column: 3, scope: !10226)
!10237 = !DILocation(line: 2755, column: 6, scope: !10238)
!10238 = distinct !DILexicalBlock(scope: !10218, file: !3, line: 2755, column: 6)
!10239 = !DILocation(line: 2755, column: 12, scope: !10238)
!10240 = !DILocation(line: 2755, column: 6, scope: !10218)
!10241 = !DILocation(line: 2756, column: 22, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10238, file: !3, line: 2755, column: 26)
!10243 = !DILocation(line: 2756, column: 26, scope: !10242)
!10244 = !DILocation(line: 2756, column: 32, scope: !10242)
!10245 = !DILocation(line: 2757, column: 5, scope: !10242)
!10246 = !DILocation(line: 2757, column: 11, scope: !10242)
!10247 = !DILocation(line: 2757, column: 25, scope: !10242)
!10248 = !DILocation(line: 2757, column: 31, scope: !10242)
!10249 = !DILocation(line: 2756, column: 3, scope: !10242)
!10250 = !DILocation(line: 2758, column: 2, scope: !10242)
!10251 = !DILocation(line: 2759, column: 1, scope: !10218)
!10252 = distinct !DISubprogram(name: "dma_alloc_coherent", scope: !6402, file: !6402, line: 392, type: !10253, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!10253 = !DISubroutineType(types: !10254)
!10254 = !{!890, !1960, !1121, !10255, !888}
!10255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1995, size: 64)
!10256 = !DILocalVariable(name: "dev", arg: 1, scope: !10252, file: !6402, line: 392, type: !1960)
!10257 = !DILocation(line: 392, column: 55, scope: !10252)
!10258 = !DILocalVariable(name: "size", arg: 2, scope: !10252, file: !6402, line: 392, type: !1121)
!10259 = !DILocation(line: 392, column: 67, scope: !10252)
!10260 = !DILocalVariable(name: "dma_handle", arg: 3, scope: !10252, file: !6402, line: 393, type: !10255)
!10261 = !DILocation(line: 393, column: 15, scope: !10252)
!10262 = !DILocalVariable(name: "gfp", arg: 4, scope: !10252, file: !6402, line: 393, type: !888)
!10263 = !DILocation(line: 393, column: 33, scope: !10252)
!10264 = !DILocation(line: 396, column: 25, scope: !10252)
!10265 = !DILocation(line: 396, column: 30, scope: !10252)
!10266 = !DILocation(line: 396, column: 36, scope: !10252)
!10267 = !DILocation(line: 396, column: 48, scope: !10252)
!10268 = !DILocation(line: 397, column: 5, scope: !10252)
!10269 = !DILocation(line: 397, column: 9, scope: !10252)
!10270 = !DILocation(line: 397, column: 4, scope: !10252)
!10271 = !DILocation(line: 396, column: 9, scope: !10252)
!10272 = !DILocation(line: 396, column: 2, scope: !10252)
!10273 = distinct !DISubprogram(name: "dma_free_coherent", scope: !6402, file: !6402, line: 400, type: !10274, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!10274 = !DISubroutineType(types: !10275)
!10275 = !{null, !1960, !1121, !890, !1995}
!10276 = !DILocalVariable(name: "dev", arg: 1, scope: !10273, file: !6402, line: 400, type: !1960)
!10277 = !DILocation(line: 400, column: 53, scope: !10273)
!10278 = !DILocalVariable(name: "size", arg: 2, scope: !10273, file: !6402, line: 400, type: !1121)
!10279 = !DILocation(line: 400, column: 65, scope: !10273)
!10280 = !DILocalVariable(name: "cpu_addr", arg: 3, scope: !10273, file: !6402, line: 401, type: !890)
!10281 = !DILocation(line: 401, column: 9, scope: !10273)
!10282 = !DILocalVariable(name: "dma_handle", arg: 4, scope: !10273, file: !6402, line: 401, type: !1995)
!10283 = !DILocation(line: 401, column: 30, scope: !10273)
!10284 = !DILocation(line: 403, column: 24, scope: !10273)
!10285 = !DILocation(line: 403, column: 29, scope: !10273)
!10286 = !DILocation(line: 403, column: 35, scope: !10273)
!10287 = !DILocation(line: 403, column: 45, scope: !10273)
!10288 = !DILocation(line: 403, column: 9, scope: !10273)
!10289 = !DILocation(line: 403, column: 2, scope: !10273)
!10290 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !7002, file: !7002, line: 308, type: !7003, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!10291 = !DILocalVariable(name: "m", arg: 1, scope: !10290, file: !7002, line: 308, type: !3549)
!10292 = !DILocation(line: 308, column: 66, scope: !10290)
!10293 = !DILocation(line: 310, column: 10, scope: !10290)
!10294 = !DILocation(line: 310, column: 12, scope: !10290)
!10295 = !DILocation(line: 310, column: 34, scope: !10290)
!10296 = !DILocation(line: 310, column: 39, scope: !10290)
!10297 = !DILocation(line: 310, column: 2, scope: !10290)
!10298 = distinct !DISubprogram(name: "pci_get_drvdata", scope: !5890, file: !5890, line: 1865, type: !10299, scopeLine: 1866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!10299 = !DISubroutineType(types: !10300)
!10300 = !{!890, !5888}
!10301 = !DILocalVariable(name: "pdev", arg: 1, scope: !10298, file: !5890, line: 1865, type: !5888)
!10302 = !DILocation(line: 1865, column: 53, scope: !10298)
!10303 = !DILocation(line: 1867, column: 26, scope: !10298)
!10304 = !DILocation(line: 1867, column: 32, scope: !10298)
!10305 = !DILocation(line: 1867, column: 9, scope: !10298)
!10306 = !DILocation(line: 1867, column: 2, scope: !10298)
!10307 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !25, file: !25, line: 655, type: !10308, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!10308 = !DISubroutineType(types: !10309)
!10309 = !{!890, !5540}
!10310 = !DILocalVariable(name: "dev", arg: 1, scope: !10307, file: !25, line: 655, type: !5540)
!10311 = !DILocation(line: 655, column: 58, scope: !10307)
!10312 = !DILocation(line: 657, column: 9, scope: !10307)
!10313 = !DILocation(line: 657, column: 14, scope: !10307)
!10314 = !DILocation(line: 657, column: 2, scope: !10307)
!10315 = distinct !DISubprogram(name: "kasan_check_read", scope: !8602, file: !8602, line: 34, type: !8603, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!10316 = !DILocalVariable(name: "p", arg: 1, scope: !10315, file: !8602, line: 34, type: !6984)
!10317 = !DILocation(line: 34, column: 58, scope: !10315)
!10318 = !DILocalVariable(name: "size", arg: 2, scope: !10315, file: !8602, line: 34, type: !7)
!10319 = !DILocation(line: 34, column: 74, scope: !10315)
!10320 = !DILocation(line: 36, column: 2, scope: !10315)
!10321 = distinct !DISubprogram(name: "mtip_enable_fis", scope: !3, file: !3, line: 242, type: !10322, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!10322 = !DISubroutineType(types: !10323)
!10323 = !{!443, !6168, !443}
!10324 = !DILocalVariable(name: "port", arg: 1, scope: !10321, file: !3, line: 242, type: !6168)
!10325 = !DILocation(line: 242, column: 46, scope: !10321)
!10326 = !DILocalVariable(name: "enable", arg: 2, scope: !10321, file: !3, line: 242, type: !443)
!10327 = !DILocation(line: 242, column: 56, scope: !10321)
!10328 = !DILocalVariable(name: "tmp", scope: !10321, file: !3, line: 244, type: !938)
!10329 = !DILocation(line: 244, column: 6, scope: !10321)
!10330 = !DILocation(line: 247, column: 14, scope: !10321)
!10331 = !DILocation(line: 247, column: 20, scope: !10321)
!10332 = !DILocation(line: 247, column: 25, scope: !10321)
!10333 = !DILocation(line: 247, column: 8, scope: !10321)
!10334 = !DILocation(line: 247, column: 6, scope: !10321)
!10335 = !DILocation(line: 248, column: 6, scope: !10336)
!10336 = distinct !DILexicalBlock(scope: !10321, file: !3, line: 248, column: 6)
!10337 = !DILocation(line: 248, column: 6, scope: !10321)
!10338 = !DILocation(line: 249, column: 10, scope: !10336)
!10339 = !DILocation(line: 249, column: 14, scope: !10336)
!10340 = !DILocation(line: 249, column: 33, scope: !10336)
!10341 = !DILocation(line: 249, column: 39, scope: !10336)
!10342 = !DILocation(line: 249, column: 44, scope: !10336)
!10343 = !DILocation(line: 249, column: 3, scope: !10336)
!10344 = !DILocation(line: 251, column: 10, scope: !10336)
!10345 = !DILocation(line: 251, column: 14, scope: !10336)
!10346 = !DILocation(line: 251, column: 34, scope: !10336)
!10347 = !DILocation(line: 251, column: 40, scope: !10336)
!10348 = !DILocation(line: 251, column: 45, scope: !10336)
!10349 = !DILocation(line: 251, column: 3, scope: !10336)
!10350 = !DILocation(line: 254, column: 8, scope: !10321)
!10351 = !DILocation(line: 254, column: 14, scope: !10321)
!10352 = !DILocation(line: 254, column: 19, scope: !10321)
!10353 = !DILocation(line: 254, column: 2, scope: !10321)
!10354 = !DILocation(line: 256, column: 12, scope: !10321)
!10355 = !DILocation(line: 256, column: 16, scope: !10321)
!10356 = !DILocation(line: 256, column: 35, scope: !10321)
!10357 = !DILocation(line: 256, column: 2, scope: !10321)
!10358 = distinct !DISubprogram(name: "mtip_enable_engine", scope: !3, file: !3, line: 268, type: !10322, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!10359 = !DILocalVariable(name: "port", arg: 1, scope: !10358, file: !3, line: 268, type: !6168)
!10360 = !DILocation(line: 268, column: 49, scope: !10358)
!10361 = !DILocalVariable(name: "enable", arg: 2, scope: !10358, file: !3, line: 268, type: !443)
!10362 = !DILocation(line: 268, column: 59, scope: !10358)
!10363 = !DILocalVariable(name: "tmp", scope: !10358, file: !3, line: 270, type: !938)
!10364 = !DILocation(line: 270, column: 6, scope: !10358)
!10365 = !DILocation(line: 273, column: 14, scope: !10358)
!10366 = !DILocation(line: 273, column: 20, scope: !10358)
!10367 = !DILocation(line: 273, column: 25, scope: !10358)
!10368 = !DILocation(line: 273, column: 8, scope: !10358)
!10369 = !DILocation(line: 273, column: 6, scope: !10358)
!10370 = !DILocation(line: 274, column: 6, scope: !10371)
!10371 = distinct !DILexicalBlock(scope: !10358, file: !3, line: 274, column: 6)
!10372 = !DILocation(line: 274, column: 6, scope: !10358)
!10373 = !DILocation(line: 275, column: 10, scope: !10371)
!10374 = !DILocation(line: 275, column: 14, scope: !10371)
!10375 = !DILocation(line: 275, column: 32, scope: !10371)
!10376 = !DILocation(line: 275, column: 38, scope: !10371)
!10377 = !DILocation(line: 275, column: 43, scope: !10371)
!10378 = !DILocation(line: 275, column: 3, scope: !10371)
!10379 = !DILocation(line: 277, column: 10, scope: !10371)
!10380 = !DILocation(line: 277, column: 14, scope: !10371)
!10381 = !DILocation(line: 277, column: 33, scope: !10371)
!10382 = !DILocation(line: 277, column: 39, scope: !10371)
!10383 = !DILocation(line: 277, column: 44, scope: !10371)
!10384 = !DILocation(line: 277, column: 3, scope: !10371)
!10385 = !DILocation(line: 279, column: 8, scope: !10358)
!10386 = !DILocation(line: 279, column: 14, scope: !10358)
!10387 = !DILocation(line: 279, column: 19, scope: !10358)
!10388 = !DILocation(line: 279, column: 2, scope: !10358)
!10389 = !DILocation(line: 280, column: 12, scope: !10358)
!10390 = !DILocation(line: 280, column: 16, scope: !10358)
!10391 = !DILocation(line: 280, column: 34, scope: !10358)
!10392 = !DILocation(line: 280, column: 2, scope: !10358)
!10393 = distinct !DISubprogram(name: "mtip_handle_irq", scope: !3, file: !3, line: 739, type: !10394, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!10394 = !DISubroutineType(types: !10395)
!10395 = !{!10153, !945}
!10396 = !DILocation(line: 39, column: 55, scope: !8667, inlinedAt: !10397)
!10397 = distinct !DILocation(line: 46, column: 2, scope: !8672, inlinedAt: !10398)
!10398 = distinct !DILocation(line: 774, column: 4, scope: !10399)
!10399 = distinct !DILexicalBlock(scope: !10400, file: !3, line: 761, column: 45)
!10400 = distinct !DILexicalBlock(scope: !10401, file: !3, line: 761, column: 7)
!10401 = distinct !DILexicalBlock(scope: !10402, file: !3, line: 749, column: 16)
!10402 = distinct !DILexicalBlock(scope: !10393, file: !3, line: 749, column: 6)
!10403 = !DILocation(line: 39, column: 62, scope: !8667, inlinedAt: !10397)
!10404 = !DILocation(line: 84, column: 74, scope: !8242, inlinedAt: !10405)
!10405 = distinct !DILocation(line: 45, column: 2, scope: !8672, inlinedAt: !10398)
!10406 = !DILocation(line: 84, column: 84, scope: !8242, inlinedAt: !10405)
!10407 = !DILocation(line: 43, column: 22, scope: !8672, inlinedAt: !10398)
!10408 = !DILocation(line: 43, column: 29, scope: !8672, inlinedAt: !10398)
!10409 = !DILocation(line: 23, column: 61, scope: !6967, inlinedAt: !10410)
!10410 = distinct !DILocation(line: 28, column: 9, scope: !6975, inlinedAt: !10411)
!10411 = distinct !DILocation(line: 763, column: 4, scope: !10412)
!10412 = distinct !DILexicalBlock(scope: !10399, file: !3, line: 763, column: 4)
!10413 = !DILocation(line: 69, column: 73, scope: !6980, inlinedAt: !10414)
!10414 = distinct !DILocation(line: 27, column: 2, scope: !6975, inlinedAt: !10411)
!10415 = !DILocation(line: 69, column: 83, scope: !6980, inlinedAt: !10414)
!10416 = !DILocation(line: 25, column: 29, scope: !6975, inlinedAt: !10411)
!10417 = !DILocalVariable(name: "data", arg: 1, scope: !10393, file: !3, line: 739, type: !945)
!10418 = !DILocation(line: 739, column: 63, scope: !10393)
!10419 = !DILocalVariable(name: "dd", scope: !10393, file: !3, line: 741, type: !945)
!10420 = !DILocation(line: 741, column: 22, scope: !10393)
!10421 = !DILocation(line: 741, column: 50, scope: !10393)
!10422 = !DILocalVariable(name: "port", scope: !10393, file: !3, line: 742, type: !6168)
!10423 = !DILocation(line: 742, column: 20, scope: !10393)
!10424 = !DILocation(line: 742, column: 27, scope: !10393)
!10425 = !DILocation(line: 742, column: 31, scope: !10393)
!10426 = !DILocalVariable(name: "hba_stat", scope: !10393, file: !3, line: 743, type: !938)
!10427 = !DILocation(line: 743, column: 6, scope: !10393)
!10428 = !DILocalVariable(name: "port_stat", scope: !10393, file: !3, line: 743, type: !938)
!10429 = !DILocation(line: 743, column: 16, scope: !10393)
!10430 = !DILocalVariable(name: "rv", scope: !10393, file: !3, line: 744, type: !443)
!10431 = !DILocation(line: 744, column: 6, scope: !10393)
!10432 = !DILocalVariable(name: "do_irq_enable", scope: !10393, file: !3, line: 745, type: !443)
!10433 = !DILocation(line: 745, column: 6, scope: !10393)
!10434 = !DILocalVariable(name: "i", scope: !10393, file: !3, line: 745, type: !443)
!10435 = !DILocation(line: 745, column: 25, scope: !10393)
!10436 = !DILocalVariable(name: "workers", scope: !10393, file: !3, line: 745, type: !443)
!10437 = !DILocation(line: 745, column: 28, scope: !10393)
!10438 = !DILocalVariable(name: "twork", scope: !10393, file: !3, line: 746, type: !911)
!10439 = !DILocation(line: 746, column: 20, scope: !10393)
!10440 = !DILocation(line: 748, column: 19, scope: !10393)
!10441 = !DILocation(line: 748, column: 23, scope: !10393)
!10442 = !DILocation(line: 748, column: 28, scope: !10393)
!10443 = !DILocation(line: 748, column: 13, scope: !10393)
!10444 = !DILocation(line: 748, column: 11, scope: !10393)
!10445 = !DILocation(line: 749, column: 6, scope: !10402)
!10446 = !DILocation(line: 749, column: 6, scope: !10393)
!10447 = !DILocation(line: 750, column: 6, scope: !10401)
!10448 = !DILocation(line: 753, column: 21, scope: !10401)
!10449 = !DILocation(line: 753, column: 27, scope: !10401)
!10450 = !DILocation(line: 753, column: 32, scope: !10401)
!10451 = !DILocation(line: 753, column: 15, scope: !10401)
!10452 = !DILocation(line: 753, column: 13, scope: !10401)
!10453 = !DILocation(line: 754, column: 7, scope: !10454)
!10454 = distinct !DILexicalBlock(scope: !10401, file: !3, line: 754, column: 7)
!10455 = !DILocation(line: 754, column: 7, scope: !10401)
!10456 = !DILocation(line: 755, column: 32, scope: !10457)
!10457 = distinct !DILexicalBlock(scope: !10454, file: !3, line: 754, column: 42)
!10458 = !DILocation(line: 755, column: 36, scope: !10457)
!10459 = !DILocation(line: 755, column: 4, scope: !10457)
!10460 = !DILocation(line: 756, column: 4, scope: !10457)
!10461 = !DILocation(line: 758, column: 10, scope: !10401)
!10462 = !DILocation(line: 758, column: 21, scope: !10401)
!10463 = !DILocation(line: 758, column: 27, scope: !10401)
!10464 = !DILocation(line: 758, column: 32, scope: !10401)
!10465 = !DILocation(line: 758, column: 3, scope: !10401)
!10466 = !DILocation(line: 761, column: 7, scope: !10400)
!10467 = !DILocation(line: 761, column: 7, scope: !10401)
!10468 = !DILocation(line: 762, column: 18, scope: !10399)
!10469 = !DILocalVariable(name: "__ret_warn_on", scope: !10412, file: !3, line: 763, type: !443)
!10470 = !DILocation(line: 763, column: 4, scope: !10412)
!10471 = !DILocation(line: 27, column: 25, scope: !6975, inlinedAt: !10411)
!10472 = !DILocation(line: 71, column: 19, scope: !6980, inlinedAt: !10414)
!10473 = !DILocation(line: 71, column: 22, scope: !6980, inlinedAt: !10414)
!10474 = !DILocation(line: 71, column: 2, scope: !6980, inlinedAt: !10414)
!10475 = !DILocation(line: 72, column: 2, scope: !6980, inlinedAt: !10414)
!10476 = !DILocation(line: 28, column: 26, scope: !6975, inlinedAt: !10411)
!10477 = !DILocation(line: 29, column: 9, scope: !6967, inlinedAt: !10410)
!10478 = !DILocation(line: 763, column: 4, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10412, file: !3, line: 763, column: 4)
!10480 = !DILocation(line: 763, column: 4, scope: !10481)
!10481 = distinct !DILexicalBlock(scope: !10479, file: !3, line: 763, column: 4)
!10482 = !DILocation(line: 763, column: 4, scope: !10483)
!10483 = distinct !DILexicalBlock(scope: !10481, file: !3, line: 763, column: 4)
!10484 = !DILocation(line: 763, column: 4, scope: !10485)
!10485 = distinct !DILexicalBlock(scope: !10481, file: !3, line: 763, column: 4)
!10486 = !{i32 -2139280008, i32 -2139279979, i32 -2139279933, i32 -2139279875, i32 -2139279821, i32 -2139279767, i32 -2139279712, i32 -2139279681}
!10487 = !DILocation(line: 763, column: 4, scope: !10488)
!10488 = distinct !DILexicalBlock(scope: !10481, file: !3, line: 763, column: 4)
!10489 = !{i32 -2139279255, i32 -2139279248, i32 -2139279196, i32 -2139279165, i32 -2139279135}
!10490 = !DILocation(line: 763, column: 4, scope: !10491)
!10491 = distinct !DILexicalBlock(scope: !10481, file: !3, line: 763, column: 4)
!10492 = !DILocation(line: 766, column: 11, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !10399, file: !3, line: 766, column: 4)
!10494 = !DILocation(line: 766, column: 24, scope: !10493)
!10495 = !DILocation(line: 766, column: 9, scope: !10493)
!10496 = !DILocation(line: 766, column: 29, scope: !10497)
!10497 = distinct !DILexicalBlock(scope: !10493, file: !3, line: 766, column: 4)
!10498 = !DILocation(line: 766, column: 31, scope: !10497)
!10499 = !DILocation(line: 766, column: 4, scope: !10493)
!10500 = !DILocation(line: 768, column: 14, scope: !10501)
!10501 = distinct !DILexicalBlock(scope: !10497, file: !3, line: 767, column: 15)
!10502 = !DILocation(line: 768, column: 18, scope: !10501)
!10503 = !DILocation(line: 768, column: 23, scope: !10501)
!10504 = !DILocation(line: 768, column: 11, scope: !10501)
!10505 = !DILocation(line: 769, column: 30, scope: !10501)
!10506 = !DILocation(line: 769, column: 36, scope: !10501)
!10507 = !DILocation(line: 769, column: 46, scope: !10501)
!10508 = !DILocation(line: 769, column: 24, scope: !10501)
!10509 = !DILocation(line: 769, column: 5, scope: !10501)
!10510 = !DILocation(line: 769, column: 12, scope: !10501)
!10511 = !DILocation(line: 769, column: 22, scope: !10501)
!10512 = !DILocation(line: 770, column: 9, scope: !10513)
!10513 = distinct !DILexicalBlock(scope: !10501, file: !3, line: 770, column: 9)
!10514 = !DILocation(line: 770, column: 16, scope: !10513)
!10515 = !DILocation(line: 770, column: 9, scope: !10501)
!10516 = !DILocation(line: 771, column: 13, scope: !10513)
!10517 = !DILocation(line: 771, column: 6, scope: !10513)
!10518 = !DILocation(line: 772, column: 4, scope: !10501)
!10519 = !DILocation(line: 767, column: 11, scope: !10497)
!10520 = !DILocation(line: 766, column: 4, scope: !10497)
!10521 = distinct !{!10521, !10499, !10522}
!10522 = !DILocation(line: 772, column: 4, scope: !10493)
!10523 = !DILocation(line: 774, column: 16, scope: !10399)
!10524 = !DILocation(line: 774, column: 20, scope: !10399)
!10525 = !DILocation(line: 774, column: 40, scope: !10399)
!10526 = !DILocation(line: 45, column: 26, scope: !8672, inlinedAt: !10398)
!10527 = !DILocation(line: 86, column: 20, scope: !8242, inlinedAt: !10405)
!10528 = !DILocation(line: 86, column: 23, scope: !8242, inlinedAt: !10405)
!10529 = !DILocation(line: 86, column: 2, scope: !8242, inlinedAt: !10405)
!10530 = !DILocation(line: 87, column: 2, scope: !8242, inlinedAt: !10405)
!10531 = !DILocation(line: 46, column: 18, scope: !8672, inlinedAt: !10398)
!10532 = !DILocation(line: 46, column: 21, scope: !8672, inlinedAt: !10398)
!10533 = !DILocation(line: 41, column: 2, scope: !8765, inlinedAt: !10397)
!10534 = !DILocation(line: 775, column: 8, scope: !10535)
!10535 = distinct !DILexicalBlock(scope: !10399, file: !3, line: 775, column: 8)
!10536 = !DILocation(line: 775, column: 8, scope: !10399)
!10537 = !DILocation(line: 776, column: 12, scope: !10538)
!10538 = distinct !DILexicalBlock(scope: !10539, file: !3, line: 776, column: 5)
!10539 = distinct !DILexicalBlock(scope: !10535, file: !3, line: 775, column: 17)
!10540 = !DILocation(line: 776, column: 10, scope: !10538)
!10541 = !DILocation(line: 776, column: 17, scope: !10542)
!10542 = distinct !DILexicalBlock(scope: !10538, file: !3, line: 776, column: 5)
!10543 = !DILocation(line: 776, column: 19, scope: !10542)
!10544 = !DILocation(line: 776, column: 5, scope: !10538)
!10545 = !DILocation(line: 777, column: 15, scope: !10546)
!10546 = distinct !DILexicalBlock(scope: !10542, file: !3, line: 776, column: 48)
!10547 = !DILocation(line: 777, column: 19, scope: !10546)
!10548 = !DILocation(line: 777, column: 24, scope: !10546)
!10549 = !DILocation(line: 777, column: 12, scope: !10546)
!10550 = !DILocation(line: 778, column: 10, scope: !10551)
!10551 = distinct !DILexicalBlock(scope: !10546, file: !3, line: 778, column: 10)
!10552 = !DILocation(line: 778, column: 17, scope: !10551)
!10553 = !DILocation(line: 778, column: 10, scope: !10546)
!10554 = !DILocation(line: 780, column: 8, scope: !10551)
!10555 = !DILocation(line: 780, column: 15, scope: !10551)
!10556 = !DILocation(line: 781, column: 8, scope: !10551)
!10557 = !DILocation(line: 781, column: 12, scope: !10551)
!10558 = !DILocation(line: 782, column: 9, scope: !10551)
!10559 = !DILocation(line: 782, column: 16, scope: !10551)
!10560 = !DILocation(line: 779, column: 7, scope: !10551)
!10561 = !DILocation(line: 783, column: 5, scope: !10546)
!10562 = !DILocation(line: 776, column: 44, scope: !10542)
!10563 = !DILocation(line: 776, column: 5, scope: !10542)
!10564 = distinct !{!10564, !10544, !10565}
!10565 = !DILocation(line: 783, column: 5, scope: !10538)
!10566 = !DILocation(line: 785, column: 9, scope: !10567)
!10567 = distinct !DILexicalBlock(scope: !10539, file: !3, line: 785, column: 9)
!10568 = !DILocation(line: 785, column: 9, scope: !10539)
!10569 = !DILocation(line: 786, column: 23, scope: !10567)
!10570 = !DILocation(line: 787, column: 8, scope: !10567)
!10571 = !DILocation(line: 787, column: 12, scope: !10567)
!10572 = !DILocation(line: 787, column: 20, scope: !10567)
!10573 = !DILocation(line: 786, column: 6, scope: !10567)
!10574 = !DILocation(line: 789, column: 4, scope: !10539)
!10575 = !DILocation(line: 794, column: 19, scope: !10576)
!10576 = distinct !DILexicalBlock(scope: !10535, file: !3, line: 789, column: 11)
!10577 = !DILocation(line: 796, column: 3, scope: !10399)
!10578 = !DILocation(line: 798, column: 7, scope: !10579)
!10579 = distinct !DILexicalBlock(scope: !10401, file: !3, line: 798, column: 7)
!10580 = !DILocation(line: 798, column: 7, scope: !10401)
!10581 = !DILocation(line: 799, column: 8, scope: !10582)
!10582 = distinct !DILexicalBlock(scope: !10583, file: !3, line: 799, column: 8)
!10583 = distinct !DILexicalBlock(scope: !10579, file: !3, line: 798, column: 43)
!10584 = !DILocation(line: 799, column: 8, scope: !10583)
!10585 = !DILocation(line: 801, column: 5, scope: !10586)
!10586 = distinct !DILexicalBlock(scope: !10582, file: !3, line: 799, column: 57)
!10587 = !DILocation(line: 804, column: 9, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !10583, file: !3, line: 803, column: 8)
!10589 = !DILocation(line: 804, column: 13, scope: !10588)
!10590 = !DILocation(line: 803, column: 8, scope: !10588)
!10591 = !DILocation(line: 803, column: 8, scope: !10583)
!10592 = !DILocation(line: 805, column: 12, scope: !10588)
!10593 = !DILocation(line: 805, column: 5, scope: !10588)
!10594 = !DILocation(line: 807, column: 24, scope: !10583)
!10595 = !DILocation(line: 807, column: 28, scope: !10583)
!10596 = !DILocation(line: 807, column: 38, scope: !10583)
!10597 = !DILocation(line: 807, column: 4, scope: !10583)
!10598 = !DILocation(line: 808, column: 3, scope: !10583)
!10599 = !DILocation(line: 810, column: 7, scope: !10600)
!10600 = distinct !DILexicalBlock(scope: !10401, file: !3, line: 810, column: 7)
!10601 = !DILocation(line: 810, column: 7, scope: !10401)
!10602 = !DILocation(line: 811, column: 24, scope: !10600)
!10603 = !DILocation(line: 811, column: 28, scope: !10600)
!10604 = !DILocation(line: 811, column: 38, scope: !10600)
!10605 = !DILocation(line: 811, column: 4, scope: !10600)
!10606 = !DILocation(line: 812, column: 2, scope: !10401)
!10607 = !DILocation(line: 815, column: 6, scope: !10608)
!10608 = distinct !DILexicalBlock(scope: !10393, file: !3, line: 815, column: 6)
!10609 = !DILocation(line: 815, column: 6, scope: !10393)
!10610 = !DILocation(line: 816, column: 10, scope: !10608)
!10611 = !DILocation(line: 816, column: 20, scope: !10608)
!10612 = !DILocation(line: 816, column: 24, scope: !10608)
!10613 = !DILocation(line: 816, column: 29, scope: !10608)
!10614 = !DILocation(line: 816, column: 3, scope: !10608)
!10615 = !DILocation(line: 818, column: 9, scope: !10393)
!10616 = !DILocation(line: 818, column: 2, scope: !10393)
!10617 = !DILocation(line: 819, column: 1, scope: !10393)
!10618 = distinct !DISubprogram(name: "mtip_process_errors", scope: !3, file: !3, line: 712, type: !10619, scopeLine: 713, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!10619 = !DISubroutineType(types: !10620)
!10620 = !{null, !945, !938}
!10621 = !DILocalVariable(name: "dd", arg: 1, scope: !10618, file: !3, line: 712, type: !945)
!10622 = !DILocation(line: 712, column: 60, scope: !10618)
!10623 = !DILocalVariable(name: "port_stat", arg: 2, scope: !10618, file: !3, line: 712, type: !938)
!10624 = !DILocation(line: 712, column: 68, scope: !10618)
!10625 = !DILocation(line: 714, column: 6, scope: !10626)
!10626 = distinct !DILexicalBlock(scope: !10618, file: !3, line: 714, column: 6)
!10627 = !DILocation(line: 714, column: 6, scope: !10618)
!10628 = !DILocation(line: 715, column: 3, scope: !10629)
!10629 = distinct !DILexicalBlock(scope: !10626, file: !3, line: 714, column: 46)
!10630 = !DILocation(line: 717, column: 21, scope: !10629)
!10631 = !DILocation(line: 717, column: 25, scope: !10629)
!10632 = !DILocation(line: 717, column: 31, scope: !10629)
!10633 = !DILocation(line: 717, column: 36, scope: !10629)
!10634 = !DILocation(line: 717, column: 3, scope: !10629)
!10635 = !DILocation(line: 718, column: 2, scope: !10629)
!10636 = !DILocation(line: 720, column: 6, scope: !10637)
!10637 = distinct !DILexicalBlock(scope: !10618, file: !3, line: 720, column: 6)
!10638 = !DILocation(line: 720, column: 6, scope: !10618)
!10639 = !DILocation(line: 721, column: 3, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !10637, file: !3, line: 720, column: 45)
!10641 = !DILocation(line: 723, column: 21, scope: !10640)
!10642 = !DILocation(line: 723, column: 25, scope: !10640)
!10643 = !DILocation(line: 723, column: 31, scope: !10640)
!10644 = !DILocation(line: 723, column: 36, scope: !10640)
!10645 = !DILocation(line: 723, column: 3, scope: !10640)
!10646 = !DILocation(line: 724, column: 2, scope: !10640)
!10647 = !DILocation(line: 726, column: 6, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10618, file: !3, line: 726, column: 6)
!10649 = !DILocation(line: 726, column: 6, scope: !10618)
!10650 = !DILocation(line: 727, column: 3, scope: !10651)
!10651 = distinct !DILexicalBlock(scope: !10648, file: !3, line: 726, column: 47)
!10652 = !DILocation(line: 730, column: 35, scope: !10653)
!10653 = distinct !DILexicalBlock(scope: !10651, file: !3, line: 730, column: 7)
!10654 = !DILocation(line: 730, column: 39, scope: !10653)
!10655 = !DILocation(line: 730, column: 7, scope: !10653)
!10656 = !DILocation(line: 730, column: 7, scope: !10651)
!10657 = !DILocation(line: 731, column: 4, scope: !10653)
!10658 = !DILocation(line: 732, column: 2, scope: !10651)
!10659 = !DILocation(line: 733, column: 6, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !10618, file: !3, line: 733, column: 6)
!10661 = !DILocation(line: 733, column: 6, scope: !10618)
!10662 = !DILocation(line: 734, column: 35, scope: !10663)
!10663 = distinct !DILexicalBlock(scope: !10660, file: !3, line: 733, column: 63)
!10664 = !DILocation(line: 734, column: 39, scope: !10663)
!10665 = !DILocation(line: 734, column: 45, scope: !10663)
!10666 = !DILocation(line: 734, column: 3, scope: !10663)
!10667 = !DILocation(line: 735, column: 3, scope: !10663)
!10668 = !DILocation(line: 736, column: 2, scope: !10663)
!10669 = !DILocation(line: 737, column: 1, scope: !10618)
!10670 = distinct !DISubprogram(name: "mtip_process_legacy", scope: !3, file: !3, line: 695, type: !10619, scopeLine: 696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!10671 = !DILocalVariable(name: "dd", arg: 1, scope: !10670, file: !3, line: 695, type: !945)
!10672 = !DILocation(line: 695, column: 60, scope: !10670)
!10673 = !DILocalVariable(name: "port_stat", arg: 2, scope: !10670, file: !3, line: 695, type: !938)
!10674 = !DILocation(line: 695, column: 68, scope: !10670)
!10675 = !DILocalVariable(name: "port", scope: !10670, file: !3, line: 697, type: !6168)
!10676 = !DILocation(line: 697, column: 20, scope: !10670)
!10677 = !DILocation(line: 697, column: 27, scope: !10670)
!10678 = !DILocation(line: 697, column: 31, scope: !10670)
!10679 = !DILocalVariable(name: "cmd", scope: !10670, file: !3, line: 698, type: !8412)
!10680 = !DILocation(line: 698, column: 19, scope: !10670)
!10681 = !DILocation(line: 698, column: 43, scope: !10670)
!10682 = !DILocation(line: 698, column: 25, scope: !10670)
!10683 = !DILocation(line: 700, column: 39, scope: !10684)
!10684 = distinct !DILexicalBlock(scope: !10670, file: !3, line: 700, column: 6)
!10685 = !DILocation(line: 700, column: 45, scope: !10684)
!10686 = !DILocation(line: 700, column: 6, scope: !10684)
!10687 = !DILocation(line: 700, column: 52, scope: !10684)
!10688 = !DILocation(line: 700, column: 55, scope: !10684)
!10689 = !DILocation(line: 700, column: 6, scope: !10670)
!10690 = !DILocalVariable(name: "group", scope: !10691, file: !3, line: 701, type: !443)
!10691 = distinct !DILexicalBlock(scope: !10684, file: !3, line: 700, column: 60)
!10692 = !DILocation(line: 701, column: 7, scope: !10691)
!10693 = !DILocalVariable(name: "status", scope: !10691, file: !3, line: 702, type: !443)
!10694 = !DILocation(line: 702, column: 7, scope: !10691)
!10695 = !DILocation(line: 702, column: 22, scope: !10691)
!10696 = !DILocation(line: 702, column: 28, scope: !10691)
!10697 = !DILocation(line: 702, column: 38, scope: !10691)
!10698 = !DILocation(line: 702, column: 16, scope: !10691)
!10699 = !DILocation(line: 704, column: 9, scope: !10700)
!10700 = distinct !DILexicalBlock(scope: !10691, file: !3, line: 704, column: 7)
!10701 = !DILocation(line: 704, column: 16, scope: !10700)
!10702 = !DILocation(line: 704, column: 7, scope: !10691)
!10703 = !DILocation(line: 705, column: 26, scope: !10700)
!10704 = !DILocation(line: 705, column: 4, scope: !10700)
!10705 = !DILocation(line: 706, column: 2, scope: !10691)
!10706 = !DILocation(line: 707, column: 1, scope: !10670)
!10707 = distinct !DISubprogram(name: "mtip_block_open", scope: !3, file: !3, line: 3344, type: !5789, scopeLine: 3345, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!10708 = !DILocalVariable(name: "dev", arg: 1, scope: !10707, file: !3, line: 3344, type: !1847)
!10709 = !DILocation(line: 3344, column: 49, scope: !10707)
!10710 = !DILocalVariable(name: "mode", arg: 2, scope: !10707, file: !3, line: 3344, type: !3839)
!10711 = !DILocation(line: 3344, column: 62, scope: !10707)
!10712 = !DILocalVariable(name: "dd", scope: !10707, file: !3, line: 3346, type: !945)
!10713 = !DILocation(line: 3346, column: 22, scope: !10707)
!10714 = !DILocation(line: 3348, column: 6, scope: !10715)
!10715 = distinct !DILexicalBlock(scope: !10707, file: !3, line: 3348, column: 6)
!10716 = !DILocation(line: 3348, column: 10, scope: !10715)
!10717 = !DILocation(line: 3348, column: 13, scope: !10715)
!10718 = !DILocation(line: 3348, column: 18, scope: !10715)
!10719 = !DILocation(line: 3348, column: 6, scope: !10707)
!10720 = !DILocation(line: 3349, column: 31, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10715, file: !3, line: 3348, column: 27)
!10722 = !DILocation(line: 3349, column: 36, scope: !10721)
!10723 = !DILocation(line: 3349, column: 45, scope: !10721)
!10724 = !DILocation(line: 3349, column: 8, scope: !10721)
!10725 = !DILocation(line: 3349, column: 6, scope: !10721)
!10726 = !DILocation(line: 3351, column: 7, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10721, file: !3, line: 3351, column: 7)
!10728 = !DILocation(line: 3351, column: 7, scope: !10721)
!10729 = !DILocation(line: 3353, column: 9, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10731, file: !3, line: 3352, column: 8)
!10731 = distinct !DILexicalBlock(scope: !10727, file: !3, line: 3351, column: 11)
!10732 = !DILocation(line: 3353, column: 13, scope: !10730)
!10733 = !DILocation(line: 3352, column: 8, scope: !10730)
!10734 = !DILocation(line: 3352, column: 8, scope: !10731)
!10735 = !DILocation(line: 3354, column: 5, scope: !10736)
!10736 = distinct !DILexicalBlock(scope: !10730, file: !3, line: 3353, column: 23)
!10737 = !DILocation(line: 3356, column: 4, scope: !10731)
!10738 = !DILocation(line: 3358, column: 2, scope: !10721)
!10739 = !DILocation(line: 3359, column: 2, scope: !10707)
!10740 = !DILocation(line: 3360, column: 1, scope: !10707)
!10741 = distinct !DISubprogram(name: "mtip_block_release", scope: !3, file: !3, line: 3362, type: !5793, scopeLine: 3363, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!10742 = !DILocalVariable(name: "disk", arg: 1, scope: !10741, file: !3, line: 3362, type: !952)
!10743 = !DILocation(line: 3362, column: 48, scope: !10741)
!10744 = !DILocalVariable(name: "mode", arg: 2, scope: !10741, file: !3, line: 3362, type: !3839)
!10745 = !DILocation(line: 3362, column: 62, scope: !10741)
!10746 = !DILocation(line: 3364, column: 1, scope: !10741)
!10747 = distinct !DISubprogram(name: "mtip_block_ioctl", scope: !3, file: !3, line: 3202, type: !5801, scopeLine: 3206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!10748 = !DILocalVariable(name: "dev", arg: 1, scope: !10747, file: !3, line: 3202, type: !1847)
!10749 = !DILocation(line: 3202, column: 50, scope: !10747)
!10750 = !DILocalVariable(name: "mode", arg: 2, scope: !10747, file: !3, line: 3203, type: !3839)
!10751 = !DILocation(line: 3203, column: 16, scope: !10747)
!10752 = !DILocalVariable(name: "cmd", arg: 3, scope: !10747, file: !3, line: 3204, type: !7)
!10753 = !DILocation(line: 3204, column: 17, scope: !10747)
!10754 = !DILocalVariable(name: "arg", arg: 4, scope: !10747, file: !3, line: 3205, type: !898)
!10755 = !DILocation(line: 3205, column: 22, scope: !10747)
!10756 = !DILocalVariable(name: "dd", scope: !10747, file: !3, line: 3207, type: !945)
!10757 = !DILocation(line: 3207, column: 22, scope: !10747)
!10758 = !DILocation(line: 3207, column: 27, scope: !10747)
!10759 = !DILocation(line: 3207, column: 32, scope: !10747)
!10760 = !DILocation(line: 3207, column: 41, scope: !10747)
!10761 = !DILocation(line: 3209, column: 7, scope: !10762)
!10762 = distinct !DILexicalBlock(scope: !10747, file: !3, line: 3209, column: 6)
!10763 = !DILocation(line: 3209, column: 6, scope: !10747)
!10764 = !DILocation(line: 3210, column: 3, scope: !10762)
!10765 = !DILocation(line: 3212, column: 7, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10747, file: !3, line: 3212, column: 6)
!10767 = !DILocation(line: 3212, column: 6, scope: !10747)
!10768 = !DILocation(line: 3213, column: 3, scope: !10766)
!10769 = !DILocation(line: 3215, column: 6, scope: !10770)
!10770 = distinct !DILexicalBlock(scope: !10747, file: !3, line: 3215, column: 6)
!10771 = !DILocation(line: 3215, column: 6, scope: !10747)
!10772 = !DILocation(line: 3216, column: 3, scope: !10770)
!10773 = !DILocation(line: 3218, column: 10, scope: !10747)
!10774 = !DILocation(line: 3218, column: 2, scope: !10747)
!10775 = !DILocation(line: 3220, column: 3, scope: !10776)
!10776 = distinct !DILexicalBlock(scope: !10747, file: !3, line: 3218, column: 15)
!10777 = !DILocation(line: 3222, column: 24, scope: !10776)
!10778 = !DILocation(line: 3222, column: 28, scope: !10776)
!10779 = !DILocation(line: 3222, column: 33, scope: !10776)
!10780 = !DILocation(line: 3222, column: 10, scope: !10776)
!10781 = !DILocation(line: 3222, column: 3, scope: !10776)
!10782 = !DILocation(line: 3224, column: 1, scope: !10747)
!10783 = distinct !DISubprogram(name: "mtip_block_getgeo", scope: !3, file: !3, line: 3322, type: !5818, scopeLine: 3324, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!10784 = !DILocalVariable(name: "dev", arg: 1, scope: !10783, file: !3, line: 3322, type: !1847)
!10785 = !DILocation(line: 3322, column: 51, scope: !10783)
!10786 = !DILocalVariable(name: "geo", arg: 2, scope: !10783, file: !3, line: 3323, type: !5820)
!10787 = !DILocation(line: 3323, column: 25, scope: !10783)
!10788 = !DILocalVariable(name: "dd", scope: !10783, file: !3, line: 3325, type: !945)
!10789 = !DILocation(line: 3325, column: 22, scope: !10783)
!10790 = !DILocation(line: 3325, column: 27, scope: !10783)
!10791 = !DILocation(line: 3325, column: 32, scope: !10783)
!10792 = !DILocation(line: 3325, column: 41, scope: !10783)
!10793 = !DILocalVariable(name: "capacity", scope: !10783, file: !3, line: 3326, type: !986)
!10794 = !DILocation(line: 3326, column: 11, scope: !10783)
!10795 = !DILocation(line: 3328, column: 7, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10783, file: !3, line: 3328, column: 6)
!10797 = !DILocation(line: 3328, column: 6, scope: !10783)
!10798 = !DILocation(line: 3329, column: 3, scope: !10796)
!10799 = !DILocation(line: 3331, column: 29, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10783, file: !3, line: 3331, column: 6)
!10801 = !DILocation(line: 3331, column: 8, scope: !10800)
!10802 = !DILocation(line: 3331, column: 6, scope: !10783)
!10803 = !DILocation(line: 3332, column: 3, scope: !10804)
!10804 = distinct !DILexicalBlock(scope: !10800, file: !3, line: 3331, column: 46)
!10805 = !DILocation(line: 3334, column: 3, scope: !10804)
!10806 = !DILocation(line: 3337, column: 2, scope: !10783)
!10807 = !DILocation(line: 3337, column: 7, scope: !10783)
!10808 = !DILocation(line: 3337, column: 13, scope: !10783)
!10809 = !DILocation(line: 3338, column: 2, scope: !10783)
!10810 = !DILocation(line: 3338, column: 7, scope: !10783)
!10811 = !DILocation(line: 3338, column: 15, scope: !10783)
!10812 = !DILocalVariable(name: "__base", scope: !10813, file: !3, line: 3339, type: !1339)
!10813 = distinct !DILexicalBlock(scope: !10783, file: !3, line: 3339, column: 2)
!10814 = !DILocation(line: 3339, column: 2, scope: !10813)
!10815 = !DILocalVariable(name: "__rem", scope: !10813, file: !3, line: 3339, type: !1339)
!10816 = !DILocation(line: 3340, column: 19, scope: !10783)
!10817 = !DILocation(line: 3340, column: 2, scope: !10783)
!10818 = !DILocation(line: 3340, column: 7, scope: !10783)
!10819 = !DILocation(line: 3340, column: 17, scope: !10783)
!10820 = !DILocation(line: 3341, column: 2, scope: !10783)
!10821 = !DILocation(line: 3342, column: 1, scope: !10783)
!10822 = distinct !DISubprogram(name: "mtip_hw_ioctl", scope: !3, file: !3, line: 1954, type: !10823, scopeLine: 1956, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!10823 = !DISubroutineType(types: !10824)
!10824 = !{!443, !945, !7, !898}
!10825 = !DILocalVariable(name: "addr", arg: 1, scope: !10826, file: !10827, line: 138, type: !4027)
!10826 = distinct !DISubprogram(name: "check_copy_size", scope: !10827, file: !10827, line: 138, type: !10828, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!10827 = !DIFile(filename: "./include/linux/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!10828 = !DISubroutineType(types: !10829)
!10829 = !{!1011, !4027, !1121, !1011}
!10830 = !DILocation(line: 138, column: 29, scope: !10826, inlinedAt: !10831)
!10831 = distinct !DILocation(line: 199, column: 6, scope: !10832, inlinedAt: !10837)
!10832 = distinct !DILexicalBlock(scope: !10834, file: !10833, line: 199, column: 6)
!10833 = !DIFile(filename: "./include/linux/uaccess.h", directory: "/home/lizy2001/genbc/linux")
!10834 = distinct !DISubprogram(name: "copy_to_user", scope: !10833, file: !10833, line: 197, type: !10835, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!10835 = !DISubroutineType(types: !10836)
!10836 = !{!898, !890, !4027, !898}
!10837 = distinct !DILocation(line: 2024, column: 7, scope: !10838)
!10838 = distinct !DILexicalBlock(scope: !10839, file: !3, line: 2024, column: 7)
!10839 = distinct !DILexicalBlock(scope: !10840, file: !3, line: 2011, column: 28)
!10840 = distinct !DILexicalBlock(scope: !10822, file: !3, line: 1957, column: 15)
!10841 = !DILocalVariable(name: "bytes", arg: 2, scope: !10826, file: !10827, line: 138, type: !1121)
!10842 = !DILocation(line: 138, column: 42, scope: !10826, inlinedAt: !10831)
!10843 = !DILocalVariable(name: "is_source", arg: 3, scope: !10826, file: !10827, line: 138, type: !1011)
!10844 = !DILocation(line: 138, column: 54, scope: !10826, inlinedAt: !10831)
!10845 = !DILocalVariable(name: "sz", scope: !10826, file: !10827, line: 140, type: !443)
!10846 = !DILocation(line: 140, column: 6, scope: !10826, inlinedAt: !10831)
!10847 = !DILocalVariable(name: "__ret_warn_on", scope: !10848, file: !10827, line: 150, type: !443)
!10848 = distinct !DILexicalBlock(scope: !10849, file: !10827, line: 150, column: 6)
!10849 = distinct !DILexicalBlock(scope: !10826, file: !10827, line: 150, column: 6)
!10850 = !DILocation(line: 150, column: 6, scope: !10848, inlinedAt: !10831)
!10851 = !DILocalVariable(name: "to", arg: 1, scope: !10834, file: !10833, line: 197, type: !890)
!10852 = !DILocation(line: 197, column: 27, scope: !10834, inlinedAt: !10837)
!10853 = !DILocalVariable(name: "from", arg: 2, scope: !10834, file: !10833, line: 197, type: !4027)
!10854 = !DILocation(line: 197, column: 43, scope: !10834, inlinedAt: !10837)
!10855 = !DILocalVariable(name: "n", arg: 3, scope: !10834, file: !10833, line: 197, type: !898)
!10856 = !DILocation(line: 197, column: 63, scope: !10834, inlinedAt: !10837)
!10857 = !DILocation(line: 138, column: 29, scope: !10826, inlinedAt: !10858)
!10858 = distinct !DILocation(line: 191, column: 6, scope: !10859, inlinedAt: !10861)
!10859 = distinct !DILexicalBlock(scope: !10860, file: !10833, line: 191, column: 6)
!10860 = distinct !DISubprogram(name: "copy_from_user", scope: !10833, file: !10833, line: 189, type: !10835, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!10861 = distinct !DILocation(line: 2015, column: 7, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10839, file: !3, line: 2015, column: 7)
!10863 = !DILocation(line: 138, column: 42, scope: !10826, inlinedAt: !10858)
!10864 = !DILocation(line: 138, column: 54, scope: !10826, inlinedAt: !10858)
!10865 = !DILocation(line: 140, column: 6, scope: !10826, inlinedAt: !10858)
!10866 = !DILocation(line: 150, column: 6, scope: !10848, inlinedAt: !10858)
!10867 = !DILocalVariable(name: "to", arg: 1, scope: !10860, file: !10833, line: 189, type: !890)
!10868 = !DILocation(line: 189, column: 22, scope: !10860, inlinedAt: !10861)
!10869 = !DILocalVariable(name: "from", arg: 2, scope: !10860, file: !10833, line: 189, type: !4027)
!10870 = !DILocation(line: 189, column: 45, scope: !10860, inlinedAt: !10861)
!10871 = !DILocalVariable(name: "n", arg: 3, scope: !10860, file: !10833, line: 189, type: !898)
!10872 = !DILocation(line: 189, column: 65, scope: !10860, inlinedAt: !10861)
!10873 = !DILocation(line: 138, column: 29, scope: !10826, inlinedAt: !10874)
!10874 = distinct !DILocation(line: 199, column: 6, scope: !10832, inlinedAt: !10875)
!10875 = distinct !DILocation(line: 2004, column: 7, scope: !10876)
!10876 = distinct !DILexicalBlock(scope: !10877, file: !3, line: 2004, column: 7)
!10877 = distinct !DILexicalBlock(scope: !10840, file: !3, line: 1990, column: 2)
!10878 = !DILocation(line: 138, column: 42, scope: !10826, inlinedAt: !10874)
!10879 = !DILocation(line: 138, column: 54, scope: !10826, inlinedAt: !10874)
!10880 = !DILocation(line: 140, column: 6, scope: !10826, inlinedAt: !10874)
!10881 = !DILocation(line: 150, column: 6, scope: !10848, inlinedAt: !10874)
!10882 = !DILocation(line: 197, column: 27, scope: !10834, inlinedAt: !10875)
!10883 = !DILocation(line: 197, column: 43, scope: !10834, inlinedAt: !10875)
!10884 = !DILocation(line: 197, column: 63, scope: !10834, inlinedAt: !10875)
!10885 = !DILocation(line: 138, column: 29, scope: !10826, inlinedAt: !10886)
!10886 = distinct !DILocation(line: 191, column: 6, scope: !10859, inlinedAt: !10887)
!10887 = distinct !DILocation(line: 1994, column: 7, scope: !10888)
!10888 = distinct !DILexicalBlock(scope: !10877, file: !3, line: 1994, column: 7)
!10889 = !DILocation(line: 138, column: 42, scope: !10826, inlinedAt: !10886)
!10890 = !DILocation(line: 138, column: 54, scope: !10826, inlinedAt: !10886)
!10891 = !DILocation(line: 140, column: 6, scope: !10826, inlinedAt: !10886)
!10892 = !DILocation(line: 150, column: 6, scope: !10848, inlinedAt: !10886)
!10893 = !DILocation(line: 189, column: 22, scope: !10860, inlinedAt: !10887)
!10894 = !DILocation(line: 189, column: 45, scope: !10860, inlinedAt: !10887)
!10895 = !DILocation(line: 189, column: 65, scope: !10860, inlinedAt: !10887)
!10896 = !DILocation(line: 138, column: 29, scope: !10826, inlinedAt: !10897)
!10897 = distinct !DILocation(line: 199, column: 6, scope: !10832, inlinedAt: !10898)
!10898 = distinct !DILocation(line: 1982, column: 7, scope: !10899)
!10899 = distinct !DILexicalBlock(scope: !10900, file: !3, line: 1982, column: 7)
!10900 = distinct !DILexicalBlock(scope: !10840, file: !3, line: 1966, column: 2)
!10901 = !DILocation(line: 138, column: 42, scope: !10826, inlinedAt: !10897)
!10902 = !DILocation(line: 138, column: 54, scope: !10826, inlinedAt: !10897)
!10903 = !DILocation(line: 140, column: 6, scope: !10826, inlinedAt: !10897)
!10904 = !DILocation(line: 150, column: 6, scope: !10848, inlinedAt: !10897)
!10905 = !DILocation(line: 197, column: 27, scope: !10834, inlinedAt: !10898)
!10906 = !DILocation(line: 197, column: 43, scope: !10834, inlinedAt: !10898)
!10907 = !DILocation(line: 197, column: 63, scope: !10834, inlinedAt: !10898)
!10908 = !DILocation(line: 138, column: 29, scope: !10826, inlinedAt: !10909)
!10909 = distinct !DILocation(line: 191, column: 6, scope: !10859, inlinedAt: !10910)
!10910 = distinct !DILocation(line: 1970, column: 7, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10900, file: !3, line: 1970, column: 7)
!10912 = !DILocation(line: 138, column: 42, scope: !10826, inlinedAt: !10909)
!10913 = !DILocation(line: 138, column: 54, scope: !10826, inlinedAt: !10909)
!10914 = !DILocation(line: 140, column: 6, scope: !10826, inlinedAt: !10909)
!10915 = !DILocation(line: 150, column: 6, scope: !10848, inlinedAt: !10909)
!10916 = !DILocation(line: 189, column: 22, scope: !10860, inlinedAt: !10910)
!10917 = !DILocation(line: 189, column: 45, scope: !10860, inlinedAt: !10910)
!10918 = !DILocation(line: 189, column: 65, scope: !10860, inlinedAt: !10910)
!10919 = !DILocation(line: 138, column: 29, scope: !10826, inlinedAt: !10920)
!10920 = distinct !DILocation(line: 199, column: 6, scope: !10832, inlinedAt: !10921)
!10921 = distinct !DILocation(line: 1960, column: 7, scope: !10922)
!10922 = distinct !DILexicalBlock(scope: !10923, file: !3, line: 1960, column: 7)
!10923 = distinct !DILexicalBlock(scope: !10840, file: !3, line: 1959, column: 2)
!10924 = !DILocation(line: 138, column: 42, scope: !10826, inlinedAt: !10920)
!10925 = !DILocation(line: 138, column: 54, scope: !10826, inlinedAt: !10920)
!10926 = !DILocation(line: 140, column: 6, scope: !10826, inlinedAt: !10920)
!10927 = !DILocation(line: 150, column: 6, scope: !10848, inlinedAt: !10920)
!10928 = !DILocation(line: 197, column: 27, scope: !10834, inlinedAt: !10921)
!10929 = !DILocation(line: 197, column: 43, scope: !10834, inlinedAt: !10921)
!10930 = !DILocation(line: 197, column: 63, scope: !10834, inlinedAt: !10921)
!10931 = !DILocalVariable(name: "dd", arg: 1, scope: !10822, file: !3, line: 1954, type: !945)
!10932 = !DILocation(line: 1954, column: 46, scope: !10822)
!10933 = !DILocalVariable(name: "cmd", arg: 2, scope: !10822, file: !3, line: 1954, type: !7)
!10934 = !DILocation(line: 1954, column: 63, scope: !10822)
!10935 = !DILocalVariable(name: "arg", arg: 3, scope: !10822, file: !3, line: 1955, type: !898)
!10936 = !DILocation(line: 1955, column: 19, scope: !10822)
!10937 = !DILocation(line: 1957, column: 10, scope: !10822)
!10938 = !DILocation(line: 1957, column: 2, scope: !10822)
!10939 = !DILocation(line: 1960, column: 35, scope: !10922)
!10940 = !DILocation(line: 1960, column: 20, scope: !10922)
!10941 = !DILocation(line: 1960, column: 40, scope: !10922)
!10942 = !DILocation(line: 1960, column: 44, scope: !10922)
!10943 = !DILocation(line: 1960, column: 50, scope: !10922)
!10944 = !DILocation(line: 199, column: 6, scope: !10832, inlinedAt: !10921)
!10945 = !DILocation(line: 141, column: 6, scope: !10946, inlinedAt: !10920)
!10946 = distinct !DILexicalBlock(scope: !10826, file: !10827, line: 141, column: 6)
!10947 = !DILocation(line: 0, scope: !10946, inlinedAt: !10920)
!10948 = !DILocation(line: 141, column: 6, scope: !10826, inlinedAt: !10920)
!10949 = !DILocation(line: 142, column: 29, scope: !10950, inlinedAt: !10920)
!10950 = distinct !DILexicalBlock(scope: !10951, file: !10827, line: 142, column: 7)
!10951 = distinct !DILexicalBlock(scope: !10946, file: !10827, line: 141, column: 39)
!10952 = !DILocation(line: 142, column: 8, scope: !10950, inlinedAt: !10920)
!10953 = !DILocation(line: 142, column: 7, scope: !10951, inlinedAt: !10920)
!10954 = !DILocation(line: 143, column: 18, scope: !10950, inlinedAt: !10920)
!10955 = !DILocation(line: 143, column: 22, scope: !10950, inlinedAt: !10920)
!10956 = !DILocation(line: 143, column: 4, scope: !10950, inlinedAt: !10920)
!10957 = !DILocation(line: 144, column: 12, scope: !10958, inlinedAt: !10920)
!10958 = distinct !DILexicalBlock(scope: !10950, file: !10827, line: 144, column: 12)
!10959 = !DILocation(line: 144, column: 12, scope: !10950, inlinedAt: !10920)
!10960 = !DILocation(line: 145, column: 4, scope: !10958, inlinedAt: !10920)
!10961 = !DILocation(line: 147, column: 4, scope: !10958, inlinedAt: !10920)
!10962 = !DILocation(line: 148, column: 3, scope: !10951, inlinedAt: !10920)
!10963 = !DILocation(line: 150, column: 6, scope: !10964, inlinedAt: !10920)
!10964 = distinct !DILexicalBlock(scope: !10848, file: !10827, line: 150, column: 6)
!10965 = !DILocation(line: 150, column: 6, scope: !10966, inlinedAt: !10920)
!10966 = distinct !DILexicalBlock(scope: !10967, file: !10827, line: 150, column: 6)
!10967 = distinct !DILexicalBlock(scope: !10964, file: !10827, line: 150, column: 6)
!10968 = !{i32 -2145347716, i32 -2145347687, i32 -2145347641, i32 -2145347583, i32 -2145347529, i32 -2145347475, i32 -2145347420, i32 -2145347389}
!10969 = !DILocation(line: 150, column: 6, scope: !10970, inlinedAt: !10920)
!10970 = distinct !DILexicalBlock(scope: !10967, file: !10827, line: 150, column: 6)
!10971 = !{i32 -2145346969, i32 -2145346962, i32 -2145346910, i32 -2145346879, i32 -2145346849}
!10972 = !DILocation(line: 150, column: 6, scope: !10967, inlinedAt: !10920)
!10973 = !DILocation(line: 150, column: 6, scope: !10849, inlinedAt: !10920)
!10974 = !DILocation(line: 150, column: 6, scope: !10826, inlinedAt: !10920)
!10975 = !DILocation(line: 151, column: 3, scope: !10849, inlinedAt: !10920)
!10976 = !DILocation(line: 152, column: 20, scope: !10826, inlinedAt: !10920)
!10977 = !DILocation(line: 152, column: 26, scope: !10826, inlinedAt: !10920)
!10978 = !DILocation(line: 152, column: 33, scope: !10826, inlinedAt: !10920)
!10979 = !DILocation(line: 152, column: 2, scope: !10826, inlinedAt: !10920)
!10980 = !DILocation(line: 153, column: 2, scope: !10826, inlinedAt: !10920)
!10981 = !DILocation(line: 154, column: 1, scope: !10826, inlinedAt: !10920)
!10982 = !DILocation(line: 199, column: 6, scope: !10834, inlinedAt: !10921)
!10983 = !DILocation(line: 200, column: 21, scope: !10832, inlinedAt: !10921)
!10984 = !DILocation(line: 200, column: 25, scope: !10832, inlinedAt: !10921)
!10985 = !DILocation(line: 200, column: 31, scope: !10832, inlinedAt: !10921)
!10986 = !DILocation(line: 200, column: 7, scope: !10832, inlinedAt: !10921)
!10987 = !DILocation(line: 200, column: 5, scope: !10832, inlinedAt: !10921)
!10988 = !DILocation(line: 200, column: 3, scope: !10832, inlinedAt: !10921)
!10989 = !DILocation(line: 201, column: 9, scope: !10834, inlinedAt: !10921)
!10990 = !DILocation(line: 1960, column: 7, scope: !10922)
!10991 = !DILocation(line: 1960, column: 7, scope: !10923)
!10992 = !DILocation(line: 1962, column: 4, scope: !10922)
!10993 = !DILocation(line: 1963, column: 3, scope: !10923)
!10994 = !DILocalVariable(name: "drive_command", scope: !10900, file: !3, line: 1967, type: !10995)
!10995 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1862, size: 32, elements: !1909)
!10996 = !DILocation(line: 1967, column: 6, scope: !10900)
!10997 = !DILocation(line: 1970, column: 22, scope: !10911)
!10998 = !DILocation(line: 1971, column: 23, scope: !10911)
!10999 = !DILocation(line: 1971, column: 7, scope: !10911)
!11000 = !DILocation(line: 191, column: 6, scope: !10859, inlinedAt: !10910)
!11001 = !DILocation(line: 141, column: 6, scope: !10946, inlinedAt: !10909)
!11002 = !DILocation(line: 0, scope: !10946, inlinedAt: !10909)
!11003 = !DILocation(line: 141, column: 6, scope: !10826, inlinedAt: !10909)
!11004 = !DILocation(line: 142, column: 29, scope: !10950, inlinedAt: !10909)
!11005 = !DILocation(line: 142, column: 8, scope: !10950, inlinedAt: !10909)
!11006 = !DILocation(line: 142, column: 7, scope: !10951, inlinedAt: !10909)
!11007 = !DILocation(line: 143, column: 18, scope: !10950, inlinedAt: !10909)
!11008 = !DILocation(line: 143, column: 22, scope: !10950, inlinedAt: !10909)
!11009 = !DILocation(line: 143, column: 4, scope: !10950, inlinedAt: !10909)
!11010 = !DILocation(line: 144, column: 12, scope: !10958, inlinedAt: !10909)
!11011 = !DILocation(line: 144, column: 12, scope: !10950, inlinedAt: !10909)
!11012 = !DILocation(line: 145, column: 4, scope: !10958, inlinedAt: !10909)
!11013 = !DILocation(line: 147, column: 4, scope: !10958, inlinedAt: !10909)
!11014 = !DILocation(line: 148, column: 3, scope: !10951, inlinedAt: !10909)
!11015 = !DILocation(line: 150, column: 6, scope: !10964, inlinedAt: !10909)
!11016 = !DILocation(line: 150, column: 6, scope: !10966, inlinedAt: !10909)
!11017 = !DILocation(line: 150, column: 6, scope: !10970, inlinedAt: !10909)
!11018 = !DILocation(line: 150, column: 6, scope: !10967, inlinedAt: !10909)
!11019 = !DILocation(line: 150, column: 6, scope: !10849, inlinedAt: !10909)
!11020 = !DILocation(line: 150, column: 6, scope: !10826, inlinedAt: !10909)
!11021 = !DILocation(line: 151, column: 3, scope: !10849, inlinedAt: !10909)
!11022 = !DILocation(line: 152, column: 20, scope: !10826, inlinedAt: !10909)
!11023 = !DILocation(line: 152, column: 26, scope: !10826, inlinedAt: !10909)
!11024 = !DILocation(line: 152, column: 33, scope: !10826, inlinedAt: !10909)
!11025 = !DILocation(line: 152, column: 2, scope: !10826, inlinedAt: !10909)
!11026 = !DILocation(line: 153, column: 2, scope: !10826, inlinedAt: !10909)
!11027 = !DILocation(line: 154, column: 1, scope: !10826, inlinedAt: !10909)
!11028 = !DILocation(line: 191, column: 6, scope: !10860, inlinedAt: !10910)
!11029 = !DILocation(line: 192, column: 23, scope: !10859, inlinedAt: !10910)
!11030 = !DILocation(line: 192, column: 27, scope: !10859, inlinedAt: !10910)
!11031 = !DILocation(line: 192, column: 33, scope: !10859, inlinedAt: !10910)
!11032 = !DILocation(line: 192, column: 7, scope: !10859, inlinedAt: !10910)
!11033 = !DILocation(line: 192, column: 5, scope: !10859, inlinedAt: !10910)
!11034 = !DILocation(line: 192, column: 3, scope: !10859, inlinedAt: !10910)
!11035 = !DILocation(line: 193, column: 9, scope: !10860, inlinedAt: !10910)
!11036 = !DILocation(line: 1970, column: 7, scope: !10911)
!11037 = !DILocation(line: 1970, column: 7, scope: !10900)
!11038 = !DILocation(line: 1973, column: 4, scope: !10911)
!11039 = !DILocation(line: 1976, column: 26, scope: !11040)
!11040 = distinct !DILexicalBlock(scope: !10900, file: !3, line: 1976, column: 7)
!11041 = !DILocation(line: 1976, column: 30, scope: !11040)
!11042 = !DILocation(line: 1977, column: 7, scope: !11040)
!11043 = !DILocation(line: 1978, column: 24, scope: !11040)
!11044 = !DILocation(line: 1978, column: 27, scope: !11040)
!11045 = !DILocation(line: 1978, column: 7, scope: !11040)
!11046 = !DILocation(line: 1976, column: 7, scope: !11040)
!11047 = !DILocation(line: 1976, column: 7, scope: !10900)
!11048 = !DILocation(line: 1979, column: 4, scope: !11040)
!11049 = !DILocation(line: 1982, column: 36, scope: !10899)
!11050 = !DILocation(line: 1982, column: 20, scope: !10899)
!11051 = !DILocation(line: 1983, column: 7, scope: !10899)
!11052 = !DILocation(line: 199, column: 6, scope: !10832, inlinedAt: !10898)
!11053 = !DILocation(line: 141, column: 6, scope: !10946, inlinedAt: !10897)
!11054 = !DILocation(line: 0, scope: !10946, inlinedAt: !10897)
!11055 = !DILocation(line: 141, column: 6, scope: !10826, inlinedAt: !10897)
!11056 = !DILocation(line: 142, column: 29, scope: !10950, inlinedAt: !10897)
!11057 = !DILocation(line: 142, column: 8, scope: !10950, inlinedAt: !10897)
!11058 = !DILocation(line: 142, column: 7, scope: !10951, inlinedAt: !10897)
!11059 = !DILocation(line: 143, column: 18, scope: !10950, inlinedAt: !10897)
!11060 = !DILocation(line: 143, column: 22, scope: !10950, inlinedAt: !10897)
!11061 = !DILocation(line: 143, column: 4, scope: !10950, inlinedAt: !10897)
!11062 = !DILocation(line: 144, column: 12, scope: !10958, inlinedAt: !10897)
!11063 = !DILocation(line: 144, column: 12, scope: !10950, inlinedAt: !10897)
!11064 = !DILocation(line: 145, column: 4, scope: !10958, inlinedAt: !10897)
!11065 = !DILocation(line: 147, column: 4, scope: !10958, inlinedAt: !10897)
!11066 = !DILocation(line: 148, column: 3, scope: !10951, inlinedAt: !10897)
!11067 = !DILocation(line: 150, column: 6, scope: !10964, inlinedAt: !10897)
!11068 = !DILocation(line: 150, column: 6, scope: !10966, inlinedAt: !10897)
!11069 = !DILocation(line: 150, column: 6, scope: !10970, inlinedAt: !10897)
!11070 = !DILocation(line: 150, column: 6, scope: !10967, inlinedAt: !10897)
!11071 = !DILocation(line: 150, column: 6, scope: !10849, inlinedAt: !10897)
!11072 = !DILocation(line: 150, column: 6, scope: !10826, inlinedAt: !10897)
!11073 = !DILocation(line: 151, column: 3, scope: !10849, inlinedAt: !10897)
!11074 = !DILocation(line: 152, column: 20, scope: !10826, inlinedAt: !10897)
!11075 = !DILocation(line: 152, column: 26, scope: !10826, inlinedAt: !10897)
!11076 = !DILocation(line: 152, column: 33, scope: !10826, inlinedAt: !10897)
!11077 = !DILocation(line: 152, column: 2, scope: !10826, inlinedAt: !10897)
!11078 = !DILocation(line: 153, column: 2, scope: !10826, inlinedAt: !10897)
!11079 = !DILocation(line: 154, column: 1, scope: !10826, inlinedAt: !10897)
!11080 = !DILocation(line: 199, column: 6, scope: !10834, inlinedAt: !10898)
!11081 = !DILocation(line: 200, column: 21, scope: !10832, inlinedAt: !10898)
!11082 = !DILocation(line: 200, column: 25, scope: !10832, inlinedAt: !10898)
!11083 = !DILocation(line: 200, column: 31, scope: !10832, inlinedAt: !10898)
!11084 = !DILocation(line: 200, column: 7, scope: !10832, inlinedAt: !10898)
!11085 = !DILocation(line: 200, column: 5, scope: !10832, inlinedAt: !10898)
!11086 = !DILocation(line: 200, column: 3, scope: !10832, inlinedAt: !10898)
!11087 = !DILocation(line: 201, column: 9, scope: !10834, inlinedAt: !10898)
!11088 = !DILocation(line: 1982, column: 7, scope: !10899)
!11089 = !DILocation(line: 1982, column: 7, scope: !10900)
!11090 = !DILocation(line: 1985, column: 4, scope: !10899)
!11091 = !DILocation(line: 1987, column: 3, scope: !10900)
!11092 = !DILocalVariable(name: "drive_command", scope: !10877, file: !3, line: 1991, type: !11093)
!11093 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1862, size: 56, elements: !3323)
!11094 = !DILocation(line: 1991, column: 6, scope: !10877)
!11095 = !DILocation(line: 1994, column: 22, scope: !10888)
!11096 = !DILocation(line: 1995, column: 23, scope: !10888)
!11097 = !DILocation(line: 1995, column: 7, scope: !10888)
!11098 = !DILocation(line: 191, column: 6, scope: !10859, inlinedAt: !10887)
!11099 = !DILocation(line: 141, column: 6, scope: !10946, inlinedAt: !10886)
!11100 = !DILocation(line: 0, scope: !10946, inlinedAt: !10886)
!11101 = !DILocation(line: 141, column: 6, scope: !10826, inlinedAt: !10886)
!11102 = !DILocation(line: 142, column: 29, scope: !10950, inlinedAt: !10886)
!11103 = !DILocation(line: 142, column: 8, scope: !10950, inlinedAt: !10886)
!11104 = !DILocation(line: 142, column: 7, scope: !10951, inlinedAt: !10886)
!11105 = !DILocation(line: 143, column: 18, scope: !10950, inlinedAt: !10886)
!11106 = !DILocation(line: 143, column: 22, scope: !10950, inlinedAt: !10886)
!11107 = !DILocation(line: 143, column: 4, scope: !10950, inlinedAt: !10886)
!11108 = !DILocation(line: 144, column: 12, scope: !10958, inlinedAt: !10886)
!11109 = !DILocation(line: 144, column: 12, scope: !10950, inlinedAt: !10886)
!11110 = !DILocation(line: 145, column: 4, scope: !10958, inlinedAt: !10886)
!11111 = !DILocation(line: 147, column: 4, scope: !10958, inlinedAt: !10886)
!11112 = !DILocation(line: 148, column: 3, scope: !10951, inlinedAt: !10886)
!11113 = !DILocation(line: 150, column: 6, scope: !10964, inlinedAt: !10886)
!11114 = !DILocation(line: 150, column: 6, scope: !10966, inlinedAt: !10886)
!11115 = !DILocation(line: 150, column: 6, scope: !10970, inlinedAt: !10886)
!11116 = !DILocation(line: 150, column: 6, scope: !10967, inlinedAt: !10886)
!11117 = !DILocation(line: 150, column: 6, scope: !10849, inlinedAt: !10886)
!11118 = !DILocation(line: 150, column: 6, scope: !10826, inlinedAt: !10886)
!11119 = !DILocation(line: 151, column: 3, scope: !10849, inlinedAt: !10886)
!11120 = !DILocation(line: 152, column: 20, scope: !10826, inlinedAt: !10886)
!11121 = !DILocation(line: 152, column: 26, scope: !10826, inlinedAt: !10886)
!11122 = !DILocation(line: 152, column: 33, scope: !10826, inlinedAt: !10886)
!11123 = !DILocation(line: 152, column: 2, scope: !10826, inlinedAt: !10886)
!11124 = !DILocation(line: 153, column: 2, scope: !10826, inlinedAt: !10886)
!11125 = !DILocation(line: 154, column: 1, scope: !10826, inlinedAt: !10886)
!11126 = !DILocation(line: 191, column: 6, scope: !10860, inlinedAt: !10887)
!11127 = !DILocation(line: 192, column: 23, scope: !10859, inlinedAt: !10887)
!11128 = !DILocation(line: 192, column: 27, scope: !10859, inlinedAt: !10887)
!11129 = !DILocation(line: 192, column: 33, scope: !10859, inlinedAt: !10887)
!11130 = !DILocation(line: 192, column: 7, scope: !10859, inlinedAt: !10887)
!11131 = !DILocation(line: 192, column: 5, scope: !10859, inlinedAt: !10887)
!11132 = !DILocation(line: 192, column: 3, scope: !10859, inlinedAt: !10887)
!11133 = !DILocation(line: 193, column: 9, scope: !10860, inlinedAt: !10887)
!11134 = !DILocation(line: 1994, column: 7, scope: !10888)
!11135 = !DILocation(line: 1994, column: 7, scope: !10877)
!11136 = !DILocation(line: 1997, column: 4, scope: !10888)
!11137 = !DILocation(line: 2000, column: 23, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !10877, file: !3, line: 2000, column: 7)
!11139 = !DILocation(line: 2000, column: 27, scope: !11138)
!11140 = !DILocation(line: 2000, column: 33, scope: !11138)
!11141 = !DILocation(line: 2000, column: 7, scope: !11138)
!11142 = !DILocation(line: 2000, column: 7, scope: !10877)
!11143 = !DILocation(line: 2001, column: 4, scope: !11138)
!11144 = !DILocation(line: 2004, column: 36, scope: !10876)
!11145 = !DILocation(line: 2004, column: 20, scope: !10876)
!11146 = !DILocation(line: 2005, column: 7, scope: !10876)
!11147 = !DILocation(line: 199, column: 6, scope: !10832, inlinedAt: !10875)
!11148 = !DILocation(line: 141, column: 6, scope: !10946, inlinedAt: !10874)
!11149 = !DILocation(line: 0, scope: !10946, inlinedAt: !10874)
!11150 = !DILocation(line: 141, column: 6, scope: !10826, inlinedAt: !10874)
!11151 = !DILocation(line: 142, column: 29, scope: !10950, inlinedAt: !10874)
!11152 = !DILocation(line: 142, column: 8, scope: !10950, inlinedAt: !10874)
!11153 = !DILocation(line: 142, column: 7, scope: !10951, inlinedAt: !10874)
!11154 = !DILocation(line: 143, column: 18, scope: !10950, inlinedAt: !10874)
!11155 = !DILocation(line: 143, column: 22, scope: !10950, inlinedAt: !10874)
!11156 = !DILocation(line: 143, column: 4, scope: !10950, inlinedAt: !10874)
!11157 = !DILocation(line: 144, column: 12, scope: !10958, inlinedAt: !10874)
!11158 = !DILocation(line: 144, column: 12, scope: !10950, inlinedAt: !10874)
!11159 = !DILocation(line: 145, column: 4, scope: !10958, inlinedAt: !10874)
!11160 = !DILocation(line: 147, column: 4, scope: !10958, inlinedAt: !10874)
!11161 = !DILocation(line: 148, column: 3, scope: !10951, inlinedAt: !10874)
!11162 = !DILocation(line: 150, column: 6, scope: !10964, inlinedAt: !10874)
!11163 = !DILocation(line: 150, column: 6, scope: !10966, inlinedAt: !10874)
!11164 = !DILocation(line: 150, column: 6, scope: !10970, inlinedAt: !10874)
!11165 = !DILocation(line: 150, column: 6, scope: !10967, inlinedAt: !10874)
!11166 = !DILocation(line: 150, column: 6, scope: !10849, inlinedAt: !10874)
!11167 = !DILocation(line: 150, column: 6, scope: !10826, inlinedAt: !10874)
!11168 = !DILocation(line: 151, column: 3, scope: !10849, inlinedAt: !10874)
!11169 = !DILocation(line: 152, column: 20, scope: !10826, inlinedAt: !10874)
!11170 = !DILocation(line: 152, column: 26, scope: !10826, inlinedAt: !10874)
!11171 = !DILocation(line: 152, column: 33, scope: !10826, inlinedAt: !10874)
!11172 = !DILocation(line: 152, column: 2, scope: !10826, inlinedAt: !10874)
!11173 = !DILocation(line: 153, column: 2, scope: !10826, inlinedAt: !10874)
!11174 = !DILocation(line: 154, column: 1, scope: !10826, inlinedAt: !10874)
!11175 = !DILocation(line: 199, column: 6, scope: !10834, inlinedAt: !10875)
!11176 = !DILocation(line: 200, column: 21, scope: !10832, inlinedAt: !10875)
!11177 = !DILocation(line: 200, column: 25, scope: !10832, inlinedAt: !10875)
!11178 = !DILocation(line: 200, column: 31, scope: !10832, inlinedAt: !10875)
!11179 = !DILocation(line: 200, column: 7, scope: !10832, inlinedAt: !10875)
!11180 = !DILocation(line: 200, column: 5, scope: !10832, inlinedAt: !10875)
!11181 = !DILocation(line: 200, column: 3, scope: !10832, inlinedAt: !10875)
!11182 = !DILocation(line: 201, column: 9, scope: !10834, inlinedAt: !10875)
!11183 = !DILocation(line: 2004, column: 7, scope: !10876)
!11184 = !DILocation(line: 2004, column: 7, scope: !10877)
!11185 = !DILocation(line: 2007, column: 4, scope: !10876)
!11186 = !DILocation(line: 2009, column: 3, scope: !10877)
!11187 = !DILocalVariable(name: "req_task", scope: !10839, file: !3, line: 2012, type: !11188)
!11188 = !DIDerivedType(tag: DW_TAG_typedef, name: "ide_task_request_t", file: !5822, line: 69, baseType: !11189)
!11189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ide_task_request_s", file: !5822, line: 60, size: 384, elements: !11190)
!11190 = !{!11191, !11193, !11194, !11218, !11219, !11220, !11221, !11222}
!11191 = !DIDerivedType(tag: DW_TAG_member, name: "io_ports", scope: !11189, file: !5822, line: 61, baseType: !11192, size: 64)
!11192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1863, size: 64, elements: !2391)
!11193 = !DIDerivedType(tag: DW_TAG_member, name: "hob_ports", scope: !11189, file: !5822, line: 62, baseType: !11192, size: 64, offset: 64)
!11194 = !DIDerivedType(tag: DW_TAG_member, name: "out_flags", scope: !11189, file: !5822, line: 63, baseType: !11195, size: 32, offset: 128)
!11195 = !DIDerivedType(tag: DW_TAG_typedef, name: "ide_reg_valid_t", file: !5822, line: 58, baseType: !11196)
!11196 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ide_reg_valid_s", file: !5822, line: 37, size: 32, elements: !11197)
!11197 = !{!11198, !11199}
!11198 = !DIDerivedType(tag: DW_TAG_member, name: "all", scope: !11196, file: !5822, line: 38, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!11199 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !11196, file: !5822, line: 57, baseType: !11200, size: 32)
!11200 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11196, file: !5822, line: 39, size: 32, elements: !11201)
!11201 = !{!11202, !11203, !11204, !11205, !11206, !11207, !11208, !11209, !11210, !11211, !11212, !11213, !11214, !11215, !11216, !11217}
!11202 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11200, file: !5822, line: 40, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!11203 = !DIDerivedType(tag: DW_TAG_member, name: "error_feature", scope: !11200, file: !5822, line: 41, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!11204 = !DIDerivedType(tag: DW_TAG_member, name: "sector", scope: !11200, file: !5822, line: 42, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!11205 = !DIDerivedType(tag: DW_TAG_member, name: "nsector", scope: !11200, file: !5822, line: 43, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!11206 = !DIDerivedType(tag: DW_TAG_member, name: "lcyl", scope: !11200, file: !5822, line: 44, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!11207 = !DIDerivedType(tag: DW_TAG_member, name: "hcyl", scope: !11200, file: !5822, line: 45, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!11208 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !11200, file: !5822, line: 46, baseType: !7, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!11209 = !DIDerivedType(tag: DW_TAG_member, name: "status_command", scope: !11200, file: !5822, line: 47, baseType: !7, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!11210 = !DIDerivedType(tag: DW_TAG_member, name: "data_hob", scope: !11200, file: !5822, line: 49, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!11211 = !DIDerivedType(tag: DW_TAG_member, name: "error_feature_hob", scope: !11200, file: !5822, line: 50, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!11212 = !DIDerivedType(tag: DW_TAG_member, name: "sector_hob", scope: !11200, file: !5822, line: 51, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!11213 = !DIDerivedType(tag: DW_TAG_member, name: "nsector_hob", scope: !11200, file: !5822, line: 52, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!11214 = !DIDerivedType(tag: DW_TAG_member, name: "lcyl_hob", scope: !11200, file: !5822, line: 53, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!11215 = !DIDerivedType(tag: DW_TAG_member, name: "hcyl_hob", scope: !11200, file: !5822, line: 54, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!11216 = !DIDerivedType(tag: DW_TAG_member, name: "select_hob", scope: !11200, file: !5822, line: 55, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!11217 = !DIDerivedType(tag: DW_TAG_member, name: "control_hob", scope: !11200, file: !5822, line: 56, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!11218 = !DIDerivedType(tag: DW_TAG_member, name: "in_flags", scope: !11189, file: !5822, line: 64, baseType: !11195, size: 32, offset: 160)
!11219 = !DIDerivedType(tag: DW_TAG_member, name: "data_phase", scope: !11189, file: !5822, line: 65, baseType: !443, size: 32, offset: 192)
!11220 = !DIDerivedType(tag: DW_TAG_member, name: "req_cmd", scope: !11189, file: !5822, line: 66, baseType: !443, size: 32, offset: 224)
!11221 = !DIDerivedType(tag: DW_TAG_member, name: "out_size", scope: !11189, file: !5822, line: 67, baseType: !898, size: 64, offset: 256)
!11222 = !DIDerivedType(tag: DW_TAG_member, name: "in_size", scope: !11189, file: !5822, line: 68, baseType: !898, size: 64, offset: 320)
!11223 = !DILocation(line: 2012, column: 22, scope: !10839)
!11224 = !DILocalVariable(name: "ret", scope: !10839, file: !3, line: 2013, type: !443)
!11225 = !DILocation(line: 2013, column: 7, scope: !10839)
!11226 = !DILocalVariable(name: "outtotal", scope: !10839, file: !3, line: 2013, type: !443)
!11227 = !DILocation(line: 2013, column: 12, scope: !10839)
!11228 = !DILocation(line: 2015, column: 22, scope: !10862)
!11229 = !DILocation(line: 2015, column: 49, scope: !10862)
!11230 = !DILocation(line: 2015, column: 33, scope: !10862)
!11231 = !DILocation(line: 191, column: 6, scope: !10859, inlinedAt: !10861)
!11232 = !DILocation(line: 141, column: 6, scope: !10946, inlinedAt: !10858)
!11233 = !DILocation(line: 0, scope: !10946, inlinedAt: !10858)
!11234 = !DILocation(line: 141, column: 6, scope: !10826, inlinedAt: !10858)
!11235 = !DILocation(line: 142, column: 29, scope: !10950, inlinedAt: !10858)
!11236 = !DILocation(line: 142, column: 8, scope: !10950, inlinedAt: !10858)
!11237 = !DILocation(line: 142, column: 7, scope: !10951, inlinedAt: !10858)
!11238 = !DILocation(line: 143, column: 18, scope: !10950, inlinedAt: !10858)
!11239 = !DILocation(line: 143, column: 22, scope: !10950, inlinedAt: !10858)
!11240 = !DILocation(line: 143, column: 4, scope: !10950, inlinedAt: !10858)
!11241 = !DILocation(line: 144, column: 12, scope: !10958, inlinedAt: !10858)
!11242 = !DILocation(line: 144, column: 12, scope: !10950, inlinedAt: !10858)
!11243 = !DILocation(line: 145, column: 4, scope: !10958, inlinedAt: !10858)
!11244 = !DILocation(line: 147, column: 4, scope: !10958, inlinedAt: !10858)
!11245 = !DILocation(line: 148, column: 3, scope: !10951, inlinedAt: !10858)
!11246 = !DILocation(line: 150, column: 6, scope: !10964, inlinedAt: !10858)
!11247 = !DILocation(line: 150, column: 6, scope: !10966, inlinedAt: !10858)
!11248 = !DILocation(line: 150, column: 6, scope: !10970, inlinedAt: !10858)
!11249 = !DILocation(line: 150, column: 6, scope: !10967, inlinedAt: !10858)
!11250 = !DILocation(line: 150, column: 6, scope: !10849, inlinedAt: !10858)
!11251 = !DILocation(line: 150, column: 6, scope: !10826, inlinedAt: !10858)
!11252 = !DILocation(line: 151, column: 3, scope: !10849, inlinedAt: !10858)
!11253 = !DILocation(line: 152, column: 20, scope: !10826, inlinedAt: !10858)
!11254 = !DILocation(line: 152, column: 26, scope: !10826, inlinedAt: !10858)
!11255 = !DILocation(line: 152, column: 33, scope: !10826, inlinedAt: !10858)
!11256 = !DILocation(line: 152, column: 2, scope: !10826, inlinedAt: !10858)
!11257 = !DILocation(line: 153, column: 2, scope: !10826, inlinedAt: !10858)
!11258 = !DILocation(line: 154, column: 1, scope: !10826, inlinedAt: !10858)
!11259 = !DILocation(line: 191, column: 6, scope: !10860, inlinedAt: !10861)
!11260 = !DILocation(line: 192, column: 23, scope: !10859, inlinedAt: !10861)
!11261 = !DILocation(line: 192, column: 27, scope: !10859, inlinedAt: !10861)
!11262 = !DILocation(line: 192, column: 33, scope: !10859, inlinedAt: !10861)
!11263 = !DILocation(line: 192, column: 7, scope: !10859, inlinedAt: !10861)
!11264 = !DILocation(line: 192, column: 5, scope: !10859, inlinedAt: !10861)
!11265 = !DILocation(line: 192, column: 3, scope: !10859, inlinedAt: !10861)
!11266 = !DILocation(line: 193, column: 9, scope: !10860, inlinedAt: !10861)
!11267 = !DILocation(line: 2015, column: 7, scope: !10862)
!11268 = !DILocation(line: 2015, column: 7, scope: !10839)
!11269 = !DILocation(line: 2017, column: 4, scope: !10862)
!11270 = !DILocation(line: 2019, column: 12, scope: !10839)
!11271 = !DILocation(line: 2021, column: 29, scope: !10839)
!11272 = !DILocation(line: 2021, column: 49, scope: !10839)
!11273 = !DILocation(line: 2021, column: 33, scope: !10839)
!11274 = !DILocation(line: 2022, column: 18, scope: !10839)
!11275 = !DILocation(line: 2021, column: 9, scope: !10839)
!11276 = !DILocation(line: 2021, column: 7, scope: !10839)
!11277 = !DILocation(line: 2024, column: 36, scope: !10838)
!11278 = !DILocation(line: 2024, column: 20, scope: !10838)
!11279 = !DILocation(line: 2024, column: 41, scope: !10838)
!11280 = !DILocation(line: 199, column: 6, scope: !10832, inlinedAt: !10837)
!11281 = !DILocation(line: 141, column: 6, scope: !10946, inlinedAt: !10831)
!11282 = !DILocation(line: 0, scope: !10946, inlinedAt: !10831)
!11283 = !DILocation(line: 141, column: 6, scope: !10826, inlinedAt: !10831)
!11284 = !DILocation(line: 142, column: 29, scope: !10950, inlinedAt: !10831)
!11285 = !DILocation(line: 142, column: 8, scope: !10950, inlinedAt: !10831)
!11286 = !DILocation(line: 142, column: 7, scope: !10951, inlinedAt: !10831)
!11287 = !DILocation(line: 143, column: 18, scope: !10950, inlinedAt: !10831)
!11288 = !DILocation(line: 143, column: 22, scope: !10950, inlinedAt: !10831)
!11289 = !DILocation(line: 143, column: 4, scope: !10950, inlinedAt: !10831)
!11290 = !DILocation(line: 144, column: 12, scope: !10958, inlinedAt: !10831)
!11291 = !DILocation(line: 144, column: 12, scope: !10950, inlinedAt: !10831)
!11292 = !DILocation(line: 145, column: 4, scope: !10958, inlinedAt: !10831)
!11293 = !DILocation(line: 147, column: 4, scope: !10958, inlinedAt: !10831)
!11294 = !DILocation(line: 148, column: 3, scope: !10951, inlinedAt: !10831)
!11295 = !DILocation(line: 150, column: 6, scope: !10964, inlinedAt: !10831)
!11296 = !DILocation(line: 150, column: 6, scope: !10966, inlinedAt: !10831)
!11297 = !DILocation(line: 150, column: 6, scope: !10970, inlinedAt: !10831)
!11298 = !DILocation(line: 150, column: 6, scope: !10967, inlinedAt: !10831)
!11299 = !DILocation(line: 150, column: 6, scope: !10849, inlinedAt: !10831)
!11300 = !DILocation(line: 150, column: 6, scope: !10826, inlinedAt: !10831)
!11301 = !DILocation(line: 151, column: 3, scope: !10849, inlinedAt: !10831)
!11302 = !DILocation(line: 152, column: 20, scope: !10826, inlinedAt: !10831)
!11303 = !DILocation(line: 152, column: 26, scope: !10826, inlinedAt: !10831)
!11304 = !DILocation(line: 152, column: 33, scope: !10826, inlinedAt: !10831)
!11305 = !DILocation(line: 152, column: 2, scope: !10826, inlinedAt: !10831)
!11306 = !DILocation(line: 153, column: 2, scope: !10826, inlinedAt: !10831)
!11307 = !DILocation(line: 154, column: 1, scope: !10826, inlinedAt: !10831)
!11308 = !DILocation(line: 199, column: 6, scope: !10834, inlinedAt: !10837)
!11309 = !DILocation(line: 200, column: 21, scope: !10832, inlinedAt: !10837)
!11310 = !DILocation(line: 200, column: 25, scope: !10832, inlinedAt: !10837)
!11311 = !DILocation(line: 200, column: 31, scope: !10832, inlinedAt: !10837)
!11312 = !DILocation(line: 200, column: 7, scope: !10832, inlinedAt: !10837)
!11313 = !DILocation(line: 200, column: 5, scope: !10832, inlinedAt: !10837)
!11314 = !DILocation(line: 200, column: 3, scope: !10832, inlinedAt: !10837)
!11315 = !DILocation(line: 201, column: 9, scope: !10834, inlinedAt: !10837)
!11316 = !DILocation(line: 2024, column: 7, scope: !10838)
!11317 = !DILocation(line: 2024, column: 7, scope: !10839)
!11318 = !DILocation(line: 2026, column: 4, scope: !10838)
!11319 = !DILocation(line: 2028, column: 10, scope: !10839)
!11320 = !DILocation(line: 2028, column: 3, scope: !10839)
!11321 = !DILocation(line: 2032, column: 3, scope: !10840)
!11322 = !DILocation(line: 2034, column: 2, scope: !10822)
!11323 = !DILocation(line: 2035, column: 1, scope: !10822)
!11324 = distinct !DISubprogram(name: "exec_drive_command", scope: !3, file: !3, line: 1557, type: !11325, scopeLine: 1559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!11325 = !DISubroutineType(types: !11326)
!11326 = !{!443, !6168, !6192, !890}
!11327 = !DILocation(line: 138, column: 29, scope: !10826, inlinedAt: !11328)
!11328 = distinct !DILocation(line: 199, column: 6, scope: !10832, inlinedAt: !11329)
!11329 = distinct !DILocation(line: 1639, column: 7, scope: !11330)
!11330 = distinct !DILexicalBlock(scope: !11331, file: !3, line: 1639, column: 7)
!11331 = distinct !DILexicalBlock(scope: !11332, file: !3, line: 1638, column: 15)
!11332 = distinct !DILexicalBlock(scope: !11324, file: !3, line: 1638, column: 6)
!11333 = !DILocation(line: 138, column: 42, scope: !10826, inlinedAt: !11328)
!11334 = !DILocation(line: 138, column: 54, scope: !10826, inlinedAt: !11328)
!11335 = !DILocation(line: 140, column: 6, scope: !10826, inlinedAt: !11328)
!11336 = !DILocation(line: 150, column: 6, scope: !10848, inlinedAt: !11328)
!11337 = !DILocation(line: 197, column: 27, scope: !10834, inlinedAt: !11329)
!11338 = !DILocation(line: 197, column: 43, scope: !10834, inlinedAt: !11329)
!11339 = !DILocation(line: 197, column: 63, scope: !10834, inlinedAt: !11329)
!11340 = !DILocalVariable(name: "port", arg: 1, scope: !11324, file: !3, line: 1557, type: !6168)
!11341 = !DILocation(line: 1557, column: 49, scope: !11324)
!11342 = !DILocalVariable(name: "command", arg: 2, scope: !11324, file: !3, line: 1557, type: !6192)
!11343 = !DILocation(line: 1557, column: 59, scope: !11324)
!11344 = !DILocalVariable(name: "user_buffer", arg: 3, scope: !11324, file: !3, line: 1558, type: !890)
!11345 = !DILocation(line: 1558, column: 18, scope: !11324)
!11346 = !DILocalVariable(name: "fis", scope: !11324, file: !3, line: 1560, type: !6242)
!11347 = !DILocation(line: 1560, column: 25, scope: !11324)
!11348 = !DILocalVariable(name: "reply", scope: !11324, file: !3, line: 1561, type: !6241)
!11349 = !DILocation(line: 1561, column: 26, scope: !11324)
!11350 = !DILocalVariable(name: "buf", scope: !11324, file: !3, line: 1562, type: !6192)
!11351 = !DILocation(line: 1562, column: 6, scope: !11324)
!11352 = !DILocalVariable(name: "dma_addr", scope: !11324, file: !3, line: 1563, type: !1995)
!11353 = !DILocation(line: 1563, column: 13, scope: !11324)
!11354 = !DILocalVariable(name: "rv", scope: !11324, file: !3, line: 1564, type: !443)
!11355 = !DILocation(line: 1564, column: 6, scope: !11324)
!11356 = !DILocalVariable(name: "xfer_sz", scope: !11324, file: !3, line: 1564, type: !443)
!11357 = !DILocation(line: 1564, column: 14, scope: !11324)
!11358 = !DILocation(line: 1564, column: 24, scope: !11324)
!11359 = !DILocalVariable(name: "to", scope: !11324, file: !3, line: 1565, type: !7)
!11360 = !DILocation(line: 1565, column: 15, scope: !11324)
!11361 = !DILocation(line: 1567, column: 6, scope: !11362)
!11362 = distinct !DILexicalBlock(scope: !11324, file: !3, line: 1567, column: 6)
!11363 = !DILocation(line: 1567, column: 6, scope: !11324)
!11364 = !DILocation(line: 1568, column: 8, scope: !11365)
!11365 = distinct !DILexicalBlock(scope: !11366, file: !3, line: 1568, column: 7)
!11366 = distinct !DILexicalBlock(scope: !11362, file: !3, line: 1567, column: 15)
!11367 = !DILocation(line: 1568, column: 7, scope: !11366)
!11368 = !DILocation(line: 1569, column: 4, scope: !11365)
!11369 = !DILocation(line: 1571, column: 29, scope: !11366)
!11370 = !DILocation(line: 1571, column: 35, scope: !11366)
!11371 = !DILocation(line: 1571, column: 39, scope: !11366)
!11372 = !DILocation(line: 1571, column: 45, scope: !11366)
!11373 = !DILocation(line: 1572, column: 21, scope: !11366)
!11374 = !DILocation(line: 1572, column: 19, scope: !11366)
!11375 = !DILocation(line: 1572, column: 5, scope: !11366)
!11376 = !DILocation(line: 1571, column: 9, scope: !11366)
!11377 = !DILocation(line: 1571, column: 7, scope: !11366)
!11378 = !DILocation(line: 1575, column: 8, scope: !11379)
!11379 = distinct !DILexicalBlock(scope: !11366, file: !3, line: 1575, column: 7)
!11380 = !DILocation(line: 1575, column: 7, scope: !11366)
!11381 = !DILocation(line: 1576, column: 4, scope: !11382)
!11382 = distinct !DILexicalBlock(scope: !11379, file: !3, line: 1575, column: 13)
!11383 = !DILocation(line: 1579, column: 4, scope: !11382)
!11384 = !DILocation(line: 1581, column: 2, scope: !11366)
!11385 = !DILocation(line: 1584, column: 2, scope: !11324)
!11386 = !DILocation(line: 1585, column: 6, scope: !11324)
!11387 = !DILocation(line: 1585, column: 11, scope: !11324)
!11388 = !DILocation(line: 1586, column: 6, scope: !11324)
!11389 = !DILocation(line: 1586, column: 11, scope: !11324)
!11390 = !DILocation(line: 1587, column: 16, scope: !11324)
!11391 = !DILocation(line: 1587, column: 6, scope: !11324)
!11392 = !DILocation(line: 1587, column: 14, scope: !11324)
!11393 = !DILocation(line: 1588, column: 17, scope: !11324)
!11394 = !DILocation(line: 1588, column: 6, scope: !11324)
!11395 = !DILocation(line: 1588, column: 15, scope: !11324)
!11396 = !DILocation(line: 1589, column: 19, scope: !11324)
!11397 = !DILocation(line: 1589, column: 6, scope: !11324)
!11398 = !DILocation(line: 1589, column: 17, scope: !11324)
!11399 = !DILocation(line: 1590, column: 10, scope: !11400)
!11400 = distinct !DILexicalBlock(scope: !11324, file: !3, line: 1590, column: 6)
!11401 = !DILocation(line: 1590, column: 6, scope: !11400)
!11402 = !DILocation(line: 1590, column: 18, scope: !11400)
!11403 = !DILocation(line: 1590, column: 6, scope: !11324)
!11404 = !DILocation(line: 1591, column: 16, scope: !11405)
!11405 = distinct !DILexicalBlock(scope: !11400, file: !3, line: 1590, column: 36)
!11406 = !DILocation(line: 1591, column: 7, scope: !11405)
!11407 = !DILocation(line: 1591, column: 14, scope: !11405)
!11408 = !DILocation(line: 1592, column: 7, scope: !11405)
!11409 = !DILocation(line: 1592, column: 15, scope: !11405)
!11410 = !DILocation(line: 1593, column: 7, scope: !11405)
!11411 = !DILocation(line: 1593, column: 14, scope: !11405)
!11412 = !DILocation(line: 1594, column: 2, scope: !11405)
!11413 = !DILocation(line: 1596, column: 19, scope: !11324)
!11414 = !DILocation(line: 1596, column: 25, scope: !11324)
!11415 = !DILocation(line: 1596, column: 2, scope: !11324)
!11416 = !DILocation(line: 1598, column: 6, scope: !11417)
!11417 = distinct !DILexicalBlock(scope: !11324, file: !3, line: 1598, column: 6)
!11418 = !DILocation(line: 1598, column: 6, scope: !11324)
!11419 = !DILocation(line: 1599, column: 12, scope: !11417)
!11420 = !DILocation(line: 1599, column: 18, scope: !11417)
!11421 = !DILocation(line: 1599, column: 24, scope: !11417)
!11422 = !DILocation(line: 1599, column: 11, scope: !11417)
!11423 = !DILocation(line: 1599, column: 9, scope: !11417)
!11424 = !DILocation(line: 1599, column: 3, scope: !11417)
!11425 = !DILocation(line: 1601, column: 12, scope: !11417)
!11426 = !DILocation(line: 1601, column: 18, scope: !11417)
!11427 = !DILocation(line: 1601, column: 24, scope: !11417)
!11428 = !DILocation(line: 1601, column: 11, scope: !11417)
!11429 = !DILocation(line: 1601, column: 9, scope: !11417)
!11430 = !DILocation(line: 1613, column: 33, scope: !11431)
!11431 = distinct !DILexicalBlock(scope: !11324, file: !3, line: 1613, column: 6)
!11432 = !DILocation(line: 1616, column: 7, scope: !11431)
!11433 = !DILocation(line: 1616, column: 17, scope: !11431)
!11434 = !DILocation(line: 1617, column: 7, scope: !11431)
!11435 = !DILocation(line: 1617, column: 33, scope: !11431)
!11436 = !DILocation(line: 1617, column: 31, scope: !11431)
!11437 = !DILocation(line: 1619, column: 6, scope: !11431)
!11438 = !DILocation(line: 1613, column: 6, scope: !11431)
!11439 = !DILocation(line: 1620, column: 6, scope: !11431)
!11440 = !DILocation(line: 1613, column: 6, scope: !11324)
!11441 = !DILocation(line: 1621, column: 6, scope: !11442)
!11442 = distinct !DILexicalBlock(scope: !11431, file: !3, line: 1620, column: 11)
!11443 = !DILocation(line: 1622, column: 3, scope: !11442)
!11444 = !DILocation(line: 1626, column: 15, scope: !11324)
!11445 = !DILocation(line: 1626, column: 22, scope: !11324)
!11446 = !DILocation(line: 1626, column: 2, scope: !11324)
!11447 = !DILocation(line: 1626, column: 13, scope: !11324)
!11448 = !DILocation(line: 1627, column: 15, scope: !11324)
!11449 = !DILocation(line: 1627, column: 22, scope: !11324)
!11450 = !DILocation(line: 1627, column: 2, scope: !11324)
!11451 = !DILocation(line: 1627, column: 13, scope: !11324)
!11452 = !DILocation(line: 1628, column: 15, scope: !11324)
!11453 = !DILocation(line: 1628, column: 22, scope: !11324)
!11454 = !DILocation(line: 1628, column: 2, scope: !11324)
!11455 = !DILocation(line: 1628, column: 13, scope: !11324)
!11456 = !DILocation(line: 1638, column: 6, scope: !11332)
!11457 = !DILocation(line: 1638, column: 6, scope: !11324)
!11458 = !DILocation(line: 1639, column: 20, scope: !11330)
!11459 = !DILocation(line: 1640, column: 6, scope: !11330)
!11460 = !DILocation(line: 1641, column: 22, scope: !11330)
!11461 = !DILocation(line: 1641, column: 20, scope: !11330)
!11462 = !DILocation(line: 1641, column: 6, scope: !11330)
!11463 = !DILocation(line: 199, column: 6, scope: !10832, inlinedAt: !11329)
!11464 = !DILocation(line: 141, column: 6, scope: !10946, inlinedAt: !11328)
!11465 = !DILocation(line: 0, scope: !10946, inlinedAt: !11328)
!11466 = !DILocation(line: 141, column: 6, scope: !10826, inlinedAt: !11328)
!11467 = !DILocation(line: 142, column: 29, scope: !10950, inlinedAt: !11328)
!11468 = !DILocation(line: 142, column: 8, scope: !10950, inlinedAt: !11328)
!11469 = !DILocation(line: 142, column: 7, scope: !10951, inlinedAt: !11328)
!11470 = !DILocation(line: 143, column: 18, scope: !10950, inlinedAt: !11328)
!11471 = !DILocation(line: 143, column: 22, scope: !10950, inlinedAt: !11328)
!11472 = !DILocation(line: 143, column: 4, scope: !10950, inlinedAt: !11328)
!11473 = !DILocation(line: 144, column: 12, scope: !10958, inlinedAt: !11328)
!11474 = !DILocation(line: 144, column: 12, scope: !10950, inlinedAt: !11328)
!11475 = !DILocation(line: 145, column: 4, scope: !10958, inlinedAt: !11328)
!11476 = !DILocation(line: 147, column: 4, scope: !10958, inlinedAt: !11328)
!11477 = !DILocation(line: 148, column: 3, scope: !10951, inlinedAt: !11328)
!11478 = !DILocation(line: 150, column: 6, scope: !10964, inlinedAt: !11328)
!11479 = !DILocation(line: 150, column: 6, scope: !10966, inlinedAt: !11328)
!11480 = !DILocation(line: 150, column: 6, scope: !10970, inlinedAt: !11328)
!11481 = !DILocation(line: 150, column: 6, scope: !10967, inlinedAt: !11328)
!11482 = !DILocation(line: 150, column: 6, scope: !10849, inlinedAt: !11328)
!11483 = !DILocation(line: 150, column: 6, scope: !10826, inlinedAt: !11328)
!11484 = !DILocation(line: 151, column: 3, scope: !10849, inlinedAt: !11328)
!11485 = !DILocation(line: 152, column: 20, scope: !10826, inlinedAt: !11328)
!11486 = !DILocation(line: 152, column: 26, scope: !10826, inlinedAt: !11328)
!11487 = !DILocation(line: 152, column: 33, scope: !10826, inlinedAt: !11328)
!11488 = !DILocation(line: 152, column: 2, scope: !10826, inlinedAt: !11328)
!11489 = !DILocation(line: 153, column: 2, scope: !10826, inlinedAt: !11328)
!11490 = !DILocation(line: 154, column: 1, scope: !10826, inlinedAt: !11328)
!11491 = !DILocation(line: 199, column: 6, scope: !10834, inlinedAt: !11329)
!11492 = !DILocation(line: 200, column: 21, scope: !10832, inlinedAt: !11329)
!11493 = !DILocation(line: 200, column: 25, scope: !10832, inlinedAt: !11329)
!11494 = !DILocation(line: 200, column: 31, scope: !10832, inlinedAt: !11329)
!11495 = !DILocation(line: 200, column: 7, scope: !10832, inlinedAt: !11329)
!11496 = !DILocation(line: 200, column: 5, scope: !10832, inlinedAt: !11329)
!11497 = !DILocation(line: 200, column: 3, scope: !10832, inlinedAt: !11329)
!11498 = !DILocation(line: 201, column: 9, scope: !10834, inlinedAt: !11329)
!11499 = !DILocation(line: 1639, column: 7, scope: !11330)
!11500 = !DILocation(line: 1639, column: 7, scope: !11331)
!11501 = !DILocation(line: 1642, column: 7, scope: !11502)
!11502 = distinct !DILexicalBlock(scope: !11330, file: !3, line: 1641, column: 35)
!11503 = !DILocation(line: 1643, column: 4, scope: !11502)
!11504 = !DILocation(line: 1645, column: 2, scope: !11331)
!11505 = !DILabel(scope: !11324, name: "exit_drive_command", file: !3, line: 1646)
!11506 = !DILocation(line: 1646, column: 1, scope: !11324)
!11507 = !DILocation(line: 1647, column: 6, scope: !11508)
!11508 = distinct !DILexicalBlock(scope: !11324, file: !3, line: 1647, column: 6)
!11509 = !DILocation(line: 1647, column: 6, scope: !11324)
!11510 = !DILocation(line: 1648, column: 22, scope: !11508)
!11511 = !DILocation(line: 1648, column: 28, scope: !11508)
!11512 = !DILocation(line: 1648, column: 32, scope: !11508)
!11513 = !DILocation(line: 1648, column: 38, scope: !11508)
!11514 = !DILocation(line: 1649, column: 21, scope: !11508)
!11515 = !DILocation(line: 1649, column: 19, scope: !11508)
!11516 = !DILocation(line: 1649, column: 5, scope: !11508)
!11517 = !DILocation(line: 1649, column: 30, scope: !11508)
!11518 = !DILocation(line: 1649, column: 35, scope: !11508)
!11519 = !DILocation(line: 1648, column: 3, scope: !11508)
!11520 = !DILocation(line: 1650, column: 9, scope: !11324)
!11521 = !DILocation(line: 1650, column: 2, scope: !11324)
!11522 = !DILocation(line: 1651, column: 1, scope: !11324)
!11523 = distinct !DISubprogram(name: "exec_drive_task", scope: !3, file: !3, line: 1488, type: !11524, scopeLine: 1489, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!11524 = !DISubroutineType(types: !11525)
!11525 = !{!443, !6168, !6192}
!11526 = !DILocalVariable(name: "port", arg: 1, scope: !11523, file: !3, line: 1488, type: !6168)
!11527 = !DILocation(line: 1488, column: 46, scope: !11523)
!11528 = !DILocalVariable(name: "command", arg: 2, scope: !11523, file: !3, line: 1488, type: !6192)
!11529 = !DILocation(line: 1488, column: 56, scope: !11523)
!11530 = !DILocalVariable(name: "fis", scope: !11523, file: !3, line: 1490, type: !6242)
!11531 = !DILocation(line: 1490, column: 25, scope: !11523)
!11532 = !DILocalVariable(name: "reply", scope: !11523, file: !3, line: 1491, type: !6241)
!11533 = !DILocation(line: 1491, column: 26, scope: !11523)
!11534 = !DILocation(line: 1491, column: 35, scope: !11523)
!11535 = !DILocation(line: 1491, column: 41, scope: !11523)
!11536 = !DILocation(line: 1491, column: 47, scope: !11523)
!11537 = !DILocation(line: 1491, column: 34, scope: !11523)
!11538 = !DILocalVariable(name: "to", scope: !11523, file: !3, line: 1492, type: !7)
!11539 = !DILocation(line: 1492, column: 15, scope: !11523)
!11540 = !DILocation(line: 1495, column: 2, scope: !11523)
!11541 = !DILocation(line: 1496, column: 6, scope: !11523)
!11542 = !DILocation(line: 1496, column: 11, scope: !11523)
!11543 = !DILocation(line: 1497, column: 6, scope: !11523)
!11544 = !DILocation(line: 1497, column: 11, scope: !11523)
!11545 = !DILocation(line: 1498, column: 16, scope: !11523)
!11546 = !DILocation(line: 1498, column: 6, scope: !11523)
!11547 = !DILocation(line: 1498, column: 14, scope: !11523)
!11548 = !DILocation(line: 1499, column: 17, scope: !11523)
!11549 = !DILocation(line: 1499, column: 6, scope: !11523)
!11550 = !DILocation(line: 1499, column: 15, scope: !11523)
!11551 = !DILocation(line: 1500, column: 19, scope: !11523)
!11552 = !DILocation(line: 1500, column: 6, scope: !11523)
!11553 = !DILocation(line: 1500, column: 17, scope: !11523)
!11554 = !DILocation(line: 1501, column: 15, scope: !11523)
!11555 = !DILocation(line: 1501, column: 6, scope: !11523)
!11556 = !DILocation(line: 1501, column: 13, scope: !11523)
!11557 = !DILocation(line: 1502, column: 16, scope: !11523)
!11558 = !DILocation(line: 1502, column: 6, scope: !11523)
!11559 = !DILocation(line: 1502, column: 14, scope: !11523)
!11560 = !DILocation(line: 1503, column: 15, scope: !11523)
!11561 = !DILocation(line: 1503, column: 6, scope: !11523)
!11562 = !DILocation(line: 1503, column: 13, scope: !11523)
!11563 = !DILocation(line: 1504, column: 15, scope: !11523)
!11564 = !DILocation(line: 1504, column: 26, scope: !11523)
!11565 = !DILocation(line: 1504, column: 6, scope: !11523)
!11566 = !DILocation(line: 1504, column: 13, scope: !11523)
!11567 = !DILocation(line: 1506, column: 19, scope: !11523)
!11568 = !DILocation(line: 1506, column: 25, scope: !11523)
!11569 = !DILocation(line: 1506, column: 2, scope: !11523)
!11570 = !DILocation(line: 1519, column: 33, scope: !11571)
!11571 = distinct !DILexicalBlock(scope: !11523, file: !3, line: 1519, column: 6)
!11572 = !DILocation(line: 1525, column: 6, scope: !11571)
!11573 = !DILocation(line: 1519, column: 6, scope: !11571)
!11574 = !DILocation(line: 1525, column: 10, scope: !11571)
!11575 = !DILocation(line: 1519, column: 6, scope: !11523)
!11576 = !DILocation(line: 1526, column: 3, scope: !11577)
!11577 = distinct !DILexicalBlock(scope: !11571, file: !3, line: 1525, column: 15)
!11578 = !DILocation(line: 1529, column: 15, scope: !11523)
!11579 = !DILocation(line: 1529, column: 22, scope: !11523)
!11580 = !DILocation(line: 1529, column: 2, scope: !11523)
!11581 = !DILocation(line: 1529, column: 13, scope: !11523)
!11582 = !DILocation(line: 1530, column: 15, scope: !11523)
!11583 = !DILocation(line: 1530, column: 22, scope: !11523)
!11584 = !DILocation(line: 1530, column: 2, scope: !11523)
!11585 = !DILocation(line: 1530, column: 13, scope: !11523)
!11586 = !DILocation(line: 1531, column: 15, scope: !11523)
!11587 = !DILocation(line: 1531, column: 22, scope: !11523)
!11588 = !DILocation(line: 1531, column: 2, scope: !11523)
!11589 = !DILocation(line: 1531, column: 13, scope: !11523)
!11590 = !DILocation(line: 1532, column: 15, scope: !11523)
!11591 = !DILocation(line: 1532, column: 22, scope: !11523)
!11592 = !DILocation(line: 1532, column: 2, scope: !11523)
!11593 = !DILocation(line: 1532, column: 13, scope: !11523)
!11594 = !DILocation(line: 1541, column: 2, scope: !11523)
!11595 = !DILocation(line: 1542, column: 1, scope: !11523)
!11596 = distinct !DISubprogram(name: "exec_drive_taskfile", scope: !3, file: !3, line: 1704, type: !11597, scopeLine: 1708, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!11597 = !DISubroutineType(types: !11598)
!11598 = !{!443, !945, !890, !11599, !443}
!11599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11188, size: 64)
!11600 = !DILocation(line: 138, column: 29, scope: !10826, inlinedAt: !11601)
!11601 = distinct !DILocation(line: 199, column: 6, scope: !10832, inlinedAt: !11602)
!11602 = distinct !DILocation(line: 1919, column: 7, scope: !11603)
!11603 = distinct !DILexicalBlock(scope: !11604, file: !3, line: 1919, column: 7)
!11604 = distinct !DILexicalBlock(scope: !11605, file: !3, line: 1918, column: 14)
!11605 = distinct !DILexicalBlock(scope: !11596, file: !3, line: 1918, column: 6)
!11606 = !DILocation(line: 138, column: 42, scope: !10826, inlinedAt: !11601)
!11607 = !DILocation(line: 138, column: 54, scope: !10826, inlinedAt: !11601)
!11608 = !DILocation(line: 140, column: 6, scope: !10826, inlinedAt: !11601)
!11609 = !DILocation(line: 150, column: 6, scope: !10848, inlinedAt: !11601)
!11610 = !DILocation(line: 197, column: 27, scope: !10834, inlinedAt: !11602)
!11611 = !DILocation(line: 197, column: 43, scope: !10834, inlinedAt: !11602)
!11612 = !DILocation(line: 197, column: 63, scope: !10834, inlinedAt: !11602)
!11613 = !DILocation(line: 138, column: 29, scope: !10826, inlinedAt: !11614)
!11614 = distinct !DILocation(line: 199, column: 6, scope: !10832, inlinedAt: !11615)
!11615 = distinct !DILocation(line: 1913, column: 7, scope: !11616)
!11616 = distinct !DILexicalBlock(scope: !11617, file: !3, line: 1913, column: 7)
!11617 = distinct !DILexicalBlock(scope: !11618, file: !3, line: 1912, column: 15)
!11618 = distinct !DILexicalBlock(scope: !11596, file: !3, line: 1912, column: 6)
!11619 = !DILocation(line: 138, column: 42, scope: !10826, inlinedAt: !11614)
!11620 = !DILocation(line: 138, column: 54, scope: !10826, inlinedAt: !11614)
!11621 = !DILocation(line: 140, column: 6, scope: !10826, inlinedAt: !11614)
!11622 = !DILocation(line: 150, column: 6, scope: !10848, inlinedAt: !11614)
!11623 = !DILocation(line: 197, column: 27, scope: !10834, inlinedAt: !11615)
!11624 = !DILocation(line: 197, column: 43, scope: !10834, inlinedAt: !11615)
!11625 = !DILocation(line: 197, column: 63, scope: !10834, inlinedAt: !11615)
!11626 = !DILocalVariable(name: "dd", arg: 1, scope: !11596, file: !3, line: 1704, type: !945)
!11627 = !DILocation(line: 1704, column: 52, scope: !11596)
!11628 = !DILocalVariable(name: "buf", arg: 2, scope: !11596, file: !3, line: 1705, type: !890)
!11629 = !DILocation(line: 1705, column: 24, scope: !11596)
!11630 = !DILocalVariable(name: "req_task", arg: 3, scope: !11596, file: !3, line: 1706, type: !11599)
!11631 = !DILocation(line: 1706, column: 31, scope: !11596)
!11632 = !DILocalVariable(name: "outtotal", arg: 4, scope: !11596, file: !3, line: 1707, type: !443)
!11633 = !DILocation(line: 1707, column: 15, scope: !11596)
!11634 = !DILocalVariable(name: "fis", scope: !11596, file: !3, line: 1709, type: !6242)
!11635 = !DILocation(line: 1709, column: 25, scope: !11596)
!11636 = !DILocalVariable(name: "reply", scope: !11596, file: !3, line: 1710, type: !6241)
!11637 = !DILocation(line: 1710, column: 26, scope: !11596)
!11638 = !DILocalVariable(name: "outbuf", scope: !11596, file: !3, line: 1711, type: !6192)
!11639 = !DILocation(line: 1711, column: 6, scope: !11596)
!11640 = !DILocalVariable(name: "inbuf", scope: !11596, file: !3, line: 1712, type: !6192)
!11641 = !DILocation(line: 1712, column: 6, scope: !11596)
!11642 = !DILocalVariable(name: "outbuf_dma", scope: !11596, file: !3, line: 1713, type: !1995)
!11643 = !DILocation(line: 1713, column: 13, scope: !11596)
!11644 = !DILocalVariable(name: "inbuf_dma", scope: !11596, file: !3, line: 1714, type: !1995)
!11645 = !DILocation(line: 1714, column: 13, scope: !11596)
!11646 = !DILocalVariable(name: "dma_buffer", scope: !11596, file: !3, line: 1715, type: !1995)
!11647 = !DILocation(line: 1715, column: 13, scope: !11596)
!11648 = !DILocalVariable(name: "err", scope: !11596, file: !3, line: 1716, type: !443)
!11649 = !DILocation(line: 1716, column: 6, scope: !11596)
!11650 = !DILocalVariable(name: "taskin", scope: !11596, file: !3, line: 1717, type: !7)
!11651 = !DILocation(line: 1717, column: 15, scope: !11596)
!11652 = !DILocalVariable(name: "taskout", scope: !11596, file: !3, line: 1718, type: !7)
!11653 = !DILocation(line: 1718, column: 15, scope: !11596)
!11654 = !DILocalVariable(name: "nsect", scope: !11596, file: !3, line: 1719, type: !1862)
!11655 = !DILocation(line: 1719, column: 5, scope: !11596)
!11656 = !DILocalVariable(name: "timeout", scope: !11596, file: !3, line: 1720, type: !7)
!11657 = !DILocation(line: 1720, column: 15, scope: !11596)
!11658 = !DILocalVariable(name: "force_single_sector", scope: !11596, file: !3, line: 1721, type: !7)
!11659 = !DILocation(line: 1721, column: 15, scope: !11596)
!11660 = !DILocalVariable(name: "transfer_size", scope: !11596, file: !3, line: 1722, type: !7)
!11661 = !DILocation(line: 1722, column: 15, scope: !11596)
!11662 = !DILocalVariable(name: "task_file_data", scope: !11596, file: !3, line: 1723, type: !898)
!11663 = !DILocation(line: 1723, column: 16, scope: !11596)
!11664 = !DILocalVariable(name: "intotal", scope: !11596, file: !3, line: 1724, type: !443)
!11665 = !DILocation(line: 1724, column: 6, scope: !11596)
!11666 = !DILocation(line: 1724, column: 16, scope: !11596)
!11667 = !DILocation(line: 1724, column: 27, scope: !11596)
!11668 = !DILocation(line: 1724, column: 37, scope: !11596)
!11669 = !DILocation(line: 1724, column: 25, scope: !11596)
!11670 = !DILocalVariable(name: "erasemode", scope: !11596, file: !3, line: 1725, type: !443)
!11671 = !DILocation(line: 1725, column: 6, scope: !11596)
!11672 = !DILocation(line: 1727, column: 12, scope: !11596)
!11673 = !DILocation(line: 1727, column: 22, scope: !11596)
!11674 = !DILocation(line: 1727, column: 10, scope: !11596)
!11675 = !DILocation(line: 1728, column: 11, scope: !11596)
!11676 = !DILocation(line: 1728, column: 21, scope: !11596)
!11677 = !DILocation(line: 1728, column: 9, scope: !11596)
!11678 = !DILocation(line: 1730, column: 6, scope: !11679)
!11679 = distinct !DILexicalBlock(scope: !11596, file: !3, line: 1730, column: 6)
!11680 = !DILocation(line: 1730, column: 13, scope: !11679)
!11681 = !DILocation(line: 1730, column: 22, scope: !11679)
!11682 = !DILocation(line: 1730, column: 25, scope: !11679)
!11683 = !DILocation(line: 1730, column: 33, scope: !11679)
!11684 = !DILocation(line: 1730, column: 6, scope: !11596)
!11685 = !DILocation(line: 1731, column: 3, scope: !11679)
!11686 = !DILocation(line: 1733, column: 6, scope: !11687)
!11687 = distinct !DILexicalBlock(scope: !11596, file: !3, line: 1733, column: 6)
!11688 = !DILocation(line: 1733, column: 6, scope: !11596)
!11689 = !DILocation(line: 1734, column: 24, scope: !11690)
!11690 = distinct !DILexicalBlock(scope: !11687, file: !3, line: 1733, column: 15)
!11691 = !DILocation(line: 1734, column: 30, scope: !11690)
!11692 = !DILocation(line: 1734, column: 28, scope: !11690)
!11693 = !DILocation(line: 1734, column: 40, scope: !11690)
!11694 = !DILocation(line: 1734, column: 12, scope: !11690)
!11695 = !DILocation(line: 1734, column: 10, scope: !11690)
!11696 = !DILocation(line: 1735, column: 14, scope: !11697)
!11697 = distinct !DILexicalBlock(scope: !11690, file: !3, line: 1735, column: 7)
!11698 = !DILocation(line: 1735, column: 7, scope: !11697)
!11699 = !DILocation(line: 1735, column: 7, scope: !11690)
!11700 = !DILocation(line: 1736, column: 19, scope: !11697)
!11701 = !DILocation(line: 1736, column: 11, scope: !11697)
!11702 = !DILocation(line: 1736, column: 4, scope: !11697)
!11703 = !DILocation(line: 1738, column: 16, scope: !11690)
!11704 = !DILocation(line: 1738, column: 14, scope: !11690)
!11705 = !DILocation(line: 1740, column: 26, scope: !11706)
!11706 = distinct !DILexicalBlock(scope: !11690, file: !3, line: 1740, column: 7)
!11707 = !DILocation(line: 1740, column: 30, scope: !11706)
!11708 = !DILocation(line: 1740, column: 36, scope: !11706)
!11709 = !DILocation(line: 1740, column: 41, scope: !11706)
!11710 = !DILocation(line: 1740, column: 7, scope: !11706)
!11711 = !DILocation(line: 1740, column: 7, scope: !11690)
!11712 = !DILocation(line: 1741, column: 8, scope: !11713)
!11713 = distinct !DILexicalBlock(scope: !11706, file: !3, line: 1740, column: 54)
!11714 = !DILocation(line: 1742, column: 4, scope: !11713)
!11715 = !DILocation(line: 1744, column: 16, scope: !11690)
!11716 = !DILocation(line: 1744, column: 14, scope: !11690)
!11717 = !DILocation(line: 1745, column: 2, scope: !11690)
!11718 = !DILocation(line: 1747, column: 6, scope: !11719)
!11719 = distinct !DILexicalBlock(scope: !11596, file: !3, line: 1747, column: 6)
!11720 = !DILocation(line: 1747, column: 6, scope: !11596)
!11721 = !DILocation(line: 1748, column: 23, scope: !11722)
!11722 = distinct !DILexicalBlock(scope: !11719, file: !3, line: 1747, column: 14)
!11723 = !DILocation(line: 1748, column: 29, scope: !11722)
!11724 = !DILocation(line: 1748, column: 27, scope: !11722)
!11725 = !DILocation(line: 1748, column: 38, scope: !11722)
!11726 = !DILocation(line: 1748, column: 11, scope: !11722)
!11727 = !DILocation(line: 1748, column: 9, scope: !11722)
!11728 = !DILocation(line: 1749, column: 14, scope: !11729)
!11729 = distinct !DILexicalBlock(scope: !11722, file: !3, line: 1749, column: 7)
!11730 = !DILocation(line: 1749, column: 7, scope: !11729)
!11731 = !DILocation(line: 1749, column: 7, scope: !11722)
!11732 = !DILocation(line: 1750, column: 18, scope: !11733)
!11733 = distinct !DILexicalBlock(scope: !11729, file: !3, line: 1749, column: 22)
!11734 = !DILocation(line: 1750, column: 10, scope: !11733)
!11735 = !DILocation(line: 1750, column: 8, scope: !11733)
!11736 = !DILocation(line: 1751, column: 10, scope: !11733)
!11737 = !DILocation(line: 1752, column: 4, scope: !11733)
!11738 = !DILocation(line: 1754, column: 15, scope: !11722)
!11739 = !DILocation(line: 1754, column: 13, scope: !11722)
!11740 = !DILocation(line: 1756, column: 26, scope: !11741)
!11741 = distinct !DILexicalBlock(scope: !11722, file: !3, line: 1756, column: 7)
!11742 = !DILocation(line: 1756, column: 30, scope: !11741)
!11743 = !DILocation(line: 1756, column: 36, scope: !11741)
!11744 = !DILocation(line: 1756, column: 41, scope: !11741)
!11745 = !DILocation(line: 1756, column: 7, scope: !11741)
!11746 = !DILocation(line: 1756, column: 7, scope: !11722)
!11747 = !DILocation(line: 1757, column: 8, scope: !11748)
!11748 = distinct !DILexicalBlock(scope: !11741, file: !3, line: 1756, column: 53)
!11749 = !DILocation(line: 1758, column: 4, scope: !11748)
!11750 = !DILocation(line: 1760, column: 16, scope: !11722)
!11751 = !DILocation(line: 1760, column: 14, scope: !11722)
!11752 = !DILocation(line: 1761, column: 2, scope: !11722)
!11753 = !DILocation(line: 1764, column: 10, scope: !11596)
!11754 = !DILocation(line: 1764, column: 20, scope: !11596)
!11755 = !DILocation(line: 1764, column: 2, scope: !11596)
!11756 = !DILocation(line: 1766, column: 11, scope: !11757)
!11757 = distinct !DILexicalBlock(scope: !11596, file: !3, line: 1764, column: 32)
!11758 = !DILocation(line: 1766, column: 19, scope: !11757)
!11759 = !DILocation(line: 1766, column: 9, scope: !11757)
!11760 = !DILocation(line: 1767, column: 12, scope: !11757)
!11761 = !DILocation(line: 1767, column: 16, scope: !11757)
!11762 = !DILocation(line: 1767, column: 22, scope: !11757)
!11763 = !DILocation(line: 1767, column: 28, scope: !11757)
!11764 = !DILocation(line: 1767, column: 11, scope: !11757)
!11765 = !DILocation(line: 1767, column: 9, scope: !11757)
!11766 = !DILocation(line: 1768, column: 3, scope: !11757)
!11767 = !DILocation(line: 1770, column: 12, scope: !11757)
!11768 = !DILocation(line: 1770, column: 16, scope: !11757)
!11769 = !DILocation(line: 1770, column: 22, scope: !11757)
!11770 = !DILocation(line: 1770, column: 28, scope: !11757)
!11771 = !DILocation(line: 1770, column: 11, scope: !11757)
!11772 = !DILocation(line: 1770, column: 9, scope: !11757)
!11773 = !DILocation(line: 1771, column: 3, scope: !11757)
!11774 = !DILocation(line: 1773, column: 12, scope: !11757)
!11775 = !DILocation(line: 1773, column: 16, scope: !11757)
!11776 = !DILocation(line: 1773, column: 22, scope: !11757)
!11777 = !DILocation(line: 1773, column: 28, scope: !11757)
!11778 = !DILocation(line: 1773, column: 11, scope: !11757)
!11779 = !DILocation(line: 1773, column: 9, scope: !11757)
!11780 = !DILocation(line: 1774, column: 3, scope: !11757)
!11781 = !DILocation(line: 1776, column: 7, scope: !11757)
!11782 = !DILocation(line: 1777, column: 3, scope: !11757)
!11783 = !DILocation(line: 1781, column: 2, scope: !11596)
!11784 = !DILocation(line: 1783, column: 6, scope: !11596)
!11785 = !DILocation(line: 1783, column: 11, scope: !11596)
!11786 = !DILocation(line: 1784, column: 6, scope: !11596)
!11787 = !DILocation(line: 1784, column: 11, scope: !11596)
!11788 = !DILocation(line: 1785, column: 16, scope: !11596)
!11789 = !DILocation(line: 1785, column: 26, scope: !11596)
!11790 = !DILocation(line: 1785, column: 6, scope: !11596)
!11791 = !DILocation(line: 1785, column: 14, scope: !11596)
!11792 = !DILocation(line: 1786, column: 17, scope: !11596)
!11793 = !DILocation(line: 1786, column: 27, scope: !11596)
!11794 = !DILocation(line: 1786, column: 6, scope: !11596)
!11795 = !DILocation(line: 1786, column: 15, scope: !11596)
!11796 = !DILocation(line: 1787, column: 19, scope: !11596)
!11797 = !DILocation(line: 1787, column: 29, scope: !11596)
!11798 = !DILocation(line: 1787, column: 6, scope: !11596)
!11799 = !DILocation(line: 1787, column: 17, scope: !11596)
!11800 = !DILocation(line: 1788, column: 16, scope: !11596)
!11801 = !DILocation(line: 1788, column: 26, scope: !11596)
!11802 = !DILocation(line: 1788, column: 6, scope: !11596)
!11803 = !DILocation(line: 1788, column: 14, scope: !11596)
!11804 = !DILocation(line: 1789, column: 16, scope: !11596)
!11805 = !DILocation(line: 1789, column: 26, scope: !11596)
!11806 = !DILocation(line: 1789, column: 6, scope: !11596)
!11807 = !DILocation(line: 1789, column: 14, scope: !11596)
!11808 = !DILocation(line: 1790, column: 15, scope: !11596)
!11809 = !DILocation(line: 1790, column: 25, scope: !11596)
!11810 = !DILocation(line: 1790, column: 6, scope: !11596)
!11811 = !DILocation(line: 1790, column: 13, scope: !11596)
!11812 = !DILocation(line: 1792, column: 15, scope: !11596)
!11813 = !DILocation(line: 1792, column: 25, scope: !11596)
!11814 = !DILocation(line: 1792, column: 37, scope: !11596)
!11815 = !DILocation(line: 1792, column: 6, scope: !11596)
!11816 = !DILocation(line: 1792, column: 13, scope: !11596)
!11817 = !DILocation(line: 1794, column: 7, scope: !11818)
!11818 = distinct !DILexicalBlock(scope: !11596, file: !3, line: 1794, column: 6)
!11819 = !DILocation(line: 1794, column: 17, scope: !11818)
!11820 = !DILocation(line: 1794, column: 26, scope: !11818)
!11821 = !DILocation(line: 1794, column: 30, scope: !11818)
!11822 = !DILocation(line: 1794, column: 36, scope: !11818)
!11823 = !DILocation(line: 1794, column: 40, scope: !11818)
!11824 = !DILocation(line: 1794, column: 50, scope: !11818)
!11825 = !DILocation(line: 1794, column: 60, scope: !11818)
!11826 = !DILocation(line: 1794, column: 64, scope: !11818)
!11827 = !DILocation(line: 1794, column: 6, scope: !11596)
!11828 = !DILocation(line: 1795, column: 3, scope: !11829)
!11829 = distinct !DILexicalBlock(scope: !11818, file: !3, line: 1794, column: 70)
!11830 = !DILocation(line: 1795, column: 13, scope: !11829)
!11831 = !DILocation(line: 1795, column: 22, scope: !11829)
!11832 = !DILocation(line: 1795, column: 26, scope: !11829)
!11833 = !DILocation(line: 1798, column: 21, scope: !11829)
!11834 = !DILocation(line: 1798, column: 31, scope: !11829)
!11835 = !DILocation(line: 1798, column: 7, scope: !11829)
!11836 = !DILocation(line: 1798, column: 19, scope: !11829)
!11837 = !DILocation(line: 1799, column: 21, scope: !11829)
!11838 = !DILocation(line: 1799, column: 31, scope: !11829)
!11839 = !DILocation(line: 1799, column: 7, scope: !11829)
!11840 = !DILocation(line: 1799, column: 19, scope: !11829)
!11841 = !DILocation(line: 1800, column: 20, scope: !11829)
!11842 = !DILocation(line: 1800, column: 30, scope: !11829)
!11843 = !DILocation(line: 1800, column: 7, scope: !11829)
!11844 = !DILocation(line: 1800, column: 18, scope: !11829)
!11845 = !DILocation(line: 1801, column: 22, scope: !11829)
!11846 = !DILocation(line: 1801, column: 32, scope: !11829)
!11847 = !DILocation(line: 1801, column: 7, scope: !11829)
!11848 = !DILocation(line: 1801, column: 20, scope: !11829)
!11849 = !DILocation(line: 1802, column: 22, scope: !11829)
!11850 = !DILocation(line: 1802, column: 32, scope: !11829)
!11851 = !DILocation(line: 1802, column: 7, scope: !11829)
!11852 = !DILocation(line: 1802, column: 20, scope: !11829)
!11853 = !DILocation(line: 1804, column: 2, scope: !11829)
!11854 = !DILocation(line: 1805, column: 3, scope: !11855)
!11855 = distinct !DILexicalBlock(scope: !11818, file: !3, line: 1804, column: 9)
!11856 = !DILocation(line: 1805, column: 13, scope: !11855)
!11857 = !DILocation(line: 1805, column: 22, scope: !11855)
!11858 = !DILocation(line: 1805, column: 26, scope: !11855)
!11859 = !DILocation(line: 1808, column: 44, scope: !11596)
!11860 = !DILocation(line: 1808, column: 57, scope: !11596)
!11861 = !DILocation(line: 1808, column: 24, scope: !11596)
!11862 = !DILocation(line: 1808, column: 22, scope: !11596)
!11863 = !DILocation(line: 1810, column: 7, scope: !11864)
!11864 = distinct !DILexicalBlock(scope: !11596, file: !3, line: 1810, column: 6)
!11865 = !DILocation(line: 1810, column: 14, scope: !11864)
!11866 = !DILocation(line: 1810, column: 17, scope: !11864)
!11867 = !DILocation(line: 1810, column: 26, scope: !11864)
!11868 = !DILocation(line: 1810, column: 35, scope: !11864)
!11869 = !DILocation(line: 1810, column: 31, scope: !11864)
!11870 = !DILocation(line: 1810, column: 6, scope: !11596)
!11871 = !DILocation(line: 1811, column: 7, scope: !11872)
!11872 = distinct !DILexicalBlock(scope: !11873, file: !3, line: 1811, column: 7)
!11873 = distinct !DILexicalBlock(scope: !11864, file: !3, line: 1810, column: 48)
!11874 = !DILocation(line: 1811, column: 7, scope: !11873)
!11875 = !DILocation(line: 1812, column: 21, scope: !11872)
!11876 = !DILocation(line: 1812, column: 8, scope: !11872)
!11877 = !DILocation(line: 1812, column: 19, scope: !11872)
!11878 = !DILocation(line: 1812, column: 4, scope: !11872)
!11879 = !DILocation(line: 1814, column: 9, scope: !11880)
!11880 = distinct !DILexicalBlock(scope: !11881, file: !3, line: 1814, column: 8)
!11881 = distinct !DILexicalBlock(scope: !11872, file: !3, line: 1813, column: 8)
!11882 = !DILocation(line: 1814, column: 8, scope: !11881)
!11883 = !DILocation(line: 1815, column: 5, scope: !11884)
!11884 = distinct !DILexicalBlock(scope: !11880, file: !3, line: 1814, column: 30)
!11885 = !DILocation(line: 1818, column: 9, scope: !11884)
!11886 = !DILocation(line: 1819, column: 5, scope: !11884)
!11887 = !DILocation(line: 1822, column: 2, scope: !11873)
!11888 = !DILocation(line: 1838, column: 11, scope: !11889)
!11889 = distinct !DILexicalBlock(scope: !11596, file: !3, line: 1838, column: 6)
!11890 = !DILocation(line: 1838, column: 7, scope: !11889)
!11891 = !DILocation(line: 1838, column: 19, scope: !11889)
!11892 = !DILocation(line: 1838, column: 46, scope: !11889)
!11893 = !DILocation(line: 1838, column: 49, scope: !11889)
!11894 = !DILocation(line: 1838, column: 56, scope: !11889)
!11895 = !DILocation(line: 1839, column: 7, scope: !11889)
!11896 = !DILocation(line: 1839, column: 17, scope: !11889)
!11897 = !DILocation(line: 1838, column: 6, scope: !11596)
!11898 = !DILocation(line: 1840, column: 13, scope: !11899)
!11899 = distinct !DILexicalBlock(scope: !11889, file: !3, line: 1839, column: 41)
!11900 = !DILocation(line: 1841, column: 2, scope: !11899)
!11901 = !DILocation(line: 1843, column: 19, scope: !11596)
!11902 = !DILocation(line: 1843, column: 39, scope: !11596)
!11903 = !DILocation(line: 1843, column: 2, scope: !11596)
!11904 = !DILocation(line: 1846, column: 6, scope: !11905)
!11905 = distinct !DILexicalBlock(scope: !11596, file: !3, line: 1846, column: 6)
!11906 = !DILocation(line: 1846, column: 6, scope: !11596)
!11907 = !DILocation(line: 1847, column: 17, scope: !11905)
!11908 = !DILocation(line: 1847, column: 3, scope: !11905)
!11909 = !DILocation(line: 1849, column: 39, scope: !11905)
!11910 = !DILocation(line: 1849, column: 35, scope: !11905)
!11911 = !DILocation(line: 1849, column: 33, scope: !11905)
!11912 = !DILocation(line: 1849, column: 17, scope: !11905)
!11913 = !DILocation(line: 1852, column: 33, scope: !11914)
!11914 = distinct !DILexicalBlock(scope: !11596, file: !3, line: 1852, column: 6)
!11915 = !DILocation(line: 1852, column: 37, scope: !11914)
!11916 = !DILocation(line: 1855, column: 6, scope: !11914)
!11917 = !DILocation(line: 1856, column: 6, scope: !11914)
!11918 = !DILocation(line: 1858, column: 6, scope: !11914)
!11919 = !DILocation(line: 1852, column: 6, scope: !11914)
!11920 = !DILocation(line: 1858, column: 15, scope: !11914)
!11921 = !DILocation(line: 1852, column: 6, scope: !11596)
!11922 = !DILocation(line: 1859, column: 7, scope: !11923)
!11923 = distinct !DILexicalBlock(scope: !11914, file: !3, line: 1858, column: 20)
!11924 = !DILocation(line: 1860, column: 3, scope: !11923)
!11925 = !DILocation(line: 1863, column: 25, scope: !11596)
!11926 = !DILocation(line: 1863, column: 29, scope: !11596)
!11927 = !DILocation(line: 1863, column: 35, scope: !11596)
!11928 = !DILocation(line: 1863, column: 39, scope: !11596)
!11929 = !DILocation(line: 1863, column: 19, scope: !11596)
!11930 = !DILocation(line: 1863, column: 17, scope: !11596)
!11931 = !DILocation(line: 1865, column: 7, scope: !11932)
!11932 = distinct !DILexicalBlock(scope: !11596, file: !3, line: 1865, column: 6)
!11933 = !DILocation(line: 1865, column: 17, scope: !11932)
!11934 = !DILocation(line: 1865, column: 28, scope: !11932)
!11935 = !DILocation(line: 1865, column: 44, scope: !11932)
!11936 = !DILocation(line: 1865, column: 49, scope: !11932)
!11937 = !DILocation(line: 1865, column: 64, scope: !11932)
!11938 = !DILocation(line: 1865, column: 6, scope: !11596)
!11939 = !DILocation(line: 1866, column: 11, scope: !11940)
!11940 = distinct !DILexicalBlock(scope: !11932, file: !3, line: 1865, column: 70)
!11941 = !DILocation(line: 1866, column: 15, scope: !11940)
!11942 = !DILocation(line: 1866, column: 21, scope: !11940)
!11943 = !DILocation(line: 1866, column: 27, scope: !11940)
!11944 = !DILocation(line: 1866, column: 9, scope: !11940)
!11945 = !DILocation(line: 1867, column: 27, scope: !11940)
!11946 = !DILocation(line: 1867, column: 34, scope: !11940)
!11947 = !DILocation(line: 1867, column: 3, scope: !11940)
!11948 = !DILocation(line: 1867, column: 13, scope: !11940)
!11949 = !DILocation(line: 1867, column: 25, scope: !11940)
!11950 = !DILocation(line: 1868, column: 2, scope: !11940)
!11951 = !DILocation(line: 1869, column: 11, scope: !11952)
!11952 = distinct !DILexicalBlock(scope: !11932, file: !3, line: 1868, column: 9)
!11953 = !DILocation(line: 1869, column: 15, scope: !11952)
!11954 = !DILocation(line: 1869, column: 21, scope: !11952)
!11955 = !DILocation(line: 1869, column: 27, scope: !11952)
!11956 = !DILocation(line: 1869, column: 9, scope: !11952)
!11957 = !DILocation(line: 1870, column: 27, scope: !11952)
!11958 = !DILocation(line: 1870, column: 34, scope: !11952)
!11959 = !DILocation(line: 1870, column: 3, scope: !11952)
!11960 = !DILocation(line: 1870, column: 13, scope: !11952)
!11961 = !DILocation(line: 1870, column: 25, scope: !11952)
!11962 = !DILocation(line: 1874, column: 6, scope: !11963)
!11963 = distinct !DILexicalBlock(scope: !11596, file: !3, line: 1874, column: 6)
!11964 = !DILocation(line: 1874, column: 6, scope: !11596)
!11965 = !DILocation(line: 1875, column: 3, scope: !11963)
!11966 = !DILocation(line: 1877, column: 6, scope: !11967)
!11967 = distinct !DILexicalBlock(scope: !11596, file: !3, line: 1877, column: 6)
!11968 = !DILocation(line: 1877, column: 6, scope: !11596)
!11969 = !DILocation(line: 1878, column: 3, scope: !11967)
!11970 = !DILocation(line: 1880, column: 13, scope: !11596)
!11971 = !DILocation(line: 1881, column: 13, scope: !11596)
!11972 = !DILocation(line: 1884, column: 26, scope: !11596)
!11973 = !DILocation(line: 1884, column: 33, scope: !11596)
!11974 = !DILocation(line: 1884, column: 2, scope: !11596)
!11975 = !DILocation(line: 1884, column: 12, scope: !11596)
!11976 = !DILocation(line: 1884, column: 24, scope: !11596)
!11977 = !DILocation(line: 1885, column: 26, scope: !11596)
!11978 = !DILocation(line: 1885, column: 33, scope: !11596)
!11979 = !DILocation(line: 1885, column: 2, scope: !11596)
!11980 = !DILocation(line: 1885, column: 12, scope: !11596)
!11981 = !DILocation(line: 1885, column: 24, scope: !11596)
!11982 = !DILocation(line: 1886, column: 26, scope: !11596)
!11983 = !DILocation(line: 1886, column: 33, scope: !11596)
!11984 = !DILocation(line: 1886, column: 2, scope: !11596)
!11985 = !DILocation(line: 1886, column: 12, scope: !11596)
!11986 = !DILocation(line: 1886, column: 24, scope: !11596)
!11987 = !DILocation(line: 1887, column: 26, scope: !11596)
!11988 = !DILocation(line: 1887, column: 33, scope: !11596)
!11989 = !DILocation(line: 1887, column: 2, scope: !11596)
!11990 = !DILocation(line: 1887, column: 12, scope: !11596)
!11991 = !DILocation(line: 1887, column: 24, scope: !11596)
!11992 = !DILocation(line: 1888, column: 26, scope: !11596)
!11993 = !DILocation(line: 1888, column: 33, scope: !11596)
!11994 = !DILocation(line: 1888, column: 2, scope: !11596)
!11995 = !DILocation(line: 1888, column: 12, scope: !11596)
!11996 = !DILocation(line: 1888, column: 24, scope: !11596)
!11997 = !DILocation(line: 1889, column: 26, scope: !11596)
!11998 = !DILocation(line: 1889, column: 33, scope: !11596)
!11999 = !DILocation(line: 1889, column: 2, scope: !11596)
!12000 = !DILocation(line: 1889, column: 12, scope: !11596)
!12001 = !DILocation(line: 1889, column: 24, scope: !11596)
!12002 = !DILocation(line: 1891, column: 6, scope: !12003)
!12003 = distinct !DILexicalBlock(scope: !11596, file: !3, line: 1891, column: 6)
!12004 = !DILocation(line: 1891, column: 16, scope: !12003)
!12005 = !DILocation(line: 1891, column: 26, scope: !12003)
!12006 = !DILocation(line: 1891, column: 30, scope: !12003)
!12007 = !DILocation(line: 1891, column: 6, scope: !11596)
!12008 = !DILocation(line: 1893, column: 28, scope: !12009)
!12009 = distinct !DILexicalBlock(scope: !12003, file: !3, line: 1891, column: 36)
!12010 = !DILocation(line: 1893, column: 35, scope: !12009)
!12011 = !DILocation(line: 1893, column: 3, scope: !12009)
!12012 = !DILocation(line: 1893, column: 13, scope: !12009)
!12013 = !DILocation(line: 1893, column: 26, scope: !12009)
!12014 = !DILocation(line: 1894, column: 28, scope: !12009)
!12015 = !DILocation(line: 1894, column: 35, scope: !12009)
!12016 = !DILocation(line: 1894, column: 3, scope: !12009)
!12017 = !DILocation(line: 1894, column: 13, scope: !12009)
!12018 = !DILocation(line: 1894, column: 26, scope: !12009)
!12019 = !DILocation(line: 1895, column: 28, scope: !12009)
!12020 = !DILocation(line: 1895, column: 35, scope: !12009)
!12021 = !DILocation(line: 1895, column: 3, scope: !12009)
!12022 = !DILocation(line: 1895, column: 13, scope: !12009)
!12023 = !DILocation(line: 1895, column: 26, scope: !12009)
!12024 = !DILocation(line: 1896, column: 28, scope: !12009)
!12025 = !DILocation(line: 1896, column: 35, scope: !12009)
!12026 = !DILocation(line: 1896, column: 3, scope: !12009)
!12027 = !DILocation(line: 1896, column: 13, scope: !12009)
!12028 = !DILocation(line: 1896, column: 26, scope: !12009)
!12029 = !DILocation(line: 1897, column: 28, scope: !12009)
!12030 = !DILocation(line: 1897, column: 35, scope: !12009)
!12031 = !DILocation(line: 1897, column: 3, scope: !12009)
!12032 = !DILocation(line: 1897, column: 13, scope: !12009)
!12033 = !DILocation(line: 1897, column: 26, scope: !12009)
!12034 = !DILocation(line: 1898, column: 2, scope: !12009)
!12035 = !DILocation(line: 1912, column: 6, scope: !11618)
!12036 = !DILocation(line: 1912, column: 6, scope: !11596)
!12037 = !DILocation(line: 1913, column: 20, scope: !11616)
!12038 = !DILocation(line: 1913, column: 26, scope: !11616)
!12039 = !DILocation(line: 1913, column: 24, scope: !11616)
!12040 = !DILocation(line: 1913, column: 36, scope: !11616)
!12041 = !DILocation(line: 1913, column: 44, scope: !11616)
!12042 = !DILocation(line: 199, column: 6, scope: !10832, inlinedAt: !11615)
!12043 = !DILocation(line: 141, column: 6, scope: !10946, inlinedAt: !11614)
!12044 = !DILocation(line: 0, scope: !10946, inlinedAt: !11614)
!12045 = !DILocation(line: 141, column: 6, scope: !10826, inlinedAt: !11614)
!12046 = !DILocation(line: 142, column: 29, scope: !10950, inlinedAt: !11614)
!12047 = !DILocation(line: 142, column: 8, scope: !10950, inlinedAt: !11614)
!12048 = !DILocation(line: 142, column: 7, scope: !10951, inlinedAt: !11614)
!12049 = !DILocation(line: 143, column: 18, scope: !10950, inlinedAt: !11614)
!12050 = !DILocation(line: 143, column: 22, scope: !10950, inlinedAt: !11614)
!12051 = !DILocation(line: 143, column: 4, scope: !10950, inlinedAt: !11614)
!12052 = !DILocation(line: 144, column: 12, scope: !10958, inlinedAt: !11614)
!12053 = !DILocation(line: 144, column: 12, scope: !10950, inlinedAt: !11614)
!12054 = !DILocation(line: 145, column: 4, scope: !10958, inlinedAt: !11614)
!12055 = !DILocation(line: 147, column: 4, scope: !10958, inlinedAt: !11614)
!12056 = !DILocation(line: 148, column: 3, scope: !10951, inlinedAt: !11614)
!12057 = !DILocation(line: 150, column: 6, scope: !10964, inlinedAt: !11614)
!12058 = !DILocation(line: 150, column: 6, scope: !10966, inlinedAt: !11614)
!12059 = !DILocation(line: 150, column: 6, scope: !10970, inlinedAt: !11614)
!12060 = !DILocation(line: 150, column: 6, scope: !10967, inlinedAt: !11614)
!12061 = !DILocation(line: 150, column: 6, scope: !10849, inlinedAt: !11614)
!12062 = !DILocation(line: 150, column: 6, scope: !10826, inlinedAt: !11614)
!12063 = !DILocation(line: 151, column: 3, scope: !10849, inlinedAt: !11614)
!12064 = !DILocation(line: 152, column: 20, scope: !10826, inlinedAt: !11614)
!12065 = !DILocation(line: 152, column: 26, scope: !10826, inlinedAt: !11614)
!12066 = !DILocation(line: 152, column: 33, scope: !10826, inlinedAt: !11614)
!12067 = !DILocation(line: 152, column: 2, scope: !10826, inlinedAt: !11614)
!12068 = !DILocation(line: 153, column: 2, scope: !10826, inlinedAt: !11614)
!12069 = !DILocation(line: 154, column: 1, scope: !10826, inlinedAt: !11614)
!12070 = !DILocation(line: 199, column: 6, scope: !10834, inlinedAt: !11615)
!12071 = !DILocation(line: 200, column: 21, scope: !10832, inlinedAt: !11615)
!12072 = !DILocation(line: 200, column: 25, scope: !10832, inlinedAt: !11615)
!12073 = !DILocation(line: 200, column: 31, scope: !10832, inlinedAt: !11615)
!12074 = !DILocation(line: 200, column: 7, scope: !10832, inlinedAt: !11615)
!12075 = !DILocation(line: 200, column: 5, scope: !10832, inlinedAt: !11615)
!12076 = !DILocation(line: 200, column: 3, scope: !10832, inlinedAt: !11615)
!12077 = !DILocation(line: 201, column: 9, scope: !10834, inlinedAt: !11615)
!12078 = !DILocation(line: 1913, column: 7, scope: !11616)
!12079 = !DILocation(line: 1913, column: 7, scope: !11617)
!12080 = !DILocation(line: 1914, column: 8, scope: !12081)
!12081 = distinct !DILexicalBlock(scope: !11616, file: !3, line: 1913, column: 54)
!12082 = !DILocation(line: 1915, column: 4, scope: !12081)
!12083 = !DILocation(line: 1917, column: 2, scope: !11617)
!12084 = !DILocation(line: 1918, column: 6, scope: !11605)
!12085 = !DILocation(line: 1918, column: 6, scope: !11596)
!12086 = !DILocation(line: 1919, column: 20, scope: !11603)
!12087 = !DILocation(line: 1919, column: 26, scope: !11603)
!12088 = !DILocation(line: 1919, column: 24, scope: !11603)
!12089 = !DILocation(line: 1919, column: 35, scope: !11603)
!12090 = !DILocation(line: 1919, column: 42, scope: !11603)
!12091 = !DILocation(line: 199, column: 6, scope: !10832, inlinedAt: !11602)
!12092 = !DILocation(line: 141, column: 6, scope: !10946, inlinedAt: !11601)
!12093 = !DILocation(line: 0, scope: !10946, inlinedAt: !11601)
!12094 = !DILocation(line: 141, column: 6, scope: !10826, inlinedAt: !11601)
!12095 = !DILocation(line: 142, column: 29, scope: !10950, inlinedAt: !11601)
!12096 = !DILocation(line: 142, column: 8, scope: !10950, inlinedAt: !11601)
!12097 = !DILocation(line: 142, column: 7, scope: !10951, inlinedAt: !11601)
!12098 = !DILocation(line: 143, column: 18, scope: !10950, inlinedAt: !11601)
!12099 = !DILocation(line: 143, column: 22, scope: !10950, inlinedAt: !11601)
!12100 = !DILocation(line: 143, column: 4, scope: !10950, inlinedAt: !11601)
!12101 = !DILocation(line: 144, column: 12, scope: !10958, inlinedAt: !11601)
!12102 = !DILocation(line: 144, column: 12, scope: !10950, inlinedAt: !11601)
!12103 = !DILocation(line: 145, column: 4, scope: !10958, inlinedAt: !11601)
!12104 = !DILocation(line: 147, column: 4, scope: !10958, inlinedAt: !11601)
!12105 = !DILocation(line: 148, column: 3, scope: !10951, inlinedAt: !11601)
!12106 = !DILocation(line: 150, column: 6, scope: !10964, inlinedAt: !11601)
!12107 = !DILocation(line: 150, column: 6, scope: !10966, inlinedAt: !11601)
!12108 = !DILocation(line: 150, column: 6, scope: !10970, inlinedAt: !11601)
!12109 = !DILocation(line: 150, column: 6, scope: !10967, inlinedAt: !11601)
!12110 = !DILocation(line: 150, column: 6, scope: !10849, inlinedAt: !11601)
!12111 = !DILocation(line: 150, column: 6, scope: !10826, inlinedAt: !11601)
!12112 = !DILocation(line: 151, column: 3, scope: !10849, inlinedAt: !11601)
!12113 = !DILocation(line: 152, column: 20, scope: !10826, inlinedAt: !11601)
!12114 = !DILocation(line: 152, column: 26, scope: !10826, inlinedAt: !11601)
!12115 = !DILocation(line: 152, column: 33, scope: !10826, inlinedAt: !11601)
!12116 = !DILocation(line: 152, column: 2, scope: !10826, inlinedAt: !11601)
!12117 = !DILocation(line: 153, column: 2, scope: !10826, inlinedAt: !11601)
!12118 = !DILocation(line: 154, column: 1, scope: !10826, inlinedAt: !11601)
!12119 = !DILocation(line: 199, column: 6, scope: !10834, inlinedAt: !11602)
!12120 = !DILocation(line: 200, column: 21, scope: !10832, inlinedAt: !11602)
!12121 = !DILocation(line: 200, column: 25, scope: !10832, inlinedAt: !11602)
!12122 = !DILocation(line: 200, column: 31, scope: !10832, inlinedAt: !11602)
!12123 = !DILocation(line: 200, column: 7, scope: !10832, inlinedAt: !11602)
!12124 = !DILocation(line: 200, column: 5, scope: !10832, inlinedAt: !11602)
!12125 = !DILocation(line: 200, column: 3, scope: !10832, inlinedAt: !11602)
!12126 = !DILocation(line: 201, column: 9, scope: !10834, inlinedAt: !11602)
!12127 = !DILocation(line: 1919, column: 7, scope: !11603)
!12128 = !DILocation(line: 1919, column: 7, scope: !11604)
!12129 = !DILocation(line: 1920, column: 8, scope: !12130)
!12130 = distinct !DILexicalBlock(scope: !11603, file: !3, line: 1919, column: 51)
!12131 = !DILocation(line: 1921, column: 4, scope: !12130)
!12132 = !DILocation(line: 1923, column: 2, scope: !11604)
!12133 = !DILabel(scope: !11596, name: "abort", file: !3, line: 1924)
!12134 = !DILocation(line: 1924, column: 1, scope: !11596)
!12135 = !DILocation(line: 1925, column: 6, scope: !12136)
!12136 = distinct !DILexicalBlock(scope: !11596, file: !3, line: 1925, column: 6)
!12137 = !DILocation(line: 1925, column: 6, scope: !11596)
!12138 = !DILocation(line: 1926, column: 3, scope: !12136)
!12139 = !DILocation(line: 1928, column: 6, scope: !12140)
!12140 = distinct !DILexicalBlock(scope: !11596, file: !3, line: 1928, column: 6)
!12141 = !DILocation(line: 1928, column: 6, scope: !11596)
!12142 = !DILocation(line: 1929, column: 3, scope: !12140)
!12143 = !DILocation(line: 1931, column: 8, scope: !11596)
!12144 = !DILocation(line: 1931, column: 2, scope: !11596)
!12145 = !DILocation(line: 1932, column: 8, scope: !11596)
!12146 = !DILocation(line: 1932, column: 2, scope: !11596)
!12147 = !DILocation(line: 1934, column: 9, scope: !11596)
!12148 = !DILocation(line: 1934, column: 2, scope: !11596)
!12149 = !DILocation(line: 1935, column: 1, scope: !11596)
!12150 = distinct !DISubprogram(name: "copy_overflow", scope: !10827, file: !10827, line: 132, type: !12151, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!12151 = !DISubroutineType(types: !12152)
!12152 = !{null, !443, !898}
!12153 = !DILocalVariable(name: "size", arg: 1, scope: !12150, file: !10827, line: 132, type: !443)
!12154 = !DILocation(line: 132, column: 38, scope: !12150)
!12155 = !DILocalVariable(name: "count", arg: 2, scope: !12150, file: !10827, line: 132, type: !898)
!12156 = !DILocation(line: 132, column: 58, scope: !12150)
!12157 = !DILocalVariable(name: "__ret_warn_on", scope: !12158, file: !10827, line: 134, type: !443)
!12158 = distinct !DILexicalBlock(scope: !12150, file: !10827, line: 134, column: 2)
!12159 = !DILocation(line: 134, column: 2, scope: !12158)
!12160 = !DILocation(line: 134, column: 2, scope: !12161)
!12161 = distinct !DILexicalBlock(scope: !12158, file: !10827, line: 134, column: 2)
!12162 = !DILocation(line: 134, column: 2, scope: !12163)
!12163 = distinct !DILexicalBlock(scope: !12161, file: !10827, line: 134, column: 2)
!12164 = !DILocation(line: 134, column: 2, scope: !12165)
!12165 = distinct !DILexicalBlock(scope: !12163, file: !10827, line: 134, column: 2)
!12166 = !DILocation(line: 134, column: 2, scope: !12167)
!12167 = distinct !DILexicalBlock(scope: !12163, file: !10827, line: 134, column: 2)
!12168 = !DILocation(line: 134, column: 2, scope: !12169)
!12169 = distinct !DILexicalBlock(scope: !12167, file: !10827, line: 134, column: 2)
!12170 = !DILocation(line: 134, column: 2, scope: !12171)
!12171 = distinct !DILexicalBlock(scope: !12167, file: !10827, line: 134, column: 2)
!12172 = !{i32 -2145349540, i32 -2145349511, i32 -2145349465, i32 -2145349407, i32 -2145349353, i32 -2145349299, i32 -2145349244, i32 -2145349213}
!12173 = !DILocation(line: 134, column: 2, scope: !12174)
!12174 = distinct !DILexicalBlock(scope: !12167, file: !10827, line: 134, column: 2)
!12175 = !{i32 -2145348793, i32 -2145348786, i32 -2145348734, i32 -2145348703, i32 -2145348673}
!12176 = !DILocation(line: 134, column: 2, scope: !12177)
!12177 = distinct !DILexicalBlock(scope: !12167, file: !10827, line: 134, column: 2)
!12178 = !DILocation(line: 134, column: 2, scope: !12179)
!12179 = distinct !DILexicalBlock(scope: !12163, file: !10827, line: 134, column: 2)
!12180 = !DILocation(line: 135, column: 1, scope: !12150)
!12181 = distinct !DISubprogram(name: "check_object_size", scope: !10827, file: !10827, line: 122, type: !12182, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!12182 = !DISubroutineType(types: !12183)
!12183 = !{null, !4027, !898, !1011}
!12184 = !DILocalVariable(name: "ptr", arg: 1, scope: !12181, file: !10827, line: 122, type: !4027)
!12185 = !DILocation(line: 122, column: 50, scope: !12181)
!12186 = !DILocalVariable(name: "n", arg: 2, scope: !12181, file: !10827, line: 122, type: !898)
!12187 = !DILocation(line: 122, column: 69, scope: !12181)
!12188 = !DILocalVariable(name: "to_user", arg: 3, scope: !12181, file: !10827, line: 123, type: !1011)
!12189 = !DILocation(line: 123, column: 15, scope: !12181)
!12190 = !DILocation(line: 124, column: 3, scope: !12181)
!12191 = distinct !DISubprogram(name: "mtip_set_timeout", scope: !3, file: !3, line: 1080, type: !12192, scopeLine: 1083, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!12192 = !DISubroutineType(types: !12193)
!12193 = !{null, !945, !6241, !1838, !1862}
!12194 = !DILocalVariable(name: "dd", arg: 1, scope: !12191, file: !3, line: 1080, type: !945)
!12195 = !DILocation(line: 1080, column: 50, scope: !12191)
!12196 = !DILocalVariable(name: "fis", arg: 2, scope: !12191, file: !3, line: 1081, type: !6241)
!12197 = !DILocation(line: 1081, column: 30, scope: !12191)
!12198 = !DILocalVariable(name: "timeout", arg: 3, scope: !12191, file: !3, line: 1082, type: !1838)
!12199 = !DILocation(line: 1082, column: 20, scope: !12191)
!12200 = !DILocalVariable(name: "erasemode", arg: 4, scope: !12191, file: !3, line: 1082, type: !1862)
!12201 = !DILocation(line: 1082, column: 32, scope: !12191)
!12202 = !DILocation(line: 1084, column: 10, scope: !12191)
!12203 = !DILocation(line: 1084, column: 15, scope: !12191)
!12204 = !DILocation(line: 1084, column: 2, scope: !12191)
!12205 = !DILocation(line: 1086, column: 4, scope: !12206)
!12206 = distinct !DILexicalBlock(scope: !12191, file: !3, line: 1084, column: 24)
!12207 = !DILocation(line: 1086, column: 12, scope: !12206)
!12208 = !DILocation(line: 1087, column: 3, scope: !12206)
!12209 = !DILocation(line: 1090, column: 7, scope: !12210)
!12210 = distinct !DILexicalBlock(scope: !12206, file: !3, line: 1090, column: 7)
!12211 = !DILocation(line: 1090, column: 7, scope: !12206)
!12212 = !DILocation(line: 1091, column: 19, scope: !12210)
!12213 = !DILocation(line: 1091, column: 23, scope: !12210)
!12214 = !DILocation(line: 1091, column: 29, scope: !12210)
!12215 = !DILocation(line: 1091, column: 38, scope: !12210)
!12216 = !DILocation(line: 1091, column: 17, scope: !12210)
!12217 = !DILocation(line: 1091, column: 44, scope: !12210)
!12218 = !DILocation(line: 1091, column: 49, scope: !12210)
!12219 = !DILocation(line: 1091, column: 5, scope: !12210)
!12220 = !DILocation(line: 1091, column: 13, scope: !12210)
!12221 = !DILocation(line: 1091, column: 4, scope: !12210)
!12222 = !DILocation(line: 1093, column: 19, scope: !12210)
!12223 = !DILocation(line: 1093, column: 23, scope: !12210)
!12224 = !DILocation(line: 1093, column: 29, scope: !12210)
!12225 = !DILocation(line: 1093, column: 38, scope: !12210)
!12226 = !DILocation(line: 1093, column: 17, scope: !12210)
!12227 = !DILocation(line: 1093, column: 44, scope: !12210)
!12228 = !DILocation(line: 1093, column: 49, scope: !12210)
!12229 = !DILocation(line: 1093, column: 5, scope: !12210)
!12230 = !DILocation(line: 1093, column: 13, scope: !12210)
!12231 = !DILocation(line: 1094, column: 3, scope: !12206)
!12232 = !DILocation(line: 1096, column: 4, scope: !12206)
!12233 = !DILocation(line: 1096, column: 12, scope: !12206)
!12234 = !DILocation(line: 1097, column: 3, scope: !12206)
!12235 = !DILocation(line: 1100, column: 4, scope: !12206)
!12236 = !DILocation(line: 1100, column: 12, scope: !12206)
!12237 = !DILocation(line: 1101, column: 3, scope: !12206)
!12238 = !DILocation(line: 1103, column: 4, scope: !12206)
!12239 = !DILocation(line: 1103, column: 12, scope: !12206)
!12240 = !DILocation(line: 1104, column: 3, scope: !12206)
!12241 = !DILocation(line: 1106, column: 4, scope: !12206)
!12242 = !DILocation(line: 1106, column: 12, scope: !12206)
!12243 = !DILocation(line: 1107, column: 3, scope: !12206)
!12244 = !DILocation(line: 1109, column: 1, scope: !12191)
!12245 = distinct !DISubprogram(name: "mtip_exec_internal_command", scope: !3, file: !3, line: 958, type: !12246, scopeLine: 965, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!12246 = !DISubroutineType(types: !12247)
!12247 = !{!443, !6168, !6241, !443, !1995, !443, !938, !898}
!12248 = !DILocalVariable(name: "port", arg: 1, scope: !12245, file: !3, line: 958, type: !6168)
!12249 = !DILocation(line: 958, column: 57, scope: !12245)
!12250 = !DILocalVariable(name: "fis", arg: 2, scope: !12245, file: !3, line: 959, type: !6241)
!12251 = !DILocation(line: 959, column: 30, scope: !12245)
!12252 = !DILocalVariable(name: "fis_len", arg: 3, scope: !12245, file: !3, line: 960, type: !443)
!12253 = !DILocation(line: 960, column: 10, scope: !12245)
!12254 = !DILocalVariable(name: "buffer", arg: 4, scope: !12245, file: !3, line: 961, type: !1995)
!12255 = !DILocation(line: 961, column: 17, scope: !12245)
!12256 = !DILocalVariable(name: "buf_len", arg: 5, scope: !12245, file: !3, line: 962, type: !443)
!12257 = !DILocation(line: 962, column: 10, scope: !12245)
!12258 = !DILocalVariable(name: "opts", arg: 6, scope: !12245, file: !3, line: 963, type: !938)
!12259 = !DILocation(line: 963, column: 10, scope: !12245)
!12260 = !DILocalVariable(name: "timeout", arg: 7, scope: !12245, file: !3, line: 964, type: !898)
!12261 = !DILocation(line: 964, column: 20, scope: !12245)
!12262 = !DILocalVariable(name: "int_cmd", scope: !12245, file: !3, line: 966, type: !8412)
!12263 = !DILocation(line: 966, column: 19, scope: !12245)
!12264 = !DILocalVariable(name: "dd", scope: !12245, file: !3, line: 967, type: !945)
!12265 = !DILocation(line: 967, column: 22, scope: !12245)
!12266 = !DILocation(line: 967, column: 27, scope: !12245)
!12267 = !DILocation(line: 967, column: 33, scope: !12245)
!12268 = !DILocalVariable(name: "rq", scope: !12245, file: !3, line: 968, type: !3261)
!12269 = !DILocation(line: 968, column: 18, scope: !12245)
!12270 = !DILocalVariable(name: "icmd", scope: !12245, file: !3, line: 969, type: !8436)
!12271 = !DILocation(line: 969, column: 22, scope: !12245)
!12272 = !DILocation(line: 969, column: 29, scope: !12245)
!12273 = !DILocation(line: 970, column: 14, scope: !12245)
!12274 = !DILocation(line: 971, column: 13, scope: !12245)
!12275 = !DILocation(line: 972, column: 14, scope: !12245)
!12276 = !DILocation(line: 973, column: 11, scope: !12245)
!12277 = !DILocalVariable(name: "rv", scope: !12245, file: !3, line: 975, type: !443)
!12278 = !DILocation(line: 975, column: 6, scope: !12245)
!12279 = !DILocation(line: 978, column: 6, scope: !12280)
!12280 = distinct !DILexicalBlock(scope: !12245, file: !3, line: 978, column: 6)
!12281 = !DILocation(line: 978, column: 13, scope: !12280)
!12282 = !DILocation(line: 978, column: 6, scope: !12245)
!12283 = !DILocation(line: 979, column: 3, scope: !12284)
!12284 = distinct !DILexicalBlock(scope: !12280, file: !3, line: 978, column: 27)
!12285 = !DILocation(line: 980, column: 3, scope: !12284)
!12286 = !DILocation(line: 983, column: 34, scope: !12287)
!12287 = distinct !DILexicalBlock(scope: !12245, file: !3, line: 983, column: 6)
!12288 = !DILocation(line: 983, column: 38, scope: !12287)
!12289 = !DILocation(line: 983, column: 6, scope: !12287)
!12290 = !DILocation(line: 983, column: 6, scope: !12245)
!12291 = !DILocation(line: 984, column: 3, scope: !12287)
!12292 = !DILocation(line: 986, column: 28, scope: !12245)
!12293 = !DILocation(line: 986, column: 32, scope: !12245)
!12294 = !DILocation(line: 986, column: 7, scope: !12245)
!12295 = !DILocation(line: 986, column: 5, scope: !12245)
!12296 = !DILocation(line: 987, column: 13, scope: !12297)
!12297 = distinct !DILexicalBlock(scope: !12245, file: !3, line: 987, column: 6)
!12298 = !DILocation(line: 987, column: 6, scope: !12297)
!12299 = !DILocation(line: 987, column: 6, scope: !12245)
!12300 = !DILocation(line: 989, column: 3, scope: !12301)
!12301 = distinct !DILexicalBlock(scope: !12297, file: !3, line: 987, column: 18)
!12302 = !DILocation(line: 992, column: 34, scope: !12245)
!12303 = !DILocation(line: 992, column: 40, scope: !12245)
!12304 = !DILocation(line: 992, column: 2, scope: !12245)
!12305 = !DILocation(line: 994, column: 6, scope: !12306)
!12306 = distinct !DILexicalBlock(scope: !12245, file: !3, line: 994, column: 6)
!12307 = !DILocation(line: 994, column: 11, scope: !12306)
!12308 = !DILocation(line: 994, column: 19, scope: !12306)
!12309 = !DILocation(line: 994, column: 6, scope: !12245)
!12310 = !DILocation(line: 995, column: 35, scope: !12306)
!12311 = !DILocation(line: 995, column: 41, scope: !12306)
!12312 = !DILocation(line: 995, column: 3, scope: !12306)
!12313 = !DILocation(line: 997, column: 36, scope: !12245)
!12314 = !DILocation(line: 997, column: 42, scope: !12245)
!12315 = !DILocation(line: 997, column: 2, scope: !12245)
!12316 = !DILocation(line: 999, column: 6, scope: !12317)
!12317 = distinct !DILexicalBlock(scope: !12245, file: !3, line: 999, column: 6)
!12318 = !DILocation(line: 999, column: 11, scope: !12317)
!12319 = !DILocation(line: 999, column: 19, scope: !12317)
!12320 = !DILocation(line: 999, column: 6, scope: !12245)
!12321 = !DILocation(line: 1001, column: 23, scope: !12322)
!12322 = distinct !DILexicalBlock(scope: !12323, file: !3, line: 1001, column: 7)
!12323 = distinct !DILexicalBlock(scope: !12317, file: !3, line: 999, column: 43)
!12324 = !DILocation(line: 1001, column: 7, scope: !12322)
!12325 = !DILocation(line: 1001, column: 57, scope: !12322)
!12326 = !DILocation(line: 1001, column: 7, scope: !12323)
!12327 = !DILocation(line: 1002, column: 4, scope: !12328)
!12328 = distinct !DILexicalBlock(scope: !12322, file: !3, line: 1001, column: 62)
!12329 = !DILocation(line: 1003, column: 24, scope: !12328)
!12330 = !DILocation(line: 1003, column: 4, scope: !12328)
!12331 = !DILocation(line: 1004, column: 38, scope: !12328)
!12332 = !DILocation(line: 1004, column: 44, scope: !12328)
!12333 = !DILocation(line: 1004, column: 4, scope: !12328)
!12334 = !DILocation(line: 1005, column: 4, scope: !12328)
!12335 = !DILocation(line: 1006, column: 4, scope: !12328)
!12336 = !DILocation(line: 1008, column: 2, scope: !12323)
!12337 = !DILocation(line: 1011, column: 29, scope: !12245)
!12338 = !DILocation(line: 1011, column: 12, scope: !12245)
!12339 = !DILocation(line: 1011, column: 10, scope: !12245)
!12340 = !DILocation(line: 1012, column: 2, scope: !12245)
!12341 = !DILocation(line: 1012, column: 11, scope: !12245)
!12342 = !DILocation(line: 1012, column: 16, scope: !12245)
!12343 = !DILocation(line: 1013, column: 9, scope: !12245)
!12344 = !DILocation(line: 1013, column: 18, scope: !12245)
!12345 = !DILocation(line: 1013, column: 27, scope: !12245)
!12346 = !DILocation(line: 1013, column: 2, scope: !12245)
!12347 = !DILocation(line: 1013, column: 32, scope: !12245)
!12348 = !DILocation(line: 1013, column: 39, scope: !12245)
!12349 = !DILocation(line: 1015, column: 16, scope: !12245)
!12350 = !DILocation(line: 1015, column: 2, scope: !12245)
!12351 = !DILocation(line: 1015, column: 6, scope: !12245)
!12352 = !DILocation(line: 1015, column: 14, scope: !12245)
!12353 = !DILocation(line: 1018, column: 17, scope: !12245)
!12354 = !DILocation(line: 1018, column: 21, scope: !12245)
!12355 = !DILocation(line: 1018, column: 30, scope: !12245)
!12356 = !DILocation(line: 1018, column: 2, scope: !12245)
!12357 = !DILocation(line: 1020, column: 6, scope: !12358)
!12358 = distinct !DILexicalBlock(scope: !12245, file: !3, line: 1020, column: 6)
!12359 = !DILocation(line: 1020, column: 15, scope: !12358)
!12360 = !DILocation(line: 1020, column: 6, scope: !12245)
!12361 = !DILocation(line: 1021, column: 3, scope: !12362)
!12362 = distinct !DILexicalBlock(scope: !12358, file: !3, line: 1020, column: 23)
!12363 = !DILocation(line: 1023, column: 6, scope: !12362)
!12364 = !DILocation(line: 1025, column: 35, scope: !12365)
!12365 = distinct !DILexicalBlock(scope: !12362, file: !3, line: 1025, column: 7)
!12366 = !DILocation(line: 1025, column: 39, scope: !12365)
!12367 = !DILocation(line: 1025, column: 7, scope: !12365)
!12368 = !DILocation(line: 1025, column: 45, scope: !12365)
!12369 = !DILocation(line: 1027, column: 7, scope: !12365)
!12370 = !DILocation(line: 1027, column: 11, scope: !12365)
!12371 = !DILocation(line: 1026, column: 4, scope: !12365)
!12372 = !DILocation(line: 1025, column: 7, scope: !12362)
!12373 = !DILocation(line: 1028, column: 4, scope: !12374)
!12374 = distinct !DILexicalBlock(scope: !12365, file: !3, line: 1027, column: 21)
!12375 = !DILocation(line: 1031, column: 7, scope: !12374)
!12376 = !DILocation(line: 1032, column: 4, scope: !12374)
!12377 = !DILocation(line: 1034, column: 21, scope: !12362)
!12378 = !DILocation(line: 1034, column: 3, scope: !12362)
!12379 = !DILocation(line: 1035, column: 6, scope: !12362)
!12380 = !DILocation(line: 1036, column: 3, scope: !12362)
!12381 = !DILocation(line: 1039, column: 12, scope: !12382)
!12382 = distinct !DILexicalBlock(scope: !12245, file: !3, line: 1039, column: 6)
!12383 = !DILocation(line: 1039, column: 18, scope: !12382)
!12384 = !DILocation(line: 1039, column: 6, scope: !12382)
!12385 = !DILocation(line: 1040, column: 4, scope: !12382)
!12386 = !DILocation(line: 1039, column: 6, scope: !12245)
!12387 = !DILocation(line: 1041, column: 6, scope: !12388)
!12388 = distinct !DILexicalBlock(scope: !12382, file: !3, line: 1040, column: 46)
!12389 = !DILocation(line: 1042, column: 47, scope: !12390)
!12390 = distinct !DILexicalBlock(scope: !12388, file: !3, line: 1042, column: 7)
!12391 = !DILocation(line: 1042, column: 51, scope: !12390)
!12392 = !DILocation(line: 1042, column: 8, scope: !12390)
!12393 = !DILocation(line: 1042, column: 7, scope: !12388)
!12394 = !DILocation(line: 1043, column: 22, scope: !12395)
!12395 = distinct !DILexicalBlock(scope: !12390, file: !3, line: 1042, column: 61)
!12396 = !DILocation(line: 1043, column: 4, scope: !12395)
!12397 = !DILocation(line: 1044, column: 7, scope: !12395)
!12398 = !DILocation(line: 1045, column: 3, scope: !12395)
!12399 = !DILocation(line: 1046, column: 2, scope: !12388)
!12400 = !DILocation(line: 1040, column: 43, scope: !12382)
!12401 = !DILabel(scope: !12245, name: "exec_ic_exit", file: !3, line: 1047)
!12402 = !DILocation(line: 1047, column: 1, scope: !12245)
!12403 = !DILocation(line: 1049, column: 22, scope: !12245)
!12404 = !DILocation(line: 1049, column: 2, scope: !12245)
!12405 = !DILocation(line: 1050, column: 36, scope: !12245)
!12406 = !DILocation(line: 1050, column: 42, scope: !12245)
!12407 = !DILocation(line: 1050, column: 2, scope: !12245)
!12408 = !DILocation(line: 1051, column: 6, scope: !12409)
!12409 = distinct !DILexicalBlock(scope: !12245, file: !3, line: 1051, column: 6)
!12410 = !DILocation(line: 1051, column: 9, scope: !12409)
!12411 = !DILocation(line: 1051, column: 14, scope: !12409)
!12412 = !DILocation(line: 1051, column: 32, scope: !12409)
!12413 = !DILocation(line: 1051, column: 38, scope: !12409)
!12414 = !DILocation(line: 1051, column: 17, scope: !12409)
!12415 = !DILocation(line: 1051, column: 6, scope: !12245)
!12416 = !DILocation(line: 1053, column: 10, scope: !12417)
!12417 = distinct !DILexicalBlock(scope: !12409, file: !3, line: 1051, column: 44)
!12418 = !DILocation(line: 1053, column: 3, scope: !12417)
!12419 = !DILocation(line: 1055, column: 2, scope: !12245)
!12420 = !DILocation(line: 1057, column: 9, scope: !12245)
!12421 = !DILocation(line: 1057, column: 2, scope: !12245)
!12422 = !DILocation(line: 1058, column: 1, scope: !12245)
!12423 = distinct !DISubprogram(name: "clear_bit", scope: !8229, file: !8229, line: 39, type: !8230, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!12424 = !DILocalVariable(name: "nr", arg: 1, scope: !12425, file: !8236, line: 72, type: !175)
!12425 = distinct !DISubprogram(name: "arch_clear_bit", scope: !8236, file: !8236, line: 72, type: !8230, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!12426 = !DILocation(line: 72, column: 21, scope: !12425, inlinedAt: !12427)
!12427 = distinct !DILocation(line: 42, column: 2, scope: !12423)
!12428 = !DILocalVariable(name: "addr", arg: 2, scope: !12425, file: !8236, line: 72, type: !8232)
!12429 = !DILocation(line: 72, column: 49, scope: !12425, inlinedAt: !12427)
!12430 = !DILocation(line: 84, column: 74, scope: !8242, inlinedAt: !12431)
!12431 = distinct !DILocation(line: 41, column: 2, scope: !12423)
!12432 = !DILocation(line: 84, column: 84, scope: !8242, inlinedAt: !12431)
!12433 = !DILocalVariable(name: "nr", arg: 1, scope: !12423, file: !8229, line: 39, type: !175)
!12434 = !DILocation(line: 39, column: 35, scope: !12423)
!12435 = !DILocalVariable(name: "addr", arg: 2, scope: !12423, file: !8229, line: 39, type: !8232)
!12436 = !DILocation(line: 39, column: 63, scope: !12423)
!12437 = !DILocation(line: 41, column: 26, scope: !12423)
!12438 = !DILocation(line: 41, column: 33, scope: !12423)
!12439 = !DILocation(line: 41, column: 31, scope: !12423)
!12440 = !DILocation(line: 86, column: 20, scope: !8242, inlinedAt: !12431)
!12441 = !DILocation(line: 86, column: 23, scope: !8242, inlinedAt: !12431)
!12442 = !DILocation(line: 86, column: 2, scope: !8242, inlinedAt: !12431)
!12443 = !DILocation(line: 87, column: 2, scope: !8242, inlinedAt: !12431)
!12444 = !DILocation(line: 42, column: 17, scope: !12423)
!12445 = !DILocation(line: 42, column: 21, scope: !12423)
!12446 = !DILocation(line: 74, column: 27, scope: !12447, inlinedAt: !12427)
!12447 = distinct !DILexicalBlock(scope: !12425, file: !8236, line: 74, column: 6)
!12448 = !DILocation(line: 74, column: 6, scope: !12447, inlinedAt: !12427)
!12449 = !DILocation(line: 74, column: 6, scope: !12425, inlinedAt: !12427)
!12450 = !DILocation(line: 76, column: 6, scope: !12451, inlinedAt: !12427)
!12451 = distinct !DILexicalBlock(scope: !12447, file: !8236, line: 74, column: 32)
!12452 = !DILocation(line: 77, column: 13, scope: !12451, inlinedAt: !12427)
!12453 = !DILocation(line: 77, column: 12, scope: !12451, inlinedAt: !12427)
!12454 = !DILocation(line: 75, column: 3, scope: !12451, inlinedAt: !12427)
!12455 = !{i32 -2146624802}
!12456 = !DILocation(line: 78, column: 2, scope: !12451, inlinedAt: !12427)
!12457 = !DILocation(line: 80, column: 8, scope: !12458, inlinedAt: !12427)
!12458 = distinct !DILexicalBlock(scope: !12447, file: !8236, line: 78, column: 9)
!12459 = !DILocation(line: 80, column: 32, scope: !12458, inlinedAt: !12427)
!12460 = !DILocation(line: 79, column: 3, scope: !12458, inlinedAt: !12427)
!12461 = !{i32 -2146624670}
!12462 = !DILocation(line: 43, column: 1, scope: !12423)
!12463 = distinct !DISubprogram(name: "mtip_quiesce_io", scope: !3, file: !3, line: 901, type: !12464, scopeLine: 902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!12464 = !DISubroutineType(types: !12465)
!12465 = !{!443, !6168, !898}
!12466 = !DILocation(line: 363, column: 74, scope: !7001, inlinedAt: !12467)
!12467 = distinct !DILocation(line: 908, column: 17, scope: !12463)
!12468 = !DILocalVariable(name: "port", arg: 1, scope: !12463, file: !3, line: 901, type: !6168)
!12469 = !DILocation(line: 901, column: 46, scope: !12463)
!12470 = !DILocalVariable(name: "timeout", arg: 2, scope: !12463, file: !3, line: 901, type: !898)
!12471 = !DILocation(line: 901, column: 66, scope: !12463)
!12472 = !DILocalVariable(name: "to", scope: !12463, file: !3, line: 903, type: !898)
!12473 = !DILocation(line: 903, column: 16, scope: !12463)
!12474 = !DILocalVariable(name: "active", scope: !12463, file: !3, line: 904, type: !1011)
!12475 = !DILocation(line: 904, column: 7, scope: !12463)
!12476 = !DILocation(line: 906, column: 23, scope: !12463)
!12477 = !DILocation(line: 906, column: 29, scope: !12463)
!12478 = !DILocation(line: 906, column: 33, scope: !12463)
!12479 = !DILocation(line: 906, column: 2, scope: !12463)
!12480 = !DILocation(line: 908, column: 7, scope: !12463)
!12481 = !DILocation(line: 908, column: 34, scope: !12463)
!12482 = !DILocation(line: 365, column: 27, scope: !7071, inlinedAt: !12467)
!12483 = !DILocation(line: 365, column: 6, scope: !7071, inlinedAt: !12467)
!12484 = !DILocation(line: 365, column: 6, scope: !7001, inlinedAt: !12467)
!12485 = !DILocation(line: 366, column: 12, scope: !7075, inlinedAt: !12467)
!12486 = !DILocation(line: 366, column: 14, scope: !7075, inlinedAt: !12467)
!12487 = !DILocation(line: 366, column: 7, scope: !7076, inlinedAt: !12467)
!12488 = !DILocation(line: 367, column: 4, scope: !7075, inlinedAt: !12467)
!12489 = !DILocation(line: 368, column: 28, scope: !7076, inlinedAt: !12467)
!12490 = !DILocation(line: 368, column: 10, scope: !7076, inlinedAt: !12467)
!12491 = !DILocation(line: 368, column: 3, scope: !7076, inlinedAt: !12467)
!12492 = !DILocation(line: 370, column: 29, scope: !7084, inlinedAt: !12467)
!12493 = !DILocation(line: 370, column: 10, scope: !7084, inlinedAt: !12467)
!12494 = !DILocation(line: 370, column: 3, scope: !7084, inlinedAt: !12467)
!12495 = !DILocation(line: 372, column: 1, scope: !7001, inlinedAt: !12467)
!12496 = !DILocation(line: 908, column: 15, scope: !12463)
!12497 = !DILocation(line: 908, column: 5, scope: !12463)
!12498 = !DILocation(line: 909, column: 2, scope: !12463)
!12499 = !DILocation(line: 910, column: 45, scope: !12500)
!12500 = distinct !DILexicalBlock(scope: !12501, file: !3, line: 910, column: 7)
!12501 = distinct !DILexicalBlock(scope: !12463, file: !3, line: 909, column: 5)
!12502 = !DILocation(line: 910, column: 51, scope: !12500)
!12503 = !DILocation(line: 910, column: 7, scope: !12500)
!12504 = !DILocation(line: 910, column: 58, scope: !12500)
!12505 = !DILocation(line: 911, column: 38, scope: !12500)
!12506 = !DILocation(line: 911, column: 44, scope: !12500)
!12507 = !DILocation(line: 911, column: 4, scope: !12500)
!12508 = !DILocation(line: 910, column: 7, scope: !12501)
!12509 = !DILocation(line: 912, column: 4, scope: !12510)
!12510 = distinct !DILexicalBlock(scope: !12500, file: !3, line: 911, column: 52)
!12511 = !DILocation(line: 913, column: 4, scope: !12510)
!12512 = !DILocation(line: 916, column: 3, scope: !12501)
!12513 = !DILocation(line: 918, column: 35, scope: !12514)
!12514 = distinct !DILexicalBlock(scope: !12501, file: !3, line: 918, column: 7)
!12515 = !DILocation(line: 918, column: 41, scope: !12514)
!12516 = !DILocation(line: 918, column: 45, scope: !12514)
!12517 = !DILocation(line: 918, column: 7, scope: !12514)
!12518 = !DILocation(line: 918, column: 7, scope: !12501)
!12519 = !DILocation(line: 919, column: 4, scope: !12514)
!12520 = !DILocation(line: 921, column: 33, scope: !12501)
!12521 = !DILocation(line: 921, column: 12, scope: !12501)
!12522 = !DILocation(line: 921, column: 10, scope: !12501)
!12523 = !DILocation(line: 922, column: 8, scope: !12524)
!12524 = distinct !DILexicalBlock(scope: !12501, file: !3, line: 922, column: 7)
!12525 = !DILocation(line: 922, column: 7, scope: !12501)
!12526 = !DILocation(line: 923, column: 4, scope: !12524)
!12527 = !DILocation(line: 924, column: 2, scope: !12501)
!12528 = !DILocation(line: 924, column: 11, scope: !12463)
!12529 = distinct !{!12529, !12498, !12530}
!12530 = !DILocation(line: 924, column: 35, scope: !12463)
!12531 = !DILocation(line: 926, column: 25, scope: !12463)
!12532 = !DILocation(line: 926, column: 31, scope: !12463)
!12533 = !DILocation(line: 926, column: 35, scope: !12463)
!12534 = !DILocation(line: 926, column: 2, scope: !12463)
!12535 = !DILocation(line: 927, column: 9, scope: !12463)
!12536 = !DILocation(line: 927, column: 2, scope: !12463)
!12537 = !DILabel(scope: !12463, name: "err_fault", file: !3, line: 928)
!12538 = !DILocation(line: 928, column: 1, scope: !12463)
!12539 = !DILocation(line: 929, column: 25, scope: !12463)
!12540 = !DILocation(line: 929, column: 31, scope: !12463)
!12541 = !DILocation(line: 929, column: 35, scope: !12463)
!12542 = !DILocation(line: 929, column: 2, scope: !12463)
!12543 = !DILocation(line: 930, column: 2, scope: !12463)
!12544 = !DILocation(line: 931, column: 1, scope: !12463)
!12545 = distinct !DISubprogram(name: "mtip_device_reset", scope: !3, file: !3, line: 446, type: !6387, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!12546 = !DILocalVariable(name: "dd", arg: 1, scope: !12545, file: !3, line: 446, type: !945)
!12547 = !DILocation(line: 446, column: 50, scope: !12545)
!12548 = !DILocalVariable(name: "rv", scope: !12545, file: !3, line: 448, type: !443)
!12549 = !DILocation(line: 448, column: 6, scope: !12545)
!12550 = !DILocation(line: 450, column: 34, scope: !12551)
!12551 = distinct !DILexicalBlock(scope: !12545, file: !3, line: 450, column: 6)
!12552 = !DILocation(line: 450, column: 38, scope: !12551)
!12553 = !DILocation(line: 450, column: 6, scope: !12551)
!12554 = !DILocation(line: 450, column: 6, scope: !12545)
!12555 = !DILocation(line: 451, column: 3, scope: !12551)
!12556 = !DILocation(line: 453, column: 21, scope: !12557)
!12557 = distinct !DILexicalBlock(scope: !12545, file: !3, line: 453, column: 6)
!12558 = !DILocation(line: 453, column: 6, scope: !12557)
!12559 = !DILocation(line: 453, column: 25, scope: !12557)
!12560 = !DILocation(line: 453, column: 6, scope: !12545)
!12561 = !DILocation(line: 454, column: 6, scope: !12557)
!12562 = !DILocation(line: 454, column: 3, scope: !12557)
!12563 = !DILocation(line: 456, column: 2, scope: !12564)
!12564 = distinct !DILexicalBlock(scope: !12565, file: !3, line: 456, column: 2)
!12565 = distinct !DILexicalBlock(scope: !12566, file: !3, line: 456, column: 2)
!12566 = distinct !DILexicalBlock(scope: !12567, file: !3, line: 456, column: 2)
!12567 = distinct !DILexicalBlock(scope: !12545, file: !3, line: 456, column: 2)
!12568 = !DILocation(line: 457, column: 17, scope: !12545)
!12569 = !DILocation(line: 457, column: 21, scope: !12545)
!12570 = !DILocation(line: 457, column: 2, scope: !12545)
!12571 = !DILocation(line: 458, column: 18, scope: !12545)
!12572 = !DILocation(line: 458, column: 22, scope: !12545)
!12573 = !DILocation(line: 458, column: 2, scope: !12545)
!12574 = !DILocation(line: 461, column: 15, scope: !12545)
!12575 = !DILocation(line: 461, column: 19, scope: !12545)
!12576 = !DILocation(line: 461, column: 24, scope: !12545)
!12577 = !DILocation(line: 461, column: 9, scope: !12545)
!12578 = !DILocation(line: 461, column: 36, scope: !12545)
!12579 = !DILocation(line: 462, column: 6, scope: !12545)
!12580 = !DILocation(line: 462, column: 10, scope: !12545)
!12581 = !DILocation(line: 462, column: 15, scope: !12545)
!12582 = !DILocation(line: 461, column: 2, scope: !12545)
!12583 = !DILocation(line: 463, column: 9, scope: !12545)
!12584 = !DILocation(line: 463, column: 2, scope: !12545)
!12585 = !DILocation(line: 464, column: 1, scope: !12545)
!12586 = distinct !DISubprogram(name: "mtip_pause_ncq", scope: !3, file: !3, line: 843, type: !12587, scopeLine: 845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!12587 = !DISubroutineType(types: !12588)
!12588 = !{!1011, !6168, !6241}
!12589 = !DILocalVariable(name: "port", arg: 1, scope: !12586, file: !3, line: 843, type: !6168)
!12590 = !DILocation(line: 843, column: 46, scope: !12586)
!12591 = !DILocalVariable(name: "fis", arg: 2, scope: !12586, file: !3, line: 844, type: !6241)
!12592 = !DILocation(line: 844, column: 29, scope: !12586)
!12593 = !DILocalVariable(name: "task_file_data", scope: !12586, file: !3, line: 846, type: !898)
!12594 = !DILocation(line: 846, column: 16, scope: !12586)
!12595 = !DILocation(line: 848, column: 25, scope: !12586)
!12596 = !DILocation(line: 848, column: 31, scope: !12586)
!12597 = !DILocation(line: 848, column: 35, scope: !12586)
!12598 = !DILocation(line: 848, column: 19, scope: !12586)
!12599 = !DILocation(line: 848, column: 17, scope: !12586)
!12600 = !DILocation(line: 849, column: 7, scope: !12601)
!12601 = distinct !DILexicalBlock(scope: !12586, file: !3, line: 849, column: 6)
!12602 = !DILocation(line: 849, column: 22, scope: !12601)
!12603 = !DILocation(line: 849, column: 6, scope: !12586)
!12604 = !DILocation(line: 850, column: 3, scope: !12601)
!12605 = !DILocation(line: 852, column: 6, scope: !12606)
!12606 = distinct !DILexicalBlock(scope: !12586, file: !3, line: 852, column: 6)
!12607 = !DILocation(line: 852, column: 11, scope: !12606)
!12608 = !DILocation(line: 852, column: 19, scope: !12606)
!12609 = !DILocation(line: 852, column: 6, scope: !12586)
!12610 = !DILocation(line: 853, column: 26, scope: !12611)
!12611 = distinct !DILexicalBlock(scope: !12606, file: !3, line: 852, column: 46)
!12612 = !DILocation(line: 853, column: 3, scope: !12611)
!12613 = !DILocation(line: 853, column: 9, scope: !12611)
!12614 = !DILocation(line: 853, column: 24, scope: !12611)
!12615 = !DILocation(line: 854, column: 3, scope: !12611)
!12616 = !DILocation(line: 855, column: 14, scope: !12617)
!12617 = distinct !DILexicalBlock(scope: !12606, file: !3, line: 855, column: 13)
!12618 = !DILocation(line: 855, column: 19, scope: !12617)
!12619 = !DILocation(line: 855, column: 27, scope: !12617)
!12620 = !DILocation(line: 855, column: 54, scope: !12617)
!12621 = !DILocation(line: 856, column: 7, scope: !12617)
!12622 = !DILocation(line: 856, column: 12, scope: !12617)
!12623 = !DILocation(line: 856, column: 21, scope: !12617)
!12624 = !DILocation(line: 855, column: 13, scope: !12606)
!12625 = !DILocation(line: 857, column: 35, scope: !12626)
!12626 = distinct !DILexicalBlock(scope: !12617, file: !3, line: 856, column: 31)
!12627 = !DILocation(line: 857, column: 41, scope: !12626)
!12628 = !DILocation(line: 857, column: 3, scope: !12626)
!12629 = !DILocation(line: 858, column: 26, scope: !12626)
!12630 = !DILocation(line: 858, column: 3, scope: !12626)
!12631 = !DILocation(line: 858, column: 9, scope: !12626)
!12632 = !DILocation(line: 858, column: 24, scope: !12626)
!12633 = !DILocation(line: 859, column: 3, scope: !12626)
!12634 = !DILocation(line: 860, column: 14, scope: !12635)
!12635 = distinct !DILexicalBlock(scope: !12617, file: !3, line: 860, column: 13)
!12636 = !DILocation(line: 860, column: 19, scope: !12635)
!12637 = !DILocation(line: 860, column: 27, scope: !12635)
!12638 = !DILocation(line: 860, column: 54, scope: !12635)
!12639 = !DILocation(line: 861, column: 5, scope: !12635)
!12640 = !DILocation(line: 861, column: 10, scope: !12635)
!12641 = !DILocation(line: 861, column: 18, scope: !12635)
!12642 = !DILocation(line: 861, column: 27, scope: !12635)
!12643 = !DILocation(line: 862, column: 5, scope: !12635)
!12644 = !DILocation(line: 862, column: 10, scope: !12635)
!12645 = !DILocation(line: 862, column: 19, scope: !12635)
!12646 = !DILocation(line: 862, column: 27, scope: !12635)
!12647 = !DILocation(line: 862, column: 30, scope: !12635)
!12648 = !DILocation(line: 862, column: 35, scope: !12635)
!12649 = !DILocation(line: 862, column: 44, scope: !12635)
!12650 = !DILocation(line: 862, column: 52, scope: !12635)
!12651 = !DILocation(line: 863, column: 5, scope: !12635)
!12652 = !DILocation(line: 863, column: 10, scope: !12635)
!12653 = !DILocation(line: 863, column: 19, scope: !12635)
!12654 = !DILocation(line: 863, column: 27, scope: !12635)
!12655 = !DILocation(line: 863, column: 30, scope: !12635)
!12656 = !DILocation(line: 863, column: 35, scope: !12635)
!12657 = !DILocation(line: 863, column: 44, scope: !12635)
!12658 = !DILocation(line: 860, column: 13, scope: !12617)
!12659 = !DILocation(line: 864, column: 37, scope: !12660)
!12660 = distinct !DILexicalBlock(scope: !12635, file: !3, line: 863, column: 55)
!12661 = !DILocation(line: 864, column: 43, scope: !12660)
!12662 = !DILocation(line: 864, column: 47, scope: !12660)
!12663 = !DILocation(line: 864, column: 3, scope: !12660)
!12664 = !DILocation(line: 865, column: 43, scope: !12660)
!12665 = !DILocation(line: 865, column: 49, scope: !12660)
!12666 = !DILocation(line: 865, column: 53, scope: !12660)
!12667 = !DILocation(line: 865, column: 3, scope: !12660)
!12668 = !DILocation(line: 867, column: 21, scope: !12660)
!12669 = !DILocation(line: 867, column: 3, scope: !12660)
!12670 = !DILocation(line: 868, column: 37, scope: !12660)
!12671 = !DILocation(line: 868, column: 43, scope: !12660)
!12672 = !DILocation(line: 868, column: 3, scope: !12660)
!12673 = !DILocation(line: 869, column: 3, scope: !12660)
!12674 = !DILocation(line: 872, column: 2, scope: !12586)
!12675 = !DILocation(line: 873, column: 1, scope: !12586)
!12676 = distinct !DISubprogram(name: "mtip_commands_active", scope: !3, file: !3, line: 875, type: !12677, scopeLine: 876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!12677 = !DISubroutineType(types: !12678)
!12678 = !{!1011, !6168}
!12679 = !DILocalVariable(name: "port", arg: 1, scope: !12676, file: !3, line: 875, type: !6168)
!12680 = !DILocation(line: 875, column: 52, scope: !12676)
!12681 = !DILocalVariable(name: "active", scope: !12676, file: !3, line: 877, type: !7)
!12682 = !DILocation(line: 877, column: 15, scope: !12676)
!12683 = !DILocalVariable(name: "n", scope: !12676, file: !3, line: 878, type: !7)
!12684 = !DILocation(line: 878, column: 15, scope: !12676)
!12685 = !DILocation(line: 884, column: 17, scope: !12676)
!12686 = !DILocation(line: 884, column: 23, scope: !12676)
!12687 = !DILocation(line: 884, column: 11, scope: !12676)
!12688 = !DILocation(line: 884, column: 36, scope: !12676)
!12689 = !DILocation(line: 884, column: 9, scope: !12676)
!12690 = !DILocation(line: 885, column: 9, scope: !12691)
!12691 = distinct !DILexicalBlock(scope: !12676, file: !3, line: 885, column: 2)
!12692 = !DILocation(line: 885, column: 7, scope: !12691)
!12693 = !DILocation(line: 885, column: 14, scope: !12694)
!12694 = distinct !DILexicalBlock(scope: !12691, file: !3, line: 885, column: 2)
!12695 = !DILocation(line: 885, column: 18, scope: !12694)
!12696 = !DILocation(line: 885, column: 24, scope: !12694)
!12697 = !DILocation(line: 885, column: 28, scope: !12694)
!12698 = !DILocation(line: 885, column: 16, scope: !12694)
!12699 = !DILocation(line: 885, column: 2, scope: !12691)
!12700 = !DILocation(line: 886, column: 19, scope: !12694)
!12701 = !DILocation(line: 886, column: 25, scope: !12694)
!12702 = !DILocation(line: 886, column: 34, scope: !12694)
!12703 = !DILocation(line: 886, column: 13, scope: !12694)
!12704 = !DILocation(line: 886, column: 10, scope: !12694)
!12705 = !DILocation(line: 886, column: 3, scope: !12694)
!12706 = !DILocation(line: 885, column: 42, scope: !12694)
!12707 = !DILocation(line: 885, column: 2, scope: !12694)
!12708 = distinct !{!12708, !12699, !12709}
!12709 = !DILocation(line: 886, column: 36, scope: !12691)
!12710 = !DILocation(line: 888, column: 9, scope: !12676)
!12711 = !DILocation(line: 888, column: 16, scope: !12676)
!12712 = !DILocation(line: 888, column: 2, scope: !12676)
!12713 = distinct !DISubprogram(name: "mtip_restart_port", scope: !3, file: !3, line: 376, type: !10036, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!12714 = !DILocation(line: 363, column: 74, scope: !7001, inlinedAt: !12715)
!12715 = distinct !DILocation(line: 429, column: 22, scope: !12713)
!12716 = !DILocation(line: 363, column: 74, scope: !7001, inlinedAt: !12717)
!12717 = distinct !DILocation(line: 416, column: 22, scope: !12713)
!12718 = !DILocation(line: 363, column: 74, scope: !7001, inlinedAt: !12719)
!12719 = distinct !DILocation(line: 384, column: 22, scope: !12713)
!12720 = !DILocalVariable(name: "port", arg: 1, scope: !12713, file: !3, line: 376, type: !6168)
!12721 = !DILocation(line: 376, column: 49, scope: !12713)
!12722 = !DILocalVariable(name: "timeout", scope: !12713, file: !3, line: 378, type: !898)
!12723 = !DILocation(line: 378, column: 16, scope: !12713)
!12724 = !DILocation(line: 381, column: 21, scope: !12713)
!12725 = !DILocation(line: 381, column: 2, scope: !12713)
!12726 = !DILocation(line: 384, column: 12, scope: !12713)
!12727 = !DILocation(line: 365, column: 27, scope: !7071, inlinedAt: !12719)
!12728 = !DILocation(line: 365, column: 6, scope: !7071, inlinedAt: !12719)
!12729 = !DILocation(line: 365, column: 6, scope: !7001, inlinedAt: !12719)
!12730 = !DILocation(line: 366, column: 12, scope: !7075, inlinedAt: !12719)
!12731 = !DILocation(line: 366, column: 14, scope: !7075, inlinedAt: !12719)
!12732 = !DILocation(line: 366, column: 7, scope: !7076, inlinedAt: !12719)
!12733 = !DILocation(line: 367, column: 4, scope: !7075, inlinedAt: !12719)
!12734 = !DILocation(line: 368, column: 28, scope: !7076, inlinedAt: !12719)
!12735 = !DILocation(line: 368, column: 10, scope: !7076, inlinedAt: !12719)
!12736 = !DILocation(line: 368, column: 3, scope: !7076, inlinedAt: !12719)
!12737 = !DILocation(line: 370, column: 29, scope: !7084, inlinedAt: !12719)
!12738 = !DILocation(line: 370, column: 10, scope: !7084, inlinedAt: !12719)
!12739 = !DILocation(line: 370, column: 3, scope: !7084, inlinedAt: !12719)
!12740 = !DILocation(line: 372, column: 1, scope: !7001, inlinedAt: !12719)
!12741 = !DILocation(line: 384, column: 20, scope: !12713)
!12742 = !DILocation(line: 384, column: 10, scope: !12713)
!12743 = !DILocation(line: 385, column: 2, scope: !12713)
!12744 = !DILocation(line: 385, column: 16, scope: !12713)
!12745 = !DILocation(line: 385, column: 22, scope: !12713)
!12746 = !DILocation(line: 385, column: 27, scope: !12713)
!12747 = !DILocation(line: 385, column: 10, scope: !12713)
!12748 = !DILocation(line: 385, column: 39, scope: !12713)
!12749 = !DILocation(line: 386, column: 4, scope: !12713)
!12750 = !DILocation(line: 386, column: 7, scope: !12713)
!12751 = !DILocation(line: 0, scope: !12713)
!12752 = distinct !{!12752, !12743, !12753}
!12753 = !DILocation(line: 387, column: 3, scope: !12713)
!12754 = !DILocation(line: 389, column: 45, scope: !12755)
!12755 = distinct !DILexicalBlock(scope: !12713, file: !3, line: 389, column: 6)
!12756 = !DILocation(line: 389, column: 51, scope: !12755)
!12757 = !DILocation(line: 389, column: 55, scope: !12755)
!12758 = !DILocation(line: 389, column: 6, scope: !12755)
!12759 = !DILocation(line: 389, column: 6, scope: !12713)
!12760 = !DILocation(line: 390, column: 3, scope: !12755)
!12761 = !DILocation(line: 396, column: 12, scope: !12762)
!12762 = distinct !DILexicalBlock(scope: !12713, file: !3, line: 396, column: 6)
!12763 = !DILocation(line: 396, column: 18, scope: !12762)
!12764 = !DILocation(line: 396, column: 23, scope: !12762)
!12765 = !DILocation(line: 396, column: 6, scope: !12762)
!12766 = !DILocation(line: 396, column: 35, scope: !12762)
!12767 = !DILocation(line: 396, column: 6, scope: !12713)
!12768 = !DILocation(line: 397, column: 3, scope: !12769)
!12769 = distinct !DILexicalBlock(scope: !12762, file: !3, line: 396, column: 55)
!12770 = !DILocation(line: 400, column: 22, scope: !12771)
!12771 = distinct !DILexicalBlock(scope: !12769, file: !3, line: 400, column: 7)
!12772 = !DILocation(line: 400, column: 28, scope: !12771)
!12773 = !DILocation(line: 400, column: 7, scope: !12771)
!12774 = !DILocation(line: 400, column: 7, scope: !12769)
!12775 = !DILocation(line: 401, column: 4, scope: !12771)
!12776 = !DILocalVariable(name: "__ms", scope: !12777, file: !3, line: 405, type: !898)
!12777 = distinct !DILexicalBlock(scope: !12769, file: !3, line: 405, column: 3)
!12778 = !DILocation(line: 405, column: 3, scope: !12777)
!12779 = !DILocation(line: 405, column: 3, scope: !12780)
!12780 = distinct !DILexicalBlock(scope: !12781, file: !3, line: 405, column: 3)
!12781 = distinct !DILexicalBlock(scope: !12782, file: !3, line: 405, column: 3)
!12782 = distinct !DILexicalBlock(scope: !12783, file: !3, line: 405, column: 3)
!12783 = distinct !DILexicalBlock(scope: !12777, file: !3, line: 405, column: 3)
!12784 = distinct !{!12784, !12778, !12778}
!12785 = !DILocation(line: 406, column: 2, scope: !12769)
!12786 = !DILocation(line: 408, column: 2, scope: !12713)
!12787 = !DILocation(line: 411, column: 15, scope: !12713)
!12788 = !DILocation(line: 411, column: 21, scope: !12713)
!12789 = !DILocation(line: 411, column: 26, scope: !12713)
!12790 = !DILocation(line: 411, column: 9, scope: !12713)
!12791 = !DILocation(line: 411, column: 42, scope: !12713)
!12792 = !DILocation(line: 412, column: 8, scope: !12713)
!12793 = !DILocation(line: 412, column: 14, scope: !12713)
!12794 = !DILocation(line: 412, column: 19, scope: !12713)
!12795 = !DILocation(line: 411, column: 2, scope: !12713)
!12796 = !DILocation(line: 413, column: 8, scope: !12713)
!12797 = !DILocation(line: 413, column: 14, scope: !12713)
!12798 = !DILocation(line: 413, column: 19, scope: !12713)
!12799 = !DILocation(line: 413, column: 2, scope: !12713)
!12800 = !DILocation(line: 416, column: 12, scope: !12713)
!12801 = !DILocation(line: 365, column: 27, scope: !7071, inlinedAt: !12717)
!12802 = !DILocation(line: 365, column: 6, scope: !7071, inlinedAt: !12717)
!12803 = !DILocation(line: 365, column: 6, scope: !7001, inlinedAt: !12717)
!12804 = !DILocation(line: 366, column: 12, scope: !7075, inlinedAt: !12717)
!12805 = !DILocation(line: 366, column: 14, scope: !7075, inlinedAt: !12717)
!12806 = !DILocation(line: 366, column: 7, scope: !7076, inlinedAt: !12717)
!12807 = !DILocation(line: 367, column: 4, scope: !7075, inlinedAt: !12717)
!12808 = !DILocation(line: 368, column: 28, scope: !7076, inlinedAt: !12717)
!12809 = !DILocation(line: 368, column: 10, scope: !7076, inlinedAt: !12717)
!12810 = !DILocation(line: 368, column: 3, scope: !7076, inlinedAt: !12717)
!12811 = !DILocation(line: 370, column: 29, scope: !7084, inlinedAt: !12717)
!12812 = !DILocation(line: 370, column: 10, scope: !7084, inlinedAt: !12717)
!12813 = !DILocation(line: 370, column: 3, scope: !7084, inlinedAt: !12717)
!12814 = !DILocation(line: 372, column: 1, scope: !7001, inlinedAt: !12717)
!12815 = !DILocation(line: 416, column: 20, scope: !12713)
!12816 = !DILocation(line: 416, column: 10, scope: !12713)
!12817 = !DILocation(line: 417, column: 2, scope: !12713)
!12818 = !DILocation(line: 417, column: 9, scope: !12713)
!12819 = distinct !{!12819, !12817, !12820}
!12820 = !DILocation(line: 418, column: 3, scope: !12713)
!12821 = !DILocation(line: 420, column: 45, scope: !12822)
!12822 = distinct !DILexicalBlock(scope: !12713, file: !3, line: 420, column: 6)
!12823 = !DILocation(line: 420, column: 51, scope: !12822)
!12824 = !DILocation(line: 420, column: 55, scope: !12822)
!12825 = !DILocation(line: 420, column: 6, scope: !12822)
!12826 = !DILocation(line: 420, column: 6, scope: !12713)
!12827 = !DILocation(line: 421, column: 3, scope: !12822)
!12828 = !DILocation(line: 424, column: 15, scope: !12713)
!12829 = !DILocation(line: 424, column: 21, scope: !12713)
!12830 = !DILocation(line: 424, column: 26, scope: !12713)
!12831 = !DILocation(line: 424, column: 9, scope: !12713)
!12832 = !DILocation(line: 424, column: 42, scope: !12713)
!12833 = !DILocation(line: 425, column: 5, scope: !12713)
!12834 = !DILocation(line: 425, column: 11, scope: !12713)
!12835 = !DILocation(line: 425, column: 16, scope: !12713)
!12836 = !DILocation(line: 424, column: 2, scope: !12713)
!12837 = !DILocation(line: 426, column: 8, scope: !12713)
!12838 = !DILocation(line: 426, column: 14, scope: !12713)
!12839 = !DILocation(line: 426, column: 19, scope: !12713)
!12840 = !DILocation(line: 426, column: 2, scope: !12713)
!12841 = !DILocation(line: 429, column: 12, scope: !12713)
!12842 = !DILocation(line: 365, column: 27, scope: !7071, inlinedAt: !12715)
!12843 = !DILocation(line: 365, column: 6, scope: !7071, inlinedAt: !12715)
!12844 = !DILocation(line: 365, column: 6, scope: !7001, inlinedAt: !12715)
!12845 = !DILocation(line: 366, column: 12, scope: !7075, inlinedAt: !12715)
!12846 = !DILocation(line: 366, column: 14, scope: !7075, inlinedAt: !12715)
!12847 = !DILocation(line: 366, column: 7, scope: !7076, inlinedAt: !12715)
!12848 = !DILocation(line: 367, column: 4, scope: !7075, inlinedAt: !12715)
!12849 = !DILocation(line: 368, column: 28, scope: !7076, inlinedAt: !12715)
!12850 = !DILocation(line: 368, column: 10, scope: !7076, inlinedAt: !12715)
!12851 = !DILocation(line: 368, column: 3, scope: !7076, inlinedAt: !12715)
!12852 = !DILocation(line: 370, column: 29, scope: !7084, inlinedAt: !12715)
!12853 = !DILocation(line: 370, column: 10, scope: !7084, inlinedAt: !12715)
!12854 = !DILocation(line: 370, column: 3, scope: !7084, inlinedAt: !12715)
!12855 = !DILocation(line: 372, column: 1, scope: !7001, inlinedAt: !12715)
!12856 = !DILocation(line: 429, column: 20, scope: !12713)
!12857 = !DILocation(line: 429, column: 10, scope: !12713)
!12858 = !DILocation(line: 430, column: 2, scope: !12713)
!12859 = !DILocation(line: 430, column: 17, scope: !12713)
!12860 = !DILocation(line: 430, column: 23, scope: !12713)
!12861 = !DILocation(line: 430, column: 28, scope: !12713)
!12862 = !DILocation(line: 430, column: 11, scope: !12713)
!12863 = !DILocation(line: 430, column: 45, scope: !12713)
!12864 = !DILocation(line: 430, column: 53, scope: !12713)
!12865 = !DILocation(line: 431, column: 5, scope: !12713)
!12866 = !DILocation(line: 431, column: 8, scope: !12713)
!12867 = distinct !{!12867, !12858, !12868}
!12868 = !DILocation(line: 432, column: 3, scope: !12713)
!12869 = !DILocation(line: 434, column: 45, scope: !12870)
!12870 = distinct !DILexicalBlock(scope: !12713, file: !3, line: 434, column: 6)
!12871 = !DILocation(line: 434, column: 51, scope: !12870)
!12872 = !DILocation(line: 434, column: 55, scope: !12870)
!12873 = !DILocation(line: 434, column: 6, scope: !12870)
!12874 = !DILocation(line: 434, column: 6, scope: !12713)
!12875 = !DILocation(line: 435, column: 3, scope: !12870)
!12876 = !DILocation(line: 437, column: 13, scope: !12877)
!12877 = distinct !DILexicalBlock(scope: !12713, file: !3, line: 437, column: 6)
!12878 = !DILocation(line: 437, column: 19, scope: !12877)
!12879 = !DILocation(line: 437, column: 24, scope: !12877)
!12880 = !DILocation(line: 437, column: 7, scope: !12877)
!12881 = !DILocation(line: 437, column: 41, scope: !12877)
!12882 = !DILocation(line: 437, column: 49, scope: !12877)
!12883 = !DILocation(line: 437, column: 6, scope: !12713)
!12884 = !DILocation(line: 438, column: 3, scope: !12877)
!12885 = !DILocation(line: 441, column: 17, scope: !12713)
!12886 = !DILocation(line: 441, column: 2, scope: !12713)
!12887 = !DILocation(line: 442, column: 18, scope: !12713)
!12888 = !DILocation(line: 442, column: 2, scope: !12713)
!12889 = !DILocation(line: 444, column: 1, scope: !12713)
!12890 = distinct !DISubprogram(name: "PTR_ERR", scope: !9149, file: !9149, line: 29, type: !12891, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!12891 = !DISubroutineType(types: !12892)
!12892 = !{!175, !4027}
!12893 = !DILocalVariable(name: "ptr", arg: 1, scope: !12890, file: !9149, line: 29, type: !4027)
!12894 = !DILocation(line: 29, column: 61, scope: !12890)
!12895 = !DILocation(line: 31, column: 16, scope: !12890)
!12896 = !DILocation(line: 31, column: 9, scope: !12890)
!12897 = !DILocation(line: 31, column: 2, scope: !12890)
!12898 = !DILocalVariable(name: "dev", arg: 1, scope: !6401, file: !6402, line: 271, type: !1960)
!12899 = !DILocation(line: 271, column: 62, scope: !6401)
!12900 = !DILocalVariable(name: "ptr", arg: 2, scope: !6401, file: !6402, line: 271, type: !890)
!12901 = !DILocation(line: 271, column: 73, scope: !6401)
!12902 = !DILocalVariable(name: "size", arg: 3, scope: !6401, file: !6402, line: 272, type: !1121)
!12903 = !DILocation(line: 272, column: 10, scope: !6401)
!12904 = !DILocalVariable(name: "dir", arg: 4, scope: !6401, file: !6402, line: 272, type: !880)
!12905 = !DILocation(line: 272, column: 40, scope: !6401)
!12906 = !DILocalVariable(name: "attrs", arg: 5, scope: !6401, file: !6402, line: 272, type: !898)
!12907 = !DILocation(line: 272, column: 59, scope: !6401)
!12908 = !DILocalVariable(name: "__ret_warn_once", scope: !12909, file: !6402, line: 275, type: !443)
!12909 = distinct !DILexicalBlock(scope: !12910, file: !6402, line: 275, column: 6)
!12910 = distinct !DILexicalBlock(scope: !6401, file: !6402, line: 275, column: 6)
!12911 = !DILocation(line: 275, column: 6, scope: !12909)
!12912 = !DILocation(line: 275, column: 6, scope: !12913)
!12913 = distinct !DILexicalBlock(scope: !12909, file: !6402, line: 275, column: 6)
!12914 = !DILocation(line: 0, scope: !12913)
!12915 = !DILocation(line: 275, column: 6, scope: !12916)
!12916 = distinct !DILexicalBlock(scope: !12913, file: !6402, line: 275, column: 6)
!12917 = !DILocalVariable(name: "__ret_warn_on", scope: !12918, file: !6402, line: 275, type: !443)
!12918 = distinct !DILexicalBlock(scope: !12916, file: !6402, line: 275, column: 6)
!12919 = !DILocation(line: 275, column: 6, scope: !12918)
!12920 = !DILocation(line: 275, column: 6, scope: !12921)
!12921 = distinct !DILexicalBlock(scope: !12918, file: !6402, line: 275, column: 6)
!12922 = !DILocation(line: 275, column: 6, scope: !12923)
!12923 = distinct !DILexicalBlock(scope: !12921, file: !6402, line: 275, column: 6)
!12924 = !DILocation(line: 275, column: 6, scope: !12925)
!12925 = distinct !DILexicalBlock(scope: !12923, file: !6402, line: 275, column: 6)
!12926 = !DILocation(line: 275, column: 6, scope: !12927)
!12927 = distinct !DILexicalBlock(scope: !12923, file: !6402, line: 275, column: 6)
!12928 = !DILocation(line: 275, column: 6, scope: !12929)
!12929 = distinct !DILexicalBlock(scope: !12927, file: !6402, line: 275, column: 6)
!12930 = !DILocation(line: 275, column: 6, scope: !12931)
!12931 = distinct !DILexicalBlock(scope: !12927, file: !6402, line: 275, column: 6)
!12932 = !{i32 -2141782345, i32 -2141782316, i32 -2141782270, i32 -2141782212, i32 -2141782158, i32 -2141782104, i32 -2141782049, i32 -2141782018}
!12933 = !DILocation(line: 275, column: 6, scope: !12934)
!12934 = distinct !DILexicalBlock(scope: !12927, file: !6402, line: 275, column: 6)
!12935 = !{i32 -2141781598, i32 -2141781591, i32 -2141781539, i32 -2141781508, i32 -2141781478}
!12936 = !DILocation(line: 275, column: 6, scope: !12937)
!12937 = distinct !DILexicalBlock(scope: !12927, file: !6402, line: 275, column: 6)
!12938 = !DILocation(line: 275, column: 6, scope: !12939)
!12939 = distinct !DILexicalBlock(scope: !12923, file: !6402, line: 275, column: 6)
!12940 = !DILocation(line: 275, column: 6, scope: !12910)
!12941 = !DILocation(line: 275, column: 6, scope: !6401)
!12942 = !DILocation(line: 277, column: 3, scope: !12910)
!12943 = !DILocation(line: 278, column: 23, scope: !6401)
!12944 = !DILocation(line: 278, column: 28, scope: !6401)
!12945 = !DILocation(line: 278, column: 33, scope: !6401)
!12946 = !DILocation(line: 278, column: 2, scope: !6401)
!12947 = !DILocation(line: 279, column: 28, scope: !6401)
!12948 = !DILocation(line: 279, column: 33, scope: !6401)
!12949 = !DILocation(line: 279, column: 52, scope: !6401)
!12950 = !DILocation(line: 280, column: 4, scope: !6401)
!12951 = !DILocation(line: 280, column: 10, scope: !6401)
!12952 = !DILocation(line: 280, column: 15, scope: !6401)
!12953 = !DILocation(line: 279, column: 9, scope: !6401)
!12954 = !DILocation(line: 279, column: 2, scope: !6401)
!12955 = !DILocation(line: 281, column: 1, scope: !6401)
!12956 = distinct !DISubprogram(name: "dma_mapping_error", scope: !6402, file: !6402, line: 94, type: !12957, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!12957 = !DISubroutineType(types: !12958)
!12958 = !{!443, !1960, !1995}
!12959 = !DILocalVariable(name: "dev", arg: 1, scope: !12956, file: !6402, line: 94, type: !1960)
!12960 = !DILocation(line: 94, column: 52, scope: !12956)
!12961 = !DILocalVariable(name: "dma_addr", arg: 2, scope: !12956, file: !6402, line: 94, type: !1995)
!12962 = !DILocation(line: 94, column: 68, scope: !12956)
!12963 = !DILocation(line: 96, column: 26, scope: !12956)
!12964 = !DILocation(line: 96, column: 31, scope: !12956)
!12965 = !DILocation(line: 96, column: 2, scope: !12956)
!12966 = !DILocation(line: 98, column: 6, scope: !12967)
!12967 = distinct !DILexicalBlock(scope: !12956, file: !6402, line: 98, column: 6)
!12968 = !DILocation(line: 98, column: 15, scope: !12967)
!12969 = !DILocation(line: 98, column: 6, scope: !12956)
!12970 = !DILocation(line: 99, column: 3, scope: !12967)
!12971 = !DILocation(line: 100, column: 2, scope: !12956)
!12972 = !DILocation(line: 101, column: 1, scope: !12956)
!12973 = distinct !DISubprogram(name: "implicit_sector", scope: !3, file: !3, line: 1665, type: !12974, scopeLine: 1667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!12974 = !DISubroutineType(types: !12975)
!12975 = !{!7, !1211, !1211}
!12976 = !DILocalVariable(name: "command", arg: 1, scope: !12973, file: !3, line: 1665, type: !1211)
!12977 = !DILocation(line: 1665, column: 51, scope: !12973)
!12978 = !DILocalVariable(name: "features", arg: 2, scope: !12973, file: !3, line: 1666, type: !1211)
!12979 = !DILocation(line: 1666, column: 23, scope: !12973)
!12980 = !DILocalVariable(name: "rv", scope: !12973, file: !3, line: 1668, type: !7)
!12981 = !DILocation(line: 1668, column: 15, scope: !12973)
!12982 = !DILocation(line: 1671, column: 10, scope: !12973)
!12983 = !DILocation(line: 1671, column: 2, scope: !12973)
!12984 = !DILocation(line: 1680, column: 6, scope: !12985)
!12985 = distinct !DILexicalBlock(scope: !12973, file: !3, line: 1671, column: 19)
!12986 = !DILocation(line: 1681, column: 3, scope: !12985)
!12987 = !DILocation(line: 1683, column: 7, scope: !12988)
!12988 = distinct !DILexicalBlock(scope: !12985, file: !3, line: 1683, column: 7)
!12989 = !DILocation(line: 1683, column: 16, scope: !12988)
!12990 = !DILocation(line: 1683, column: 7, scope: !12985)
!12991 = !DILocation(line: 1684, column: 7, scope: !12988)
!12992 = !DILocation(line: 1684, column: 4, scope: !12988)
!12993 = !DILocation(line: 1685, column: 3, scope: !12985)
!12994 = !DILocation(line: 1687, column: 8, scope: !12995)
!12995 = distinct !DILexicalBlock(scope: !12985, file: !3, line: 1687, column: 7)
!12996 = !DILocation(line: 1687, column: 17, scope: !12995)
!12997 = !DILocation(line: 1687, column: 43, scope: !12995)
!12998 = !DILocation(line: 1688, column: 6, scope: !12995)
!12999 = !DILocation(line: 1688, column: 15, scope: !12995)
!13000 = !DILocation(line: 1687, column: 7, scope: !12985)
!13001 = !DILocation(line: 1689, column: 7, scope: !12995)
!13002 = !DILocation(line: 1689, column: 4, scope: !12995)
!13003 = !DILocation(line: 1690, column: 3, scope: !12985)
!13004 = !DILocation(line: 1692, column: 8, scope: !13005)
!13005 = distinct !DILexicalBlock(scope: !12985, file: !3, line: 1692, column: 7)
!13006 = !DILocation(line: 1692, column: 17, scope: !13005)
!13007 = !DILocation(line: 1692, column: 38, scope: !13005)
!13008 = !DILocation(line: 1693, column: 6, scope: !13005)
!13009 = !DILocation(line: 1693, column: 15, scope: !13005)
!13010 = !DILocation(line: 1692, column: 7, scope: !12985)
!13011 = !DILocation(line: 1694, column: 7, scope: !13005)
!13012 = !DILocation(line: 1694, column: 4, scope: !13005)
!13013 = !DILocation(line: 1695, column: 3, scope: !12985)
!13014 = !DILocation(line: 1697, column: 9, scope: !12973)
!13015 = !DILocation(line: 1697, column: 2, scope: !12973)
!13016 = distinct !DISubprogram(name: "dma_unmap_single_attrs", scope: !6402, file: !6402, line: 283, type: !13017, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!13017 = !DISubroutineType(types: !13018)
!13018 = !{null, !1960, !1995, !1121, !880, !898}
!13019 = !DILocalVariable(name: "dev", arg: 1, scope: !13016, file: !6402, line: 283, type: !1960)
!13020 = !DILocation(line: 283, column: 58, scope: !13016)
!13021 = !DILocalVariable(name: "addr", arg: 2, scope: !13016, file: !6402, line: 283, type: !1995)
!13022 = !DILocation(line: 283, column: 74, scope: !13016)
!13023 = !DILocalVariable(name: "size", arg: 3, scope: !13016, file: !6402, line: 284, type: !1121)
!13024 = !DILocation(line: 284, column: 10, scope: !13016)
!13025 = !DILocalVariable(name: "dir", arg: 4, scope: !13016, file: !6402, line: 284, type: !880)
!13026 = !DILocation(line: 284, column: 40, scope: !13016)
!13027 = !DILocalVariable(name: "attrs", arg: 5, scope: !13016, file: !6402, line: 284, type: !898)
!13028 = !DILocation(line: 284, column: 59, scope: !13016)
!13029 = !DILocation(line: 286, column: 30, scope: !13016)
!13030 = !DILocation(line: 286, column: 35, scope: !13016)
!13031 = !DILocation(line: 286, column: 41, scope: !13016)
!13032 = !DILocation(line: 286, column: 47, scope: !13016)
!13033 = !DILocation(line: 286, column: 52, scope: !13016)
!13034 = !DILocation(line: 286, column: 9, scope: !13016)
!13035 = !DILocation(line: 286, column: 2, scope: !13016)
!13036 = distinct !DISubprogram(name: "dev_name", scope: !25, file: !25, line: 609, type: !13037, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!13037 = !DISubroutineType(types: !13038)
!13038 = !{!1024, !5540}
!13039 = !DILocalVariable(name: "dev", arg: 1, scope: !13036, file: !25, line: 609, type: !5540)
!13040 = !DILocation(line: 609, column: 57, scope: !13036)
!13041 = !DILocation(line: 612, column: 6, scope: !13042)
!13042 = distinct !DILexicalBlock(scope: !13036, file: !25, line: 612, column: 6)
!13043 = !DILocation(line: 612, column: 11, scope: !13042)
!13044 = !DILocation(line: 612, column: 6, scope: !13036)
!13045 = !DILocation(line: 613, column: 10, scope: !13042)
!13046 = !DILocation(line: 613, column: 15, scope: !13042)
!13047 = !DILocation(line: 613, column: 3, scope: !13042)
!13048 = !DILocation(line: 615, column: 23, scope: !13036)
!13049 = !DILocation(line: 615, column: 28, scope: !13036)
!13050 = !DILocation(line: 615, column: 9, scope: !13036)
!13051 = !DILocation(line: 615, column: 2, scope: !13036)
!13052 = !DILocation(line: 616, column: 1, scope: !13036)
!13053 = distinct !DISubprogram(name: "debug_dma_map_single", scope: !6402, file: !6402, line: 87, type: !13054, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!13054 = !DISubroutineType(types: !13055)
!13055 = !{null, !1960, !4027, !898}
!13056 = !DILocalVariable(name: "dev", arg: 1, scope: !13053, file: !6402, line: 87, type: !1960)
!13057 = !DILocation(line: 87, column: 56, scope: !13053)
!13058 = !DILocalVariable(name: "addr", arg: 2, scope: !13053, file: !6402, line: 87, type: !4027)
!13059 = !DILocation(line: 87, column: 73, scope: !13053)
!13060 = !DILocalVariable(name: "len", arg: 3, scope: !13053, file: !6402, line: 88, type: !898)
!13061 = !DILocation(line: 88, column: 17, scope: !13053)
!13062 = !DILocation(line: 90, column: 1, scope: !13053)
!13063 = distinct !DISubprogram(name: "__phys_addr_nodebug", scope: !13064, file: !13064, line: 18, type: !7678, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!13064 = !DIFile(filename: "./arch/x86/include/asm/page_64.h", directory: "/home/lizy2001/genbc/linux")
!13065 = !DILocalVariable(name: "x", arg: 1, scope: !13063, file: !13064, line: 18, type: !898)
!13066 = !DILocation(line: 18, column: 63, scope: !13063)
!13067 = !DILocalVariable(name: "y", scope: !13063, file: !13064, line: 20, type: !898)
!13068 = !DILocation(line: 20, column: 16, scope: !13063)
!13069 = !DILocation(line: 20, column: 20, scope: !13063)
!13070 = !DILocation(line: 20, column: 22, scope: !13063)
!13071 = !DILocation(line: 23, column: 6, scope: !13063)
!13072 = !DILocation(line: 23, column: 12, scope: !13063)
!13073 = !DILocation(line: 23, column: 16, scope: !13063)
!13074 = !DILocation(line: 23, column: 14, scope: !13063)
!13075 = !DILocation(line: 23, column: 11, scope: !13063)
!13076 = !DILocation(line: 23, column: 21, scope: !13063)
!13077 = !DILocation(line: 23, column: 55, scope: !13063)
!13078 = !DILocation(line: 23, column: 53, scope: !13063)
!13079 = !DILocation(line: 23, column: 8, scope: !13063)
!13080 = !DILocation(line: 23, column: 4, scope: !13063)
!13081 = !DILocation(line: 25, column: 9, scope: !13063)
!13082 = !DILocation(line: 25, column: 2, scope: !13063)
!13083 = distinct !DISubprogram(name: "kobject_name", scope: !1021, file: !1021, line: 88, type: !13084, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!13084 = !DISubroutineType(types: !13085)
!13085 = !{!1024, !13086}
!13086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13087, size: 64)
!13087 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1020)
!13088 = !DILocalVariable(name: "kobj", arg: 1, scope: !13083, file: !1021, line: 88, type: !13086)
!13089 = !DILocation(line: 88, column: 62, scope: !13083)
!13090 = !DILocation(line: 90, column: 9, scope: !13083)
!13091 = !DILocation(line: 90, column: 15, scope: !13083)
!13092 = !DILocation(line: 90, column: 2, scope: !13083)
!13093 = distinct !DISubprogram(name: "debug_dma_mapping_error", scope: !6402, file: !6402, line: 83, type: !13094, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!13094 = !DISubroutineType(types: !13095)
!13095 = !{null, !1960, !1995}
!13096 = !DILocalVariable(name: "dev", arg: 1, scope: !13093, file: !6402, line: 83, type: !1960)
!13097 = !DILocation(line: 83, column: 59, scope: !13093)
!13098 = !DILocalVariable(name: "dma_addr", arg: 2, scope: !13093, file: !6402, line: 84, type: !1995)
!13099 = !DILocation(line: 84, column: 14, scope: !13093)
!13100 = !DILocation(line: 86, column: 1, scope: !13093)
!13101 = distinct !DISubprogram(name: "debugfs_create_dir", scope: !6451, file: !6451, line: 196, type: !13102, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!13102 = !DISubroutineType(types: !13103)
!13103 = !{!1173, !1024, !1173}
!13104 = !DILocalVariable(name: "name", arg: 1, scope: !13101, file: !6451, line: 196, type: !1024)
!13105 = !DILocation(line: 196, column: 61, scope: !13101)
!13106 = !DILocalVariable(name: "parent", arg: 2, scope: !13101, file: !6451, line: 197, type: !1173)
!13107 = !DILocation(line: 197, column: 22, scope: !13101)
!13108 = !DILocation(line: 199, column: 9, scope: !13101)
!13109 = !DILocation(line: 199, column: 2, scope: !13101)
!13110 = distinct !DISubprogram(name: "IS_ERR_OR_NULL", scope: !9149, file: !9149, line: 39, type: !9150, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!13111 = !DILocalVariable(name: "ptr", arg: 1, scope: !13110, file: !9149, line: 39, type: !4027)
!13112 = !DILocation(line: 39, column: 68, scope: !13110)
!13113 = !DILocation(line: 41, column: 9, scope: !13110)
!13114 = !DILocation(line: 41, column: 24, scope: !13110)
!13115 = !DILocation(line: 41, column: 27, scope: !13110)
!13116 = !DILocation(line: 41, column: 2, scope: !13110)
!13117 = distinct !DISubprogram(name: "debugfs_create_file", scope: !6451, file: !6451, line: 175, type: !13118, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!13118 = !DISubroutineType(types: !13119)
!13119 = !{!1173, !1024, !1116, !1173, !890, !4731}
!13120 = !DILocalVariable(name: "name", arg: 1, scope: !13117, file: !6451, line: 175, type: !1024)
!13121 = !DILocation(line: 175, column: 62, scope: !13117)
!13122 = !DILocalVariable(name: "mode", arg: 2, scope: !13117, file: !6451, line: 175, type: !1116)
!13123 = !DILocation(line: 175, column: 76, scope: !13117)
!13124 = !DILocalVariable(name: "parent", arg: 3, scope: !13117, file: !6451, line: 176, type: !1173)
!13125 = !DILocation(line: 176, column: 21, scope: !13117)
!13126 = !DILocalVariable(name: "data", arg: 4, scope: !13117, file: !6451, line: 176, type: !890)
!13127 = !DILocation(line: 176, column: 35, scope: !13117)
!13128 = !DILocalVariable(name: "fops", arg: 5, scope: !13117, file: !6451, line: 177, type: !4731)
!13129 = !DILocation(line: 177, column: 36, scope: !13117)
!13130 = !DILocation(line: 179, column: 9, scope: !13117)
!13131 = !DILocation(line: 179, column: 2, scope: !13117)
!13132 = distinct !DISubprogram(name: "ERR_PTR", scope: !9149, file: !9149, line: 24, type: !13133, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!13133 = !DISubroutineType(types: !13134)
!13134 = !{!890, !175}
!13135 = !DILocalVariable(name: "error", arg: 1, scope: !13132, file: !9149, line: 24, type: !175)
!13136 = !DILocation(line: 24, column: 48, scope: !13132)
!13137 = !DILocation(line: 26, column: 18, scope: !13132)
!13138 = !DILocation(line: 26, column: 9, scope: !13132)
!13139 = !DILocation(line: 26, column: 2, scope: !13132)
!13140 = distinct !DISubprogram(name: "mtip_hw_read_flags", scope: !3, file: !3, line: 2334, type: !4742, scopeLine: 2336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!13141 = !DILocation(line: 138, column: 29, scope: !10826, inlinedAt: !13142)
!13142 = distinct !DILocation(line: 199, column: 6, scope: !10832, inlinedAt: !13143)
!13143 = distinct !DILocation(line: 2358, column: 9, scope: !13140)
!13144 = !DILocation(line: 138, column: 42, scope: !10826, inlinedAt: !13142)
!13145 = !DILocation(line: 138, column: 54, scope: !10826, inlinedAt: !13142)
!13146 = !DILocation(line: 140, column: 6, scope: !10826, inlinedAt: !13142)
!13147 = !DILocation(line: 150, column: 6, scope: !10848, inlinedAt: !13142)
!13148 = !DILocation(line: 197, column: 27, scope: !10834, inlinedAt: !13143)
!13149 = !DILocation(line: 197, column: 43, scope: !10834, inlinedAt: !13143)
!13150 = !DILocation(line: 197, column: 63, scope: !10834, inlinedAt: !13143)
!13151 = !DILocalVariable(name: "f", arg: 1, scope: !13140, file: !3, line: 2334, type: !1151)
!13152 = !DILocation(line: 2334, column: 48, scope: !13140)
!13153 = !DILocalVariable(name: "ubuf", arg: 2, scope: !13140, file: !3, line: 2334, type: !1076)
!13154 = !DILocation(line: 2334, column: 64, scope: !13140)
!13155 = !DILocalVariable(name: "len", arg: 3, scope: !13140, file: !3, line: 2335, type: !1121)
!13156 = !DILocation(line: 2335, column: 14, scope: !13140)
!13157 = !DILocalVariable(name: "offset", arg: 4, scope: !13140, file: !3, line: 2335, type: !1535)
!13158 = !DILocation(line: 2335, column: 27, scope: !13140)
!13159 = !DILocalVariable(name: "dd", scope: !13140, file: !3, line: 2337, type: !945)
!13160 = !DILocation(line: 2337, column: 22, scope: !13140)
!13161 = !DILocation(line: 2337, column: 50, scope: !13140)
!13162 = !DILocation(line: 2337, column: 53, scope: !13140)
!13163 = !DILocation(line: 2337, column: 28, scope: !13140)
!13164 = !DILocalVariable(name: "buf", scope: !13140, file: !3, line: 2338, type: !1076)
!13165 = !DILocation(line: 2338, column: 8, scope: !13140)
!13166 = !DILocalVariable(name: "size", scope: !13140, file: !3, line: 2339, type: !443)
!13167 = !DILocation(line: 2339, column: 6, scope: !13140)
!13168 = !DILocation(line: 2339, column: 14, scope: !13140)
!13169 = !DILocation(line: 2339, column: 13, scope: !13140)
!13170 = !DILocalVariable(name: "rv", scope: !13140, file: !3, line: 2340, type: !443)
!13171 = !DILocation(line: 2340, column: 6, scope: !13140)
!13172 = !DILocation(line: 2342, column: 7, scope: !13173)
!13173 = distinct !DILexicalBlock(scope: !13140, file: !3, line: 2342, column: 6)
!13174 = !DILocation(line: 2342, column: 11, scope: !13173)
!13175 = !DILocation(line: 2342, column: 14, scope: !13173)
!13176 = !DILocation(line: 2342, column: 6, scope: !13140)
!13177 = !DILocation(line: 2343, column: 3, scope: !13173)
!13178 = !DILocation(line: 2345, column: 8, scope: !13140)
!13179 = !DILocation(line: 2345, column: 6, scope: !13140)
!13180 = !DILocation(line: 2346, column: 7, scope: !13181)
!13181 = distinct !DILexicalBlock(scope: !13140, file: !3, line: 2346, column: 6)
!13182 = !DILocation(line: 2346, column: 6, scope: !13140)
!13183 = !DILocation(line: 2347, column: 3, scope: !13184)
!13184 = distinct !DILexicalBlock(scope: !13181, file: !3, line: 2346, column: 12)
!13185 = !DILocation(line: 2349, column: 3, scope: !13184)
!13186 = !DILocation(line: 2352, column: 19, scope: !13140)
!13187 = !DILocation(line: 2352, column: 23, scope: !13140)
!13188 = !DILocation(line: 2353, column: 8, scope: !13140)
!13189 = !DILocation(line: 2353, column: 12, scope: !13140)
!13190 = !DILocation(line: 2353, column: 18, scope: !13140)
!13191 = !DILocation(line: 2352, column: 10, scope: !13140)
!13192 = !DILocation(line: 2352, column: 7, scope: !13140)
!13193 = !DILocation(line: 2354, column: 19, scope: !13140)
!13194 = !DILocation(line: 2354, column: 23, scope: !13140)
!13195 = !DILocation(line: 2355, column: 8, scope: !13140)
!13196 = !DILocation(line: 2355, column: 12, scope: !13140)
!13197 = !DILocation(line: 2354, column: 10, scope: !13140)
!13198 = !DILocation(line: 2354, column: 7, scope: !13140)
!13199 = !DILocation(line: 2357, column: 12, scope: !13140)
!13200 = !DILocation(line: 2357, column: 20, scope: !13140)
!13201 = !DILocation(line: 2357, column: 17, scope: !13140)
!13202 = !DILocation(line: 2357, column: 26, scope: !13140)
!13203 = !DILocation(line: 2357, column: 33, scope: !13140)
!13204 = !DILocation(line: 2357, column: 3, scope: !13140)
!13205 = !DILocation(line: 2357, column: 10, scope: !13140)
!13206 = !DILocation(line: 2358, column: 22, scope: !13140)
!13207 = !DILocation(line: 2358, column: 28, scope: !13140)
!13208 = !DILocation(line: 2358, column: 34, scope: !13140)
!13209 = !DILocation(line: 2358, column: 33, scope: !13140)
!13210 = !DILocation(line: 199, column: 6, scope: !10832, inlinedAt: !13143)
!13211 = !DILocation(line: 141, column: 6, scope: !10946, inlinedAt: !13142)
!13212 = !DILocation(line: 0, scope: !10946, inlinedAt: !13142)
!13213 = !DILocation(line: 141, column: 6, scope: !10826, inlinedAt: !13142)
!13214 = !DILocation(line: 142, column: 29, scope: !10950, inlinedAt: !13142)
!13215 = !DILocation(line: 142, column: 8, scope: !10950, inlinedAt: !13142)
!13216 = !DILocation(line: 142, column: 7, scope: !10951, inlinedAt: !13142)
!13217 = !DILocation(line: 143, column: 18, scope: !10950, inlinedAt: !13142)
!13218 = !DILocation(line: 143, column: 22, scope: !10950, inlinedAt: !13142)
!13219 = !DILocation(line: 143, column: 4, scope: !10950, inlinedAt: !13142)
!13220 = !DILocation(line: 144, column: 12, scope: !10958, inlinedAt: !13142)
!13221 = !DILocation(line: 144, column: 12, scope: !10950, inlinedAt: !13142)
!13222 = !DILocation(line: 145, column: 4, scope: !10958, inlinedAt: !13142)
!13223 = !DILocation(line: 147, column: 4, scope: !10958, inlinedAt: !13142)
!13224 = !DILocation(line: 148, column: 3, scope: !10951, inlinedAt: !13142)
!13225 = !DILocation(line: 150, column: 6, scope: !10964, inlinedAt: !13142)
!13226 = !DILocation(line: 150, column: 6, scope: !10966, inlinedAt: !13142)
!13227 = !DILocation(line: 150, column: 6, scope: !10970, inlinedAt: !13142)
!13228 = !DILocation(line: 150, column: 6, scope: !10967, inlinedAt: !13142)
!13229 = !DILocation(line: 150, column: 6, scope: !10849, inlinedAt: !13142)
!13230 = !DILocation(line: 150, column: 6, scope: !10826, inlinedAt: !13142)
!13231 = !DILocation(line: 151, column: 3, scope: !10849, inlinedAt: !13142)
!13232 = !DILocation(line: 152, column: 20, scope: !10826, inlinedAt: !13142)
!13233 = !DILocation(line: 152, column: 26, scope: !10826, inlinedAt: !13142)
!13234 = !DILocation(line: 152, column: 33, scope: !10826, inlinedAt: !13142)
!13235 = !DILocation(line: 152, column: 2, scope: !10826, inlinedAt: !13142)
!13236 = !DILocation(line: 153, column: 2, scope: !10826, inlinedAt: !13142)
!13237 = !DILocation(line: 154, column: 1, scope: !10826, inlinedAt: !13142)
!13238 = !DILocation(line: 199, column: 6, scope: !10834, inlinedAt: !13143)
!13239 = !DILocation(line: 200, column: 21, scope: !10832, inlinedAt: !13143)
!13240 = !DILocation(line: 200, column: 25, scope: !10832, inlinedAt: !13143)
!13241 = !DILocation(line: 200, column: 31, scope: !10832, inlinedAt: !13143)
!13242 = !DILocation(line: 200, column: 7, scope: !10832, inlinedAt: !13143)
!13243 = !DILocation(line: 200, column: 5, scope: !10832, inlinedAt: !13143)
!13244 = !DILocation(line: 200, column: 3, scope: !10832, inlinedAt: !13143)
!13245 = !DILocation(line: 201, column: 9, scope: !10834, inlinedAt: !13143)
!13246 = !DILocation(line: 2358, column: 9, scope: !13140)
!13247 = !DILocation(line: 2358, column: 7, scope: !13140)
!13248 = !DILocation(line: 2359, column: 6, scope: !13249)
!13249 = distinct !DILexicalBlock(scope: !13140, file: !3, line: 2359, column: 6)
!13250 = !DILocation(line: 2359, column: 6, scope: !13140)
!13251 = !DILocation(line: 2360, column: 6, scope: !13249)
!13252 = !DILocation(line: 2360, column: 3, scope: !13249)
!13253 = !DILocation(line: 2362, column: 8, scope: !13140)
!13254 = !DILocation(line: 2362, column: 2, scope: !13140)
!13255 = !DILocation(line: 2363, column: 9, scope: !13140)
!13256 = !DILocation(line: 2363, column: 14, scope: !13140)
!13257 = !DILocation(line: 2363, column: 20, scope: !13140)
!13258 = !DILocation(line: 2363, column: 19, scope: !13140)
!13259 = !DILocation(line: 2363, column: 2, scope: !13140)
!13260 = !DILocation(line: 2364, column: 1, scope: !13140)
!13261 = distinct !DISubprogram(name: "kzalloc", scope: !232, file: !232, line: 662, type: !13262, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!13262 = !DISubroutineType(types: !13263)
!13263 = !{!890, !1121, !888}
!13264 = !DILocalVariable(name: "s", arg: 1, scope: !13265, file: !232, line: 445, type: !2010)
!13265 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !232, file: !232, line: 445, type: !13266, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!13266 = !DISubroutineType(types: !13267)
!13267 = !{!890, !2010, !888, !1121}
!13268 = !DILocation(line: 445, column: 72, scope: !13265, inlinedAt: !13269)
!13269 = distinct !DILocation(line: 552, column: 10, scope: !13270, inlinedAt: !13273)
!13270 = distinct !DILexicalBlock(scope: !13271, file: !232, line: 540, column: 34)
!13271 = distinct !DILexicalBlock(scope: !13272, file: !232, line: 540, column: 6)
!13272 = distinct !DISubprogram(name: "kmalloc", scope: !232, file: !232, line: 538, type: !13262, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!13273 = distinct !DILocation(line: 664, column: 9, scope: !13261)
!13274 = !DILocalVariable(name: "flags", arg: 2, scope: !13265, file: !232, line: 446, type: !888)
!13275 = !DILocation(line: 446, column: 9, scope: !13265, inlinedAt: !13269)
!13276 = !DILocalVariable(name: "size", arg: 3, scope: !13265, file: !232, line: 446, type: !1121)
!13277 = !DILocation(line: 446, column: 23, scope: !13265, inlinedAt: !13269)
!13278 = !DILocalVariable(name: "ret", scope: !13265, file: !232, line: 448, type: !890)
!13279 = !DILocation(line: 448, column: 8, scope: !13265, inlinedAt: !13269)
!13280 = !DILocation(line: 318, column: 67, scope: !7375, inlinedAt: !13281)
!13281 = distinct !DILocation(line: 553, column: 20, scope: !13270, inlinedAt: !13273)
!13282 = !DILocation(line: 346, column: 58, scope: !7381, inlinedAt: !13283)
!13283 = distinct !DILocation(line: 547, column: 11, scope: !13270, inlinedAt: !13273)
!13284 = !DILocalVariable(name: "size", arg: 1, scope: !13285, file: !232, line: 472, type: !1121)
!13285 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !232, file: !232, line: 472, type: !13286, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!13286 = !DISubroutineType(types: !13287)
!13287 = !{!890, !1121, !888, !7}
!13288 = !DILocation(line: 472, column: 28, scope: !13285, inlinedAt: !13289)
!13289 = distinct !DILocation(line: 481, column: 9, scope: !13290, inlinedAt: !13291)
!13290 = distinct !DISubprogram(name: "kmalloc_large", scope: !232, file: !232, line: 478, type: !13262, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!13291 = distinct !DILocation(line: 545, column: 11, scope: !13292, inlinedAt: !13273)
!13292 = distinct !DILexicalBlock(scope: !13270, file: !232, line: 544, column: 7)
!13293 = !DILocalVariable(name: "flags", arg: 2, scope: !13285, file: !232, line: 472, type: !888)
!13294 = !DILocation(line: 472, column: 40, scope: !13285, inlinedAt: !13289)
!13295 = !DILocalVariable(name: "order", arg: 3, scope: !13285, file: !232, line: 472, type: !7)
!13296 = !DILocation(line: 472, column: 60, scope: !13285, inlinedAt: !13289)
!13297 = !DILocalVariable(name: "size", arg: 1, scope: !13290, file: !232, line: 478, type: !1121)
!13298 = !DILocation(line: 478, column: 51, scope: !13290, inlinedAt: !13291)
!13299 = !DILocalVariable(name: "flags", arg: 2, scope: !13290, file: !232, line: 478, type: !888)
!13300 = !DILocation(line: 478, column: 63, scope: !13290, inlinedAt: !13291)
!13301 = !DILocalVariable(name: "order", scope: !13290, file: !232, line: 480, type: !7)
!13302 = !DILocation(line: 480, column: 15, scope: !13290, inlinedAt: !13291)
!13303 = !DILocalVariable(name: "size", arg: 1, scope: !13272, file: !232, line: 538, type: !1121)
!13304 = !DILocation(line: 538, column: 45, scope: !13272, inlinedAt: !13273)
!13305 = !DILocalVariable(name: "flags", arg: 2, scope: !13272, file: !232, line: 538, type: !888)
!13306 = !DILocation(line: 538, column: 57, scope: !13272, inlinedAt: !13273)
!13307 = !DILocalVariable(name: "index", scope: !13270, file: !232, line: 542, type: !7)
!13308 = !DILocation(line: 542, column: 16, scope: !13270, inlinedAt: !13273)
!13309 = !DILocalVariable(name: "size", arg: 1, scope: !13261, file: !232, line: 662, type: !1121)
!13310 = !DILocation(line: 662, column: 36, scope: !13261)
!13311 = !DILocalVariable(name: "flags", arg: 2, scope: !13261, file: !232, line: 662, type: !888)
!13312 = !DILocation(line: 662, column: 48, scope: !13261)
!13313 = !DILocation(line: 664, column: 17, scope: !13261)
!13314 = !DILocation(line: 664, column: 23, scope: !13261)
!13315 = !DILocation(line: 664, column: 29, scope: !13261)
!13316 = !DILocation(line: 540, column: 27, scope: !13271, inlinedAt: !13273)
!13317 = !DILocation(line: 540, column: 6, scope: !13271, inlinedAt: !13273)
!13318 = !DILocation(line: 540, column: 6, scope: !13272, inlinedAt: !13273)
!13319 = !DILocation(line: 544, column: 7, scope: !13292, inlinedAt: !13273)
!13320 = !DILocation(line: 544, column: 12, scope: !13292, inlinedAt: !13273)
!13321 = !DILocation(line: 544, column: 7, scope: !13270, inlinedAt: !13273)
!13322 = !DILocation(line: 545, column: 25, scope: !13292, inlinedAt: !13273)
!13323 = !DILocation(line: 545, column: 31, scope: !13292, inlinedAt: !13273)
!13324 = !DILocation(line: 480, column: 33, scope: !13290, inlinedAt: !13291)
!13325 = !DILocation(line: 480, column: 23, scope: !13290, inlinedAt: !13291)
!13326 = !DILocation(line: 481, column: 29, scope: !13290, inlinedAt: !13291)
!13327 = !DILocation(line: 481, column: 35, scope: !13290, inlinedAt: !13291)
!13328 = !DILocation(line: 481, column: 42, scope: !13290, inlinedAt: !13291)
!13329 = !DILocation(line: 474, column: 23, scope: !13285, inlinedAt: !13289)
!13330 = !DILocation(line: 474, column: 29, scope: !13285, inlinedAt: !13289)
!13331 = !DILocation(line: 474, column: 36, scope: !13285, inlinedAt: !13289)
!13332 = !DILocation(line: 474, column: 9, scope: !13285, inlinedAt: !13289)
!13333 = !DILocation(line: 545, column: 4, scope: !13292, inlinedAt: !13273)
!13334 = !DILocation(line: 547, column: 25, scope: !13270, inlinedAt: !13273)
!13335 = !DILocation(line: 348, column: 7, scope: !7412, inlinedAt: !13283)
!13336 = !DILocation(line: 348, column: 6, scope: !7381, inlinedAt: !13283)
!13337 = !DILocation(line: 349, column: 3, scope: !7412, inlinedAt: !13283)
!13338 = !DILocation(line: 351, column: 6, scope: !7416, inlinedAt: !13283)
!13339 = !DILocation(line: 351, column: 11, scope: !7416, inlinedAt: !13283)
!13340 = !DILocation(line: 351, column: 6, scope: !7381, inlinedAt: !13283)
!13341 = !DILocation(line: 352, column: 3, scope: !7416, inlinedAt: !13283)
!13342 = !DILocation(line: 354, column: 32, scope: !7421, inlinedAt: !13283)
!13343 = !DILocation(line: 354, column: 37, scope: !7421, inlinedAt: !13283)
!13344 = !DILocation(line: 354, column: 42, scope: !7421, inlinedAt: !13283)
!13345 = !DILocation(line: 354, column: 45, scope: !7421, inlinedAt: !13283)
!13346 = !DILocation(line: 354, column: 50, scope: !7421, inlinedAt: !13283)
!13347 = !DILocation(line: 354, column: 6, scope: !7381, inlinedAt: !13283)
!13348 = !DILocation(line: 355, column: 3, scope: !7421, inlinedAt: !13283)
!13349 = !DILocation(line: 356, column: 32, scope: !7429, inlinedAt: !13283)
!13350 = !DILocation(line: 356, column: 37, scope: !7429, inlinedAt: !13283)
!13351 = !DILocation(line: 356, column: 43, scope: !7429, inlinedAt: !13283)
!13352 = !DILocation(line: 356, column: 46, scope: !7429, inlinedAt: !13283)
!13353 = !DILocation(line: 356, column: 51, scope: !7429, inlinedAt: !13283)
!13354 = !DILocation(line: 356, column: 6, scope: !7381, inlinedAt: !13283)
!13355 = !DILocation(line: 357, column: 3, scope: !7429, inlinedAt: !13283)
!13356 = !DILocation(line: 358, column: 6, scope: !7437, inlinedAt: !13283)
!13357 = !DILocation(line: 358, column: 11, scope: !7437, inlinedAt: !13283)
!13358 = !DILocation(line: 358, column: 6, scope: !7381, inlinedAt: !13283)
!13359 = !DILocation(line: 358, column: 26, scope: !7437, inlinedAt: !13283)
!13360 = !DILocation(line: 359, column: 6, scope: !7442, inlinedAt: !13283)
!13361 = !DILocation(line: 359, column: 11, scope: !7442, inlinedAt: !13283)
!13362 = !DILocation(line: 359, column: 6, scope: !7381, inlinedAt: !13283)
!13363 = !DILocation(line: 359, column: 26, scope: !7442, inlinedAt: !13283)
!13364 = !DILocation(line: 360, column: 6, scope: !7447, inlinedAt: !13283)
!13365 = !DILocation(line: 360, column: 11, scope: !7447, inlinedAt: !13283)
!13366 = !DILocation(line: 360, column: 6, scope: !7381, inlinedAt: !13283)
!13367 = !DILocation(line: 360, column: 26, scope: !7447, inlinedAt: !13283)
!13368 = !DILocation(line: 361, column: 6, scope: !7452, inlinedAt: !13283)
!13369 = !DILocation(line: 361, column: 11, scope: !7452, inlinedAt: !13283)
!13370 = !DILocation(line: 361, column: 6, scope: !7381, inlinedAt: !13283)
!13371 = !DILocation(line: 361, column: 26, scope: !7452, inlinedAt: !13283)
!13372 = !DILocation(line: 362, column: 6, scope: !7457, inlinedAt: !13283)
!13373 = !DILocation(line: 362, column: 11, scope: !7457, inlinedAt: !13283)
!13374 = !DILocation(line: 362, column: 6, scope: !7381, inlinedAt: !13283)
!13375 = !DILocation(line: 362, column: 26, scope: !7457, inlinedAt: !13283)
!13376 = !DILocation(line: 363, column: 6, scope: !7462, inlinedAt: !13283)
!13377 = !DILocation(line: 363, column: 11, scope: !7462, inlinedAt: !13283)
!13378 = !DILocation(line: 363, column: 6, scope: !7381, inlinedAt: !13283)
!13379 = !DILocation(line: 363, column: 26, scope: !7462, inlinedAt: !13283)
!13380 = !DILocation(line: 364, column: 6, scope: !7467, inlinedAt: !13283)
!13381 = !DILocation(line: 364, column: 11, scope: !7467, inlinedAt: !13283)
!13382 = !DILocation(line: 364, column: 6, scope: !7381, inlinedAt: !13283)
!13383 = !DILocation(line: 364, column: 26, scope: !7467, inlinedAt: !13283)
!13384 = !DILocation(line: 365, column: 6, scope: !7472, inlinedAt: !13283)
!13385 = !DILocation(line: 365, column: 11, scope: !7472, inlinedAt: !13283)
!13386 = !DILocation(line: 365, column: 6, scope: !7381, inlinedAt: !13283)
!13387 = !DILocation(line: 365, column: 26, scope: !7472, inlinedAt: !13283)
!13388 = !DILocation(line: 366, column: 6, scope: !7477, inlinedAt: !13283)
!13389 = !DILocation(line: 366, column: 11, scope: !7477, inlinedAt: !13283)
!13390 = !DILocation(line: 366, column: 6, scope: !7381, inlinedAt: !13283)
!13391 = !DILocation(line: 366, column: 26, scope: !7477, inlinedAt: !13283)
!13392 = !DILocation(line: 367, column: 6, scope: !7482, inlinedAt: !13283)
!13393 = !DILocation(line: 367, column: 11, scope: !7482, inlinedAt: !13283)
!13394 = !DILocation(line: 367, column: 6, scope: !7381, inlinedAt: !13283)
!13395 = !DILocation(line: 367, column: 26, scope: !7482, inlinedAt: !13283)
!13396 = !DILocation(line: 368, column: 6, scope: !7487, inlinedAt: !13283)
!13397 = !DILocation(line: 368, column: 11, scope: !7487, inlinedAt: !13283)
!13398 = !DILocation(line: 368, column: 6, scope: !7381, inlinedAt: !13283)
!13399 = !DILocation(line: 368, column: 26, scope: !7487, inlinedAt: !13283)
!13400 = !DILocation(line: 369, column: 6, scope: !7492, inlinedAt: !13283)
!13401 = !DILocation(line: 369, column: 11, scope: !7492, inlinedAt: !13283)
!13402 = !DILocation(line: 369, column: 6, scope: !7381, inlinedAt: !13283)
!13403 = !DILocation(line: 369, column: 26, scope: !7492, inlinedAt: !13283)
!13404 = !DILocation(line: 370, column: 6, scope: !7497, inlinedAt: !13283)
!13405 = !DILocation(line: 370, column: 11, scope: !7497, inlinedAt: !13283)
!13406 = !DILocation(line: 370, column: 6, scope: !7381, inlinedAt: !13283)
!13407 = !DILocation(line: 370, column: 26, scope: !7497, inlinedAt: !13283)
!13408 = !DILocation(line: 371, column: 6, scope: !7502, inlinedAt: !13283)
!13409 = !DILocation(line: 371, column: 11, scope: !7502, inlinedAt: !13283)
!13410 = !DILocation(line: 371, column: 6, scope: !7381, inlinedAt: !13283)
!13411 = !DILocation(line: 371, column: 26, scope: !7502, inlinedAt: !13283)
!13412 = !DILocation(line: 372, column: 6, scope: !7507, inlinedAt: !13283)
!13413 = !DILocation(line: 372, column: 11, scope: !7507, inlinedAt: !13283)
!13414 = !DILocation(line: 372, column: 6, scope: !7381, inlinedAt: !13283)
!13415 = !DILocation(line: 372, column: 26, scope: !7507, inlinedAt: !13283)
!13416 = !DILocation(line: 373, column: 6, scope: !7512, inlinedAt: !13283)
!13417 = !DILocation(line: 373, column: 11, scope: !7512, inlinedAt: !13283)
!13418 = !DILocation(line: 373, column: 6, scope: !7381, inlinedAt: !13283)
!13419 = !DILocation(line: 373, column: 26, scope: !7512, inlinedAt: !13283)
!13420 = !DILocation(line: 374, column: 6, scope: !7517, inlinedAt: !13283)
!13421 = !DILocation(line: 374, column: 11, scope: !7517, inlinedAt: !13283)
!13422 = !DILocation(line: 374, column: 6, scope: !7381, inlinedAt: !13283)
!13423 = !DILocation(line: 374, column: 26, scope: !7517, inlinedAt: !13283)
!13424 = !DILocation(line: 375, column: 6, scope: !7522, inlinedAt: !13283)
!13425 = !DILocation(line: 375, column: 11, scope: !7522, inlinedAt: !13283)
!13426 = !DILocation(line: 375, column: 6, scope: !7381, inlinedAt: !13283)
!13427 = !DILocation(line: 375, column: 27, scope: !7522, inlinedAt: !13283)
!13428 = !DILocation(line: 376, column: 6, scope: !7527, inlinedAt: !13283)
!13429 = !DILocation(line: 376, column: 11, scope: !7527, inlinedAt: !13283)
!13430 = !DILocation(line: 376, column: 6, scope: !7381, inlinedAt: !13283)
!13431 = !DILocation(line: 376, column: 32, scope: !7527, inlinedAt: !13283)
!13432 = !DILocation(line: 377, column: 6, scope: !7532, inlinedAt: !13283)
!13433 = !DILocation(line: 377, column: 11, scope: !7532, inlinedAt: !13283)
!13434 = !DILocation(line: 377, column: 6, scope: !7381, inlinedAt: !13283)
!13435 = !DILocation(line: 377, column: 32, scope: !7532, inlinedAt: !13283)
!13436 = !DILocation(line: 378, column: 6, scope: !7537, inlinedAt: !13283)
!13437 = !DILocation(line: 378, column: 11, scope: !7537, inlinedAt: !13283)
!13438 = !DILocation(line: 378, column: 6, scope: !7381, inlinedAt: !13283)
!13439 = !DILocation(line: 378, column: 32, scope: !7537, inlinedAt: !13283)
!13440 = !DILocation(line: 379, column: 6, scope: !7542, inlinedAt: !13283)
!13441 = !DILocation(line: 379, column: 11, scope: !7542, inlinedAt: !13283)
!13442 = !DILocation(line: 379, column: 6, scope: !7381, inlinedAt: !13283)
!13443 = !DILocation(line: 379, column: 33, scope: !7542, inlinedAt: !13283)
!13444 = !DILocation(line: 380, column: 6, scope: !7547, inlinedAt: !13283)
!13445 = !DILocation(line: 380, column: 11, scope: !7547, inlinedAt: !13283)
!13446 = !DILocation(line: 380, column: 6, scope: !7381, inlinedAt: !13283)
!13447 = !DILocation(line: 380, column: 33, scope: !7547, inlinedAt: !13283)
!13448 = !DILocation(line: 381, column: 6, scope: !7552, inlinedAt: !13283)
!13449 = !DILocation(line: 381, column: 11, scope: !7552, inlinedAt: !13283)
!13450 = !DILocation(line: 381, column: 6, scope: !7381, inlinedAt: !13283)
!13451 = !DILocation(line: 381, column: 33, scope: !7552, inlinedAt: !13283)
!13452 = !DILocation(line: 382, column: 2, scope: !7557, inlinedAt: !13283)
!13453 = !DILocation(line: 382, column: 2, scope: !7561, inlinedAt: !13283)
!13454 = !DILocation(line: 382, column: 2, scope: !7562, inlinedAt: !13283)
!13455 = !DILocation(line: 386, column: 1, scope: !7381, inlinedAt: !13283)
!13456 = !DILocation(line: 547, column: 9, scope: !13270, inlinedAt: !13273)
!13457 = !DILocation(line: 549, column: 8, scope: !13458, inlinedAt: !13273)
!13458 = distinct !DILexicalBlock(scope: !13270, file: !232, line: 549, column: 7)
!13459 = !DILocation(line: 549, column: 7, scope: !13270, inlinedAt: !13273)
!13460 = !DILocation(line: 550, column: 4, scope: !13458, inlinedAt: !13273)
!13461 = !DILocation(line: 553, column: 33, scope: !13270, inlinedAt: !13273)
!13462 = !DILocation(line: 325, column: 6, scope: !7572, inlinedAt: !13281)
!13463 = !DILocation(line: 325, column: 6, scope: !7375, inlinedAt: !13281)
!13464 = !DILocation(line: 326, column: 3, scope: !7572, inlinedAt: !13281)
!13465 = !DILocation(line: 332, column: 9, scope: !7375, inlinedAt: !13281)
!13466 = !DILocation(line: 332, column: 15, scope: !7375, inlinedAt: !13281)
!13467 = !DILocation(line: 332, column: 2, scope: !7375, inlinedAt: !13281)
!13468 = !DILocation(line: 336, column: 1, scope: !7375, inlinedAt: !13281)
!13469 = !DILocation(line: 553, column: 5, scope: !13270, inlinedAt: !13273)
!13470 = !DILocation(line: 553, column: 41, scope: !13270, inlinedAt: !13273)
!13471 = !DILocation(line: 554, column: 5, scope: !13270, inlinedAt: !13273)
!13472 = !DILocation(line: 554, column: 12, scope: !13270, inlinedAt: !13273)
!13473 = !DILocation(line: 448, column: 31, scope: !13265, inlinedAt: !13269)
!13474 = !DILocation(line: 448, column: 34, scope: !13265, inlinedAt: !13269)
!13475 = !DILocation(line: 448, column: 14, scope: !13265, inlinedAt: !13269)
!13476 = !DILocation(line: 450, column: 22, scope: !13265, inlinedAt: !13269)
!13477 = !DILocation(line: 450, column: 25, scope: !13265, inlinedAt: !13269)
!13478 = !DILocation(line: 450, column: 30, scope: !13265, inlinedAt: !13269)
!13479 = !DILocation(line: 450, column: 36, scope: !13265, inlinedAt: !13269)
!13480 = !DILocation(line: 450, column: 8, scope: !13265, inlinedAt: !13269)
!13481 = !DILocation(line: 450, column: 6, scope: !13265, inlinedAt: !13269)
!13482 = !DILocation(line: 451, column: 9, scope: !13265, inlinedAt: !13269)
!13483 = !DILocation(line: 552, column: 3, scope: !13270, inlinedAt: !13273)
!13484 = !DILocation(line: 557, column: 19, scope: !13272, inlinedAt: !13273)
!13485 = !DILocation(line: 557, column: 25, scope: !13272, inlinedAt: !13273)
!13486 = !DILocation(line: 557, column: 9, scope: !13272, inlinedAt: !13273)
!13487 = !DILocation(line: 557, column: 2, scope: !13272, inlinedAt: !13273)
!13488 = !DILocation(line: 558, column: 1, scope: !13272, inlinedAt: !13273)
!13489 = !DILocation(line: 664, column: 2, scope: !13261)
!13490 = distinct !DISubprogram(name: "get_order", scope: !13491, file: !13491, line: 29, type: !13492, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!13491 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!13492 = !DISubroutineType(types: !13493)
!13493 = !{!443, !898}
!13494 = !DILocalVariable(name: "x", arg: 1, scope: !13495, file: !8236, line: 366, type: !908)
!13495 = distinct !DISubprogram(name: "fls64", scope: !8236, file: !8236, line: 366, type: !13496, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!13496 = !DISubroutineType(types: !13497)
!13497 = !{!443, !908}
!13498 = !DILocation(line: 366, column: 40, scope: !13495, inlinedAt: !13499)
!13499 = distinct !DILocation(line: 46, column: 9, scope: !13490)
!13500 = !DILocalVariable(name: "bitpos", scope: !13495, file: !8236, line: 368, type: !443)
!13501 = !DILocation(line: 368, column: 6, scope: !13495, inlinedAt: !13499)
!13502 = !DILocalVariable(name: "size", arg: 1, scope: !13490, file: !13491, line: 29, type: !898)
!13503 = !DILocation(line: 29, column: 63, scope: !13490)
!13504 = !DILocation(line: 31, column: 27, scope: !13505)
!13505 = distinct !DILexicalBlock(scope: !13490, file: !13491, line: 31, column: 6)
!13506 = !DILocation(line: 31, column: 6, scope: !13505)
!13507 = !DILocation(line: 31, column: 6, scope: !13490)
!13508 = !DILocation(line: 32, column: 8, scope: !13509)
!13509 = distinct !DILexicalBlock(scope: !13510, file: !13491, line: 32, column: 7)
!13510 = distinct !DILexicalBlock(scope: !13505, file: !13491, line: 31, column: 34)
!13511 = !DILocation(line: 32, column: 7, scope: !13510)
!13512 = !DILocation(line: 33, column: 4, scope: !13509)
!13513 = !DILocation(line: 35, column: 7, scope: !13514)
!13514 = distinct !DILexicalBlock(scope: !13510, file: !13491, line: 35, column: 7)
!13515 = !DILocation(line: 35, column: 12, scope: !13514)
!13516 = !DILocation(line: 35, column: 7, scope: !13510)
!13517 = !DILocation(line: 36, column: 4, scope: !13514)
!13518 = !DILocation(line: 38, column: 10, scope: !13510)
!13519 = !DILocation(line: 38, column: 28, scope: !13510)
!13520 = !DILocation(line: 38, column: 41, scope: !13510)
!13521 = !DILocation(line: 38, column: 3, scope: !13510)
!13522 = !DILocation(line: 41, column: 6, scope: !13490)
!13523 = !DILocation(line: 42, column: 7, scope: !13490)
!13524 = !DILocation(line: 46, column: 15, scope: !13490)
!13525 = !DILocation(line: 374, column: 2, scope: !13495, inlinedAt: !13499)
!13526 = !DILocation(line: 376, column: 14, scope: !13495, inlinedAt: !13499)
!13527 = !{i32 857094}
!13528 = !DILocation(line: 377, column: 9, scope: !13495, inlinedAt: !13499)
!13529 = !DILocation(line: 377, column: 16, scope: !13495, inlinedAt: !13499)
!13530 = !DILocation(line: 46, column: 2, scope: !13490)
!13531 = !DILocation(line: 48, column: 1, scope: !13490)
!13532 = distinct !DISubprogram(name: "__ilog2_u64", scope: !13533, file: !13533, line: 30, type: !13534, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!13533 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!13534 = !DISubroutineType(types: !13535)
!13535 = !{!443, !987}
!13536 = !DILocation(line: 366, column: 40, scope: !13495, inlinedAt: !13537)
!13537 = distinct !DILocation(line: 32, column: 9, scope: !13532)
!13538 = !DILocation(line: 368, column: 6, scope: !13495, inlinedAt: !13537)
!13539 = !DILocalVariable(name: "n", arg: 1, scope: !13532, file: !13533, line: 30, type: !987)
!13540 = !DILocation(line: 30, column: 21, scope: !13532)
!13541 = !DILocation(line: 32, column: 15, scope: !13532)
!13542 = !DILocation(line: 374, column: 2, scope: !13495, inlinedAt: !13537)
!13543 = !DILocation(line: 376, column: 14, scope: !13495, inlinedAt: !13537)
!13544 = !DILocation(line: 377, column: 9, scope: !13495, inlinedAt: !13537)
!13545 = !DILocation(line: 377, column: 16, scope: !13495, inlinedAt: !13537)
!13546 = !DILocation(line: 32, column: 18, scope: !13532)
!13547 = !DILocation(line: 32, column: 2, scope: !13532)
!13548 = distinct !DISubprogram(name: "mtip_hw_read_registers", scope: !3, file: !3, line: 2267, type: !4742, scopeLine: 2269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!13549 = !DILocation(line: 138, column: 29, scope: !10826, inlinedAt: !13550)
!13550 = distinct !DILocation(line: 199, column: 6, scope: !10832, inlinedAt: !13551)
!13551 = distinct !DILocation(line: 2326, column: 9, scope: !13548)
!13552 = !DILocation(line: 138, column: 42, scope: !10826, inlinedAt: !13550)
!13553 = !DILocation(line: 138, column: 54, scope: !10826, inlinedAt: !13550)
!13554 = !DILocation(line: 140, column: 6, scope: !10826, inlinedAt: !13550)
!13555 = !DILocation(line: 150, column: 6, scope: !10848, inlinedAt: !13550)
!13556 = !DILocation(line: 197, column: 27, scope: !10834, inlinedAt: !13551)
!13557 = !DILocation(line: 197, column: 43, scope: !10834, inlinedAt: !13551)
!13558 = !DILocation(line: 197, column: 63, scope: !10834, inlinedAt: !13551)
!13559 = !DILocalVariable(name: "f", arg: 1, scope: !13548, file: !3, line: 2267, type: !1151)
!13560 = !DILocation(line: 2267, column: 52, scope: !13548)
!13561 = !DILocalVariable(name: "ubuf", arg: 2, scope: !13548, file: !3, line: 2267, type: !1076)
!13562 = !DILocation(line: 2267, column: 68, scope: !13548)
!13563 = !DILocalVariable(name: "len", arg: 3, scope: !13548, file: !3, line: 2268, type: !1121)
!13564 = !DILocation(line: 2268, column: 14, scope: !13548)
!13565 = !DILocalVariable(name: "offset", arg: 4, scope: !13548, file: !3, line: 2268, type: !1535)
!13566 = !DILocation(line: 2268, column: 27, scope: !13548)
!13567 = !DILocalVariable(name: "dd", scope: !13548, file: !3, line: 2270, type: !945)
!13568 = !DILocation(line: 2270, column: 22, scope: !13548)
!13569 = !DILocation(line: 2270, column: 50, scope: !13548)
!13570 = !DILocation(line: 2270, column: 53, scope: !13548)
!13571 = !DILocation(line: 2270, column: 28, scope: !13548)
!13572 = !DILocalVariable(name: "buf", scope: !13548, file: !3, line: 2271, type: !1076)
!13573 = !DILocation(line: 2271, column: 8, scope: !13548)
!13574 = !DILocalVariable(name: "group_allocated", scope: !13548, file: !3, line: 2272, type: !938)
!13575 = !DILocation(line: 2272, column: 6, scope: !13548)
!13576 = !DILocalVariable(name: "size", scope: !13548, file: !3, line: 2273, type: !443)
!13577 = !DILocation(line: 2273, column: 6, scope: !13548)
!13578 = !DILocation(line: 2273, column: 14, scope: !13548)
!13579 = !DILocation(line: 2273, column: 13, scope: !13548)
!13580 = !DILocalVariable(name: "n", scope: !13548, file: !3, line: 2274, type: !443)
!13581 = !DILocation(line: 2274, column: 6, scope: !13548)
!13582 = !DILocalVariable(name: "rv", scope: !13548, file: !3, line: 2274, type: !443)
!13583 = !DILocation(line: 2274, column: 9, scope: !13548)
!13584 = !DILocation(line: 2276, column: 7, scope: !13585)
!13585 = distinct !DILexicalBlock(scope: !13548, file: !3, line: 2276, column: 6)
!13586 = !DILocation(line: 2276, column: 11, scope: !13585)
!13587 = !DILocation(line: 2276, column: 14, scope: !13585)
!13588 = !DILocation(line: 2276, column: 6, scope: !13548)
!13589 = !DILocation(line: 2277, column: 3, scope: !13585)
!13590 = !DILocation(line: 2279, column: 8, scope: !13548)
!13591 = !DILocation(line: 2279, column: 6, scope: !13548)
!13592 = !DILocation(line: 2280, column: 7, scope: !13593)
!13593 = distinct !DILexicalBlock(scope: !13548, file: !3, line: 2280, column: 6)
!13594 = !DILocation(line: 2280, column: 6, scope: !13548)
!13595 = !DILocation(line: 2281, column: 3, scope: !13596)
!13596 = distinct !DILexicalBlock(scope: !13593, file: !3, line: 2280, column: 12)
!13597 = !DILocation(line: 2283, column: 3, scope: !13596)
!13598 = !DILocation(line: 2286, column: 19, scope: !13548)
!13599 = !DILocation(line: 2286, column: 23, scope: !13548)
!13600 = !DILocation(line: 2286, column: 10, scope: !13548)
!13601 = !DILocation(line: 2286, column: 7, scope: !13548)
!13602 = !DILocation(line: 2288, column: 11, scope: !13603)
!13603 = distinct !DILexicalBlock(scope: !13548, file: !3, line: 2288, column: 2)
!13604 = !DILocation(line: 2288, column: 15, scope: !13603)
!13605 = !DILocation(line: 2288, column: 26, scope: !13603)
!13606 = !DILocation(line: 2288, column: 9, scope: !13603)
!13607 = !DILocation(line: 2288, column: 7, scope: !13603)
!13608 = !DILocation(line: 2288, column: 30, scope: !13609)
!13609 = distinct !DILexicalBlock(scope: !13603, file: !3, line: 2288, column: 2)
!13610 = !DILocation(line: 2288, column: 32, scope: !13609)
!13611 = !DILocation(line: 2288, column: 2, scope: !13603)
!13612 = !DILocation(line: 2289, column: 20, scope: !13609)
!13613 = !DILocation(line: 2289, column: 24, scope: !13609)
!13614 = !DILocation(line: 2290, column: 13, scope: !13609)
!13615 = !DILocation(line: 2290, column: 17, scope: !13609)
!13616 = !DILocation(line: 2290, column: 23, scope: !13609)
!13617 = !DILocation(line: 2290, column: 32, scope: !13609)
!13618 = !DILocation(line: 2290, column: 7, scope: !13609)
!13619 = !DILocation(line: 2289, column: 11, scope: !13609)
!13620 = !DILocation(line: 2289, column: 8, scope: !13609)
!13621 = !DILocation(line: 2289, column: 3, scope: !13609)
!13622 = !DILocation(line: 2288, column: 39, scope: !13609)
!13623 = !DILocation(line: 2288, column: 2, scope: !13609)
!13624 = distinct !{!13624, !13611, !13625}
!13625 = !DILocation(line: 2290, column: 35, scope: !13603)
!13626 = !DILocation(line: 2292, column: 19, scope: !13548)
!13627 = !DILocation(line: 2292, column: 23, scope: !13548)
!13628 = !DILocation(line: 2292, column: 10, scope: !13548)
!13629 = !DILocation(line: 2292, column: 7, scope: !13548)
!13630 = !DILocation(line: 2293, column: 19, scope: !13548)
!13631 = !DILocation(line: 2293, column: 23, scope: !13548)
!13632 = !DILocation(line: 2293, column: 10, scope: !13548)
!13633 = !DILocation(line: 2293, column: 7, scope: !13548)
!13634 = !DILocation(line: 2295, column: 11, scope: !13635)
!13635 = distinct !DILexicalBlock(scope: !13548, file: !3, line: 2295, column: 2)
!13636 = !DILocation(line: 2295, column: 15, scope: !13635)
!13637 = !DILocation(line: 2295, column: 26, scope: !13635)
!13638 = !DILocation(line: 2295, column: 9, scope: !13635)
!13639 = !DILocation(line: 2295, column: 7, scope: !13635)
!13640 = !DILocation(line: 2295, column: 30, scope: !13641)
!13641 = distinct !DILexicalBlock(scope: !13635, file: !3, line: 2295, column: 2)
!13642 = !DILocation(line: 2295, column: 32, scope: !13641)
!13643 = !DILocation(line: 2295, column: 2, scope: !13635)
!13644 = !DILocation(line: 2296, column: 20, scope: !13641)
!13645 = !DILocation(line: 2296, column: 24, scope: !13641)
!13646 = !DILocation(line: 2297, column: 12, scope: !13641)
!13647 = !DILocation(line: 2297, column: 16, scope: !13641)
!13648 = !DILocation(line: 2297, column: 22, scope: !13641)
!13649 = !DILocation(line: 2297, column: 32, scope: !13641)
!13650 = !DILocation(line: 2297, column: 6, scope: !13641)
!13651 = !DILocation(line: 2296, column: 11, scope: !13641)
!13652 = !DILocation(line: 2296, column: 8, scope: !13641)
!13653 = !DILocation(line: 2296, column: 3, scope: !13641)
!13654 = !DILocation(line: 2295, column: 39, scope: !13641)
!13655 = !DILocation(line: 2295, column: 2, scope: !13641)
!13656 = distinct !{!13656, !13643, !13657}
!13657 = !DILocation(line: 2297, column: 35, scope: !13635)
!13658 = !DILocation(line: 2299, column: 19, scope: !13548)
!13659 = !DILocation(line: 2299, column: 23, scope: !13548)
!13660 = !DILocation(line: 2299, column: 10, scope: !13548)
!13661 = !DILocation(line: 2299, column: 7, scope: !13548)
!13662 = !DILocation(line: 2300, column: 19, scope: !13548)
!13663 = !DILocation(line: 2300, column: 23, scope: !13548)
!13664 = !DILocation(line: 2300, column: 10, scope: !13548)
!13665 = !DILocation(line: 2300, column: 7, scope: !13548)
!13666 = !DILocation(line: 2302, column: 11, scope: !13667)
!13667 = distinct !DILexicalBlock(scope: !13548, file: !3, line: 2302, column: 2)
!13668 = !DILocation(line: 2302, column: 15, scope: !13667)
!13669 = !DILocation(line: 2302, column: 26, scope: !13667)
!13670 = !DILocation(line: 2302, column: 9, scope: !13667)
!13671 = !DILocation(line: 2302, column: 7, scope: !13667)
!13672 = !DILocation(line: 2302, column: 30, scope: !13673)
!13673 = distinct !DILexicalBlock(scope: !13667, file: !3, line: 2302, column: 2)
!13674 = !DILocation(line: 2302, column: 32, scope: !13673)
!13675 = !DILocation(line: 2302, column: 2, scope: !13667)
!13676 = !DILocation(line: 2303, column: 20, scope: !13673)
!13677 = !DILocation(line: 2303, column: 24, scope: !13673)
!13678 = !DILocation(line: 2304, column: 11, scope: !13673)
!13679 = !DILocation(line: 2304, column: 15, scope: !13673)
!13680 = !DILocation(line: 2304, column: 21, scope: !13673)
!13681 = !DILocation(line: 2304, column: 31, scope: !13673)
!13682 = !DILocation(line: 2304, column: 5, scope: !13673)
!13683 = !DILocation(line: 2303, column: 11, scope: !13673)
!13684 = !DILocation(line: 2303, column: 8, scope: !13673)
!13685 = !DILocation(line: 2303, column: 3, scope: !13673)
!13686 = !DILocation(line: 2302, column: 39, scope: !13673)
!13687 = !DILocation(line: 2302, column: 2, scope: !13673)
!13688 = distinct !{!13688, !13675, !13689}
!13689 = !DILocation(line: 2304, column: 34, scope: !13667)
!13690 = !DILocation(line: 2306, column: 19, scope: !13548)
!13691 = !DILocation(line: 2306, column: 23, scope: !13548)
!13692 = !DILocation(line: 2306, column: 10, scope: !13548)
!13693 = !DILocation(line: 2306, column: 7, scope: !13548)
!13694 = !DILocation(line: 2307, column: 19, scope: !13548)
!13695 = !DILocation(line: 2307, column: 23, scope: !13548)
!13696 = !DILocation(line: 2308, column: 11, scope: !13548)
!13697 = !DILocation(line: 2308, column: 15, scope: !13548)
!13698 = !DILocation(line: 2308, column: 21, scope: !13548)
!13699 = !DILocation(line: 2308, column: 26, scope: !13548)
!13700 = !DILocation(line: 2308, column: 5, scope: !13548)
!13701 = !DILocation(line: 2307, column: 10, scope: !13548)
!13702 = !DILocation(line: 2307, column: 7, scope: !13548)
!13703 = !DILocation(line: 2309, column: 19, scope: !13548)
!13704 = !DILocation(line: 2309, column: 23, scope: !13548)
!13705 = !DILocation(line: 2310, column: 11, scope: !13548)
!13706 = !DILocation(line: 2310, column: 15, scope: !13548)
!13707 = !DILocation(line: 2310, column: 20, scope: !13548)
!13708 = !DILocation(line: 2310, column: 5, scope: !13548)
!13709 = !DILocation(line: 2309, column: 10, scope: !13548)
!13710 = !DILocation(line: 2309, column: 7, scope: !13548)
!13711 = !DILocation(line: 2311, column: 19, scope: !13548)
!13712 = !DILocation(line: 2311, column: 23, scope: !13548)
!13713 = !DILocation(line: 2311, column: 10, scope: !13548)
!13714 = !DILocation(line: 2311, column: 7, scope: !13548)
!13715 = !DILocation(line: 2313, column: 19, scope: !13548)
!13716 = !DILocation(line: 2313, column: 23, scope: !13548)
!13717 = !DILocation(line: 2313, column: 10, scope: !13548)
!13718 = !DILocation(line: 2313, column: 7, scope: !13548)
!13719 = !DILocation(line: 2315, column: 11, scope: !13720)
!13720 = distinct !DILexicalBlock(scope: !13548, file: !3, line: 2315, column: 2)
!13721 = !DILocation(line: 2315, column: 15, scope: !13720)
!13722 = !DILocation(line: 2315, column: 26, scope: !13720)
!13723 = !DILocation(line: 2315, column: 9, scope: !13720)
!13724 = !DILocation(line: 2315, column: 7, scope: !13720)
!13725 = !DILocation(line: 2315, column: 30, scope: !13726)
!13726 = distinct !DILexicalBlock(scope: !13720, file: !3, line: 2315, column: 2)
!13727 = !DILocation(line: 2315, column: 32, scope: !13726)
!13728 = !DILocation(line: 2315, column: 2, scope: !13720)
!13729 = !DILocation(line: 2318, column: 5, scope: !13730)
!13730 = distinct !DILexicalBlock(scope: !13731, file: !3, line: 2316, column: 7)
!13731 = distinct !DILexicalBlock(scope: !13726, file: !3, line: 2315, column: 43)
!13732 = !DILocation(line: 2318, column: 9, scope: !13730)
!13733 = !DILocation(line: 2318, column: 15, scope: !13730)
!13734 = !DILocation(line: 2318, column: 29, scope: !13730)
!13735 = !DILocation(line: 2318, column: 30, scope: !13730)
!13736 = !DILocation(line: 2318, column: 42, scope: !13730)
!13737 = !DILocation(line: 2318, column: 43, scope: !13730)
!13738 = !DILocation(line: 2318, column: 40, scope: !13730)
!13739 = !DILocation(line: 2318, column: 34, scope: !13730)
!13740 = !DILocation(line: 2317, column: 20, scope: !13730)
!13741 = !DILocation(line: 2321, column: 20, scope: !13731)
!13742 = !DILocation(line: 2321, column: 24, scope: !13731)
!13743 = !DILocation(line: 2321, column: 40, scope: !13731)
!13744 = !DILocation(line: 2321, column: 11, scope: !13731)
!13745 = !DILocation(line: 2321, column: 8, scope: !13731)
!13746 = !DILocation(line: 2322, column: 2, scope: !13731)
!13747 = !DILocation(line: 2315, column: 39, scope: !13726)
!13748 = !DILocation(line: 2315, column: 2, scope: !13726)
!13749 = distinct !{!13749, !13728, !13750}
!13750 = !DILocation(line: 2322, column: 2, scope: !13720)
!13751 = !DILocation(line: 2323, column: 19, scope: !13548)
!13752 = !DILocation(line: 2323, column: 23, scope: !13548)
!13753 = !DILocation(line: 2323, column: 10, scope: !13548)
!13754 = !DILocation(line: 2323, column: 7, scope: !13548)
!13755 = !DILocation(line: 2325, column: 12, scope: !13548)
!13756 = !DILocation(line: 2325, column: 20, scope: !13548)
!13757 = !DILocation(line: 2325, column: 17, scope: !13548)
!13758 = !DILocation(line: 2325, column: 26, scope: !13548)
!13759 = !DILocation(line: 2325, column: 33, scope: !13548)
!13760 = !DILocation(line: 2325, column: 3, scope: !13548)
!13761 = !DILocation(line: 2325, column: 10, scope: !13548)
!13762 = !DILocation(line: 2326, column: 22, scope: !13548)
!13763 = !DILocation(line: 2326, column: 28, scope: !13548)
!13764 = !DILocation(line: 2326, column: 34, scope: !13548)
!13765 = !DILocation(line: 2326, column: 33, scope: !13548)
!13766 = !DILocation(line: 199, column: 6, scope: !10832, inlinedAt: !13551)
!13767 = !DILocation(line: 141, column: 6, scope: !10946, inlinedAt: !13550)
!13768 = !DILocation(line: 0, scope: !10946, inlinedAt: !13550)
!13769 = !DILocation(line: 141, column: 6, scope: !10826, inlinedAt: !13550)
!13770 = !DILocation(line: 142, column: 29, scope: !10950, inlinedAt: !13550)
!13771 = !DILocation(line: 142, column: 8, scope: !10950, inlinedAt: !13550)
!13772 = !DILocation(line: 142, column: 7, scope: !10951, inlinedAt: !13550)
!13773 = !DILocation(line: 143, column: 18, scope: !10950, inlinedAt: !13550)
!13774 = !DILocation(line: 143, column: 22, scope: !10950, inlinedAt: !13550)
!13775 = !DILocation(line: 143, column: 4, scope: !10950, inlinedAt: !13550)
!13776 = !DILocation(line: 144, column: 12, scope: !10958, inlinedAt: !13550)
!13777 = !DILocation(line: 144, column: 12, scope: !10950, inlinedAt: !13550)
!13778 = !DILocation(line: 145, column: 4, scope: !10958, inlinedAt: !13550)
!13779 = !DILocation(line: 147, column: 4, scope: !10958, inlinedAt: !13550)
!13780 = !DILocation(line: 148, column: 3, scope: !10951, inlinedAt: !13550)
!13781 = !DILocation(line: 150, column: 6, scope: !10964, inlinedAt: !13550)
!13782 = !DILocation(line: 150, column: 6, scope: !10966, inlinedAt: !13550)
!13783 = !DILocation(line: 150, column: 6, scope: !10970, inlinedAt: !13550)
!13784 = !DILocation(line: 150, column: 6, scope: !10967, inlinedAt: !13550)
!13785 = !DILocation(line: 150, column: 6, scope: !10849, inlinedAt: !13550)
!13786 = !DILocation(line: 150, column: 6, scope: !10826, inlinedAt: !13550)
!13787 = !DILocation(line: 151, column: 3, scope: !10849, inlinedAt: !13550)
!13788 = !DILocation(line: 152, column: 20, scope: !10826, inlinedAt: !13550)
!13789 = !DILocation(line: 152, column: 26, scope: !10826, inlinedAt: !13550)
!13790 = !DILocation(line: 152, column: 33, scope: !10826, inlinedAt: !13550)
!13791 = !DILocation(line: 152, column: 2, scope: !10826, inlinedAt: !13550)
!13792 = !DILocation(line: 153, column: 2, scope: !10826, inlinedAt: !13550)
!13793 = !DILocation(line: 154, column: 1, scope: !10826, inlinedAt: !13550)
!13794 = !DILocation(line: 199, column: 6, scope: !10834, inlinedAt: !13551)
!13795 = !DILocation(line: 200, column: 21, scope: !10832, inlinedAt: !13551)
!13796 = !DILocation(line: 200, column: 25, scope: !10832, inlinedAt: !13551)
!13797 = !DILocation(line: 200, column: 31, scope: !10832, inlinedAt: !13551)
!13798 = !DILocation(line: 200, column: 7, scope: !10832, inlinedAt: !13551)
!13799 = !DILocation(line: 200, column: 5, scope: !10832, inlinedAt: !13551)
!13800 = !DILocation(line: 200, column: 3, scope: !10832, inlinedAt: !13551)
!13801 = !DILocation(line: 201, column: 9, scope: !10834, inlinedAt: !13551)
!13802 = !DILocation(line: 2326, column: 9, scope: !13548)
!13803 = !DILocation(line: 2326, column: 7, scope: !13548)
!13804 = !DILocation(line: 2327, column: 6, scope: !13805)
!13805 = distinct !DILexicalBlock(scope: !13548, file: !3, line: 2327, column: 6)
!13806 = !DILocation(line: 2327, column: 6, scope: !13548)
!13807 = !DILocation(line: 2328, column: 6, scope: !13805)
!13808 = !DILocation(line: 2328, column: 3, scope: !13805)
!13809 = !DILocation(line: 2330, column: 8, scope: !13548)
!13810 = !DILocation(line: 2330, column: 2, scope: !13548)
!13811 = !DILocation(line: 2331, column: 9, scope: !13548)
!13812 = !DILocation(line: 2331, column: 14, scope: !13548)
!13813 = !DILocation(line: 2331, column: 20, scope: !13548)
!13814 = !DILocation(line: 2331, column: 19, scope: !13548)
!13815 = !DILocation(line: 2331, column: 2, scope: !13548)
!13816 = !DILocation(line: 2332, column: 1, scope: !13548)
!13817 = distinct !DISubprogram(name: "mtip_queue_rq", scope: !3, file: !3, line: 3484, type: !3576, scopeLine: 3486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!13818 = !DILocalVariable(name: "hctx", arg: 1, scope: !13817, file: !3, line: 3484, type: !3269)
!13819 = !DILocation(line: 3484, column: 57, scope: !13817)
!13820 = !DILocalVariable(name: "bd", arg: 2, scope: !13817, file: !3, line: 3485, type: !3578)
!13821 = !DILocation(line: 3485, column: 37, scope: !13817)
!13822 = !DILocalVariable(name: "dd", scope: !13817, file: !3, line: 3487, type: !945)
!13823 = !DILocation(line: 3487, column: 22, scope: !13817)
!13824 = !DILocation(line: 3487, column: 27, scope: !13817)
!13825 = !DILocation(line: 3487, column: 33, scope: !13817)
!13826 = !DILocation(line: 3487, column: 40, scope: !13817)
!13827 = !DILocalVariable(name: "rq", scope: !13817, file: !3, line: 3488, type: !3261)
!13828 = !DILocation(line: 3488, column: 18, scope: !13817)
!13829 = !DILocation(line: 3488, column: 23, scope: !13817)
!13830 = !DILocation(line: 3488, column: 27, scope: !13817)
!13831 = !DILocalVariable(name: "cmd", scope: !13817, file: !3, line: 3489, type: !8412)
!13832 = !DILocation(line: 3489, column: 19, scope: !13817)
!13833 = !DILocation(line: 3489, column: 42, scope: !13817)
!13834 = !DILocation(line: 3489, column: 25, scope: !13817)
!13835 = !DILocation(line: 3491, column: 28, scope: !13836)
!13836 = distinct !DILexicalBlock(scope: !13817, file: !3, line: 3491, column: 6)
!13837 = !DILocation(line: 3491, column: 6, scope: !13836)
!13838 = !DILocation(line: 3491, column: 6, scope: !13817)
!13839 = !DILocation(line: 3492, column: 34, scope: !13836)
!13840 = !DILocation(line: 3492, column: 40, scope: !13836)
!13841 = !DILocation(line: 3492, column: 10, scope: !13836)
!13842 = !DILocation(line: 3492, column: 3, scope: !13836)
!13843 = !DILocation(line: 3494, column: 6, scope: !13844)
!13844 = distinct !DILexicalBlock(scope: !13817, file: !3, line: 3494, column: 6)
!13845 = !DILocation(line: 3494, column: 6, scope: !13817)
!13846 = !DILocation(line: 3495, column: 3, scope: !13844)
!13847 = !DILocation(line: 3497, column: 19, scope: !13848)
!13848 = distinct !DILexicalBlock(scope: !13817, file: !3, line: 3497, column: 6)
!13849 = !DILocation(line: 3497, column: 6, scope: !13848)
!13850 = !DILocation(line: 3497, column: 23, scope: !13848)
!13851 = !DILocation(line: 3497, column: 37, scope: !13848)
!13852 = !DILocation(line: 3497, column: 41, scope: !13848)
!13853 = !DILocation(line: 3497, column: 26, scope: !13848)
!13854 = !DILocation(line: 3497, column: 6, scope: !13817)
!13855 = !DILocation(line: 3498, column: 3, scope: !13848)
!13856 = !DILocation(line: 3500, column: 23, scope: !13817)
!13857 = !DILocation(line: 3500, column: 2, scope: !13817)
!13858 = !DILocation(line: 3502, column: 20, scope: !13817)
!13859 = !DILocation(line: 3502, column: 24, scope: !13817)
!13860 = !DILocation(line: 3502, column: 28, scope: !13817)
!13861 = !DILocation(line: 3502, column: 33, scope: !13817)
!13862 = !DILocation(line: 3502, column: 2, scope: !13817)
!13863 = !DILocation(line: 3503, column: 2, scope: !13817)
!13864 = !DILocation(line: 3504, column: 1, scope: !13817)
!13865 = distinct !DISubprogram(name: "mtip_cmd_timeout", scope: !3, file: !3, line: 3534, type: !3595, scopeLine: 3536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!13866 = !DILocalVariable(name: "req", arg: 1, scope: !13865, file: !3, line: 3534, type: !3261)
!13867 = !DILocation(line: 3534, column: 66, scope: !13865)
!13868 = !DILocalVariable(name: "reserved", arg: 2, scope: !13865, file: !3, line: 3535, type: !1011)
!13869 = !DILocation(line: 3535, column: 14, scope: !13865)
!13870 = !DILocalVariable(name: "dd", scope: !13865, file: !3, line: 3537, type: !945)
!13871 = !DILocation(line: 3537, column: 22, scope: !13865)
!13872 = !DILocation(line: 3537, column: 27, scope: !13865)
!13873 = !DILocation(line: 3537, column: 32, scope: !13865)
!13874 = !DILocation(line: 3537, column: 35, scope: !13865)
!13875 = !DILocation(line: 3539, column: 6, scope: !13876)
!13876 = distinct !DILexicalBlock(scope: !13865, file: !3, line: 3539, column: 6)
!13877 = !DILocation(line: 3539, column: 6, scope: !13865)
!13878 = !DILocalVariable(name: "cmd", scope: !13879, file: !3, line: 3540, type: !8412)
!13879 = distinct !DILexicalBlock(scope: !13876, file: !3, line: 3539, column: 16)
!13880 = !DILocation(line: 3540, column: 20, scope: !13879)
!13881 = !DILocation(line: 3540, column: 43, scope: !13879)
!13882 = !DILocation(line: 3540, column: 26, scope: !13879)
!13883 = !DILocation(line: 3542, column: 3, scope: !13879)
!13884 = !DILocation(line: 3542, column: 8, scope: !13879)
!13885 = !DILocation(line: 3542, column: 15, scope: !13879)
!13886 = !DILocation(line: 3543, column: 27, scope: !13879)
!13887 = !DILocation(line: 3543, column: 3, scope: !13879)
!13888 = !DILocation(line: 3544, column: 3, scope: !13879)
!13889 = !DILocation(line: 3547, column: 15, scope: !13890)
!13890 = distinct !DILexicalBlock(scope: !13865, file: !3, line: 3547, column: 6)
!13891 = !DILocation(line: 3547, column: 20, scope: !13890)
!13892 = !DILocation(line: 3547, column: 25, scope: !13890)
!13893 = !DILocation(line: 3547, column: 29, scope: !13890)
!13894 = !DILocation(line: 3547, column: 35, scope: !13890)
!13895 = !DILocation(line: 3547, column: 6, scope: !13890)
!13896 = !DILocation(line: 3547, column: 6, scope: !13865)
!13897 = !DILocation(line: 3548, column: 3, scope: !13890)
!13898 = !DILocation(line: 3550, column: 47, scope: !13899)
!13899 = distinct !DILexicalBlock(scope: !13865, file: !3, line: 3550, column: 6)
!13900 = !DILocation(line: 3550, column: 51, scope: !13899)
!13901 = !DILocation(line: 3550, column: 57, scope: !13899)
!13902 = !DILocation(line: 3550, column: 6, scope: !13899)
!13903 = !DILocation(line: 3550, column: 6, scope: !13865)
!13904 = !DILocation(line: 3551, column: 3, scope: !13899)
!13905 = !DILocation(line: 3553, column: 2, scope: !13865)
!13906 = !DILabel(scope: !13865, name: "exit_handler", file: !3, line: 3554)
!13907 = !DILocation(line: 3554, column: 1, scope: !13865)
!13908 = !DILocation(line: 3555, column: 2, scope: !13865)
!13909 = !DILocation(line: 3556, column: 1, scope: !13865)
!13910 = distinct !DISubprogram(name: "mtip_softirq_done_fn", scope: !3, file: !3, line: 2585, type: !3501, scopeLine: 2586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!13911 = !DILocalVariable(name: "v", arg: 1, scope: !13912, file: !6968, line: 93, type: !8365)
!13912 = distinct !DISubprogram(name: "arch_atomic_inc", scope: !6968, file: !6968, line: 93, type: !13913, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!13913 = !DISubroutineType(types: !13914)
!13914 = !{null, !8365}
!13915 = !DILocation(line: 93, column: 55, scope: !13912, inlinedAt: !13916)
!13916 = distinct !DILocation(line: 241, column: 2, scope: !13917, inlinedAt: !13918)
!13917 = distinct !DISubprogram(name: "atomic_inc", scope: !6976, file: !6976, line: 238, type: !13913, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!13918 = distinct !DILocation(line: 2595, column: 3, scope: !13919)
!13919 = distinct !DILexicalBlock(scope: !13910, file: !3, line: 2594, column: 6)
!13920 = !DILocation(line: 99, column: 79, scope: !8390, inlinedAt: !13921)
!13921 = distinct !DILocation(line: 240, column: 2, scope: !13917, inlinedAt: !13918)
!13922 = !DILocation(line: 99, column: 89, scope: !8390, inlinedAt: !13921)
!13923 = !DILocalVariable(name: "v", arg: 1, scope: !13917, file: !6976, line: 238, type: !8365)
!13924 = !DILocation(line: 238, column: 22, scope: !13917, inlinedAt: !13918)
!13925 = !DILocalVariable(name: "rq", arg: 1, scope: !13910, file: !3, line: 2585, type: !3261)
!13926 = !DILocation(line: 2585, column: 50, scope: !13910)
!13927 = !DILocalVariable(name: "cmd", scope: !13910, file: !3, line: 2587, type: !8412)
!13928 = !DILocation(line: 2587, column: 19, scope: !13910)
!13929 = !DILocation(line: 2587, column: 42, scope: !13910)
!13930 = !DILocation(line: 2587, column: 25, scope: !13910)
!13931 = !DILocalVariable(name: "dd", scope: !13910, file: !3, line: 2588, type: !945)
!13932 = !DILocation(line: 2588, column: 22, scope: !13910)
!13933 = !DILocation(line: 2588, column: 27, scope: !13910)
!13934 = !DILocation(line: 2588, column: 31, scope: !13910)
!13935 = !DILocation(line: 2588, column: 34, scope: !13910)
!13936 = !DILocation(line: 2591, column: 2, scope: !13910)
!13937 = !DILocation(line: 2594, column: 6, scope: !13919)
!13938 = !DILocation(line: 2594, column: 6, scope: !13910)
!13939 = !DILocation(line: 2595, column: 15, scope: !13919)
!13940 = !DILocation(line: 2595, column: 19, scope: !13919)
!13941 = !DILocation(line: 2595, column: 25, scope: !13919)
!13942 = !DILocation(line: 240, column: 31, scope: !13917, inlinedAt: !13918)
!13943 = !DILocation(line: 101, column: 20, scope: !8390, inlinedAt: !13921)
!13944 = !DILocation(line: 101, column: 23, scope: !8390, inlinedAt: !13921)
!13945 = !DILocation(line: 101, column: 2, scope: !8390, inlinedAt: !13921)
!13946 = !DILocation(line: 102, column: 2, scope: !8390, inlinedAt: !13921)
!13947 = !DILocation(line: 241, column: 18, scope: !13917, inlinedAt: !13918)
!13948 = !DILocation(line: 96, column: 16, scope: !13912, inlinedAt: !13916)
!13949 = !DILocation(line: 96, column: 19, scope: !13912, inlinedAt: !13916)
!13950 = !DILocation(line: 95, column: 2, scope: !13912, inlinedAt: !13916)
!13951 = !{i32 -2146972062}
!13952 = !DILocation(line: 2595, column: 3, scope: !13919)
!13953 = !DILocation(line: 2597, column: 21, scope: !13910)
!13954 = !DILocation(line: 2597, column: 25, scope: !13910)
!13955 = !DILocation(line: 2597, column: 30, scope: !13910)
!13956 = !DILocation(line: 2597, column: 2, scope: !13910)
!13957 = !DILocation(line: 2598, column: 1, scope: !13910)
!13958 = distinct !DISubprogram(name: "mtip_init_cmd", scope: !3, file: !3, line: 3519, type: !3609, scopeLine: 3521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!13959 = !DILocalVariable(name: "set", arg: 1, scope: !13958, file: !3, line: 3519, type: !3611)
!13960 = !DILocation(line: 3519, column: 49, scope: !13958)
!13961 = !DILocalVariable(name: "rq", arg: 2, scope: !13958, file: !3, line: 3519, type: !3261)
!13962 = !DILocation(line: 3519, column: 70, scope: !13958)
!13963 = !DILocalVariable(name: "hctx_idx", arg: 3, scope: !13958, file: !3, line: 3520, type: !7)
!13964 = !DILocation(line: 3520, column: 18, scope: !13958)
!13965 = !DILocalVariable(name: "numa_node", arg: 4, scope: !13958, file: !3, line: 3520, type: !7)
!13966 = !DILocation(line: 3520, column: 41, scope: !13958)
!13967 = !DILocalVariable(name: "dd", scope: !13958, file: !3, line: 3522, type: !945)
!13968 = !DILocation(line: 3522, column: 22, scope: !13958)
!13969 = !DILocation(line: 3522, column: 27, scope: !13958)
!13970 = !DILocation(line: 3522, column: 32, scope: !13958)
!13971 = !DILocalVariable(name: "cmd", scope: !13958, file: !3, line: 3523, type: !8412)
!13972 = !DILocation(line: 3523, column: 19, scope: !13958)
!13973 = !DILocation(line: 3523, column: 42, scope: !13958)
!13974 = !DILocation(line: 3523, column: 25, scope: !13958)
!13975 = !DILocation(line: 3525, column: 37, scope: !13958)
!13976 = !DILocation(line: 3525, column: 41, scope: !13958)
!13977 = !DILocation(line: 3525, column: 47, scope: !13958)
!13978 = !DILocation(line: 3526, column: 5, scope: !13958)
!13979 = !DILocation(line: 3526, column: 10, scope: !13958)
!13980 = !DILocation(line: 3525, column: 17, scope: !13958)
!13981 = !DILocation(line: 3525, column: 2, scope: !13958)
!13982 = !DILocation(line: 3525, column: 7, scope: !13958)
!13983 = !DILocation(line: 3525, column: 15, scope: !13958)
!13984 = !DILocation(line: 3527, column: 7, scope: !13985)
!13985 = distinct !DILexicalBlock(scope: !13958, file: !3, line: 3527, column: 6)
!13986 = !DILocation(line: 3527, column: 12, scope: !13985)
!13987 = !DILocation(line: 3527, column: 6, scope: !13958)
!13988 = !DILocation(line: 3528, column: 3, scope: !13985)
!13989 = !DILocation(line: 3530, column: 16, scope: !13958)
!13990 = !DILocation(line: 3530, column: 21, scope: !13958)
!13991 = !DILocation(line: 3530, column: 2, scope: !13958)
!13992 = !DILocation(line: 3531, column: 2, scope: !13958)
!13993 = !DILocation(line: 3532, column: 1, scope: !13958)
!13994 = distinct !DISubprogram(name: "mtip_free_cmd", scope: !3, file: !3, line: 3506, type: !3655, scopeLine: 3508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!13995 = !DILocalVariable(name: "set", arg: 1, scope: !13994, file: !3, line: 3506, type: !3611)
!13996 = !DILocation(line: 3506, column: 50, scope: !13994)
!13997 = !DILocalVariable(name: "rq", arg: 2, scope: !13994, file: !3, line: 3506, type: !3261)
!13998 = !DILocation(line: 3506, column: 71, scope: !13994)
!13999 = !DILocalVariable(name: "hctx_idx", arg: 3, scope: !13994, file: !3, line: 3507, type: !7)
!14000 = !DILocation(line: 3507, column: 19, scope: !13994)
!14001 = !DILocalVariable(name: "dd", scope: !13994, file: !3, line: 3509, type: !945)
!14002 = !DILocation(line: 3509, column: 22, scope: !13994)
!14003 = !DILocation(line: 3509, column: 27, scope: !13994)
!14004 = !DILocation(line: 3509, column: 32, scope: !13994)
!14005 = !DILocalVariable(name: "cmd", scope: !13994, file: !3, line: 3510, type: !8412)
!14006 = !DILocation(line: 3510, column: 19, scope: !13994)
!14007 = !DILocation(line: 3510, column: 42, scope: !13994)
!14008 = !DILocation(line: 3510, column: 25, scope: !13994)
!14009 = !DILocation(line: 3512, column: 7, scope: !14010)
!14010 = distinct !DILexicalBlock(scope: !13994, file: !3, line: 3512, column: 6)
!14011 = !DILocation(line: 3512, column: 12, scope: !14010)
!14012 = !DILocation(line: 3512, column: 6, scope: !13994)
!14013 = !DILocation(line: 3513, column: 3, scope: !14010)
!14014 = !DILocation(line: 3515, column: 21, scope: !13994)
!14015 = !DILocation(line: 3515, column: 25, scope: !13994)
!14016 = !DILocation(line: 3515, column: 31, scope: !13994)
!14017 = !DILocation(line: 3515, column: 54, scope: !13994)
!14018 = !DILocation(line: 3515, column: 59, scope: !13994)
!14019 = !DILocation(line: 3516, column: 6, scope: !13994)
!14020 = !DILocation(line: 3516, column: 11, scope: !13994)
!14021 = !DILocation(line: 3515, column: 2, scope: !13994)
!14022 = !DILocation(line: 3517, column: 1, scope: !13994)
!14023 = distinct !DISubprogram(name: "blk_rq_is_passthrough", scope: !71, file: !71, line: 270, type: !14024, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!14024 = !DISubroutineType(types: !14025)
!14025 = !{!1011, !3261}
!14026 = !DILocalVariable(name: "rq", arg: 1, scope: !14023, file: !71, line: 270, type: !3261)
!14027 = !DILocation(line: 270, column: 58, scope: !14023)
!14028 = !DILocation(line: 272, column: 24, scope: !14023)
!14029 = !DILocation(line: 272, column: 9, scope: !14023)
!14030 = !DILocation(line: 272, column: 28, scope: !14023)
!14031 = !DILocation(line: 272, column: 49, scope: !14023)
!14032 = !DILocation(line: 272, column: 31, scope: !14023)
!14033 = !DILocation(line: 272, column: 2, scope: !14023)
!14034 = distinct !DISubprogram(name: "mtip_issue_reserved_cmd", scope: !3, file: !3, line: 3447, type: !14035, scopeLine: 3449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!14035 = !DISubroutineType(types: !14036)
!14036 = !{!3151, !3269, !3261}
!14037 = !DILocalVariable(name: "hctx", arg: 1, scope: !14034, file: !3, line: 3447, type: !3269)
!14038 = !DILocation(line: 3447, column: 67, scope: !14034)
!14039 = !DILocalVariable(name: "rq", arg: 2, scope: !14034, file: !3, line: 3448, type: !3261)
!14040 = !DILocation(line: 3448, column: 19, scope: !14034)
!14041 = !DILocalVariable(name: "dd", scope: !14034, file: !3, line: 3450, type: !945)
!14042 = !DILocation(line: 3450, column: 22, scope: !14034)
!14043 = !DILocation(line: 3450, column: 27, scope: !14034)
!14044 = !DILocation(line: 3450, column: 33, scope: !14034)
!14045 = !DILocation(line: 3450, column: 40, scope: !14034)
!14046 = !DILocalVariable(name: "cmd", scope: !14034, file: !3, line: 3451, type: !8412)
!14047 = !DILocation(line: 3451, column: 19, scope: !14034)
!14048 = !DILocation(line: 3451, column: 42, scope: !14034)
!14049 = !DILocation(line: 3451, column: 25, scope: !14034)
!14050 = !DILocalVariable(name: "icmd", scope: !14034, file: !3, line: 3452, type: !8435)
!14051 = !DILocation(line: 3452, column: 23, scope: !14034)
!14052 = !DILocation(line: 3452, column: 30, scope: !14034)
!14053 = !DILocation(line: 3452, column: 35, scope: !14034)
!14054 = !DILocalVariable(name: "hdr", scope: !14034, file: !3, line: 3453, type: !14055)
!14055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14056, size: 64)
!14056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mtip_cmd_hdr", file: !207, line: 244, size: 256, elements: !14057)
!14057 = !{!14058, !14059, !14064, !14065, !14066}
!14058 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !14056, file: !207, line: 254, baseType: !6227, size: 32)
!14059 = !DIDerivedType(tag: DW_TAG_member, scope: !14056, file: !207, line: 256, baseType: !14060, size: 32, offset: 32)
!14060 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14056, file: !207, line: 256, size: 32, elements: !14061)
!14061 = !{!14062, !14063}
!14062 = !DIDerivedType(tag: DW_TAG_member, name: "byte_count", scope: !14060, file: !207, line: 257, baseType: !6227, size: 32)
!14063 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !14060, file: !207, line: 258, baseType: !6227, size: 32)
!14064 = !DIDerivedType(tag: DW_TAG_member, name: "ctba", scope: !14056, file: !207, line: 264, baseType: !6227, size: 32, offset: 64)
!14065 = !DIDerivedType(tag: DW_TAG_member, name: "ctbau", scope: !14056, file: !207, line: 269, baseType: !6227, size: 32, offset: 96)
!14066 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !14056, file: !207, line: 271, baseType: !14067, size: 128, offset: 128)
!14067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !938, size: 128, elements: !1909)
!14068 = !DILocation(line: 3453, column: 23, scope: !14034)
!14069 = !DILocation(line: 3454, column: 3, scope: !14034)
!14070 = !DILocation(line: 3454, column: 7, scope: !14034)
!14071 = !DILocation(line: 3454, column: 13, scope: !14034)
!14072 = !DILocation(line: 3454, column: 58, scope: !14034)
!14073 = !DILocation(line: 3454, column: 62, scope: !14034)
!14074 = !DILocation(line: 3454, column: 56, scope: !14034)
!14075 = !DILocation(line: 3454, column: 26, scope: !14034)
!14076 = !DILocalVariable(name: "command_sg", scope: !14034, file: !3, line: 3455, type: !14077)
!14077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14078, size: 64)
!14078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mtip_cmd_sg", file: !207, line: 275, size: 128, elements: !14079)
!14079 = !{!14080, !14081, !14082, !14083}
!14080 = !DIDerivedType(tag: DW_TAG_member, name: "dba", scope: !14078, file: !207, line: 281, baseType: !6227, size: 32)
!14081 = !DIDerivedType(tag: DW_TAG_member, name: "dba_upper", scope: !14078, file: !207, line: 286, baseType: !6227, size: 32, offset: 32)
!14082 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !14078, file: !207, line: 288, baseType: !6227, size: 32, offset: 64)
!14083 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !14078, file: !207, line: 295, baseType: !6227, size: 32, offset: 96)
!14084 = !DILocation(line: 3455, column: 22, scope: !14034)
!14085 = !DILocation(line: 3457, column: 27, scope: !14086)
!14086 = distinct !DILexicalBlock(scope: !14034, file: !3, line: 3457, column: 6)
!14087 = !DILocation(line: 3457, column: 31, scope: !14086)
!14088 = !DILocation(line: 3457, column: 6, scope: !14086)
!14089 = !DILocation(line: 3457, column: 6, scope: !14034)
!14090 = !DILocation(line: 3458, column: 3, scope: !14086)
!14091 = !DILocation(line: 3460, column: 14, scope: !14034)
!14092 = !DILocation(line: 3460, column: 2, scope: !14034)
!14093 = !DILocation(line: 3460, column: 7, scope: !14034)
!14094 = !DILocation(line: 3460, column: 12, scope: !14034)
!14095 = !DILocation(line: 3461, column: 37, scope: !14096)
!14096 = distinct !DILexicalBlock(scope: !14034, file: !3, line: 3461, column: 6)
!14097 = !DILocation(line: 3461, column: 41, scope: !14096)
!14098 = !DILocation(line: 3461, column: 47, scope: !14096)
!14099 = !DILocation(line: 3461, column: 6, scope: !14096)
!14100 = !DILocation(line: 3461, column: 6, scope: !14034)
!14101 = !DILocation(line: 3462, column: 16, scope: !14096)
!14102 = !DILocation(line: 3462, column: 3, scope: !14096)
!14103 = !DILocation(line: 3462, column: 8, scope: !14096)
!14104 = !DILocation(line: 3462, column: 14, scope: !14096)
!14105 = !DILocation(line: 3464, column: 14, scope: !14034)
!14106 = !DILocation(line: 3464, column: 2, scope: !14034)
!14107 = !DILocation(line: 3464, column: 7, scope: !14034)
!14108 = !DILocation(line: 3464, column: 12, scope: !14034)
!14109 = !DILocation(line: 3465, column: 6, scope: !14110)
!14110 = distinct !DILexicalBlock(scope: !14034, file: !3, line: 3465, column: 6)
!14111 = !DILocation(line: 3465, column: 12, scope: !14110)
!14112 = !DILocation(line: 3465, column: 6, scope: !14034)
!14113 = !DILocation(line: 3466, column: 16, scope: !14114)
!14114 = distinct !DILexicalBlock(scope: !14110, file: !3, line: 3465, column: 21)
!14115 = !DILocation(line: 3466, column: 21, scope: !14114)
!14116 = !DILocation(line: 3466, column: 29, scope: !14114)
!14117 = !DILocation(line: 3466, column: 14, scope: !14114)
!14118 = !DILocation(line: 3468, column: 22, scope: !14114)
!14119 = !DILocation(line: 3468, column: 3, scope: !14114)
!14120 = !DILocation(line: 3468, column: 15, scope: !14114)
!14121 = !DILocation(line: 3468, column: 20, scope: !14114)
!14122 = !DILocation(line: 3469, column: 21, scope: !14114)
!14123 = !DILocation(line: 3469, column: 3, scope: !14114)
!14124 = !DILocation(line: 3469, column: 15, scope: !14114)
!14125 = !DILocation(line: 3469, column: 19, scope: !14114)
!14126 = !DILocation(line: 3471, column: 4, scope: !14114)
!14127 = !DILocation(line: 3470, column: 3, scope: !14114)
!14128 = !DILocation(line: 3470, column: 15, scope: !14114)
!14129 = !DILocation(line: 3470, column: 25, scope: !14114)
!14130 = !DILocation(line: 3473, column: 3, scope: !14114)
!14131 = !DILocation(line: 3473, column: 8, scope: !14114)
!14132 = !DILocation(line: 3473, column: 13, scope: !14114)
!14133 = !DILocation(line: 3474, column: 2, scope: !14114)
!14134 = !DILocation(line: 3477, column: 2, scope: !14034)
!14135 = !DILocation(line: 3477, column: 7, scope: !14034)
!14136 = !DILocation(line: 3477, column: 18, scope: !14034)
!14137 = !DILocation(line: 3479, column: 23, scope: !14034)
!14138 = !DILocation(line: 3479, column: 2, scope: !14034)
!14139 = !DILocation(line: 3480, column: 29, scope: !14034)
!14140 = !DILocation(line: 3480, column: 33, scope: !14034)
!14141 = !DILocation(line: 3480, column: 39, scope: !14034)
!14142 = !DILocation(line: 3480, column: 43, scope: !14034)
!14143 = !DILocation(line: 3480, column: 2, scope: !14034)
!14144 = !DILocation(line: 3481, column: 2, scope: !14034)
!14145 = !DILocation(line: 3482, column: 1, scope: !14034)
!14146 = distinct !DISubprogram(name: "mtip_check_unal_depth", scope: !3, file: !3, line: 3423, type: !14147, scopeLine: 3425, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!14147 = !DISubroutineType(types: !14148)
!14148 = !{!1011, !3269, !3261}
!14149 = !DILocalVariable(name: "v", arg: 1, scope: !14150, file: !6968, line: 200, type: !8365)
!14150 = distinct !DISubprogram(name: "arch_atomic_try_cmpxchg", scope: !6968, file: !6968, line: 200, type: !14151, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!14151 = !DISubroutineType(types: !14152)
!14152 = !{!1011, !8365, !1502, !443}
!14153 = !DILocation(line: 200, column: 63, scope: !14150, inlinedAt: !14154)
!14154 = distinct !DILocation(line: 1176, column: 12, scope: !14155, inlinedAt: !14156)
!14155 = distinct !DISubprogram(name: "arch_atomic_dec_if_positive", scope: !8371, file: !8371, line: 1168, type: !8372, scopeLine: 1169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!14156 = distinct !DILocation(line: 829, column: 9, scope: !14157, inlinedAt: !14158)
!14157 = distinct !DISubprogram(name: "atomic_dec_if_positive", scope: !6976, file: !6976, line: 826, type: !8372, scopeLine: 827, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!14158 = distinct !DILocation(line: 3441, column: 24, scope: !14159)
!14159 = distinct !DILexicalBlock(scope: !14146, file: !3, line: 3441, column: 6)
!14160 = !DILocalVariable(name: "old", arg: 2, scope: !14150, file: !6968, line: 200, type: !1502)
!14161 = !DILocation(line: 200, column: 71, scope: !14150, inlinedAt: !14154)
!14162 = !DILocalVariable(name: "new", arg: 3, scope: !14150, file: !6968, line: 200, type: !443)
!14163 = !DILocation(line: 200, column: 80, scope: !14150, inlinedAt: !14154)
!14164 = !DILocalVariable(name: "success", scope: !14165, file: !6968, line: 202, type: !1011)
!14165 = distinct !DILexicalBlock(scope: !14150, file: !6968, line: 202, column: 9)
!14166 = !DILocation(line: 202, column: 9, scope: !14165, inlinedAt: !14154)
!14167 = !DILocalVariable(name: "_old", scope: !14165, file: !6968, line: 202, type: !1502)
!14168 = !DILocalVariable(name: "__old", scope: !14165, file: !6968, line: 202, type: !443)
!14169 = !DILocalVariable(name: "__new", scope: !14165, file: !6968, line: 202, type: !443)
!14170 = !DILocalVariable(name: "__ptr", scope: !14165, file: !6968, line: 202, type: !6228)
!14171 = !DILocation(line: 23, column: 61, scope: !6967, inlinedAt: !14172)
!14172 = distinct !DILocation(line: 1170, column: 15, scope: !14155, inlinedAt: !14156)
!14173 = !DILocalVariable(name: "v", arg: 1, scope: !14155, file: !8371, line: 1168, type: !8365)
!14174 = !DILocation(line: 1168, column: 39, scope: !14155, inlinedAt: !14156)
!14175 = !DILocalVariable(name: "dec", scope: !14155, file: !8371, line: 1170, type: !443)
!14176 = !DILocation(line: 1170, column: 6, scope: !14155, inlinedAt: !14156)
!14177 = !DILocalVariable(name: "c", scope: !14155, file: !8371, line: 1170, type: !443)
!14178 = !DILocation(line: 1170, column: 11, scope: !14155, inlinedAt: !14156)
!14179 = !DILocation(line: 99, column: 79, scope: !8390, inlinedAt: !14180)
!14180 = distinct !DILocation(line: 828, column: 2, scope: !14157, inlinedAt: !14158)
!14181 = !DILocation(line: 99, column: 89, scope: !8390, inlinedAt: !14180)
!14182 = !DILocalVariable(name: "v", arg: 1, scope: !14157, file: !6976, line: 826, type: !8365)
!14183 = !DILocation(line: 826, column: 34, scope: !14157, inlinedAt: !14158)
!14184 = !DILocalVariable(name: "hctx", arg: 1, scope: !14146, file: !3, line: 3423, type: !3269)
!14185 = !DILocation(line: 3423, column: 57, scope: !14146)
!14186 = !DILocalVariable(name: "rq", arg: 2, scope: !14146, file: !3, line: 3424, type: !3261)
!14187 = !DILocation(line: 3424, column: 23, scope: !14146)
!14188 = !DILocalVariable(name: "dd", scope: !14146, file: !3, line: 3426, type: !945)
!14189 = !DILocation(line: 3426, column: 22, scope: !14146)
!14190 = !DILocation(line: 3426, column: 27, scope: !14146)
!14191 = !DILocation(line: 3426, column: 33, scope: !14146)
!14192 = !DILocation(line: 3426, column: 40, scope: !14146)
!14193 = !DILocalVariable(name: "cmd", scope: !14146, file: !3, line: 3427, type: !8412)
!14194 = !DILocation(line: 3427, column: 19, scope: !14146)
!14195 = !DILocation(line: 3427, column: 42, scope: !14146)
!14196 = !DILocation(line: 3427, column: 25, scope: !14146)
!14197 = !DILocation(line: 3429, column: 6, scope: !14198)
!14198 = distinct !DILexicalBlock(scope: !14146, file: !3, line: 3429, column: 6)
!14199 = !DILocation(line: 3429, column: 22, scope: !14198)
!14200 = !DILocation(line: 3429, column: 30, scope: !14198)
!14201 = !DILocation(line: 3429, column: 34, scope: !14198)
!14202 = !DILocation(line: 3429, column: 38, scope: !14198)
!14203 = !DILocation(line: 3429, column: 6, scope: !14146)
!14204 = !DILocation(line: 3430, column: 3, scope: !14198)
!14205 = !DILocation(line: 3436, column: 21, scope: !14206)
!14206 = distinct !DILexicalBlock(scope: !14146, file: !3, line: 3436, column: 6)
!14207 = !DILocation(line: 3436, column: 6, scope: !14206)
!14208 = !DILocation(line: 3436, column: 25, scope: !14206)
!14209 = !DILocation(line: 3436, column: 6, scope: !14146)
!14210 = !DILocation(line: 3437, column: 19, scope: !14211)
!14211 = distinct !DILexicalBlock(scope: !14212, file: !3, line: 3437, column: 7)
!14212 = distinct !DILexicalBlock(scope: !14206, file: !3, line: 3436, column: 32)
!14213 = !DILocation(line: 3437, column: 8, scope: !14211)
!14214 = !DILocation(line: 3437, column: 23, scope: !14211)
!14215 = !DILocation(line: 3437, column: 28, scope: !14211)
!14216 = !DILocation(line: 3437, column: 47, scope: !14211)
!14217 = !DILocation(line: 3437, column: 32, scope: !14211)
!14218 = !DILocation(line: 3437, column: 51, scope: !14211)
!14219 = !DILocation(line: 3437, column: 7, scope: !14212)
!14220 = !DILocation(line: 3438, column: 4, scope: !14211)
!14221 = !DILocation(line: 3438, column: 9, scope: !14211)
!14222 = !DILocation(line: 3438, column: 19, scope: !14211)
!14223 = !DILocation(line: 3439, column: 2, scope: !14212)
!14224 = !DILocation(line: 3441, column: 6, scope: !14159)
!14225 = !DILocation(line: 3441, column: 11, scope: !14159)
!14226 = !DILocation(line: 3441, column: 21, scope: !14159)
!14227 = !DILocation(line: 3441, column: 48, scope: !14159)
!14228 = !DILocation(line: 3441, column: 52, scope: !14159)
!14229 = !DILocation(line: 3441, column: 58, scope: !14159)
!14230 = !DILocation(line: 828, column: 31, scope: !14157, inlinedAt: !14158)
!14231 = !DILocation(line: 101, column: 20, scope: !8390, inlinedAt: !14180)
!14232 = !DILocation(line: 101, column: 23, scope: !8390, inlinedAt: !14180)
!14233 = !DILocation(line: 101, column: 2, scope: !8390, inlinedAt: !14180)
!14234 = !DILocation(line: 102, column: 2, scope: !8390, inlinedAt: !14180)
!14235 = !DILocation(line: 829, column: 37, scope: !14157, inlinedAt: !14158)
!14236 = !DILocation(line: 1170, column: 32, scope: !14155, inlinedAt: !14156)
!14237 = !DILocation(line: 29, column: 9, scope: !6967, inlinedAt: !14172)
!14238 = !DILocation(line: 1172, column: 2, scope: !14155, inlinedAt: !14156)
!14239 = !DILocation(line: 1173, column: 9, scope: !14240, inlinedAt: !14156)
!14240 = distinct !DILexicalBlock(scope: !14155, file: !8371, line: 1172, column: 5)
!14241 = !DILocation(line: 1173, column: 11, scope: !14240, inlinedAt: !14156)
!14242 = !DILocation(line: 1173, column: 7, scope: !14240, inlinedAt: !14156)
!14243 = !DILocation(line: 1174, column: 7, scope: !14244, inlinedAt: !14156)
!14244 = distinct !DILexicalBlock(scope: !14240, file: !8371, line: 1174, column: 7)
!14245 = !DILocation(line: 1174, column: 7, scope: !14240, inlinedAt: !14156)
!14246 = !DILocation(line: 1175, column: 4, scope: !14244, inlinedAt: !14156)
!14247 = !DILocation(line: 1176, column: 36, scope: !14155, inlinedAt: !14156)
!14248 = !DILocation(line: 1176, column: 43, scope: !14155, inlinedAt: !14156)
!14249 = !{i32 -2146960425, i32 -2146960270}
!14250 = !DILocation(line: 202, column: 9, scope: !14251, inlinedAt: !14154)
!14251 = distinct !DILexicalBlock(scope: !14165, file: !6968, line: 202, column: 9)
!14252 = !DILocation(line: 202, column: 9, scope: !14150, inlinedAt: !14154)
!14253 = !DILocation(line: 1176, column: 11, scope: !14155, inlinedAt: !14156)
!14254 = !DILocation(line: 1176, column: 2, scope: !14240, inlinedAt: !14156)
!14255 = distinct !{!14255, !14238, !14256}
!14256 = !DILocation(line: 1176, column: 47, scope: !14155, inlinedAt: !14156)
!14257 = !DILocation(line: 1178, column: 9, scope: !14155, inlinedAt: !14156)
!14258 = !DILocation(line: 3441, column: 73, scope: !14159)
!14259 = !DILocation(line: 3441, column: 6, scope: !14146)
!14260 = !DILocation(line: 3442, column: 3, scope: !14159)
!14261 = !DILocation(line: 3444, column: 2, scope: !14146)
!14262 = !DILocation(line: 3445, column: 1, scope: !14146)
!14263 = distinct !DISubprogram(name: "is_se_active", scope: !3, file: !3, line: 3383, type: !14264, scopeLine: 3384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!14264 = !DISubroutineType(types: !14265)
!14265 = !{!1011, !945}
!14266 = !DILocation(line: 363, column: 74, scope: !7001, inlinedAt: !14267)
!14267 = distinct !DILocation(line: 3388, column: 8, scope: !14268)
!14268 = distinct !DILexicalBlock(scope: !14269, file: !3, line: 3386, column: 33)
!14269 = distinct !DILexicalBlock(scope: !14270, file: !3, line: 3386, column: 7)
!14270 = distinct !DILexicalBlock(scope: !14271, file: !3, line: 3385, column: 67)
!14271 = distinct !DILexicalBlock(scope: !14263, file: !3, line: 3385, column: 6)
!14272 = !DILocalVariable(name: "dd", arg: 1, scope: !14263, file: !3, line: 3383, type: !945)
!14273 = !DILocation(line: 3383, column: 53, scope: !14263)
!14274 = !DILocation(line: 3385, column: 6, scope: !14271)
!14275 = !DILocation(line: 3385, column: 6, scope: !14263)
!14276 = !DILocation(line: 3386, column: 7, scope: !14269)
!14277 = !DILocation(line: 3386, column: 11, scope: !14269)
!14278 = !DILocation(line: 3386, column: 17, scope: !14269)
!14279 = !DILocation(line: 3386, column: 7, scope: !14270)
!14280 = !DILocalVariable(name: "to", scope: !14268, file: !3, line: 3387, type: !898)
!14281 = !DILocation(line: 3387, column: 18, scope: !14268)
!14282 = !DILocation(line: 3387, column: 23, scope: !14268)
!14283 = !DILocation(line: 3387, column: 27, scope: !14268)
!14284 = !DILocation(line: 3387, column: 33, scope: !14268)
!14285 = !DILocation(line: 365, column: 27, scope: !7071, inlinedAt: !14267)
!14286 = !DILocation(line: 365, column: 6, scope: !7071, inlinedAt: !14267)
!14287 = !DILocation(line: 365, column: 6, scope: !7001, inlinedAt: !14267)
!14288 = !DILocation(line: 366, column: 12, scope: !7075, inlinedAt: !14267)
!14289 = !DILocation(line: 366, column: 14, scope: !7075, inlinedAt: !14267)
!14290 = !DILocation(line: 366, column: 7, scope: !7076, inlinedAt: !14267)
!14291 = !DILocation(line: 367, column: 4, scope: !7075, inlinedAt: !14267)
!14292 = !DILocation(line: 368, column: 28, scope: !7076, inlinedAt: !14267)
!14293 = !DILocation(line: 368, column: 10, scope: !7076, inlinedAt: !14267)
!14294 = !DILocation(line: 368, column: 3, scope: !7076, inlinedAt: !14267)
!14295 = !DILocation(line: 370, column: 29, scope: !7084, inlinedAt: !14267)
!14296 = !DILocation(line: 370, column: 10, scope: !7084, inlinedAt: !14267)
!14297 = !DILocation(line: 370, column: 3, scope: !7084, inlinedAt: !14267)
!14298 = !DILocation(line: 372, column: 1, scope: !7001, inlinedAt: !14267)
!14299 = !DILocation(line: 3387, column: 48, scope: !14268)
!14300 = !DILocation(line: 3389, column: 8, scope: !14301)
!14301 = distinct !DILexicalBlock(scope: !14268, file: !3, line: 3389, column: 8)
!14302 = !DILocation(line: 3389, column: 8, scope: !14268)
!14303 = !DILocation(line: 3391, column: 9, scope: !14304)
!14304 = distinct !DILexicalBlock(scope: !14301, file: !3, line: 3389, column: 33)
!14305 = !DILocation(line: 3391, column: 13, scope: !14304)
!14306 = !DILocation(line: 3391, column: 19, scope: !14304)
!14307 = !DILocation(line: 3390, column: 5, scope: !14304)
!14308 = !DILocation(line: 3392, column: 39, scope: !14304)
!14309 = !DILocation(line: 3392, column: 43, scope: !14304)
!14310 = !DILocation(line: 3392, column: 5, scope: !14304)
!14311 = !DILocation(line: 3393, column: 5, scope: !14304)
!14312 = !DILocation(line: 3393, column: 9, scope: !14304)
!14313 = !DILocation(line: 3393, column: 15, scope: !14304)
!14314 = !DILocation(line: 3393, column: 30, scope: !14304)
!14315 = !DILocation(line: 3394, column: 5, scope: !14304)
!14316 = !DILocation(line: 3395, column: 5, scope: !14304)
!14317 = !DILocation(line: 3397, column: 3, scope: !14268)
!14318 = !DILocation(line: 3398, column: 3, scope: !14270)
!14319 = !DILocation(line: 3400, column: 2, scope: !14263)
!14320 = !DILocation(line: 3401, column: 1, scope: !14263)
!14321 = distinct !DISubprogram(name: "is_stopped", scope: !3, file: !3, line: 3403, type: !14322, scopeLine: 3404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!14322 = !DISubroutineType(types: !14323)
!14323 = !{!1011, !945, !3261}
!14324 = !DILocalVariable(name: "dd", arg: 1, scope: !14321, file: !3, line: 3403, type: !945)
!14325 = !DILocation(line: 3403, column: 51, scope: !14321)
!14326 = !DILocalVariable(name: "rq", arg: 2, scope: !14321, file: !3, line: 3403, type: !3261)
!14327 = !DILocation(line: 3403, column: 71, scope: !14321)
!14328 = !DILocation(line: 3405, column: 6, scope: !14329)
!14329 = distinct !DILexicalBlock(scope: !14321, file: !3, line: 3405, column: 6)
!14330 = !DILocation(line: 3405, column: 6, scope: !14321)
!14331 = !DILocation(line: 3406, column: 3, scope: !14329)
!14332 = !DILocation(line: 3408, column: 45, scope: !14333)
!14333 = distinct !DILexicalBlock(scope: !14321, file: !3, line: 3408, column: 6)
!14334 = !DILocation(line: 3408, column: 49, scope: !14333)
!14335 = !DILocation(line: 3408, column: 6, scope: !14333)
!14336 = !DILocation(line: 3408, column: 6, scope: !14321)
!14337 = !DILocation(line: 3409, column: 3, scope: !14333)
!14338 = !DILocation(line: 3410, column: 40, scope: !14339)
!14339 = distinct !DILexicalBlock(scope: !14321, file: !3, line: 3410, column: 6)
!14340 = !DILocation(line: 3410, column: 44, scope: !14339)
!14341 = !DILocation(line: 3410, column: 6, scope: !14339)
!14342 = !DILocation(line: 3410, column: 6, scope: !14321)
!14343 = !DILocation(line: 3411, column: 3, scope: !14339)
!14344 = !DILocation(line: 3412, column: 44, scope: !14345)
!14345 = distinct !DILexicalBlock(scope: !14321, file: !3, line: 3412, column: 6)
!14346 = !DILocation(line: 3412, column: 48, scope: !14345)
!14347 = !DILocation(line: 3412, column: 6, scope: !14345)
!14348 = !DILocation(line: 3412, column: 57, scope: !14345)
!14349 = !DILocation(line: 3413, column: 6, scope: !14345)
!14350 = !DILocation(line: 3412, column: 6, scope: !14321)
!14351 = !DILocation(line: 3414, column: 3, scope: !14345)
!14352 = !DILocation(line: 3415, column: 39, scope: !14353)
!14353 = distinct !DILexicalBlock(scope: !14321, file: !3, line: 3415, column: 6)
!14354 = !DILocation(line: 3415, column: 43, scope: !14353)
!14355 = !DILocation(line: 3415, column: 6, scope: !14353)
!14356 = !DILocation(line: 3415, column: 6, scope: !14321)
!14357 = !DILocation(line: 3416, column: 3, scope: !14353)
!14358 = !DILocation(line: 3417, column: 45, scope: !14359)
!14359 = distinct !DILexicalBlock(scope: !14321, file: !3, line: 3417, column: 6)
!14360 = !DILocation(line: 3417, column: 49, scope: !14359)
!14361 = !DILocation(line: 3417, column: 6, scope: !14359)
!14362 = !DILocation(line: 3417, column: 6, scope: !14321)
!14363 = !DILocation(line: 3418, column: 3, scope: !14359)
!14364 = !DILocation(line: 3420, column: 2, scope: !14321)
!14365 = !DILocation(line: 3421, column: 1, scope: !14321)
!14366 = distinct !DISubprogram(name: "mtip_hw_submit_io", scope: !3, file: !3, line: 2057, type: !14367, scopeLine: 2060, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!14367 = !DISubroutineType(types: !14368)
!14368 = !{null, !945, !3261, !8412, !3269}
!14369 = !DILocalVariable(name: "dd", arg: 1, scope: !14366, file: !3, line: 2057, type: !945)
!14370 = !DILocation(line: 2057, column: 51, scope: !14366)
!14371 = !DILocalVariable(name: "rq", arg: 2, scope: !14366, file: !3, line: 2057, type: !3261)
!14372 = !DILocation(line: 2057, column: 71, scope: !14366)
!14373 = !DILocalVariable(name: "command", arg: 3, scope: !14366, file: !3, line: 2058, type: !8412)
!14374 = !DILocation(line: 2058, column: 27, scope: !14366)
!14375 = !DILocalVariable(name: "hctx", arg: 4, scope: !14366, file: !3, line: 2059, type: !3269)
!14376 = !DILocation(line: 2059, column: 32, scope: !14366)
!14377 = !DILocalVariable(name: "hdr", scope: !14366, file: !3, line: 2061, type: !14055)
!14378 = !DILocation(line: 2061, column: 23, scope: !14366)
!14379 = !DILocation(line: 2062, column: 3, scope: !14366)
!14380 = !DILocation(line: 2062, column: 7, scope: !14366)
!14381 = !DILocation(line: 2062, column: 13, scope: !14366)
!14382 = !DILocation(line: 2062, column: 58, scope: !14366)
!14383 = !DILocation(line: 2062, column: 62, scope: !14366)
!14384 = !DILocation(line: 2062, column: 56, scope: !14366)
!14385 = !DILocation(line: 2062, column: 26, scope: !14366)
!14386 = !DILocalVariable(name: "fis", scope: !14366, file: !3, line: 2063, type: !6241)
!14387 = !DILocation(line: 2063, column: 26, scope: !14366)
!14388 = !DILocalVariable(name: "port", scope: !14366, file: !3, line: 2064, type: !6168)
!14389 = !DILocation(line: 2064, column: 20, scope: !14366)
!14390 = !DILocation(line: 2064, column: 27, scope: !14366)
!14391 = !DILocation(line: 2064, column: 31, scope: !14366)
!14392 = !DILocalVariable(name: "dma_dir", scope: !14366, file: !3, line: 2065, type: !443)
!14393 = !DILocation(line: 2065, column: 6, scope: !14366)
!14394 = !DILocation(line: 2065, column: 16, scope: !14366)
!14395 = !DILocation(line: 2065, column: 32, scope: !14366)
!14396 = !DILocalVariable(name: "start", scope: !14366, file: !3, line: 2066, type: !987)
!14397 = !DILocation(line: 2066, column: 6, scope: !14366)
!14398 = !DILocation(line: 2066, column: 25, scope: !14366)
!14399 = !DILocation(line: 2066, column: 14, scope: !14366)
!14400 = !DILocalVariable(name: "nsect", scope: !14366, file: !3, line: 2067, type: !7)
!14401 = !DILocation(line: 2067, column: 15, scope: !14366)
!14402 = !DILocation(line: 2067, column: 38, scope: !14366)
!14403 = !DILocation(line: 2067, column: 23, scope: !14366)
!14404 = !DILocalVariable(name: "nents", scope: !14366, file: !3, line: 2068, type: !7)
!14405 = !DILocation(line: 2068, column: 15, scope: !14366)
!14406 = !DILocation(line: 2071, column: 24, scope: !14366)
!14407 = !DILocation(line: 2071, column: 30, scope: !14366)
!14408 = !DILocation(line: 2071, column: 37, scope: !14366)
!14409 = !DILocation(line: 2071, column: 41, scope: !14366)
!14410 = !DILocation(line: 2071, column: 50, scope: !14366)
!14411 = !DILocation(line: 2071, column: 10, scope: !14366)
!14412 = !DILocation(line: 2071, column: 8, scope: !14366)
!14413 = !DILocation(line: 2072, column: 10, scope: !14366)
!14414 = !DILocation(line: 2072, column: 8, scope: !14366)
!14415 = !DILocation(line: 2074, column: 2, scope: !14366)
!14416 = !DILocation(line: 2076, column: 26, scope: !14366)
!14417 = !DILocation(line: 2076, column: 2, scope: !14366)
!14418 = !DILocation(line: 2076, column: 11, scope: !14366)
!14419 = !DILocation(line: 2076, column: 24, scope: !14366)
!14420 = !DILocation(line: 2082, column: 2, scope: !14366)
!14421 = !DILocation(line: 2082, column: 11, scope: !14366)
!14422 = !DILocation(line: 2082, column: 19, scope: !14366)
!14423 = !DILocation(line: 2085, column: 8, scope: !14366)
!14424 = !DILocation(line: 2085, column: 17, scope: !14366)
!14425 = !DILocation(line: 2085, column: 6, scope: !14366)
!14426 = !DILocation(line: 2086, column: 2, scope: !14366)
!14427 = !DILocation(line: 2086, column: 7, scope: !14366)
!14428 = !DILocation(line: 2086, column: 19, scope: !14366)
!14429 = !DILocation(line: 2087, column: 2, scope: !14366)
!14430 = !DILocation(line: 2087, column: 7, scope: !14366)
!14431 = !DILocation(line: 2087, column: 19, scope: !14366)
!14432 = !DILocation(line: 2088, column: 6, scope: !14433)
!14433 = distinct !DILexicalBlock(scope: !14366, file: !3, line: 2088, column: 6)
!14434 = !DILocation(line: 2088, column: 14, scope: !14433)
!14435 = !DILocation(line: 2088, column: 6, scope: !14366)
!14436 = !DILocation(line: 2089, column: 3, scope: !14433)
!14437 = !DILocation(line: 2089, column: 8, scope: !14433)
!14438 = !DILocation(line: 2089, column: 16, scope: !14433)
!14439 = !DILocation(line: 2091, column: 3, scope: !14433)
!14440 = !DILocation(line: 2091, column: 8, scope: !14433)
!14441 = !DILocation(line: 2091, column: 16, scope: !14433)
!14442 = !DILocation(line: 2092, column: 21, scope: !14366)
!14443 = !DILocation(line: 2092, column: 27, scope: !14366)
!14444 = !DILocation(line: 2092, column: 2, scope: !14366)
!14445 = !DILocation(line: 2092, column: 7, scope: !14366)
!14446 = !DILocation(line: 2092, column: 19, scope: !14366)
!14447 = !DILocation(line: 2093, column: 22, scope: !14366)
!14448 = !DILocation(line: 2093, column: 28, scope: !14366)
!14449 = !DILocation(line: 2093, column: 34, scope: !14366)
!14450 = !DILocation(line: 2093, column: 21, scope: !14366)
!14451 = !DILocation(line: 2093, column: 2, scope: !14366)
!14452 = !DILocation(line: 2093, column: 7, scope: !14366)
!14453 = !DILocation(line: 2093, column: 19, scope: !14366)
!14454 = !DILocation(line: 2094, column: 22, scope: !14366)
!14455 = !DILocation(line: 2094, column: 28, scope: !14366)
!14456 = !DILocation(line: 2094, column: 35, scope: !14366)
!14457 = !DILocation(line: 2094, column: 21, scope: !14366)
!14458 = !DILocation(line: 2094, column: 2, scope: !14366)
!14459 = !DILocation(line: 2094, column: 7, scope: !14366)
!14460 = !DILocation(line: 2094, column: 19, scope: !14366)
!14461 = !DILocation(line: 2095, column: 22, scope: !14366)
!14462 = !DILocation(line: 2095, column: 28, scope: !14366)
!14463 = !DILocation(line: 2095, column: 35, scope: !14366)
!14464 = !DILocation(line: 2095, column: 21, scope: !14366)
!14465 = !DILocation(line: 2095, column: 2, scope: !14366)
!14466 = !DILocation(line: 2095, column: 7, scope: !14366)
!14467 = !DILocation(line: 2095, column: 19, scope: !14366)
!14468 = !DILocation(line: 2096, column: 22, scope: !14366)
!14469 = !DILocation(line: 2096, column: 28, scope: !14366)
!14470 = !DILocation(line: 2096, column: 35, scope: !14366)
!14471 = !DILocation(line: 2096, column: 21, scope: !14366)
!14472 = !DILocation(line: 2096, column: 2, scope: !14366)
!14473 = !DILocation(line: 2096, column: 7, scope: !14366)
!14474 = !DILocation(line: 2096, column: 19, scope: !14366)
!14475 = !DILocation(line: 2097, column: 22, scope: !14366)
!14476 = !DILocation(line: 2097, column: 28, scope: !14366)
!14477 = !DILocation(line: 2097, column: 35, scope: !14366)
!14478 = !DILocation(line: 2097, column: 21, scope: !14366)
!14479 = !DILocation(line: 2097, column: 2, scope: !14366)
!14480 = !DILocation(line: 2097, column: 7, scope: !14366)
!14481 = !DILocation(line: 2097, column: 19, scope: !14366)
!14482 = !DILocation(line: 2098, column: 2, scope: !14366)
!14483 = !DILocation(line: 2098, column: 7, scope: !14366)
!14484 = !DILocation(line: 2098, column: 15, scope: !14366)
!14485 = !DILocation(line: 2099, column: 21, scope: !14366)
!14486 = !DILocation(line: 2099, column: 27, scope: !14366)
!14487 = !DILocation(line: 2099, column: 2, scope: !14366)
!14488 = !DILocation(line: 2099, column: 7, scope: !14366)
!14489 = !DILocation(line: 2099, column: 19, scope: !14366)
!14490 = !DILocation(line: 2100, column: 22, scope: !14366)
!14491 = !DILocation(line: 2100, column: 28, scope: !14366)
!14492 = !DILocation(line: 2100, column: 34, scope: !14366)
!14493 = !DILocation(line: 2100, column: 21, scope: !14366)
!14494 = !DILocation(line: 2100, column: 2, scope: !14366)
!14495 = !DILocation(line: 2100, column: 7, scope: !14366)
!14496 = !DILocation(line: 2100, column: 19, scope: !14366)
!14497 = !DILocation(line: 2101, column: 23, scope: !14366)
!14498 = !DILocation(line: 2101, column: 27, scope: !14366)
!14499 = !DILocation(line: 2101, column: 31, scope: !14366)
!14500 = !DILocation(line: 2101, column: 40, scope: !14366)
!14501 = !DILocation(line: 2101, column: 44, scope: !14366)
!14502 = !DILocation(line: 2101, column: 48, scope: !14366)
!14503 = !DILocation(line: 2101, column: 37, scope: !14366)
!14504 = !DILocation(line: 2101, column: 21, scope: !14366)
!14505 = !DILocation(line: 2101, column: 2, scope: !14366)
!14506 = !DILocation(line: 2101, column: 7, scope: !14366)
!14507 = !DILocation(line: 2101, column: 19, scope: !14366)
!14508 = !DILocation(line: 2102, column: 2, scope: !14366)
!14509 = !DILocation(line: 2102, column: 7, scope: !14366)
!14510 = !DILocation(line: 2102, column: 19, scope: !14366)
!14511 = !DILocation(line: 2103, column: 2, scope: !14366)
!14512 = !DILocation(line: 2103, column: 7, scope: !14366)
!14513 = !DILocation(line: 2103, column: 19, scope: !14366)
!14514 = !DILocation(line: 2104, column: 2, scope: !14366)
!14515 = !DILocation(line: 2104, column: 7, scope: !14366)
!14516 = !DILocation(line: 2104, column: 19, scope: !14366)
!14517 = !DILocation(line: 2105, column: 2, scope: !14366)
!14518 = !DILocation(line: 2105, column: 7, scope: !14366)
!14519 = !DILocation(line: 2105, column: 19, scope: !14366)
!14520 = !DILocation(line: 2106, column: 18, scope: !14366)
!14521 = !DILocation(line: 2106, column: 22, scope: !14366)
!14522 = !DILocation(line: 2106, column: 31, scope: !14366)
!14523 = !DILocation(line: 2106, column: 2, scope: !14366)
!14524 = !DILocation(line: 2108, column: 6, scope: !14525)
!14525 = distinct !DILexicalBlock(scope: !14366, file: !3, line: 2108, column: 6)
!14526 = !DILocation(line: 2108, column: 6, scope: !14366)
!14527 = !DILocation(line: 2109, column: 3, scope: !14525)
!14528 = !DILocation(line: 2109, column: 8, scope: !14525)
!14529 = !DILocation(line: 2109, column: 15, scope: !14525)
!14530 = !DILocation(line: 2112, column: 14, scope: !14366)
!14531 = !DILocation(line: 2112, column: 2, scope: !14366)
!14532 = !DILocation(line: 2112, column: 7, scope: !14366)
!14533 = !DILocation(line: 2112, column: 12, scope: !14366)
!14534 = !DILocation(line: 2113, column: 37, scope: !14535)
!14535 = distinct !DILexicalBlock(scope: !14366, file: !3, line: 2113, column: 6)
!14536 = !DILocation(line: 2113, column: 41, scope: !14535)
!14537 = !DILocation(line: 2113, column: 47, scope: !14535)
!14538 = !DILocation(line: 2113, column: 6, scope: !14535)
!14539 = !DILocation(line: 2113, column: 6, scope: !14366)
!14540 = !DILocation(line: 2114, column: 16, scope: !14535)
!14541 = !DILocation(line: 2114, column: 3, scope: !14535)
!14542 = !DILocation(line: 2114, column: 8, scope: !14535)
!14543 = !DILocation(line: 2114, column: 14, scope: !14535)
!14544 = !DILocation(line: 2115, column: 14, scope: !14366)
!14545 = !DILocation(line: 2115, column: 2, scope: !14366)
!14546 = !DILocation(line: 2115, column: 7, scope: !14366)
!14547 = !DILocation(line: 2115, column: 12, scope: !14366)
!14548 = !DILocation(line: 2116, column: 2, scope: !14366)
!14549 = !DILocation(line: 2116, column: 7, scope: !14366)
!14550 = !DILocation(line: 2116, column: 18, scope: !14366)
!14551 = !DILocation(line: 2118, column: 23, scope: !14366)
!14552 = !DILocation(line: 2118, column: 2, scope: !14366)
!14553 = !DILocation(line: 2118, column: 11, scope: !14366)
!14554 = !DILocation(line: 2118, column: 21, scope: !14366)
!14555 = !DILocation(line: 2124, column: 6, scope: !14556)
!14556 = distinct !DILexicalBlock(scope: !14366, file: !3, line: 2124, column: 6)
!14557 = !DILocation(line: 2124, column: 6, scope: !14366)
!14558 = !DILocation(line: 2125, column: 11, scope: !14559)
!14559 = distinct !DILexicalBlock(scope: !14556, file: !3, line: 2124, column: 48)
!14560 = !DILocation(line: 2125, column: 15, scope: !14559)
!14561 = !DILocation(line: 2125, column: 20, scope: !14559)
!14562 = !DILocation(line: 2125, column: 26, scope: !14559)
!14563 = !DILocation(line: 2125, column: 3, scope: !14559)
!14564 = !DILocation(line: 2126, column: 36, scope: !14559)
!14565 = !DILocation(line: 2126, column: 42, scope: !14559)
!14566 = !DILocation(line: 2126, column: 3, scope: !14559)
!14567 = !DILocation(line: 2127, column: 3, scope: !14559)
!14568 = !DILocation(line: 2131, column: 25, scope: !14366)
!14569 = !DILocation(line: 2131, column: 31, scope: !14366)
!14570 = !DILocation(line: 2131, column: 35, scope: !14366)
!14571 = !DILocation(line: 2131, column: 2, scope: !14366)
!14572 = !DILocation(line: 2132, column: 1, scope: !14366)
!14573 = distinct !DISubprogram(name: "blk_rq_is_scsi", scope: !71, file: !71, line: 260, type: !14024, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!14574 = !DILocalVariable(name: "rq", arg: 1, scope: !14573, file: !71, line: 260, type: !3261)
!14575 = !DILocation(line: 260, column: 51, scope: !14573)
!14576 = !DILocation(line: 262, column: 24, scope: !14573)
!14577 = !DILocation(line: 262, column: 9, scope: !14573)
!14578 = !DILocation(line: 262, column: 2, scope: !14573)
!14579 = distinct !DISubprogram(name: "blk_rq_is_private", scope: !71, file: !71, line: 265, type: !14024, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!14580 = !DILocalVariable(name: "rq", arg: 1, scope: !14579, file: !71, line: 265, type: !3261)
!14581 = !DILocation(line: 265, column: 54, scope: !14579)
!14582 = !DILocation(line: 267, column: 27, scope: !14579)
!14583 = !DILocation(line: 267, column: 9, scope: !14579)
!14584 = !DILocation(line: 267, column: 2, scope: !14579)
!14585 = distinct !DISubprogram(name: "blk_op_is_scsi", scope: !71, file: !71, line: 250, type: !14586, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!14586 = !DISubroutineType(types: !14587)
!14587 = !{!1011, !7}
!14588 = !DILocalVariable(name: "op", arg: 1, scope: !14585, file: !71, line: 250, type: !7)
!14589 = !DILocation(line: 250, column: 48, scope: !14585)
!14590 = !DILocation(line: 252, column: 9, scope: !14585)
!14591 = !DILocation(line: 252, column: 12, scope: !14585)
!14592 = !DILocation(line: 252, column: 30, scope: !14585)
!14593 = !DILocation(line: 252, column: 33, scope: !14585)
!14594 = !DILocation(line: 252, column: 36, scope: !14585)
!14595 = !DILocation(line: 252, column: 2, scope: !14585)
!14596 = distinct !DISubprogram(name: "blk_op_is_private", scope: !71, file: !71, line: 255, type: !14586, scopeLine: 256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!14597 = !DILocalVariable(name: "op", arg: 1, scope: !14596, file: !71, line: 255, type: !7)
!14598 = !DILocation(line: 255, column: 51, scope: !14596)
!14599 = !DILocation(line: 257, column: 9, scope: !14596)
!14600 = !DILocation(line: 257, column: 12, scope: !14596)
!14601 = !DILocation(line: 257, column: 29, scope: !14596)
!14602 = !DILocation(line: 257, column: 32, scope: !14596)
!14603 = !DILocation(line: 257, column: 35, scope: !14596)
!14604 = !DILocation(line: 257, column: 2, scope: !14596)
!14605 = distinct !DISubprogram(name: "mtip_issue_non_ncq_command", scope: !3, file: !3, line: 838, type: !14606, scopeLine: 839, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!14606 = !DISubroutineType(types: !14607)
!14607 = !{null, !6168, !443}
!14608 = !DILocalVariable(name: "port", arg: 1, scope: !14605, file: !3, line: 838, type: !6168)
!14609 = !DILocation(line: 838, column: 58, scope: !14605)
!14610 = !DILocalVariable(name: "tag", arg: 2, scope: !14605, file: !3, line: 838, type: !443)
!14611 = !DILocation(line: 838, column: 68, scope: !14605)
!14612 = !DILocation(line: 840, column: 14, scope: !14605)
!14613 = !DILocation(line: 840, column: 11, scope: !14605)
!14614 = !DILocation(line: 840, column: 33, scope: !14605)
!14615 = !DILocation(line: 840, column: 39, scope: !14605)
!14616 = !DILocation(line: 840, column: 49, scope: !14605)
!14617 = !DILocation(line: 840, column: 2, scope: !14605)
!14618 = !DILocation(line: 841, column: 1, scope: !14605)
!14619 = distinct !DISubprogram(name: "op_is_write", scope: !855, file: !855, line: 459, type: !14586, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!14620 = !DILocalVariable(name: "op", arg: 1, scope: !14619, file: !855, line: 459, type: !7)
!14621 = !DILocation(line: 459, column: 45, scope: !14619)
!14622 = !DILocation(line: 461, column: 10, scope: !14619)
!14623 = !DILocation(line: 461, column: 13, scope: !14619)
!14624 = !DILocation(line: 461, column: 9, scope: !14619)
!14625 = !DILocation(line: 461, column: 2, scope: !14619)
!14626 = distinct !DISubprogram(name: "blk_rq_sectors", scope: !71, file: !71, line: 1000, type: !14627, scopeLine: 1001, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!14627 = !DISubroutineType(types: !14628)
!14628 = !{!7, !14629}
!14629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14630, size: 64)
!14630 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3262)
!14631 = !DILocalVariable(name: "rq", arg: 1, scope: !14626, file: !71, line: 1000, type: !14629)
!14632 = !DILocation(line: 1000, column: 65, scope: !14626)
!14633 = !DILocation(line: 1002, column: 22, scope: !14626)
!14634 = !DILocation(line: 1002, column: 9, scope: !14626)
!14635 = !DILocation(line: 1002, column: 26, scope: !14626)
!14636 = !DILocation(line: 1002, column: 2, scope: !14626)
!14637 = distinct !DISubprogram(name: "blk_rq_pos", scope: !71, file: !71, line: 983, type: !14638, scopeLine: 984, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!14638 = !DISubroutineType(types: !14639)
!14639 = !{!986, !14629}
!14640 = !DILocalVariable(name: "rq", arg: 1, scope: !14637, file: !71, line: 983, type: !14629)
!14641 = !DILocation(line: 983, column: 57, scope: !14637)
!14642 = !DILocation(line: 985, column: 9, scope: !14637)
!14643 = !DILocation(line: 985, column: 13, scope: !14637)
!14644 = !DILocation(line: 985, column: 2, scope: !14637)
!14645 = distinct !DISubprogram(name: "blk_rq_bytes", scope: !71, file: !71, line: 988, type: !14627, scopeLine: 989, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!14646 = !DILocalVariable(name: "rq", arg: 1, scope: !14645, file: !71, line: 988, type: !14629)
!14647 = !DILocation(line: 988, column: 63, scope: !14645)
!14648 = !DILocation(line: 990, column: 9, scope: !14645)
!14649 = !DILocation(line: 990, column: 13, scope: !14645)
!14650 = !DILocation(line: 990, column: 2, scope: !14645)
!14651 = distinct !DISubprogram(name: "blk_rq_map_sg", scope: !71, file: !71, line: 1209, type: !14652, scopeLine: 1211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!14652 = !DISubroutineType(types: !14653)
!14653 = !{!443, !3257, !3261, !14654}
!14654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8424, size: 64)
!14655 = !DILocalVariable(name: "q", arg: 1, scope: !14651, file: !71, line: 1209, type: !3257)
!14656 = !DILocation(line: 1209, column: 55, scope: !14651)
!14657 = !DILocalVariable(name: "rq", arg: 2, scope: !14651, file: !71, line: 1209, type: !3261)
!14658 = !DILocation(line: 1209, column: 74, scope: !14651)
!14659 = !DILocalVariable(name: "sglist", arg: 3, scope: !14651, file: !71, line: 1210, type: !14654)
!14660 = !DILocation(line: 1210, column: 23, scope: !14651)
!14661 = !DILocalVariable(name: "last_sg", scope: !14651, file: !71, line: 1212, type: !14654)
!14662 = !DILocation(line: 1212, column: 22, scope: !14651)
!14663 = !DILocation(line: 1214, column: 25, scope: !14651)
!14664 = !DILocation(line: 1214, column: 28, scope: !14651)
!14665 = !DILocation(line: 1214, column: 32, scope: !14651)
!14666 = !DILocation(line: 1214, column: 9, scope: !14651)
!14667 = !DILocation(line: 1214, column: 2, scope: !14651)
!14668 = distinct !DISubprogram(name: "fill_command_sg", scope: !3, file: !3, line: 1458, type: !14669, scopeLine: 1461, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!14669 = !DISubroutineType(types: !14670)
!14670 = !{null, !945, !8412, !443}
!14671 = !DILocalVariable(name: "dd", arg: 1, scope: !14668, file: !3, line: 1458, type: !945)
!14672 = !DILocation(line: 1458, column: 56, scope: !14668)
!14673 = !DILocalVariable(name: "command", arg: 2, scope: !14668, file: !3, line: 1459, type: !8412)
!14674 = !DILocation(line: 1459, column: 22, scope: !14668)
!14675 = !DILocalVariable(name: "nents", arg: 3, scope: !14668, file: !3, line: 1460, type: !443)
!14676 = !DILocation(line: 1460, column: 9, scope: !14668)
!14677 = !DILocalVariable(name: "n", scope: !14668, file: !3, line: 1462, type: !443)
!14678 = !DILocation(line: 1462, column: 6, scope: !14668)
!14679 = !DILocalVariable(name: "dma_len", scope: !14668, file: !3, line: 1463, type: !7)
!14680 = !DILocation(line: 1463, column: 15, scope: !14668)
!14681 = !DILocalVariable(name: "command_sg", scope: !14668, file: !3, line: 1464, type: !14077)
!14682 = !DILocation(line: 1464, column: 22, scope: !14668)
!14683 = !DILocalVariable(name: "sg", scope: !14668, file: !3, line: 1465, type: !14654)
!14684 = !DILocation(line: 1465, column: 22, scope: !14668)
!14685 = !DILocation(line: 1467, column: 15, scope: !14668)
!14686 = !DILocation(line: 1467, column: 24, scope: !14668)
!14687 = !DILocation(line: 1467, column: 32, scope: !14668)
!14688 = !DILocation(line: 1467, column: 13, scope: !14668)
!14689 = !DILocation(line: 1469, column: 2, scope: !14690)
!14690 = distinct !DILexicalBlock(scope: !14668, file: !3, line: 1469, column: 2)
!14691 = !DILocation(line: 1469, column: 2, scope: !14692)
!14692 = distinct !DILexicalBlock(scope: !14690, file: !3, line: 1469, column: 2)
!14693 = !DILocation(line: 1470, column: 13, scope: !14694)
!14694 = distinct !DILexicalBlock(scope: !14692, file: !3, line: 1469, column: 41)
!14695 = !DILocation(line: 1470, column: 11, scope: !14694)
!14696 = !DILocation(line: 1471, column: 7, scope: !14697)
!14697 = distinct !DILexicalBlock(scope: !14694, file: !3, line: 1471, column: 7)
!14698 = !DILocation(line: 1471, column: 15, scope: !14697)
!14699 = !DILocation(line: 1471, column: 7, scope: !14694)
!14700 = !DILocation(line: 1472, column: 4, scope: !14697)
!14701 = !DILocation(line: 1474, column: 22, scope: !14694)
!14702 = !DILocation(line: 1474, column: 3, scope: !14694)
!14703 = !DILocation(line: 1474, column: 15, scope: !14694)
!14704 = !DILocation(line: 1474, column: 20, scope: !14694)
!14705 = !DILocation(line: 1475, column: 22, scope: !14694)
!14706 = !DILocation(line: 1475, column: 3, scope: !14694)
!14707 = !DILocation(line: 1475, column: 15, scope: !14694)
!14708 = !DILocation(line: 1475, column: 19, scope: !14694)
!14709 = !DILocation(line: 1477, column: 4, scope: !14694)
!14710 = !DILocation(line: 1476, column: 3, scope: !14694)
!14711 = !DILocation(line: 1476, column: 15, scope: !14694)
!14712 = !DILocation(line: 1476, column: 25, scope: !14694)
!14713 = !DILocation(line: 1478, column: 13, scope: !14694)
!14714 = !DILocation(line: 1479, column: 2, scope: !14694)
!14715 = distinct !{!14715, !14689, !14716}
!14716 = !DILocation(line: 1479, column: 2, scope: !14690)
!14717 = !DILocation(line: 1480, column: 1, scope: !14668)
!14718 = distinct !DISubprogram(name: "mtip_issue_ncq_command", scope: !3, file: !3, line: 220, type: !14606, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!14719 = !DILocalVariable(name: "lock", arg: 1, scope: !14720, file: !6458, line: 392, type: !2140)
!14720 = distinct !DISubprogram(name: "spin_unlock", scope: !6458, file: !6458, line: 392, type: !14721, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!14721 = !DISubroutineType(types: !14722)
!14722 = !{null, !2140}
!14723 = !DILocation(line: 392, column: 53, scope: !14720, inlinedAt: !14724)
!14724 = distinct !DILocation(line: 230, column: 2, scope: !14718)
!14725 = !DILocalVariable(name: "lock", arg: 1, scope: !14726, file: !6458, line: 352, type: !2140)
!14726 = distinct !DISubprogram(name: "spin_lock", scope: !6458, file: !6458, line: 352, type: !14721, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!14727 = !DILocation(line: 352, column: 51, scope: !14726, inlinedAt: !14728)
!14728 = distinct !DILocation(line: 225, column: 2, scope: !14718)
!14729 = !DILocalVariable(name: "port", arg: 1, scope: !14718, file: !3, line: 220, type: !6168)
!14730 = !DILocation(line: 220, column: 61, scope: !14718)
!14731 = !DILocalVariable(name: "tag", arg: 2, scope: !14718, file: !3, line: 220, type: !443)
!14732 = !DILocation(line: 220, column: 71, scope: !14718)
!14733 = !DILocalVariable(name: "group", scope: !14718, file: !3, line: 222, type: !443)
!14734 = !DILocation(line: 222, column: 6, scope: !14718)
!14735 = !DILocation(line: 222, column: 14, scope: !14718)
!14736 = !DILocation(line: 222, column: 18, scope: !14718)
!14737 = !DILocation(line: 225, column: 13, scope: !14718)
!14738 = !DILocation(line: 225, column: 19, scope: !14718)
!14739 = !DILocation(line: 225, column: 34, scope: !14718)
!14740 = !DILocation(line: 354, column: 2, scope: !14741, inlinedAt: !14728)
!14741 = distinct !DILexicalBlock(scope: !14726, file: !6458, line: 354, column: 2)
!14742 = !{i32 -2145247474}
!14743 = !DILocation(line: 354, column: 2, scope: !14744, inlinedAt: !14728)
!14744 = distinct !DILexicalBlock(scope: !14741, file: !6458, line: 354, column: 2)
!14745 = !DILocation(line: 226, column: 15, scope: !14718)
!14746 = !DILocation(line: 226, column: 12, scope: !14718)
!14747 = !DILocation(line: 227, column: 4, scope: !14718)
!14748 = !DILocation(line: 227, column: 10, scope: !14718)
!14749 = !DILocation(line: 227, column: 19, scope: !14718)
!14750 = !DILocation(line: 226, column: 2, scope: !14718)
!14751 = !DILocation(line: 228, column: 15, scope: !14718)
!14752 = !DILocation(line: 228, column: 12, scope: !14718)
!14753 = !DILocation(line: 229, column: 4, scope: !14718)
!14754 = !DILocation(line: 229, column: 10, scope: !14718)
!14755 = !DILocation(line: 229, column: 20, scope: !14718)
!14756 = !DILocation(line: 228, column: 2, scope: !14718)
!14757 = !DILocation(line: 230, column: 15, scope: !14718)
!14758 = !DILocation(line: 230, column: 21, scope: !14718)
!14759 = !DILocation(line: 230, column: 36, scope: !14718)
!14760 = !DILocation(line: 394, column: 2, scope: !14761, inlinedAt: !14724)
!14761 = distinct !DILexicalBlock(scope: !14720, file: !6458, line: 394, column: 2)
!14762 = !{i32 -2145245113}
!14763 = !DILocation(line: 394, column: 2, scope: !14764, inlinedAt: !14724)
!14764 = distinct !DILexicalBlock(scope: !14761, file: !6458, line: 394, column: 2)
!14765 = !DILocation(line: 231, column: 1, scope: !14718)
!14766 = distinct !DISubprogram(name: "test_and_set_bit", scope: !8229, file: !8229, line: 68, type: !14767, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!14767 = !DISubroutineType(types: !14768)
!14768 = !{!1011, !175, !8232}
!14769 = !DILocalVariable(name: "nr", arg: 1, scope: !14770, file: !8236, line: 136, type: !175)
!14770 = distinct !DISubprogram(name: "arch_test_and_set_bit", scope: !8236, file: !8236, line: 136, type: !14767, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!14771 = !DILocation(line: 136, column: 28, scope: !14770, inlinedAt: !14772)
!14772 = distinct !DILocation(line: 71, column: 9, scope: !14766)
!14773 = !DILocalVariable(name: "addr", arg: 2, scope: !14770, file: !8236, line: 136, type: !8232)
!14774 = !DILocation(line: 136, column: 56, scope: !14770, inlinedAt: !14772)
!14775 = !DILocalVariable(name: "c", scope: !14776, file: !8236, line: 138, type: !1011)
!14776 = distinct !DILexicalBlock(scope: !14770, file: !8236, line: 138, column: 9)
!14777 = !DILocation(line: 138, column: 9, scope: !14776, inlinedAt: !14772)
!14778 = !DILocation(line: 99, column: 79, scope: !8390, inlinedAt: !14779)
!14779 = distinct !DILocation(line: 70, column: 2, scope: !14766)
!14780 = !DILocation(line: 99, column: 89, scope: !8390, inlinedAt: !14779)
!14781 = !DILocalVariable(name: "nr", arg: 1, scope: !14766, file: !8229, line: 68, type: !175)
!14782 = !DILocation(line: 68, column: 42, scope: !14766)
!14783 = !DILocalVariable(name: "addr", arg: 2, scope: !14766, file: !8229, line: 68, type: !8232)
!14784 = !DILocation(line: 68, column: 70, scope: !14766)
!14785 = !DILocation(line: 70, column: 31, scope: !14766)
!14786 = !DILocation(line: 70, column: 38, scope: !14766)
!14787 = !DILocation(line: 70, column: 36, scope: !14766)
!14788 = !DILocation(line: 101, column: 20, scope: !8390, inlinedAt: !14779)
!14789 = !DILocation(line: 101, column: 23, scope: !8390, inlinedAt: !14779)
!14790 = !DILocation(line: 101, column: 2, scope: !8390, inlinedAt: !14779)
!14791 = !DILocation(line: 102, column: 2, scope: !8390, inlinedAt: !14779)
!14792 = !DILocation(line: 71, column: 31, scope: !14766)
!14793 = !DILocation(line: 71, column: 35, scope: !14766)
!14794 = !{i32 -2146621270, i32 -2146621174}
!14795 = !DILocation(line: 71, column: 2, scope: !14766)
!14796 = distinct !DISubprogram(name: "mtip_get_identify", scope: !3, file: !3, line: 1130, type: !14797, scopeLine: 1131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!14797 = !DISubroutineType(types: !14798)
!14798 = !{!443, !6168, !890}
!14799 = !DILocation(line: 138, column: 29, scope: !10826, inlinedAt: !14800)
!14800 = distinct !DILocation(line: 199, column: 6, scope: !10832, inlinedAt: !14801)
!14801 = distinct !DILocation(line: 1190, column: 7, scope: !14802)
!14802 = distinct !DILexicalBlock(scope: !14803, file: !3, line: 1190, column: 7)
!14803 = distinct !DILexicalBlock(scope: !14804, file: !3, line: 1189, column: 19)
!14804 = distinct !DILexicalBlock(scope: !14796, file: !3, line: 1189, column: 6)
!14805 = !DILocation(line: 138, column: 42, scope: !10826, inlinedAt: !14800)
!14806 = !DILocation(line: 138, column: 54, scope: !10826, inlinedAt: !14800)
!14807 = !DILocation(line: 140, column: 6, scope: !10826, inlinedAt: !14800)
!14808 = !DILocation(line: 150, column: 6, scope: !10848, inlinedAt: !14800)
!14809 = !DILocation(line: 197, column: 27, scope: !10834, inlinedAt: !14801)
!14810 = !DILocation(line: 197, column: 43, scope: !10834, inlinedAt: !14801)
!14811 = !DILocation(line: 197, column: 63, scope: !10834, inlinedAt: !14801)
!14812 = !DILocalVariable(name: "port", arg: 1, scope: !14796, file: !3, line: 1130, type: !6168)
!14813 = !DILocation(line: 1130, column: 48, scope: !14796)
!14814 = !DILocalVariable(name: "user_buffer", arg: 2, scope: !14796, file: !3, line: 1130, type: !890)
!14815 = !DILocation(line: 1130, column: 67, scope: !14796)
!14816 = !DILocalVariable(name: "rv", scope: !14796, file: !3, line: 1132, type: !443)
!14817 = !DILocation(line: 1132, column: 6, scope: !14796)
!14818 = !DILocalVariable(name: "fis", scope: !14796, file: !3, line: 1133, type: !6242)
!14819 = !DILocation(line: 1133, column: 25, scope: !14796)
!14820 = !DILocation(line: 1135, column: 45, scope: !14821)
!14821 = distinct !DILexicalBlock(scope: !14796, file: !3, line: 1135, column: 6)
!14822 = !DILocation(line: 1135, column: 51, scope: !14821)
!14823 = !DILocation(line: 1135, column: 55, scope: !14821)
!14824 = !DILocation(line: 1135, column: 6, scope: !14821)
!14825 = !DILocation(line: 1135, column: 6, scope: !14796)
!14826 = !DILocation(line: 1136, column: 3, scope: !14821)
!14827 = !DILocation(line: 1139, column: 2, scope: !14796)
!14828 = !DILocation(line: 1140, column: 6, scope: !14796)
!14829 = !DILocation(line: 1140, column: 11, scope: !14796)
!14830 = !DILocation(line: 1141, column: 6, scope: !14796)
!14831 = !DILocation(line: 1141, column: 11, scope: !14796)
!14832 = !DILocation(line: 1142, column: 6, scope: !14796)
!14833 = !DILocation(line: 1142, column: 14, scope: !14796)
!14834 = !DILocation(line: 1145, column: 2, scope: !14796)
!14835 = !DILocation(line: 1145, column: 8, scope: !14796)
!14836 = !DILocation(line: 1145, column: 23, scope: !14796)
!14837 = !DILocation(line: 1148, column: 9, scope: !14796)
!14838 = !DILocation(line: 1148, column: 15, scope: !14796)
!14839 = !DILocation(line: 1148, column: 2, scope: !14796)
!14840 = !DILocation(line: 1151, column: 33, scope: !14841)
!14841 = distinct !DILexicalBlock(scope: !14796, file: !3, line: 1151, column: 6)
!14842 = !DILocation(line: 1154, column: 5, scope: !14841)
!14843 = !DILocation(line: 1154, column: 11, scope: !14841)
!14844 = !DILocation(line: 1151, column: 6, scope: !14841)
!14845 = !DILocation(line: 1158, column: 5, scope: !14841)
!14846 = !DILocation(line: 1151, column: 6, scope: !14796)
!14847 = !DILocation(line: 1159, column: 6, scope: !14848)
!14848 = distinct !DILexicalBlock(scope: !14841, file: !3, line: 1158, column: 10)
!14849 = !DILocation(line: 1160, column: 3, scope: !14848)
!14850 = !DILocation(line: 1169, column: 18, scope: !14796)
!14851 = !DILocation(line: 1169, column: 24, scope: !14796)
!14852 = !DILocation(line: 1169, column: 33, scope: !14796)
!14853 = !DILocation(line: 1169, column: 2, scope: !14796)
!14854 = !DILocation(line: 1170, column: 18, scope: !14796)
!14855 = !DILocation(line: 1170, column: 24, scope: !14796)
!14856 = !DILocation(line: 1170, column: 33, scope: !14796)
!14857 = !DILocation(line: 1170, column: 2, scope: !14796)
!14858 = !DILocation(line: 1171, column: 18, scope: !14796)
!14859 = !DILocation(line: 1171, column: 24, scope: !14796)
!14860 = !DILocation(line: 1171, column: 33, scope: !14796)
!14861 = !DILocation(line: 1171, column: 2, scope: !14796)
!14862 = !DILocation(line: 1181, column: 6, scope: !14863)
!14863 = distinct !DILexicalBlock(scope: !14796, file: !3, line: 1181, column: 6)
!14864 = !DILocation(line: 1181, column: 12, scope: !14863)
!14865 = !DILocation(line: 1181, column: 26, scope: !14863)
!14866 = !DILocation(line: 1181, column: 6, scope: !14796)
!14867 = !DILocation(line: 1182, column: 35, scope: !14863)
!14868 = !DILocation(line: 1182, column: 41, scope: !14863)
!14869 = !DILocation(line: 1182, column: 45, scope: !14863)
!14870 = !DILocation(line: 1182, column: 3, scope: !14863)
!14871 = !DILocation(line: 1184, column: 37, scope: !14863)
!14872 = !DILocation(line: 1184, column: 43, scope: !14863)
!14873 = !DILocation(line: 1184, column: 47, scope: !14863)
!14874 = !DILocation(line: 1184, column: 3, scope: !14863)
!14875 = !DILocation(line: 1187, column: 2, scope: !14796)
!14876 = !DILocation(line: 1187, column: 8, scope: !14796)
!14877 = !DILocation(line: 1187, column: 23, scope: !14796)
!14878 = !DILocation(line: 1189, column: 6, scope: !14804)
!14879 = !DILocation(line: 1189, column: 6, scope: !14796)
!14880 = !DILocation(line: 1191, column: 4, scope: !14802)
!14881 = !DILocation(line: 1192, column: 4, scope: !14802)
!14882 = !DILocation(line: 1192, column: 10, scope: !14802)
!14883 = !DILocation(line: 199, column: 6, scope: !10832, inlinedAt: !14801)
!14884 = !DILocation(line: 141, column: 6, scope: !10946, inlinedAt: !14800)
!14885 = !DILocation(line: 0, scope: !10946, inlinedAt: !14800)
!14886 = !DILocation(line: 141, column: 6, scope: !10826, inlinedAt: !14800)
!14887 = !DILocation(line: 142, column: 29, scope: !10950, inlinedAt: !14800)
!14888 = !DILocation(line: 142, column: 8, scope: !10950, inlinedAt: !14800)
!14889 = !DILocation(line: 142, column: 7, scope: !10951, inlinedAt: !14800)
!14890 = !DILocation(line: 143, column: 18, scope: !10950, inlinedAt: !14800)
!14891 = !DILocation(line: 143, column: 22, scope: !10950, inlinedAt: !14800)
!14892 = !DILocation(line: 143, column: 4, scope: !10950, inlinedAt: !14800)
!14893 = !DILocation(line: 144, column: 12, scope: !10958, inlinedAt: !14800)
!14894 = !DILocation(line: 144, column: 12, scope: !10950, inlinedAt: !14800)
!14895 = !DILocation(line: 145, column: 4, scope: !10958, inlinedAt: !14800)
!14896 = !DILocation(line: 147, column: 4, scope: !10958, inlinedAt: !14800)
!14897 = !DILocation(line: 148, column: 3, scope: !10951, inlinedAt: !14800)
!14898 = !DILocation(line: 150, column: 6, scope: !10964, inlinedAt: !14800)
!14899 = !DILocation(line: 150, column: 6, scope: !10966, inlinedAt: !14800)
!14900 = !DILocation(line: 150, column: 6, scope: !10970, inlinedAt: !14800)
!14901 = !DILocation(line: 150, column: 6, scope: !10967, inlinedAt: !14800)
!14902 = !DILocation(line: 150, column: 6, scope: !10849, inlinedAt: !14800)
!14903 = !DILocation(line: 150, column: 6, scope: !10826, inlinedAt: !14800)
!14904 = !DILocation(line: 151, column: 3, scope: !10849, inlinedAt: !14800)
!14905 = !DILocation(line: 152, column: 20, scope: !10826, inlinedAt: !14800)
!14906 = !DILocation(line: 152, column: 26, scope: !10826, inlinedAt: !14800)
!14907 = !DILocation(line: 152, column: 33, scope: !10826, inlinedAt: !14800)
!14908 = !DILocation(line: 152, column: 2, scope: !10826, inlinedAt: !14800)
!14909 = !DILocation(line: 153, column: 2, scope: !10826, inlinedAt: !14800)
!14910 = !DILocation(line: 154, column: 1, scope: !10826, inlinedAt: !14800)
!14911 = !DILocation(line: 199, column: 6, scope: !10834, inlinedAt: !14801)
!14912 = !DILocation(line: 200, column: 21, scope: !10832, inlinedAt: !14801)
!14913 = !DILocation(line: 200, column: 25, scope: !10832, inlinedAt: !14801)
!14914 = !DILocation(line: 200, column: 31, scope: !10832, inlinedAt: !14801)
!14915 = !DILocation(line: 200, column: 7, scope: !10832, inlinedAt: !14801)
!14916 = !DILocation(line: 200, column: 5, scope: !10832, inlinedAt: !14801)
!14917 = !DILocation(line: 200, column: 3, scope: !10832, inlinedAt: !14801)
!14918 = !DILocation(line: 201, column: 9, scope: !10834, inlinedAt: !14801)
!14919 = !DILocation(line: 1190, column: 7, scope: !14802)
!14920 = !DILocation(line: 1190, column: 7, scope: !14803)
!14921 = !DILocation(line: 1194, column: 7, scope: !14922)
!14922 = distinct !DILexicalBlock(scope: !14802, file: !3, line: 1193, column: 33)
!14923 = !DILocation(line: 1195, column: 4, scope: !14922)
!14924 = !DILocation(line: 1197, column: 2, scope: !14803)
!14925 = !DILabel(scope: !14796, name: "out", file: !3, line: 1199)
!14926 = !DILocation(line: 1199, column: 1, scope: !14796)
!14927 = !DILocation(line: 1200, column: 9, scope: !14796)
!14928 = !DILocation(line: 1200, column: 2, scope: !14796)
!14929 = !DILocation(line: 1201, column: 1, scope: !14796)
!14930 = distinct !DISubprogram(name: "mtip_dump_identify", scope: !3, file: !3, line: 1403, type: !10036, scopeLine: 1404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!14931 = !DILocalVariable(name: "port", arg: 1, scope: !14930, file: !3, line: 1403, type: !6168)
!14932 = !DILocation(line: 1403, column: 50, scope: !14930)
!14933 = !DILocalVariable(name: "sectors", scope: !14930, file: !3, line: 1405, type: !986)
!14934 = !DILocation(line: 1405, column: 11, scope: !14930)
!14935 = !DILocalVariable(name: "revid", scope: !14930, file: !3, line: 1406, type: !965)
!14936 = !DILocation(line: 1406, column: 17, scope: !14930)
!14937 = !DILocalVariable(name: "cbuf", scope: !14930, file: !3, line: 1407, type: !14938)
!14938 = !DICompositeType(tag: DW_TAG_array_type, baseType: !961, size: 336, elements: !14939)
!14939 = !{!14940}
!14940 = !DISubrange(count: 42)
!14941 = !DILocation(line: 1407, column: 7, scope: !14930)
!14942 = !DILocation(line: 1409, column: 7, scope: !14943)
!14943 = distinct !DILexicalBlock(scope: !14930, file: !3, line: 1409, column: 6)
!14944 = !DILocation(line: 1409, column: 13, scope: !14943)
!14945 = !DILocation(line: 1409, column: 6, scope: !14930)
!14946 = !DILocation(line: 1410, column: 3, scope: !14943)
!14947 = !DILocation(line: 1412, column: 10, scope: !14930)
!14948 = !DILocation(line: 1412, column: 25, scope: !14930)
!14949 = !DILocation(line: 1412, column: 31, scope: !14930)
!14950 = !DILocation(line: 1412, column: 39, scope: !14930)
!14951 = !DILocation(line: 1412, column: 16, scope: !14930)
!14952 = !DILocation(line: 1412, column: 2, scope: !14930)
!14953 = !DILocation(line: 1413, column: 2, scope: !14930)
!14954 = !DILocation(line: 1416, column: 10, scope: !14930)
!14955 = !DILocation(line: 1416, column: 25, scope: !14930)
!14956 = !DILocation(line: 1416, column: 31, scope: !14930)
!14957 = !DILocation(line: 1416, column: 39, scope: !14930)
!14958 = !DILocation(line: 1416, column: 16, scope: !14930)
!14959 = !DILocation(line: 1416, column: 2, scope: !14930)
!14960 = !DILocation(line: 1417, column: 2, scope: !14930)
!14961 = !DILocation(line: 1420, column: 10, scope: !14930)
!14962 = !DILocation(line: 1420, column: 25, scope: !14930)
!14963 = !DILocation(line: 1420, column: 31, scope: !14930)
!14964 = !DILocation(line: 1420, column: 39, scope: !14930)
!14965 = !DILocation(line: 1420, column: 16, scope: !14930)
!14966 = !DILocation(line: 1420, column: 2, scope: !14930)
!14967 = !DILocation(line: 1421, column: 2, scope: !14930)
!14968 = !DILocation(line: 1423, column: 2, scope: !14930)
!14969 = !DILocation(line: 1427, column: 27, scope: !14970)
!14970 = distinct !DILexicalBlock(scope: !14930, file: !3, line: 1427, column: 6)
!14971 = !DILocation(line: 1427, column: 33, scope: !14970)
!14972 = !DILocation(line: 1427, column: 6, scope: !14970)
!14973 = !DILocation(line: 1427, column: 6, scope: !14930)
!14974 = !DILocation(line: 1428, column: 3, scope: !14970)
!14975 = !DILocation(line: 1433, column: 23, scope: !14930)
!14976 = !DILocation(line: 1433, column: 29, scope: !14930)
!14977 = !DILocation(line: 1433, column: 33, scope: !14930)
!14978 = !DILocation(line: 1433, column: 2, scope: !14930)
!14979 = !DILocation(line: 1434, column: 10, scope: !14930)
!14980 = !DILocation(line: 1434, column: 16, scope: !14930)
!14981 = !DILocation(line: 1434, column: 2, scope: !14930)
!14982 = !DILocation(line: 1436, column: 11, scope: !14983)
!14983 = distinct !DILexicalBlock(scope: !14930, file: !3, line: 1434, column: 24)
!14984 = !DILocation(line: 1436, column: 3, scope: !14983)
!14985 = !DILocation(line: 1437, column: 3, scope: !14983)
!14986 = !DILocation(line: 1439, column: 11, scope: !14983)
!14987 = !DILocation(line: 1439, column: 3, scope: !14983)
!14988 = !DILocation(line: 1440, column: 3, scope: !14983)
!14989 = !DILocation(line: 1442, column: 11, scope: !14983)
!14990 = !DILocation(line: 1442, column: 3, scope: !14983)
!14991 = !DILocation(line: 1443, column: 3, scope: !14983)
!14992 = !DILocation(line: 1445, column: 2, scope: !14930)
!14993 = !DILocation(line: 1447, column: 1, scope: !14930)
!14994 = distinct !DISubprogram(name: "mtip_read_log_page", scope: !3, file: !3, line: 1256, type: !14995, scopeLine: 1258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!14995 = !DISubroutineType(types: !14996)
!14996 = !{!443, !6168, !1862, !6185, !1995, !7}
!14997 = !DILocalVariable(name: "port", arg: 1, scope: !14994, file: !3, line: 1256, type: !6168)
!14998 = !DILocation(line: 1256, column: 49, scope: !14994)
!14999 = !DILocalVariable(name: "page", arg: 2, scope: !14994, file: !3, line: 1256, type: !1862)
!15000 = !DILocation(line: 1256, column: 58, scope: !14994)
!15001 = !DILocalVariable(name: "buffer", arg: 3, scope: !14994, file: !3, line: 1256, type: !6185)
!15002 = !DILocation(line: 1256, column: 69, scope: !14994)
!15003 = !DILocalVariable(name: "buffer_dma", arg: 4, scope: !14994, file: !3, line: 1257, type: !1995)
!15004 = !DILocation(line: 1257, column: 16, scope: !14994)
!15005 = !DILocalVariable(name: "sectors", arg: 5, scope: !14994, file: !3, line: 1257, type: !7)
!15006 = !DILocation(line: 1257, column: 41, scope: !14994)
!15007 = !DILocalVariable(name: "fis", scope: !14994, file: !3, line: 1259, type: !6242)
!15008 = !DILocation(line: 1259, column: 25, scope: !14994)
!15009 = !DILocation(line: 1261, column: 2, scope: !14994)
!15010 = !DILocation(line: 1262, column: 6, scope: !14994)
!15011 = !DILocation(line: 1262, column: 11, scope: !14994)
!15012 = !DILocation(line: 1263, column: 6, scope: !14994)
!15013 = !DILocation(line: 1263, column: 11, scope: !14994)
!15014 = !DILocation(line: 1264, column: 6, scope: !14994)
!15015 = !DILocation(line: 1264, column: 14, scope: !14994)
!15016 = !DILocation(line: 1265, column: 19, scope: !14994)
!15017 = !DILocation(line: 1265, column: 27, scope: !14994)
!15018 = !DILocation(line: 1265, column: 6, scope: !14994)
!15019 = !DILocation(line: 1265, column: 17, scope: !14994)
!15020 = !DILocation(line: 1266, column: 21, scope: !14994)
!15021 = !DILocation(line: 1266, column: 29, scope: !14994)
!15022 = !DILocation(line: 1266, column: 35, scope: !14994)
!15023 = !DILocation(line: 1266, column: 20, scope: !14994)
!15024 = !DILocation(line: 1266, column: 6, scope: !14994)
!15025 = !DILocation(line: 1266, column: 18, scope: !14994)
!15026 = !DILocation(line: 1267, column: 16, scope: !14994)
!15027 = !DILocation(line: 1267, column: 6, scope: !14994)
!15028 = !DILocation(line: 1267, column: 14, scope: !14994)
!15029 = !DILocation(line: 1268, column: 6, scope: !14994)
!15030 = !DILocation(line: 1268, column: 14, scope: !14994)
!15031 = !DILocation(line: 1269, column: 6, scope: !14994)
!15032 = !DILocation(line: 1269, column: 13, scope: !14994)
!15033 = !DILocation(line: 1271, column: 9, scope: !14994)
!15034 = !DILocation(line: 1271, column: 2, scope: !14994)
!15035 = !DILocation(line: 1271, column: 20, scope: !14994)
!15036 = !DILocation(line: 1271, column: 28, scope: !14994)
!15037 = !DILocation(line: 1273, column: 36, scope: !14994)
!15038 = !DILocation(line: 1276, column: 6, scope: !14994)
!15039 = !DILocation(line: 1277, column: 6, scope: !14994)
!15040 = !DILocation(line: 1277, column: 14, scope: !14994)
!15041 = !DILocation(line: 1273, column: 9, scope: !14994)
!15042 = !DILocation(line: 1273, column: 2, scope: !14994)
!15043 = distinct !DISubprogram(name: "mtip_get_smart_attr", scope: !3, file: !3, line: 1327, type: !15044, scopeLine: 1329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!15044 = !DISubroutineType(types: !15045)
!15045 = !{!443, !6168, !7, !6230}
!15046 = !DILocalVariable(name: "port", arg: 1, scope: !15043, file: !3, line: 1327, type: !6168)
!15047 = !DILocation(line: 1327, column: 50, scope: !15043)
!15048 = !DILocalVariable(name: "id", arg: 2, scope: !15043, file: !3, line: 1327, type: !7)
!15049 = !DILocation(line: 1327, column: 69, scope: !15043)
!15050 = !DILocalVariable(name: "attrib", arg: 3, scope: !15043, file: !3, line: 1328, type: !6230)
!15051 = !DILocation(line: 1328, column: 26, scope: !15043)
!15052 = !DILocalVariable(name: "rv", scope: !15043, file: !3, line: 1330, type: !443)
!15053 = !DILocation(line: 1330, column: 6, scope: !15043)
!15054 = !DILocalVariable(name: "i", scope: !15043, file: !3, line: 1330, type: !443)
!15055 = !DILocation(line: 1330, column: 10, scope: !15043)
!15056 = !DILocalVariable(name: "pattr", scope: !15043, file: !3, line: 1331, type: !6230)
!15057 = !DILocation(line: 1331, column: 21, scope: !15043)
!15058 = !DILocation(line: 1333, column: 7, scope: !15059)
!15059 = distinct !DILexicalBlock(scope: !15043, file: !3, line: 1333, column: 6)
!15060 = !DILocation(line: 1333, column: 6, scope: !15043)
!15061 = !DILocation(line: 1334, column: 3, scope: !15059)
!15062 = !DILocation(line: 1336, column: 7, scope: !15063)
!15063 = distinct !DILexicalBlock(scope: !15043, file: !3, line: 1336, column: 6)
!15064 = !DILocation(line: 1336, column: 13, scope: !15063)
!15065 = !DILocation(line: 1336, column: 6, scope: !15043)
!15066 = !DILocation(line: 1337, column: 3, scope: !15067)
!15067 = distinct !DILexicalBlock(scope: !15063, file: !3, line: 1336, column: 29)
!15068 = !DILocation(line: 1338, column: 3, scope: !15067)
!15069 = !DILocation(line: 1340, column: 8, scope: !15070)
!15070 = distinct !DILexicalBlock(scope: !15043, file: !3, line: 1340, column: 6)
!15071 = !DILocation(line: 1340, column: 14, scope: !15070)
!15072 = !DILocation(line: 1340, column: 27, scope: !15070)
!15073 = !DILocation(line: 1340, column: 6, scope: !15043)
!15074 = !DILocation(line: 1341, column: 3, scope: !15075)
!15075 = distinct !DILexicalBlock(scope: !15070, file: !3, line: 1340, column: 35)
!15076 = !DILocation(line: 1342, column: 3, scope: !15075)
!15077 = !DILocation(line: 1344, column: 8, scope: !15078)
!15078 = distinct !DILexicalBlock(scope: !15043, file: !3, line: 1344, column: 6)
!15079 = !DILocation(line: 1344, column: 14, scope: !15078)
!15080 = !DILocation(line: 1344, column: 27, scope: !15078)
!15081 = !DILocation(line: 1344, column: 6, scope: !15043)
!15082 = !DILocation(line: 1345, column: 3, scope: !15083)
!15083 = distinct !DILexicalBlock(scope: !15078, file: !3, line: 1344, column: 35)
!15084 = !DILocation(line: 1346, column: 3, scope: !15083)
!15085 = !DILocation(line: 1349, column: 9, scope: !15043)
!15086 = !DILocation(line: 1349, column: 15, scope: !15043)
!15087 = !DILocation(line: 1349, column: 2, scope: !15043)
!15088 = !DILocation(line: 1350, column: 27, scope: !15043)
!15089 = !DILocation(line: 1350, column: 33, scope: !15043)
!15090 = !DILocation(line: 1350, column: 39, scope: !15043)
!15091 = !DILocation(line: 1350, column: 50, scope: !15043)
!15092 = !DILocation(line: 1350, column: 56, scope: !15043)
!15093 = !DILocation(line: 1350, column: 7, scope: !15043)
!15094 = !DILocation(line: 1350, column: 5, scope: !15043)
!15095 = !DILocation(line: 1351, column: 6, scope: !15096)
!15096 = distinct !DILexicalBlock(scope: !15043, file: !3, line: 1351, column: 6)
!15097 = !DILocation(line: 1351, column: 6, scope: !15043)
!15098 = !DILocation(line: 1352, column: 3, scope: !15099)
!15099 = distinct !DILexicalBlock(scope: !15096, file: !3, line: 1351, column: 10)
!15100 = !DILocation(line: 1353, column: 10, scope: !15099)
!15101 = !DILocation(line: 1353, column: 3, scope: !15099)
!15102 = !DILocation(line: 1356, column: 32, scope: !15043)
!15103 = !DILocation(line: 1356, column: 38, scope: !15043)
!15104 = !DILocation(line: 1356, column: 48, scope: !15043)
!15105 = !DILocation(line: 1356, column: 10, scope: !15043)
!15106 = !DILocation(line: 1356, column: 8, scope: !15043)
!15107 = !DILocation(line: 1357, column: 9, scope: !15108)
!15108 = distinct !DILexicalBlock(scope: !15043, file: !3, line: 1357, column: 2)
!15109 = !DILocation(line: 1357, column: 7, scope: !15108)
!15110 = !DILocation(line: 1357, column: 14, scope: !15111)
!15111 = distinct !DILexicalBlock(scope: !15108, file: !3, line: 1357, column: 2)
!15112 = !DILocation(line: 1357, column: 16, scope: !15111)
!15113 = !DILocation(line: 1357, column: 2, scope: !15108)
!15114 = !DILocation(line: 1358, column: 7, scope: !15115)
!15115 = distinct !DILexicalBlock(scope: !15111, file: !3, line: 1358, column: 7)
!15116 = !DILocation(line: 1358, column: 14, scope: !15115)
!15117 = !DILocation(line: 1358, column: 25, scope: !15115)
!15118 = !DILocation(line: 1358, column: 22, scope: !15115)
!15119 = !DILocation(line: 1358, column: 7, scope: !15111)
!15120 = !DILocation(line: 1359, column: 11, scope: !15121)
!15121 = distinct !DILexicalBlock(scope: !15115, file: !3, line: 1358, column: 29)
!15122 = !DILocation(line: 1359, column: 4, scope: !15121)
!15123 = !DILocation(line: 1359, column: 19, scope: !15121)
!15124 = !DILocation(line: 1360, column: 4, scope: !15121)
!15125 = !DILocation(line: 1357, column: 23, scope: !15111)
!15126 = !DILocation(line: 1357, column: 32, scope: !15111)
!15127 = !DILocation(line: 1357, column: 2, scope: !15111)
!15128 = distinct !{!15128, !15113, !15129}
!15129 = !DILocation(line: 1361, column: 3, scope: !15108)
!15130 = !DILocation(line: 1363, column: 6, scope: !15131)
!15131 = distinct !DILexicalBlock(scope: !15043, file: !3, line: 1363, column: 6)
!15132 = !DILocation(line: 1363, column: 8, scope: !15131)
!15133 = !DILocation(line: 1363, column: 6, scope: !15043)
!15134 = !DILocation(line: 1364, column: 3, scope: !15135)
!15135 = distinct !DILexicalBlock(scope: !15131, file: !3, line: 1363, column: 15)
!15136 = !DILocation(line: 1366, column: 6, scope: !15135)
!15137 = !DILocation(line: 1367, column: 2, scope: !15135)
!15138 = !DILocation(line: 1369, column: 9, scope: !15043)
!15139 = !DILocation(line: 1369, column: 2, scope: !15043)
!15140 = !DILocation(line: 1370, column: 1, scope: !15043)
!15141 = distinct !DISubprogram(name: "ata_swap_string", scope: !3, file: !3, line: 1073, type: !15142, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!15142 = !DISubroutineType(types: !15143)
!15143 = !{null, !6185, !7}
!15144 = !DILocalVariable(name: "buf", arg: 1, scope: !15141, file: !3, line: 1073, type: !6185)
!15145 = !DILocation(line: 1073, column: 41, scope: !15141)
!15146 = !DILocalVariable(name: "len", arg: 2, scope: !15141, file: !3, line: 1073, type: !7)
!15147 = !DILocation(line: 1073, column: 59, scope: !15141)
!15148 = !DILocalVariable(name: "i", scope: !15141, file: !3, line: 1075, type: !443)
!15149 = !DILocation(line: 1075, column: 6, scope: !15141)
!15150 = !DILocation(line: 1076, column: 9, scope: !15151)
!15151 = distinct !DILexicalBlock(scope: !15141, file: !3, line: 1076, column: 2)
!15152 = !DILocation(line: 1076, column: 7, scope: !15151)
!15153 = !DILocation(line: 1076, column: 14, scope: !15154)
!15154 = distinct !DILexicalBlock(scope: !15151, file: !3, line: 1076, column: 2)
!15155 = !DILocation(line: 1076, column: 19, scope: !15154)
!15156 = !DILocation(line: 1076, column: 22, scope: !15154)
!15157 = !DILocation(line: 1076, column: 16, scope: !15154)
!15158 = !DILocation(line: 1076, column: 2, scope: !15151)
!15159 = !DILocation(line: 1077, column: 3, scope: !15154)
!15160 = !DILocation(line: 1076, column: 28, scope: !15154)
!15161 = !DILocation(line: 1076, column: 2, scope: !15154)
!15162 = distinct !{!15162, !15158, !15163}
!15163 = !DILocation(line: 1077, column: 3, scope: !15151)
!15164 = !DILocation(line: 1078, column: 1, scope: !15141)
!15165 = distinct !DISubprogram(name: "__swab16s", scope: !15166, file: !15166, line: 240, type: !15167, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!15166 = !DIFile(filename: "./include/uapi/linux/swab.h", directory: "/home/lizy2001/genbc/linux")
!15167 = !DISubroutineType(types: !15168)
!15168 = !{null, !15169}
!15169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1698, size: 64)
!15170 = !DILocalVariable(name: "p", arg: 1, scope: !15171, file: !15166, line: 171, type: !15174)
!15171 = distinct !DISubprogram(name: "__swab16p", scope: !15166, file: !15166, line: 171, type: !15172, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!15172 = !DISubroutineType(types: !15173)
!15173 = !{!1698, !15174}
!15174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15175, size: 64)
!15175 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1698)
!15176 = !DILocation(line: 171, column: 53, scope: !15171, inlinedAt: !15177)
!15177 = distinct !DILocation(line: 245, column: 7, scope: !15165)
!15178 = !DILocalVariable(name: "p", arg: 1, scope: !15165, file: !15166, line: 240, type: !15169)
!15179 = !DILocation(line: 240, column: 37, scope: !15165)
!15180 = !DILocation(line: 245, column: 17, scope: !15165)
!15181 = !DILocation(line: 176, column: 9, scope: !15171, inlinedAt: !15177)
!15182 = !DILocation(line: 245, column: 3, scope: !15165)
!15183 = !DILocation(line: 245, column: 5, scope: !15165)
!15184 = !DILocation(line: 247, column: 1, scope: !15165)
!15185 = distinct !DISubprogram(name: "__fswab16", scope: !15166, file: !15166, line: 48, type: !15186, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!15186 = !DISubroutineType(types: !15187)
!15187 = !{!1698, !1698}
!15188 = !DILocalVariable(name: "val", arg: 1, scope: !15185, file: !15166, line: 48, type: !1698)
!15189 = !DILocation(line: 48, column: 57, scope: !15185)
!15190 = !DILocation(line: 53, column: 9, scope: !15185)
!15191 = !DILocation(line: 53, column: 2, scope: !15185)
!15192 = distinct !DISubprogram(name: "mtip_get_smart_data", scope: !3, file: !3, line: 1292, type: !15193, scopeLine: 1294, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!15193 = !DISubroutineType(types: !15194)
!15194 = !{!443, !6168, !6192, !1995}
!15195 = !DILocalVariable(name: "port", arg: 1, scope: !15192, file: !3, line: 1292, type: !6168)
!15196 = !DILocation(line: 1292, column: 50, scope: !15192)
!15197 = !DILocalVariable(name: "buffer", arg: 2, scope: !15192, file: !3, line: 1292, type: !6192)
!15198 = !DILocation(line: 1292, column: 60, scope: !15192)
!15199 = !DILocalVariable(name: "buffer_dma", arg: 3, scope: !15192, file: !3, line: 1293, type: !1995)
!15200 = !DILocation(line: 1293, column: 17, scope: !15192)
!15201 = !DILocalVariable(name: "fis", scope: !15192, file: !3, line: 1295, type: !6242)
!15202 = !DILocation(line: 1295, column: 25, scope: !15192)
!15203 = !DILocation(line: 1297, column: 2, scope: !15192)
!15204 = !DILocation(line: 1298, column: 6, scope: !15192)
!15205 = !DILocation(line: 1298, column: 11, scope: !15192)
!15206 = !DILocation(line: 1299, column: 6, scope: !15192)
!15207 = !DILocation(line: 1299, column: 11, scope: !15192)
!15208 = !DILocation(line: 1300, column: 6, scope: !15192)
!15209 = !DILocation(line: 1300, column: 14, scope: !15192)
!15210 = !DILocation(line: 1301, column: 6, scope: !15192)
!15211 = !DILocation(line: 1301, column: 15, scope: !15192)
!15212 = !DILocation(line: 1302, column: 6, scope: !15192)
!15213 = !DILocation(line: 1302, column: 17, scope: !15192)
!15214 = !DILocation(line: 1303, column: 6, scope: !15192)
!15215 = !DILocation(line: 1303, column: 14, scope: !15192)
!15216 = !DILocation(line: 1304, column: 6, scope: !15192)
!15217 = !DILocation(line: 1304, column: 13, scope: !15192)
!15218 = !DILocation(line: 1305, column: 6, scope: !15192)
!15219 = !DILocation(line: 1305, column: 13, scope: !15192)
!15220 = !DILocation(line: 1307, column: 36, scope: !15192)
!15221 = !DILocation(line: 1310, column: 6, scope: !15192)
!15222 = !DILocation(line: 1307, column: 9, scope: !15192)
!15223 = !DILocation(line: 1307, column: 2, scope: !15192)
!15224 = distinct !DISubprogram(name: "sysfs_create_file", scope: !1101, file: !1101, line: 596, type: !15225, scopeLine: 598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!15225 = !DISubroutineType(types: !15226)
!15226 = !{!443, !1028, !15227}
!15227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15228, size: 64)
!15228 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1112)
!15229 = !DILocalVariable(name: "kobj", arg: 1, scope: !15224, file: !1101, line: 596, type: !1028)
!15230 = !DILocation(line: 596, column: 66, scope: !15224)
!15231 = !DILocalVariable(name: "attr", arg: 2, scope: !15224, file: !1101, line: 597, type: !15227)
!15232 = !DILocation(line: 597, column: 32, scope: !15224)
!15233 = !DILocation(line: 599, column: 30, scope: !15224)
!15234 = !DILocation(line: 599, column: 36, scope: !15224)
!15235 = !DILocation(line: 599, column: 9, scope: !15224)
!15236 = !DILocation(line: 599, column: 2, scope: !15224)
!15237 = distinct !DISubprogram(name: "mtip_hw_show_status", scope: !3, file: !3, line: 2144, type: !6418, scopeLine: 2147, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!15238 = !DILocalVariable(name: "dev", arg: 1, scope: !15237, file: !3, line: 2144, type: !1960)
!15239 = !DILocation(line: 2144, column: 51, scope: !15237)
!15240 = !DILocalVariable(name: "attr", arg: 2, scope: !15237, file: !3, line: 2145, type: !6420)
!15241 = !DILocation(line: 2145, column: 30, scope: !15237)
!15242 = !DILocalVariable(name: "buf", arg: 3, scope: !15237, file: !3, line: 2146, type: !1076)
!15243 = !DILocation(line: 2146, column: 11, scope: !15237)
!15244 = !DILocalVariable(name: "dd", scope: !15237, file: !3, line: 2148, type: !945)
!15245 = !DILocation(line: 2148, column: 22, scope: !15237)
!15246 = !DILocalVariable(name: "__mptr", scope: !15247, file: !3, line: 2148, type: !890)
!15247 = distinct !DILexicalBlock(scope: !15237, file: !3, line: 2148, column: 27)
!15248 = !DILocation(line: 2148, column: 27, scope: !15247)
!15249 = !DILocation(line: 2148, column: 27, scope: !15250)
!15250 = distinct !DILexicalBlock(scope: !15247, file: !3, line: 2148, column: 27)
!15251 = !DILocation(line: 2148, column: 45, scope: !15237)
!15252 = !DILocation(line: 2148, column: 27, scope: !15237)
!15253 = !DILocalVariable(name: "size", scope: !15237, file: !3, line: 2149, type: !443)
!15254 = !DILocation(line: 2149, column: 6, scope: !15237)
!15255 = !DILocation(line: 2151, column: 40, scope: !15256)
!15256 = distinct !DILexicalBlock(scope: !15237, file: !3, line: 2151, column: 6)
!15257 = !DILocation(line: 2151, column: 44, scope: !15256)
!15258 = !DILocation(line: 2151, column: 6, scope: !15256)
!15259 = !DILocation(line: 2151, column: 6, scope: !15237)
!15260 = !DILocation(line: 2152, column: 19, scope: !15256)
!15261 = !DILocation(line: 2152, column: 11, scope: !15256)
!15262 = !DILocation(line: 2152, column: 8, scope: !15256)
!15263 = !DILocation(line: 2152, column: 3, scope: !15256)
!15264 = !DILocation(line: 2153, column: 49, scope: !15265)
!15265 = distinct !DILexicalBlock(scope: !15256, file: !3, line: 2153, column: 11)
!15266 = !DILocation(line: 2153, column: 53, scope: !15265)
!15267 = !DILocation(line: 2153, column: 11, scope: !15265)
!15268 = !DILocation(line: 2153, column: 11, scope: !15256)
!15269 = !DILocation(line: 2154, column: 19, scope: !15265)
!15270 = !DILocation(line: 2154, column: 11, scope: !15265)
!15271 = !DILocation(line: 2154, column: 8, scope: !15265)
!15272 = !DILocation(line: 2154, column: 3, scope: !15265)
!15273 = !DILocation(line: 2156, column: 19, scope: !15265)
!15274 = !DILocation(line: 2156, column: 11, scope: !15265)
!15275 = !DILocation(line: 2156, column: 8, scope: !15265)
!15276 = !DILocation(line: 2158, column: 9, scope: !15237)
!15277 = !DILocation(line: 2158, column: 2, scope: !15237)
!15278 = distinct !DISubprogram(name: "mtip_handle_tfe", scope: !3, file: !3, line: 507, type: !9646, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!15279 = !DILocalVariable(name: "dd", arg: 1, scope: !15278, file: !3, line: 507, type: !945)
!15280 = !DILocation(line: 507, column: 49, scope: !15278)
!15281 = !DILocalVariable(name: "group", scope: !15278, file: !3, line: 509, type: !443)
!15282 = !DILocation(line: 509, column: 6, scope: !15278)
!15283 = !DILocalVariable(name: "tag", scope: !15278, file: !3, line: 509, type: !443)
!15284 = !DILocation(line: 509, column: 13, scope: !15278)
!15285 = !DILocalVariable(name: "bit", scope: !15278, file: !3, line: 509, type: !443)
!15286 = !DILocation(line: 509, column: 18, scope: !15278)
!15287 = !DILocalVariable(name: "reissue", scope: !15278, file: !3, line: 509, type: !443)
!15288 = !DILocation(line: 509, column: 23, scope: !15278)
!15289 = !DILocalVariable(name: "rv", scope: !15278, file: !3, line: 509, type: !443)
!15290 = !DILocation(line: 509, column: 32, scope: !15278)
!15291 = !DILocalVariable(name: "port", scope: !15278, file: !3, line: 510, type: !6168)
!15292 = !DILocation(line: 510, column: 20, scope: !15278)
!15293 = !DILocalVariable(name: "cmd", scope: !15278, file: !3, line: 511, type: !8412)
!15294 = !DILocation(line: 511, column: 20, scope: !15278)
!15295 = !DILocalVariable(name: "completed", scope: !15278, file: !3, line: 512, type: !938)
!15296 = !DILocation(line: 512, column: 6, scope: !15278)
!15297 = !DILocalVariable(name: "fis", scope: !15278, file: !3, line: 513, type: !6241)
!15298 = !DILocation(line: 513, column: 26, scope: !15278)
!15299 = !DILocalVariable(name: "tagaccum", scope: !15278, file: !3, line: 514, type: !6195)
!15300 = !DILocation(line: 514, column: 16, scope: !15278)
!15301 = !DILocalVariable(name: "cmd_cnt", scope: !15278, file: !3, line: 515, type: !7)
!15302 = !DILocation(line: 515, column: 15, scope: !15278)
!15303 = !DILocalVariable(name: "buf", scope: !15278, file: !3, line: 516, type: !1818)
!15304 = !DILocation(line: 516, column: 17, scope: !15278)
!15305 = !DILocalVariable(name: "fail_reason", scope: !15278, file: !3, line: 517, type: !1076)
!15306 = !DILocation(line: 517, column: 8, scope: !15278)
!15307 = !DILocalVariable(name: "fail_all_ncq_write", scope: !15278, file: !3, line: 518, type: !443)
!15308 = !DILocation(line: 518, column: 6, scope: !15278)
!15309 = !DILocalVariable(name: "fail_all_ncq_cmds", scope: !15278, file: !3, line: 518, type: !443)
!15310 = !DILocation(line: 518, column: 30, scope: !15278)
!15311 = !DILocation(line: 520, column: 2, scope: !15278)
!15312 = !DILocation(line: 522, column: 9, scope: !15278)
!15313 = !DILocation(line: 522, column: 13, scope: !15278)
!15314 = !DILocation(line: 522, column: 7, scope: !15278)
!15315 = !DILocation(line: 524, column: 39, scope: !15316)
!15316 = distinct !DILexicalBlock(scope: !15278, file: !3, line: 524, column: 6)
!15317 = !DILocation(line: 524, column: 45, scope: !15316)
!15318 = !DILocation(line: 524, column: 6, scope: !15316)
!15319 = !DILocation(line: 524, column: 6, scope: !15278)
!15320 = !DILocation(line: 525, column: 27, scope: !15321)
!15321 = distinct !DILexicalBlock(scope: !15316, file: !3, line: 524, column: 53)
!15322 = !DILocation(line: 525, column: 9, scope: !15321)
!15323 = !DILocation(line: 525, column: 7, scope: !15321)
!15324 = !DILocation(line: 527, column: 25, scope: !15321)
!15325 = !DILocation(line: 527, column: 3, scope: !15321)
!15326 = !DILocation(line: 528, column: 3, scope: !15321)
!15327 = !DILocation(line: 532, column: 2, scope: !15278)
!15328 = !DILocation(line: 535, column: 13, scope: !15329)
!15329 = distinct !DILexicalBlock(scope: !15278, file: !3, line: 535, column: 2)
!15330 = !DILocation(line: 535, column: 7, scope: !15329)
!15331 = !DILocation(line: 535, column: 18, scope: !15332)
!15332 = distinct !DILexicalBlock(scope: !15329, file: !3, line: 535, column: 2)
!15333 = !DILocation(line: 535, column: 26, scope: !15332)
!15334 = !DILocation(line: 535, column: 30, scope: !15332)
!15335 = !DILocation(line: 535, column: 24, scope: !15332)
!15336 = !DILocation(line: 535, column: 2, scope: !15329)
!15337 = !DILocation(line: 536, column: 21, scope: !15338)
!15338 = distinct !DILexicalBlock(scope: !15332, file: !3, line: 535, column: 52)
!15339 = !DILocation(line: 536, column: 27, scope: !15338)
!15340 = !DILocation(line: 536, column: 37, scope: !15338)
!15341 = !DILocation(line: 536, column: 15, scope: !15338)
!15342 = !DILocation(line: 536, column: 13, scope: !15338)
!15343 = !DILocation(line: 538, column: 3, scope: !15338)
!15344 = !DILocation(line: 541, column: 10, scope: !15338)
!15345 = !DILocation(line: 541, column: 21, scope: !15338)
!15346 = !DILocation(line: 541, column: 27, scope: !15338)
!15347 = !DILocation(line: 541, column: 37, scope: !15338)
!15348 = !DILocation(line: 541, column: 3, scope: !15338)
!15349 = !DILocation(line: 544, column: 12, scope: !15350)
!15350 = distinct !DILexicalBlock(scope: !15338, file: !3, line: 544, column: 3)
!15351 = !DILocation(line: 544, column: 8, scope: !15350)
!15352 = !DILocation(line: 544, column: 17, scope: !15353)
!15353 = distinct !DILexicalBlock(scope: !15350, file: !3, line: 544, column: 3)
!15354 = !DILocation(line: 544, column: 21, scope: !15353)
!15355 = !DILocation(line: 544, column: 26, scope: !15353)
!15356 = !DILocation(line: 544, column: 29, scope: !15353)
!15357 = !DILocation(line: 0, scope: !15353)
!15358 = !DILocation(line: 544, column: 3, scope: !15350)
!15359 = !DILocation(line: 545, column: 10, scope: !15360)
!15360 = distinct !DILexicalBlock(scope: !15361, file: !3, line: 545, column: 8)
!15361 = distinct !DILexicalBlock(scope: !15353, file: !3, line: 544, column: 47)
!15362 = !DILocation(line: 545, column: 26, scope: !15360)
!15363 = !DILocation(line: 545, column: 24, scope: !15360)
!15364 = !DILocation(line: 545, column: 20, scope: !15360)
!15365 = !DILocation(line: 545, column: 8, scope: !15361)
!15366 = !DILocation(line: 546, column: 5, scope: !15360)
!15367 = !DILocation(line: 547, column: 11, scope: !15361)
!15368 = !DILocation(line: 547, column: 17, scope: !15361)
!15369 = !DILocation(line: 547, column: 25, scope: !15361)
!15370 = !DILocation(line: 547, column: 23, scope: !15361)
!15371 = !DILocation(line: 547, column: 8, scope: !15361)
!15372 = !DILocation(line: 550, column: 8, scope: !15373)
!15373 = distinct !DILexicalBlock(scope: !15361, file: !3, line: 550, column: 8)
!15374 = !DILocation(line: 550, column: 12, scope: !15373)
!15375 = !DILocation(line: 550, column: 8, scope: !15361)
!15376 = !DILocation(line: 551, column: 5, scope: !15373)
!15377 = !DILocation(line: 553, column: 28, scope: !15361)
!15378 = !DILocation(line: 553, column: 32, scope: !15361)
!15379 = !DILocation(line: 553, column: 10, scope: !15361)
!15380 = !DILocation(line: 553, column: 8, scope: !15361)
!15381 = !DILocation(line: 554, column: 26, scope: !15361)
!15382 = !DILocation(line: 554, column: 4, scope: !15361)
!15383 = !DILocation(line: 555, column: 12, scope: !15361)
!15384 = !DILocation(line: 555, column: 17, scope: !15361)
!15385 = !DILocation(line: 555, column: 4, scope: !15361)
!15386 = !DILocation(line: 556, column: 11, scope: !15361)
!15387 = !DILocation(line: 557, column: 3, scope: !15361)
!15388 = !DILocation(line: 544, column: 43, scope: !15353)
!15389 = !DILocation(line: 544, column: 3, scope: !15353)
!15390 = distinct !{!15390, !15358, !15391}
!15391 = !DILocation(line: 557, column: 3, scope: !15350)
!15392 = !DILocation(line: 558, column: 2, scope: !15338)
!15393 = !DILocation(line: 535, column: 48, scope: !15332)
!15394 = !DILocation(line: 535, column: 2, scope: !15332)
!15395 = distinct !{!15395, !15336, !15396}
!15396 = !DILocation(line: 558, column: 2, scope: !15329)
!15397 = !DILocation(line: 560, column: 13, scope: !15278)
!15398 = !DILocation(line: 560, column: 36, scope: !15278)
!15399 = !DILocation(line: 560, column: 46, scope: !15278)
!15400 = !DILocation(line: 560, column: 2, scope: !15278)
!15401 = !DILocalVariable(name: "__ms", scope: !15402, file: !3, line: 563, type: !898)
!15402 = distinct !DILexicalBlock(scope: !15278, file: !3, line: 563, column: 2)
!15403 = !DILocation(line: 563, column: 2, scope: !15402)
!15404 = !DILocation(line: 563, column: 2, scope: !15405)
!15405 = distinct !DILexicalBlock(scope: !15406, file: !3, line: 563, column: 2)
!15406 = distinct !DILexicalBlock(scope: !15407, file: !3, line: 563, column: 2)
!15407 = distinct !DILexicalBlock(scope: !15408, file: !3, line: 563, column: 2)
!15408 = distinct !DILexicalBlock(scope: !15402, file: !3, line: 563, column: 2)
!15409 = distinct !{!15409, !15403, !15403}
!15410 = !DILocation(line: 564, column: 20, scope: !15278)
!15411 = !DILocation(line: 564, column: 2, scope: !15278)
!15412 = !DILocation(line: 567, column: 26, scope: !15278)
!15413 = !DILocation(line: 567, column: 30, scope: !15278)
!15414 = !DILocation(line: 568, column: 5, scope: !15278)
!15415 = !DILocation(line: 568, column: 9, scope: !15278)
!15416 = !DILocation(line: 568, column: 15, scope: !15278)
!15417 = !DILocation(line: 569, column: 5, scope: !15278)
!15418 = !DILocation(line: 569, column: 9, scope: !15278)
!15419 = !DILocation(line: 569, column: 15, scope: !15278)
!15420 = !DILocation(line: 567, column: 7, scope: !15278)
!15421 = !DILocation(line: 567, column: 5, scope: !15278)
!15422 = !DILocation(line: 570, column: 6, scope: !15423)
!15423 = distinct !DILexicalBlock(scope: !15278, file: !3, line: 570, column: 6)
!15424 = !DILocation(line: 570, column: 6, scope: !15278)
!15425 = !DILocation(line: 571, column: 3, scope: !15426)
!15426 = distinct !DILexicalBlock(scope: !15423, file: !3, line: 570, column: 10)
!15427 = !DILocation(line: 574, column: 2, scope: !15426)
!15428 = !DILocation(line: 575, column: 26, scope: !15429)
!15429 = distinct !DILexicalBlock(scope: !15423, file: !3, line: 574, column: 9)
!15430 = !DILocation(line: 575, column: 30, scope: !15429)
!15431 = !DILocation(line: 575, column: 36, scope: !15429)
!15432 = !DILocation(line: 575, column: 9, scope: !15429)
!15433 = !DILocation(line: 575, column: 7, scope: !15429)
!15434 = !DILocation(line: 576, column: 7, scope: !15435)
!15435 = distinct !DILexicalBlock(scope: !15429, file: !3, line: 576, column: 7)
!15436 = !DILocation(line: 576, column: 16, scope: !15435)
!15437 = !DILocation(line: 576, column: 7, scope: !15429)
!15438 = !DILocation(line: 577, column: 4, scope: !15439)
!15439 = distinct !DILexicalBlock(scope: !15435, file: !3, line: 576, column: 23)
!15440 = !DILocation(line: 579, column: 41, scope: !15439)
!15441 = !DILocation(line: 579, column: 45, scope: !15439)
!15442 = !DILocation(line: 579, column: 4, scope: !15439)
!15443 = !DILocation(line: 580, column: 23, scope: !15439)
!15444 = !DILocation(line: 581, column: 16, scope: !15439)
!15445 = !DILocation(line: 582, column: 3, scope: !15439)
!15446 = !DILocation(line: 583, column: 7, scope: !15447)
!15447 = distinct !DILexicalBlock(scope: !15429, file: !3, line: 583, column: 7)
!15448 = !DILocation(line: 583, column: 16, scope: !15447)
!15449 = !DILocation(line: 583, column: 7, scope: !15429)
!15450 = !DILocation(line: 584, column: 4, scope: !15451)
!15451 = distinct !DILexicalBlock(scope: !15447, file: !3, line: 583, column: 25)
!15452 = !DILocation(line: 586, column: 37, scope: !15451)
!15453 = !DILocation(line: 586, column: 41, scope: !15451)
!15454 = !DILocation(line: 586, column: 4, scope: !15451)
!15455 = !DILocation(line: 587, column: 22, scope: !15451)
!15456 = !DILocation(line: 588, column: 16, scope: !15451)
!15457 = !DILocation(line: 589, column: 3, scope: !15451)
!15458 = !DILocation(line: 590, column: 7, scope: !15459)
!15459 = distinct !DILexicalBlock(scope: !15429, file: !3, line: 590, column: 7)
!15460 = !DILocation(line: 590, column: 16, scope: !15459)
!15461 = !DILocation(line: 590, column: 7, scope: !15429)
!15462 = !DILocation(line: 591, column: 42, scope: !15463)
!15463 = distinct !DILexicalBlock(scope: !15459, file: !3, line: 590, column: 25)
!15464 = !DILocation(line: 591, column: 46, scope: !15463)
!15465 = !DILocation(line: 591, column: 4, scope: !15463)
!15466 = !DILocation(line: 592, column: 4, scope: !15463)
!15467 = !DILocation(line: 594, column: 22, scope: !15463)
!15468 = !DILocation(line: 595, column: 16, scope: !15463)
!15469 = !DILocation(line: 596, column: 3, scope: !15463)
!15470 = !DILocation(line: 600, column: 2, scope: !15278)
!15471 = !DILocation(line: 603, column: 13, scope: !15472)
!15472 = distinct !DILexicalBlock(scope: !15278, file: !3, line: 603, column: 2)
!15473 = !DILocation(line: 603, column: 7, scope: !15472)
!15474 = !DILocation(line: 603, column: 18, scope: !15475)
!15475 = distinct !DILexicalBlock(scope: !15472, file: !3, line: 603, column: 2)
!15476 = !DILocation(line: 603, column: 26, scope: !15475)
!15477 = !DILocation(line: 603, column: 30, scope: !15475)
!15478 = !DILocation(line: 603, column: 24, scope: !15475)
!15479 = !DILocation(line: 603, column: 2, scope: !15472)
!15480 = !DILocation(line: 604, column: 12, scope: !15481)
!15481 = distinct !DILexicalBlock(scope: !15482, file: !3, line: 604, column: 3)
!15482 = distinct !DILexicalBlock(scope: !15475, file: !3, line: 603, column: 52)
!15483 = !DILocation(line: 604, column: 8, scope: !15481)
!15484 = !DILocation(line: 604, column: 17, scope: !15485)
!15485 = distinct !DILexicalBlock(scope: !15481, file: !3, line: 604, column: 3)
!15486 = !DILocation(line: 604, column: 21, scope: !15485)
!15487 = !DILocation(line: 604, column: 3, scope: !15481)
!15488 = !DILocation(line: 605, column: 12, scope: !15489)
!15489 = distinct !DILexicalBlock(scope: !15485, file: !3, line: 604, column: 34)
!15490 = !DILocation(line: 606, column: 11, scope: !15489)
!15491 = !DILocation(line: 606, column: 17, scope: !15489)
!15492 = !DILocation(line: 606, column: 25, scope: !15489)
!15493 = !DILocation(line: 606, column: 23, scope: !15489)
!15494 = !DILocation(line: 606, column: 8, scope: !15489)
!15495 = !DILocation(line: 607, column: 28, scope: !15489)
!15496 = !DILocation(line: 607, column: 32, scope: !15489)
!15497 = !DILocation(line: 607, column: 10, scope: !15489)
!15498 = !DILocation(line: 607, column: 8, scope: !15489)
!15499 = !DILocation(line: 609, column: 36, scope: !15489)
!15500 = !DILocation(line: 609, column: 41, scope: !15489)
!15501 = !DILocation(line: 609, column: 10, scope: !15489)
!15502 = !DILocation(line: 609, column: 8, scope: !15489)
!15503 = !DILocation(line: 612, column: 8, scope: !15504)
!15504 = distinct !DILexicalBlock(scope: !15489, file: !3, line: 612, column: 8)
!15505 = !DILocation(line: 612, column: 12, scope: !15504)
!15506 = !DILocation(line: 612, column: 33, scope: !15504)
!15507 = !DILocation(line: 613, column: 8, scope: !15504)
!15508 = !DILocation(line: 613, column: 13, scope: !15504)
!15509 = !DILocation(line: 613, column: 21, scope: !15504)
!15510 = !DILocation(line: 612, column: 8, scope: !15489)
!15511 = !DILocation(line: 614, column: 13, scope: !15504)
!15512 = !DILocation(line: 614, column: 5, scope: !15504)
!15513 = !DILocation(line: 616, column: 9, scope: !15514)
!15514 = distinct !DILexicalBlock(scope: !15515, file: !3, line: 616, column: 9)
!15515 = distinct !DILexicalBlock(scope: !15504, file: !3, line: 615, column: 9)
!15516 = !DILocation(line: 616, column: 27, scope: !15514)
!15517 = !DILocation(line: 617, column: 7, scope: !15514)
!15518 = !DILocation(line: 617, column: 26, scope: !15514)
!15519 = !DILocation(line: 618, column: 6, scope: !15514)
!15520 = !DILocation(line: 618, column: 11, scope: !15514)
!15521 = !DILocation(line: 618, column: 19, scope: !15514)
!15522 = !DILocation(line: 616, column: 9, scope: !15515)
!15523 = !DILocation(line: 619, column: 6, scope: !15524)
!15524 = distinct !DILexicalBlock(scope: !15514, file: !3, line: 618, column: 44)
!15525 = !DILocation(line: 626, column: 28, scope: !15524)
!15526 = !DILocation(line: 626, column: 6, scope: !15524)
!15527 = !DILocation(line: 627, column: 6, scope: !15524)
!15528 = !DILocation(line: 635, column: 8, scope: !15529)
!15529 = distinct !DILexicalBlock(scope: !15489, file: !3, line: 635, column: 8)
!15530 = !DILocation(line: 635, column: 16, scope: !15529)
!15531 = !DILocation(line: 635, column: 20, scope: !15529)
!15532 = !DILocation(line: 635, column: 25, scope: !15529)
!15533 = !DILocation(line: 635, column: 32, scope: !15529)
!15534 = !DILocation(line: 635, column: 35, scope: !15529)
!15535 = !DILocation(line: 635, column: 8, scope: !15489)
!15536 = !DILocation(line: 637, column: 13, scope: !15537)
!15537 = distinct !DILexicalBlock(scope: !15529, file: !3, line: 635, column: 41)
!15538 = !DILocation(line: 637, column: 18, scope: !15537)
!15539 = !DILocation(line: 637, column: 5, scope: !15537)
!15540 = !DILocation(line: 640, column: 28, scope: !15537)
!15541 = !DILocation(line: 640, column: 34, scope: !15537)
!15542 = !DILocation(line: 640, column: 5, scope: !15537)
!15543 = !DILocation(line: 642, column: 5, scope: !15537)
!15544 = !DILocation(line: 646, column: 4, scope: !15489)
!15545 = !DILocation(line: 649, column: 26, scope: !15489)
!15546 = !DILocation(line: 649, column: 4, scope: !15489)
!15547 = !DILocation(line: 650, column: 3, scope: !15489)
!15548 = !DILocation(line: 604, column: 30, scope: !15485)
!15549 = !DILocation(line: 604, column: 3, scope: !15485)
!15550 = distinct !{!15550, !15487, !15551}
!15551 = !DILocation(line: 650, column: 3, scope: !15481)
!15552 = !DILocation(line: 651, column: 2, scope: !15482)
!15553 = !DILocation(line: 603, column: 48, scope: !15475)
!15554 = !DILocation(line: 603, column: 2, scope: !15475)
!15555 = distinct !{!15555, !15479, !15556}
!15556 = !DILocation(line: 651, column: 2, scope: !15472)
!15557 = !DILocation(line: 652, column: 13, scope: !15278)
!15558 = !DILocation(line: 652, column: 35, scope: !15278)
!15559 = !DILocation(line: 652, column: 45, scope: !15278)
!15560 = !DILocation(line: 652, column: 2, scope: !15278)
!15561 = !DILocation(line: 653, column: 1, scope: !15278)
!15562 = distinct !DISubprogram(name: "mtip_queue_cmd", scope: !3, file: !3, line: 2613, type: !15563, scopeLine: 2614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!15563 = !DISubroutineType(types: !15564)
!15564 = !{!1011, !3261, !890, !1011}
!15565 = !DILocalVariable(name: "req", arg: 1, scope: !15562, file: !3, line: 2613, type: !3261)
!15566 = !DILocation(line: 2613, column: 44, scope: !15562)
!15567 = !DILocalVariable(name: "data", arg: 2, scope: !15562, file: !3, line: 2613, type: !890)
!15568 = !DILocation(line: 2613, column: 55, scope: !15562)
!15569 = !DILocalVariable(name: "reserved", arg: 3, scope: !15562, file: !3, line: 2613, type: !1011)
!15570 = !DILocation(line: 2613, column: 66, scope: !15562)
!15571 = !DILocalVariable(name: "dd", scope: !15562, file: !3, line: 2615, type: !945)
!15572 = !DILocation(line: 2615, column: 22, scope: !15562)
!15573 = !DILocation(line: 2615, column: 27, scope: !15562)
!15574 = !DILocation(line: 2617, column: 10, scope: !15562)
!15575 = !DILocation(line: 2617, column: 15, scope: !15562)
!15576 = !DILocation(line: 2617, column: 20, scope: !15562)
!15577 = !DILocation(line: 2617, column: 24, scope: !15562)
!15578 = !DILocation(line: 2617, column: 30, scope: !15562)
!15579 = !DILocation(line: 2617, column: 2, scope: !15562)
!15580 = !DILocation(line: 2618, column: 20, scope: !15562)
!15581 = !DILocation(line: 2618, column: 2, scope: !15562)
!15582 = !DILocation(line: 2619, column: 2, scope: !15562)
!15583 = distinct !DISubprogram(name: "mtip_abort_cmd", scope: !3, file: !3, line: 2600, type: !15563, scopeLine: 2601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!15584 = !DILocalVariable(name: "req", arg: 1, scope: !15583, file: !3, line: 2600, type: !3261)
!15585 = !DILocation(line: 2600, column: 44, scope: !15583)
!15586 = !DILocalVariable(name: "data", arg: 2, scope: !15583, file: !3, line: 2600, type: !890)
!15587 = !DILocation(line: 2600, column: 55, scope: !15583)
!15588 = !DILocalVariable(name: "reserved", arg: 3, scope: !15583, file: !3, line: 2600, type: !1011)
!15589 = !DILocation(line: 2600, column: 66, scope: !15583)
!15590 = !DILocalVariable(name: "cmd", scope: !15583, file: !3, line: 2602, type: !8412)
!15591 = !DILocation(line: 2602, column: 19, scope: !15583)
!15592 = !DILocation(line: 2602, column: 42, scope: !15583)
!15593 = !DILocation(line: 2602, column: 25, scope: !15583)
!15594 = !DILocalVariable(name: "dd", scope: !15583, file: !3, line: 2603, type: !945)
!15595 = !DILocation(line: 2603, column: 22, scope: !15583)
!15596 = !DILocation(line: 2603, column: 27, scope: !15583)
!15597 = !DILocation(line: 2607, column: 12, scope: !15583)
!15598 = !DILocation(line: 2607, column: 17, scope: !15583)
!15599 = !DILocation(line: 2607, column: 22, scope: !15583)
!15600 = !DILocation(line: 2607, column: 26, scope: !15583)
!15601 = !DILocation(line: 2607, column: 32, scope: !15583)
!15602 = !DILocation(line: 2607, column: 2, scope: !15583)
!15603 = !DILocation(line: 2608, column: 2, scope: !15583)
!15604 = !DILocation(line: 2608, column: 7, scope: !15583)
!15605 = !DILocation(line: 2608, column: 14, scope: !15583)
!15606 = !DILocation(line: 2609, column: 23, scope: !15583)
!15607 = !DILocation(line: 2609, column: 2, scope: !15583)
!15608 = !DILocation(line: 2610, column: 2, scope: !15583)
!15609 = distinct !DISubprogram(name: "mtip_ftl_rebuild_poll", scope: !3, file: !3, line: 2539, type: !6387, scopeLine: 2540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!15610 = !DILocation(line: 363, column: 74, scope: !7001, inlinedAt: !15611)
!15611 = distinct !DILocation(line: 2547, column: 22, scope: !15609)
!15612 = !DILocalVariable(name: "dd", arg: 1, scope: !15609, file: !3, line: 2539, type: !945)
!15613 = !DILocation(line: 2539, column: 54, scope: !15609)
!15614 = !DILocalVariable(name: "timeout", scope: !15609, file: !3, line: 2541, type: !898)
!15615 = !DILocation(line: 2541, column: 16, scope: !15609)
!15616 = !DILocalVariable(name: "cnt", scope: !15609, file: !3, line: 2541, type: !898)
!15617 = !DILocation(line: 2541, column: 25, scope: !15609)
!15618 = !DILocalVariable(name: "start", scope: !15609, file: !3, line: 2541, type: !898)
!15619 = !DILocation(line: 2541, column: 34, scope: !15609)
!15620 = !DILocation(line: 2543, column: 2, scope: !15609)
!15621 = !DILocation(line: 2546, column: 10, scope: !15609)
!15622 = !DILocation(line: 2546, column: 8, scope: !15609)
!15623 = !DILocation(line: 2547, column: 12, scope: !15609)
!15624 = !DILocation(line: 365, column: 27, scope: !7071, inlinedAt: !15611)
!15625 = !DILocation(line: 365, column: 6, scope: !7071, inlinedAt: !15611)
!15626 = !DILocation(line: 365, column: 6, scope: !7001, inlinedAt: !15611)
!15627 = !DILocation(line: 366, column: 12, scope: !7075, inlinedAt: !15611)
!15628 = !DILocation(line: 366, column: 14, scope: !7075, inlinedAt: !15611)
!15629 = !DILocation(line: 366, column: 7, scope: !7076, inlinedAt: !15611)
!15630 = !DILocation(line: 367, column: 4, scope: !7075, inlinedAt: !15611)
!15631 = !DILocation(line: 368, column: 28, scope: !7076, inlinedAt: !15611)
!15632 = !DILocation(line: 368, column: 10, scope: !7076, inlinedAt: !15611)
!15633 = !DILocation(line: 368, column: 3, scope: !7076, inlinedAt: !15611)
!15634 = !DILocation(line: 370, column: 29, scope: !7084, inlinedAt: !15611)
!15635 = !DILocation(line: 370, column: 10, scope: !7084, inlinedAt: !15611)
!15636 = !DILocation(line: 370, column: 3, scope: !7084, inlinedAt: !15611)
!15637 = !DILocation(line: 372, column: 1, scope: !7001, inlinedAt: !15611)
!15638 = !DILocation(line: 2547, column: 20, scope: !15609)
!15639 = !DILocation(line: 2547, column: 10, scope: !15609)
!15640 = !DILocation(line: 2549, column: 2, scope: !15609)
!15641 = !DILocation(line: 2550, column: 7, scope: !15642)
!15642 = distinct !DILexicalBlock(scope: !15643, file: !3, line: 2550, column: 7)
!15643 = distinct !DILexicalBlock(scope: !15609, file: !3, line: 2549, column: 5)
!15644 = !DILocation(line: 2550, column: 7, scope: !15643)
!15645 = !DILocation(line: 2552, column: 4, scope: !15642)
!15646 = !DILocation(line: 2553, column: 35, scope: !15647)
!15647 = distinct !DILexicalBlock(scope: !15643, file: !3, line: 2553, column: 7)
!15648 = !DILocation(line: 2553, column: 39, scope: !15647)
!15649 = !DILocation(line: 2553, column: 7, scope: !15647)
!15650 = !DILocation(line: 2553, column: 7, scope: !15643)
!15651 = !DILocation(line: 2554, column: 4, scope: !15647)
!15652 = !DILocation(line: 2556, column: 25, scope: !15653)
!15653 = distinct !DILexicalBlock(scope: !15643, file: !3, line: 2556, column: 7)
!15654 = !DILocation(line: 2556, column: 29, scope: !15653)
!15655 = !DILocation(line: 2556, column: 7, scope: !15653)
!15656 = !DILocation(line: 2556, column: 41, scope: !15653)
!15657 = !DILocation(line: 2556, column: 7, scope: !15643)
!15658 = !DILocation(line: 2557, column: 4, scope: !15653)
!15659 = !DILocation(line: 2559, column: 9, scope: !15660)
!15660 = distinct !DILexicalBlock(scope: !15643, file: !3, line: 2559, column: 7)
!15661 = !DILocation(line: 2559, column: 13, scope: !15660)
!15662 = !DILocation(line: 2559, column: 19, scope: !15660)
!15663 = !DILocation(line: 2559, column: 28, scope: !15660)
!15664 = !DILocation(line: 2559, column: 7, scope: !15660)
!15665 = !DILocation(line: 2559, column: 55, scope: !15660)
!15666 = !DILocation(line: 2559, column: 7, scope: !15643)
!15667 = !DILocation(line: 2561, column: 4, scope: !15668)
!15668 = distinct !DILexicalBlock(scope: !15660, file: !3, line: 2560, column: 28)
!15669 = !DILocation(line: 2563, column: 11, scope: !15670)
!15670 = distinct !DILexicalBlock(scope: !15668, file: !3, line: 2563, column: 8)
!15671 = !DILocation(line: 2563, column: 14, scope: !15670)
!15672 = !DILocation(line: 2563, column: 8, scope: !15668)
!15673 = !DILocation(line: 2564, column: 5, scope: !15674)
!15674 = distinct !DILexicalBlock(scope: !15670, file: !3, line: 2563, column: 22)
!15675 = !DILocation(line: 2567, column: 9, scope: !15674)
!15676 = !DILocation(line: 2568, column: 4, scope: !15674)
!15677 = !DILocation(line: 2569, column: 3, scope: !15668)
!15678 = !DILocation(line: 2570, column: 4, scope: !15679)
!15679 = distinct !DILexicalBlock(scope: !15660, file: !3, line: 2569, column: 10)
!15680 = !DILocation(line: 2573, column: 26, scope: !15679)
!15681 = !DILocation(line: 2573, column: 4, scope: !15679)
!15682 = !DILocation(line: 2574, column: 4, scope: !15679)
!15683 = !DILocation(line: 2576, column: 2, scope: !15643)
!15684 = !DILocation(line: 2576, column: 11, scope: !15609)
!15685 = distinct !{!15685, !15640, !15686}
!15686 = !DILocation(line: 2576, column: 40, scope: !15609)
!15687 = !DILocation(line: 2579, column: 2, scope: !15609)
!15688 = !DILocation(line: 2582, column: 2, scope: !15609)
!15689 = !DILocation(line: 2583, column: 1, scope: !15609)
!15690 = distinct !DISubprogram(name: "print_tags", scope: !3, file: !3, line: 469, type: !15691, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!15691 = !DISubroutineType(types: !15692)
!15692 = !{null, !945, !1076, !944, !443}
!15693 = !DILocalVariable(name: "dd", arg: 1, scope: !15690, file: !3, line: 469, type: !945)
!15694 = !DILocation(line: 469, column: 44, scope: !15690)
!15695 = !DILocalVariable(name: "msg", arg: 2, scope: !15690, file: !3, line: 470, type: !1076)
!15696 = !DILocation(line: 470, column: 10, scope: !15690)
!15697 = !DILocalVariable(name: "tagbits", arg: 3, scope: !15690, file: !3, line: 471, type: !944)
!15698 = !DILocation(line: 471, column: 19, scope: !15690)
!15699 = !DILocalVariable(name: "cnt", arg: 4, scope: !15690, file: !3, line: 472, type: !443)
!15700 = !DILocation(line: 472, column: 8, scope: !15690)
!15701 = !DILocalVariable(name: "tagmap", scope: !15690, file: !3, line: 474, type: !15702)
!15702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1211, size: 1024, elements: !5311)
!15703 = !DILocation(line: 474, column: 16, scope: !15690)
!15704 = !DILocalVariable(name: "group", scope: !15690, file: !3, line: 475, type: !443)
!15705 = !DILocation(line: 475, column: 6, scope: !15690)
!15706 = !DILocalVariable(name: "tagmap_len", scope: !15690, file: !3, line: 475, type: !443)
!15707 = !DILocation(line: 475, column: 13, scope: !15690)
!15708 = !DILocation(line: 477, column: 2, scope: !15690)
!15709 = !DILocation(line: 478, column: 13, scope: !15710)
!15710 = distinct !DILexicalBlock(scope: !15690, file: !3, line: 478, column: 2)
!15711 = !DILocation(line: 478, column: 7, scope: !15710)
!15712 = !DILocation(line: 478, column: 34, scope: !15713)
!15713 = distinct !DILexicalBlock(scope: !15710, file: !3, line: 478, column: 2)
!15714 = !DILocation(line: 478, column: 40, scope: !15713)
!15715 = !DILocation(line: 478, column: 2, scope: !15710)
!15716 = !DILocation(line: 479, column: 25, scope: !15713)
!15717 = !DILocation(line: 479, column: 34, scope: !15713)
!15718 = !DILocation(line: 479, column: 32, scope: !15713)
!15719 = !DILocation(line: 480, column: 7, scope: !15713)
!15720 = !DILocation(line: 480, column: 15, scope: !15713)
!15721 = !DILocation(line: 480, column: 20, scope: !15713)
!15722 = !DILocation(line: 479, column: 17, scope: !15713)
!15723 = !DILocation(line: 479, column: 14, scope: !15713)
!15724 = !DILocation(line: 479, column: 3, scope: !15713)
!15725 = !DILocation(line: 478, column: 50, scope: !15713)
!15726 = !DILocation(line: 478, column: 2, scope: !15713)
!15727 = distinct !{!15727, !15715, !15728}
!15728 = !DILocation(line: 480, column: 23, scope: !15710)
!15729 = !DILocation(line: 481, column: 2, scope: !15690)
!15730 = !DILocation(line: 483, column: 1, scope: !15690)
!15731 = distinct !DISubprogram(name: "ssleep", scope: !15732, file: !15732, line: 63, type: !15733, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!15732 = !DIFile(filename: "./include/linux/delay.h", directory: "/home/lizy2001/genbc/linux")
!15733 = !DISubroutineType(types: !15734)
!15734 = !{null, !7}
!15735 = !DILocalVariable(name: "seconds", arg: 1, scope: !15731, file: !15732, line: 63, type: !7)
!15736 = !DILocation(line: 63, column: 40, scope: !15731)
!15737 = !DILocation(line: 65, column: 9, scope: !15731)
!15738 = !DILocation(line: 65, column: 17, scope: !15731)
!15739 = !DILocation(line: 65, column: 2, scope: !15731)
!15740 = !DILocation(line: 66, column: 1, scope: !15731)
!15741 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !8277, file: !8277, line: 646, type: !8278, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!15742 = !DILocalVariable(name: "__ret", scope: !15743, file: !8277, line: 648, type: !898)
!15743 = distinct !DILexicalBlock(scope: !15741, file: !8277, line: 648, column: 9)
!15744 = !DILocation(line: 648, column: 9, scope: !15743)
!15745 = !DILocalVariable(name: "__edi", scope: !15743, file: !8277, line: 648, type: !898)
!15746 = !DILocalVariable(name: "__esi", scope: !15743, file: !8277, line: 648, type: !898)
!15747 = !DILocalVariable(name: "__edx", scope: !15743, file: !8277, line: 648, type: !898)
!15748 = !DILocalVariable(name: "__ecx", scope: !15743, file: !8277, line: 648, type: !898)
!15749 = !DILocalVariable(name: "__eax", scope: !15743, file: !8277, line: 648, type: !898)
!15750 = !DILocation(line: 648, column: 9, scope: !15751)
!15751 = distinct !DILexicalBlock(scope: !15752, file: !8277, line: 648, column: 9)
!15752 = distinct !DILexicalBlock(scope: !15743, file: !8277, line: 648, column: 9)
!15753 = !{i32 -2145529431, i32 -2145527116, i32 -2145526882, i32 -2145526831, i32 -2145526803, i32 -2145526778, i32 -2145527094, i32 -2145527081, i32 -2145526643, i32 -2145526524, i32 -2145526989, i32 -2145526962, i32 -2145526934, i32 -2145526904}
!15754 = !DILocalVariable(name: "__mask", scope: !15755, file: !8277, line: 648, type: !898)
!15755 = distinct !DILexicalBlock(scope: !15751, file: !8277, line: 648, column: 9)
!15756 = !DILocation(line: 648, column: 9, scope: !15755)
!15757 = !DILocation(line: 648, column: 9, scope: !15752)
!15758 = !DILocation(line: 648, column: 2, scope: !15741)
!15759 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !8277, file: !8277, line: 656, type: !3100, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!15760 = !DILocalVariable(name: "__edi", scope: !15761, file: !8277, line: 658, type: !898)
!15761 = distinct !DILexicalBlock(scope: !15759, file: !8277, line: 658, column: 2)
!15762 = !DILocation(line: 658, column: 2, scope: !15761)
!15763 = !DILocalVariable(name: "__esi", scope: !15761, file: !8277, line: 658, type: !898)
!15764 = !DILocalVariable(name: "__edx", scope: !15761, file: !8277, line: 658, type: !898)
!15765 = !DILocalVariable(name: "__ecx", scope: !15761, file: !8277, line: 658, type: !898)
!15766 = !DILocalVariable(name: "__eax", scope: !15761, file: !8277, line: 658, type: !898)
!15767 = !{i32 -2145522337, i32 -2145521605, i32 -2145521371, i32 -2145521320, i32 -2145521292, i32 -2145521267, i32 -2145521583, i32 -2145521570, i32 -2145521132, i32 -2145521013, i32 -2145521478, i32 -2145521451, i32 -2145521423, i32 -2145521393}
!15768 = !DILocation(line: 659, column: 1, scope: !15759)
!15769 = distinct !DISubprogram(name: "__list_add", scope: !7641, file: !7641, line: 63, type: !15770, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!15770 = !DISubroutineType(types: !15771)
!15771 = !{null, !903, !903, !903}
!15772 = !DILocalVariable(name: "new", arg: 1, scope: !15769, file: !7641, line: 63, type: !903)
!15773 = !DILocation(line: 63, column: 49, scope: !15769)
!15774 = !DILocalVariable(name: "prev", arg: 2, scope: !15769, file: !7641, line: 64, type: !903)
!15775 = !DILocation(line: 64, column: 28, scope: !15769)
!15776 = !DILocalVariable(name: "next", arg: 3, scope: !15769, file: !7641, line: 65, type: !903)
!15777 = !DILocation(line: 65, column: 28, scope: !15769)
!15778 = !DILocation(line: 67, column: 24, scope: !15779)
!15779 = distinct !DILexicalBlock(scope: !15769, file: !7641, line: 67, column: 6)
!15780 = !DILocation(line: 67, column: 29, scope: !15779)
!15781 = !DILocation(line: 67, column: 35, scope: !15779)
!15782 = !DILocation(line: 67, column: 7, scope: !15779)
!15783 = !DILocation(line: 67, column: 6, scope: !15769)
!15784 = !DILocation(line: 68, column: 3, scope: !15779)
!15785 = !DILocation(line: 70, column: 15, scope: !15769)
!15786 = !DILocation(line: 70, column: 2, scope: !15769)
!15787 = !DILocation(line: 70, column: 8, scope: !15769)
!15788 = !DILocation(line: 70, column: 13, scope: !15769)
!15789 = !DILocation(line: 71, column: 14, scope: !15769)
!15790 = !DILocation(line: 71, column: 2, scope: !15769)
!15791 = !DILocation(line: 71, column: 7, scope: !15769)
!15792 = !DILocation(line: 71, column: 12, scope: !15769)
!15793 = !DILocation(line: 72, column: 14, scope: !15769)
!15794 = !DILocation(line: 72, column: 2, scope: !15769)
!15795 = !DILocation(line: 72, column: 7, scope: !15769)
!15796 = !DILocation(line: 72, column: 12, scope: !15769)
!15797 = !DILocation(line: 73, column: 2, scope: !15769)
!15798 = !DILocation(line: 73, column: 2, scope: !15799)
!15799 = distinct !DILexicalBlock(scope: !15769, file: !7641, line: 73, column: 2)
!15800 = !DILocation(line: 73, column: 2, scope: !15801)
!15801 = distinct !DILexicalBlock(scope: !15799, file: !7641, line: 73, column: 2)
!15802 = !DILocation(line: 73, column: 2, scope: !15803)
!15803 = distinct !DILexicalBlock(scope: !15799, file: !7641, line: 73, column: 2)
!15804 = !DILocation(line: 74, column: 1, scope: !15769)
!15805 = distinct !DISubprogram(name: "__list_add_valid", scope: !7641, file: !7641, line: 45, type: !15806, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!15806 = !DISubroutineType(types: !15807)
!15807 = !{!1011, !903, !903, !903}
!15808 = !DILocalVariable(name: "new", arg: 1, scope: !15805, file: !7641, line: 45, type: !903)
!15809 = !DILocation(line: 45, column: 55, scope: !15805)
!15810 = !DILocalVariable(name: "prev", arg: 2, scope: !15805, file: !7641, line: 46, type: !903)
!15811 = !DILocation(line: 46, column: 23, scope: !15805)
!15812 = !DILocalVariable(name: "next", arg: 3, scope: !15805, file: !7641, line: 47, type: !903)
!15813 = !DILocation(line: 47, column: 23, scope: !15805)
!15814 = !DILocation(line: 49, column: 2, scope: !15805)
!15815 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !8277, file: !8277, line: 651, type: !15816, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!15816 = !DISubroutineType(types: !15817)
!15817 = !{null, !898}
!15818 = !DILocalVariable(name: "f", arg: 1, scope: !15815, file: !8277, line: 651, type: !898)
!15819 = !DILocation(line: 651, column: 65, scope: !15815)
!15820 = !DILocalVariable(name: "__edi", scope: !15821, file: !8277, line: 653, type: !898)
!15821 = distinct !DILexicalBlock(scope: !15815, file: !8277, line: 653, column: 2)
!15822 = !DILocation(line: 653, column: 2, scope: !15821)
!15823 = !DILocalVariable(name: "__esi", scope: !15821, file: !8277, line: 653, type: !898)
!15824 = !DILocalVariable(name: "__edx", scope: !15821, file: !8277, line: 653, type: !898)
!15825 = !DILocalVariable(name: "__ecx", scope: !15821, file: !8277, line: 653, type: !898)
!15826 = !DILocalVariable(name: "__eax", scope: !15821, file: !8277, line: 653, type: !898)
!15827 = !{i32 -2145524964, i32 -2145524214, i32 -2145523980, i32 -2145523929, i32 -2145523901, i32 -2145523876, i32 -2145524192, i32 -2145524179, i32 -2145523741, i32 -2145523622, i32 -2145524087, i32 -2145524060, i32 -2145524032, i32 -2145524002}
!15828 = !DILocation(line: 654, column: 1, scope: !15815)
!15829 = distinct !DISubprogram(name: "list_del_init", scope: !7641, file: !7641, line: 202, type: !7642, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!15830 = !DILocalVariable(name: "entry", arg: 1, scope: !15829, file: !7641, line: 202, type: !903)
!15831 = !DILocation(line: 202, column: 52, scope: !15829)
!15832 = !DILocation(line: 204, column: 19, scope: !15829)
!15833 = !DILocation(line: 204, column: 2, scope: !15829)
!15834 = !DILocation(line: 205, column: 17, scope: !15829)
!15835 = !DILocation(line: 205, column: 2, scope: !15829)
!15836 = !DILocation(line: 206, column: 1, scope: !15829)
!15837 = distinct !DISubprogram(name: "mtip_block_remove", scope: !3, file: !3, line: 3769, type: !6387, scopeLine: 3770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!15838 = !DILocalVariable(name: "dd", arg: 1, scope: !15837, file: !3, line: 3769, type: !945)
!15839 = !DILocation(line: 3769, column: 50, scope: !15837)
!15840 = !DILocalVariable(name: "kobj", scope: !15837, file: !3, line: 3771, type: !1028)
!15841 = !DILocation(line: 3771, column: 18, scope: !15837)
!15842 = !DILocation(line: 3773, column: 23, scope: !15837)
!15843 = !DILocation(line: 3773, column: 2, scope: !15837)
!15844 = !DILocation(line: 3775, column: 6, scope: !15845)
!15845 = distinct !DILexicalBlock(scope: !15837, file: !3, line: 3775, column: 6)
!15846 = !DILocation(line: 3775, column: 10, scope: !15845)
!15847 = !DILocation(line: 3775, column: 6, scope: !15837)
!15848 = !DILocation(line: 3776, column: 38, scope: !15849)
!15849 = distinct !DILexicalBlock(scope: !15845, file: !3, line: 3775, column: 28)
!15850 = !DILocation(line: 3776, column: 42, scope: !15849)
!15851 = !DILocation(line: 3776, column: 48, scope: !15849)
!15852 = !DILocation(line: 3776, column: 3, scope: !15849)
!15853 = !DILocation(line: 3777, column: 3, scope: !15849)
!15854 = !DILocation(line: 3778, column: 16, scope: !15849)
!15855 = !DILocation(line: 3778, column: 20, scope: !15849)
!15856 = !DILocation(line: 3778, column: 3, scope: !15849)
!15857 = !DILocation(line: 3779, column: 2, scope: !15849)
!15858 = !DILocation(line: 3782, column: 40, scope: !15859)
!15859 = distinct !DILexicalBlock(scope: !15837, file: !3, line: 3782, column: 6)
!15860 = !DILocation(line: 3782, column: 44, scope: !15859)
!15861 = !DILocation(line: 3782, column: 6, scope: !15859)
!15862 = !DILocation(line: 3782, column: 6, scope: !15837)
!15863 = !DILocation(line: 3783, column: 23, scope: !15864)
!15864 = distinct !DILexicalBlock(scope: !15859, file: !3, line: 3782, column: 54)
!15865 = !DILocation(line: 3783, column: 46, scope: !15864)
!15866 = !DILocation(line: 3783, column: 10, scope: !15864)
!15867 = !DILocation(line: 3783, column: 8, scope: !15864)
!15868 = !DILocation(line: 3784, column: 7, scope: !15869)
!15869 = distinct !DILexicalBlock(scope: !15864, file: !3, line: 3784, column: 7)
!15870 = !DILocation(line: 3784, column: 7, scope: !15864)
!15871 = !DILocation(line: 3785, column: 23, scope: !15872)
!15872 = distinct !DILexicalBlock(scope: !15869, file: !3, line: 3784, column: 13)
!15873 = !DILocation(line: 3785, column: 27, scope: !15872)
!15874 = !DILocation(line: 3785, column: 4, scope: !15872)
!15875 = !DILocation(line: 3786, column: 16, scope: !15872)
!15876 = !DILocation(line: 3786, column: 4, scope: !15872)
!15877 = !DILocation(line: 3787, column: 3, scope: !15872)
!15878 = !DILocation(line: 3788, column: 2, scope: !15864)
!15879 = !DILocation(line: 3790, column: 7, scope: !15880)
!15880 = distinct !DILexicalBlock(scope: !15837, file: !3, line: 3790, column: 6)
!15881 = !DILocation(line: 3790, column: 11, scope: !15880)
!15882 = !DILocation(line: 3790, column: 6, scope: !15837)
!15883 = !DILocation(line: 3795, column: 24, scope: !15884)
!15884 = distinct !DILexicalBlock(scope: !15885, file: !3, line: 3795, column: 7)
!15885 = distinct !DILexicalBlock(scope: !15880, file: !3, line: 3790, column: 15)
!15886 = !DILocation(line: 3795, column: 28, scope: !15884)
!15887 = !DILocation(line: 3795, column: 8, scope: !15884)
!15888 = !DILocation(line: 3795, column: 7, scope: !15885)
!15889 = !DILocation(line: 3796, column: 23, scope: !15884)
!15890 = !DILocation(line: 3796, column: 4, scope: !15884)
!15891 = !DILocation(line: 3797, column: 2, scope: !15885)
!15892 = !DILocation(line: 3799, column: 3, scope: !15880)
!15893 = !DILocation(line: 3802, column: 25, scope: !15837)
!15894 = !DILocation(line: 3802, column: 29, scope: !15837)
!15895 = !DILocation(line: 3802, column: 2, scope: !15837)
!15896 = !DILocation(line: 3803, column: 23, scope: !15837)
!15897 = !DILocation(line: 3803, column: 27, scope: !15837)
!15898 = !DILocation(line: 3803, column: 2, scope: !15837)
!15899 = !DILocation(line: 3804, column: 27, scope: !15837)
!15900 = !DILocation(line: 3804, column: 31, scope: !15837)
!15901 = !DILocation(line: 3804, column: 58, scope: !15837)
!15902 = !DILocation(line: 3804, column: 2, scope: !15837)
!15903 = !DILocation(line: 3805, column: 25, scope: !15837)
!15904 = !DILocation(line: 3805, column: 29, scope: !15837)
!15905 = !DILocation(line: 3805, column: 2, scope: !15837)
!15906 = !DILocation(line: 3811, column: 6, scope: !15907)
!15907 = distinct !DILexicalBlock(scope: !15837, file: !3, line: 3811, column: 6)
!15908 = !DILocation(line: 3811, column: 10, scope: !15907)
!15909 = !DILocation(line: 3811, column: 6, scope: !15837)
!15910 = !DILocation(line: 3812, column: 9, scope: !15911)
!15911 = distinct !DILexicalBlock(scope: !15907, file: !3, line: 3811, column: 16)
!15912 = !DILocation(line: 3812, column: 13, scope: !15911)
!15913 = !DILocation(line: 3812, column: 3, scope: !15911)
!15914 = !DILocation(line: 3813, column: 3, scope: !15911)
!15915 = !DILocation(line: 3813, column: 7, scope: !15911)
!15916 = !DILocation(line: 3813, column: 12, scope: !15911)
!15917 = !DILocation(line: 3814, column: 2, scope: !15911)
!15918 = !DILocation(line: 3815, column: 6, scope: !15919)
!15919 = distinct !DILexicalBlock(scope: !15837, file: !3, line: 3815, column: 6)
!15920 = !DILocation(line: 3815, column: 10, scope: !15919)
!15921 = !DILocation(line: 3815, column: 6, scope: !15837)
!15922 = !DILocation(line: 3816, column: 41, scope: !15923)
!15923 = distinct !DILexicalBlock(scope: !15924, file: !3, line: 3816, column: 7)
!15924 = distinct !DILexicalBlock(scope: !15919, file: !3, line: 3815, column: 16)
!15925 = !DILocation(line: 3816, column: 45, scope: !15923)
!15926 = !DILocation(line: 3816, column: 7, scope: !15923)
!15927 = !DILocation(line: 3816, column: 7, scope: !15924)
!15928 = !DILocation(line: 3817, column: 16, scope: !15923)
!15929 = !DILocation(line: 3817, column: 20, scope: !15923)
!15930 = !DILocation(line: 3817, column: 4, scope: !15923)
!15931 = !DILocation(line: 3818, column: 7, scope: !15932)
!15932 = distinct !DILexicalBlock(scope: !15924, file: !3, line: 3818, column: 7)
!15933 = !DILocation(line: 3818, column: 11, scope: !15932)
!15934 = !DILocation(line: 3818, column: 17, scope: !15932)
!15935 = !DILocation(line: 3818, column: 7, scope: !15924)
!15936 = !DILocation(line: 3819, column: 22, scope: !15937)
!15937 = distinct !DILexicalBlock(scope: !15932, file: !3, line: 3818, column: 24)
!15938 = !DILocation(line: 3819, column: 26, scope: !15937)
!15939 = !DILocation(line: 3819, column: 4, scope: !15937)
!15940 = !DILocation(line: 3820, column: 25, scope: !15937)
!15941 = !DILocation(line: 3820, column: 29, scope: !15937)
!15942 = !DILocation(line: 3820, column: 4, scope: !15937)
!15943 = !DILocation(line: 3821, column: 4, scope: !15937)
!15944 = !DILocation(line: 3821, column: 8, scope: !15937)
!15945 = !DILocation(line: 3821, column: 14, scope: !15937)
!15946 = !DILocation(line: 3822, column: 3, scope: !15937)
!15947 = !DILocation(line: 3823, column: 12, scope: !15924)
!15948 = !DILocation(line: 3823, column: 16, scope: !15924)
!15949 = !DILocation(line: 3823, column: 3, scope: !15924)
!15950 = !DILocation(line: 3824, column: 2, scope: !15924)
!15951 = !DILocation(line: 3825, column: 2, scope: !15837)
!15952 = !DILocation(line: 3825, column: 6, scope: !15837)
!15953 = !DILocation(line: 3825, column: 12, scope: !15837)
!15954 = !DILocation(line: 3827, column: 28, scope: !15837)
!15955 = !DILocation(line: 3827, column: 32, scope: !15837)
!15956 = !DILocation(line: 3827, column: 2, scope: !15837)
!15957 = !DILocation(line: 3830, column: 15, scope: !15837)
!15958 = !DILocation(line: 3830, column: 2, scope: !15837)
!15959 = !DILocation(line: 3832, column: 2, scope: !15837)
!15960 = distinct !DISubprogram(name: "__list_del_entry", scope: !7641, file: !7641, line: 130, type: !7642, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!15961 = !DILocalVariable(name: "entry", arg: 1, scope: !15960, file: !7641, line: 130, type: !903)
!15962 = !DILocation(line: 130, column: 55, scope: !15960)
!15963 = !DILocation(line: 132, column: 30, scope: !15964)
!15964 = distinct !DILexicalBlock(scope: !15960, file: !7641, line: 132, column: 6)
!15965 = !DILocation(line: 132, column: 7, scope: !15964)
!15966 = !DILocation(line: 132, column: 6, scope: !15960)
!15967 = !DILocation(line: 133, column: 3, scope: !15964)
!15968 = !DILocation(line: 135, column: 13, scope: !15960)
!15969 = !DILocation(line: 135, column: 20, scope: !15960)
!15970 = !DILocation(line: 135, column: 26, scope: !15960)
!15971 = !DILocation(line: 135, column: 33, scope: !15960)
!15972 = !DILocation(line: 135, column: 2, scope: !15960)
!15973 = !DILocation(line: 136, column: 1, scope: !15960)
!15974 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !7641, file: !7641, line: 51, type: !15975, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!15975 = !DISubroutineType(types: !15976)
!15976 = !{!1011, !903}
!15977 = !DILocalVariable(name: "entry", arg: 1, scope: !15974, file: !7641, line: 51, type: !903)
!15978 = !DILocation(line: 51, column: 61, scope: !15974)
!15979 = !DILocation(line: 53, column: 2, scope: !15974)
!15980 = distinct !DISubprogram(name: "__list_del", scope: !7641, file: !7641, line: 110, type: !8288, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!15981 = !DILocalVariable(name: "prev", arg: 1, scope: !15980, file: !7641, line: 110, type: !903)
!15982 = !DILocation(line: 110, column: 50, scope: !15980)
!15983 = !DILocalVariable(name: "next", arg: 2, scope: !15980, file: !7641, line: 110, type: !903)
!15984 = !DILocation(line: 110, column: 75, scope: !15980)
!15985 = !DILocation(line: 112, column: 15, scope: !15980)
!15986 = !DILocation(line: 112, column: 2, scope: !15980)
!15987 = !DILocation(line: 112, column: 8, scope: !15980)
!15988 = !DILocation(line: 112, column: 13, scope: !15980)
!15989 = !DILocation(line: 113, column: 2, scope: !15980)
!15990 = !DILocation(line: 113, column: 2, scope: !15991)
!15991 = distinct !DILexicalBlock(scope: !15980, file: !7641, line: 113, column: 2)
!15992 = !DILocation(line: 113, column: 2, scope: !15993)
!15993 = distinct !DILexicalBlock(scope: !15991, file: !7641, line: 113, column: 2)
!15994 = !DILocation(line: 113, column: 2, scope: !15995)
!15995 = distinct !DILexicalBlock(scope: !15991, file: !7641, line: 113, column: 2)
!15996 = !DILocation(line: 114, column: 1, scope: !15980)
!15997 = distinct !DISubprogram(name: "mtip_hw_sysfs_exit", scope: !3, file: !3, line: 2418, type: !9338, scopeLine: 2419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!15998 = !DILocalVariable(name: "dd", arg: 1, scope: !15997, file: !3, line: 2418, type: !945)
!15999 = !DILocation(line: 2418, column: 51, scope: !15997)
!16000 = !DILocalVariable(name: "kobj", arg: 2, scope: !15997, file: !3, line: 2418, type: !1028)
!16001 = !DILocation(line: 2418, column: 71, scope: !15997)
!16002 = !DILocation(line: 2420, column: 7, scope: !16003)
!16003 = distinct !DILexicalBlock(scope: !15997, file: !3, line: 2420, column: 6)
!16004 = !DILocation(line: 2420, column: 12, scope: !16003)
!16005 = !DILocation(line: 2420, column: 16, scope: !16003)
!16006 = !DILocation(line: 2420, column: 6, scope: !15997)
!16007 = !DILocation(line: 2421, column: 3, scope: !16003)
!16008 = !DILocation(line: 2423, column: 20, scope: !15997)
!16009 = !DILocation(line: 2423, column: 2, scope: !15997)
!16010 = !DILocation(line: 2425, column: 2, scope: !15997)
!16011 = !DILocation(line: 2426, column: 1, scope: !15997)
!16012 = distinct !DISubprogram(name: "mtip_standby_drive", scope: !3, file: !3, line: 3011, type: !6387, scopeLine: 3012, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!16013 = !DILocalVariable(name: "dd", arg: 1, scope: !16012, file: !3, line: 3011, type: !945)
!16014 = !DILocation(line: 3011, column: 51, scope: !16012)
!16015 = !DILocalVariable(name: "rv", scope: !16012, file: !3, line: 3013, type: !443)
!16016 = !DILocation(line: 3013, column: 6, scope: !16012)
!16017 = !DILocation(line: 3015, column: 6, scope: !16018)
!16018 = distinct !DILexicalBlock(scope: !16012, file: !3, line: 3015, column: 6)
!16019 = !DILocation(line: 3015, column: 10, scope: !16018)
!16020 = !DILocation(line: 3015, column: 13, scope: !16018)
!16021 = !DILocation(line: 3015, column: 17, scope: !16018)
!16022 = !DILocation(line: 3015, column: 21, scope: !16018)
!16023 = !DILocation(line: 3015, column: 6, scope: !16012)
!16024 = !DILocation(line: 3016, column: 3, scope: !16018)
!16025 = !DILocation(line: 3021, column: 38, scope: !16026)
!16026 = distinct !DILexicalBlock(scope: !16012, file: !3, line: 3021, column: 6)
!16027 = !DILocation(line: 3021, column: 42, scope: !16026)
!16028 = !DILocation(line: 3021, column: 48, scope: !16026)
!16029 = !DILocation(line: 3021, column: 7, scope: !16026)
!16030 = !DILocation(line: 3021, column: 55, scope: !16026)
!16031 = !DILocation(line: 3022, column: 46, scope: !16026)
!16032 = !DILocation(line: 3022, column: 50, scope: !16026)
!16033 = !DILocation(line: 3022, column: 7, scope: !16026)
!16034 = !DILocation(line: 3022, column: 59, scope: !16026)
!16035 = !DILocation(line: 3023, column: 40, scope: !16026)
!16036 = !DILocation(line: 3023, column: 44, scope: !16026)
!16037 = !DILocation(line: 3023, column: 7, scope: !16026)
!16038 = !DILocation(line: 3021, column: 6, scope: !16012)
!16039 = !DILocation(line: 3024, column: 31, scope: !16040)
!16040 = distinct !DILexicalBlock(scope: !16026, file: !3, line: 3023, column: 54)
!16041 = !DILocation(line: 3024, column: 35, scope: !16040)
!16042 = !DILocation(line: 3024, column: 8, scope: !16040)
!16043 = !DILocation(line: 3024, column: 6, scope: !16040)
!16044 = !DILocation(line: 3025, column: 7, scope: !16045)
!16045 = distinct !DILexicalBlock(scope: !16040, file: !3, line: 3025, column: 7)
!16046 = !DILocation(line: 3025, column: 7, scope: !16040)
!16047 = !DILocation(line: 3026, column: 4, scope: !16045)
!16048 = !DILocation(line: 3028, column: 2, scope: !16040)
!16049 = !DILocation(line: 3029, column: 9, scope: !16012)
!16050 = !DILocation(line: 3029, column: 2, scope: !16012)
!16051 = !DILocation(line: 3030, column: 1, scope: !16012)
!16052 = distinct !DISubprogram(name: "mtip_no_dev_cleanup", scope: !3, file: !3, line: 3750, type: !15563, scopeLine: 3751, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!16053 = !DILocalVariable(name: "rq", arg: 1, scope: !16052, file: !3, line: 3750, type: !3261)
!16054 = !DILocation(line: 3750, column: 49, scope: !16052)
!16055 = !DILocalVariable(name: "data", arg: 2, scope: !16052, file: !3, line: 3750, type: !890)
!16056 = !DILocation(line: 3750, column: 59, scope: !16052)
!16057 = !DILocalVariable(name: "reserv", arg: 3, scope: !16052, file: !3, line: 3750, type: !1011)
!16058 = !DILocation(line: 3750, column: 70, scope: !16052)
!16059 = !DILocalVariable(name: "cmd", scope: !16052, file: !3, line: 3752, type: !8412)
!16060 = !DILocation(line: 3752, column: 19, scope: !16052)
!16061 = !DILocation(line: 3752, column: 42, scope: !16052)
!16062 = !DILocation(line: 3752, column: 25, scope: !16052)
!16063 = !DILocation(line: 3754, column: 2, scope: !16052)
!16064 = !DILocation(line: 3754, column: 7, scope: !16052)
!16065 = !DILocation(line: 3754, column: 14, scope: !16052)
!16066 = !DILocation(line: 3755, column: 26, scope: !16052)
!16067 = !DILocation(line: 3755, column: 2, scope: !16052)
!16068 = !DILocation(line: 3756, column: 2, scope: !16052)
!16069 = distinct !DISubprogram(name: "sysfs_remove_file", scope: !1101, file: !1101, line: 602, type: !16070, scopeLine: 604, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!16070 = !DISubroutineType(types: !16071)
!16071 = !{null, !1028, !15227}
!16072 = !DILocalVariable(name: "kobj", arg: 1, scope: !16069, file: !1101, line: 602, type: !1028)
!16073 = !DILocation(line: 602, column: 54, scope: !16069)
!16074 = !DILocalVariable(name: "attr", arg: 2, scope: !16069, file: !1101, line: 603, type: !15227)
!16075 = !DILocation(line: 603, column: 34, scope: !16069)
!16076 = !DILocation(line: 605, column: 23, scope: !16069)
!16077 = !DILocation(line: 605, column: 29, scope: !16069)
!16078 = !DILocation(line: 605, column: 2, scope: !16069)
!16079 = !DILocation(line: 606, column: 1, scope: !16069)
!16080 = distinct !DISubprogram(name: "mtip_standby_immediate", scope: !3, file: !3, line: 1212, type: !16081, scopeLine: 1213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!16081 = !DISubroutineType(types: !16082)
!16082 = !{!443, !6168}
!16083 = !DILocalVariable(name: "port", arg: 1, scope: !16080, file: !3, line: 1212, type: !6168)
!16084 = !DILocation(line: 1212, column: 53, scope: !16080)
!16085 = !DILocalVariable(name: "rv", scope: !16080, file: !3, line: 1214, type: !443)
!16086 = !DILocation(line: 1214, column: 6, scope: !16080)
!16087 = !DILocalVariable(name: "fis", scope: !16080, file: !3, line: 1215, type: !6242)
!16088 = !DILocation(line: 1215, column: 25, scope: !16080)
!16089 = !DILocalVariable(name: "start", scope: !16080, file: !3, line: 1216, type: !898)
!16090 = !DILocation(line: 1216, column: 16, scope: !16080)
!16091 = !DILocalVariable(name: "timeout", scope: !16080, file: !3, line: 1217, type: !7)
!16092 = !DILocation(line: 1217, column: 15, scope: !16080)
!16093 = !DILocation(line: 1220, column: 2, scope: !16080)
!16094 = !DILocation(line: 1221, column: 6, scope: !16080)
!16095 = !DILocation(line: 1221, column: 11, scope: !16080)
!16096 = !DILocation(line: 1222, column: 6, scope: !16080)
!16097 = !DILocation(line: 1222, column: 11, scope: !16080)
!16098 = !DILocation(line: 1223, column: 6, scope: !16080)
!16099 = !DILocation(line: 1223, column: 14, scope: !16080)
!16100 = !DILocation(line: 1225, column: 19, scope: !16080)
!16101 = !DILocation(line: 1225, column: 25, scope: !16080)
!16102 = !DILocation(line: 1225, column: 2, scope: !16080)
!16103 = !DILocation(line: 1227, column: 10, scope: !16080)
!16104 = !DILocation(line: 1227, column: 8, scope: !16080)
!16105 = !DILocation(line: 1228, column: 34, scope: !16080)
!16106 = !DILocation(line: 1234, column: 6, scope: !16080)
!16107 = !DILocation(line: 1228, column: 7, scope: !16080)
!16108 = !DILocation(line: 1228, column: 5, scope: !16080)
!16109 = !DILocation(line: 1237, column: 6, scope: !16110)
!16110 = distinct !DILexicalBlock(scope: !16080, file: !3, line: 1237, column: 6)
!16111 = !DILocation(line: 1237, column: 6, scope: !16080)
!16112 = !DILocation(line: 1238, column: 3, scope: !16110)
!16113 = !DILocation(line: 1241, column: 9, scope: !16080)
!16114 = !DILocation(line: 1241, column: 2, scope: !16080)
!16115 = distinct !DISubprogram(name: "mtip_block_suspend", scope: !3, file: !3, line: 3871, type: !6387, scopeLine: 3872, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!16116 = !DILocalVariable(name: "dd", arg: 1, scope: !16115, file: !3, line: 3871, type: !945)
!16117 = !DILocation(line: 3871, column: 51, scope: !16115)
!16118 = !DILocation(line: 3873, column: 2, scope: !16115)
!16119 = !DILocation(line: 3875, column: 18, scope: !16115)
!16120 = !DILocation(line: 3875, column: 2, scope: !16115)
!16121 = !DILocation(line: 3876, column: 2, scope: !16115)
!16122 = distinct !DISubprogram(name: "mtip_hw_suspend", scope: !3, file: !3, line: 3100, type: !6387, scopeLine: 3101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!16123 = !DILocalVariable(name: "dd", arg: 1, scope: !16122, file: !3, line: 3100, type: !945)
!16124 = !DILocation(line: 3100, column: 48, scope: !16122)
!16125 = !DILocation(line: 3106, column: 25, scope: !16126)
!16126 = distinct !DILexicalBlock(scope: !16122, file: !3, line: 3106, column: 6)
!16127 = !DILocation(line: 3106, column: 6, scope: !16126)
!16128 = !DILocation(line: 3106, column: 29, scope: !16126)
!16129 = !DILocation(line: 3106, column: 6, scope: !16122)
!16130 = !DILocation(line: 3107, column: 3, scope: !16131)
!16131 = distinct !DILexicalBlock(scope: !16126, file: !3, line: 3106, column: 35)
!16132 = !DILocation(line: 3109, column: 3, scope: !16131)
!16133 = !DILocation(line: 3113, column: 15, scope: !16122)
!16134 = !DILocation(line: 3113, column: 19, scope: !16122)
!16135 = !DILocation(line: 3113, column: 24, scope: !16122)
!16136 = !DILocation(line: 3113, column: 9, scope: !16122)
!16137 = !DILocation(line: 3113, column: 36, scope: !16122)
!16138 = !DILocation(line: 3114, column: 4, scope: !16122)
!16139 = !DILocation(line: 3114, column: 8, scope: !16122)
!16140 = !DILocation(line: 3114, column: 13, scope: !16122)
!16141 = !DILocation(line: 3113, column: 2, scope: !16122)
!16142 = !DILocation(line: 3115, column: 19, scope: !16122)
!16143 = !DILocation(line: 3115, column: 23, scope: !16122)
!16144 = !DILocation(line: 3115, column: 2, scope: !16122)
!16145 = !DILocation(line: 3117, column: 2, scope: !16122)
!16146 = !DILocation(line: 3118, column: 1, scope: !16122)
!16147 = distinct !DISubprogram(name: "mtip_block_resume", scope: !3, file: !3, line: 3879, type: !6387, scopeLine: 3880, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!16148 = !DILocalVariable(name: "dd", arg: 1, scope: !16147, file: !3, line: 3879, type: !945)
!16149 = !DILocation(line: 3879, column: 50, scope: !16147)
!16150 = !DILocation(line: 3881, column: 2, scope: !16147)
!16151 = !DILocation(line: 3883, column: 17, scope: !16147)
!16152 = !DILocation(line: 3883, column: 2, scope: !16147)
!16153 = !DILocation(line: 3884, column: 2, scope: !16147)
!16154 = distinct !DISubprogram(name: "mtip_hw_resume", scope: !3, file: !3, line: 3132, type: !6387, scopeLine: 3133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!16155 = !DILocalVariable(name: "dd", arg: 1, scope: !16154, file: !3, line: 3132, type: !945)
!16156 = !DILocation(line: 3132, column: 47, scope: !16154)
!16157 = !DILocation(line: 3135, column: 12, scope: !16154)
!16158 = !DILocation(line: 3135, column: 2, scope: !16154)
!16159 = !DILocation(line: 3138, column: 21, scope: !16160)
!16160 = distinct !DILexicalBlock(scope: !16154, file: !3, line: 3138, column: 6)
!16161 = !DILocation(line: 3138, column: 6, scope: !16160)
!16162 = !DILocation(line: 3138, column: 25, scope: !16160)
!16163 = !DILocation(line: 3138, column: 6, scope: !16154)
!16164 = !DILocation(line: 3139, column: 3, scope: !16165)
!16165 = distinct !DILexicalBlock(scope: !16160, file: !3, line: 3138, column: 31)
!16166 = !DILocation(line: 3141, column: 3, scope: !16165)
!16167 = !DILocation(line: 3148, column: 17, scope: !16154)
!16168 = !DILocation(line: 3148, column: 21, scope: !16154)
!16169 = !DILocation(line: 3148, column: 2, scope: !16154)
!16170 = !DILocation(line: 3149, column: 18, scope: !16154)
!16171 = !DILocation(line: 3149, column: 22, scope: !16154)
!16172 = !DILocation(line: 3149, column: 2, scope: !16154)
!16173 = !DILocation(line: 3152, column: 15, scope: !16154)
!16174 = !DILocation(line: 3152, column: 19, scope: !16154)
!16175 = !DILocation(line: 3152, column: 24, scope: !16154)
!16176 = !DILocation(line: 3152, column: 9, scope: !16154)
!16177 = !DILocation(line: 3152, column: 36, scope: !16154)
!16178 = !DILocation(line: 3153, column: 4, scope: !16154)
!16179 = !DILocation(line: 3153, column: 8, scope: !16154)
!16180 = !DILocation(line: 3153, column: 13, scope: !16154)
!16181 = !DILocation(line: 3152, column: 2, scope: !16154)
!16182 = !DILocation(line: 3155, column: 2, scope: !16154)
!16183 = !DILocation(line: 3156, column: 1, scope: !16154)
!16184 = distinct !DISubprogram(name: "mtip_block_shutdown", scope: !3, file: !3, line: 3847, type: !6387, scopeLine: 3848, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!16185 = !DILocalVariable(name: "dd", arg: 1, scope: !16184, file: !3, line: 3847, type: !945)
!16186 = !DILocation(line: 3847, column: 52, scope: !16184)
!16187 = !DILocation(line: 3849, column: 19, scope: !16184)
!16188 = !DILocation(line: 3849, column: 2, scope: !16184)
!16189 = !DILocation(line: 3852, column: 6, scope: !16190)
!16190 = distinct !DILexicalBlock(scope: !16184, file: !3, line: 3852, column: 6)
!16191 = !DILocation(line: 3852, column: 10, scope: !16190)
!16192 = !DILocation(line: 3852, column: 6, scope: !16184)
!16193 = !DILocation(line: 3853, column: 3, scope: !16194)
!16194 = distinct !DILexicalBlock(scope: !16190, file: !3, line: 3852, column: 16)
!16195 = !DILocation(line: 3856, column: 41, scope: !16196)
!16196 = distinct !DILexicalBlock(scope: !16194, file: !3, line: 3856, column: 7)
!16197 = !DILocation(line: 3856, column: 45, scope: !16196)
!16198 = !DILocation(line: 3856, column: 7, scope: !16196)
!16199 = !DILocation(line: 3856, column: 7, scope: !16194)
!16200 = !DILocation(line: 3857, column: 16, scope: !16196)
!16201 = !DILocation(line: 3857, column: 20, scope: !16196)
!16202 = !DILocation(line: 3857, column: 4, scope: !16196)
!16203 = !DILocation(line: 3858, column: 7, scope: !16204)
!16204 = distinct !DILexicalBlock(scope: !16194, file: !3, line: 3858, column: 7)
!16205 = !DILocation(line: 3858, column: 11, scope: !16204)
!16206 = !DILocation(line: 3858, column: 17, scope: !16204)
!16207 = !DILocation(line: 3858, column: 7, scope: !16194)
!16208 = !DILocation(line: 3859, column: 22, scope: !16209)
!16209 = distinct !DILexicalBlock(scope: !16204, file: !3, line: 3858, column: 24)
!16210 = !DILocation(line: 3859, column: 26, scope: !16209)
!16211 = !DILocation(line: 3859, column: 4, scope: !16209)
!16212 = !DILocation(line: 3860, column: 25, scope: !16209)
!16213 = !DILocation(line: 3860, column: 29, scope: !16209)
!16214 = !DILocation(line: 3860, column: 4, scope: !16209)
!16215 = !DILocation(line: 3861, column: 3, scope: !16209)
!16216 = !DILocation(line: 3862, column: 12, scope: !16194)
!16217 = !DILocation(line: 3862, column: 16, scope: !16194)
!16218 = !DILocation(line: 3862, column: 3, scope: !16194)
!16219 = !DILocation(line: 3863, column: 3, scope: !16194)
!16220 = !DILocation(line: 3863, column: 7, scope: !16194)
!16221 = !DILocation(line: 3863, column: 13, scope: !16194)
!16222 = !DILocation(line: 3864, column: 3, scope: !16194)
!16223 = !DILocation(line: 3864, column: 7, scope: !16194)
!16224 = !DILocation(line: 3864, column: 13, scope: !16194)
!16225 = !DILocation(line: 3865, column: 2, scope: !16194)
!16226 = !DILocation(line: 3867, column: 28, scope: !16184)
!16227 = !DILocation(line: 3867, column: 32, scope: !16184)
!16228 = !DILocation(line: 3867, column: 2, scope: !16184)
!16229 = !DILocation(line: 3868, column: 2, scope: !16184)
!16230 = distinct !DISubprogram(name: "mtip_hw_shutdown", scope: !3, file: !3, line: 3077, type: !6387, scopeLine: 3078, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!16231 = !DILocalVariable(name: "dd", arg: 1, scope: !16230, file: !3, line: 3077, type: !945)
!16232 = !DILocation(line: 3077, column: 49, scope: !16230)
!16233 = !DILocation(line: 3083, column: 21, scope: !16230)
!16234 = !DILocation(line: 3083, column: 2, scope: !16230)
!16235 = !DILocation(line: 3085, column: 2, scope: !16230)
!16236 = distinct !DISubprogram(name: "debugfs_remove", scope: !6451, file: !6451, line: 217, type: !4617, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!16237 = !DILocalVariable(name: "dentry", arg: 1, scope: !16236, file: !6451, line: 217, type: !1173)
!16238 = !DILocation(line: 217, column: 50, scope: !16236)
!16239 = !DILocation(line: 218, column: 3, scope: !16236)
!16240 = distinct !DISubprogram(name: "mtip_hw_read_device_status", scope: !3, file: !3, line: 2238, type: !4742, scopeLine: 2240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!16241 = !DILocation(line: 138, column: 29, scope: !10826, inlinedAt: !16242)
!16242 = distinct !DILocation(line: 199, column: 6, scope: !10832, inlinedAt: !16243)
!16243 = distinct !DILocation(line: 2259, column: 9, scope: !16240)
!16244 = !DILocation(line: 138, column: 42, scope: !10826, inlinedAt: !16242)
!16245 = !DILocation(line: 138, column: 54, scope: !10826, inlinedAt: !16242)
!16246 = !DILocation(line: 140, column: 6, scope: !10826, inlinedAt: !16242)
!16247 = !DILocation(line: 150, column: 6, scope: !10848, inlinedAt: !16242)
!16248 = !DILocation(line: 197, column: 27, scope: !10834, inlinedAt: !16243)
!16249 = !DILocation(line: 197, column: 43, scope: !10834, inlinedAt: !16243)
!16250 = !DILocation(line: 197, column: 63, scope: !10834, inlinedAt: !16243)
!16251 = !DILocalVariable(name: "f", arg: 1, scope: !16240, file: !3, line: 2238, type: !1151)
!16252 = !DILocation(line: 2238, column: 56, scope: !16240)
!16253 = !DILocalVariable(name: "ubuf", arg: 2, scope: !16240, file: !3, line: 2238, type: !1076)
!16254 = !DILocation(line: 2238, column: 72, scope: !16240)
!16255 = !DILocalVariable(name: "len", arg: 3, scope: !16240, file: !3, line: 2239, type: !1121)
!16256 = !DILocation(line: 2239, column: 14, scope: !16240)
!16257 = !DILocalVariable(name: "offset", arg: 4, scope: !16240, file: !3, line: 2239, type: !1535)
!16258 = !DILocation(line: 2239, column: 27, scope: !16240)
!16259 = !DILocalVariable(name: "dd", scope: !16240, file: !3, line: 2241, type: !945)
!16260 = !DILocation(line: 2241, column: 22, scope: !16240)
!16261 = !DILocation(line: 2241, column: 50, scope: !16240)
!16262 = !DILocation(line: 2241, column: 53, scope: !16240)
!16263 = !DILocation(line: 2241, column: 28, scope: !16240)
!16264 = !DILocalVariable(name: "size", scope: !16240, file: !3, line: 2242, type: !443)
!16265 = !DILocation(line: 2242, column: 6, scope: !16240)
!16266 = !DILocation(line: 2242, column: 14, scope: !16240)
!16267 = !DILocation(line: 2242, column: 13, scope: !16240)
!16268 = !DILocalVariable(name: "buf", scope: !16240, file: !3, line: 2243, type: !1076)
!16269 = !DILocation(line: 2243, column: 8, scope: !16240)
!16270 = !DILocalVariable(name: "rv", scope: !16240, file: !3, line: 2244, type: !443)
!16271 = !DILocation(line: 2244, column: 6, scope: !16240)
!16272 = !DILocation(line: 2246, column: 7, scope: !16273)
!16273 = distinct !DILexicalBlock(scope: !16240, file: !3, line: 2246, column: 6)
!16274 = !DILocation(line: 2246, column: 11, scope: !16273)
!16275 = !DILocation(line: 2246, column: 15, scope: !16273)
!16276 = !DILocation(line: 2246, column: 14, scope: !16273)
!16277 = !DILocation(line: 2246, column: 6, scope: !16240)
!16278 = !DILocation(line: 2247, column: 3, scope: !16273)
!16279 = !DILocation(line: 2249, column: 8, scope: !16240)
!16280 = !DILocation(line: 2249, column: 6, scope: !16240)
!16281 = !DILocation(line: 2250, column: 7, scope: !16282)
!16282 = distinct !DILexicalBlock(scope: !16240, file: !3, line: 2250, column: 6)
!16283 = !DILocation(line: 2250, column: 6, scope: !16240)
!16284 = !DILocation(line: 2251, column: 3, scope: !16285)
!16285 = distinct !DILexicalBlock(scope: !16282, file: !3, line: 2250, column: 12)
!16286 = !DILocation(line: 2253, column: 3, scope: !16285)
!16287 = !DILocation(line: 2256, column: 35, scope: !16240)
!16288 = !DILocation(line: 2256, column: 10, scope: !16240)
!16289 = !DILocation(line: 2256, column: 7, scope: !16240)
!16290 = !DILocation(line: 2258, column: 12, scope: !16240)
!16291 = !DILocation(line: 2258, column: 20, scope: !16240)
!16292 = !DILocation(line: 2258, column: 17, scope: !16240)
!16293 = !DILocation(line: 2258, column: 26, scope: !16240)
!16294 = !DILocation(line: 2258, column: 33, scope: !16240)
!16295 = !DILocation(line: 2258, column: 3, scope: !16240)
!16296 = !DILocation(line: 2258, column: 10, scope: !16240)
!16297 = !DILocation(line: 2259, column: 22, scope: !16240)
!16298 = !DILocation(line: 2259, column: 28, scope: !16240)
!16299 = !DILocation(line: 2259, column: 34, scope: !16240)
!16300 = !DILocation(line: 2259, column: 33, scope: !16240)
!16301 = !DILocation(line: 199, column: 6, scope: !10832, inlinedAt: !16243)
!16302 = !DILocation(line: 141, column: 6, scope: !10946, inlinedAt: !16242)
!16303 = !DILocation(line: 0, scope: !10946, inlinedAt: !16242)
!16304 = !DILocation(line: 141, column: 6, scope: !10826, inlinedAt: !16242)
!16305 = !DILocation(line: 142, column: 29, scope: !10950, inlinedAt: !16242)
!16306 = !DILocation(line: 142, column: 8, scope: !10950, inlinedAt: !16242)
!16307 = !DILocation(line: 142, column: 7, scope: !10951, inlinedAt: !16242)
!16308 = !DILocation(line: 143, column: 18, scope: !10950, inlinedAt: !16242)
!16309 = !DILocation(line: 143, column: 22, scope: !10950, inlinedAt: !16242)
!16310 = !DILocation(line: 143, column: 4, scope: !10950, inlinedAt: !16242)
!16311 = !DILocation(line: 144, column: 12, scope: !10958, inlinedAt: !16242)
!16312 = !DILocation(line: 144, column: 12, scope: !10950, inlinedAt: !16242)
!16313 = !DILocation(line: 145, column: 4, scope: !10958, inlinedAt: !16242)
!16314 = !DILocation(line: 147, column: 4, scope: !10958, inlinedAt: !16242)
!16315 = !DILocation(line: 148, column: 3, scope: !10951, inlinedAt: !16242)
!16316 = !DILocation(line: 150, column: 6, scope: !10964, inlinedAt: !16242)
!16317 = !DILocation(line: 150, column: 6, scope: !10966, inlinedAt: !16242)
!16318 = !DILocation(line: 150, column: 6, scope: !10970, inlinedAt: !16242)
!16319 = !DILocation(line: 150, column: 6, scope: !10967, inlinedAt: !16242)
!16320 = !DILocation(line: 150, column: 6, scope: !10849, inlinedAt: !16242)
!16321 = !DILocation(line: 150, column: 6, scope: !10826, inlinedAt: !16242)
!16322 = !DILocation(line: 151, column: 3, scope: !10849, inlinedAt: !16242)
!16323 = !DILocation(line: 152, column: 20, scope: !10826, inlinedAt: !16242)
!16324 = !DILocation(line: 152, column: 26, scope: !10826, inlinedAt: !16242)
!16325 = !DILocation(line: 152, column: 33, scope: !10826, inlinedAt: !16242)
!16326 = !DILocation(line: 152, column: 2, scope: !10826, inlinedAt: !16242)
!16327 = !DILocation(line: 153, column: 2, scope: !10826, inlinedAt: !16242)
!16328 = !DILocation(line: 154, column: 1, scope: !10826, inlinedAt: !16242)
!16329 = !DILocation(line: 199, column: 6, scope: !10834, inlinedAt: !16243)
!16330 = !DILocation(line: 200, column: 21, scope: !10832, inlinedAt: !16243)
!16331 = !DILocation(line: 200, column: 25, scope: !10832, inlinedAt: !16243)
!16332 = !DILocation(line: 200, column: 31, scope: !10832, inlinedAt: !16243)
!16333 = !DILocation(line: 200, column: 7, scope: !10832, inlinedAt: !16243)
!16334 = !DILocation(line: 200, column: 5, scope: !10832, inlinedAt: !16243)
!16335 = !DILocation(line: 200, column: 3, scope: !10832, inlinedAt: !16243)
!16336 = !DILocation(line: 201, column: 9, scope: !10834, inlinedAt: !16243)
!16337 = !DILocation(line: 2259, column: 9, scope: !16240)
!16338 = !DILocation(line: 2259, column: 7, scope: !16240)
!16339 = !DILocation(line: 2260, column: 6, scope: !16340)
!16340 = distinct !DILexicalBlock(scope: !16240, file: !3, line: 2260, column: 6)
!16341 = !DILocation(line: 2260, column: 6, scope: !16240)
!16342 = !DILocation(line: 2261, column: 6, scope: !16340)
!16343 = !DILocation(line: 2261, column: 3, scope: !16340)
!16344 = !DILocation(line: 2263, column: 8, scope: !16240)
!16345 = !DILocation(line: 2263, column: 2, scope: !16240)
!16346 = !DILocation(line: 2264, column: 9, scope: !16240)
!16347 = !DILocation(line: 2264, column: 14, scope: !16240)
!16348 = !DILocation(line: 2264, column: 20, scope: !16240)
!16349 = !DILocation(line: 2264, column: 19, scope: !16240)
!16350 = !DILocation(line: 2264, column: 2, scope: !16240)
!16351 = !DILocation(line: 2265, column: 1, scope: !16240)
!16352 = distinct !DISubprogram(name: "show_device_status", scope: !3, file: !3, line: 2165, type: !16353, scopeLine: 2166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1049)
!16353 = !DISubroutineType(types: !16354)
!16354 = !{!1107, !5292, !1076}
!16355 = !DILocation(line: 407, column: 64, scope: !6527, inlinedAt: !16356)
!16356 = distinct !DILocation(line: 2233, column: 2, scope: !16352)
!16357 = !DILocation(line: 407, column: 84, scope: !6527, inlinedAt: !16356)
!16358 = !DILocation(line: 327, column: 67, scope: !6457, inlinedAt: !16359)
!16359 = distinct !DILocation(line: 2173, column: 2, scope: !16360)
!16360 = distinct !DILexicalBlock(scope: !16361, file: !3, line: 2173, column: 2)
!16361 = distinct !DILexicalBlock(scope: !16362, file: !3, line: 2173, column: 2)
!16362 = distinct !DILexicalBlock(scope: !16363, file: !3, line: 2173, column: 2)
!16363 = distinct !DILexicalBlock(scope: !16364, file: !3, line: 2173, column: 2)
!16364 = distinct !DILexicalBlock(scope: !16352, file: !3, line: 2173, column: 2)
!16365 = !DILocalVariable(name: "drv", arg: 1, scope: !16352, file: !3, line: 2165, type: !5292)
!16366 = !DILocation(line: 2165, column: 57, scope: !16352)
!16367 = !DILocalVariable(name: "buf", arg: 2, scope: !16352, file: !3, line: 2165, type: !1076)
!16368 = !DILocation(line: 2165, column: 68, scope: !16352)
!16369 = !DILocalVariable(name: "size", scope: !16352, file: !3, line: 2167, type: !443)
!16370 = !DILocation(line: 2167, column: 6, scope: !16352)
!16371 = !DILocalVariable(name: "dd", scope: !16352, file: !3, line: 2168, type: !945)
!16372 = !DILocation(line: 2168, column: 22, scope: !16352)
!16373 = !DILocalVariable(name: "tmp", scope: !16352, file: !3, line: 2168, type: !945)
!16374 = !DILocation(line: 2168, column: 27, scope: !16352)
!16375 = !DILocalVariable(name: "flags", scope: !16352, file: !3, line: 2169, type: !898)
!16376 = !DILocation(line: 2169, column: 16, scope: !16352)
!16377 = !DILocalVariable(name: "id_buf", scope: !16352, file: !3, line: 2170, type: !14938)
!16378 = !DILocation(line: 2170, column: 7, scope: !16352)
!16379 = !DILocalVariable(name: "status", scope: !16352, file: !3, line: 2171, type: !1697)
!16380 = !DILocation(line: 2171, column: 6, scope: !16352)
!16381 = !DILocation(line: 2173, column: 2, scope: !16352)
!16382 = !DILocation(line: 2173, column: 2, scope: !16364)
!16383 = !DILocalVariable(name: "__dummy", scope: !16384, file: !3, line: 2173, type: !898)
!16384 = distinct !DILexicalBlock(scope: !16363, file: !3, line: 2173, column: 2)
!16385 = !DILocation(line: 2173, column: 2, scope: !16384)
!16386 = !DILocalVariable(name: "__dummy2", scope: !16384, file: !3, line: 2173, type: !898)
!16387 = !DILocation(line: 2173, column: 2, scope: !16363)
!16388 = !DILocation(line: 2173, column: 2, scope: !16362)
!16389 = !DILocation(line: 2173, column: 2, scope: !16390)
!16390 = distinct !DILexicalBlock(scope: !16362, file: !3, line: 2173, column: 2)
!16391 = !DILocalVariable(name: "__dummy", scope: !16392, file: !3, line: 2173, type: !898)
!16392 = distinct !DILexicalBlock(scope: !16393, file: !3, line: 2173, column: 2)
!16393 = distinct !DILexicalBlock(scope: !16390, file: !3, line: 2173, column: 2)
!16394 = !DILocation(line: 2173, column: 2, scope: !16392)
!16395 = !DILocalVariable(name: "__dummy2", scope: !16392, file: !3, line: 2173, type: !898)
!16396 = !DILocation(line: 2173, column: 2, scope: !16393)
!16397 = !DILocation(line: 2173, column: 2, scope: !16361)
!16398 = !{i32 -2139268614}
!16399 = !DILocation(line: 329, column: 10, scope: !6457, inlinedAt: !16359)
!16400 = !DILocation(line: 329, column: 16, scope: !6457, inlinedAt: !16359)
!16401 = !DILocation(line: 2173, column: 2, scope: !16360)
!16402 = !DILocation(line: 2174, column: 19, scope: !16352)
!16403 = !DILocation(line: 2174, column: 23, scope: !16352)
!16404 = !DILocation(line: 2174, column: 10, scope: !16352)
!16405 = !DILocation(line: 2174, column: 7, scope: !16352)
!16406 = !DILocalVariable(name: "__mptr", scope: !16407, file: !3, line: 2175, type: !890)
!16407 = distinct !DILexicalBlock(scope: !16408, file: !3, line: 2175, column: 2)
!16408 = distinct !DILexicalBlock(scope: !16352, file: !3, line: 2175, column: 2)
!16409 = !DILocation(line: 2175, column: 2, scope: !16407)
!16410 = !DILocation(line: 2175, column: 2, scope: !16411)
!16411 = distinct !DILexicalBlock(scope: !16407, file: !3, line: 2175, column: 2)
!16412 = !DILocation(line: 2175, column: 2, scope: !16408)
!16413 = !DILocalVariable(name: "__mptr", scope: !16414, file: !3, line: 2175, type: !890)
!16414 = distinct !DILexicalBlock(scope: !16408, file: !3, line: 2175, column: 2)
!16415 = !DILocation(line: 2175, column: 2, scope: !16414)
!16416 = !DILocation(line: 2175, column: 2, scope: !16417)
!16417 = distinct !DILexicalBlock(scope: !16414, file: !3, line: 2175, column: 2)
!16418 = !DILocation(line: 2175, column: 2, scope: !16419)
!16419 = distinct !DILexicalBlock(scope: !16408, file: !3, line: 2175, column: 2)
!16420 = !DILocation(line: 2176, column: 7, scope: !16421)
!16421 = distinct !DILexicalBlock(scope: !16422, file: !3, line: 2176, column: 7)
!16422 = distinct !DILexicalBlock(scope: !16419, file: !3, line: 2175, column: 63)
!16423 = !DILocation(line: 2176, column: 11, scope: !16421)
!16424 = !DILocation(line: 2176, column: 7, scope: !16422)
!16425 = !DILocation(line: 2177, column: 8, scope: !16426)
!16426 = distinct !DILexicalBlock(scope: !16427, file: !3, line: 2177, column: 8)
!16427 = distinct !DILexicalBlock(scope: !16421, file: !3, line: 2176, column: 17)
!16428 = !DILocation(line: 2177, column: 12, scope: !16426)
!16429 = !DILocation(line: 2177, column: 17, scope: !16426)
!16430 = !DILocation(line: 2178, column: 8, scope: !16426)
!16431 = !DILocation(line: 2178, column: 12, scope: !16426)
!16432 = !DILocation(line: 2178, column: 18, scope: !16426)
!16433 = !DILocation(line: 2178, column: 27, scope: !16426)
!16434 = !DILocation(line: 2179, column: 8, scope: !16426)
!16435 = !DILocation(line: 2179, column: 12, scope: !16426)
!16436 = !DILocation(line: 2179, column: 18, scope: !16426)
!16437 = !DILocation(line: 2177, column: 8, scope: !16427)
!16438 = !DILocation(line: 2180, column: 13, scope: !16439)
!16439 = distinct !DILexicalBlock(scope: !16426, file: !3, line: 2179, column: 34)
!16440 = !DILocation(line: 2181, column: 16, scope: !16439)
!16441 = !DILocation(line: 2181, column: 20, scope: !16439)
!16442 = !DILocation(line: 2181, column: 26, scope: !16439)
!16443 = !DILocation(line: 2181, column: 35, scope: !16439)
!16444 = !DILocation(line: 2181, column: 6, scope: !16439)
!16445 = !DILocation(line: 2180, column: 5, scope: !16439)
!16446 = !DILocation(line: 2182, column: 16, scope: !16439)
!16447 = !DILocation(line: 2182, column: 20, scope: !16439)
!16448 = !DILocation(line: 2182, column: 26, scope: !16439)
!16449 = !DILocation(line: 2182, column: 35, scope: !16439)
!16450 = !DILocation(line: 2182, column: 14, scope: !16439)
!16451 = !DILocation(line: 2182, column: 12, scope: !16439)
!16452 = !DILocation(line: 2183, column: 4, scope: !16439)
!16453 = !DILocation(line: 2184, column: 5, scope: !16454)
!16454 = distinct !DILexicalBlock(scope: !16426, file: !3, line: 2183, column: 11)
!16455 = !DILocation(line: 2185, column: 12, scope: !16454)
!16456 = !DILocation(line: 2188, column: 8, scope: !16457)
!16457 = distinct !DILexicalBlock(scope: !16427, file: !3, line: 2188, column: 8)
!16458 = !DILocation(line: 2188, column: 12, scope: !16457)
!16459 = !DILocation(line: 2188, column: 17, scope: !16457)
!16460 = !DILocation(line: 2189, column: 39, scope: !16457)
!16461 = !DILocation(line: 2189, column: 43, scope: !16457)
!16462 = !DILocation(line: 2189, column: 49, scope: !16457)
!16463 = !DILocation(line: 2189, column: 8, scope: !16457)
!16464 = !DILocation(line: 2188, column: 8, scope: !16427)
!16465 = !DILocation(line: 2190, column: 22, scope: !16466)
!16466 = distinct !DILexicalBlock(scope: !16457, file: !3, line: 2189, column: 57)
!16467 = !DILocation(line: 2190, column: 26, scope: !16466)
!16468 = !DILocation(line: 2192, column: 16, scope: !16466)
!16469 = !DILocation(line: 2192, column: 20, scope: !16466)
!16470 = !DILocation(line: 2192, column: 26, scope: !16466)
!16471 = !DILocation(line: 2192, column: 6, scope: !16466)
!16472 = !DILocation(line: 2193, column: 6, scope: !16466)
!16473 = !DILocation(line: 2194, column: 6, scope: !16466)
!16474 = !DILocation(line: 2190, column: 13, scope: !16466)
!16475 = !DILocation(line: 2190, column: 10, scope: !16466)
!16476 = !DILocation(line: 2195, column: 4, scope: !16466)
!16477 = !DILocation(line: 2196, column: 22, scope: !16478)
!16478 = distinct !DILexicalBlock(scope: !16457, file: !3, line: 2195, column: 11)
!16479 = !DILocation(line: 2196, column: 26, scope: !16478)
!16480 = !DILocation(line: 2198, column: 16, scope: !16478)
!16481 = !DILocation(line: 2198, column: 20, scope: !16478)
!16482 = !DILocation(line: 2198, column: 26, scope: !16478)
!16483 = !DILocation(line: 2198, column: 6, scope: !16478)
!16484 = !DILocation(line: 2199, column: 6, scope: !16478)
!16485 = !DILocation(line: 2196, column: 13, scope: !16478)
!16486 = !DILocation(line: 2196, column: 10, scope: !16478)
!16487 = !DILocation(line: 2201, column: 3, scope: !16427)
!16488 = !DILocation(line: 2202, column: 2, scope: !16422)
!16489 = !DILocalVariable(name: "__mptr", scope: !16490, file: !3, line: 2175, type: !890)
!16490 = distinct !DILexicalBlock(scope: !16419, file: !3, line: 2175, column: 2)
!16491 = !DILocation(line: 2175, column: 2, scope: !16490)
!16492 = !DILocation(line: 2175, column: 2, scope: !16493)
!16493 = distinct !DILexicalBlock(scope: !16490, file: !3, line: 2175, column: 2)
!16494 = distinct !{!16494, !16412, !16495}
!16495 = !DILocation(line: 2202, column: 2, scope: !16408)
!16496 = !DILocation(line: 2204, column: 19, scope: !16352)
!16497 = !DILocation(line: 2204, column: 23, scope: !16352)
!16498 = !DILocation(line: 2204, column: 10, scope: !16352)
!16499 = !DILocation(line: 2204, column: 7, scope: !16352)
!16500 = !DILocalVariable(name: "__mptr", scope: !16501, file: !3, line: 2205, type: !890)
!16501 = distinct !DILexicalBlock(scope: !16502, file: !3, line: 2205, column: 2)
!16502 = distinct !DILexicalBlock(scope: !16352, file: !3, line: 2205, column: 2)
!16503 = !DILocation(line: 2205, column: 2, scope: !16501)
!16504 = !DILocation(line: 2205, column: 2, scope: !16505)
!16505 = distinct !DILexicalBlock(scope: !16501, file: !3, line: 2205, column: 2)
!16506 = !DILocation(line: 2205, column: 2, scope: !16502)
!16507 = !DILocalVariable(name: "__mptr", scope: !16508, file: !3, line: 2205, type: !890)
!16508 = distinct !DILexicalBlock(scope: !16502, file: !3, line: 2205, column: 2)
!16509 = !DILocation(line: 2205, column: 2, scope: !16508)
!16510 = !DILocation(line: 2205, column: 2, scope: !16511)
!16511 = distinct !DILexicalBlock(scope: !16508, file: !3, line: 2205, column: 2)
!16512 = !DILocation(line: 2205, column: 2, scope: !16513)
!16513 = distinct !DILexicalBlock(scope: !16502, file: !3, line: 2205, column: 2)
!16514 = !DILocation(line: 2206, column: 7, scope: !16515)
!16515 = distinct !DILexicalBlock(scope: !16516, file: !3, line: 2206, column: 7)
!16516 = distinct !DILexicalBlock(scope: !16513, file: !3, line: 2205, column: 65)
!16517 = !DILocation(line: 2206, column: 11, scope: !16515)
!16518 = !DILocation(line: 2206, column: 7, scope: !16516)
!16519 = !DILocation(line: 2207, column: 8, scope: !16520)
!16520 = distinct !DILexicalBlock(scope: !16521, file: !3, line: 2207, column: 8)
!16521 = distinct !DILexicalBlock(scope: !16515, file: !3, line: 2206, column: 17)
!16522 = !DILocation(line: 2207, column: 12, scope: !16520)
!16523 = !DILocation(line: 2207, column: 17, scope: !16520)
!16524 = !DILocation(line: 2208, column: 8, scope: !16520)
!16525 = !DILocation(line: 2208, column: 12, scope: !16520)
!16526 = !DILocation(line: 2208, column: 18, scope: !16520)
!16527 = !DILocation(line: 2208, column: 27, scope: !16520)
!16528 = !DILocation(line: 2209, column: 8, scope: !16520)
!16529 = !DILocation(line: 2209, column: 12, scope: !16520)
!16530 = !DILocation(line: 2209, column: 18, scope: !16520)
!16531 = !DILocation(line: 2207, column: 8, scope: !16521)
!16532 = !DILocation(line: 2210, column: 13, scope: !16533)
!16533 = distinct !DILexicalBlock(scope: !16520, file: !3, line: 2209, column: 34)
!16534 = !DILocation(line: 2211, column: 16, scope: !16533)
!16535 = !DILocation(line: 2211, column: 20, scope: !16533)
!16536 = !DILocation(line: 2211, column: 26, scope: !16533)
!16537 = !DILocation(line: 2211, column: 34, scope: !16533)
!16538 = !DILocation(line: 2211, column: 6, scope: !16533)
!16539 = !DILocation(line: 2210, column: 5, scope: !16533)
!16540 = !DILocation(line: 2212, column: 16, scope: !16533)
!16541 = !DILocation(line: 2212, column: 20, scope: !16533)
!16542 = !DILocation(line: 2212, column: 26, scope: !16533)
!16543 = !DILocation(line: 2212, column: 35, scope: !16533)
!16544 = !DILocation(line: 2212, column: 14, scope: !16533)
!16545 = !DILocation(line: 2212, column: 12, scope: !16533)
!16546 = !DILocation(line: 2213, column: 4, scope: !16533)
!16547 = !DILocation(line: 2214, column: 5, scope: !16548)
!16548 = distinct !DILexicalBlock(scope: !16520, file: !3, line: 2213, column: 11)
!16549 = !DILocation(line: 2215, column: 12, scope: !16548)
!16550 = !DILocation(line: 2218, column: 8, scope: !16551)
!16551 = distinct !DILexicalBlock(scope: !16521, file: !3, line: 2218, column: 8)
!16552 = !DILocation(line: 2218, column: 12, scope: !16551)
!16553 = !DILocation(line: 2218, column: 17, scope: !16551)
!16554 = !DILocation(line: 2219, column: 39, scope: !16551)
!16555 = !DILocation(line: 2219, column: 43, scope: !16551)
!16556 = !DILocation(line: 2219, column: 49, scope: !16551)
!16557 = !DILocation(line: 2219, column: 8, scope: !16551)
!16558 = !DILocation(line: 2218, column: 8, scope: !16521)
!16559 = !DILocation(line: 2220, column: 22, scope: !16560)
!16560 = distinct !DILexicalBlock(scope: !16551, file: !3, line: 2219, column: 57)
!16561 = !DILocation(line: 2220, column: 26, scope: !16560)
!16562 = !DILocation(line: 2222, column: 16, scope: !16560)
!16563 = !DILocation(line: 2222, column: 20, scope: !16560)
!16564 = !DILocation(line: 2222, column: 26, scope: !16560)
!16565 = !DILocation(line: 2222, column: 6, scope: !16560)
!16566 = !DILocation(line: 2223, column: 6, scope: !16560)
!16567 = !DILocation(line: 2224, column: 6, scope: !16560)
!16568 = !DILocation(line: 2220, column: 13, scope: !16560)
!16569 = !DILocation(line: 2220, column: 10, scope: !16560)
!16570 = !DILocation(line: 2225, column: 4, scope: !16560)
!16571 = !DILocation(line: 2226, column: 22, scope: !16572)
!16572 = distinct !DILexicalBlock(scope: !16551, file: !3, line: 2225, column: 11)
!16573 = !DILocation(line: 2226, column: 26, scope: !16572)
!16574 = !DILocation(line: 2228, column: 16, scope: !16572)
!16575 = !DILocation(line: 2228, column: 20, scope: !16572)
!16576 = !DILocation(line: 2228, column: 26, scope: !16572)
!16577 = !DILocation(line: 2228, column: 6, scope: !16572)
!16578 = !DILocation(line: 2229, column: 6, scope: !16572)
!16579 = !DILocation(line: 2226, column: 13, scope: !16572)
!16580 = !DILocation(line: 2226, column: 10, scope: !16572)
!16581 = !DILocation(line: 2231, column: 3, scope: !16521)
!16582 = !DILocation(line: 2232, column: 2, scope: !16516)
!16583 = !DILocalVariable(name: "__mptr", scope: !16584, file: !3, line: 2205, type: !890)
!16584 = distinct !DILexicalBlock(scope: !16513, file: !3, line: 2205, column: 2)
!16585 = !DILocation(line: 2205, column: 2, scope: !16584)
!16586 = !DILocation(line: 2205, column: 2, scope: !16587)
!16587 = distinct !DILexicalBlock(scope: !16584, file: !3, line: 2205, column: 2)
!16588 = distinct !{!16588, !16506, !16589}
!16589 = !DILocation(line: 2232, column: 2, scope: !16502)
!16590 = !DILocation(line: 2233, column: 36, scope: !16352)
!16591 = !DILocation(line: 409, column: 2, scope: !6890, inlinedAt: !16356)
!16592 = !DILocation(line: 409, column: 2, scope: !6895, inlinedAt: !16356)
!16593 = !DILocation(line: 409, column: 2, scope: !6896, inlinedAt: !16356)
!16594 = !DILocation(line: 409, column: 2, scope: !6903, inlinedAt: !16356)
!16595 = !DILocation(line: 409, column: 2, scope: !6906, inlinedAt: !16356)
!16596 = !DILocation(line: 2235, column: 9, scope: !16352)
!16597 = !DILocation(line: 2235, column: 2, scope: !16352)
