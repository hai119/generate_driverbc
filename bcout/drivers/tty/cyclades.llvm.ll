; ModuleID = '../bcout/drivers/tty/cyclades.llvm.bc'
source_filename = "drivers/tty/cyclades.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_cy_init6:\09\09\09"
module asm ".long\09cy_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.tty_driver = type { i32, %struct.kref, %struct.cdev**, %struct.module*, i8*, i8*, i32, i32, i32, i32, i16, i16, %struct.ktermios, i64, %struct.proc_dir_entry*, %struct.tty_driver*, %struct.tty_struct**, %struct.tty_port**, %struct.ktermios**, i8*, %struct.tty_operations*, %struct.list_head }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.atomic_t = type { i32 }
%struct.cdev = type { %struct.kobject, %struct.module*, %struct.file_operations*, %struct.list_head, i32, i32 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.file = type { %union.anon.2, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.2 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.64, %struct.list_head, %struct.list_head, %union.anon.65 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.3, i8* }
%union.anon.3 = type { i64 }
%struct.lockref = type { %union.anon.62 }
%union.anon.62 = type { %struct.anon.63 }
%struct.anon.63 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.page = type { i64, %union.anon.4, %union.anon.54, %struct.atomic_t, [8 x i8] }
%union.anon.4 = type { %struct.anon.5 }
%struct.anon.5 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.54 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.55, i32 }
%union.anon.55 = type { %struct.kuid_t }
%struct.kuid_t = type { i32 }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.47, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.17, [0 x i64] }
%struct.anon.17 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.18, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.18 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.19 }
%union.anon.19 = type { %struct.anon.20 }
%struct.anon.20 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type { %struct.kref, %struct.idr, %struct.callback_head, i32, %struct.task_struct*, %struct.kmem_cache*, i32, %struct.pid_namespace*, %struct.user_namespace*, %struct.ucounts*, i32, %struct.ns_common }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.kmem_cache = type opaque
%struct.ucounts = type opaque
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.24, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.25, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.26, %union.anon.30, %struct.key_restriction* }
%union.anon.24 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.25 = type { i64 }
%struct.kgid_t = type { i32 }
%union.anon.26 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.27, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.27 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.30 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type { i32, %struct.kref, %struct.device*, %struct.tty_driver*, %struct.tty_operations*, i32, %struct.ld_semaphore, %struct.tty_ldisc*, %struct.mutex, %struct.mutex, %struct.mutex, %struct.rw_semaphore, %struct.mutex, %struct.spinlock, %struct.spinlock, %struct.ktermios, %struct.ktermios, %struct.termiox*, [64 x i8], %struct.pid*, %struct.pid*, i64, i32, %struct.winsize, i8, i64, i32, i16, i56, i32, i32, %struct.tty_struct*, %struct.fasync_struct*, %struct.wait_queue_head, %struct.wait_queue_head, %struct.work_struct, i8*, i8*, %struct.spinlock, %struct.list_head, i32, i8*, i32, %struct.work_struct, %struct.tty_port* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.ld_semaphore = type { %struct.atomic64_t, %struct.raw_spinlock, i32, %struct.list_head, %struct.list_head }
%struct.tty_ldisc = type { %struct.tty_ldisc_ops*, %struct.tty_struct* }
%struct.tty_ldisc_ops = type { i32, i8*, i32, i32, i32 (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, i64 (%struct.tty_struct*, %struct.file*, i8*, i64)*, i64 (%struct.tty_struct*, %struct.file*, i8*, i64)*, i32 (%struct.tty_struct*, %struct.file*, i32, i64)*, i32 (%struct.tty_struct*, %struct.file*, i32, i64)*, void (%struct.tty_struct*, %struct.ktermios*)*, i32 (%struct.tty_struct*, %struct.file*, %struct.poll_table_struct*)*, i32 (%struct.tty_struct*)*, void (%struct.tty_struct*, i8*, i8*, i32)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*, i32)*, i32 (%struct.tty_struct*, i8*, i8*, i32)*, %struct.module*, i32 }
%struct.poll_table_struct = type opaque
%struct.termiox = type { i16, i16, [5 x i16], i16 }
%struct.winsize = type { i16, i16, i16, i16 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.tty_port = type { %struct.tty_bufhead, %struct.tty_struct*, %struct.tty_struct*, %struct.tty_port_operations*, %struct.tty_port_client_operations*, %struct.spinlock, i32, i32, %struct.wait_queue_head, %struct.wait_queue_head, i64, i64, i8, %struct.mutex, %struct.mutex, i8*, i32, i32, i32, %struct.kref, i8* }
%struct.tty_bufhead = type { %struct.tty_buffer*, %struct.work_struct, %struct.mutex, %struct.atomic_t, %struct.tty_buffer, %struct.llist_head, %struct.atomic_t, i32, %struct.tty_buffer* }
%struct.tty_buffer = type { %union.anon.1, i32, i32, i32, i32, i32, [0 x i64] }
%union.anon.1 = type { %struct.tty_buffer* }
%struct.llist_head = type { %struct.llist_node* }
%struct.llist_node = type { %struct.llist_node* }
%struct.tty_port_operations = type { i32 (%struct.tty_port*)*, void (%struct.tty_port*, i32)*, void (%struct.tty_port*)*, i32 (%struct.tty_port*, %struct.tty_struct*)*, void (%struct.tty_port*)* }
%struct.tty_port_client_operations = type { i32 (%struct.tty_port*, i8*, i8*, i64)*, void (%struct.tty_port*)* }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.33, %union.anon.34, i32 }
%struct.request_queue = type opaque
%union.anon.33 = type { %struct.list_head }
%union.anon.34 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.35 }
%struct.anon.35 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.39 }
%struct.anon.39 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.46, i32, [12 x i8] }
%union.anon.46 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.47 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.48, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.51 }
%union.anon.48 = type { %struct.anon.49 }
%struct.anon.49 = type { i64, i64 }
%union.anon.51 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.64 = type { %struct.list_head }
%union.anon.65 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.56, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.57, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.58, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.61, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.56 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.57 = type { %struct.callback_head }
%union.anon.58 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.6 }
%union.anon.6 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.61 = type { %struct.pipe_inode_info* }
%struct.atomic64_t = type { i64 }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.32 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.32 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.66, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.66 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.59 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.59 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.module = type opaque
%struct.ktermios = type { i32, i32, i32, i32, i8, [19 x i8], i32, i32 }
%struct.proc_dir_entry = type opaque
%struct.tty_operations = type { %struct.tty_struct* (%struct.tty_driver*, %struct.file*, i32)*, i32 (%struct.tty_driver*, %struct.tty_struct*)*, void (%struct.tty_driver*, %struct.tty_struct*)*, i32 (%struct.tty_struct*, %struct.file*)*, void (%struct.tty_struct*, %struct.file*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i8*, i32)*, i32 (%struct.tty_struct*, i8)*, void (%struct.tty_struct*)*, i32 (%struct.tty_struct*)*, i32 (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i32, i64)*, i64 (%struct.tty_struct*, i32, i64)*, void (%struct.tty_struct*, %struct.ktermios*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i32)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*, i32)*, void (%struct.tty_struct*, i8)*, i32 (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i32, i32)*, i32 (%struct.tty_struct*, %struct.winsize*)*, i32 (%struct.tty_struct*, %struct.termiox*)*, i32 (%struct.tty_struct*, %struct.serial_icounter_struct*)*, i32 (%struct.tty_struct*, %struct.serial_struct*)*, i32 (%struct.tty_struct*, %struct.serial_struct*)*, void (%struct.tty_struct*, %struct.seq_file*)*, i32 (%struct.seq_file*, i8*)* }
%struct.serial_icounter_struct = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [9 x i32] }
%struct.serial_struct = type { i32, i32, i32, i32, i32, i32, i32, i32, i16, i8, [1 x i8], i32, i16, i16, i8*, i16, i32, i64 }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.70, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.pcie_link_state = type opaque
%struct.pci_vpd = type opaque
%union.anon.70 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.cyclades_card = type { i8*, %union.anon, %struct.BOARD_CTRL*, i32, i32, i32, i32, i32, i32, i32, %struct.spinlock, %struct.cyclades_port* }
%union.anon = type { i8* }
%struct.BOARD_CTRL = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [6 x i32] }
%struct.cyclades_port = type { i32, %struct.tty_port, %struct.cyclades_card*, %union.anon.67, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i64, %struct.cyclades_monitor, %struct.cyclades_idle_stats, %struct.cyclades_icount, %struct.completion, i32 }
%union.anon.67 = type { %struct.anon.69 }
%struct.anon.69 = type { %struct.CH_CTRL*, %struct.BUF_CTRL* }
%struct.CH_CTRL = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [7 x i32] }
%struct.BUF_CTRL = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [5 x i32] }
%struct.cyclades_monitor = type { i64, i64, i64, i64 }
%struct.cyclades_idle_stats = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.cyclades_icount = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.module_version_attribute = type { %struct.module_attribute, i8*, i8* }
%struct.module_attribute = type { %struct.attribute, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*)*, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*, i64)*, void (%struct.module*, i8*)*, i32 (%struct.module*)*, void (%struct.module*)* }
%struct.module_kobject = type { %struct.kobject, %struct.module*, %struct.kobject*, %struct.module_param_attrs*, %struct.completion* }
%struct.module_param_attrs = type opaque
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.FIRM_ID = type { i32, i32 }
%struct.RUNTIME_9060 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ZFW_CTRL = type { %struct.BOARD_CTRL, [64 x %struct.CH_CTRL], [64 x %struct.BUF_CTRL] }
%struct.firmware = type { i64, i8*, i8* }
%struct.CUSTOM_REG = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.anon.68 = type { i8* }
%struct.zfile_header = type { [64 x i8], [32 x i8], [32 x i8], i32, i32, i32, i32, [9 x i32] }
%struct.zfile_config = type { [64 x i8], i32, i32, i32, [16 x i32] }
%struct.zfile_block = type { i32, i32, i32, i32 }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }

@cyz_timerlist = internal global %struct.timer_list { %struct.hlist_node { %struct.hlist_node* inttoptr (i64 -2401263026318605568 to %struct.hlist_node*), %struct.hlist_node** null }, i64 0, void (%struct.timer_list*)* @cyz_poll, i32 0 }, align 8, !dbg !0
@cy_serial_driver = internal global %struct.tty_driver* null, align 8, !dbg !4493
@.str = private unnamed_addr constant [51 x i8] c"\013failed to unregister Cyclades serial driver(%d)\0A\00", align 1
@cy_pci_driver = internal global %struct.pci_driver { %struct.list_head zeroinitializer, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0), %struct.pci_device_id* getelementptr inbounds ([9 x %struct.pci_device_id], [9 x %struct.pci_device_id]* @cy_pci_dev_id, i32 0, i32 0), i32 (%struct.pci_dev*, %struct.pci_device_id*)* @cy_pci_probe, void (%struct.pci_dev*)* @cy_pci_remove, i32 (%struct.pci_dev*, i32)* null, i32 (%struct.pci_dev*)* null, void (%struct.pci_dev*)* null, i32 (%struct.pci_dev*, i32)* null, %struct.pci_error_handlers* null, %struct.attribute_group** null, %struct.device_driver zeroinitializer, %struct.pci_dynids zeroinitializer }, align 8, !dbg !4500
@cy_card = internal global [4 x %struct.cyclades_card] zeroinitializer, align 16, !dbg !4495
@__UNIQUE_ID___addressable_cy_init251 = internal global i8* bitcast (i32 ()* @cy_init to i8*), section ".discard.addressable", align 8, !dbg !4419
@__exitcall_cy_cleanup_module = internal global void ()* @cy_cleanup_module, section ".exitcall.exit", align 8, !dbg !4421
@__UNIQUE_ID_file252 = internal constant [35 x i8] c"cyclades.file=drivers/tty/cyclades\00", section ".modinfo", align 1, !dbg !4426
@__UNIQUE_ID_license253 = internal constant [21 x i8] c"cyclades.license=GPL\00", section ".modinfo", align 1, !dbg !4431
@__UNIQUE_ID_version254 = internal constant [21 x i8] c"cyclades.version=2.6\00", section ".modinfo", align 1, !dbg !4436
@___modver_attr = internal global %struct.module_version_attribute { %struct.module_attribute { %struct.attribute { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.77, i32 0, i32 0), i16 292 }, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*)* @__modver_version_show, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*, i64)* null, void (%struct.module*, i8*)* null, i32 (%struct.module*)* null, void (%struct.module*)* null }, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.78, i32 0, i32 0) }, align 8, !dbg !4818
@__modver_attr = internal constant %struct.module_version_attribute* @___modver_attr, section "__modver", align 8, !dbg !4438
@__UNIQUE_ID_alias255 = internal constant [31 x i8] c"cyclades.alias=char-major-19-*\00", section ".modinfo", align 1, !dbg !4483
@__UNIQUE_ID_firmware256 = internal constant [30 x i8] c"cyclades.firmware=cyzfirm.bin\00", section ".modinfo", align 1, !dbg !4488
@jiffies = external dso_local global i64, align 8
@cyz_polling_cycle = internal global i64 10, align 8, !dbg !4498
@.str.1 = private unnamed_addr constant [9 x i8] c"cyclades\00", align 1
@cy_pci_dev_id = internal constant [9 x %struct.pci_device_id] [%struct.pci_device_id { i32 4622, i32 256, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4622, i32 257, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4622, i32 258, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4622, i32 259, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4622, i32 260, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4622, i32 261, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4622, i32 512, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4622, i32 513, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id zeroinitializer], align 16, !dbg !4777
@.str.2 = private unnamed_addr constant [22 x i8] c"cannot enable device\0A\00", align 1
@.str.3 = private unnamed_addr constant [48 x i8] c"Cyclades-Z/PCI not supported for low addresses\0A\00", align 1
@.str.4 = private unnamed_addr constant [45 x i8] c"PCI I/O bit incorrectly set. Ignoring it...\0A\00", align 1
@.str.5 = private unnamed_addr constant [29 x i8] c"failed to reserve resources\0A\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"Cyclom-Y\00", align 1
@.str.7 = private unnamed_addr constant [24 x i8] c"can't remap ctl region\0A\00", align 1
@.str.8 = private unnamed_addr constant [25 x i8] c"can't remap base region\0A\00", align 1
@.str.9 = private unnamed_addr constant [47 x i8] c"Cyclom-Y PCI host card with no Serial-Modules\0A\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"Cyclades-Ze\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"Cyclades-8Zo\00", align 1
@cy_next_channel = internal global i32 0, align 4, !dbg !4783
@.str.12 = private unnamed_addr constant [108 x i8] c"Cyclades-8Zo/PCI found, but no channels are available. Change NR_PORTS in cyclades.c and recompile kernel.\0A\00", align 1
@.str.13 = private unnamed_addr constant [108 x i8] c"Cyclades-8Zo/PCI found, but no more cards can be used. Change NR_CARDS in cyclades.c and recompile kernel.\0A\00", align 1
@.str.14 = private unnamed_addr constant [24 x i8] c"could not allocate IRQ\0A\00", align 1
@.str.15 = private unnamed_addr constant [54 x i8] c"%s/PCI #%d found: %d channels starting from port %d.\0A\00", align 1
@cy_chip_offset = internal constant [8 x i32] [i32 0, i32 1024, i32 2048, i32 3072, i32 512, i32 1536, i32 2560, i32 3584], align 16, !dbg !4780
@.str.16 = private unnamed_addr constant [12 x i8] c"cyzfirm.bin\00", align 1
@.str.17 = private unnamed_addr constant [20 x i8] c"can't get firmware\0A\00", align 1
@.str.18 = private unnamed_addr constant [9 x i8] c"Cyclom-Z\00", align 1
@.str.19 = private unnamed_addr constant [44 x i8] c"fw upload successful, but fw is not loaded\0A\00", align 1
@.str.20 = private unnamed_addr constant [94 x i8] c"you need an external power supply for this number of ports. Firmware halted and board reset.\0A\00", align 1
@.str.21 = private unnamed_addr constant [49 x i8] c"fid->signature = 0x%x... Waiting some more time\0A\00", align 1
@.str.22 = private unnamed_addr constant [69 x i8] c"Board not started in 20 seconds! Giving up. (fid->signature = 0x%x)\0A\00", align 1
@.str.23 = private unnamed_addr constant [122 x i8] c"*** Warning ***: if you are upgrading the FW, please power cycle the system before loading the new FW to the Cyclades-Z.\0A\00", align 1
@.str.24 = private unnamed_addr constant [48 x i8] c"Cyclades-Z FW loaded: version = %x, ports = %u\0A\00", align 1
@.str.25 = private unnamed_addr constant [111 x i8] c"no Cyclades-Z ports were found. Please check the connection between the Z host card and the serial expanders.\0A\00", align 1
@.str.26 = private unnamed_addr constant [45 x i8] c"Null number of ports detected. Board reset.\0A\00", align 1
@.str.27 = private unnamed_addr constant [35 x i8] c"\013Bad firmware: too short: %u<%zu\0A\00", align 1
@.str.28 = private unnamed_addr constant [26 x i8] c"\013Bad firmware: too short\00", align 1
@.str.29 = private unnamed_addr constant [45 x i8] c"\013Bad firmware: bad formatted header string\0A\00", align 1
@.str.30 = private unnamed_addr constant [47 x i8] c"\013Bad firmware: bad name '%s' (expected '%s')\0A\00", align 1
@.str.31 = private unnamed_addr constant [46 x i8] c"\013Bad firmware: bad block ref number in cfgs\0A\00", align 1
@.str.32 = private unnamed_addr constant [37 x i8] c"\013Bad firmware: nothing appropriate\0A\00", align 1
@.str.33 = private unnamed_addr constant [39 x i8] c"\013Bad firmware: bad block data offset\0A\00", align 1
@.str.34 = private unnamed_addr constant [35 x i8] c"\013Cyclades: cannot allocate ports\0A\00", align 1
@cyz_port_ops = internal constant %struct.tty_port_operations { i32 (%struct.tty_port*)* @cyz_carrier_raised, void (%struct.tty_port*, i32)* @cyz_dtr_rts, void (%struct.tty_port*)* @cy_do_close, i32 (%struct.tty_port*, %struct.tty_struct*)* null, void (%struct.tty_port*)* null }, align 8, !dbg !4790
@cyy_port_ops = internal constant %struct.tty_port_operations { i32 (%struct.tty_port*)* @cyy_carrier_raised, void (%struct.tty_port*, i32)* @cyy_dtr_rts, void (%struct.tty_port*)* @cy_do_close, i32 (%struct.tty_port*, %struct.tty_struct*)* null, void (%struct.tty_port*)* null }, align 8, !dbg !4792
@baud_bpr_60 = internal constant [21 x i8] c"\00\82!\FF\DB\C3\92b\C3bA\C3b\C3b\C3\82bA2!", align 16, !dbg !4794
@baud_co_60 = internal constant [21 x i8] c"\00\00\00\04\04\04\04\04\03\03\03\02\02\01\01\00\00\00\00\00\00", align 16, !dbg !4796
@baud_bpr_25 = internal constant [20 x i8] c"\00\F5\A3o\\Q\F5\A3Q\A3mQ\A3Q\A3Q6)\1B\15", align 16, !dbg !4798
@baud_co_25 = internal constant [20 x i8] c"\00\04\04\04\04\04\03\03\03\02\02\02\01\01\00\00\00\00\00\00", align 16, !dbg !4801
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.35 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@__init_completion.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4785
@.str.36 = private unnamed_addr constant [9 x i8] c"&x->wait\00", align 1
@.str.37 = private unnamed_addr constant [31 x i8] c"\013%s: retval on ttyC%d was %x\0A\00", align 1
@__func__.cyz_dtr_rts = private unnamed_addr constant [12 x i8] c"cyz_dtr_rts\00", align 1
@.str.38 = private unnamed_addr constant [40 x i8] c"\017cyc:cy_close retval on ttyC%d was %x\0A\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.39 = private unnamed_addr constant [19 x i8] c"cy_wait_until_sent\00", align 1
@.str.40 = private unnamed_addr constant [50 x i8] c"\014cyc Warning: null cyclades_port for (%s) in %s\0A\00", align 1
@.str.41 = private unnamed_addr constant [62 x i8] c"\014cyc Warning: bad magic number for serial struct (%s) in %s\0A\00", align 1
@.str.42 = private unnamed_addr constant [23 x i8] c"\016Cyclades driver 2.6\0A\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"ttyC\00", align 1
@tty_std_termios = external dso_local global %struct.ktermios, align 4
@cy_ops = internal constant %struct.tty_operations { %struct.tty_struct* (%struct.tty_driver*, %struct.file*, i32)* null, i32 (%struct.tty_driver*, %struct.tty_struct*)* null, void (%struct.tty_driver*, %struct.tty_struct*)* null, i32 (%struct.tty_struct*, %struct.file*)* @cy_open, void (%struct.tty_struct*, %struct.file*)* @cy_close, void (%struct.tty_struct*)* null, void (%struct.tty_struct*)* null, i32 (%struct.tty_struct*, i8*, i32)* @cy_write, i32 (%struct.tty_struct*, i8)* @cy_put_char, void (%struct.tty_struct*)* @cy_flush_chars, i32 (%struct.tty_struct*)* @cy_write_room, i32 (%struct.tty_struct*)* @cy_chars_in_buffer, i32 (%struct.tty_struct*, i32, i64)* @cy_ioctl, i64 (%struct.tty_struct*, i32, i64)* null, void (%struct.tty_struct*, %struct.ktermios*)* @cy_set_termios, void (%struct.tty_struct*)* @cy_throttle, void (%struct.tty_struct*)* @cy_unthrottle, void (%struct.tty_struct*)* @cy_stop, void (%struct.tty_struct*)* @cy_start, void (%struct.tty_struct*)* @cy_hangup, i32 (%struct.tty_struct*, i32)* @cy_break, void (%struct.tty_struct*)* @cy_flush_buffer, void (%struct.tty_struct*)* null, void (%struct.tty_struct*, i32)* @cy_wait_until_sent, void (%struct.tty_struct*, i8)* null, i32 (%struct.tty_struct*)* @cy_tiocmget, i32 (%struct.tty_struct*, i32, i32)* @cy_tiocmset, i32 (%struct.tty_struct*, %struct.winsize*)* null, i32 (%struct.tty_struct*, %struct.termiox*)* null, i32 (%struct.tty_struct*, %struct.serial_icounter_struct*)* @cy_get_icount, i32 (%struct.tty_struct*, %struct.serial_struct*)* @cy_get_serial_info, i32 (%struct.tty_struct*, %struct.serial_struct*)* @cy_set_serial_info, void (%struct.tty_struct*, %struct.seq_file*)* null, i32 (%struct.seq_file*, i8*)* @cyclades_proc_show }, align 8, !dbg !4803
@.str.44 = private unnamed_addr constant [44 x i8] c"\013Couldn't register Cyclades serial driver\0A\00", align 1
@.str.45 = private unnamed_addr constant [102 x i8] c"\013cyc:Cyclades-Z Error: you need an external power supply for this number of ports.\0AFirmware halted.\0A\00", align 1
@.str.46 = private unnamed_addr constant [42 x i8] c"\013cyc:Cyclades-Z firmware not yet loaded\0A\00", align 1
@.str.47 = private unnamed_addr constant [8 x i8] c"cy_open\00", align 1
@.str.48 = private unnamed_addr constant [42 x i8] c"\013cyc:startup(1) retval on ttyC%d was %x\0A\00", align 1
@.str.49 = private unnamed_addr constant [42 x i8] c"\013cyc:startup(2) retval on ttyC%d was %x\0A\00", align 1
@baud_table = internal constant [22 x i32] [i32 0, i32 50, i32 75, i32 110, i32 134, i32 150, i32 200, i32 300, i32 600, i32 1200, i32 1800, i32 2400, i32 4800, i32 9600, i32 19200, i32 38400, i32 57600, i32 76800, i32 115200, i32 150000, i32 230400, i32 0], align 16, !dbg !4805
@baud_cor3 = internal constant [21 x i8] c"\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\09\09\08\08\08\08\07\07", align 16, !dbg !4811
@rflow_thr = internal constant [21 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\0A\0A\0A\0A\0A\0A\0A\0A", align 16, !dbg !4813
@.str.50 = private unnamed_addr constant [45 x i8] c"\013cyc:set_line_char retval on ttyC%d was %x\0A\00", align 1
@.str.51 = private unnamed_addr constant [48 x i8] c"\013cyc:set_line_char(2) retval on ttyC%d was %x\0A\00", align 1
@.str.52 = private unnamed_addr constant [9 x i8] c"cy_close\00", align 1
@.str.53 = private unnamed_addr constant [9 x i8] c"cy_write\00", align 1
@.str.54 = private unnamed_addr constant [12 x i8] c"cy_put_char\00", align 1
@.str.55 = private unnamed_addr constant [15 x i8] c"cy_flush_chars\00", align 1
@.str.56 = private unnamed_addr constant [14 x i8] c"cy_write_room\00", align 1
@.str.57 = private unnamed_addr constant [19 x i8] c"cy_chars_in_buffer\00", align 1
@.str.58 = private unnamed_addr constant [9 x i8] c"cy_ioctl\00", align 1
@.str.59 = private unnamed_addr constant [28 x i8] c"include/linux/thread_info.h\00", align 1
@.str.60 = private unnamed_addr constant [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", align 1
@.str.61 = private unnamed_addr constant [12 x i8] c"cy_throttle\00", align 1
@.str.62 = private unnamed_addr constant [14 x i8] c"cy_send_xchar\00", align 1
@.str.63 = private unnamed_addr constant [14 x i8] c"cy_unthrottle\00", align 1
@.str.64 = private unnamed_addr constant [8 x i8] c"cy_stop\00", align 1
@.str.65 = private unnamed_addr constant [9 x i8] c"cy_start\00", align 1
@.str.66 = private unnamed_addr constant [10 x i8] c"cy_hangup\00", align 1
@.str.67 = private unnamed_addr constant [9 x i8] c"cy_break\00", align 1
@.str.68 = private unnamed_addr constant [46 x i8] c"\013cyc:cy_break (set) retval on ttyC%d was %x\0A\00", align 1
@.str.69 = private unnamed_addr constant [46 x i8] c"\017cyc:cy_break (clr) retval on ttyC%d was %x\0A\00", align 1
@.str.70 = private unnamed_addr constant [16 x i8] c"cy_flush_buffer\00", align 1
@.str.71 = private unnamed_addr constant [45 x i8] c"\013cyc: flush_buffer retval on ttyC%d was %x\0A\00", align 1
@__func__.cy_tiocmget = private unnamed_addr constant [12 x i8] c"cy_tiocmget\00", align 1
@__func__.cy_tiocmset = private unnamed_addr constant [12 x i8] c"cy_tiocmset\00", align 1
@.str.72 = private unnamed_addr constant [46 x i8] c"\013cyc:set_modem_info retval on ttyC%d was %x\0A\00", align 1
@cy_set_serial_info._rs = internal global %struct.ratelimit_state { %struct.raw_spinlock undef, i32 1250, i32 10, i32 0, i32 0, i64 0, i64 0 }, align 8, !dbg !4815
@__func__.cy_set_serial_info = private unnamed_addr constant [19 x i8] c"cy_set_serial_info\00", align 1
@.str.73 = private unnamed_addr constant [32 x i8] c"use of SPD flags is deprecated\0A\00", align 1
@.str.74 = private unnamed_addr constant [71 x i8] c"Dev TimeOpen   BytesOut  IdleOut    BytesIn   IdleIn  Overruns  Ldisc\0A\00", align 1
@.str.75 = private unnamed_addr constant [41 x i8] c"%3d %8lu %10lu %8lu %10lu %8lu %9lu %6d\0A\00", align 1
@.str.76 = private unnamed_addr constant [42 x i8] c"%3d %8lu %10lu %8lu %10lu %8lu %9lu %6ld\0A\00", align 1
@.str.77 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.78 = private unnamed_addr constant [4 x i8] c"2.6\00", align 1
@llvm.used = appending global [9 x i8*] [i8* bitcast (void ()* @cy_cleanup_module to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_cy_init251 to i8*), i8* bitcast (void ()** @__exitcall_cy_cleanup_module to i8*), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__UNIQUE_ID_file252, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__UNIQUE_ID_license253, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__UNIQUE_ID_version254, i32 0, i32 0), i8* bitcast (%struct.module_version_attribute** @__modver_attr to i8*), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__UNIQUE_ID_alias255, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__UNIQUE_ID_firmware256, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @cy_cleanup_module() #0 section ".exit.text" !dbg !4826 {
entry:
  %card = alloca %struct.cyclades_card*, align 8
  %i = alloca i32, align 4
  %e1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %card, metadata !4827, metadata !DIExpression()), !dbg !4828
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4829, metadata !DIExpression()), !dbg !4830
  call void @llvm.dbg.declare(metadata i32* %e1, metadata !4831, metadata !DIExpression()), !dbg !4832
  %call = call i32 @del_timer(%struct.timer_list* @cyz_timerlist) #11, !dbg !4833
  %0 = load %struct.tty_driver*, %struct.tty_driver** @cy_serial_driver, align 8, !dbg !4834
  %call1 = call i32 @tty_unregister_driver(%struct.tty_driver* %0) #11, !dbg !4835
  store i32 %call1, i32* %e1, align 4, !dbg !4836
  %1 = load i32, i32* %e1, align 4, !dbg !4837
  %tobool = icmp ne i32 %1, 0, !dbg !4837
  br i1 %tobool, label %if.then, label %if.end, !dbg !4839

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %e1, align 4, !dbg !4840
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 %2) #12, !dbg !4841
  br label %if.end, !dbg !4841

if.end:                                           ; preds = %if.then, %entry
  call void @pci_unregister_driver(%struct.pci_driver* @cy_pci_driver) #11, !dbg !4842
  store i32 0, i32* %i, align 4, !dbg !4843
  br label %for.cond, !dbg !4845

for.cond:                                         ; preds = %for.inc23, %if.end
  %3 = load i32, i32* %i, align 4, !dbg !4846
  %cmp = icmp ult i32 %3, 4, !dbg !4848
  br i1 %cmp, label %for.body, label %for.end25, !dbg !4849

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %i, align 4, !dbg !4850
  %idxprom = zext i32 %4 to i64, !dbg !4852
  %arrayidx = getelementptr [4 x %struct.cyclades_card], [4 x %struct.cyclades_card]* @cy_card, i64 0, i64 %idxprom, !dbg !4852
  store %struct.cyclades_card* %arrayidx, %struct.cyclades_card** %card, align 8, !dbg !4853
  %5 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !4854
  %base_addr = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %5, i32 0, i32 0, !dbg !4856
  %6 = load i8*, i8** %base_addr, align 8, !dbg !4856
  %tobool3 = icmp ne i8* %6, null, !dbg !4854
  br i1 %tobool3, label %if.then4, label %if.end22, !dbg !4857

if.then4:                                         ; preds = %for.body
  br label %do.body, !dbg !4858

do.body:                                          ; preds = %if.then4
  %7 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !4860
  %base_addr5 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %7, i32 0, i32 0, !dbg !4860
  %8 = load i8*, i8** %base_addr5, align 8, !dbg !4860
  %add.ptr = getelementptr i8, i8* %8, i64 6144, !dbg !4860
  call void @writeb(i8 zeroext 0, i8* %add.ptr) #11, !dbg !4860
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !4860, !srcloc !4862
  br label %do.end, !dbg !4860

do.end:                                           ; preds = %do.body
  %9 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !4863
  %base_addr6 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %9, i32 0, i32 0, !dbg !4864
  %10 = load i8*, i8** %base_addr6, align 8, !dbg !4864
  call void @iounmap(i8* %10) #11, !dbg !4865
  %11 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !4866
  %ctl_addr = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %11, i32 0, i32 1, !dbg !4868
  %p9050 = bitcast %union.anon* %ctl_addr to i8**, !dbg !4869
  %12 = load i8*, i8** %p9050, align 8, !dbg !4869
  %tobool7 = icmp ne i8* %12, null, !dbg !4866
  br i1 %tobool7, label %if.then8, label %if.end11, !dbg !4870

if.then8:                                         ; preds = %do.end
  %13 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !4871
  %ctl_addr9 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %13, i32 0, i32 1, !dbg !4872
  %p905010 = bitcast %union.anon* %ctl_addr9 to i8**, !dbg !4873
  %14 = load i8*, i8** %p905010, align 8, !dbg !4873
  call void @iounmap(i8* %14) #11, !dbg !4874
  br label %if.end11, !dbg !4874

if.end11:                                         ; preds = %if.then8, %do.end
  %15 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !4875
  %irq = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %15, i32 0, i32 3, !dbg !4877
  %16 = load i32, i32* %irq, align 8, !dbg !4877
  %tobool12 = icmp ne i32 %16, 0, !dbg !4875
  br i1 %tobool12, label %land.lhs.true, label %if.end17, !dbg !4878

land.lhs.true:                                    ; preds = %if.end11
  %17 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !4879
  %call13 = call zeroext i1 @cy_is_Z(%struct.cyclades_card* %17) #11, !dbg !4880
  br i1 %call13, label %if.end17, label %if.then14, !dbg !4881

if.then14:                                        ; preds = %land.lhs.true
  %18 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !4882
  %irq15 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %18, i32 0, i32 3, !dbg !4883
  %19 = load i32, i32* %irq15, align 8, !dbg !4883
  %20 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !4884
  %21 = bitcast %struct.cyclades_card* %20 to i8*, !dbg !4884
  %call16 = call i8* @free_irq(i32 %19, i8* %21) #11, !dbg !4885
  br label %if.end17, !dbg !4885

if.end17:                                         ; preds = %if.then14, %land.lhs.true, %if.end11
  %22 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !4886
  %first_line = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %22, i32 0, i32 5, !dbg !4888
  %23 = load i32, i32* %first_line, align 8, !dbg !4888
  store i32 %23, i32* %e1, align 4, !dbg !4889
  br label %for.cond18, !dbg !4890

for.cond18:                                       ; preds = %for.inc, %if.end17
  %24 = load i32, i32* %e1, align 4, !dbg !4891
  %25 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !4893
  %first_line19 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %25, i32 0, i32 5, !dbg !4894
  %26 = load i32, i32* %first_line19, align 8, !dbg !4894
  %27 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !4895
  %nports = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %27, i32 0, i32 6, !dbg !4896
  %28 = load i32, i32* %nports, align 4, !dbg !4896
  %add = add i32 %26, %28, !dbg !4897
  %cmp20 = icmp ult i32 %24, %add, !dbg !4898
  br i1 %cmp20, label %for.body21, label %for.end, !dbg !4899

for.body21:                                       ; preds = %for.cond18
  %29 = load %struct.tty_driver*, %struct.tty_driver** @cy_serial_driver, align 8, !dbg !4900
  %30 = load i32, i32* %e1, align 4, !dbg !4901
  call void @tty_unregister_device(%struct.tty_driver* %29, i32 %30) #11, !dbg !4902
  br label %for.inc, !dbg !4902

for.inc:                                          ; preds = %for.body21
  %31 = load i32, i32* %e1, align 4, !dbg !4903
  %inc = add i32 %31, 1, !dbg !4903
  store i32 %inc, i32* %e1, align 4, !dbg !4903
  br label %for.cond18, !dbg !4904, !llvm.loop !4905

for.end:                                          ; preds = %for.cond18
  %32 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !4907
  %ports = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %32, i32 0, i32 11, !dbg !4908
  %33 = load %struct.cyclades_port*, %struct.cyclades_port** %ports, align 8, !dbg !4908
  %34 = bitcast %struct.cyclades_port* %33 to i8*, !dbg !4907
  call void @kfree(i8* %34) #11, !dbg !4909
  br label %if.end22, !dbg !4910

if.end22:                                         ; preds = %for.end, %for.body
  br label %for.inc23, !dbg !4911

for.inc23:                                        ; preds = %if.end22
  %35 = load i32, i32* %i, align 4, !dbg !4912
  %inc24 = add i32 %35, 1, !dbg !4912
  store i32 %inc24, i32* %i, align 4, !dbg !4912
  br label %for.cond, !dbg !4913, !llvm.loop !4914

for.end25:                                        ; preds = %for.cond
  %36 = load %struct.tty_driver*, %struct.tty_driver** @cy_serial_driver, align 8, !dbg !4916
  call void @put_tty_driver(%struct.tty_driver* %36) #11, !dbg !4917
  ret void, !dbg !4918
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noredzone
declare dso_local i32 @del_timer(%struct.timer_list*) #2

; Function Attrs: noredzone
declare dso_local i32 @tty_unregister_driver(%struct.tty_driver*) #2

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #3

; Function Attrs: noredzone
declare dso_local void @pci_unregister_driver(%struct.pci_driver*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writeb(i8 zeroext %val, i8* %addr) #4 !dbg !4919 {
entry:
  %val.addr = alloca i8, align 1
  %addr.addr = alloca i8*, align 8
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !4925, metadata !DIExpression()), !dbg !4926
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !4927, metadata !DIExpression()), !dbg !4926
  %0 = load i8, i8* %val.addr, align 1, !dbg !4926
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !4926
  call void asm sideeffect "movb $0,$1", "q,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8 %0, i8* %1) #10, !dbg !4926, !srcloc !4928
  ret void, !dbg !4926
}

; Function Attrs: noredzone
declare dso_local void @iounmap(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @cy_is_Z(%struct.cyclades_card* %card) #4 !dbg !4929 {
entry:
  %card.addr = alloca %struct.cyclades_card*, align 8
  store %struct.cyclades_card* %card, %struct.cyclades_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %card.addr, metadata !4932, metadata !DIExpression()), !dbg !4933
  %0 = load %struct.cyclades_card*, %struct.cyclades_card** %card.addr, align 8, !dbg !4934
  %num_chips = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %0, i32 0, i32 4, !dbg !4935
  %1 = load i32, i32* %num_chips, align 4, !dbg !4935
  %cmp = icmp eq i32 %1, -1, !dbg !4936
  ret i1 %cmp, !dbg !4937
}

; Function Attrs: noredzone
declare dso_local i8* @free_irq(i32, i8*) #2

; Function Attrs: noredzone
declare dso_local void @tty_unregister_device(%struct.tty_driver*, i32) #2

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noredzone
declare dso_local void @put_tty_driver(%struct.tty_driver*) #2

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @cy_init() #0 section ".init.text" !dbg !4938 {
entry:
  %retval = alloca i32, align 4
  %nboards = alloca i32, align 4
  %retval1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nboards, metadata !4941, metadata !DIExpression()), !dbg !4942
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !4943, metadata !DIExpression()), !dbg !4944
  store i32 -12, i32* %retval1, align 4, !dbg !4944
  %call = call %struct.tty_driver* @alloc_tty_driver(i32 256) #11, !dbg !4945
  store %struct.tty_driver* %call, %struct.tty_driver** @cy_serial_driver, align 8, !dbg !4946
  %0 = load %struct.tty_driver*, %struct.tty_driver** @cy_serial_driver, align 8, !dbg !4947
  %tobool = icmp ne %struct.tty_driver* %0, null, !dbg !4947
  br i1 %tobool, label %if.end, label %if.then, !dbg !4949

if.then:                                          ; preds = %entry
  br label %err, !dbg !4950

if.end:                                           ; preds = %entry
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.42, i64 0, i64 0)) #12, !dbg !4951
  %1 = load %struct.tty_driver*, %struct.tty_driver** @cy_serial_driver, align 8, !dbg !4952
  %driver_name = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %1, i32 0, i32 4, !dbg !4953
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i8** %driver_name, align 8, !dbg !4954
  %2 = load %struct.tty_driver*, %struct.tty_driver** @cy_serial_driver, align 8, !dbg !4955
  %name = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %2, i32 0, i32 5, !dbg !4956
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i64 0, i64 0), i8** %name, align 8, !dbg !4957
  %3 = load %struct.tty_driver*, %struct.tty_driver** @cy_serial_driver, align 8, !dbg !4958
  %major = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %3, i32 0, i32 7, !dbg !4959
  store i32 19, i32* %major, align 4, !dbg !4960
  %4 = load %struct.tty_driver*, %struct.tty_driver** @cy_serial_driver, align 8, !dbg !4961
  %minor_start = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %4, i32 0, i32 8, !dbg !4962
  store i32 0, i32* %minor_start, align 8, !dbg !4963
  %5 = load %struct.tty_driver*, %struct.tty_driver** @cy_serial_driver, align 8, !dbg !4964
  %type = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %5, i32 0, i32 10, !dbg !4965
  store i16 3, i16* %type, align 8, !dbg !4966
  %6 = load %struct.tty_driver*, %struct.tty_driver** @cy_serial_driver, align 8, !dbg !4967
  %subtype = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %6, i32 0, i32 11, !dbg !4968
  store i16 1, i16* %subtype, align 2, !dbg !4969
  %7 = load %struct.tty_driver*, %struct.tty_driver** @cy_serial_driver, align 8, !dbg !4970
  %init_termios = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %7, i32 0, i32 12, !dbg !4971
  %8 = bitcast %struct.ktermios* %init_termios to i8*, !dbg !4972
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 bitcast (%struct.ktermios* @tty_std_termios to i8*), i64 44, i1 false), !dbg !4972
  %9 = load %struct.tty_driver*, %struct.tty_driver** @cy_serial_driver, align 8, !dbg !4973
  %init_termios3 = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %9, i32 0, i32 12, !dbg !4974
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %init_termios3, i32 0, i32 2, !dbg !4975
  store i32 3261, i32* %c_cflag, align 4, !dbg !4976
  %10 = load %struct.tty_driver*, %struct.tty_driver** @cy_serial_driver, align 8, !dbg !4977
  %flags = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %10, i32 0, i32 13, !dbg !4978
  store i64 12, i64* %flags, align 8, !dbg !4979
  %11 = load %struct.tty_driver*, %struct.tty_driver** @cy_serial_driver, align 8, !dbg !4980
  call void @tty_set_operations(%struct.tty_driver* %11, %struct.tty_operations* @cy_ops) #11, !dbg !4981
  %12 = load %struct.tty_driver*, %struct.tty_driver** @cy_serial_driver, align 8, !dbg !4982
  %call4 = call i32 @tty_register_driver(%struct.tty_driver* %12) #11, !dbg !4983
  store i32 %call4, i32* %retval1, align 4, !dbg !4984
  %13 = load i32, i32* %retval1, align 4, !dbg !4985
  %tobool5 = icmp ne i32 %13, 0, !dbg !4985
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !4987

if.then6:                                         ; preds = %if.end
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.44, i64 0, i64 0)) #12, !dbg !4988
  br label %err_frtty, !dbg !4990

if.end8:                                          ; preds = %if.end
  %call9 = call i32 @cy_detect_isa() #12, !dbg !4991
  store i32 %call9, i32* %nboards, align 4, !dbg !4992
  %call10 = call i32 @__pci_register_driver(%struct.pci_driver* @cy_pci_driver, %struct.module* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0)) #11, !dbg !4993
  store i32 %call10, i32* %retval1, align 4, !dbg !4994
  %14 = load i32, i32* %retval1, align 4, !dbg !4995
  %tobool11 = icmp ne i32 %14, 0, !dbg !4995
  br i1 %tobool11, label %land.lhs.true, label %if.end15, !dbg !4997

land.lhs.true:                                    ; preds = %if.end8
  %15 = load i32, i32* %nboards, align 4, !dbg !4998
  %tobool12 = icmp ne i32 %15, 0, !dbg !4998
  br i1 %tobool12, label %if.end15, label %if.then13, !dbg !4999

if.then13:                                        ; preds = %land.lhs.true
  %16 = load %struct.tty_driver*, %struct.tty_driver** @cy_serial_driver, align 8, !dbg !5000
  %call14 = call i32 @tty_unregister_driver(%struct.tty_driver* %16) #11, !dbg !5002
  br label %err_frtty, !dbg !5003

if.end15:                                         ; preds = %land.lhs.true, %if.end8
  store i32 0, i32* %retval, align 4, !dbg !5004
  br label %return, !dbg !5004

err_frtty:                                        ; preds = %if.then13, %if.then6
  call void @llvm.dbg.label(metadata !5005), !dbg !5006
  %17 = load %struct.tty_driver*, %struct.tty_driver** @cy_serial_driver, align 8, !dbg !5007
  call void @put_tty_driver(%struct.tty_driver* %17) #11, !dbg !5008
  br label %err, !dbg !5008

err:                                              ; preds = %err_frtty, %if.then
  call void @llvm.dbg.label(metadata !5009), !dbg !5010
  %18 = load i32, i32* %retval1, align 4, !dbg !5011
  store i32 %18, i32* %retval, align 4, !dbg !5012
  br label %return, !dbg !5012

return:                                           ; preds = %err, %if.end15
  %19 = load i32, i32* %retval, align 4, !dbg !5013
  ret i32 %19, !dbg !5013
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cyz_poll(%struct.timer_list* %unused) #4 !dbg !5014 {
entry:
  %unused.addr = alloca %struct.timer_list*, align 8
  %cinfo = alloca %struct.cyclades_card*, align 8
  %info = alloca %struct.cyclades_port*, align 8
  %expires = alloca i64, align 8
  %port = alloca i32, align 4
  %card = alloca i32, align 4
  store %struct.timer_list* %unused, %struct.timer_list** %unused.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %unused.addr, metadata !5015, metadata !DIExpression()), !dbg !5016
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %cinfo, metadata !5017, metadata !DIExpression()), !dbg !5018
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info, metadata !5019, metadata !DIExpression()), !dbg !5020
  call void @llvm.dbg.declare(metadata i64* %expires, metadata !5021, metadata !DIExpression()), !dbg !5022
  %0 = load volatile i64, i64* @jiffies, align 8, !dbg !5023
  %add = add i64 %0, 250, !dbg !5024
  store i64 %add, i64* %expires, align 8, !dbg !5022
  call void @llvm.dbg.declare(metadata i32* %port, metadata !5025, metadata !DIExpression()), !dbg !5026
  call void @llvm.dbg.declare(metadata i32* %card, metadata !5027, metadata !DIExpression()), !dbg !5028
  store i32 0, i32* %card, align 4, !dbg !5029
  br label %for.cond, !dbg !5031

for.cond:                                         ; preds = %for.inc16, %entry
  %1 = load i32, i32* %card, align 4, !dbg !5032
  %cmp = icmp ult i32 %1, 4, !dbg !5034
  br i1 %cmp, label %for.body, label %for.end18, !dbg !5035

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %card, align 4, !dbg !5036
  %idxprom = zext i32 %2 to i64, !dbg !5038
  %arrayidx = getelementptr [4 x %struct.cyclades_card], [4 x %struct.cyclades_card]* @cy_card, i64 0, i64 %idxprom, !dbg !5038
  store %struct.cyclades_card* %arrayidx, %struct.cyclades_card** %cinfo, align 8, !dbg !5039
  %3 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !5040
  %call = call zeroext i1 @cy_is_Z(%struct.cyclades_card* %3) #11, !dbg !5042
  br i1 %call, label %if.end, label %if.then, !dbg !5043

if.then:                                          ; preds = %for.body
  br label %for.inc16, !dbg !5044

if.end:                                           ; preds = %for.body
  %4 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !5045
  %call1 = call zeroext i1 @cyz_is_loaded(%struct.cyclades_card* %4) #11, !dbg !5047
  br i1 %call1, label %if.end3, label %if.then2, !dbg !5048

if.then2:                                         ; preds = %if.end
  br label %for.inc16, !dbg !5049

if.end3:                                          ; preds = %if.end
  %5 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !5050
  %intr_enabled = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %5, i32 0, i32 8, !dbg !5052
  %6 = load i32, i32* %intr_enabled, align 4, !dbg !5052
  %tobool = icmp ne i32 %6, 0, !dbg !5050
  br i1 %tobool, label %if.end6, label %if.then4, !dbg !5053

if.then4:                                         ; preds = %if.end3
  %7 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !5054
  %intr_enabled5 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %7, i32 0, i32 8, !dbg !5056
  store i32 1, i32* %intr_enabled5, align 4, !dbg !5057
  br label %for.inc16, !dbg !5058

if.end6:                                          ; preds = %if.end3
  %8 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !5059
  call void @cyz_handle_cmd(%struct.cyclades_card* %8) #11, !dbg !5060
  store i32 0, i32* %port, align 4, !dbg !5061
  br label %for.cond7, !dbg !5063

for.cond7:                                        ; preds = %for.inc, %if.end6
  %9 = load i32, i32* %port, align 4, !dbg !5064
  %10 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !5066
  %nports = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %10, i32 0, i32 6, !dbg !5067
  %11 = load i32, i32* %nports, align 4, !dbg !5067
  %cmp8 = icmp ult i32 %9, %11, !dbg !5068
  br i1 %cmp8, label %for.body9, label %for.end, !dbg !5069

for.body9:                                        ; preds = %for.cond7
  %12 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !5070
  %ports = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %12, i32 0, i32 11, !dbg !5072
  %13 = load %struct.cyclades_port*, %struct.cyclades_port** %ports, align 8, !dbg !5072
  %14 = load i32, i32* %port, align 4, !dbg !5073
  %idxprom10 = zext i32 %14 to i64, !dbg !5070
  %arrayidx11 = getelementptr %struct.cyclades_port, %struct.cyclades_port* %13, i64 %idxprom10, !dbg !5070
  store %struct.cyclades_port* %arrayidx11, %struct.cyclades_port** %info, align 8, !dbg !5074
  %15 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !5075
  %throttle = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %15, i32 0, i32 38, !dbg !5077
  %16 = load i32, i32* %throttle, align 8, !dbg !5077
  %tobool12 = icmp ne i32 %16, 0, !dbg !5075
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !5078

if.then13:                                        ; preds = %for.body9
  %17 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !5079
  call void @cyz_handle_rx(%struct.cyclades_port* %17) #11, !dbg !5080
  br label %if.end14, !dbg !5080

if.end14:                                         ; preds = %if.then13, %for.body9
  %18 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !5081
  call void @cyz_handle_tx(%struct.cyclades_port* %18) #11, !dbg !5082
  br label %for.inc, !dbg !5083

for.inc:                                          ; preds = %if.end14
  %19 = load i32, i32* %port, align 4, !dbg !5084
  %inc = add i32 %19, 1, !dbg !5084
  store i32 %inc, i32* %port, align 4, !dbg !5084
  br label %for.cond7, !dbg !5085, !llvm.loop !5086

for.end:                                          ; preds = %for.cond7
  %20 = load volatile i64, i64* @jiffies, align 8, !dbg !5088
  %21 = load i64, i64* @cyz_polling_cycle, align 8, !dbg !5089
  %add15 = add i64 %20, %21, !dbg !5090
  store i64 %add15, i64* %expires, align 8, !dbg !5091
  br label %for.inc16, !dbg !5092

for.inc16:                                        ; preds = %for.end, %if.then4, %if.then2, %if.then
  %22 = load i32, i32* %card, align 4, !dbg !5093
  %inc17 = add i32 %22, 1, !dbg !5093
  store i32 %inc17, i32* %card, align 4, !dbg !5093
  br label %for.cond, !dbg !5094, !llvm.loop !5095

for.end18:                                        ; preds = %for.cond
  %23 = load i64, i64* %expires, align 8, !dbg !5097
  %call19 = call i32 @mod_timer(%struct.timer_list* @cyz_timerlist, i64 %23) #11, !dbg !5098
  ret void, !dbg !5099
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @cyz_is_loaded(%struct.cyclades_card* %card) #4 !dbg !5100 {
entry:
  %card.addr = alloca %struct.cyclades_card*, align 8
  %fw_id = alloca %struct.FIRM_ID*, align 8
  store %struct.cyclades_card* %card, %struct.cyclades_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %card.addr, metadata !5101, metadata !DIExpression()), !dbg !5102
  call void @llvm.dbg.declare(metadata %struct.FIRM_ID** %fw_id, metadata !5103, metadata !DIExpression()), !dbg !5109
  %0 = load %struct.cyclades_card*, %struct.cyclades_card** %card.addr, align 8, !dbg !5110
  %base_addr = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %0, i32 0, i32 0, !dbg !5111
  %1 = load i8*, i8** %base_addr, align 8, !dbg !5111
  %add.ptr = getelementptr i8, i8* %1, i64 384, !dbg !5112
  %2 = bitcast i8* %add.ptr to %struct.FIRM_ID*, !dbg !5110
  store %struct.FIRM_ID* %2, %struct.FIRM_ID** %fw_id, align 8, !dbg !5109
  %3 = load %struct.cyclades_card*, %struct.cyclades_card** %card.addr, align 8, !dbg !5113
  %hw_ver = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %3, i32 0, i32 9, !dbg !5114
  %4 = load i32, i32* %hw_ver, align 8, !dbg !5114
  %cmp = icmp eq i32 %4, 0, !dbg !5115
  br i1 %cmp, label %land.rhs, label %lor.lhs.false, !dbg !5116

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.cyclades_card*, %struct.cyclades_card** %card.addr, align 8, !dbg !5117
  %call = call zeroext i1 @cyz_fpga_loaded(%struct.cyclades_card* %5) #11, !dbg !5118
  br i1 %call, label %land.rhs, label %land.end, !dbg !5119

land.rhs:                                         ; preds = %lor.lhs.false, %entry
  %6 = load %struct.FIRM_ID*, %struct.FIRM_ID** %fw_id, align 8, !dbg !5120
  %signature = getelementptr inbounds %struct.FIRM_ID, %struct.FIRM_ID* %6, i32 0, i32 0, !dbg !5121
  %7 = bitcast i32* %signature to i8*, !dbg !5122
  %call1 = call i32 @readl(i8* %7) #11, !dbg !5123
  %conv = zext i32 %call1 to i64, !dbg !5123
  %cmp2 = icmp eq i64 %conv, 1431783002, !dbg !5124
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false
  %8 = phi i1 [ false, %lor.lhs.false ], [ %cmp2, %land.rhs ], !dbg !5125
  ret i1 %8, !dbg !5126
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cyz_handle_cmd(%struct.cyclades_card* %cinfo) #4 !dbg !5127 {
entry:
  %cinfo.addr = alloca %struct.cyclades_card*, align 8
  %board_ctrl = alloca %struct.BOARD_CTRL*, align 8
  %info = alloca %struct.cyclades_port*, align 8
  %channel = alloca i32, align 4
  %param = alloca i32, align 4
  %fw_ver = alloca i32, align 4
  %cmd = alloca i8, align 1
  %special_count = alloca i32, align 4
  %delta_count = alloca i32, align 4
  %dcd25 = alloca i32, align 4
  store %struct.cyclades_card* %cinfo, %struct.cyclades_card** %cinfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %cinfo.addr, metadata !5130, metadata !DIExpression()), !dbg !5131
  call void @llvm.dbg.declare(metadata %struct.BOARD_CTRL** %board_ctrl, metadata !5132, metadata !DIExpression()), !dbg !5133
  %0 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo.addr, align 8, !dbg !5134
  %board_ctrl1 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %0, i32 0, i32 2, !dbg !5135
  %1 = load %struct.BOARD_CTRL*, %struct.BOARD_CTRL** %board_ctrl1, align 8, !dbg !5135
  store %struct.BOARD_CTRL* %1, %struct.BOARD_CTRL** %board_ctrl, align 8, !dbg !5133
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info, metadata !5136, metadata !DIExpression()), !dbg !5137
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !5138, metadata !DIExpression()), !dbg !5139
  call void @llvm.dbg.declare(metadata i32* %param, metadata !5140, metadata !DIExpression()), !dbg !5141
  call void @llvm.dbg.declare(metadata i32* %fw_ver, metadata !5142, metadata !DIExpression()), !dbg !5143
  call void @llvm.dbg.declare(metadata i8* %cmd, metadata !5144, metadata !DIExpression()), !dbg !5145
  call void @llvm.dbg.declare(metadata i32* %special_count, metadata !5146, metadata !DIExpression()), !dbg !5147
  call void @llvm.dbg.declare(metadata i32* %delta_count, metadata !5148, metadata !DIExpression()), !dbg !5149
  %2 = load %struct.BOARD_CTRL*, %struct.BOARD_CTRL** %board_ctrl, align 8, !dbg !5150
  %fw_version = getelementptr inbounds %struct.BOARD_CTRL, %struct.BOARD_CTRL* %2, i32 0, i32 1, !dbg !5151
  %3 = bitcast i32* %fw_version to i8*, !dbg !5152
  %call = call i32 @readl(i8* %3) #11, !dbg !5153
  store i32 %call, i32* %fw_ver, align 4, !dbg !5154
  br label %while.cond, !dbg !5155

while.cond:                                       ; preds = %if.end54, %entry
  %4 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo.addr, align 8, !dbg !5156
  %call2 = call i32 @cyz_fetch_msg(%struct.cyclades_card* %4, i32* %channel, i8* %cmd, i32* %param) #11, !dbg !5157
  %cmp = icmp eq i32 %call2, 1, !dbg !5158
  br i1 %cmp, label %while.body, label %while.end, !dbg !5155

while.body:                                       ; preds = %while.cond
  store i32 0, i32* %special_count, align 4, !dbg !5159
  store i32 0, i32* %delta_count, align 4, !dbg !5161
  %5 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo.addr, align 8, !dbg !5162
  %ports = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %5, i32 0, i32 11, !dbg !5163
  %6 = load %struct.cyclades_port*, %struct.cyclades_port** %ports, align 8, !dbg !5163
  %7 = load i32, i32* %channel, align 4, !dbg !5164
  %idxprom = zext i32 %7 to i64, !dbg !5162
  %arrayidx = getelementptr %struct.cyclades_port, %struct.cyclades_port* %6, i64 %idxprom, !dbg !5162
  store %struct.cyclades_port* %arrayidx, %struct.cyclades_port** %info, align 8, !dbg !5165
  %8 = load i8, i8* %cmd, align 1, !dbg !5166
  %conv = zext i8 %8 to i32, !dbg !5166
  switch i32 %conv, label %sw.default [
    i32 133, label %sw.bb
    i32 134, label %sw.bb5
    i32 132, label %sw.bb12
    i32 112, label %sw.bb19
    i32 115, label %sw.bb33
    i32 114, label %sw.bb37
    i32 113, label %sw.bb41
    i32 3, label %sw.bb45
    i32 145, label %sw.bb46
  ], !dbg !5167

sw.bb:                                            ; preds = %while.body
  %9 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !5168
  %port = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %9, i32 0, i32 1, !dbg !5170
  %call3 = call i32 @tty_insert_flip_char(%struct.tty_port* %port, i8 zeroext 0, i8 signext 3) #11, !dbg !5171
  %10 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !5172
  %icount = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %10, i32 0, i32 36, !dbg !5173
  %rx = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %icount, i32 0, i32 5, !dbg !5174
  %11 = load i32, i32* %rx, align 4, !dbg !5175
  %inc = add i32 %11, 1, !dbg !5175
  store i32 %inc, i32* %rx, align 4, !dbg !5175
  %12 = load i32, i32* %special_count, align 4, !dbg !5176
  %inc4 = add i32 %12, 1, !dbg !5176
  store i32 %inc4, i32* %special_count, align 4, !dbg !5176
  br label %sw.epilog, !dbg !5177

sw.bb5:                                           ; preds = %while.body
  %13 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !5178
  %port6 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %13, i32 0, i32 1, !dbg !5179
  %call7 = call i32 @tty_insert_flip_char(%struct.tty_port* %port6, i8 zeroext 0, i8 signext 2) #11, !dbg !5180
  %14 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !5181
  %icount8 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %14, i32 0, i32 36, !dbg !5182
  %rx9 = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %icount8, i32 0, i32 5, !dbg !5183
  %15 = load i32, i32* %rx9, align 4, !dbg !5184
  %inc10 = add i32 %15, 1, !dbg !5184
  store i32 %inc10, i32* %rx9, align 4, !dbg !5184
  %16 = load i32, i32* %special_count, align 4, !dbg !5185
  %inc11 = add i32 %16, 1, !dbg !5185
  store i32 %inc11, i32* %special_count, align 4, !dbg !5185
  br label %sw.epilog, !dbg !5186

sw.bb12:                                          ; preds = %while.body
  %17 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !5187
  %port13 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %17, i32 0, i32 1, !dbg !5188
  %call14 = call i32 @tty_insert_flip_char(%struct.tty_port* %port13, i8 zeroext 0, i8 signext 1) #11, !dbg !5189
  %18 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !5190
  %icount15 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %18, i32 0, i32 36, !dbg !5191
  %rx16 = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %icount15, i32 0, i32 5, !dbg !5192
  %19 = load i32, i32* %rx16, align 4, !dbg !5193
  %inc17 = add i32 %19, 1, !dbg !5193
  store i32 %inc17, i32* %rx16, align 4, !dbg !5193
  %20 = load i32, i32* %special_count, align 4, !dbg !5194
  %inc18 = add i32 %20, 1, !dbg !5194
  store i32 %inc18, i32* %special_count, align 4, !dbg !5194
  br label %sw.epilog, !dbg !5195

sw.bb19:                                          ; preds = %while.body
  %21 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !5196
  %icount20 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %21, i32 0, i32 36, !dbg !5197
  %dcd = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %icount20, i32 0, i32 3, !dbg !5198
  %22 = load i32, i32* %dcd, align 4, !dbg !5199
  %inc21 = add i32 %22, 1, !dbg !5199
  store i32 %inc21, i32* %dcd, align 4, !dbg !5199
  %23 = load i32, i32* %delta_count, align 4, !dbg !5200
  %inc22 = add i32 %23, 1, !dbg !5200
  store i32 %inc22, i32* %delta_count, align 4, !dbg !5200
  %24 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !5201
  %port23 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %24, i32 0, i32 1, !dbg !5203
  %call24 = call zeroext i1 @tty_port_check_carrier(%struct.tty_port* %port23) #11, !dbg !5204
  br i1 %call24, label %if.then, label %if.end32, !dbg !5205

if.then:                                          ; preds = %sw.bb19
  call void @llvm.dbg.declare(metadata i32* %dcd25, metadata !5206, metadata !DIExpression()), !dbg !5208
  %25 = load i32, i32* %fw_ver, align 4, !dbg !5209
  %cmp26 = icmp ugt i32 %25, 241, !dbg !5210
  br i1 %cmp26, label %cond.true, label %cond.false, !dbg !5209

cond.true:                                        ; preds = %if.then
  %26 = load i32, i32* %param, align 4, !dbg !5211
  br label %cond.end, !dbg !5209

cond.false:                                       ; preds = %if.then
  %27 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !5212
  %u = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %27, i32 0, i32 3, !dbg !5213
  %cyz = bitcast %union.anon.67* %u to %struct.anon.69*, !dbg !5214
  %ch_ctrl = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cyz, i32 0, i32 0, !dbg !5215
  %28 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !5215
  %rs_status = getelementptr inbounds %struct.CH_CTRL, %struct.CH_CTRL* %28, i32 0, i32 10, !dbg !5216
  %29 = bitcast i32* %rs_status to i8*, !dbg !5217
  %call28 = call i32 @readl(i8* %29) #11, !dbg !5218
  br label %cond.end, !dbg !5209

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %26, %cond.true ], [ %call28, %cond.false ], !dbg !5209
  store i32 %cond, i32* %dcd25, align 4, !dbg !5208
  %30 = load i32, i32* %dcd25, align 4, !dbg !5219
  %and = and i32 %30, 256, !dbg !5221
  %tobool = icmp ne i32 %and, 0, !dbg !5221
  br i1 %tobool, label %if.then29, label %if.else, !dbg !5222

if.then29:                                        ; preds = %cond.end
  %31 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !5223
  %port30 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %31, i32 0, i32 1, !dbg !5223
  %open_wait = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port30, i32 0, i32 8, !dbg !5223
  call void @__wake_up(%struct.wait_queue_head* %open_wait, i32 1, i32 1, i8* null) #11, !dbg !5223
  br label %if.end, !dbg !5223

if.else:                                          ; preds = %cond.end
  %32 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !5224
  %port31 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %32, i32 0, i32 1, !dbg !5225
  call void @tty_port_tty_hangup(%struct.tty_port* %port31, i1 zeroext false) #11, !dbg !5226
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then29
  br label %if.end32, !dbg !5227

if.end32:                                         ; preds = %if.end, %sw.bb19
  br label %sw.epilog, !dbg !5228

sw.bb33:                                          ; preds = %while.body
  %33 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !5229
  %icount34 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %33, i32 0, i32 36, !dbg !5230
  %cts = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %icount34, i32 0, i32 0, !dbg !5231
  %34 = load i32, i32* %cts, align 8, !dbg !5232
  %inc35 = add i32 %34, 1, !dbg !5232
  store i32 %inc35, i32* %cts, align 8, !dbg !5232
  %35 = load i32, i32* %delta_count, align 4, !dbg !5233
  %inc36 = add i32 %35, 1, !dbg !5233
  store i32 %inc36, i32* %delta_count, align 4, !dbg !5233
  br label %sw.epilog, !dbg !5234

sw.bb37:                                          ; preds = %while.body
  %36 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !5235
  %icount38 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %36, i32 0, i32 36, !dbg !5236
  %rng = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %icount38, i32 0, i32 2, !dbg !5237
  %37 = load i32, i32* %rng, align 8, !dbg !5238
  %inc39 = add i32 %37, 1, !dbg !5238
  store i32 %inc39, i32* %rng, align 8, !dbg !5238
  %38 = load i32, i32* %delta_count, align 4, !dbg !5239
  %inc40 = add i32 %38, 1, !dbg !5239
  store i32 %inc40, i32* %delta_count, align 4, !dbg !5239
  br label %sw.epilog, !dbg !5240

sw.bb41:                                          ; preds = %while.body
  %39 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !5241
  %icount42 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %39, i32 0, i32 36, !dbg !5242
  %dsr = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %icount42, i32 0, i32 1, !dbg !5243
  %40 = load i32, i32* %dsr, align 4, !dbg !5244
  %inc43 = add i32 %40, 1, !dbg !5244
  store i32 %inc43, i32* %dsr, align 4, !dbg !5244
  %41 = load i32, i32* %delta_count, align 4, !dbg !5245
  %inc44 = add i32 %41, 1, !dbg !5245
  store i32 %inc44, i32* %delta_count, align 4, !dbg !5245
  br label %sw.epilog, !dbg !5246

sw.bb45:                                          ; preds = %while.body
  %42 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !5247
  %shutdown_wait = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %42, i32 0, i32 37, !dbg !5248
  call void @complete(%struct.completion* %shutdown_wait) #11, !dbg !5249
  br label %sw.epilog, !dbg !5250

sw.bb46:                                          ; preds = %while.body
  br label %sw.epilog, !dbg !5251

sw.default:                                       ; preds = %while.body
  br label %sw.epilog, !dbg !5252

sw.epilog:                                        ; preds = %sw.default, %sw.bb46, %sw.bb45, %sw.bb41, %sw.bb37, %sw.bb33, %if.end32, %sw.bb12, %sw.bb5, %sw.bb
  %43 = load i32, i32* %delta_count, align 4, !dbg !5253
  %tobool47 = icmp ne i32 %43, 0, !dbg !5253
  br i1 %tobool47, label %if.then48, label %if.end50, !dbg !5255

if.then48:                                        ; preds = %sw.epilog
  %44 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !5256
  %port49 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %44, i32 0, i32 1, !dbg !5256
  %delta_msr_wait = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port49, i32 0, i32 9, !dbg !5256
  call void @__wake_up(%struct.wait_queue_head* %delta_msr_wait, i32 1, i32 1, i8* null) #11, !dbg !5256
  br label %if.end50, !dbg !5256

if.end50:                                         ; preds = %if.then48, %sw.epilog
  %45 = load i32, i32* %special_count, align 4, !dbg !5257
  %tobool51 = icmp ne i32 %45, 0, !dbg !5257
  br i1 %tobool51, label %if.then52, label %if.end54, !dbg !5259

if.then52:                                        ; preds = %if.end50
  %46 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !5260
  %port53 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %46, i32 0, i32 1, !dbg !5261
  call void @tty_schedule_flip(%struct.tty_port* %port53) #11, !dbg !5262
  br label %if.end54, !dbg !5262

if.end54:                                         ; preds = %if.then52, %if.end50
  br label %while.cond, !dbg !5155, !llvm.loop !5263

while.end:                                        ; preds = %while.cond
  ret void, !dbg !5265
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cyz_handle_rx(%struct.cyclades_port* %info) #4 !dbg !5266 {
entry:
  %info.addr = alloca %struct.cyclades_port*, align 8
  %buf_ctrl = alloca %struct.BUF_CTRL*, align 8
  %cinfo = alloca %struct.cyclades_card*, align 8
  %port = alloca %struct.tty_port*, align 8
  %char_count = alloca i32, align 4
  %len = alloca i32, align 4
  %data = alloca i8, align 1
  %rx_put = alloca i32, align 4
  %rx_get = alloca i32, align 4
  %new_rx_get = alloca i32, align 4
  %rx_bufsize = alloca i32, align 4
  %rx_bufaddr = alloca i32, align 4
  store %struct.cyclades_port* %info, %struct.cyclades_port** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info.addr, metadata !5269, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.declare(metadata %struct.BUF_CTRL** %buf_ctrl, metadata !5271, metadata !DIExpression()), !dbg !5272
  %0 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !5273
  %u = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %0, i32 0, i32 3, !dbg !5274
  %cyz = bitcast %union.anon.67* %u to %struct.anon.69*, !dbg !5275
  %buf_ctrl1 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cyz, i32 0, i32 1, !dbg !5276
  %1 = load %struct.BUF_CTRL*, %struct.BUF_CTRL** %buf_ctrl1, align 8, !dbg !5276
  store %struct.BUF_CTRL* %1, %struct.BUF_CTRL** %buf_ctrl, align 8, !dbg !5272
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %cinfo, metadata !5277, metadata !DIExpression()), !dbg !5278
  %2 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !5279
  %card = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %2, i32 0, i32 2, !dbg !5280
  %3 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !5280
  store %struct.cyclades_card* %3, %struct.cyclades_card** %cinfo, align 8, !dbg !5278
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !5281, metadata !DIExpression()), !dbg !5282
  %4 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !5283
  %port2 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %4, i32 0, i32 1, !dbg !5284
  store %struct.tty_port* %port2, %struct.tty_port** %port, align 8, !dbg !5282
  call void @llvm.dbg.declare(metadata i32* %char_count, metadata !5285, metadata !DIExpression()), !dbg !5286
  call void @llvm.dbg.declare(metadata i32* %len, metadata !5287, metadata !DIExpression()), !dbg !5288
  call void @llvm.dbg.declare(metadata i8* %data, metadata !5289, metadata !DIExpression()), !dbg !5290
  call void @llvm.dbg.declare(metadata i32* %rx_put, metadata !5291, metadata !DIExpression()), !dbg !5292
  call void @llvm.dbg.declare(metadata i32* %rx_get, metadata !5293, metadata !DIExpression()), !dbg !5294
  call void @llvm.dbg.declare(metadata i32* %new_rx_get, metadata !5295, metadata !DIExpression()), !dbg !5296
  call void @llvm.dbg.declare(metadata i32* %rx_bufsize, metadata !5297, metadata !DIExpression()), !dbg !5298
  call void @llvm.dbg.declare(metadata i32* %rx_bufaddr, metadata !5299, metadata !DIExpression()), !dbg !5300
  %5 = load %struct.BUF_CTRL*, %struct.BUF_CTRL** %buf_ctrl, align 8, !dbg !5301
  %rx_get3 = getelementptr inbounds %struct.BUF_CTRL, %struct.BUF_CTRL* %5, i32 0, i32 9, !dbg !5302
  %6 = bitcast i32* %rx_get3 to i8*, !dbg !5303
  %call = call i32 @readl(i8* %6) #11, !dbg !5304
  store i32 %call, i32* %new_rx_get, align 4, !dbg !5305
  store i32 %call, i32* %rx_get, align 4, !dbg !5306
  %7 = load %struct.BUF_CTRL*, %struct.BUF_CTRL** %buf_ctrl, align 8, !dbg !5307
  %rx_put4 = getelementptr inbounds %struct.BUF_CTRL, %struct.BUF_CTRL* %7, i32 0, i32 10, !dbg !5308
  %8 = bitcast i32* %rx_put4 to i8*, !dbg !5309
  %call5 = call i32 @readl(i8* %8) #11, !dbg !5310
  store i32 %call5, i32* %rx_put, align 4, !dbg !5311
  %9 = load %struct.BUF_CTRL*, %struct.BUF_CTRL** %buf_ctrl, align 8, !dbg !5312
  %rx_bufsize6 = getelementptr inbounds %struct.BUF_CTRL, %struct.BUF_CTRL* %9, i32 0, i32 7, !dbg !5313
  %10 = bitcast i32* %rx_bufsize6 to i8*, !dbg !5314
  %call7 = call i32 @readl(i8* %10) #11, !dbg !5315
  store i32 %call7, i32* %rx_bufsize, align 4, !dbg !5316
  %11 = load %struct.BUF_CTRL*, %struct.BUF_CTRL** %buf_ctrl, align 8, !dbg !5317
  %rx_bufaddr8 = getelementptr inbounds %struct.BUF_CTRL, %struct.BUF_CTRL* %11, i32 0, i32 6, !dbg !5318
  %12 = bitcast i32* %rx_bufaddr8 to i8*, !dbg !5319
  %call9 = call i32 @readl(i8* %12) #11, !dbg !5320
  store i32 %call9, i32* %rx_bufaddr, align 4, !dbg !5321
  %13 = load i32, i32* %rx_put, align 4, !dbg !5322
  %14 = load i32, i32* %rx_get, align 4, !dbg !5324
  %cmp = icmp uge i32 %13, %14, !dbg !5325
  br i1 %cmp, label %if.then, label %if.else, !dbg !5326

if.then:                                          ; preds = %entry
  %15 = load i32, i32* %rx_put, align 4, !dbg !5327
  %16 = load i32, i32* %rx_get, align 4, !dbg !5328
  %sub = sub i32 %15, %16, !dbg !5329
  store i32 %sub, i32* %char_count, align 4, !dbg !5330
  br label %if.end, !dbg !5331

if.else:                                          ; preds = %entry
  %17 = load i32, i32* %rx_put, align 4, !dbg !5332
  %18 = load i32, i32* %rx_get, align 4, !dbg !5333
  %sub10 = sub i32 %17, %18, !dbg !5334
  %19 = load i32, i32* %rx_bufsize, align 4, !dbg !5335
  %add = add i32 %sub10, %19, !dbg !5336
  store i32 %add, i32* %char_count, align 4, !dbg !5337
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %20 = load i32, i32* %char_count, align 4, !dbg !5338
  %tobool = icmp ne i32 %20, 0, !dbg !5338
  br i1 %tobool, label %if.end12, label %if.then11, !dbg !5340

if.then11:                                        ; preds = %if.end
  br label %do.end, !dbg !5341

if.end12:                                         ; preds = %if.end
  %21 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !5342
  %22 = load i32, i32* %char_count, align 4, !dbg !5343
  %conv = zext i32 %22 to i64, !dbg !5343
  %call13 = call i32 @tty_buffer_request_room(%struct.tty_port* %21, i64 %conv) #11, !dbg !5344
  store i32 %call13, i32* %len, align 4, !dbg !5345
  br label %while.cond, !dbg !5346

while.cond:                                       ; preds = %while.body, %if.end12
  %23 = load i32, i32* %len, align 4, !dbg !5347
  %dec = add i32 %23, -1, !dbg !5347
  store i32 %dec, i32* %len, align 4, !dbg !5347
  %tobool14 = icmp ne i32 %23, 0, !dbg !5346
  br i1 %tobool14, label %while.body, label %while.end, !dbg !5346

while.body:                                       ; preds = %while.cond
  %24 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !5348
  %base_addr = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %24, i32 0, i32 0, !dbg !5350
  %25 = load i8*, i8** %base_addr, align 8, !dbg !5350
  %26 = load i32, i32* %rx_bufaddr, align 4, !dbg !5351
  %idx.ext = zext i32 %26 to i64, !dbg !5352
  %add.ptr = getelementptr i8, i8* %25, i64 %idx.ext, !dbg !5352
  %27 = load i32, i32* %new_rx_get, align 4, !dbg !5353
  %idx.ext15 = zext i32 %27 to i64, !dbg !5354
  %add.ptr16 = getelementptr i8, i8* %add.ptr, i64 %idx.ext15, !dbg !5354
  %call17 = call zeroext i8 @readb(i8* %add.ptr16) #11, !dbg !5355
  store i8 %call17, i8* %data, align 1, !dbg !5356
  %28 = load i32, i32* %new_rx_get, align 4, !dbg !5357
  %add18 = add i32 %28, 1, !dbg !5358
  %29 = load i32, i32* %rx_bufsize, align 4, !dbg !5359
  %sub19 = sub i32 %29, 1, !dbg !5360
  %and = and i32 %add18, %sub19, !dbg !5361
  store i32 %and, i32* %new_rx_get, align 4, !dbg !5362
  %30 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !5363
  %31 = load i8, i8* %data, align 1, !dbg !5364
  %call20 = call i32 @tty_insert_flip_char(%struct.tty_port* %30, i8 zeroext %31, i8 signext 0) #11, !dbg !5365
  %32 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !5366
  %idle_stats = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %32, i32 0, i32 35, !dbg !5367
  %recv_bytes = getelementptr inbounds %struct.cyclades_idle_stats, %struct.cyclades_idle_stats* %idle_stats, i32 0, i32 3, !dbg !5368
  %33 = load i64, i64* %recv_bytes, align 8, !dbg !5369
  %inc = add i64 %33, 1, !dbg !5369
  store i64 %inc, i64* %recv_bytes, align 8, !dbg !5369
  %34 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !5370
  %icount = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %34, i32 0, i32 36, !dbg !5371
  %rx = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %icount, i32 0, i32 5, !dbg !5372
  %35 = load i32, i32* %rx, align 4, !dbg !5373
  %inc21 = add i32 %35, 1, !dbg !5373
  store i32 %inc21, i32* %rx, align 4, !dbg !5373
  br label %while.cond, !dbg !5346, !llvm.loop !5374

while.end:                                        ; preds = %while.cond
  %36 = load volatile i64, i64* @jiffies, align 8, !dbg !5376
  %37 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !5377
  %idle_stats22 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %37, i32 0, i32 35, !dbg !5378
  %recv_idle = getelementptr inbounds %struct.cyclades_idle_stats, %struct.cyclades_idle_stats* %idle_stats22, i32 0, i32 1, !dbg !5379
  store i64 %36, i64* %recv_idle, align 8, !dbg !5380
  %38 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !5381
  %port23 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %38, i32 0, i32 1, !dbg !5382
  call void @tty_schedule_flip(%struct.tty_port* %port23) #11, !dbg !5383
  br label %do.body, !dbg !5384

do.body:                                          ; preds = %while.end
  %39 = load i32, i32* %new_rx_get, align 4, !dbg !5385
  %40 = load %struct.BUF_CTRL*, %struct.BUF_CTRL** %buf_ctrl, align 8, !dbg !5385
  %rx_get24 = getelementptr inbounds %struct.BUF_CTRL, %struct.BUF_CTRL* %40, i32 0, i32 9, !dbg !5385
  %41 = bitcast i32* %rx_get24 to i8*, !dbg !5385
  call void @writel(i32 %39, i8* %41) #11, !dbg !5385
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !5385, !srcloc !5387
  br label %do.end, !dbg !5385

do.end:                                           ; preds = %if.then11, %do.body
  ret void, !dbg !5388
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cyz_handle_tx(%struct.cyclades_port* %info) #4 !dbg !5389 {
entry:
  %info.addr = alloca %struct.cyclades_port*, align 8
  %buf_ctrl = alloca %struct.BUF_CTRL*, align 8
  %cinfo = alloca %struct.cyclades_card*, align 8
  %tty = alloca %struct.tty_struct*, align 8
  %data = alloca i8, align 1
  %char_count = alloca i32, align 4
  %tx_put = alloca i32, align 4
  %tx_get = alloca i32, align 4
  %tx_bufsize = alloca i32, align 4
  %tx_bufaddr = alloca i32, align 4
  store %struct.cyclades_port* %info, %struct.cyclades_port** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info.addr, metadata !5390, metadata !DIExpression()), !dbg !5391
  call void @llvm.dbg.declare(metadata %struct.BUF_CTRL** %buf_ctrl, metadata !5392, metadata !DIExpression()), !dbg !5393
  %0 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !5394
  %u = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %0, i32 0, i32 3, !dbg !5395
  %cyz = bitcast %union.anon.67* %u to %struct.anon.69*, !dbg !5396
  %buf_ctrl1 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cyz, i32 0, i32 1, !dbg !5397
  %1 = load %struct.BUF_CTRL*, %struct.BUF_CTRL** %buf_ctrl1, align 8, !dbg !5397
  store %struct.BUF_CTRL* %1, %struct.BUF_CTRL** %buf_ctrl, align 8, !dbg !5393
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %cinfo, metadata !5398, metadata !DIExpression()), !dbg !5399
  %2 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !5400
  %card = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %2, i32 0, i32 2, !dbg !5401
  %3 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !5401
  store %struct.cyclades_card* %3, %struct.cyclades_card** %cinfo, align 8, !dbg !5399
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty, metadata !5402, metadata !DIExpression()), !dbg !5403
  call void @llvm.dbg.declare(metadata i8* %data, metadata !5404, metadata !DIExpression()), !dbg !5405
  call void @llvm.dbg.declare(metadata i32* %char_count, metadata !5406, metadata !DIExpression()), !dbg !5407
  call void @llvm.dbg.declare(metadata i32* %tx_put, metadata !5408, metadata !DIExpression()), !dbg !5409
  call void @llvm.dbg.declare(metadata i32* %tx_get, metadata !5410, metadata !DIExpression()), !dbg !5411
  call void @llvm.dbg.declare(metadata i32* %tx_bufsize, metadata !5412, metadata !DIExpression()), !dbg !5413
  call void @llvm.dbg.declare(metadata i32* %tx_bufaddr, metadata !5414, metadata !DIExpression()), !dbg !5415
  %4 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !5416
  %xmit_cnt = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %4, i32 0, i32 30, !dbg !5418
  %5 = load i32, i32* %xmit_cnt, align 8, !dbg !5418
  %cmp = icmp sle i32 %5, 0, !dbg !5419
  br i1 %cmp, label %if.then, label %if.end, !dbg !5420

if.then:                                          ; preds = %entry
  br label %do.end57, !dbg !5421

if.end:                                           ; preds = %entry
  %6 = load %struct.BUF_CTRL*, %struct.BUF_CTRL** %buf_ctrl, align 8, !dbg !5422
  %tx_get2 = getelementptr inbounds %struct.BUF_CTRL, %struct.BUF_CTRL* %6, i32 0, i32 4, !dbg !5423
  %7 = bitcast i32* %tx_get2 to i8*, !dbg !5424
  %call = call i32 @readl(i8* %7) #11, !dbg !5425
  store i32 %call, i32* %tx_get, align 4, !dbg !5426
  %8 = load %struct.BUF_CTRL*, %struct.BUF_CTRL** %buf_ctrl, align 8, !dbg !5427
  %tx_put3 = getelementptr inbounds %struct.BUF_CTRL, %struct.BUF_CTRL* %8, i32 0, i32 5, !dbg !5428
  %9 = bitcast i32* %tx_put3 to i8*, !dbg !5429
  %call4 = call i32 @readl(i8* %9) #11, !dbg !5430
  store i32 %call4, i32* %tx_put, align 4, !dbg !5431
  %10 = load %struct.BUF_CTRL*, %struct.BUF_CTRL** %buf_ctrl, align 8, !dbg !5432
  %tx_bufsize5 = getelementptr inbounds %struct.BUF_CTRL, %struct.BUF_CTRL* %10, i32 0, i32 2, !dbg !5433
  %11 = bitcast i32* %tx_bufsize5 to i8*, !dbg !5434
  %call6 = call i32 @readl(i8* %11) #11, !dbg !5435
  store i32 %call6, i32* %tx_bufsize, align 4, !dbg !5436
  %12 = load %struct.BUF_CTRL*, %struct.BUF_CTRL** %buf_ctrl, align 8, !dbg !5437
  %tx_bufaddr7 = getelementptr inbounds %struct.BUF_CTRL, %struct.BUF_CTRL* %12, i32 0, i32 1, !dbg !5438
  %13 = bitcast i32* %tx_bufaddr7 to i8*, !dbg !5439
  %call8 = call i32 @readl(i8* %13) #11, !dbg !5440
  store i32 %call8, i32* %tx_bufaddr, align 4, !dbg !5441
  %14 = load i32, i32* %tx_put, align 4, !dbg !5442
  %15 = load i32, i32* %tx_get, align 4, !dbg !5444
  %cmp9 = icmp uge i32 %14, %15, !dbg !5445
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !5446

if.then10:                                        ; preds = %if.end
  %16 = load i32, i32* %tx_get, align 4, !dbg !5447
  %17 = load i32, i32* %tx_put, align 4, !dbg !5448
  %sub = sub i32 %16, %17, !dbg !5449
  %sub11 = sub i32 %sub, 1, !dbg !5450
  %18 = load i32, i32* %tx_bufsize, align 4, !dbg !5451
  %add = add i32 %sub11, %18, !dbg !5452
  store i32 %add, i32* %char_count, align 4, !dbg !5453
  br label %if.end14, !dbg !5454

if.else:                                          ; preds = %if.end
  %19 = load i32, i32* %tx_get, align 4, !dbg !5455
  %20 = load i32, i32* %tx_put, align 4, !dbg !5456
  %sub12 = sub i32 %19, %20, !dbg !5457
  %sub13 = sub i32 %sub12, 1, !dbg !5458
  store i32 %sub13, i32* %char_count, align 4, !dbg !5459
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then10
  %21 = load i32, i32* %char_count, align 4, !dbg !5460
  %tobool = icmp ne i32 %21, 0, !dbg !5460
  br i1 %tobool, label %if.end16, label %if.then15, !dbg !5462

if.then15:                                        ; preds = %if.end14
  br label %do.end57, !dbg !5463

if.end16:                                         ; preds = %if.end14
  %22 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !5464
  %port = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %22, i32 0, i32 1, !dbg !5465
  %call17 = call %struct.tty_struct* @tty_port_tty_get(%struct.tty_port* %port) #11, !dbg !5466
  store %struct.tty_struct* %call17, %struct.tty_struct** %tty, align 8, !dbg !5467
  %23 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !5468
  %cmp18 = icmp eq %struct.tty_struct* %23, null, !dbg !5470
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !5471

if.then19:                                        ; preds = %if.end16
  br label %ztxdone, !dbg !5472

if.end20:                                         ; preds = %if.end16
  %24 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !5473
  %x_char = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %24, i32 0, i32 25, !dbg !5475
  %25 = load i8, i8* %x_char, align 4, !dbg !5475
  %tobool21 = icmp ne i8 %25, 0, !dbg !5473
  br i1 %tobool21, label %if.then22, label %if.end29, !dbg !5476

if.then22:                                        ; preds = %if.end20
  %26 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !5477
  %x_char23 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %26, i32 0, i32 25, !dbg !5479
  %27 = load i8, i8* %x_char23, align 4, !dbg !5479
  store i8 %27, i8* %data, align 1, !dbg !5480
  br label %do.body, !dbg !5481

do.body:                                          ; preds = %if.then22
  %28 = load i8, i8* %data, align 1, !dbg !5482
  %29 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !5482
  %base_addr = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %29, i32 0, i32 0, !dbg !5482
  %30 = load i8*, i8** %base_addr, align 8, !dbg !5482
  %31 = load i32, i32* %tx_bufaddr, align 4, !dbg !5482
  %idx.ext = zext i32 %31 to i64, !dbg !5482
  %add.ptr = getelementptr i8, i8* %30, i64 %idx.ext, !dbg !5482
  %32 = load i32, i32* %tx_put, align 4, !dbg !5482
  %idx.ext24 = zext i32 %32 to i64, !dbg !5482
  %add.ptr25 = getelementptr i8, i8* %add.ptr, i64 %idx.ext24, !dbg !5482
  call void @writeb(i8 zeroext %28, i8* %add.ptr25) #11, !dbg !5482
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !5482, !srcloc !5484
  br label %do.end, !dbg !5482

do.end:                                           ; preds = %do.body
  %33 = load i32, i32* %tx_put, align 4, !dbg !5485
  %add26 = add i32 %33, 1, !dbg !5486
  %34 = load i32, i32* %tx_bufsize, align 4, !dbg !5487
  %sub27 = sub i32 %34, 1, !dbg !5488
  %and = and i32 %add26, %sub27, !dbg !5489
  store i32 %and, i32* %tx_put, align 4, !dbg !5490
  %35 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !5491
  %x_char28 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %35, i32 0, i32 25, !dbg !5492
  store i8 0, i8* %x_char28, align 4, !dbg !5493
  %36 = load i32, i32* %char_count, align 4, !dbg !5494
  %dec = add i32 %36, -1, !dbg !5494
  store i32 %dec, i32* %char_count, align 4, !dbg !5494
  %37 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !5495
  %icount = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %37, i32 0, i32 36, !dbg !5496
  %tx = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %icount, i32 0, i32 4, !dbg !5497
  %38 = load i32, i32* %tx, align 8, !dbg !5498
  %inc = add i32 %38, 1, !dbg !5498
  store i32 %inc, i32* %tx, align 8, !dbg !5498
  br label %if.end29, !dbg !5499

if.end29:                                         ; preds = %do.end, %if.end20
  br label %while.cond, !dbg !5500

while.cond:                                       ; preds = %do.end47, %if.end29
  %39 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !5501
  %xmit_cnt30 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %39, i32 0, i32 30, !dbg !5502
  %40 = load i32, i32* %xmit_cnt30, align 8, !dbg !5502
  %tobool31 = icmp ne i32 %40, 0, !dbg !5501
  br i1 %tobool31, label %land.rhs, label %land.end, !dbg !5503

land.rhs:                                         ; preds = %while.cond
  %41 = load i32, i32* %char_count, align 4, !dbg !5504
  %tobool32 = icmp ne i32 %41, 0, !dbg !5503
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %42 = phi i1 [ false, %while.cond ], [ %tobool32, %land.rhs ], !dbg !5505
  br i1 %42, label %while.body, label %while.end, !dbg !5500

while.body:                                       ; preds = %land.end
  %43 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !5506
  %port33 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %43, i32 0, i32 1, !dbg !5508
  %xmit_buf = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port33, i32 0, i32 15, !dbg !5509
  %44 = load i8*, i8** %xmit_buf, align 8, !dbg !5509
  %45 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !5510
  %xmit_tail = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %45, i32 0, i32 29, !dbg !5511
  %46 = load i32, i32* %xmit_tail, align 4, !dbg !5511
  %idxprom = sext i32 %46 to i64, !dbg !5506
  %arrayidx = getelementptr i8, i8* %44, i64 %idxprom, !dbg !5506
  %47 = load i8, i8* %arrayidx, align 1, !dbg !5506
  store i8 %47, i8* %data, align 1, !dbg !5512
  %48 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !5513
  %xmit_cnt34 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %48, i32 0, i32 30, !dbg !5514
  %49 = load i32, i32* %xmit_cnt34, align 8, !dbg !5515
  %dec35 = add i32 %49, -1, !dbg !5515
  store i32 %dec35, i32* %xmit_cnt34, align 8, !dbg !5515
  %50 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !5516
  %xmit_tail36 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %50, i32 0, i32 29, !dbg !5517
  %51 = load i32, i32* %xmit_tail36, align 4, !dbg !5517
  %add37 = add i32 %51, 1, !dbg !5518
  %conv = sext i32 %add37 to i64, !dbg !5519
  %and38 = and i64 %conv, 4095, !dbg !5520
  %conv39 = trunc i64 %and38 to i32, !dbg !5519
  %52 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !5521
  %xmit_tail40 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %52, i32 0, i32 29, !dbg !5522
  store i32 %conv39, i32* %xmit_tail40, align 4, !dbg !5523
  br label %do.body41, !dbg !5524

do.body41:                                        ; preds = %while.body
  %53 = load i8, i8* %data, align 1, !dbg !5525
  %54 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !5525
  %base_addr42 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %54, i32 0, i32 0, !dbg !5525
  %55 = load i8*, i8** %base_addr42, align 8, !dbg !5525
  %56 = load i32, i32* %tx_bufaddr, align 4, !dbg !5525
  %idx.ext43 = zext i32 %56 to i64, !dbg !5525
  %add.ptr44 = getelementptr i8, i8* %55, i64 %idx.ext43, !dbg !5525
  %57 = load i32, i32* %tx_put, align 4, !dbg !5525
  %idx.ext45 = zext i32 %57 to i64, !dbg !5525
  %add.ptr46 = getelementptr i8, i8* %add.ptr44, i64 %idx.ext45, !dbg !5525
  call void @writeb(i8 zeroext %53, i8* %add.ptr46) #11, !dbg !5525
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !5525, !srcloc !5527
  br label %do.end47, !dbg !5525

do.end47:                                         ; preds = %do.body41
  %58 = load i32, i32* %tx_put, align 4, !dbg !5528
  %add48 = add i32 %58, 1, !dbg !5529
  %59 = load i32, i32* %tx_bufsize, align 4, !dbg !5530
  %sub49 = sub i32 %59, 1, !dbg !5531
  %and50 = and i32 %add48, %sub49, !dbg !5532
  store i32 %and50, i32* %tx_put, align 4, !dbg !5533
  %60 = load i32, i32* %char_count, align 4, !dbg !5534
  %dec51 = add i32 %60, -1, !dbg !5534
  store i32 %dec51, i32* %char_count, align 4, !dbg !5534
  %61 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !5535
  %icount52 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %61, i32 0, i32 36, !dbg !5536
  %tx53 = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %icount52, i32 0, i32 4, !dbg !5537
  %62 = load i32, i32* %tx53, align 8, !dbg !5538
  %inc54 = add i32 %62, 1, !dbg !5538
  store i32 %inc54, i32* %tx53, align 8, !dbg !5538
  br label %while.cond, !dbg !5500, !llvm.loop !5539

while.end:                                        ; preds = %land.end
  %63 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !5541
  call void @tty_wakeup(%struct.tty_struct* %63) #11, !dbg !5542
  %64 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !5543
  call void @tty_kref_put(%struct.tty_struct* %64) #11, !dbg !5544
  br label %ztxdone, !dbg !5544

ztxdone:                                          ; preds = %while.end, %if.then19
  call void @llvm.dbg.label(metadata !5545), !dbg !5546
  br label %do.body55, !dbg !5547

do.body55:                                        ; preds = %ztxdone
  %65 = load i32, i32* %tx_put, align 4, !dbg !5548
  %66 = load %struct.BUF_CTRL*, %struct.BUF_CTRL** %buf_ctrl, align 8, !dbg !5548
  %tx_put56 = getelementptr inbounds %struct.BUF_CTRL, %struct.BUF_CTRL* %66, i32 0, i32 5, !dbg !5548
  %67 = bitcast i32* %tx_put56 to i8*, !dbg !5548
  call void @writel(i32 %65, i8* %67) #11, !dbg !5548
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !5548, !srcloc !5550
  br label %do.end57, !dbg !5548

do.end57:                                         ; preds = %if.then, %if.then15, %do.body55
  ret void, !dbg !5551
}

; Function Attrs: noredzone
declare dso_local i32 @mod_timer(%struct.timer_list*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @cyz_fpga_loaded(%struct.cyclades_card* %card) #4 !dbg !5552 {
entry:
  %card.addr = alloca %struct.cyclades_card*, align 8
  store %struct.cyclades_card* %card, %struct.cyclades_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %card.addr, metadata !5553, metadata !DIExpression()), !dbg !5554
  %0 = load %struct.cyclades_card*, %struct.cyclades_card** %card.addr, align 8, !dbg !5555
  %ctl_addr = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %0, i32 0, i32 1, !dbg !5556
  %p9060 = bitcast %union.anon* %ctl_addr to %struct.RUNTIME_9060**, !dbg !5557
  %1 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %p9060, align 8, !dbg !5557
  %call = call zeroext i1 @__cyz_fpga_loaded(%struct.RUNTIME_9060* %1) #11, !dbg !5558
  ret i1 %call, !dbg !5559
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @readl(i8* %addr) #4 !dbg !5560 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !5565, metadata !DIExpression()), !dbg !5566
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5567, metadata !DIExpression()), !dbg !5566
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !5566
  %1 = bitcast i8* %0 to i32*, !dbg !5566
  %2 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %1) #10, !dbg !5566, !srcloc !5568
  store i32 %2, i32* %ret, align 4, !dbg !5566
  %3 = load i32, i32* %ret, align 4, !dbg !5566
  ret i32 %3, !dbg !5566
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__cyz_fpga_loaded(%struct.RUNTIME_9060* %ctl_addr) #4 !dbg !5569 {
entry:
  %ctl_addr.addr = alloca %struct.RUNTIME_9060*, align 8
  store %struct.RUNTIME_9060* %ctl_addr, %struct.RUNTIME_9060** %ctl_addr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RUNTIME_9060** %ctl_addr.addr, metadata !5572, metadata !DIExpression()), !dbg !5573
  %0 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %ctl_addr.addr, align 8, !dbg !5574
  %init_ctrl = getelementptr inbounds %struct.RUNTIME_9060, %struct.RUNTIME_9060* %0, i32 0, i32 27, !dbg !5575
  %1 = bitcast i32* %init_ctrl to i8*, !dbg !5576
  %call = call i32 @readl(i8* %1) #11, !dbg !5577
  %and = and i32 %call, 131072, !dbg !5578
  %tobool = icmp ne i32 %and, 0, !dbg !5577
  ret i1 %tobool, !dbg !5579
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cyz_fetch_msg(%struct.cyclades_card* %cinfo, i32* %channel, i8* %cmd, i32* %param) #4 !dbg !5580 {
entry:
  %retval = alloca i32, align 4
  %cinfo.addr = alloca %struct.cyclades_card*, align 8
  %channel.addr = alloca i32*, align 8
  %cmd.addr = alloca i8*, align 8
  %param.addr = alloca i32*, align 8
  %board_ctrl = alloca %struct.BOARD_CTRL*, align 8
  %loc_doorbell = alloca i64, align 8
  store %struct.cyclades_card* %cinfo, %struct.cyclades_card** %cinfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %cinfo.addr, metadata !5585, metadata !DIExpression()), !dbg !5586
  store i32* %channel, i32** %channel.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %channel.addr, metadata !5587, metadata !DIExpression()), !dbg !5588
  store i8* %cmd, i8** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cmd.addr, metadata !5589, metadata !DIExpression()), !dbg !5590
  store i32* %param, i32** %param.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %param.addr, metadata !5591, metadata !DIExpression()), !dbg !5592
  call void @llvm.dbg.declare(metadata %struct.BOARD_CTRL** %board_ctrl, metadata !5593, metadata !DIExpression()), !dbg !5594
  %0 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo.addr, align 8, !dbg !5595
  %board_ctrl1 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %0, i32 0, i32 2, !dbg !5596
  %1 = load %struct.BOARD_CTRL*, %struct.BOARD_CTRL** %board_ctrl1, align 8, !dbg !5596
  store %struct.BOARD_CTRL* %1, %struct.BOARD_CTRL** %board_ctrl, align 8, !dbg !5594
  call void @llvm.dbg.declare(metadata i64* %loc_doorbell, metadata !5597, metadata !DIExpression()), !dbg !5598
  %2 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo.addr, align 8, !dbg !5599
  %ctl_addr = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %2, i32 0, i32 1, !dbg !5600
  %p9060 = bitcast %union.anon* %ctl_addr to %struct.RUNTIME_9060**, !dbg !5601
  %3 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %p9060, align 8, !dbg !5601
  %loc_doorbell2 = getelementptr inbounds %struct.RUNTIME_9060, %struct.RUNTIME_9060* %3, i32 0, i32 25, !dbg !5602
  %4 = bitcast i32* %loc_doorbell2 to i8*, !dbg !5603
  %call = call i32 @readl(i8* %4) #11, !dbg !5604
  %conv = zext i32 %call to i64, !dbg !5604
  store i64 %conv, i64* %loc_doorbell, align 8, !dbg !5605
  %5 = load i64, i64* %loc_doorbell, align 8, !dbg !5606
  %tobool = icmp ne i64 %5, 0, !dbg !5606
  br i1 %tobool, label %if.then, label %if.end, !dbg !5608

if.then:                                          ; preds = %entry
  %6 = load i64, i64* %loc_doorbell, align 8, !dbg !5609
  %and = and i64 255, %6, !dbg !5611
  %conv3 = trunc i64 %and to i8, !dbg !5612
  %7 = load i8*, i8** %cmd.addr, align 8, !dbg !5613
  store i8 %conv3, i8* %7, align 1, !dbg !5614
  %8 = load %struct.BOARD_CTRL*, %struct.BOARD_CTRL** %board_ctrl, align 8, !dbg !5615
  %fwcmd_channel = getelementptr inbounds %struct.BOARD_CTRL, %struct.BOARD_CTRL* %8, i32 0, i32 7, !dbg !5616
  %9 = bitcast i32* %fwcmd_channel to i8*, !dbg !5617
  %call4 = call i32 @readl(i8* %9) #11, !dbg !5618
  %10 = load i32*, i32** %channel.addr, align 8, !dbg !5619
  store i32 %call4, i32* %10, align 4, !dbg !5620
  %11 = load %struct.BOARD_CTRL*, %struct.BOARD_CTRL** %board_ctrl, align 8, !dbg !5621
  %fwcmd_param = getelementptr inbounds %struct.BOARD_CTRL, %struct.BOARD_CTRL* %11, i32 0, i32 8, !dbg !5622
  %12 = bitcast i32* %fwcmd_param to i8*, !dbg !5623
  %call5 = call i32 @readl(i8* %12) #11, !dbg !5624
  %13 = load i32*, i32** %param.addr, align 8, !dbg !5625
  store i32 %call5, i32* %13, align 4, !dbg !5626
  br label %do.body, !dbg !5627

do.body:                                          ; preds = %if.then
  %14 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo.addr, align 8, !dbg !5628
  %ctl_addr6 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %14, i32 0, i32 1, !dbg !5628
  %p90607 = bitcast %union.anon* %ctl_addr6 to %struct.RUNTIME_9060**, !dbg !5628
  %15 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %p90607, align 8, !dbg !5628
  %loc_doorbell8 = getelementptr inbounds %struct.RUNTIME_9060, %struct.RUNTIME_9060* %15, i32 0, i32 25, !dbg !5628
  %16 = bitcast i32* %loc_doorbell8 to i8*, !dbg !5628
  call void @writel(i32 -1, i8* %16) #11, !dbg !5628
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !5628, !srcloc !5630
  br label %do.end, !dbg !5628

do.end:                                           ; preds = %do.body
  store i32 1, i32* %retval, align 4, !dbg !5631
  br label %return, !dbg !5631

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5632
  br label %return, !dbg !5632

return:                                           ; preds = %if.end, %do.end
  %17 = load i32, i32* %retval, align 4, !dbg !5633
  ret i32 %17, !dbg !5633
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @tty_insert_flip_char(%struct.tty_port* %port, i8 zeroext %ch, i8 signext %flag) #4 !dbg !5634 {
entry:
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.tty_port*, align 8
  %ch.addr = alloca i8, align 1
  %flag.addr = alloca i8, align 1
  %tb = alloca %struct.tty_buffer*, align 8
  %change = alloca i32, align 4
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !5638, metadata !DIExpression()), !dbg !5639
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !5640, metadata !DIExpression()), !dbg !5641
  store i8 %flag, i8* %flag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %flag.addr, metadata !5642, metadata !DIExpression()), !dbg !5643
  call void @llvm.dbg.declare(metadata %struct.tty_buffer** %tb, metadata !5644, metadata !DIExpression()), !dbg !5645
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !5646
  %buf = getelementptr inbounds %struct.tty_port, %struct.tty_port* %0, i32 0, i32 0, !dbg !5647
  %tail = getelementptr inbounds %struct.tty_bufhead, %struct.tty_bufhead* %buf, i32 0, i32 8, !dbg !5648
  %1 = load %struct.tty_buffer*, %struct.tty_buffer** %tail, align 8, !dbg !5648
  store %struct.tty_buffer* %1, %struct.tty_buffer** %tb, align 8, !dbg !5645
  call void @llvm.dbg.declare(metadata i32* %change, metadata !5649, metadata !DIExpression()), !dbg !5650
  %2 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !5651
  %flags = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %2, i32 0, i32 5, !dbg !5652
  %3 = load i32, i32* %flags, align 8, !dbg !5652
  %and = and i32 %3, 1, !dbg !5653
  %tobool = icmp ne i32 %and, 0, !dbg !5653
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !5654

land.rhs:                                         ; preds = %entry
  %4 = load i8, i8* %flag.addr, align 1, !dbg !5655
  %conv = sext i8 %4 to i32, !dbg !5655
  %cmp = icmp ne i32 %conv, 0, !dbg !5656
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !5657
  %land.ext = zext i1 %5 to i32, !dbg !5654
  store i32 %land.ext, i32* %change, align 4, !dbg !5658
  %6 = load i32, i32* %change, align 4, !dbg !5659
  %tobool2 = icmp ne i32 %6, 0, !dbg !5659
  br i1 %tobool2, label %if.end12, label %land.lhs.true, !dbg !5661

land.lhs.true:                                    ; preds = %land.end
  %7 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !5662
  %used = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %7, i32 0, i32 1, !dbg !5663
  %8 = load i32, i32* %used, align 8, !dbg !5663
  %9 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !5664
  %size = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %9, i32 0, i32 2, !dbg !5665
  %10 = load i32, i32* %size, align 4, !dbg !5665
  %cmp3 = icmp slt i32 %8, %10, !dbg !5666
  br i1 %cmp3, label %if.then, label %if.end12, !dbg !5667

if.then:                                          ; preds = %land.lhs.true
  %11 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !5668
  %flags5 = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %11, i32 0, i32 5, !dbg !5671
  %12 = load i32, i32* %flags5, align 8, !dbg !5671
  %neg = xor i32 %12, -1, !dbg !5672
  %and6 = and i32 %neg, 1, !dbg !5673
  %tobool7 = icmp ne i32 %and6, 0, !dbg !5673
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !5674

if.then8:                                         ; preds = %if.then
  %13 = load i8, i8* %flag.addr, align 1, !dbg !5675
  %14 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !5676
  %15 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !5677
  %used9 = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %15, i32 0, i32 1, !dbg !5678
  %16 = load i32, i32* %used9, align 8, !dbg !5678
  %call = call i8* @flag_buf_ptr(%struct.tty_buffer* %14, i32 %16) #11, !dbg !5679
  store i8 %13, i8* %call, align 1, !dbg !5680
  br label %if.end, !dbg !5681

if.end:                                           ; preds = %if.then8, %if.then
  %17 = load i8, i8* %ch.addr, align 1, !dbg !5682
  %18 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !5683
  %19 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !5684
  %used10 = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %19, i32 0, i32 1, !dbg !5685
  %20 = load i32, i32* %used10, align 8, !dbg !5686
  %inc = add i32 %20, 1, !dbg !5686
  store i32 %inc, i32* %used10, align 8, !dbg !5686
  %call11 = call i8* @char_buf_ptr(%struct.tty_buffer* %18, i32 %20) #11, !dbg !5687
  store i8 %17, i8* %call11, align 1, !dbg !5688
  store i32 1, i32* %retval, align 4, !dbg !5689
  br label %return, !dbg !5689

if.end12:                                         ; preds = %land.lhs.true, %land.end
  %21 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !5690
  %22 = load i8, i8* %ch.addr, align 1, !dbg !5691
  %23 = load i8, i8* %flag.addr, align 1, !dbg !5692
  %call13 = call i32 @__tty_insert_flip_char(%struct.tty_port* %21, i8 zeroext %22, i8 signext %23) #11, !dbg !5693
  store i32 %call13, i32* %retval, align 4, !dbg !5694
  br label %return, !dbg !5694

return:                                           ; preds = %if.end12, %if.end
  %24 = load i32, i32* %retval, align 4, !dbg !5695
  ret i32 %24, !dbg !5695
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @tty_port_check_carrier(%struct.tty_port* %port) #4 !dbg !5696 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !5699, metadata !DIExpression()), !dbg !5700
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !5701
  %iflags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %0, i32 0, i32 11, !dbg !5702
  %call = call zeroext i1 @test_bit(i64 4, i64* %iflags) #11, !dbg !5703
  ret i1 %call, !dbg !5704
}

; Function Attrs: noredzone
declare dso_local void @__wake_up(%struct.wait_queue_head*, i32, i32, i8*) #2

; Function Attrs: noredzone
declare dso_local void @tty_port_tty_hangup(%struct.tty_port*, i1 zeroext) #2

; Function Attrs: noredzone
declare dso_local void @complete(%struct.completion*) #2

; Function Attrs: noredzone
declare dso_local void @tty_schedule_flip(%struct.tty_port*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writel(i32 %val, i8* %addr) #4 !dbg !5705 {
entry:
  %val.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !5708, metadata !DIExpression()), !dbg !5709
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !5710, metadata !DIExpression()), !dbg !5709
  %0 = load i32, i32* %val.addr, align 4, !dbg !5709
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !5709
  %2 = bitcast i8* %1 to i32*, !dbg !5709
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %0, i32* %2) #10, !dbg !5709, !srcloc !5711
  ret void, !dbg !5709
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @flag_buf_ptr(%struct.tty_buffer* %b, i32 %ofs) #4 !dbg !5712 {
entry:
  %b.addr = alloca %struct.tty_buffer*, align 8
  %ofs.addr = alloca i32, align 4
  store %struct.tty_buffer* %b, %struct.tty_buffer** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_buffer** %b.addr, metadata !5715, metadata !DIExpression()), !dbg !5716
  store i32 %ofs, i32* %ofs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ofs.addr, metadata !5717, metadata !DIExpression()), !dbg !5718
  %0 = load %struct.tty_buffer*, %struct.tty_buffer** %b.addr, align 8, !dbg !5719
  %1 = load i32, i32* %ofs.addr, align 4, !dbg !5720
  %call = call i8* @char_buf_ptr(%struct.tty_buffer* %0, i32 %1) #11, !dbg !5721
  %2 = load %struct.tty_buffer*, %struct.tty_buffer** %b.addr, align 8, !dbg !5722
  %size = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %2, i32 0, i32 2, !dbg !5723
  %3 = load i32, i32* %size, align 4, !dbg !5723
  %idx.ext = sext i32 %3 to i64, !dbg !5724
  %add.ptr = getelementptr i8, i8* %call, i64 %idx.ext, !dbg !5724
  ret i8* %add.ptr, !dbg !5725
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @char_buf_ptr(%struct.tty_buffer* %b, i32 %ofs) #4 !dbg !5726 {
entry:
  %b.addr = alloca %struct.tty_buffer*, align 8
  %ofs.addr = alloca i32, align 4
  store %struct.tty_buffer* %b, %struct.tty_buffer** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_buffer** %b.addr, metadata !5729, metadata !DIExpression()), !dbg !5730
  store i32 %ofs, i32* %ofs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ofs.addr, metadata !5731, metadata !DIExpression()), !dbg !5732
  %0 = load %struct.tty_buffer*, %struct.tty_buffer** %b.addr, align 8, !dbg !5733
  %data = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %0, i32 0, i32 6, !dbg !5734
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %data, i64 0, i64 0, !dbg !5733
  %1 = bitcast i64* %arraydecay to i8*, !dbg !5735
  %2 = load i32, i32* %ofs.addr, align 4, !dbg !5736
  %idx.ext = sext i32 %2 to i64, !dbg !5737
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !5737
  ret i8* %add.ptr, !dbg !5738
}

; Function Attrs: noredzone
declare dso_local i32 @__tty_insert_flip_char(%struct.tty_port*, i8 zeroext, i8 signext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #4 !dbg !5739 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !5746, metadata !DIExpression()), !dbg !5749
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !5751, metadata !DIExpression()), !dbg !5752
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !5753, metadata !DIExpression()), !dbg !5754
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !5755, metadata !DIExpression()), !dbg !5757
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !5759, metadata !DIExpression()), !dbg !5760
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !5761, metadata !DIExpression()), !dbg !5766
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5768, metadata !DIExpression()), !dbg !5769
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !5770, metadata !DIExpression()), !dbg !5771
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !5772, metadata !DIExpression()), !dbg !5773
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !5774
  %1 = load i64, i64* %nr.addr, align 8, !dbg !5775
  %div = sdiv i64 %1, 64, !dbg !5775
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !5776
  %2 = bitcast i64* %add.ptr to i8*, !dbg !5774
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !5777
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !5778
  %conv.i = trunc i64 %4 to i32, !dbg !5778
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #13, !dbg !5779
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !5780
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !5780
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #13, !dbg !5780
  %7 = load i64, i64* %nr.addr, align 8, !dbg !5781
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !5781
  br i1 %8, label %cond.true, label %cond.false, !dbg !5781

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !5781
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !5781
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !5782
  %and.i = and i64 %11, 63, !dbg !5783
  %shl.i = shl i64 1, %and.i, !dbg !5784
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !5785
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !5786
  %shr.i = ashr i64 %13, 6, !dbg !5787
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !5785
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !5785
  %and1.i = and i64 %shl.i, %14, !dbg !5788
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !5789
  %conv = zext i1 %cmp.i to i32, !dbg !5781
  br label %cond.end, !dbg !5781

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !5781
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !5781
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !5790
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !5791
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #10, !dbg !5792, !srcloc !5793
  store i8 %19, i8* %oldbit.i, align 1, !dbg !5792
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !5794
  %tobool.i = trunc i8 %20 to i1, !dbg !5794
  %conv2 = zext i1 %tobool.i to i32, !dbg !5781
  br label %cond.end, !dbg !5781

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !5781
  %tobool = icmp ne i32 %cond, 0, !dbg !5781
  ret i1 %tobool, !dbg !5795
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #4 !dbg !5796 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !5800, metadata !DIExpression()), !dbg !5801
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !5802, metadata !DIExpression()), !dbg !5803
  ret i1 true, !dbg !5804
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #4 !dbg !5805 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5809, metadata !DIExpression()), !dbg !5810
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5811, metadata !DIExpression()), !dbg !5812
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !5813, metadata !DIExpression()), !dbg !5814
  ret void, !dbg !5815
}

; Function Attrs: noredzone
declare dso_local i32 @tty_buffer_request_room(%struct.tty_port*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @readb(i8* %addr) #4 !dbg !5816 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i8, align 1
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !5819, metadata !DIExpression()), !dbg !5820
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !5821, metadata !DIExpression()), !dbg !5820
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !5820
  %1 = call i8 asm sideeffect "movb $1,$0", "=q,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %0) #10, !dbg !5820, !srcloc !5822
  store i8 %1, i8* %ret, align 1, !dbg !5820
  %2 = load i8, i8* %ret, align 1, !dbg !5820
  ret i8 %2, !dbg !5820
}

; Function Attrs: noredzone
declare dso_local %struct.tty_struct* @tty_port_tty_get(%struct.tty_port*) #2

; Function Attrs: noredzone
declare dso_local void @tty_wakeup(%struct.tty_struct*) #2

; Function Attrs: noredzone
declare dso_local void @tty_kref_put(%struct.tty_struct*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cy_pci_probe(%struct.pci_dev* %pdev, %struct.pci_device_id* %ent) #4 !dbg !5823 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %ent.addr = alloca %struct.pci_device_id*, align 8
  %card = alloca %struct.cyclades_card*, align 8
  %addr0 = alloca i8*, align 8
  %addr2 = alloca i8*, align 8
  %card_name = alloca i8*, align 8
  %mailbox = alloca i32, align 4
  %device_id = alloca i32, align 4
  %nchan = alloca i32, align 4
  %card_no = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %plx_ver = alloca i8, align 1
  %retval1 = alloca i32, align 4
  %irq = alloca i32, align 4
  %ctl_addr = alloca %struct.RUNTIME_9060*, align 8
  %firm_id = alloca %struct.FIRM_ID*, align 8
  %zfw_ctrl = alloca %struct.ZFW_CTRL*, align 8
  %ctl_addr160 = alloca %struct.RUNTIME_9060*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !5824, metadata !DIExpression()), !dbg !5825
  store %struct.pci_device_id* %ent, %struct.pci_device_id** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_device_id** %ent.addr, metadata !5826, metadata !DIExpression()), !dbg !5827
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %card, metadata !5828, metadata !DIExpression()), !dbg !5829
  call void @llvm.dbg.declare(metadata i8** %addr0, metadata !5830, metadata !DIExpression()), !dbg !5831
  store i8* null, i8** %addr0, align 8, !dbg !5831
  call void @llvm.dbg.declare(metadata i8** %addr2, metadata !5832, metadata !DIExpression()), !dbg !5833
  store i8* null, i8** %addr2, align 8, !dbg !5833
  call void @llvm.dbg.declare(metadata i8** %card_name, metadata !5834, metadata !DIExpression()), !dbg !5835
  store i8* null, i8** %card_name, align 8, !dbg !5835
  call void @llvm.dbg.declare(metadata i32* %mailbox, metadata !5836, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.declare(metadata i32* %device_id, metadata !5838, metadata !DIExpression()), !dbg !5839
  call void @llvm.dbg.declare(metadata i32* %nchan, metadata !5840, metadata !DIExpression()), !dbg !5841
  store i32 0, i32* %nchan, align 4, !dbg !5841
  call void @llvm.dbg.declare(metadata i32* %card_no, metadata !5842, metadata !DIExpression()), !dbg !5843
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5844, metadata !DIExpression()), !dbg !5845
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5846, metadata !DIExpression()), !dbg !5847
  call void @llvm.dbg.declare(metadata i8* %plx_ver, metadata !5848, metadata !DIExpression()), !dbg !5849
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !5850, metadata !DIExpression()), !dbg !5851
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !5852, metadata !DIExpression()), !dbg !5853
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5854
  %call = call i32 @pci_enable_device(%struct.pci_dev* %0) #11, !dbg !5855
  store i32 %call, i32* %retval1, align 4, !dbg !5856
  %1 = load i32, i32* %retval1, align 4, !dbg !5857
  %tobool = icmp ne i32 %1, 0, !dbg !5857
  br i1 %tobool, label %if.then, label %if.end, !dbg !5859

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5860
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !5860
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)) #12, !dbg !5860
  br label %err, !dbg !5862

if.end:                                           ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5863
  %irq2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 43, !dbg !5864
  %4 = load i32, i32* %irq2, align 4, !dbg !5864
  store i32 %4, i32* %irq, align 4, !dbg !5865
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5866
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 8, !dbg !5867
  %6 = load i16, i16* %device, align 2, !dbg !5867
  %conv = zext i16 %6 to i32, !dbg !5866
  %and = and i32 %conv, -7, !dbg !5868
  store i32 %and, i32* %device_id, align 4, !dbg !5869
  %7 = load i32, i32* %device_id, align 4, !dbg !5870
  %cmp = icmp eq i32 %7, 512, !dbg !5872
  br i1 %cmp, label %if.then4, label %if.end6, !dbg !5873

if.then4:                                         ; preds = %if.end
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5874
  %dev5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 41, !dbg !5874
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev5, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.3, i64 0, i64 0)) #12, !dbg !5874
  store i32 -5, i32* %retval1, align 4, !dbg !5876
  br label %err_dis, !dbg !5877

if.end6:                                          ; preds = %if.end
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5878
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 44, !dbg !5878
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 2, !dbg !5878
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 3, !dbg !5878
  %10 = load i64, i64* %flags, align 8, !dbg !5878
  %and7 = and i64 %10, 256, !dbg !5880
  %tobool8 = icmp ne i64 %and7, 0, !dbg !5880
  br i1 %tobool8, label %if.then9, label %if.end15, !dbg !5881

if.then9:                                         ; preds = %if.end6
  %11 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5882
  %dev10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 41, !dbg !5882
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev10, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4, i64 0, i64 0)) #12, !dbg !5882
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5884
  %resource11 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 44, !dbg !5885
  %arrayidx12 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource11, i64 0, i64 2, !dbg !5884
  %flags13 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx12, i32 0, i32 3, !dbg !5886
  %13 = load i64, i64* %flags13, align 8, !dbg !5887
  %and14 = and i64 %13, -257, !dbg !5887
  store i64 %and14, i64* %flags13, align 8, !dbg !5887
  br label %if.end15, !dbg !5888

if.end15:                                         ; preds = %if.then9, %if.end6
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5889
  %call16 = call i32 @pci_request_regions(%struct.pci_dev* %14, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0)) #11, !dbg !5890
  store i32 %call16, i32* %retval1, align 4, !dbg !5891
  %15 = load i32, i32* %retval1, align 4, !dbg !5892
  %tobool17 = icmp ne i32 %15, 0, !dbg !5892
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !5894

if.then18:                                        ; preds = %if.end15
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5895
  %dev19 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 41, !dbg !5895
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev19, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0)) #12, !dbg !5895
  br label %err_dis, !dbg !5897

if.end20:                                         ; preds = %if.end15
  store i32 -5, i32* %retval1, align 4, !dbg !5898
  %17 = load i32, i32* %device_id, align 4, !dbg !5899
  %cmp21 = icmp eq i32 %17, 256, !dbg !5901
  br i1 %cmp21, label %if.then25, label %lor.lhs.false, !dbg !5902

lor.lhs.false:                                    ; preds = %if.end20
  %18 = load i32, i32* %device_id, align 4, !dbg !5903
  %cmp23 = icmp eq i32 %18, 257, !dbg !5904
  br i1 %cmp23, label %if.then25, label %if.else, !dbg !5905

if.then25:                                        ; preds = %lor.lhs.false, %if.end20
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i8** %card_name, align 8, !dbg !5906
  %19 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5908
  %resource26 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %19, i32 0, i32 44, !dbg !5908
  %arrayidx27 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource26, i64 0, i64 0, !dbg !5908
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx27, i32 0, i32 0, !dbg !5908
  %20 = load i64, i64* %start, align 8, !dbg !5908
  %call28 = call i8* @ioremap(i64 %20, i64 128) #11, !dbg !5909
  store i8* %call28, i8** %addr0, align 8, !dbg !5910
  %21 = load i8*, i8** %addr0, align 8, !dbg !5911
  %cmp29 = icmp eq i8* %21, null, !dbg !5913
  br i1 %cmp29, label %if.then31, label %if.end33, !dbg !5914

if.then31:                                        ; preds = %if.then25
  %22 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5915
  %dev32 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %22, i32 0, i32 41, !dbg !5915
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev32, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0)) #12, !dbg !5915
  br label %err_reg, !dbg !5917

if.end33:                                         ; preds = %if.then25
  %23 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5918
  %resource34 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %23, i32 0, i32 44, !dbg !5918
  %arrayidx35 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource34, i64 0, i64 2, !dbg !5918
  %start36 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx35, i32 0, i32 0, !dbg !5918
  %24 = load i64, i64* %start36, align 8, !dbg !5918
  %call37 = call i8* @ioremap(i64 %24, i64 16384) #11, !dbg !5919
  store i8* %call37, i8** %addr2, align 8, !dbg !5920
  %25 = load i8*, i8** %addr2, align 8, !dbg !5921
  %cmp38 = icmp eq i8* %25, null, !dbg !5923
  br i1 %cmp38, label %if.then40, label %if.end42, !dbg !5924

if.then40:                                        ; preds = %if.end33
  %26 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5925
  %dev41 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %26, i32 0, i32 41, !dbg !5925
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev41, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i64 0, i64 0)) #12, !dbg !5925
  br label %err_unmap, !dbg !5927

if.end42:                                         ; preds = %if.end33
  %27 = load i8*, i8** %addr2, align 8, !dbg !5928
  %call43 = call zeroext i16 @cyy_init_card(i8* %27, i32 1) #11, !dbg !5929
  %conv44 = zext i16 %call43 to i32, !dbg !5929
  %mul = mul i32 4, %conv44, !dbg !5930
  store i32 %mul, i32* %nchan, align 4, !dbg !5931
  %28 = load i32, i32* %nchan, align 4, !dbg !5932
  %cmp45 = icmp eq i32 %28, 0, !dbg !5934
  br i1 %cmp45, label %if.then47, label %if.end49, !dbg !5935

if.then47:                                        ; preds = %if.end42
  %29 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5936
  %dev48 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %29, i32 0, i32 41, !dbg !5936
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev48, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.9, i64 0, i64 0)) #12, !dbg !5936
  br label %err_unmap, !dbg !5938

if.end49:                                         ; preds = %if.end42
  br label %if.end100, !dbg !5939

if.else:                                          ; preds = %lor.lhs.false
  %30 = load i32, i32* %device_id, align 4, !dbg !5940
  %cmp50 = icmp eq i32 %30, 513, !dbg !5942
  br i1 %cmp50, label %if.then52, label %if.end99, !dbg !5943

if.then52:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.RUNTIME_9060** %ctl_addr, metadata !5944, metadata !DIExpression()), !dbg !5946
  %31 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5947
  %resource53 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %31, i32 0, i32 44, !dbg !5947
  %arrayidx54 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource53, i64 0, i64 0, !dbg !5947
  %start55 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx54, i32 0, i32 0, !dbg !5947
  %32 = load i64, i64* %start55, align 8, !dbg !5947
  %call56 = call i8* @ioremap(i64 %32, i64 128) #11, !dbg !5948
  store i8* %call56, i8** %addr0, align 8, !dbg !5949
  %33 = bitcast i8* %call56 to %struct.RUNTIME_9060*, !dbg !5950
  store %struct.RUNTIME_9060* %33, %struct.RUNTIME_9060** %ctl_addr, align 8, !dbg !5951
  %34 = load i8*, i8** %addr0, align 8, !dbg !5952
  %cmp57 = icmp eq i8* %34, null, !dbg !5954
  br i1 %cmp57, label %if.then59, label %if.end61, !dbg !5955

if.then59:                                        ; preds = %if.then52
  %35 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5956
  %dev60 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %35, i32 0, i32 41, !dbg !5956
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev60, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0)) #12, !dbg !5956
  br label %err_reg, !dbg !5958

if.end61:                                         ; preds = %if.then52
  br label %do.body, !dbg !5959

do.body:                                          ; preds = %if.end61
  %36 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %ctl_addr, align 8, !dbg !5960
  %intr_ctrl_stat = getelementptr inbounds %struct.RUNTIME_9060, %struct.RUNTIME_9060* %36, i32 0, i32 26, !dbg !5960
  %37 = bitcast i32* %intr_ctrl_stat to i8*, !dbg !5960
  %call62 = call zeroext i16 @readw(i8* %37) #11, !dbg !5960
  %conv63 = zext i16 %call62 to i32, !dbg !5960
  %and64 = and i32 %conv63, -2305, !dbg !5960
  %conv65 = trunc i32 %and64 to i16, !dbg !5960
  %38 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %ctl_addr, align 8, !dbg !5960
  %intr_ctrl_stat66 = getelementptr inbounds %struct.RUNTIME_9060, %struct.RUNTIME_9060* %38, i32 0, i32 26, !dbg !5960
  %39 = bitcast i32* %intr_ctrl_stat66 to i8*, !dbg !5960
  call void @writew(i16 zeroext %conv65, i8* %39) #11, !dbg !5960
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !5960, !srcloc !5962
  br label %do.end, !dbg !5960

do.end:                                           ; preds = %do.body
  %40 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5963
  %41 = load i32, i32* %irq, align 4, !dbg !5964
  %42 = load i8*, i8** %addr0, align 8, !dbg !5965
  %43 = bitcast i8* %42 to %struct.RUNTIME_9060*, !dbg !5965
  call void @plx_init(%struct.pci_dev* %40, i32 %41, %struct.RUNTIME_9060* %43) #11, !dbg !5966
  %44 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %ctl_addr, align 8, !dbg !5967
  %mail_box_0 = getelementptr inbounds %struct.RUNTIME_9060, %struct.RUNTIME_9060* %44, i32 0, i32 16, !dbg !5968
  %45 = bitcast i32* %mail_box_0 to i8*, !dbg !5969
  %call67 = call i32 @readl(i8* %45) #11, !dbg !5970
  store i32 %call67, i32* %mailbox, align 4, !dbg !5971
  %46 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5972
  %resource68 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %46, i32 0, i32 44, !dbg !5972
  %arrayidx69 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource68, i64 0, i64 2, !dbg !5972
  %start70 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx69, i32 0, i32 0, !dbg !5972
  %47 = load i64, i64* %start70, align 8, !dbg !5972
  %48 = load i32, i32* %mailbox, align 4, !dbg !5973
  %cmp71 = icmp eq i32 %48, 2, !dbg !5974
  %49 = zext i1 %cmp71 to i64, !dbg !5973
  %cond = select i1 %cmp71, i32 1048576, i32 524288, !dbg !5973
  %conv73 = sext i32 %cond to i64, !dbg !5973
  %call74 = call i8* @ioremap(i64 %47, i64 %conv73) #11, !dbg !5975
  store i8* %call74, i8** %addr2, align 8, !dbg !5976
  %50 = load i8*, i8** %addr2, align 8, !dbg !5977
  %cmp75 = icmp eq i8* %50, null, !dbg !5979
  br i1 %cmp75, label %if.then77, label %if.end79, !dbg !5980

if.then77:                                        ; preds = %do.end
  %51 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5981
  %dev78 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %51, i32 0, i32 41, !dbg !5981
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev78, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i64 0, i64 0)) #12, !dbg !5981
  br label %err_unmap, !dbg !5983

if.end79:                                         ; preds = %do.end
  %52 = load i32, i32* %mailbox, align 4, !dbg !5984
  %cmp80 = icmp eq i32 %52, 2, !dbg !5986
  br i1 %cmp80, label %if.then82, label %if.else83, !dbg !5987

if.then82:                                        ; preds = %if.end79
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0), i8** %card_name, align 8, !dbg !5988
  br label %if.end93, !dbg !5990

if.else83:                                        ; preds = %if.end79
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8** %card_name, align 8, !dbg !5991
  %53 = load i32, i32* %mailbox, align 4, !dbg !5993
  %cmp84 = icmp eq i32 %53, 0, !dbg !5995
  br i1 %cmp84, label %if.then89, label %lor.lhs.false86, !dbg !5996

lor.lhs.false86:                                  ; preds = %if.else83
  %54 = load i32, i32* %mailbox, align 4, !dbg !5997
  %cmp87 = icmp eq i32 %54, 1, !dbg !5998
  br i1 %cmp87, label %if.then89, label %if.end92, !dbg !5999

if.then89:                                        ; preds = %lor.lhs.false86, %if.else83
  br label %do.body90, !dbg !6000

do.body90:                                        ; preds = %if.then89
  %55 = load i8*, i8** %addr2, align 8, !dbg !6001
  %add.ptr = getelementptr i8, i8* %55, i64 384, !dbg !6001
  call void @writel(i32 0, i8* %add.ptr) #11, !dbg !6001
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6001, !srcloc !6003
  br label %do.end91, !dbg !6001

do.end91:                                         ; preds = %do.body90
  br label %if.end92, !dbg !6001

if.end92:                                         ; preds = %do.end91, %lor.lhs.false86
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %if.then82
  %56 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6004
  %57 = load i8*, i8** %addr2, align 8, !dbg !6005
  %58 = load i8*, i8** %addr0, align 8, !dbg !6006
  %59 = bitcast i8* %58 to %struct.RUNTIME_9060*, !dbg !6006
  %60 = load i32, i32* %irq, align 4, !dbg !6007
  %call94 = call i32 @cyz_load_fw(%struct.pci_dev* %56, i8* %57, %struct.RUNTIME_9060* %59, i32 %60) #11, !dbg !6008
  store i32 %call94, i32* %retval1, align 4, !dbg !6009
  %61 = load i32, i32* %retval1, align 4, !dbg !6010
  %cmp95 = icmp sle i32 %61, 0, !dbg !6012
  br i1 %cmp95, label %if.then97, label %if.end98, !dbg !6013

if.then97:                                        ; preds = %if.end93
  br label %err_unmap, !dbg !6014

if.end98:                                         ; preds = %if.end93
  %62 = load i32, i32* %retval1, align 4, !dbg !6015
  store i32 %62, i32* %nchan, align 4, !dbg !6016
  br label %if.end99, !dbg !6017

if.end99:                                         ; preds = %if.end98, %if.else
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.end49
  %63 = load i32, i32* @cy_next_channel, align 4, !dbg !6018
  %64 = load i32, i32* %nchan, align 4, !dbg !6020
  %add = add i32 %63, %64, !dbg !6021
  %cmp101 = icmp ugt i32 %add, 256, !dbg !6022
  br i1 %cmp101, label %if.then103, label %if.end105, !dbg !6023

if.then103:                                       ; preds = %if.end100
  %65 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6024
  %dev104 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %65, i32 0, i32 41, !dbg !6024
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev104, i8* getelementptr inbounds ([108 x i8], [108 x i8]* @.str.12, i64 0, i64 0)) #12, !dbg !6024
  br label %err_unmap, !dbg !6026

if.end105:                                        ; preds = %if.end100
  store i32 0, i32* %card_no, align 4, !dbg !6027
  br label %for.cond, !dbg !6029

for.cond:                                         ; preds = %for.inc, %if.end105
  %66 = load i32, i32* %card_no, align 4, !dbg !6030
  %cmp106 = icmp ult i32 %66, 4, !dbg !6032
  br i1 %cmp106, label %for.body, label %for.end, !dbg !6033

for.body:                                         ; preds = %for.cond
  %67 = load i32, i32* %card_no, align 4, !dbg !6034
  %idxprom = zext i32 %67 to i64, !dbg !6036
  %arrayidx108 = getelementptr [4 x %struct.cyclades_card], [4 x %struct.cyclades_card]* @cy_card, i64 0, i64 %idxprom, !dbg !6036
  store %struct.cyclades_card* %arrayidx108, %struct.cyclades_card** %card, align 8, !dbg !6037
  %68 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !6038
  %base_addr = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %68, i32 0, i32 0, !dbg !6040
  %69 = load i8*, i8** %base_addr, align 8, !dbg !6040
  %cmp109 = icmp eq i8* %69, null, !dbg !6041
  br i1 %cmp109, label %if.then111, label %if.end112, !dbg !6042

if.then111:                                       ; preds = %for.body
  br label %for.end, !dbg !6043

if.end112:                                        ; preds = %for.body
  br label %for.inc, !dbg !6044

for.inc:                                          ; preds = %if.end112
  %70 = load i32, i32* %card_no, align 4, !dbg !6045
  %inc = add i32 %70, 1, !dbg !6045
  store i32 %inc, i32* %card_no, align 4, !dbg !6045
  br label %for.cond, !dbg !6046, !llvm.loop !6047

for.end:                                          ; preds = %if.then111, %for.cond
  %71 = load i32, i32* %card_no, align 4, !dbg !6049
  %cmp113 = icmp eq i32 %71, 4, !dbg !6051
  br i1 %cmp113, label %if.then115, label %if.end117, !dbg !6052

if.then115:                                       ; preds = %for.end
  %72 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6053
  %dev116 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %72, i32 0, i32 41, !dbg !6053
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev116, i8* getelementptr inbounds ([108 x i8], [108 x i8]* @.str.13, i64 0, i64 0)) #12, !dbg !6053
  br label %err_unmap, !dbg !6055

if.end117:                                        ; preds = %for.end
  %73 = load i32, i32* %device_id, align 4, !dbg !6056
  %cmp118 = icmp eq i32 %73, 256, !dbg !6058
  br i1 %cmp118, label %if.then123, label %lor.lhs.false120, !dbg !6059

lor.lhs.false120:                                 ; preds = %if.end117
  %74 = load i32, i32* %device_id, align 4, !dbg !6060
  %cmp121 = icmp eq i32 %74, 257, !dbg !6061
  br i1 %cmp121, label %if.then123, label %if.else129, !dbg !6062

if.then123:                                       ; preds = %lor.lhs.false120, %if.end117
  %75 = load i32, i32* %irq, align 4, !dbg !6063
  %76 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !6065
  %77 = bitcast %struct.cyclades_card* %76 to i8*, !dbg !6065
  %call124 = call i32 @request_irq(i32 %75, i32 (i32, i8*)* @cyy_interrupt, i64 128, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i8* %77) #11, !dbg !6066
  store i32 %call124, i32* %retval1, align 4, !dbg !6067
  %78 = load i32, i32* %retval1, align 4, !dbg !6068
  %tobool125 = icmp ne i32 %78, 0, !dbg !6068
  br i1 %tobool125, label %if.then126, label %if.end128, !dbg !6070

if.then126:                                       ; preds = %if.then123
  %79 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6071
  %dev127 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %79, i32 0, i32 41, !dbg !6071
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev127, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14, i64 0, i64 0)) #12, !dbg !6071
  br label %err_unmap, !dbg !6073

if.end128:                                        ; preds = %if.then123
  %80 = load i32, i32* %nchan, align 4, !dbg !6074
  %div = udiv i32 %80, 4, !dbg !6075
  %81 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !6076
  %num_chips = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %81, i32 0, i32 4, !dbg !6077
  store i32 %div, i32* %num_chips, align 4, !dbg !6078
  br label %if.end136, !dbg !6079

if.else129:                                       ; preds = %lor.lhs.false120
  call void @llvm.dbg.declare(metadata %struct.FIRM_ID** %firm_id, metadata !6080, metadata !DIExpression()), !dbg !6082
  %82 = load i8*, i8** %addr2, align 8, !dbg !6083
  %add.ptr130 = getelementptr i8, i8* %82, i64 384, !dbg !6084
  %83 = bitcast i8* %add.ptr130 to %struct.FIRM_ID*, !dbg !6083
  store %struct.FIRM_ID* %83, %struct.FIRM_ID** %firm_id, align 8, !dbg !6082
  call void @llvm.dbg.declare(metadata %struct.ZFW_CTRL** %zfw_ctrl, metadata !6085, metadata !DIExpression()), !dbg !6094
  %84 = load i8*, i8** %addr2, align 8, !dbg !6095
  %85 = load %struct.FIRM_ID*, %struct.FIRM_ID** %firm_id, align 8, !dbg !6096
  %zfwctrl_addr = getelementptr inbounds %struct.FIRM_ID, %struct.FIRM_ID* %85, i32 0, i32 1, !dbg !6097
  %86 = bitcast i32* %zfwctrl_addr to i8*, !dbg !6098
  %call131 = call i32 @readl(i8* %86) #11, !dbg !6099
  %and132 = and i32 %call131, 1048575, !dbg !6100
  %idx.ext = zext i32 %and132 to i64, !dbg !6101
  %add.ptr133 = getelementptr i8, i8* %84, i64 %idx.ext, !dbg !6101
  %87 = bitcast i8* %add.ptr133 to %struct.ZFW_CTRL*, !dbg !6095
  store %struct.ZFW_CTRL* %87, %struct.ZFW_CTRL** %zfw_ctrl, align 8, !dbg !6102
  %88 = load i32, i32* %mailbox, align 4, !dbg !6103
  %89 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !6104
  %hw_ver = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %89, i32 0, i32 9, !dbg !6105
  store i32 %88, i32* %hw_ver, align 8, !dbg !6106
  %90 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !6107
  %num_chips134 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %90, i32 0, i32 4, !dbg !6108
  store i32 -1, i32* %num_chips134, align 4, !dbg !6109
  %91 = load %struct.ZFW_CTRL*, %struct.ZFW_CTRL** %zfw_ctrl, align 8, !dbg !6110
  %board_ctrl = getelementptr inbounds %struct.ZFW_CTRL, %struct.ZFW_CTRL* %91, i32 0, i32 0, !dbg !6111
  %92 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !6112
  %board_ctrl135 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %92, i32 0, i32 2, !dbg !6113
  store %struct.BOARD_CTRL* %board_ctrl, %struct.BOARD_CTRL** %board_ctrl135, align 8, !dbg !6114
  br label %if.end136

if.end136:                                        ; preds = %if.else129, %if.end128
  %93 = load i8*, i8** %addr2, align 8, !dbg !6115
  %94 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !6116
  %base_addr137 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %94, i32 0, i32 0, !dbg !6117
  store i8* %93, i8** %base_addr137, align 8, !dbg !6118
  %95 = load i8*, i8** %addr0, align 8, !dbg !6119
  %96 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !6120
  %ctl_addr138 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %96, i32 0, i32 1, !dbg !6121
  %p9050 = bitcast %union.anon* %ctl_addr138 to i8**, !dbg !6122
  store i8* %95, i8** %p9050, align 8, !dbg !6123
  %97 = load i32, i32* %irq, align 4, !dbg !6124
  %98 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !6125
  %irq139 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %98, i32 0, i32 3, !dbg !6126
  store i32 %97, i32* %irq139, align 8, !dbg !6127
  %99 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !6128
  %bus_index = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %99, i32 0, i32 7, !dbg !6129
  store i32 1, i32* %bus_index, align 8, !dbg !6130
  %100 = load i32, i32* @cy_next_channel, align 4, !dbg !6131
  %101 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !6132
  %first_line = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %101, i32 0, i32 5, !dbg !6133
  store i32 %100, i32* %first_line, align 8, !dbg !6134
  %102 = load i32, i32* %nchan, align 4, !dbg !6135
  %103 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !6136
  %nports = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %103, i32 0, i32 6, !dbg !6137
  store i32 %102, i32* %nports, align 4, !dbg !6138
  %104 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !6139
  %call140 = call i32 @cy_init_card(%struct.cyclades_card* %104) #11, !dbg !6140
  store i32 %call140, i32* %retval1, align 4, !dbg !6141
  %105 = load i32, i32* %retval1, align 4, !dbg !6142
  %tobool141 = icmp ne i32 %105, 0, !dbg !6142
  br i1 %tobool141, label %if.then142, label %if.end143, !dbg !6144

if.then142:                                       ; preds = %if.end136
  br label %err_null, !dbg !6145

if.end143:                                        ; preds = %if.end136
  %106 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6146
  %107 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !6147
  %108 = bitcast %struct.cyclades_card* %107 to i8*, !dbg !6147
  call void @pci_set_drvdata(%struct.pci_dev* %106, i8* %108) #11, !dbg !6148
  %109 = load i32, i32* %device_id, align 4, !dbg !6149
  %cmp144 = icmp eq i32 %109, 256, !dbg !6151
  br i1 %cmp144, label %if.then149, label %lor.lhs.false146, !dbg !6152

lor.lhs.false146:                                 ; preds = %if.end143
  %110 = load i32, i32* %device_id, align 4, !dbg !6153
  %cmp147 = icmp eq i32 %110, 257, !dbg !6154
  br i1 %cmp147, label %if.then149, label %if.end168, !dbg !6155

if.then149:                                       ; preds = %lor.lhs.false146, %if.end143
  %111 = load i8*, i8** %addr2, align 8, !dbg !6156
  %add.ptr150 = getelementptr i8, i8* %111, i64 13312, !dbg !6158
  %call151 = call zeroext i8 @readb(i8* %add.ptr150) #11, !dbg !6159
  %conv152 = zext i8 %call151 to i32, !dbg !6159
  %and153 = and i32 %conv152, 15, !dbg !6160
  %conv154 = trunc i32 %and153 to i8, !dbg !6159
  store i8 %conv154, i8* %plx_ver, align 1, !dbg !6161
  %112 = load i8, i8* %plx_ver, align 1, !dbg !6162
  %conv155 = zext i8 %112 to i32, !dbg !6162
  switch i32 %conv155, label %sw.default [
    i32 11, label %sw.bb
    i32 12, label %sw.bb159
    i32 13, label %sw.bb159
  ], !dbg !6163

sw.bb:                                            ; preds = %if.then149
  br label %do.body156, !dbg !6164

do.body156:                                       ; preds = %sw.bb
  %113 = load i8*, i8** %addr0, align 8, !dbg !6166
  %add.ptr157 = getelementptr i8, i8* %113, i64 76, !dbg !6166
  call void @writeb(i8 zeroext 67, i8* %add.ptr157) #11, !dbg !6166
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6166, !srcloc !6168
  br label %do.end158, !dbg !6166

do.end158:                                        ; preds = %do.body156
  br label %sw.epilog, !dbg !6169

sw.bb159:                                         ; preds = %if.then149, %if.then149
  br label %sw.default, !dbg !6169

sw.default:                                       ; preds = %if.then149, %sw.bb159
  call void @llvm.dbg.declare(metadata %struct.RUNTIME_9060** %ctl_addr160, metadata !6170, metadata !DIExpression()), !dbg !6172
  %114 = load i8*, i8** %addr0, align 8, !dbg !6173
  %115 = bitcast i8* %114 to %struct.RUNTIME_9060*, !dbg !6173
  store %struct.RUNTIME_9060* %115, %struct.RUNTIME_9060** %ctl_addr160, align 8, !dbg !6172
  %116 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6174
  %117 = load i32, i32* %irq, align 4, !dbg !6175
  %118 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %ctl_addr160, align 8, !dbg !6176
  call void @plx_init(%struct.pci_dev* %116, i32 %117, %struct.RUNTIME_9060* %118) #11, !dbg !6177
  br label %do.body161, !dbg !6178

do.body161:                                       ; preds = %sw.default
  %119 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %ctl_addr160, align 8, !dbg !6179
  %intr_ctrl_stat162 = getelementptr inbounds %struct.RUNTIME_9060, %struct.RUNTIME_9060* %119, i32 0, i32 26, !dbg !6179
  %120 = bitcast i32* %intr_ctrl_stat162 to i8*, !dbg !6179
  %call163 = call zeroext i16 @readw(i8* %120) #11, !dbg !6179
  %conv164 = zext i16 %call163 to i32, !dbg !6179
  %or = or i32 %conv164, 2304, !dbg !6179
  %conv165 = trunc i32 %or to i16, !dbg !6179
  %121 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %ctl_addr160, align 8, !dbg !6179
  %intr_ctrl_stat166 = getelementptr inbounds %struct.RUNTIME_9060, %struct.RUNTIME_9060* %121, i32 0, i32 26, !dbg !6179
  %122 = bitcast i32* %intr_ctrl_stat166 to i8*, !dbg !6179
  call void @writew(i16 zeroext %conv165, i8* %122) #11, !dbg !6179
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6179, !srcloc !6181
  br label %do.end167, !dbg !6179

do.end167:                                        ; preds = %do.body161
  br label %sw.epilog, !dbg !6182

sw.epilog:                                        ; preds = %do.end167, %do.end158
  br label %if.end168, !dbg !6183

if.end168:                                        ; preds = %sw.epilog, %lor.lhs.false146
  %123 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6184
  %dev169 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %123, i32 0, i32 41, !dbg !6184
  %124 = load i8*, i8** %card_name, align 8, !dbg !6184
  %125 = load i32, i32* %card_no, align 4, !dbg !6184
  %add170 = add i32 %125, 1, !dbg !6184
  %126 = load i32, i32* %nchan, align 4, !dbg !6184
  %127 = load i32, i32* @cy_next_channel, align 4, !dbg !6184
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev169, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.15, i64 0, i64 0), i8* %124, i32 %add170, i32 %126, i32 %127) #12, !dbg !6184
  store i32 0, i32* %j, align 4, !dbg !6185
  %128 = load i32, i32* @cy_next_channel, align 4, !dbg !6187
  store i32 %128, i32* %i, align 4, !dbg !6188
  br label %for.cond171, !dbg !6189

for.cond171:                                      ; preds = %for.inc180, %if.end168
  %129 = load i32, i32* %i, align 4, !dbg !6190
  %130 = load i32, i32* @cy_next_channel, align 4, !dbg !6192
  %131 = load i32, i32* %nchan, align 4, !dbg !6193
  %add172 = add i32 %130, %131, !dbg !6194
  %cmp173 = icmp ult i32 %129, %add172, !dbg !6195
  br i1 %cmp173, label %for.body175, label %for.end183, !dbg !6196

for.body175:                                      ; preds = %for.cond171
  %132 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !6197
  %ports = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %132, i32 0, i32 11, !dbg !6198
  %133 = load %struct.cyclades_port*, %struct.cyclades_port** %ports, align 8, !dbg !6198
  %134 = load i32, i32* %j, align 4, !dbg !6199
  %idxprom176 = zext i32 %134 to i64, !dbg !6197
  %arrayidx177 = getelementptr %struct.cyclades_port, %struct.cyclades_port* %133, i64 %idxprom176, !dbg !6197
  %port = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %arrayidx177, i32 0, i32 1, !dbg !6200
  %135 = load %struct.tty_driver*, %struct.tty_driver** @cy_serial_driver, align 8, !dbg !6201
  %136 = load i32, i32* %i, align 4, !dbg !6202
  %137 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6203
  %dev178 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %137, i32 0, i32 41, !dbg !6204
  %call179 = call %struct.device* @tty_port_register_device(%struct.tty_port* %port, %struct.tty_driver* %135, i32 %136, %struct.device* %dev178) #11, !dbg !6205
  br label %for.inc180, !dbg !6205

for.inc180:                                       ; preds = %for.body175
  %138 = load i32, i32* %i, align 4, !dbg !6206
  %inc181 = add i32 %138, 1, !dbg !6206
  store i32 %inc181, i32* %i, align 4, !dbg !6206
  %139 = load i32, i32* %j, align 4, !dbg !6207
  %inc182 = add i32 %139, 1, !dbg !6207
  store i32 %inc182, i32* %j, align 4, !dbg !6207
  br label %for.cond171, !dbg !6208, !llvm.loop !6209

for.end183:                                       ; preds = %for.cond171
  %140 = load i32, i32* %nchan, align 4, !dbg !6211
  %141 = load i32, i32* @cy_next_channel, align 4, !dbg !6212
  %add184 = add i32 %141, %140, !dbg !6212
  store i32 %add184, i32* @cy_next_channel, align 4, !dbg !6212
  store i32 0, i32* %retval, align 4, !dbg !6213
  br label %return, !dbg !6213

err_null:                                         ; preds = %if.then142
  call void @llvm.dbg.label(metadata !6214), !dbg !6215
  %142 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !6216
  %base_addr185 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %142, i32 0, i32 0, !dbg !6217
  store i8* null, i8** %base_addr185, align 8, !dbg !6218
  %143 = load i32, i32* %irq, align 4, !dbg !6219
  %144 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !6220
  %145 = bitcast %struct.cyclades_card* %144 to i8*, !dbg !6220
  %call186 = call i8* @free_irq(i32 %143, i8* %145) #11, !dbg !6221
  br label %err_unmap, !dbg !6221

err_unmap:                                        ; preds = %err_null, %if.then126, %if.then115, %if.then103, %if.then97, %if.then77, %if.then47, %if.then40
  call void @llvm.dbg.label(metadata !6222), !dbg !6223
  %146 = load i8*, i8** %addr0, align 8, !dbg !6224
  call void @iounmap(i8* %146) #11, !dbg !6225
  %147 = load i8*, i8** %addr2, align 8, !dbg !6226
  %tobool187 = icmp ne i8* %147, null, !dbg !6226
  br i1 %tobool187, label %if.then188, label %if.end189, !dbg !6228

if.then188:                                       ; preds = %err_unmap
  %148 = load i8*, i8** %addr2, align 8, !dbg !6229
  call void @iounmap(i8* %148) #11, !dbg !6230
  br label %if.end189, !dbg !6230

if.end189:                                        ; preds = %if.then188, %err_unmap
  br label %err_reg, !dbg !6226

err_reg:                                          ; preds = %if.end189, %if.then59, %if.then31
  call void @llvm.dbg.label(metadata !6231), !dbg !6232
  %149 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6233
  call void @pci_release_regions(%struct.pci_dev* %149) #11, !dbg !6234
  br label %err_dis, !dbg !6234

err_dis:                                          ; preds = %err_reg, %if.then18, %if.then4
  call void @llvm.dbg.label(metadata !6235), !dbg !6236
  %150 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6237
  call void @pci_disable_device(%struct.pci_dev* %150) #11, !dbg !6238
  br label %err, !dbg !6238

err:                                              ; preds = %err_dis, %if.then
  call void @llvm.dbg.label(metadata !6239), !dbg !6240
  %151 = load i32, i32* %retval1, align 4, !dbg !6241
  store i32 %151, i32* %retval, align 4, !dbg !6242
  br label %return, !dbg !6242

return:                                           ; preds = %err, %for.end183
  %152 = load i32, i32* %retval, align 4, !dbg !6243
  ret i32 %152, !dbg !6243
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cy_pci_remove(%struct.pci_dev* %pdev) #4 !dbg !6244 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %cinfo = alloca %struct.cyclades_card*, align 8
  %i = alloca i32, align 4
  %channel = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !6245, metadata !DIExpression()), !dbg !6246
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %cinfo, metadata !6247, metadata !DIExpression()), !dbg !6248
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6249
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #11, !dbg !6250
  %1 = bitcast i8* %call to %struct.cyclades_card*, !dbg !6250
  store %struct.cyclades_card* %1, %struct.cyclades_card** %cinfo, align 8, !dbg !6248
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6251, metadata !DIExpression()), !dbg !6252
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !6253, metadata !DIExpression()), !dbg !6254
  %2 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !6255
  %call1 = call zeroext i1 @cy_is_Z(%struct.cyclades_card* %2) #11, !dbg !6257
  br i1 %call1, label %if.else, label %land.lhs.true, !dbg !6258

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !6259
  %base_addr = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %3, i32 0, i32 0, !dbg !6260
  %4 = load i8*, i8** %base_addr, align 8, !dbg !6260
  %add.ptr = getelementptr i8, i8* %4, i64 13312, !dbg !6261
  %call2 = call zeroext i8 @readb(i8* %add.ptr) #11, !dbg !6262
  %conv = zext i8 %call2 to i32, !dbg !6262
  %and = and i32 %conv, 15, !dbg !6263
  %cmp = icmp eq i32 %and, 11, !dbg !6264
  br i1 %cmp, label %if.then, label %if.else, !dbg !6265

if.then:                                          ; preds = %land.lhs.true
  br label %do.body, !dbg !6266

do.body:                                          ; preds = %if.then
  %5 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !6267
  %ctl_addr = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %5, i32 0, i32 1, !dbg !6267
  %p9050 = bitcast %union.anon* %ctl_addr to i8**, !dbg !6267
  %6 = load i8*, i8** %p9050, align 8, !dbg !6267
  %add.ptr4 = getelementptr i8, i8* %6, i64 76, !dbg !6267
  call void @writeb(i8 zeroext 0, i8* %add.ptr4) #11, !dbg !6267
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6267, !srcloc !6269
  br label %do.end, !dbg !6267

do.end:                                           ; preds = %do.body
  br label %if.end17, !dbg !6267

if.else:                                          ; preds = %land.lhs.true, %entry
  %7 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !6270
  %call5 = call zeroext i1 @cy_is_Z(%struct.cyclades_card* %7) #11, !dbg !6272
  br i1 %call5, label %if.end, label %if.then6, !dbg !6273

if.then6:                                         ; preds = %if.else
  br label %do.body7, !dbg !6274

do.body7:                                         ; preds = %if.then6
  %8 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !6275
  %ctl_addr8 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %8, i32 0, i32 1, !dbg !6275
  %p9060 = bitcast %union.anon* %ctl_addr8 to %struct.RUNTIME_9060**, !dbg !6275
  %9 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %p9060, align 8, !dbg !6275
  %intr_ctrl_stat = getelementptr inbounds %struct.RUNTIME_9060, %struct.RUNTIME_9060* %9, i32 0, i32 26, !dbg !6275
  %10 = bitcast i32* %intr_ctrl_stat to i8*, !dbg !6275
  %call9 = call zeroext i16 @readw(i8* %10) #11, !dbg !6275
  %conv10 = zext i16 %call9 to i32, !dbg !6275
  %and11 = and i32 %conv10, -2305, !dbg !6275
  %conv12 = trunc i32 %and11 to i16, !dbg !6275
  %11 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !6275
  %ctl_addr13 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %11, i32 0, i32 1, !dbg !6275
  %p906014 = bitcast %union.anon* %ctl_addr13 to %struct.RUNTIME_9060**, !dbg !6275
  %12 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %p906014, align 8, !dbg !6275
  %intr_ctrl_stat15 = getelementptr inbounds %struct.RUNTIME_9060, %struct.RUNTIME_9060* %12, i32 0, i32 26, !dbg !6275
  %13 = bitcast i32* %intr_ctrl_stat15 to i8*, !dbg !6275
  call void @writew(i16 zeroext %conv12, i8* %13) #11, !dbg !6275
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6275, !srcloc !6277
  br label %do.end16, !dbg !6275

do.end16:                                         ; preds = %do.body7
  br label %if.end, !dbg !6275

if.end:                                           ; preds = %do.end16, %if.else
  br label %if.end17

if.end17:                                         ; preds = %if.end, %do.end
  %14 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !6278
  %base_addr18 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %14, i32 0, i32 0, !dbg !6279
  %15 = load i8*, i8** %base_addr18, align 8, !dbg !6279
  call void @iounmap(i8* %15) #11, !dbg !6280
  %16 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !6281
  %ctl_addr19 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %16, i32 0, i32 1, !dbg !6283
  %p905020 = bitcast %union.anon* %ctl_addr19 to i8**, !dbg !6284
  %17 = load i8*, i8** %p905020, align 8, !dbg !6284
  %tobool = icmp ne i8* %17, null, !dbg !6281
  br i1 %tobool, label %if.then21, label %if.end24, !dbg !6285

if.then21:                                        ; preds = %if.end17
  %18 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !6286
  %ctl_addr22 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %18, i32 0, i32 1, !dbg !6287
  %p905023 = bitcast %union.anon* %ctl_addr22 to i8**, !dbg !6288
  %19 = load i8*, i8** %p905023, align 8, !dbg !6288
  call void @iounmap(i8* %19) #11, !dbg !6289
  br label %if.end24, !dbg !6289

if.end24:                                         ; preds = %if.then21, %if.end17
  %20 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !6290
  %irq = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %20, i32 0, i32 3, !dbg !6292
  %21 = load i32, i32* %irq, align 8, !dbg !6292
  %tobool25 = icmp ne i32 %21, 0, !dbg !6290
  br i1 %tobool25, label %land.lhs.true26, label %if.end31, !dbg !6293

land.lhs.true26:                                  ; preds = %if.end24
  %22 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !6294
  %call27 = call zeroext i1 @cy_is_Z(%struct.cyclades_card* %22) #11, !dbg !6295
  br i1 %call27, label %if.end31, label %if.then28, !dbg !6296

if.then28:                                        ; preds = %land.lhs.true26
  %23 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !6297
  %irq29 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %23, i32 0, i32 3, !dbg !6298
  %24 = load i32, i32* %irq29, align 8, !dbg !6298
  %25 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !6299
  %26 = bitcast %struct.cyclades_card* %25 to i8*, !dbg !6299
  %call30 = call i8* @free_irq(i32 %24, i8* %26) #11, !dbg !6300
  br label %if.end31, !dbg !6300

if.end31:                                         ; preds = %if.then28, %land.lhs.true26, %if.end24
  %27 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6301
  call void @pci_release_regions(%struct.pci_dev* %27) #11, !dbg !6302
  %28 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !6303
  %base_addr32 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %28, i32 0, i32 0, !dbg !6304
  store i8* null, i8** %base_addr32, align 8, !dbg !6305
  store i32 0, i32* %channel, align 4, !dbg !6306
  %29 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !6308
  %first_line = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %29, i32 0, i32 5, !dbg !6309
  %30 = load i32, i32* %first_line, align 8, !dbg !6309
  store i32 %30, i32* %i, align 4, !dbg !6310
  br label %for.cond, !dbg !6311

for.cond:                                         ; preds = %for.inc, %if.end31
  %31 = load i32, i32* %i, align 4, !dbg !6312
  %32 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !6314
  %first_line33 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %32, i32 0, i32 5, !dbg !6315
  %33 = load i32, i32* %first_line33, align 8, !dbg !6315
  %34 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !6316
  %nports = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %34, i32 0, i32 6, !dbg !6317
  %35 = load i32, i32* %nports, align 4, !dbg !6317
  %add = add i32 %33, %35, !dbg !6318
  %cmp34 = icmp ult i32 %31, %add, !dbg !6319
  br i1 %cmp34, label %for.body, label %for.end, !dbg !6320

for.body:                                         ; preds = %for.cond
  %36 = load %struct.tty_driver*, %struct.tty_driver** @cy_serial_driver, align 8, !dbg !6321
  %37 = load i32, i32* %i, align 4, !dbg !6323
  call void @tty_unregister_device(%struct.tty_driver* %36, i32 %37) #11, !dbg !6324
  %38 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !6325
  %ports = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %38, i32 0, i32 11, !dbg !6326
  %39 = load %struct.cyclades_port*, %struct.cyclades_port** %ports, align 8, !dbg !6326
  %40 = load i32, i32* %channel, align 4, !dbg !6327
  %idxprom = zext i32 %40 to i64, !dbg !6325
  %arrayidx = getelementptr %struct.cyclades_port, %struct.cyclades_port* %39, i64 %idxprom, !dbg !6325
  %port = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %arrayidx, i32 0, i32 1, !dbg !6328
  call void @tty_port_destroy(%struct.tty_port* %port) #11, !dbg !6329
  br label %for.inc, !dbg !6330

for.inc:                                          ; preds = %for.body
  %41 = load i32, i32* %i, align 4, !dbg !6331
  %inc = add i32 %41, 1, !dbg !6331
  store i32 %inc, i32* %i, align 4, !dbg !6331
  %42 = load i32, i32* %channel, align 4, !dbg !6332
  %inc36 = add i32 %42, 1, !dbg !6332
  store i32 %inc36, i32* %channel, align 4, !dbg !6332
  br label %for.cond, !dbg !6333, !llvm.loop !6334

for.end:                                          ; preds = %for.cond
  %43 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !6336
  %nports37 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %43, i32 0, i32 6, !dbg !6337
  store i32 0, i32* %nports37, align 4, !dbg !6338
  %44 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !6339
  %ports38 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %44, i32 0, i32 11, !dbg !6340
  %45 = load %struct.cyclades_port*, %struct.cyclades_port** %ports38, align 8, !dbg !6340
  %46 = bitcast %struct.cyclades_port* %45 to i8*, !dbg !6339
  call void @kfree(i8* %46) #11, !dbg !6341
  ret void, !dbg !6342
}

; Function Attrs: noredzone
declare dso_local i32 @pci_enable_device(%struct.pci_dev*) #2

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #3

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #3

; Function Attrs: noredzone
declare dso_local i32 @pci_request_regions(%struct.pci_dev*, i8*) #2

; Function Attrs: noredzone
declare dso_local i8* @ioremap(i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @cyy_init_card(i8* %true_base_addr, i32 %index) #4 !dbg !6343 {
entry:
  %retval = alloca i16, align 2
  %true_base_addr.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  %chip_number = alloca i32, align 4
  %base_addr = alloca i8*, align 8
  store i8* %true_base_addr, i8** %true_base_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %true_base_addr.addr, metadata !6346, metadata !DIExpression()), !dbg !6347
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !6348, metadata !DIExpression()), !dbg !6349
  call void @llvm.dbg.declare(metadata i32* %chip_number, metadata !6350, metadata !DIExpression()), !dbg !6351
  call void @llvm.dbg.declare(metadata i8** %base_addr, metadata !6352, metadata !DIExpression()), !dbg !6353
  br label %do.body, !dbg !6354

do.body:                                          ; preds = %entry
  %0 = load i8*, i8** %true_base_addr.addr, align 8, !dbg !6355
  %1 = load i32, i32* %index.addr, align 4, !dbg !6355
  %shl = shl i32 5120, %1, !dbg !6355
  %idx.ext = sext i32 %shl to i64, !dbg !6355
  %add.ptr = getelementptr i8, i8* %0, i64 %idx.ext, !dbg !6355
  call void @writeb(i8 zeroext 0, i8* %add.ptr) #11, !dbg !6355
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6355, !srcloc !6357
  br label %do.end, !dbg !6355

do.end:                                           ; preds = %do.body
  br label %do.body1, !dbg !6358

do.body1:                                         ; preds = %do.end
  %2 = load i8*, i8** %true_base_addr.addr, align 8, !dbg !6359
  %3 = load i32, i32* %index.addr, align 4, !dbg !6359
  %shl2 = shl i32 6144, %3, !dbg !6359
  %idx.ext3 = sext i32 %shl2 to i64, !dbg !6359
  %add.ptr4 = getelementptr i8, i8* %2, i64 %idx.ext3, !dbg !6359
  call void @writeb(i8 zeroext 0, i8* %add.ptr4) #11, !dbg !6359
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6359, !srcloc !6361
  br label %do.end5, !dbg !6359

do.end5:                                          ; preds = %do.body1
  call void @__const_udelay(i64 2147500) #11, !dbg !6362
  store i32 0, i32* %chip_number, align 4, !dbg !6367
  br label %for.cond, !dbg !6369

for.cond:                                         ; preds = %for.inc, %do.end5
  %4 = load i32, i32* %chip_number, align 4, !dbg !6370
  %cmp = icmp ult i32 %4, 8, !dbg !6372
  br i1 %cmp, label %for.body, label %for.end, !dbg !6373

for.body:                                         ; preds = %for.cond
  %5 = load i8*, i8** %true_base_addr.addr, align 8, !dbg !6374
  %6 = load i32, i32* %chip_number, align 4, !dbg !6376
  %idxprom = zext i32 %6 to i64, !dbg !6377
  %arrayidx = getelementptr [8 x i32], [8 x i32]* @cy_chip_offset, i64 0, i64 %idxprom, !dbg !6377
  %7 = load i32, i32* %arrayidx, align 4, !dbg !6377
  %8 = load i32, i32* %index.addr, align 4, !dbg !6378
  %shl6 = shl i32 %7, %8, !dbg !6379
  %idx.ext7 = zext i32 %shl6 to i64, !dbg !6380
  %add.ptr8 = getelementptr i8, i8* %5, i64 %idx.ext7, !dbg !6380
  store i8* %add.ptr8, i8** %base_addr, align 8, !dbg !6381
  call void @__const_udelay(i64 4295000) #11, !dbg !6382
  %9 = load i8*, i8** %base_addr, align 8, !dbg !6387
  %10 = load i32, i32* %index.addr, align 4, !dbg !6389
  %shl9 = shl i32 10, %10, !dbg !6390
  %idx.ext10 = sext i32 %shl9 to i64, !dbg !6391
  %add.ptr11 = getelementptr i8, i8* %9, i64 %idx.ext10, !dbg !6391
  %call = call zeroext i8 @readb(i8* %add.ptr11) #11, !dbg !6392
  %conv = zext i8 %call to i32, !dbg !6392
  %cmp12 = icmp ne i32 %conv, 0, !dbg !6393
  br i1 %cmp12, label %if.then, label %if.end, !dbg !6394

if.then:                                          ; preds = %for.body
  %11 = load i32, i32* %chip_number, align 4, !dbg !6395
  %conv14 = trunc i32 %11 to i16, !dbg !6395
  store i16 %conv14, i16* %retval, align 2, !dbg !6397
  br label %return, !dbg !6397

if.end:                                           ; preds = %for.body
  br label %do.body15, !dbg !6398

do.body15:                                        ; preds = %if.end
  %12 = load i8*, i8** %base_addr, align 8, !dbg !6399
  %13 = load i32, i32* %index.addr, align 4, !dbg !6399
  %shl16 = shl i32 128, %13, !dbg !6399
  %idx.ext17 = sext i32 %shl16 to i64, !dbg !6399
  %add.ptr18 = getelementptr i8, i8* %12, i64 %idx.ext17, !dbg !6399
  call void @writeb(i8 zeroext 0, i8* %add.ptr18) #11, !dbg !6399
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6399, !srcloc !6401
  br label %do.end19, !dbg !6399

do.end19:                                         ; preds = %do.body15
  call void @__const_udelay(i64 42950) #11, !dbg !6402
  %14 = load i32, i32* %chip_number, align 4, !dbg !6407
  %cmp20 = icmp eq i32 %14, 4, !dbg !6409
  br i1 %cmp20, label %land.lhs.true, label %if.end34, !dbg !6410

land.lhs.true:                                    ; preds = %do.end19
  %15 = load i8*, i8** %true_base_addr.addr, align 8, !dbg !6411
  %16 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @cy_chip_offset, i64 0, i64 0), align 16, !dbg !6412
  %17 = load i32, i32* %index.addr, align 4, !dbg !6413
  %shl22 = shl i32 %16, %17, !dbg !6414
  %idx.ext23 = zext i32 %shl22 to i64, !dbg !6415
  %add.ptr24 = getelementptr i8, i8* %15, i64 %idx.ext23, !dbg !6415
  %18 = load i32, i32* %index.addr, align 4, !dbg !6416
  %shl25 = shl i32 128, %18, !dbg !6417
  %idx.ext26 = sext i32 %shl25 to i64, !dbg !6418
  %add.ptr27 = getelementptr i8, i8* %add.ptr24, i64 %idx.ext26, !dbg !6418
  %call28 = call zeroext i8 @readb(i8* %add.ptr27) #11, !dbg !6419
  %conv29 = zext i8 %call28 to i32, !dbg !6419
  %cmp30 = icmp eq i32 %conv29, 0, !dbg !6420
  br i1 %cmp30, label %if.then32, label %if.end34, !dbg !6421

if.then32:                                        ; preds = %land.lhs.true
  %19 = load i32, i32* %chip_number, align 4, !dbg !6422
  %conv33 = trunc i32 %19 to i16, !dbg !6422
  store i16 %conv33, i16* %retval, align 2, !dbg !6424
  br label %return, !dbg !6424

if.end34:                                         ; preds = %land.lhs.true, %do.end19
  br label %do.body35, !dbg !6425

do.body35:                                        ; preds = %if.end34
  %20 = load i8*, i8** %base_addr, align 8, !dbg !6426
  %21 = load i32, i32* %index.addr, align 4, !dbg !6426
  %shl36 = shl i32 10, %21, !dbg !6426
  %idx.ext37 = sext i32 %shl36 to i64, !dbg !6426
  %add.ptr38 = getelementptr i8, i8* %20, i64 %idx.ext37, !dbg !6426
  call void @writeb(i8 zeroext -127, i8* %add.ptr38) #11, !dbg !6426
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6426, !srcloc !6428
  br label %do.end39, !dbg !6426

do.end39:                                         ; preds = %do.body35
  call void @__const_udelay(i64 4295000) #11, !dbg !6429
  %22 = load i8*, i8** %base_addr, align 8, !dbg !6434
  %23 = load i32, i32* %index.addr, align 4, !dbg !6436
  %shl40 = shl i32 128, %23, !dbg !6437
  %idx.ext41 = sext i32 %shl40 to i64, !dbg !6438
  %add.ptr42 = getelementptr i8, i8* %22, i64 %idx.ext41, !dbg !6438
  %call43 = call zeroext i8 @readb(i8* %add.ptr42) #11, !dbg !6439
  %conv44 = zext i8 %call43 to i32, !dbg !6439
  %cmp45 = icmp eq i32 %conv44, 0, !dbg !6440
  br i1 %cmp45, label %if.then47, label %if.end49, !dbg !6441

if.then47:                                        ; preds = %do.end39
  %24 = load i32, i32* %chip_number, align 4, !dbg !6442
  %conv48 = trunc i32 %24 to i16, !dbg !6442
  store i16 %conv48, i16* %retval, align 2, !dbg !6444
  br label %return, !dbg !6444

if.end49:                                         ; preds = %do.end39
  %25 = load i8*, i8** %base_addr, align 8, !dbg !6445
  %26 = load i32, i32* %index.addr, align 4, !dbg !6447
  %shl50 = shl i32 128, %26, !dbg !6448
  %idx.ext51 = sext i32 %shl50 to i64, !dbg !6449
  %add.ptr52 = getelementptr i8, i8* %25, i64 %idx.ext51, !dbg !6449
  %call53 = call zeroext i8 @readb(i8* %add.ptr52) #11, !dbg !6450
  %conv54 = zext i8 %call53 to i32, !dbg !6451
  %and = and i32 240, %conv54, !dbg !6452
  %cmp55 = icmp ne i32 %and, 64, !dbg !6453
  br i1 %cmp55, label %if.then57, label %if.end59, !dbg !6454

if.then57:                                        ; preds = %if.end49
  %27 = load i32, i32* %chip_number, align 4, !dbg !6455
  %conv58 = trunc i32 %27 to i16, !dbg !6455
  store i16 %conv58, i16* %retval, align 2, !dbg !6457
  br label %return, !dbg !6457

if.end59:                                         ; preds = %if.end49
  br label %do.body60, !dbg !6458

do.body60:                                        ; preds = %if.end59
  %28 = load i8*, i8** %base_addr, align 8, !dbg !6459
  %29 = load i32, i32* %index.addr, align 4, !dbg !6459
  %shl61 = shl i32 150, %29, !dbg !6459
  %idx.ext62 = sext i32 %shl61 to i64, !dbg !6459
  %add.ptr63 = getelementptr i8, i8* %28, i64 %idx.ext62, !dbg !6459
  call void @writeb(i8 zeroext 0, i8* %add.ptr63) #11, !dbg !6459
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6459, !srcloc !6461
  br label %do.end64, !dbg !6459

do.end64:                                         ; preds = %do.body60
  %30 = load i8*, i8** %base_addr, align 8, !dbg !6462
  %31 = load i32, i32* %index.addr, align 4, !dbg !6464
  %shl65 = shl i32 128, %31, !dbg !6465
  %idx.ext66 = sext i32 %shl65 to i64, !dbg !6466
  %add.ptr67 = getelementptr i8, i8* %30, i64 %idx.ext66, !dbg !6466
  %call68 = call zeroext i8 @readb(i8* %add.ptr67) #11, !dbg !6467
  %conv69 = zext i8 %call68 to i32, !dbg !6467
  %cmp70 = icmp sge i32 %conv69, 72, !dbg !6468
  br i1 %cmp70, label %if.then72, label %if.else, !dbg !6469

if.then72:                                        ; preds = %do.end64
  br label %do.body73, !dbg !6470

do.body73:                                        ; preds = %if.then72
  %32 = load i8*, i8** %base_addr, align 8, !dbg !6472
  %33 = load i32, i32* %index.addr, align 4, !dbg !6472
  %shl74 = shl i32 252, %33, !dbg !6472
  %idx.ext75 = sext i32 %shl74 to i64, !dbg !6472
  %add.ptr76 = getelementptr i8, i8* %32, i64 %idx.ext75, !dbg !6472
  call void @writeb(i8 zeroext -22, i8* %add.ptr76) #11, !dbg !6472
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6472, !srcloc !6474
  br label %do.end77, !dbg !6472

do.end77:                                         ; preds = %do.body73
  br label %if.end83, !dbg !6475

if.else:                                          ; preds = %do.end64
  br label %do.body78, !dbg !6476

do.body78:                                        ; preds = %if.else
  %34 = load i8*, i8** %base_addr, align 8, !dbg !6478
  %35 = load i32, i32* %index.addr, align 4, !dbg !6478
  %shl79 = shl i32 252, %35, !dbg !6478
  %idx.ext80 = sext i32 %shl79 to i64, !dbg !6478
  %add.ptr81 = getelementptr i8, i8* %34, i64 %idx.ext80, !dbg !6478
  call void @writeb(i8 zeroext -12, i8* %add.ptr81) #11, !dbg !6478
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6478, !srcloc !6480
  br label %do.end82, !dbg !6478

do.end82:                                         ; preds = %do.body78
  br label %if.end83

if.end83:                                         ; preds = %do.end82, %do.end77
  br label %for.inc, !dbg !6481

for.inc:                                          ; preds = %if.end83
  %36 = load i32, i32* %chip_number, align 4, !dbg !6482
  %inc = add i32 %36, 1, !dbg !6482
  store i32 %inc, i32* %chip_number, align 4, !dbg !6482
  br label %for.cond, !dbg !6483, !llvm.loop !6484

for.end:                                          ; preds = %for.cond
  %37 = load i32, i32* %chip_number, align 4, !dbg !6486
  %conv84 = trunc i32 %37 to i16, !dbg !6486
  store i16 %conv84, i16* %retval, align 2, !dbg !6487
  br label %return, !dbg !6487

return:                                           ; preds = %for.end, %if.then57, %if.then47, %if.then32, %if.then
  %38 = load i16, i16* %retval, align 2, !dbg !6488
  ret i16 %38, !dbg !6488
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writew(i16 zeroext %val, i8* %addr) #4 !dbg !6489 {
entry:
  %val.addr = alloca i16, align 2
  %addr.addr = alloca i8*, align 8
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !6492, metadata !DIExpression()), !dbg !6493
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !6494, metadata !DIExpression()), !dbg !6493
  %0 = load i16, i16* %val.addr, align 2, !dbg !6493
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !6493
  %2 = bitcast i8* %1 to i16*, !dbg !6493
  call void asm sideeffect "movw $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i16 %0, i16* %2) #10, !dbg !6493, !srcloc !6495
  ret void, !dbg !6493
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @readw(i8* %addr) #4 !dbg !6496 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i16, align 2
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !6499, metadata !DIExpression()), !dbg !6500
  call void @llvm.dbg.declare(metadata i16* %ret, metadata !6501, metadata !DIExpression()), !dbg !6500
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !6500
  %1 = bitcast i8* %0 to i16*, !dbg !6500
  %2 = call i16 asm sideeffect "movw $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %1) #10, !dbg !6500, !srcloc !6502
  store i16 %2, i16* %ret, align 2, !dbg !6500
  %3 = load i16, i16* %ret, align 2, !dbg !6500
  ret i16 %3, !dbg !6500
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @plx_init(%struct.pci_dev* %pdev, i32 %irq, %struct.RUNTIME_9060* %addr) #4 !dbg !6503 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %irq.addr = alloca i32, align 4
  %addr.addr = alloca %struct.RUNTIME_9060*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !6506, metadata !DIExpression()), !dbg !6507
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !6508, metadata !DIExpression()), !dbg !6509
  store %struct.RUNTIME_9060* %addr, %struct.RUNTIME_9060** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RUNTIME_9060** %addr.addr, metadata !6510, metadata !DIExpression()), !dbg !6511
  br label %do.body, !dbg !6512

do.body:                                          ; preds = %entry
  %0 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %addr.addr, align 8, !dbg !6513
  %init_ctrl = getelementptr inbounds %struct.RUNTIME_9060, %struct.RUNTIME_9060* %0, i32 0, i32 27, !dbg !6513
  %1 = bitcast i32* %init_ctrl to i8*, !dbg !6513
  %call = call i32 @readl(i8* %1) #11, !dbg !6513
  %or = or i32 %call, 1073741824, !dbg !6513
  %2 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %addr.addr, align 8, !dbg !6513
  %init_ctrl1 = getelementptr inbounds %struct.RUNTIME_9060, %struct.RUNTIME_9060* %2, i32 0, i32 27, !dbg !6513
  %3 = bitcast i32* %init_ctrl1 to i8*, !dbg !6513
  call void @writel(i32 %or, i8* %3) #11, !dbg !6513
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6513, !srcloc !6515
  br label %do.end, !dbg !6513

do.end:                                           ; preds = %do.body
  call void @__const_udelay(i64 429500) #11, !dbg !6516
  br label %do.body2, !dbg !6521

do.body2:                                         ; preds = %do.end
  %4 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %addr.addr, align 8, !dbg !6522
  %init_ctrl3 = getelementptr inbounds %struct.RUNTIME_9060, %struct.RUNTIME_9060* %4, i32 0, i32 27, !dbg !6522
  %5 = bitcast i32* %init_ctrl3 to i8*, !dbg !6522
  %call4 = call i32 @readl(i8* %5) #11, !dbg !6522
  %and = and i32 %call4, -1073741825, !dbg !6522
  %6 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %addr.addr, align 8, !dbg !6522
  %init_ctrl5 = getelementptr inbounds %struct.RUNTIME_9060, %struct.RUNTIME_9060* %6, i32 0, i32 27, !dbg !6522
  %7 = bitcast i32* %init_ctrl5 to i8*, !dbg !6522
  call void @writel(i32 %and, i8* %7) #11, !dbg !6522
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6522, !srcloc !6524
  br label %do.end6, !dbg !6522

do.end6:                                          ; preds = %do.body2
  br label %do.body7, !dbg !6525

do.body7:                                         ; preds = %do.end6
  %8 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %addr.addr, align 8, !dbg !6526
  %init_ctrl8 = getelementptr inbounds %struct.RUNTIME_9060, %struct.RUNTIME_9060* %8, i32 0, i32 27, !dbg !6526
  %9 = bitcast i32* %init_ctrl8 to i8*, !dbg !6526
  %call9 = call i32 @readl(i8* %9) #11, !dbg !6526
  %or10 = or i32 %call9, 536870912, !dbg !6526
  %10 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %addr.addr, align 8, !dbg !6526
  %init_ctrl11 = getelementptr inbounds %struct.RUNTIME_9060, %struct.RUNTIME_9060* %10, i32 0, i32 27, !dbg !6526
  %11 = bitcast i32* %init_ctrl11 to i8*, !dbg !6526
  call void @writel(i32 %or10, i8* %11) #11, !dbg !6526
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6526, !srcloc !6528
  br label %do.end12, !dbg !6526

do.end12:                                         ; preds = %do.body7
  call void @__const_udelay(i64 429500) #11, !dbg !6529
  br label %do.body13, !dbg !6534

do.body13:                                        ; preds = %do.end12
  %12 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %addr.addr, align 8, !dbg !6535
  %init_ctrl14 = getelementptr inbounds %struct.RUNTIME_9060, %struct.RUNTIME_9060* %12, i32 0, i32 27, !dbg !6535
  %13 = bitcast i32* %init_ctrl14 to i8*, !dbg !6535
  %call15 = call i32 @readl(i8* %13) #11, !dbg !6535
  %and16 = and i32 %call15, -536870913, !dbg !6535
  %14 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %addr.addr, align 8, !dbg !6535
  %init_ctrl17 = getelementptr inbounds %struct.RUNTIME_9060, %struct.RUNTIME_9060* %14, i32 0, i32 27, !dbg !6535
  %15 = bitcast i32* %init_ctrl17 to i8*, !dbg !6535
  call void @writel(i32 %and16, i8* %15) #11, !dbg !6535
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6535, !srcloc !6537
  br label %do.end18, !dbg !6535

do.end18:                                         ; preds = %do.body13
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6538
  %17 = load i32, i32* %irq.addr, align 4, !dbg !6539
  %conv = trunc i32 %17 to i8, !dbg !6539
  %call19 = call i32 @pci_write_config_byte(%struct.pci_dev* %16, i32 60, i8 zeroext %conv) #11, !dbg !6540
  ret void, !dbg !6541
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cyz_load_fw(%struct.pci_dev* %pdev, i8* %base_addr, %struct.RUNTIME_9060* %ctl_addr, i32 %irq) #4 !dbg !6542 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %base_addr.addr = alloca i8*, align 8
  %ctl_addr.addr = alloca %struct.RUNTIME_9060*, align 8
  %irq.addr = alloca i32, align 4
  %fw = alloca %struct.firmware*, align 8
  %fid = alloca %struct.FIRM_ID*, align 8
  %cust = alloca %struct.CUSTOM_REG*, align 8
  %pt_zfwctrl = alloca %struct.ZFW_CTRL*, align 8
  %tmp = alloca i8*, align 8
  %mailbox = alloca i32, align 4
  %status = alloca i32, align 4
  %nchan = alloca i32, align 4
  %i = alloca i32, align 4
  %retval1 = alloca i32, align 4
  %cntval = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !6545, metadata !DIExpression()), !dbg !6546
  store i8* %base_addr, i8** %base_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base_addr.addr, metadata !6547, metadata !DIExpression()), !dbg !6548
  store %struct.RUNTIME_9060* %ctl_addr, %struct.RUNTIME_9060** %ctl_addr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RUNTIME_9060** %ctl_addr.addr, metadata !6549, metadata !DIExpression()), !dbg !6550
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !6551, metadata !DIExpression()), !dbg !6552
  call void @llvm.dbg.declare(metadata %struct.firmware** %fw, metadata !6553, metadata !DIExpression()), !dbg !6564
  call void @llvm.dbg.declare(metadata %struct.FIRM_ID** %fid, metadata !6565, metadata !DIExpression()), !dbg !6566
  %0 = load i8*, i8** %base_addr.addr, align 8, !dbg !6567
  %add.ptr = getelementptr i8, i8* %0, i64 384, !dbg !6568
  %1 = bitcast i8* %add.ptr to %struct.FIRM_ID*, !dbg !6567
  store %struct.FIRM_ID* %1, %struct.FIRM_ID** %fid, align 8, !dbg !6566
  call void @llvm.dbg.declare(metadata %struct.CUSTOM_REG** %cust, metadata !6569, metadata !DIExpression()), !dbg !6591
  %2 = load i8*, i8** %base_addr.addr, align 8, !dbg !6592
  %3 = bitcast i8* %2 to %struct.CUSTOM_REG*, !dbg !6592
  store %struct.CUSTOM_REG* %3, %struct.CUSTOM_REG** %cust, align 8, !dbg !6591
  call void @llvm.dbg.declare(metadata %struct.ZFW_CTRL** %pt_zfwctrl, metadata !6593, metadata !DIExpression()), !dbg !6594
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !6595, metadata !DIExpression()), !dbg !6596
  call void @llvm.dbg.declare(metadata i32* %mailbox, metadata !6597, metadata !DIExpression()), !dbg !6598
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6599, metadata !DIExpression()), !dbg !6600
  call void @llvm.dbg.declare(metadata i32* %nchan, metadata !6601, metadata !DIExpression()), !dbg !6602
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6603, metadata !DIExpression()), !dbg !6604
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !6605, metadata !DIExpression()), !dbg !6606
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6607
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !6608
  %call = call i32 @request_firmware(%struct.firmware** %fw, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i64 0, i64 0), %struct.device* %dev) #11, !dbg !6609
  store i32 %call, i32* %retval1, align 4, !dbg !6610
  %5 = load i32, i32* %retval1, align 4, !dbg !6611
  %tobool = icmp ne i32 %5, 0, !dbg !6611
  br i1 %tobool, label %if.then, label %if.end, !dbg !6613

if.then:                                          ; preds = %entry
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6614
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 41, !dbg !6614
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i64 0, i64 0)) #12, !dbg !6614
  br label %err, !dbg !6616

if.end:                                           ; preds = %entry
  %7 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %ctl_addr.addr, align 8, !dbg !6617
  %call3 = call zeroext i1 @__cyz_fpga_loaded(%struct.RUNTIME_9060* %7) #11, !dbg !6619
  br i1 %call3, label %land.lhs.true, label %if.end15, !dbg !6620

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.FIRM_ID*, %struct.FIRM_ID** %fid, align 8, !dbg !6621
  %signature = getelementptr inbounds %struct.FIRM_ID, %struct.FIRM_ID* %8, i32 0, i32 0, !dbg !6622
  %9 = bitcast i32* %signature to i8*, !dbg !6623
  %call4 = call i32 @readl(i8* %9) #11, !dbg !6624
  %conv = zext i32 %call4 to i64, !dbg !6624
  %cmp = icmp eq i64 %conv, 1431783002, !dbg !6625
  br i1 %cmp, label %if.then6, label %if.end15, !dbg !6626

if.then6:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %cntval, metadata !6627, metadata !DIExpression()), !dbg !6629
  %10 = load i8*, i8** %base_addr.addr, align 8, !dbg !6630
  %add.ptr7 = getelementptr i8, i8* %10, i64 400, !dbg !6631
  %call8 = call i32 @readl(i8* %add.ptr7) #11, !dbg !6632
  store i32 %call8, i32* %cntval, align 4, !dbg !6629
  call void @__const_udelay(i64 429500) #11, !dbg !6633
  %11 = load i32, i32* %cntval, align 4, !dbg !6638
  %12 = load i8*, i8** %base_addr.addr, align 8, !dbg !6640
  %add.ptr9 = getelementptr i8, i8* %12, i64 400, !dbg !6641
  %call10 = call i32 @readl(i8* %add.ptr9) #11, !dbg !6642
  %cmp11 = icmp ne i32 %11, %call10, !dbg !6643
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !6644

if.then13:                                        ; preds = %if.then6
  store i32 0, i32* %retval1, align 4, !dbg !6645
  br label %err_rel, !dbg !6647

if.end14:                                         ; preds = %if.then6
  br label %if.end15, !dbg !6648

if.end15:                                         ; preds = %if.end14, %land.lhs.true, %if.end
  br label %do.body, !dbg !6649

do.body:                                          ; preds = %if.end15
  %13 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %ctl_addr.addr, align 8, !dbg !6650
  %intr_ctrl_stat = getelementptr inbounds %struct.RUNTIME_9060, %struct.RUNTIME_9060* %13, i32 0, i32 26, !dbg !6650
  %14 = bitcast i32* %intr_ctrl_stat to i8*, !dbg !6650
  %call16 = call i32 @readl(i8* %14) #11, !dbg !6650
  %conv17 = zext i32 %call16 to i64, !dbg !6650
  %and = and i64 %conv17, -198657, !dbg !6650
  %conv18 = trunc i64 %and to i32, !dbg !6650
  %15 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %ctl_addr.addr, align 8, !dbg !6650
  %intr_ctrl_stat19 = getelementptr inbounds %struct.RUNTIME_9060, %struct.RUNTIME_9060* %15, i32 0, i32 26, !dbg !6650
  %16 = bitcast i32* %intr_ctrl_stat19 to i8*, !dbg !6650
  call void @writel(i32 %conv18, i8* %16) #11, !dbg !6650
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6650, !srcloc !6652
  br label %do.end, !dbg !6650

do.end:                                           ; preds = %do.body
  %17 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %ctl_addr.addr, align 8, !dbg !6653
  %mail_box_0 = getelementptr inbounds %struct.RUNTIME_9060, %struct.RUNTIME_9060* %17, i32 0, i32 16, !dbg !6654
  %18 = bitcast i32* %mail_box_0 to i8*, !dbg !6655
  %call20 = call i32 @readl(i8* %18) #11, !dbg !6656
  store i32 %call20, i32* %mailbox, align 4, !dbg !6657
  %19 = load i32, i32* %mailbox, align 4, !dbg !6658
  %cmp21 = icmp eq i32 %19, 0, !dbg !6660
  br i1 %cmp21, label %if.then25, label %lor.lhs.false, !dbg !6661

lor.lhs.false:                                    ; preds = %do.end
  %20 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %ctl_addr.addr, align 8, !dbg !6662
  %call23 = call zeroext i1 @__cyz_fpga_loaded(%struct.RUNTIME_9060* %20) #11, !dbg !6663
  br i1 %call23, label %if.then25, label %if.end33, !dbg !6664

if.then25:                                        ; preds = %lor.lhs.false, %do.end
  br label %do.body26, !dbg !6665

do.body26:                                        ; preds = %if.then25
  %21 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %ctl_addr.addr, align 8, !dbg !6667
  %loc_addr_base = getelementptr inbounds %struct.RUNTIME_9060, %struct.RUNTIME_9060* %21, i32 0, i32 1, !dbg !6667
  %22 = bitcast i32* %loc_addr_base to i8*, !dbg !6667
  call void @writel(i32 335544321, i8* %22) #11, !dbg !6667
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6667, !srcloc !6669
  br label %do.end27, !dbg !6667

do.end27:                                         ; preds = %do.body26
  br label %do.body28, !dbg !6670

do.body28:                                        ; preds = %do.end27
  %23 = load %struct.CUSTOM_REG*, %struct.CUSTOM_REG** %cust, align 8, !dbg !6671
  %cpu_stop = getelementptr inbounds %struct.CUSTOM_REG, %struct.CUSTOM_REG* %23, i32 0, i32 3, !dbg !6671
  %24 = bitcast i32* %cpu_stop to i8*, !dbg !6671
  call void @writel(i32 0, i8* %24) #11, !dbg !6671
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6671, !srcloc !6673
  br label %do.end29, !dbg !6671

do.end29:                                         ; preds = %do.body28
  br label %do.body30, !dbg !6674

do.body30:                                        ; preds = %do.end29
  %25 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %ctl_addr.addr, align 8, !dbg !6675
  %loc_addr_base31 = getelementptr inbounds %struct.RUNTIME_9060, %struct.RUNTIME_9060* %25, i32 0, i32 1, !dbg !6675
  %26 = bitcast i32* %loc_addr_base31 to i8*, !dbg !6675
  call void @writel(i32 1, i8* %26) #11, !dbg !6675
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6675, !srcloc !6677
  br label %do.end32, !dbg !6675

do.end32:                                         ; preds = %do.body30
  call void @__const_udelay(i64 429500) #11, !dbg !6678
  br label %if.end33, !dbg !6683

if.end33:                                         ; preds = %do.end32, %lor.lhs.false
  %27 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6684
  %28 = load i32, i32* %irq.addr, align 4, !dbg !6685
  %29 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %ctl_addr.addr, align 8, !dbg !6686
  call void @plx_init(%struct.pci_dev* %27, i32 %28, %struct.RUNTIME_9060* %29) #11, !dbg !6687
  %30 = load i32, i32* %mailbox, align 4, !dbg !6688
  %cmp34 = icmp ne i32 %30, 0, !dbg !6690
  br i1 %cmp34, label %if.then36, label %if.end45, !dbg !6691

if.then36:                                        ; preds = %if.end33
  %31 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !6692
  %32 = load i32, i32* %mailbox, align 4, !dbg !6694
  %33 = load i8*, i8** %base_addr.addr, align 8, !dbg !6695
  %call37 = call i32 @__cyz_load_fw(%struct.firmware* %31, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.18, i64 0, i64 0), i32 %32, i8* null, i8* %33) #11, !dbg !6696
  store i32 %call37, i32* %retval1, align 4, !dbg !6697
  %34 = load i32, i32* %retval1, align 4, !dbg !6698
  %tobool38 = icmp ne i32 %34, 0, !dbg !6698
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !6700

if.then39:                                        ; preds = %if.then36
  br label %err_rel, !dbg !6701

if.end40:                                         ; preds = %if.then36
  %35 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %ctl_addr.addr, align 8, !dbg !6702
  %call41 = call zeroext i1 @__cyz_fpga_loaded(%struct.RUNTIME_9060* %35) #11, !dbg !6704
  br i1 %call41, label %if.end44, label %if.then42, !dbg !6705

if.then42:                                        ; preds = %if.end40
  %36 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6706
  %dev43 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %36, i32 0, i32 41, !dbg !6706
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev43, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19, i64 0, i64 0)) #12, !dbg !6706
  br label %err_rel, !dbg !6708

if.end44:                                         ; preds = %if.end40
  br label %if.end45, !dbg !6709

if.end45:                                         ; preds = %if.end44, %if.end33
  br label %do.body46, !dbg !6710

do.body46:                                        ; preds = %if.end45
  %37 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %ctl_addr.addr, align 8, !dbg !6711
  %loc_addr_base47 = getelementptr inbounds %struct.RUNTIME_9060, %struct.RUNTIME_9060* %37, i32 0, i32 1, !dbg !6711
  %38 = bitcast i32* %loc_addr_base47 to i8*, !dbg !6711
  call void @writel(i32 335544321, i8* %38) #11, !dbg !6711
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6711, !srcloc !6713
  br label %do.end48, !dbg !6711

do.end48:                                         ; preds = %do.body46
  br label %do.body49, !dbg !6714

do.body49:                                        ; preds = %do.end48
  %39 = load %struct.CUSTOM_REG*, %struct.CUSTOM_REG** %cust, align 8, !dbg !6715
  %cpu_stop50 = getelementptr inbounds %struct.CUSTOM_REG, %struct.CUSTOM_REG* %39, i32 0, i32 3, !dbg !6715
  %40 = bitcast i32* %cpu_stop50 to i8*, !dbg !6715
  call void @writel(i32 0, i8* %40) #11, !dbg !6715
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6715, !srcloc !6717
  br label %do.end51, !dbg !6715

do.end51:                                         ; preds = %do.body49
  br label %do.body52, !dbg !6718

do.body52:                                        ; preds = %do.end51
  %41 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %ctl_addr.addr, align 8, !dbg !6719
  %loc_addr_base53 = getelementptr inbounds %struct.RUNTIME_9060, %struct.RUNTIME_9060* %41, i32 0, i32 1, !dbg !6719
  %42 = bitcast i32* %loc_addr_base53 to i8*, !dbg !6719
  call void @writel(i32 1, i8* %42) #11, !dbg !6719
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6719, !srcloc !6721
  br label %do.end54, !dbg !6719

do.end54:                                         ; preds = %do.body52
  call void @__const_udelay(i64 429500) #11, !dbg !6722
  %43 = load i8*, i8** %base_addr.addr, align 8, !dbg !6727
  store i8* %43, i8** %tmp, align 8, !dbg !6729
  br label %for.cond, !dbg !6730

for.cond:                                         ; preds = %for.inc, %do.end54
  %44 = load i8*, i8** %tmp, align 8, !dbg !6731
  %45 = load i8*, i8** %base_addr.addr, align 8, !dbg !6733
  %add.ptr55 = getelementptr i8, i8* %45, i64 524288, !dbg !6734
  %cmp56 = icmp ult i8* %44, %add.ptr55, !dbg !6735
  br i1 %cmp56, label %for.body, label %for.end, !dbg !6736

for.body:                                         ; preds = %for.cond
  br label %do.body58, !dbg !6737

do.body58:                                        ; preds = %for.body
  %46 = load i8*, i8** %tmp, align 8, !dbg !6738
  call void @writeb(i8 zeroext -1, i8* %46) #11, !dbg !6738
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6738, !srcloc !6740
  br label %do.end59, !dbg !6738

do.end59:                                         ; preds = %do.body58
  br label %for.inc, !dbg !6738

for.inc:                                          ; preds = %do.end59
  %47 = load i8*, i8** %tmp, align 8, !dbg !6741
  %incdec.ptr = getelementptr i8, i8* %47, i32 1, !dbg !6741
  store i8* %incdec.ptr, i8** %tmp, align 8, !dbg !6741
  br label %for.cond, !dbg !6742, !llvm.loop !6743

for.end:                                          ; preds = %for.cond
  %48 = load i32, i32* %mailbox, align 4, !dbg !6745
  %cmp60 = icmp ne i32 %48, 0, !dbg !6747
  br i1 %cmp60, label %if.then62, label %if.end79, !dbg !6748

if.then62:                                        ; preds = %for.end
  br label %do.body63, !dbg !6749

do.body63:                                        ; preds = %if.then62
  %49 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %ctl_addr.addr, align 8, !dbg !6751
  %loc_addr_base64 = getelementptr inbounds %struct.RUNTIME_9060, %struct.RUNTIME_9060* %49, i32 0, i32 1, !dbg !6751
  %50 = bitcast i32* %loc_addr_base64 to i8*, !dbg !6751
  call void @writel(i32 524289, i8* %50) #11, !dbg !6751
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6751, !srcloc !6753
  br label %do.end65, !dbg !6751

do.end65:                                         ; preds = %do.body63
  %51 = load i8*, i8** %base_addr.addr, align 8, !dbg !6754
  store i8* %51, i8** %tmp, align 8, !dbg !6756
  br label %for.cond66, !dbg !6757

for.cond66:                                       ; preds = %for.inc73, %do.end65
  %52 = load i8*, i8** %tmp, align 8, !dbg !6758
  %53 = load i8*, i8** %base_addr.addr, align 8, !dbg !6760
  %add.ptr67 = getelementptr i8, i8* %53, i64 524288, !dbg !6761
  %cmp68 = icmp ult i8* %52, %add.ptr67, !dbg !6762
  br i1 %cmp68, label %for.body70, label %for.end75, !dbg !6763

for.body70:                                       ; preds = %for.cond66
  br label %do.body71, !dbg !6764

do.body71:                                        ; preds = %for.body70
  %54 = load i8*, i8** %tmp, align 8, !dbg !6765
  call void @writeb(i8 zeroext -1, i8* %54) #11, !dbg !6765
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6765, !srcloc !6767
  br label %do.end72, !dbg !6765

do.end72:                                         ; preds = %do.body71
  br label %for.inc73, !dbg !6765

for.inc73:                                        ; preds = %do.end72
  %55 = load i8*, i8** %tmp, align 8, !dbg !6768
  %incdec.ptr74 = getelementptr i8, i8* %55, i32 1, !dbg !6768
  store i8* %incdec.ptr74, i8** %tmp, align 8, !dbg !6768
  br label %for.cond66, !dbg !6769, !llvm.loop !6770

for.end75:                                        ; preds = %for.cond66
  br label %do.body76, !dbg !6772

do.body76:                                        ; preds = %for.end75
  %56 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %ctl_addr.addr, align 8, !dbg !6773
  %loc_addr_base77 = getelementptr inbounds %struct.RUNTIME_9060, %struct.RUNTIME_9060* %56, i32 0, i32 1, !dbg !6773
  %57 = bitcast i32* %loc_addr_base77 to i8*, !dbg !6773
  call void @writel(i32 1, i8* %57) #11, !dbg !6773
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6773, !srcloc !6775
  br label %do.end78, !dbg !6773

do.end78:                                         ; preds = %do.body76
  br label %if.end79, !dbg !6776

if.end79:                                         ; preds = %do.end78, %for.end
  %58 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !6777
  %59 = load i32, i32* %mailbox, align 4, !dbg !6778
  %60 = load i8*, i8** %base_addr.addr, align 8, !dbg !6779
  %call80 = call i32 @__cyz_load_fw(%struct.firmware* %58, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.18, i64 0, i64 0), i32 %59, i8* %60, i8* null) #11, !dbg !6780
  store i32 %call80, i32* %retval1, align 4, !dbg !6781
  %61 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !6782
  call void @release_firmware(%struct.firmware* %61) #11, !dbg !6783
  %62 = load i32, i32* %retval1, align 4, !dbg !6784
  %tobool81 = icmp ne i32 %62, 0, !dbg !6784
  br i1 %tobool81, label %if.then82, label %if.end83, !dbg !6786

if.then82:                                        ; preds = %if.end79
  br label %err, !dbg !6787

if.end83:                                         ; preds = %if.end79
  br label %do.body84, !dbg !6788

do.body84:                                        ; preds = %if.end83
  %63 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %ctl_addr.addr, align 8, !dbg !6789
  %loc_addr_base85 = getelementptr inbounds %struct.RUNTIME_9060, %struct.RUNTIME_9060* %63, i32 0, i32 1, !dbg !6789
  %64 = bitcast i32* %loc_addr_base85 to i8*, !dbg !6789
  call void @writel(i32 335544321, i8* %64) #11, !dbg !6789
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6789, !srcloc !6791
  br label %do.end86, !dbg !6789

do.end86:                                         ; preds = %do.body84
  br label %do.body87, !dbg !6792

do.body87:                                        ; preds = %do.end86
  %65 = load %struct.CUSTOM_REG*, %struct.CUSTOM_REG** %cust, align 8, !dbg !6793
  %cpu_start = getelementptr inbounds %struct.CUSTOM_REG, %struct.CUSTOM_REG* %65, i32 0, i32 2, !dbg !6793
  %66 = bitcast i32* %cpu_start to i8*, !dbg !6793
  call void @writel(i32 0, i8* %66) #11, !dbg !6793
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6793, !srcloc !6795
  br label %do.end88, !dbg !6793

do.end88:                                         ; preds = %do.body87
  br label %do.body89, !dbg !6796

do.body89:                                        ; preds = %do.end88
  %67 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %ctl_addr.addr, align 8, !dbg !6797
  %loc_addr_base90 = getelementptr inbounds %struct.RUNTIME_9060, %struct.RUNTIME_9060* %67, i32 0, i32 1, !dbg !6797
  %68 = bitcast i32* %loc_addr_base90 to i8*, !dbg !6797
  call void @writel(i32 1, i8* %68) #11, !dbg !6797
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6797, !srcloc !6799
  br label %do.end91, !dbg !6797

do.end91:                                         ; preds = %do.body89
  store i32 0, i32* %i, align 4, !dbg !6800
  br label %while.cond, !dbg !6801

while.cond:                                       ; preds = %while.body, %do.end91
  %69 = load %struct.FIRM_ID*, %struct.FIRM_ID** %fid, align 8, !dbg !6802
  %signature92 = getelementptr inbounds %struct.FIRM_ID, %struct.FIRM_ID* %69, i32 0, i32 0, !dbg !6803
  %70 = bitcast i32* %signature92 to i8*, !dbg !6804
  %call93 = call i32 @readl(i8* %70) #11, !dbg !6805
  store i32 %call93, i32* %status, align 4, !dbg !6806
  %conv94 = zext i32 %call93 to i64, !dbg !6807
  %cmp95 = icmp ne i64 %conv94, 1431783002, !dbg !6808
  br i1 %cmp95, label %land.rhs, label %land.end, !dbg !6809

land.rhs:                                         ; preds = %while.cond
  %71 = load i32, i32* %i, align 4, !dbg !6810
  %inc = add i32 %71, 1, !dbg !6810
  store i32 %inc, i32* %i, align 4, !dbg !6810
  %cmp97 = icmp ult i32 %71, 40, !dbg !6811
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %72 = phi i1 [ false, %while.cond ], [ %cmp97, %land.rhs ], !dbg !6812
  br i1 %72, label %while.body, label %while.end, !dbg !6801

while.body:                                       ; preds = %land.end
  call void @msleep(i32 100) #11, !dbg !6813
  br label %while.cond, !dbg !6801, !llvm.loop !6814

while.end:                                        ; preds = %land.end
  %73 = load i32, i32* %status, align 4, !dbg !6816
  %conv99 = zext i32 %73 to i64, !dbg !6816
  %cmp100 = icmp ne i64 %conv99, 1431783002, !dbg !6818
  br i1 %cmp100, label %if.then102, label %if.end133, !dbg !6819

if.then102:                                       ; preds = %while.end
  %74 = load i32, i32* %status, align 4, !dbg !6820
  %conv103 = zext i32 %74 to i64, !dbg !6820
  %cmp104 = icmp eq i64 %conv103, 1498438492, !dbg !6823
  br i1 %cmp104, label %if.then106, label %if.end108, !dbg !6824

if.then106:                                       ; preds = %if.then102
  %75 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6825
  %dev107 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %75, i32 0, i32 41, !dbg !6825
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev107, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.20, i64 0, i64 0)) #12, !dbg !6825
  store i32 -5, i32* %retval1, align 4, !dbg !6827
  br label %err, !dbg !6828

if.end108:                                        ; preds = %if.then102
  %76 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6829
  %dev109 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %76, i32 0, i32 41, !dbg !6829
  %77 = load i32, i32* %status, align 4, !dbg !6829
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev109, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.21, i64 0, i64 0), i32 %77) #12, !dbg !6829
  br label %while.cond110, !dbg !6830

while.cond110:                                    ; preds = %while.body121, %if.end108
  %78 = load %struct.FIRM_ID*, %struct.FIRM_ID** %fid, align 8, !dbg !6831
  %signature111 = getelementptr inbounds %struct.FIRM_ID, %struct.FIRM_ID* %78, i32 0, i32 0, !dbg !6832
  %79 = bitcast i32* %signature111 to i8*, !dbg !6833
  %call112 = call i32 @readl(i8* %79) #11, !dbg !6834
  store i32 %call112, i32* %status, align 4, !dbg !6835
  %conv113 = zext i32 %call112 to i64, !dbg !6836
  %cmp114 = icmp ne i64 %conv113, 1431783002, !dbg !6837
  br i1 %cmp114, label %land.rhs116, label %land.end120, !dbg !6838

land.rhs116:                                      ; preds = %while.cond110
  %80 = load i32, i32* %i, align 4, !dbg !6839
  %inc117 = add i32 %80, 1, !dbg !6839
  store i32 %inc117, i32* %i, align 4, !dbg !6839
  %cmp118 = icmp ult i32 %80, 200, !dbg !6840
  br label %land.end120

land.end120:                                      ; preds = %land.rhs116, %while.cond110
  %81 = phi i1 [ false, %while.cond110 ], [ %cmp118, %land.rhs116 ], !dbg !6841
  br i1 %81, label %while.body121, label %while.end122, !dbg !6830

while.body121:                                    ; preds = %land.end120
  call void @msleep(i32 100) #11, !dbg !6842
  br label %while.cond110, !dbg !6830, !llvm.loop !6843

while.end122:                                     ; preds = %land.end120
  %82 = load i32, i32* %status, align 4, !dbg !6845
  %conv123 = zext i32 %82 to i64, !dbg !6845
  %cmp124 = icmp ne i64 %conv123, 1431783002, !dbg !6847
  br i1 %cmp124, label %if.then126, label %if.end132, !dbg !6848

if.then126:                                       ; preds = %while.end122
  %83 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6849
  %dev127 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %83, i32 0, i32 41, !dbg !6849
  %84 = load i32, i32* %status, align 4, !dbg !6849
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev127, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.22, i64 0, i64 0), i32 %84) #12, !dbg !6849
  %85 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6851
  %dev128 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %85, i32 0, i32 41, !dbg !6851
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev128, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @.str.23, i64 0, i64 0)) #12, !dbg !6851
  %86 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %ctl_addr.addr, align 8, !dbg !6852
  %call129 = call zeroext i1 @__cyz_fpga_loaded(%struct.RUNTIME_9060* %86) #11, !dbg !6854
  br i1 %call129, label %if.then130, label %if.end131, !dbg !6855

if.then130:                                       ; preds = %if.then126
  %87 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6856
  %88 = load i32, i32* %irq.addr, align 4, !dbg !6857
  %89 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %ctl_addr.addr, align 8, !dbg !6858
  call void @plx_init(%struct.pci_dev* %87, i32 %88, %struct.RUNTIME_9060* %89) #11, !dbg !6859
  br label %if.end131, !dbg !6859

if.end131:                                        ; preds = %if.then130, %if.then126
  store i32 -5, i32* %retval1, align 4, !dbg !6860
  br label %err, !dbg !6861

if.end132:                                        ; preds = %while.end122
  br label %if.end133, !dbg !6862

if.end133:                                        ; preds = %if.end132, %while.end
  %90 = load i8*, i8** %base_addr.addr, align 8, !dbg !6863
  %91 = load %struct.FIRM_ID*, %struct.FIRM_ID** %fid, align 8, !dbg !6864
  %zfwctrl_addr = getelementptr inbounds %struct.FIRM_ID, %struct.FIRM_ID* %91, i32 0, i32 1, !dbg !6865
  %92 = bitcast i32* %zfwctrl_addr to i8*, !dbg !6866
  %call134 = call i32 @readl(i8* %92) #11, !dbg !6867
  %idx.ext = zext i32 %call134 to i64, !dbg !6868
  %add.ptr135 = getelementptr i8, i8* %90, i64 %idx.ext, !dbg !6868
  %93 = bitcast i8* %add.ptr135 to %struct.ZFW_CTRL*, !dbg !6863
  store %struct.ZFW_CTRL* %93, %struct.ZFW_CTRL** %pt_zfwctrl, align 8, !dbg !6869
  %94 = load %struct.ZFW_CTRL*, %struct.ZFW_CTRL** %pt_zfwctrl, align 8, !dbg !6870
  %board_ctrl = getelementptr inbounds %struct.ZFW_CTRL, %struct.ZFW_CTRL* %94, i32 0, i32 0, !dbg !6871
  %n_channel = getelementptr inbounds %struct.BOARD_CTRL, %struct.BOARD_CTRL* %board_ctrl, i32 0, i32 0, !dbg !6872
  %95 = bitcast i32* %n_channel to i8*, !dbg !6873
  %call136 = call i32 @readl(i8* %95) #11, !dbg !6874
  store i32 %call136, i32* %nchan, align 4, !dbg !6875
  %96 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6876
  %dev137 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %96, i32 0, i32 41, !dbg !6876
  %97 = load %struct.ZFW_CTRL*, %struct.ZFW_CTRL** %pt_zfwctrl, align 8, !dbg !6876
  %board_ctrl138 = getelementptr inbounds %struct.ZFW_CTRL, %struct.ZFW_CTRL* %97, i32 0, i32 0, !dbg !6876
  %fw_version = getelementptr inbounds %struct.BOARD_CTRL, %struct.BOARD_CTRL* %board_ctrl138, i32 0, i32 1, !dbg !6876
  %98 = bitcast i32* %fw_version to i8*, !dbg !6876
  %call139 = call i32 @readl(i8* %98) #11, !dbg !6876
  %99 = load i32, i32* %nchan, align 4, !dbg !6876
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev137, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.24, i64 0, i64 0), i32 %call139, i32 %99) #12, !dbg !6876
  %100 = load i32, i32* %nchan, align 4, !dbg !6877
  %cmp140 = icmp eq i32 %100, 0, !dbg !6879
  br i1 %cmp140, label %if.then142, label %if.end148, !dbg !6880

if.then142:                                       ; preds = %if.end133
  %101 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6881
  %dev143 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %101, i32 0, i32 41, !dbg !6881
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev143, i8* getelementptr inbounds ([111 x i8], [111 x i8]* @.str.25, i64 0, i64 0)) #12, !dbg !6881
  %102 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %ctl_addr.addr, align 8, !dbg !6883
  %call144 = call zeroext i1 @__cyz_fpga_loaded(%struct.RUNTIME_9060* %102) #11, !dbg !6885
  br i1 %call144, label %if.then145, label %if.end146, !dbg !6886

if.then145:                                       ; preds = %if.then142
  %103 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6887
  %104 = load i32, i32* %irq.addr, align 4, !dbg !6888
  %105 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %ctl_addr.addr, align 8, !dbg !6889
  call void @plx_init(%struct.pci_dev* %103, i32 %104, %struct.RUNTIME_9060* %105) #11, !dbg !6890
  br label %if.end146, !dbg !6890

if.end146:                                        ; preds = %if.then145, %if.then142
  %106 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6891
  %dev147 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %106, i32 0, i32 41, !dbg !6891
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev147, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.26, i64 0, i64 0)) #12, !dbg !6891
  store i32 0, i32* %retval1, align 4, !dbg !6892
  br label %err, !dbg !6893

if.end148:                                        ; preds = %if.end133
  br label %do.body149, !dbg !6894

do.body149:                                       ; preds = %if.end148
  %107 = load %struct.ZFW_CTRL*, %struct.ZFW_CTRL** %pt_zfwctrl, align 8, !dbg !6895
  %board_ctrl150 = getelementptr inbounds %struct.ZFW_CTRL, %struct.ZFW_CTRL* %107, i32 0, i32 0, !dbg !6895
  %op_system = getelementptr inbounds %struct.BOARD_CTRL, %struct.BOARD_CTRL* %board_ctrl150, i32 0, i32 2, !dbg !6895
  %108 = bitcast i32* %op_system to i8*, !dbg !6895
  call void @writel(i32 48, i8* %108) #11, !dbg !6895
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6895, !srcloc !6897
  br label %do.end151, !dbg !6895

do.end151:                                        ; preds = %do.body149
  br label %do.body152, !dbg !6898

do.body152:                                       ; preds = %do.end151
  %109 = load %struct.ZFW_CTRL*, %struct.ZFW_CTRL** %pt_zfwctrl, align 8, !dbg !6899
  %board_ctrl153 = getelementptr inbounds %struct.ZFW_CTRL, %struct.ZFW_CTRL* %109, i32 0, i32 0, !dbg !6899
  %dr_version = getelementptr inbounds %struct.BOARD_CTRL, %struct.BOARD_CTRL* %board_ctrl153, i32 0, i32 3, !dbg !6899
  %110 = bitcast i32* %dr_version to i8*, !dbg !6899
  call void @writel(i32 33620483, i8* %110) #11, !dbg !6899
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6899, !srcloc !6901
  br label %do.end154, !dbg !6899

do.end154:                                        ; preds = %do.body152
  br label %do.body155, !dbg !6902

do.body155:                                       ; preds = %do.end154
  %111 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %ctl_addr.addr, align 8, !dbg !6903
  %intr_ctrl_stat156 = getelementptr inbounds %struct.RUNTIME_9060, %struct.RUNTIME_9060* %111, i32 0, i32 26, !dbg !6903
  %112 = bitcast i32* %intr_ctrl_stat156 to i8*, !dbg !6903
  %call157 = call i32 @readl(i8* %112) #11, !dbg !6903
  %or = or i32 %call157, 131072, !dbg !6903
  %113 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %ctl_addr.addr, align 8, !dbg !6903
  %intr_ctrl_stat158 = getelementptr inbounds %struct.RUNTIME_9060, %struct.RUNTIME_9060* %113, i32 0, i32 26, !dbg !6903
  %114 = bitcast i32* %intr_ctrl_stat158 to i8*, !dbg !6903
  call void @writel(i32 %or, i8* %114) #11, !dbg !6903
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6903, !srcloc !6905
  br label %do.end159, !dbg !6903

do.end159:                                        ; preds = %do.body155
  br label %do.body160, !dbg !6906

do.body160:                                       ; preds = %do.end159
  %115 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %ctl_addr.addr, align 8, !dbg !6907
  %intr_ctrl_stat161 = getelementptr inbounds %struct.RUNTIME_9060, %struct.RUNTIME_9060* %115, i32 0, i32 26, !dbg !6907
  %116 = bitcast i32* %intr_ctrl_stat161 to i8*, !dbg !6907
  %call162 = call i32 @readl(i8* %116) #11, !dbg !6907
  %conv163 = zext i32 %call162 to i64, !dbg !6907
  %or164 = or i64 %conv163, 198656, !dbg !6907
  %conv165 = trunc i64 %or164 to i32, !dbg !6907
  %117 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %ctl_addr.addr, align 8, !dbg !6907
  %intr_ctrl_stat166 = getelementptr inbounds %struct.RUNTIME_9060, %struct.RUNTIME_9060* %117, i32 0, i32 26, !dbg !6907
  %118 = bitcast i32* %intr_ctrl_stat166 to i8*, !dbg !6907
  call void @writel(i32 %conv165, i8* %118) #11, !dbg !6907
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6907, !srcloc !6909
  br label %do.end167, !dbg !6907

do.end167:                                        ; preds = %do.body160
  %119 = load i32, i32* %nchan, align 4, !dbg !6910
  store i32 %119, i32* %retval, align 4, !dbg !6911
  br label %return, !dbg !6911

err_rel:                                          ; preds = %if.then42, %if.then39, %if.then13
  call void @llvm.dbg.label(metadata !6912), !dbg !6913
  %120 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !6914
  call void @release_firmware(%struct.firmware* %120) #11, !dbg !6915
  br label %err, !dbg !6915

err:                                              ; preds = %err_rel, %if.end146, %if.end131, %if.then106, %if.then82, %if.then
  call void @llvm.dbg.label(metadata !6916), !dbg !6917
  %121 = load i32, i32* %retval1, align 4, !dbg !6918
  store i32 %121, i32* %retval, align 4, !dbg !6919
  br label %return, !dbg !6919

return:                                           ; preds = %err, %do.end167
  %122 = load i32, i32* %retval, align 4, !dbg !6920
  ret i32 %122, !dbg !6920
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_irq(i32 %irq, i32 (i32, i8*)* %handler, i64 %flags, i8* %name, i8* %dev) #4 !dbg !6921 {
entry:
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %flags.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %dev.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !6929, metadata !DIExpression()), !dbg !6930
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !6931, metadata !DIExpression()), !dbg !6932
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !6933, metadata !DIExpression()), !dbg !6934
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !6935, metadata !DIExpression()), !dbg !6936
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !6937, metadata !DIExpression()), !dbg !6938
  %0 = load i32, i32* %irq.addr, align 4, !dbg !6939
  %1 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !6940
  %2 = load i64, i64* %flags.addr, align 8, !dbg !6941
  %3 = load i8*, i8** %name.addr, align 8, !dbg !6942
  %4 = load i8*, i8** %dev.addr, align 8, !dbg !6943
  %call = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* null, i64 %2, i8* %3, i8* %4) #11, !dbg !6944
  ret i32 %call, !dbg !6945
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cyy_interrupt(i32 %irq, i8* %dev_id) #4 !dbg !6946 {
entry:
  %lock.addr.i53 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i53, metadata !6947, metadata !DIExpression()), !dbg !6952
  %lock.addr.i51 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i51, metadata !6954, metadata !DIExpression()), !dbg !6956
  %lock.addr.i49 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i49, metadata !6947, metadata !DIExpression()), !dbg !6958
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6954, metadata !DIExpression()), !dbg !6965
  %retval = alloca i32, align 4
  %irq.addr = alloca i32, align 4
  %dev_id.addr = alloca i8*, align 8
  %status = alloca i32, align 4
  %cinfo = alloca %struct.cyclades_card*, align 8
  %base_addr = alloca i8*, align 8
  %card_base_addr = alloca i8*, align 8
  %chip = alloca i32, align 4
  %too_many = alloca i32, align 4
  %had_work = alloca i32, align 4
  %index = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !6967, metadata !DIExpression()), !dbg !6968
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !6969, metadata !DIExpression()), !dbg !6970
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6971, metadata !DIExpression()), !dbg !6972
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %cinfo, metadata !6973, metadata !DIExpression()), !dbg !6974
  %0 = load i8*, i8** %dev_id.addr, align 8, !dbg !6975
  %1 = bitcast i8* %0 to %struct.cyclades_card*, !dbg !6975
  store %struct.cyclades_card* %1, %struct.cyclades_card** %cinfo, align 8, !dbg !6974
  call void @llvm.dbg.declare(metadata i8** %base_addr, metadata !6976, metadata !DIExpression()), !dbg !6977
  call void @llvm.dbg.declare(metadata i8** %card_base_addr, metadata !6978, metadata !DIExpression()), !dbg !6979
  call void @llvm.dbg.declare(metadata i32* %chip, metadata !6980, metadata !DIExpression()), !dbg !6981
  call void @llvm.dbg.declare(metadata i32* %too_many, metadata !6982, metadata !DIExpression()), !dbg !6983
  call void @llvm.dbg.declare(metadata i32* %had_work, metadata !6984, metadata !DIExpression()), !dbg !6985
  call void @llvm.dbg.declare(metadata i32* %index, metadata !6986, metadata !DIExpression()), !dbg !6987
  %2 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !6988
  %cmp = icmp eq %struct.cyclades_card* %2, null, !dbg !6988
  %lnot = xor i1 %cmp, true, !dbg !6988
  %lnot1 = xor i1 %lnot, true, !dbg !6988
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6988
  %conv = sext i32 %lnot.ext to i64, !dbg !6988
  %tobool = icmp ne i64 %conv, 0, !dbg !6988
  br i1 %tobool, label %if.then, label %if.end, !dbg !6990

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6991
  br label %return, !dbg !6991

if.end:                                           ; preds = %entry
  %3 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !6993
  %base_addr2 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %3, i32 0, i32 0, !dbg !6994
  %4 = load i8*, i8** %base_addr2, align 8, !dbg !6994
  store i8* %4, i8** %card_base_addr, align 8, !dbg !6995
  %5 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !6996
  %bus_index = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %5, i32 0, i32 7, !dbg !6997
  %6 = load i32, i32* %bus_index, align 8, !dbg !6997
  store i32 %6, i32* %index, align 4, !dbg !6998
  %7 = load i8*, i8** %card_base_addr, align 8, !dbg !6999
  %cmp3 = icmp eq i8* %7, null, !dbg !6999
  %lnot5 = xor i1 %cmp3, true, !dbg !6999
  %lnot7 = xor i1 %lnot5, true, !dbg !6999
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !6999
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !6999
  %tobool10 = icmp ne i64 %conv9, 0, !dbg !6999
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !7001

if.then11:                                        ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !7002
  br label %return, !dbg !7002

if.end12:                                         ; preds = %if.end
  br label %do.body, !dbg !7003

do.body:                                          ; preds = %do.cond, %if.end12
  store i32 0, i32* %had_work, align 4, !dbg !7004
  store i32 0, i32* %chip, align 4, !dbg !7005
  br label %for.cond, !dbg !7006

for.cond:                                         ; preds = %for.inc, %do.body
  %8 = load i32, i32* %chip, align 4, !dbg !7007
  %9 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !7008
  %num_chips = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %9, i32 0, i32 4, !dbg !7009
  %10 = load i32, i32* %num_chips, align 4, !dbg !7009
  %cmp13 = icmp ult i32 %8, %10, !dbg !7010
  br i1 %cmp13, label %for.body, label %for.end, !dbg !7011

for.body:                                         ; preds = %for.cond
  %11 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !7012
  %base_addr15 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %11, i32 0, i32 0, !dbg !7013
  %12 = load i8*, i8** %base_addr15, align 8, !dbg !7013
  %13 = load i32, i32* %chip, align 4, !dbg !7014
  %idxprom = zext i32 %13 to i64, !dbg !7015
  %arrayidx = getelementptr [8 x i32], [8 x i32]* @cy_chip_offset, i64 0, i64 %idxprom, !dbg !7015
  %14 = load i32, i32* %arrayidx, align 4, !dbg !7015
  %15 = load i32, i32* %index, align 4, !dbg !7016
  %shl = shl i32 %14, %15, !dbg !7017
  %idx.ext = zext i32 %shl to i64, !dbg !7018
  %add.ptr = getelementptr i8, i8* %12, i64 %idx.ext, !dbg !7018
  store i8* %add.ptr, i8** %base_addr, align 8, !dbg !7019
  store i32 0, i32* %too_many, align 4, !dbg !7020
  br label %while.cond, !dbg !7021

while.cond:                                       ; preds = %if.end37, %for.body
  %16 = load i8*, i8** %base_addr, align 8, !dbg !7022
  %17 = load i32, i32* %index, align 4, !dbg !7023
  %shl16 = shl i32 206, %17, !dbg !7024
  %idx.ext17 = sext i32 %shl16 to i64, !dbg !7025
  %add.ptr18 = getelementptr i8, i8* %16, i64 %idx.ext17, !dbg !7025
  %call = call zeroext i8 @readb(i8* %add.ptr18) #11, !dbg !7026
  %conv19 = zext i8 %call to i32, !dbg !7026
  store i32 %conv19, i32* %status, align 4, !dbg !7027
  %cmp20 = icmp ne i32 %conv19, 0, !dbg !7028
  br i1 %cmp20, label %while.body, label %while.end, !dbg !7021

while.body:                                       ; preds = %while.cond
  %18 = load i32, i32* %had_work, align 4, !dbg !7029
  %inc = add i32 %18, 1, !dbg !7029
  store i32 %inc, i32* %had_work, align 4, !dbg !7029
  %19 = load i32, i32* %too_many, align 4, !dbg !7030
  %inc22 = add i32 %19, 1, !dbg !7030
  store i32 %inc22, i32* %too_many, align 4, !dbg !7030
  %cmp23 = icmp ult i32 1000, %19, !dbg !7032
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !7033

if.then25:                                        ; preds = %while.body
  br label %while.end, !dbg !7034

if.end26:                                         ; preds = %while.body
  %20 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !7035
  %card_lock = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %20, i32 0, i32 10, !dbg !7036
  store %struct.spinlock* %card_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !7037, !srcloc !7039
  %21 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7040
  %22 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %21, i32 0, i32 0, !dbg !7040
  %rlock.i = bitcast %union.anon.0* %22 to %struct.raw_spinlock*, !dbg !7040
  %23 = load i32, i32* %status, align 4, !dbg !7042
  %and = and i32 %23, 1, !dbg !7044
  %tobool27 = icmp ne i32 %and, 0, !dbg !7044
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !7045

if.then28:                                        ; preds = %if.end26
  %24 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !7046
  %25 = load i32, i32* %chip, align 4, !dbg !7047
  %26 = load i8*, i8** %base_addr, align 8, !dbg !7048
  call void @cyy_chip_rx(%struct.cyclades_card* %24, i32 %25, i8* %26) #11, !dbg !7049
  br label %if.end29, !dbg !7049

if.end29:                                         ; preds = %if.then28, %if.end26
  %27 = load i32, i32* %status, align 4, !dbg !7050
  %and30 = and i32 %27, 2, !dbg !7052
  %tobool31 = icmp ne i32 %and30, 0, !dbg !7052
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !7053

if.then32:                                        ; preds = %if.end29
  %28 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !7054
  %29 = load i32, i32* %chip, align 4, !dbg !7055
  %30 = load i8*, i8** %base_addr, align 8, !dbg !7056
  call void @cyy_chip_tx(%struct.cyclades_card* %28, i32 %29, i8* %30) #11, !dbg !7057
  br label %if.end33, !dbg !7057

if.end33:                                         ; preds = %if.then32, %if.end29
  %31 = load i32, i32* %status, align 4, !dbg !7058
  %and34 = and i32 %31, 4, !dbg !7060
  %tobool35 = icmp ne i32 %and34, 0, !dbg !7060
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !7061

if.then36:                                        ; preds = %if.end33
  %32 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !7062
  %33 = load i32, i32* %chip, align 4, !dbg !7063
  %34 = load i8*, i8** %base_addr, align 8, !dbg !7064
  call void @cyy_chip_modem(%struct.cyclades_card* %32, i32 %33, i8* %34) #11, !dbg !7065
  br label %if.end37, !dbg !7065

if.end37:                                         ; preds = %if.then36, %if.end33
  %35 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !7066
  %card_lock38 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %35, i32 0, i32 10, !dbg !7067
  store %struct.spinlock* %card_lock38, %struct.spinlock** %lock.addr.i49, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !7068, !srcloc !7070
  %36 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i49, align 8, !dbg !7071
  %37 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %36, i32 0, i32 0, !dbg !7071
  %rlock.i50 = bitcast %union.anon.0* %37 to %struct.raw_spinlock*, !dbg !7071
  br label %while.cond, !dbg !7021, !llvm.loop !7073

while.end:                                        ; preds = %if.then25, %while.cond
  br label %for.inc, !dbg !7075

for.inc:                                          ; preds = %while.end
  %38 = load i32, i32* %chip, align 4, !dbg !7076
  %inc39 = add i32 %38, 1, !dbg !7076
  store i32 %inc39, i32* %chip, align 4, !dbg !7076
  br label %for.cond, !dbg !7077, !llvm.loop !7078

for.end:                                          ; preds = %for.cond
  br label %do.cond, !dbg !7080

do.cond:                                          ; preds = %for.end
  %39 = load i32, i32* %had_work, align 4, !dbg !7081
  %tobool40 = icmp ne i32 %39, 0, !dbg !7080
  br i1 %tobool40, label %do.body, label %do.end, !dbg !7080, !llvm.loop !7082

do.end:                                           ; preds = %do.cond
  %40 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !7084
  %card_lock41 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %40, i32 0, i32 10, !dbg !7085
  store %struct.spinlock* %card_lock41, %struct.spinlock** %lock.addr.i51, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !7086, !srcloc !7039
  %41 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i51, align 8, !dbg !7087
  %42 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %41, i32 0, i32 0, !dbg !7087
  %rlock.i52 = bitcast %union.anon.0* %42 to %struct.raw_spinlock*, !dbg !7087
  br label %do.body42, !dbg !7088

do.body42:                                        ; preds = %do.end
  %43 = load i8*, i8** %card_base_addr, align 8, !dbg !7089
  %44 = load i32, i32* %index, align 4, !dbg !7089
  %shl43 = shl i32 6144, %44, !dbg !7089
  %idx.ext44 = sext i32 %shl43 to i64, !dbg !7089
  %add.ptr45 = getelementptr i8, i8* %43, i64 %idx.ext44, !dbg !7089
  call void @writeb(i8 zeroext 0, i8* %add.ptr45) #11, !dbg !7089
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !7089, !srcloc !7091
  br label %do.end47, !dbg !7089

do.end47:                                         ; preds = %do.body42
  %45 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !7092
  %card_lock48 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %45, i32 0, i32 10, !dbg !7093
  store %struct.spinlock* %card_lock48, %struct.spinlock** %lock.addr.i53, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !7094, !srcloc !7070
  %46 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i53, align 8, !dbg !7095
  %47 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %46, i32 0, i32 0, !dbg !7095
  %rlock.i54 = bitcast %union.anon.0* %47 to %struct.raw_spinlock*, !dbg !7095
  store i32 1, i32* %retval, align 4, !dbg !7096
  br label %return, !dbg !7096

return:                                           ; preds = %do.end47, %if.then11, %if.then
  %48 = load i32, i32* %retval, align 4, !dbg !7097
  ret i32 %48, !dbg !7097
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cy_init_card(%struct.cyclades_card* %cinfo) #4 !dbg !7098 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7101, metadata !DIExpression()), !dbg !7106
  %retval = alloca i32, align 4
  %cinfo.addr = alloca %struct.cyclades_card*, align 8
  %info = alloca %struct.cyclades_port*, align 8
  %channel = alloca i32, align 4
  %port = alloca i32, align 4
  %.compoundliteral = alloca %struct.spinlock, align 1
  %firm_id = alloca %struct.FIRM_ID*, align 8
  %zfw_ctrl = alloca %struct.ZFW_CTRL*, align 8
  %chip_number = alloca i16, align 2
  %index = alloca i32, align 4
  store %struct.cyclades_card* %cinfo, %struct.cyclades_card** %cinfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %cinfo.addr, metadata !7109, metadata !DIExpression()), !dbg !7110
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info, metadata !7111, metadata !DIExpression()), !dbg !7112
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !7113, metadata !DIExpression()), !dbg !7114
  call void @llvm.dbg.declare(metadata i32* %port, metadata !7115, metadata !DIExpression()), !dbg !7116
  br label %do.body, !dbg !7117

do.body:                                          ; preds = %entry
  %0 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo.addr, align 8, !dbg !7118
  %card_lock = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %0, i32 0, i32 10, !dbg !7118
  store %struct.spinlock* %card_lock, %struct.spinlock** %lock.addr.i, align 8
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7119
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !7120
  %rlock.i = bitcast %union.anon.0* %2 to %struct.raw_spinlock*, !dbg !7120
  %3 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo.addr, align 8, !dbg !7118
  %card_lock1 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %3, i32 0, i32 10, !dbg !7118
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !7118
  %rlock = bitcast %union.anon.0* %4 to %struct.raw_spinlock*, !dbg !7118
  %5 = bitcast %struct.spinlock* %card_lock1 to i8*, !dbg !7118
  %6 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !7118
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 1 %6, i64 0, i1 false), !dbg !7118
  br label %do.end, !dbg !7118

do.end:                                           ; preds = %do.body
  %7 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo.addr, align 8, !dbg !7121
  %intr_enabled = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %7, i32 0, i32 8, !dbg !7122
  store i32 0, i32* %intr_enabled, align 4, !dbg !7123
  %8 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo.addr, align 8, !dbg !7124
  %nports = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %8, i32 0, i32 6, !dbg !7125
  %9 = load i32, i32* %nports, align 4, !dbg !7125
  %conv = zext i32 %9 to i64, !dbg !7124
  %call2 = call i8* @kcalloc(i64 %conv, i64 640, i32 3264) #11, !dbg !7126
  %10 = bitcast i8* %call2 to %struct.cyclades_port*, !dbg !7126
  %11 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo.addr, align 8, !dbg !7127
  %ports = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %11, i32 0, i32 11, !dbg !7128
  store %struct.cyclades_port* %10, %struct.cyclades_port** %ports, align 8, !dbg !7129
  %12 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo.addr, align 8, !dbg !7130
  %ports3 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %12, i32 0, i32 11, !dbg !7132
  %13 = load %struct.cyclades_port*, %struct.cyclades_port** %ports3, align 8, !dbg !7132
  %cmp = icmp eq %struct.cyclades_port* %13, null, !dbg !7133
  br i1 %cmp, label %if.then, label %if.end, !dbg !7134

if.then:                                          ; preds = %do.end
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.34, i64 0, i64 0)) #12, !dbg !7135
  store i32 -12, i32* %retval, align 4, !dbg !7137
  br label %return, !dbg !7137

if.end:                                           ; preds = %do.end
  store i32 0, i32* %channel, align 4, !dbg !7138
  %14 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo.addr, align 8, !dbg !7140
  %first_line = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %14, i32 0, i32 5, !dbg !7141
  %15 = load i32, i32* %first_line, align 8, !dbg !7141
  store i32 %15, i32* %port, align 4, !dbg !7142
  br label %for.cond, !dbg !7143

for.cond:                                         ; preds = %for.inc, %if.end
  %16 = load i32, i32* %channel, align 4, !dbg !7144
  %17 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo.addr, align 8, !dbg !7146
  %nports6 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %17, i32 0, i32 6, !dbg !7147
  %18 = load i32, i32* %nports6, align 4, !dbg !7147
  %cmp7 = icmp ult i32 %16, %18, !dbg !7148
  br i1 %cmp7, label %for.body, label %for.end, !dbg !7149

for.body:                                         ; preds = %for.cond
  %19 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo.addr, align 8, !dbg !7150
  %ports9 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %19, i32 0, i32 11, !dbg !7152
  %20 = load %struct.cyclades_port*, %struct.cyclades_port** %ports9, align 8, !dbg !7152
  %21 = load i32, i32* %channel, align 4, !dbg !7153
  %idxprom = zext i32 %21 to i64, !dbg !7150
  %arrayidx = getelementptr %struct.cyclades_port, %struct.cyclades_port* %20, i64 %idxprom, !dbg !7150
  store %struct.cyclades_port* %arrayidx, %struct.cyclades_port** %info, align 8, !dbg !7154
  %22 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7155
  %port10 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %22, i32 0, i32 1, !dbg !7156
  call void @tty_port_init(%struct.tty_port* %port10) #11, !dbg !7157
  %23 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7158
  %magic = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %23, i32 0, i32 0, !dbg !7159
  store i32 17241, i32* %magic, align 8, !dbg !7160
  %24 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo.addr, align 8, !dbg !7161
  %25 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7162
  %card = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %25, i32 0, i32 2, !dbg !7163
  store %struct.cyclades_card* %24, %struct.cyclades_card** %card, align 8, !dbg !7164
  %26 = load i32, i32* %port, align 4, !dbg !7165
  %27 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7166
  %line = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %27, i32 0, i32 4, !dbg !7167
  store i32 %26, i32* %line, align 8, !dbg !7168
  %28 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7169
  %port11 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %28, i32 0, i32 1, !dbg !7170
  %closing_wait = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port11, i32 0, i32 17, !dbg !7171
  store i32 7500, i32* %closing_wait, align 4, !dbg !7172
  %29 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7173
  %port12 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %29, i32 0, i32 1, !dbg !7174
  %close_delay = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port12, i32 0, i32 16, !dbg !7175
  store i32 125, i32* %close_delay, align 8, !dbg !7176
  %30 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7177
  %shutdown_wait = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %30, i32 0, i32 37, !dbg !7177
  call void @__init_completion(%struct.completion* %shutdown_wait) #11, !dbg !7177
  %31 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo.addr, align 8, !dbg !7178
  %call13 = call zeroext i1 @cy_is_Z(%struct.cyclades_card* %31) #11, !dbg !7180
  br i1 %call13, label %if.then14, label %if.else32, !dbg !7181

if.then14:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.FIRM_ID** %firm_id, metadata !7182, metadata !DIExpression()), !dbg !7184
  %32 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo.addr, align 8, !dbg !7185
  %base_addr = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %32, i32 0, i32 0, !dbg !7186
  %33 = load i8*, i8** %base_addr, align 8, !dbg !7186
  %add.ptr = getelementptr i8, i8* %33, i64 384, !dbg !7187
  %34 = bitcast i8* %add.ptr to %struct.FIRM_ID*, !dbg !7185
  store %struct.FIRM_ID* %34, %struct.FIRM_ID** %firm_id, align 8, !dbg !7184
  call void @llvm.dbg.declare(metadata %struct.ZFW_CTRL** %zfw_ctrl, metadata !7188, metadata !DIExpression()), !dbg !7189
  %35 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7190
  %port15 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %35, i32 0, i32 1, !dbg !7191
  %ops = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port15, i32 0, i32 3, !dbg !7192
  store %struct.tty_port_operations* @cyz_port_ops, %struct.tty_port_operations** %ops, align 8, !dbg !7193
  %36 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7194
  %type = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %36, i32 0, i32 6, !dbg !7195
  store i32 9, i32* %type, align 8, !dbg !7196
  %37 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo.addr, align 8, !dbg !7197
  %base_addr16 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %37, i32 0, i32 0, !dbg !7198
  %38 = load i8*, i8** %base_addr16, align 8, !dbg !7198
  %39 = load %struct.FIRM_ID*, %struct.FIRM_ID** %firm_id, align 8, !dbg !7199
  %zfwctrl_addr = getelementptr inbounds %struct.FIRM_ID, %struct.FIRM_ID* %39, i32 0, i32 1, !dbg !7200
  %40 = bitcast i32* %zfwctrl_addr to i8*, !dbg !7201
  %call17 = call i32 @readl(i8* %40) #11, !dbg !7202
  %and = and i32 %call17, 1048575, !dbg !7203
  %idx.ext = zext i32 %and to i64, !dbg !7204
  %add.ptr18 = getelementptr i8, i8* %38, i64 %idx.ext, !dbg !7204
  %41 = bitcast i8* %add.ptr18 to %struct.ZFW_CTRL*, !dbg !7197
  store %struct.ZFW_CTRL* %41, %struct.ZFW_CTRL** %zfw_ctrl, align 8, !dbg !7205
  %42 = load %struct.ZFW_CTRL*, %struct.ZFW_CTRL** %zfw_ctrl, align 8, !dbg !7206
  %ch_ctrl = getelementptr inbounds %struct.ZFW_CTRL, %struct.ZFW_CTRL* %42, i32 0, i32 1, !dbg !7207
  %43 = load i32, i32* %channel, align 4, !dbg !7208
  %idxprom19 = zext i32 %43 to i64, !dbg !7206
  %arrayidx20 = getelementptr [64 x %struct.CH_CTRL], [64 x %struct.CH_CTRL]* %ch_ctrl, i64 0, i64 %idxprom19, !dbg !7206
  %44 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7209
  %u = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %44, i32 0, i32 3, !dbg !7210
  %cyz = bitcast %union.anon.67* %u to %struct.anon.69*, !dbg !7211
  %ch_ctrl21 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cyz, i32 0, i32 0, !dbg !7212
  store %struct.CH_CTRL* %arrayidx20, %struct.CH_CTRL** %ch_ctrl21, align 8, !dbg !7213
  %45 = load %struct.ZFW_CTRL*, %struct.ZFW_CTRL** %zfw_ctrl, align 8, !dbg !7214
  %buf_ctrl = getelementptr inbounds %struct.ZFW_CTRL, %struct.ZFW_CTRL* %45, i32 0, i32 2, !dbg !7215
  %46 = load i32, i32* %channel, align 4, !dbg !7216
  %idxprom22 = zext i32 %46 to i64, !dbg !7214
  %arrayidx23 = getelementptr [64 x %struct.BUF_CTRL], [64 x %struct.BUF_CTRL]* %buf_ctrl, i64 0, i64 %idxprom22, !dbg !7214
  %47 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7217
  %u24 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %47, i32 0, i32 3, !dbg !7218
  %cyz25 = bitcast %union.anon.67* %u24 to %struct.anon.69*, !dbg !7219
  %buf_ctrl26 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cyz25, i32 0, i32 1, !dbg !7220
  store %struct.BUF_CTRL* %arrayidx23, %struct.BUF_CTRL** %buf_ctrl26, align 8, !dbg !7221
  %48 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo.addr, align 8, !dbg !7222
  %hw_ver = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %48, i32 0, i32 9, !dbg !7224
  %49 = load i32, i32* %hw_ver, align 8, !dbg !7224
  %cmp27 = icmp eq i32 %49, 0, !dbg !7225
  br i1 %cmp27, label %if.then29, label %if.else, !dbg !7226

if.then29:                                        ; preds = %if.then14
  %50 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7227
  %xmit_fifo_size = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %50, i32 0, i32 10, !dbg !7228
  store i32 16, i32* %xmit_fifo_size, align 8, !dbg !7229
  br label %if.end31, !dbg !7227

if.else:                                          ; preds = %if.then14
  %51 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7230
  %xmit_fifo_size30 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %51, i32 0, i32 10, !dbg !7231
  store i32 64, i32* %xmit_fifo_size30, align 8, !dbg !7232
  br label %if.end31

if.end31:                                         ; preds = %if.else, %if.then29
  br label %if.end66, !dbg !7233

if.else32:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i16* %chip_number, metadata !7234, metadata !DIExpression()), !dbg !7236
  call void @llvm.dbg.declare(metadata i32* %index, metadata !7237, metadata !DIExpression()), !dbg !7238
  %52 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo.addr, align 8, !dbg !7239
  %bus_index = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %52, i32 0, i32 7, !dbg !7240
  %53 = load i32, i32* %bus_index, align 8, !dbg !7240
  store i32 %53, i32* %index, align 4, !dbg !7238
  %54 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7241
  %port33 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %54, i32 0, i32 1, !dbg !7242
  %ops34 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port33, i32 0, i32 3, !dbg !7243
  store %struct.tty_port_operations* @cyy_port_ops, %struct.tty_port_operations** %ops34, align 8, !dbg !7244
  %55 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7245
  %type35 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %55, i32 0, i32 6, !dbg !7246
  store i32 5, i32* %type35, align 8, !dbg !7247
  %56 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7248
  %xmit_fifo_size36 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %56, i32 0, i32 10, !dbg !7249
  store i32 12, i32* %xmit_fifo_size36, align 8, !dbg !7250
  %57 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7251
  %cor1 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %57, i32 0, i32 11, !dbg !7252
  store i32 3, i32* %cor1, align 4, !dbg !7253
  %58 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7254
  %cor2 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %58, i32 0, i32 12, !dbg !7255
  store i32 32, i32* %cor2, align 8, !dbg !7256
  %59 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7257
  %cor3 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %59, i32 0, i32 13, !dbg !7258
  store i32 8, i32* %cor3, align 4, !dbg !7259
  %60 = load i32, i32* %channel, align 4, !dbg !7260
  %div = udiv i32 %60, 4, !dbg !7261
  %conv37 = trunc i32 %div to i16, !dbg !7260
  store i16 %conv37, i16* %chip_number, align 2, !dbg !7262
  %61 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo.addr, align 8, !dbg !7263
  %base_addr38 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %61, i32 0, i32 0, !dbg !7264
  %62 = load i8*, i8** %base_addr38, align 8, !dbg !7264
  %63 = load i16, i16* %chip_number, align 2, !dbg !7265
  %idxprom39 = zext i16 %63 to i64, !dbg !7266
  %arrayidx40 = getelementptr [8 x i32], [8 x i32]* @cy_chip_offset, i64 0, i64 %idxprom39, !dbg !7266
  %64 = load i32, i32* %arrayidx40, align 4, !dbg !7266
  %65 = load i32, i32* %index, align 4, !dbg !7267
  %shl = shl i32 %64, %65, !dbg !7268
  %idx.ext41 = zext i32 %shl to i64, !dbg !7269
  %add.ptr42 = getelementptr i8, i8* %62, i64 %idx.ext41, !dbg !7269
  %66 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7270
  %u43 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %66, i32 0, i32 3, !dbg !7271
  %cyy = bitcast %union.anon.67* %u43 to %struct.anon.68*, !dbg !7272
  %base_addr44 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %cyy, i32 0, i32 0, !dbg !7273
  store i8* %add.ptr42, i8** %base_addr44, align 8, !dbg !7274
  %67 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7275
  %call45 = call zeroext i8 @cyy_readb(%struct.cyclades_port* %67, i32 128) #11, !dbg !7276
  %conv46 = zext i8 %call45 to i32, !dbg !7276
  %68 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7277
  %chip_rev = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %68, i32 0, i32 23, !dbg !7278
  store i32 %conv46, i32* %chip_rev, align 4, !dbg !7279
  %69 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7280
  %chip_rev47 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %69, i32 0, i32 23, !dbg !7282
  %70 = load i32, i32* %chip_rev47, align 4, !dbg !7282
  %cmp48 = icmp sge i32 %70, 72, !dbg !7283
  br i1 %cmp48, label %if.then50, label %if.else55, !dbg !7284

if.then50:                                        ; preds = %if.else32
  %71 = load i8, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @baud_bpr_60, i64 0, i64 13), align 1, !dbg !7285
  %conv51 = sext i8 %71 to i32, !dbg !7285
  %72 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7287
  %tbpr = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %72, i32 0, i32 16, !dbg !7288
  store i32 %conv51, i32* %tbpr, align 8, !dbg !7289
  %73 = load i8, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @baud_co_60, i64 0, i64 13), align 1, !dbg !7290
  %conv52 = sext i8 %73 to i32, !dbg !7290
  %74 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7291
  %tco = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %74, i32 0, i32 17, !dbg !7292
  store i32 %conv52, i32* %tco, align 4, !dbg !7293
  %75 = load i8, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @baud_bpr_60, i64 0, i64 13), align 1, !dbg !7294
  %conv53 = sext i8 %75 to i32, !dbg !7294
  %76 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7295
  %rbpr = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %76, i32 0, i32 18, !dbg !7296
  store i32 %conv53, i32* %rbpr, align 8, !dbg !7297
  %77 = load i8, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @baud_co_60, i64 0, i64 13), align 1, !dbg !7298
  %conv54 = sext i8 %77 to i32, !dbg !7298
  %78 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7299
  %rco = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %78, i32 0, i32 19, !dbg !7300
  store i32 %conv54, i32* %rco, align 4, !dbg !7301
  %79 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7302
  %rtsdtr_inv = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %79, i32 0, i32 22, !dbg !7303
  store i32 1, i32* %rtsdtr_inv, align 8, !dbg !7304
  br label %if.end65, !dbg !7305

if.else55:                                        ; preds = %if.else32
  %80 = load i8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @baud_bpr_25, i64 0, i64 13), align 1, !dbg !7306
  %conv56 = sext i8 %80 to i32, !dbg !7306
  %81 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7308
  %tbpr57 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %81, i32 0, i32 16, !dbg !7309
  store i32 %conv56, i32* %tbpr57, align 8, !dbg !7310
  %82 = load i8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @baud_co_25, i64 0, i64 13), align 1, !dbg !7311
  %conv58 = sext i8 %82 to i32, !dbg !7311
  %83 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7312
  %tco59 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %83, i32 0, i32 17, !dbg !7313
  store i32 %conv58, i32* %tco59, align 4, !dbg !7314
  %84 = load i8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @baud_bpr_25, i64 0, i64 13), align 1, !dbg !7315
  %conv60 = sext i8 %84 to i32, !dbg !7315
  %85 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7316
  %rbpr61 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %85, i32 0, i32 18, !dbg !7317
  store i32 %conv60, i32* %rbpr61, align 8, !dbg !7318
  %86 = load i8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @baud_co_25, i64 0, i64 13), align 1, !dbg !7319
  %conv62 = sext i8 %86 to i32, !dbg !7319
  %87 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7320
  %rco63 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %87, i32 0, i32 19, !dbg !7321
  store i32 %conv62, i32* %rco63, align 4, !dbg !7322
  %88 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7323
  %rtsdtr_inv64 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %88, i32 0, i32 22, !dbg !7324
  store i32 0, i32* %rtsdtr_inv64, align 8, !dbg !7325
  br label %if.end65

if.end65:                                         ; preds = %if.else55, %if.then50
  %89 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7326
  %read_status_mask = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %89, i32 0, i32 7, !dbg !7327
  store i32 255, i32* %read_status_mask, align 4, !dbg !7328
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.end31
  br label %for.inc, !dbg !7329

for.inc:                                          ; preds = %if.end66
  %90 = load i32, i32* %channel, align 4, !dbg !7330
  %inc = add i32 %90, 1, !dbg !7330
  store i32 %inc, i32* %channel, align 4, !dbg !7330
  %91 = load i32, i32* %port, align 4, !dbg !7331
  %inc67 = add i32 %91, 1, !dbg !7331
  store i32 %inc67, i32* %port, align 4, !dbg !7331
  br label %for.cond, !dbg !7332, !llvm.loop !7333

for.end:                                          ; preds = %for.cond
  %92 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo.addr, align 8, !dbg !7335
  %call68 = call zeroext i1 @cy_is_Z(%struct.cyclades_card* %92) #11, !dbg !7337
  br i1 %call68, label %land.lhs.true, label %if.end73, !dbg !7338

land.lhs.true:                                    ; preds = %for.end
  %call70 = call i32 @timer_pending(%struct.timer_list* @cyz_timerlist) #11, !dbg !7339
  %tobool = icmp ne i32 %call70, 0, !dbg !7339
  br i1 %tobool, label %if.end73, label %if.then71, !dbg !7340

if.then71:                                        ; preds = %land.lhs.true
  %93 = load volatile i64, i64* @jiffies, align 8, !dbg !7341
  %add = add i64 %93, 1, !dbg !7343
  %call72 = call i32 @mod_timer(%struct.timer_list* @cyz_timerlist, i64 %add) #11, !dbg !7344
  br label %if.end73, !dbg !7345

if.end73:                                         ; preds = %if.then71, %land.lhs.true, %for.end
  store i32 0, i32* %retval, align 4, !dbg !7346
  br label %return, !dbg !7346

return:                                           ; preds = %if.end73, %if.then
  %94 = load i32, i32* %retval, align 4, !dbg !7347
  ret i32 %94, !dbg !7347
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_set_drvdata(%struct.pci_dev* %pdev, i8* %data) #4 !dbg !7348 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !7351, metadata !DIExpression()), !dbg !7352
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !7353, metadata !DIExpression()), !dbg !7354
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7355
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !7356
  %1 = load i8*, i8** %data.addr, align 8, !dbg !7357
  call void @dev_set_drvdata(%struct.device* %dev, i8* %1) #11, !dbg !7358
  ret void, !dbg !7359
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #3

; Function Attrs: noredzone
declare dso_local %struct.device* @tty_port_register_device(%struct.tty_port*, %struct.tty_driver*, i32, %struct.device*) #2

; Function Attrs: noredzone
declare dso_local void @pci_release_regions(%struct.pci_dev*) #2

; Function Attrs: noredzone
declare dso_local void @pci_disable_device(%struct.pci_dev*) #2

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #2

; Function Attrs: noredzone
declare dso_local i32 @pci_write_config_byte(%struct.pci_dev*, i32, i8 zeroext) #2

; Function Attrs: noredzone
declare dso_local i32 @request_firmware(%struct.firmware**, i8*, %struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__cyz_load_fw(%struct.firmware* %fw, i8* %name, i32 %mailbox, i8* %base, i8* %fpga) #4 !dbg !7360 {
entry:
  %retval = alloca i32, align 4
  %fw.addr = alloca %struct.firmware*, align 8
  %name.addr = alloca i8*, align 8
  %mailbox.addr = alloca i32, align 4
  %base.addr = alloca i8*, align 8
  %fpga.addr = alloca i8*, align 8
  %ptr = alloca i8*, align 8
  %h = alloca %struct.zfile_header*, align 8
  %c = alloca %struct.zfile_config*, align 8
  %cs = alloca %struct.zfile_config*, align 8
  %b = alloca %struct.zfile_block*, align 8
  %bs = alloca %struct.zfile_block*, align 8
  %a = alloca i32, align 4
  %tmp = alloca i32, align 4
  %len = alloca i32, align 4
  store %struct.firmware* %fw, %struct.firmware** %fw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.firmware** %fw.addr, metadata !7364, metadata !DIExpression()), !dbg !7365
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7366, metadata !DIExpression()), !dbg !7367
  store i32 %mailbox, i32* %mailbox.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mailbox.addr, metadata !7368, metadata !DIExpression()), !dbg !7369
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !7370, metadata !DIExpression()), !dbg !7371
  store i8* %fpga, i8** %fpga.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fpga.addr, metadata !7372, metadata !DIExpression()), !dbg !7373
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !7374, metadata !DIExpression()), !dbg !7375
  %0 = load %struct.firmware*, %struct.firmware** %fw.addr, align 8, !dbg !7376
  %data = getelementptr inbounds %struct.firmware, %struct.firmware* %0, i32 0, i32 1, !dbg !7377
  %1 = load i8*, i8** %data, align 8, !dbg !7377
  store i8* %1, i8** %ptr, align 8, !dbg !7375
  call void @llvm.dbg.declare(metadata %struct.zfile_header** %h, metadata !7378, metadata !DIExpression()), !dbg !7392
  %2 = load i8*, i8** %ptr, align 8, !dbg !7393
  %3 = bitcast i8* %2 to %struct.zfile_header*, !dbg !7393
  store %struct.zfile_header* %3, %struct.zfile_header** %h, align 8, !dbg !7392
  call void @llvm.dbg.declare(metadata %struct.zfile_config** %c, metadata !7394, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.declare(metadata %struct.zfile_config** %cs, metadata !7405, metadata !DIExpression()), !dbg !7406
  call void @llvm.dbg.declare(metadata %struct.zfile_block** %b, metadata !7407, metadata !DIExpression()), !dbg !7416
  call void @llvm.dbg.declare(metadata %struct.zfile_block** %bs, metadata !7417, metadata !DIExpression()), !dbg !7418
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7419, metadata !DIExpression()), !dbg !7420
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !7421, metadata !DIExpression()), !dbg !7422
  call void @llvm.dbg.declare(metadata i32* %len, metadata !7423, metadata !DIExpression()), !dbg !7424
  %4 = load %struct.firmware*, %struct.firmware** %fw.addr, align 8, !dbg !7425
  %size = getelementptr inbounds %struct.firmware, %struct.firmware* %4, i32 0, i32 0, !dbg !7426
  %5 = load i64, i64* %size, align 8, !dbg !7426
  %conv = trunc i64 %5 to i32, !dbg !7425
  store i32 %conv, i32* %len, align 4, !dbg !7424
  %6 = load i32, i32* %len, align 4, !dbg !7427
  %conv1 = zext i32 %6 to i64, !dbg !7427
  %cmp = icmp ult i64 %conv1, 180, !dbg !7429
  br i1 %cmp, label %if.then, label %if.end, !dbg !7430

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %len, align 4, !dbg !7431
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.27, i64 0, i64 0), i32 %7, i64 180) #12, !dbg !7433
  store i32 -22, i32* %retval, align 4, !dbg !7434
  br label %return, !dbg !7434

if.end:                                           ; preds = %entry
  %8 = load i8*, i8** %ptr, align 8, !dbg !7435
  %9 = load %struct.zfile_header*, %struct.zfile_header** %h, align 8, !dbg !7436
  %config_offset = getelementptr inbounds %struct.zfile_header, %struct.zfile_header* %9, i32 0, i32 4, !dbg !7437
  %10 = load i32, i32* %config_offset, align 1, !dbg !7437
  %idx.ext = zext i32 %10 to i64, !dbg !7438
  %add.ptr = getelementptr i8, i8* %8, i64 %idx.ext, !dbg !7438
  %11 = bitcast i8* %add.ptr to %struct.zfile_config*, !dbg !7435
  store %struct.zfile_config* %11, %struct.zfile_config** %cs, align 8, !dbg !7439
  %12 = load i8*, i8** %ptr, align 8, !dbg !7440
  %13 = load %struct.zfile_header*, %struct.zfile_header** %h, align 8, !dbg !7441
  %block_offset = getelementptr inbounds %struct.zfile_header, %struct.zfile_header* %13, i32 0, i32 6, !dbg !7442
  %14 = load i32, i32* %block_offset, align 1, !dbg !7442
  %idx.ext3 = zext i32 %14 to i64, !dbg !7443
  %add.ptr4 = getelementptr i8, i8* %12, i64 %idx.ext3, !dbg !7443
  %15 = bitcast i8* %add.ptr4 to %struct.zfile_block*, !dbg !7440
  store %struct.zfile_block* %15, %struct.zfile_block** %bs, align 8, !dbg !7444
  %16 = load %struct.zfile_config*, %struct.zfile_config** %cs, align 8, !dbg !7445
  %17 = load %struct.zfile_header*, %struct.zfile_header** %h, align 8, !dbg !7447
  %n_config = getelementptr inbounds %struct.zfile_header, %struct.zfile_header* %17, i32 0, i32 3, !dbg !7448
  %18 = load i32, i32* %n_config, align 1, !dbg !7448
  %idx.ext5 = zext i32 %18 to i64, !dbg !7449
  %add.ptr6 = getelementptr %struct.zfile_config, %struct.zfile_config* %16, i64 %idx.ext5, !dbg !7449
  %19 = bitcast %struct.zfile_config* %add.ptr6 to i8*, !dbg !7450
  %20 = load i8*, i8** %ptr, align 8, !dbg !7451
  %21 = load i32, i32* %len, align 4, !dbg !7452
  %idx.ext7 = zext i32 %21 to i64, !dbg !7453
  %add.ptr8 = getelementptr i8, i8* %20, i64 %idx.ext7, !dbg !7453
  %cmp9 = icmp ugt i8* %19, %add.ptr8, !dbg !7454
  br i1 %cmp9, label %if.then17, label %lor.lhs.false, !dbg !7455

lor.lhs.false:                                    ; preds = %if.end
  %22 = load %struct.zfile_block*, %struct.zfile_block** %bs, align 8, !dbg !7456
  %23 = load %struct.zfile_header*, %struct.zfile_header** %h, align 8, !dbg !7457
  %n_blocks = getelementptr inbounds %struct.zfile_header, %struct.zfile_header* %23, i32 0, i32 5, !dbg !7458
  %24 = load i32, i32* %n_blocks, align 1, !dbg !7458
  %idx.ext11 = zext i32 %24 to i64, !dbg !7459
  %add.ptr12 = getelementptr %struct.zfile_block, %struct.zfile_block* %22, i64 %idx.ext11, !dbg !7459
  %25 = bitcast %struct.zfile_block* %add.ptr12 to i8*, !dbg !7460
  %26 = load i8*, i8** %ptr, align 8, !dbg !7461
  %27 = load i32, i32* %len, align 4, !dbg !7462
  %idx.ext13 = zext i32 %27 to i64, !dbg !7463
  %add.ptr14 = getelementptr i8, i8* %26, i64 %idx.ext13, !dbg !7463
  %cmp15 = icmp ugt i8* %25, %add.ptr14, !dbg !7464
  br i1 %cmp15, label %if.then17, label %if.end19, !dbg !7465

if.then17:                                        ; preds = %lor.lhs.false, %if.end
  %call18 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.28, i64 0, i64 0)) #12, !dbg !7466
  store i32 -22, i32* %retval, align 4, !dbg !7468
  br label %return, !dbg !7468

if.end19:                                         ; preds = %lor.lhs.false
  %28 = load %struct.zfile_header*, %struct.zfile_header** %h, align 8, !dbg !7469
  %name20 = getelementptr inbounds %struct.zfile_header, %struct.zfile_header* %28, i32 0, i32 0, !dbg !7471
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name20, i64 0, i64 0, !dbg !7469
  %call21 = call i32 @cyc_isfwstr(i8* %arraydecay, i32 64) #11, !dbg !7472
  %tobool = icmp ne i32 %call21, 0, !dbg !7472
  br i1 %tobool, label %if.then26, label %lor.lhs.false22, !dbg !7473

lor.lhs.false22:                                  ; preds = %if.end19
  %29 = load %struct.zfile_header*, %struct.zfile_header** %h, align 8, !dbg !7474
  %date = getelementptr inbounds %struct.zfile_header, %struct.zfile_header* %29, i32 0, i32 1, !dbg !7475
  %arraydecay23 = getelementptr inbounds [32 x i8], [32 x i8]* %date, i64 0, i64 0, !dbg !7474
  %call24 = call i32 @cyc_isfwstr(i8* %arraydecay23, i32 32) #11, !dbg !7476
  %tobool25 = icmp ne i32 %call24, 0, !dbg !7476
  br i1 %tobool25, label %if.then26, label %if.end28, !dbg !7477

if.then26:                                        ; preds = %lor.lhs.false22, %if.end19
  %call27 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.29, i64 0, i64 0)) #12, !dbg !7478
  store i32 -22, i32* %retval, align 4, !dbg !7480
  br label %return, !dbg !7480

if.end28:                                         ; preds = %lor.lhs.false22
  %30 = load i8*, i8** %name.addr, align 8, !dbg !7481
  %31 = load %struct.zfile_header*, %struct.zfile_header** %h, align 8, !dbg !7483
  %name29 = getelementptr inbounds %struct.zfile_header, %struct.zfile_header* %31, i32 0, i32 0, !dbg !7484
  %arraydecay30 = getelementptr inbounds [64 x i8], [64 x i8]* %name29, i64 0, i64 0, !dbg !7483
  %call31 = call i32 @strncmp(i8* %30, i8* %arraydecay30, i64 64) #11, !dbg !7485
  %tobool32 = icmp ne i32 %call31, 0, !dbg !7485
  br i1 %tobool32, label %if.then33, label %if.end37, !dbg !7486

if.then33:                                        ; preds = %if.end28
  %32 = load %struct.zfile_header*, %struct.zfile_header** %h, align 8, !dbg !7487
  %name34 = getelementptr inbounds %struct.zfile_header, %struct.zfile_header* %32, i32 0, i32 0, !dbg !7489
  %arraydecay35 = getelementptr inbounds [64 x i8], [64 x i8]* %name34, i64 0, i64 0, !dbg !7487
  %33 = load i8*, i8** %name.addr, align 8, !dbg !7490
  %call36 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.30, i64 0, i64 0), i8* %arraydecay35, i8* %33) #12, !dbg !7491
  store i32 -22, i32* %retval, align 4, !dbg !7492
  br label %return, !dbg !7492

if.end37:                                         ; preds = %if.end28
  store i32 0, i32* %tmp, align 4, !dbg !7493
  %34 = load %struct.zfile_config*, %struct.zfile_config** %cs, align 8, !dbg !7494
  store %struct.zfile_config* %34, %struct.zfile_config** %c, align 8, !dbg !7496
  br label %for.cond, !dbg !7497

for.cond:                                         ; preds = %for.inc62, %if.end37
  %35 = load %struct.zfile_config*, %struct.zfile_config** %c, align 8, !dbg !7498
  %36 = load %struct.zfile_config*, %struct.zfile_config** %cs, align 8, !dbg !7500
  %37 = load %struct.zfile_header*, %struct.zfile_header** %h, align 8, !dbg !7501
  %n_config38 = getelementptr inbounds %struct.zfile_header, %struct.zfile_header* %37, i32 0, i32 3, !dbg !7502
  %38 = load i32, i32* %n_config38, align 1, !dbg !7502
  %idx.ext39 = zext i32 %38 to i64, !dbg !7503
  %add.ptr40 = getelementptr %struct.zfile_config, %struct.zfile_config* %36, i64 %idx.ext39, !dbg !7503
  %cmp41 = icmp ult %struct.zfile_config* %35, %add.ptr40, !dbg !7504
  br i1 %cmp41, label %for.body, label %for.end63, !dbg !7505

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %a, align 4, !dbg !7506
  br label %for.cond43, !dbg !7509

for.cond43:                                       ; preds = %for.inc, %for.body
  %39 = load i32, i32* %a, align 4, !dbg !7510
  %40 = load %struct.zfile_config*, %struct.zfile_config** %c, align 8, !dbg !7512
  %n_blocks44 = getelementptr inbounds %struct.zfile_config, %struct.zfile_config* %40, i32 0, i32 3, !dbg !7513
  %41 = load i32, i32* %n_blocks44, align 1, !dbg !7513
  %cmp45 = icmp ult i32 %39, %41, !dbg !7514
  br i1 %cmp45, label %for.body47, label %for.end, !dbg !7515

for.body47:                                       ; preds = %for.cond43
  %42 = load %struct.zfile_config*, %struct.zfile_config** %c, align 8, !dbg !7516
  %block_list = getelementptr inbounds %struct.zfile_config, %struct.zfile_config* %42, i32 0, i32 4, !dbg !7518
  %43 = load i32, i32* %a, align 4, !dbg !7519
  %idxprom = zext i32 %43 to i64, !dbg !7516
  %arrayidx = getelementptr [16 x i32], [16 x i32]* %block_list, i64 0, i64 %idxprom, !dbg !7516
  %44 = load i32, i32* %arrayidx, align 1, !dbg !7516
  %45 = load %struct.zfile_header*, %struct.zfile_header** %h, align 8, !dbg !7520
  %n_blocks48 = getelementptr inbounds %struct.zfile_header, %struct.zfile_header* %45, i32 0, i32 5, !dbg !7521
  %46 = load i32, i32* %n_blocks48, align 1, !dbg !7521
  %cmp49 = icmp ugt i32 %44, %46, !dbg !7522
  br i1 %cmp49, label %if.then51, label %if.end53, !dbg !7523

if.then51:                                        ; preds = %for.body47
  %call52 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.31, i64 0, i64 0)) #12, !dbg !7524
  store i32 -22, i32* %retval, align 4, !dbg !7526
  br label %return, !dbg !7526

if.end53:                                         ; preds = %for.body47
  br label %for.inc, !dbg !7521

for.inc:                                          ; preds = %if.end53
  %47 = load i32, i32* %a, align 4, !dbg !7527
  %inc = add i32 %47, 1, !dbg !7527
  store i32 %inc, i32* %a, align 4, !dbg !7527
  br label %for.cond43, !dbg !7528, !llvm.loop !7529

for.end:                                          ; preds = %for.cond43
  %48 = load %struct.zfile_config*, %struct.zfile_config** %c, align 8, !dbg !7531
  %mailbox54 = getelementptr inbounds %struct.zfile_config, %struct.zfile_config* %48, i32 0, i32 1, !dbg !7533
  %49 = load i32, i32* %mailbox54, align 1, !dbg !7533
  %50 = load i32, i32* %mailbox.addr, align 4, !dbg !7534
  %cmp55 = icmp eq i32 %49, %50, !dbg !7535
  br i1 %cmp55, label %land.lhs.true, label %if.end61, !dbg !7536

land.lhs.true:                                    ; preds = %for.end
  %51 = load %struct.zfile_config*, %struct.zfile_config** %c, align 8, !dbg !7537
  %function = getelementptr inbounds %struct.zfile_config, %struct.zfile_config* %51, i32 0, i32 2, !dbg !7538
  %52 = load i32, i32* %function, align 1, !dbg !7538
  %cmp57 = icmp eq i32 %52, 0, !dbg !7539
  br i1 %cmp57, label %if.then59, label %if.end61, !dbg !7540

if.then59:                                        ; preds = %land.lhs.true
  %53 = load i32, i32* %tmp, align 4, !dbg !7541
  %inc60 = add i32 %53, 1, !dbg !7541
  store i32 %inc60, i32* %tmp, align 4, !dbg !7541
  br label %if.end61, !dbg !7542

if.end61:                                         ; preds = %if.then59, %land.lhs.true, %for.end
  br label %for.inc62, !dbg !7543

for.inc62:                                        ; preds = %if.end61
  %54 = load %struct.zfile_config*, %struct.zfile_config** %c, align 8, !dbg !7544
  %incdec.ptr = getelementptr %struct.zfile_config, %struct.zfile_config* %54, i32 1, !dbg !7544
  store %struct.zfile_config* %incdec.ptr, %struct.zfile_config** %c, align 8, !dbg !7544
  br label %for.cond, !dbg !7545, !llvm.loop !7546

for.end63:                                        ; preds = %for.cond
  %55 = load i32, i32* %tmp, align 4, !dbg !7548
  %tobool64 = icmp ne i32 %55, 0, !dbg !7548
  br i1 %tobool64, label %if.end67, label %if.then65, !dbg !7550

if.then65:                                        ; preds = %for.end63
  %call66 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.32, i64 0, i64 0)) #12, !dbg !7551
  store i32 -22, i32* %retval, align 4, !dbg !7553
  br label %return, !dbg !7553

if.end67:                                         ; preds = %for.end63
  %56 = load %struct.zfile_block*, %struct.zfile_block** %bs, align 8, !dbg !7554
  store %struct.zfile_block* %56, %struct.zfile_block** %b, align 8, !dbg !7556
  br label %for.cond68, !dbg !7557

for.cond68:                                       ; preds = %for.inc81, %if.end67
  %57 = load %struct.zfile_block*, %struct.zfile_block** %b, align 8, !dbg !7558
  %58 = load %struct.zfile_block*, %struct.zfile_block** %bs, align 8, !dbg !7560
  %59 = load %struct.zfile_header*, %struct.zfile_header** %h, align 8, !dbg !7561
  %n_blocks69 = getelementptr inbounds %struct.zfile_header, %struct.zfile_header* %59, i32 0, i32 5, !dbg !7562
  %60 = load i32, i32* %n_blocks69, align 1, !dbg !7562
  %idx.ext70 = zext i32 %60 to i64, !dbg !7563
  %add.ptr71 = getelementptr %struct.zfile_block, %struct.zfile_block* %58, i64 %idx.ext70, !dbg !7563
  %cmp72 = icmp ult %struct.zfile_block* %57, %add.ptr71, !dbg !7564
  br i1 %cmp72, label %for.body74, label %for.end83, !dbg !7565

for.body74:                                       ; preds = %for.cond68
  %61 = load %struct.zfile_block*, %struct.zfile_block** %b, align 8, !dbg !7566
  %file_offset = getelementptr inbounds %struct.zfile_block, %struct.zfile_block* %61, i32 0, i32 1, !dbg !7568
  %62 = load i32, i32* %file_offset, align 1, !dbg !7568
  %63 = load %struct.zfile_block*, %struct.zfile_block** %b, align 8, !dbg !7569
  %size75 = getelementptr inbounds %struct.zfile_block, %struct.zfile_block* %63, i32 0, i32 3, !dbg !7570
  %64 = load i32, i32* %size75, align 1, !dbg !7570
  %add = add i32 %62, %64, !dbg !7571
  %65 = load i32, i32* %len, align 4, !dbg !7572
  %cmp76 = icmp ugt i32 %add, %65, !dbg !7573
  br i1 %cmp76, label %if.then78, label %if.end80, !dbg !7574

if.then78:                                        ; preds = %for.body74
  %call79 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.33, i64 0, i64 0)) #12, !dbg !7575
  store i32 -22, i32* %retval, align 4, !dbg !7577
  br label %return, !dbg !7577

if.end80:                                         ; preds = %for.body74
  br label %for.inc81, !dbg !7572

for.inc81:                                        ; preds = %if.end80
  %66 = load %struct.zfile_block*, %struct.zfile_block** %b, align 8, !dbg !7578
  %incdec.ptr82 = getelementptr %struct.zfile_block, %struct.zfile_block* %66, i32 1, !dbg !7578
  store %struct.zfile_block* %incdec.ptr82, %struct.zfile_block** %b, align 8, !dbg !7578
  br label %for.cond68, !dbg !7579, !llvm.loop !7580

for.end83:                                        ; preds = %for.cond68
  %67 = load %struct.zfile_config*, %struct.zfile_config** %cs, align 8, !dbg !7582
  store %struct.zfile_config* %67, %struct.zfile_config** %c, align 8, !dbg !7584
  br label %for.cond84, !dbg !7585

for.cond84:                                       ; preds = %for.inc100, %for.end83
  %68 = load %struct.zfile_config*, %struct.zfile_config** %c, align 8, !dbg !7586
  %69 = load %struct.zfile_config*, %struct.zfile_config** %cs, align 8, !dbg !7588
  %70 = load %struct.zfile_header*, %struct.zfile_header** %h, align 8, !dbg !7589
  %n_config85 = getelementptr inbounds %struct.zfile_header, %struct.zfile_header* %70, i32 0, i32 3, !dbg !7590
  %71 = load i32, i32* %n_config85, align 1, !dbg !7590
  %idx.ext86 = zext i32 %71 to i64, !dbg !7591
  %add.ptr87 = getelementptr %struct.zfile_config, %struct.zfile_config* %69, i64 %idx.ext86, !dbg !7591
  %cmp88 = icmp ult %struct.zfile_config* %68, %add.ptr87, !dbg !7592
  br i1 %cmp88, label %for.body90, label %for.end102, !dbg !7593

for.body90:                                       ; preds = %for.cond84
  %72 = load %struct.zfile_config*, %struct.zfile_config** %c, align 8, !dbg !7594
  %mailbox91 = getelementptr inbounds %struct.zfile_config, %struct.zfile_config* %72, i32 0, i32 1, !dbg !7596
  %73 = load i32, i32* %mailbox91, align 1, !dbg !7596
  %74 = load i32, i32* %mailbox.addr, align 4, !dbg !7597
  %cmp92 = icmp eq i32 %73, %74, !dbg !7598
  br i1 %cmp92, label %land.lhs.true94, label %if.end99, !dbg !7599

land.lhs.true94:                                  ; preds = %for.body90
  %75 = load %struct.zfile_config*, %struct.zfile_config** %c, align 8, !dbg !7600
  %function95 = getelementptr inbounds %struct.zfile_config, %struct.zfile_config* %75, i32 0, i32 2, !dbg !7601
  %76 = load i32, i32* %function95, align 1, !dbg !7601
  %cmp96 = icmp eq i32 %76, 0, !dbg !7602
  br i1 %cmp96, label %if.then98, label %if.end99, !dbg !7603

if.then98:                                        ; preds = %land.lhs.true94
  br label %for.end102, !dbg !7604

if.end99:                                         ; preds = %land.lhs.true94, %for.body90
  br label %for.inc100, !dbg !7605

for.inc100:                                       ; preds = %if.end99
  %77 = load %struct.zfile_config*, %struct.zfile_config** %c, align 8, !dbg !7606
  %incdec.ptr101 = getelementptr %struct.zfile_config, %struct.zfile_config* %77, i32 1, !dbg !7606
  store %struct.zfile_config* %incdec.ptr101, %struct.zfile_config** %c, align 8, !dbg !7606
  br label %for.cond84, !dbg !7607, !llvm.loop !7608

for.end102:                                       ; preds = %if.then98, %for.cond84
  store i32 0, i32* %a, align 4, !dbg !7610
  br label %for.cond103, !dbg !7612

for.cond103:                                      ; preds = %for.inc136, %for.end102
  %78 = load i32, i32* %a, align 4, !dbg !7613
  %79 = load %struct.zfile_config*, %struct.zfile_config** %c, align 8, !dbg !7615
  %n_blocks104 = getelementptr inbounds %struct.zfile_config, %struct.zfile_config* %79, i32 0, i32 3, !dbg !7616
  %80 = load i32, i32* %n_blocks104, align 1, !dbg !7616
  %cmp105 = icmp ult i32 %78, %80, !dbg !7617
  br i1 %cmp105, label %for.body107, label %for.end138, !dbg !7618

for.body107:                                      ; preds = %for.cond103
  %81 = load %struct.zfile_block*, %struct.zfile_block** %bs, align 8, !dbg !7619
  %82 = load %struct.zfile_config*, %struct.zfile_config** %c, align 8, !dbg !7621
  %block_list108 = getelementptr inbounds %struct.zfile_config, %struct.zfile_config* %82, i32 0, i32 4, !dbg !7622
  %83 = load i32, i32* %a, align 4, !dbg !7623
  %idxprom109 = zext i32 %83 to i64, !dbg !7621
  %arrayidx110 = getelementptr [16 x i32], [16 x i32]* %block_list108, i64 0, i64 %idxprom109, !dbg !7621
  %84 = load i32, i32* %arrayidx110, align 1, !dbg !7621
  %idxprom111 = zext i32 %84 to i64, !dbg !7619
  %arrayidx112 = getelementptr %struct.zfile_block, %struct.zfile_block* %81, i64 %idxprom111, !dbg !7619
  store %struct.zfile_block* %arrayidx112, %struct.zfile_block** %b, align 8, !dbg !7624
  %85 = load %struct.zfile_block*, %struct.zfile_block** %b, align 8, !dbg !7625
  %type = getelementptr inbounds %struct.zfile_block, %struct.zfile_block* %85, i32 0, i32 0, !dbg !7627
  %86 = load i32, i32* %type, align 1, !dbg !7627
  %cmp113 = icmp eq i32 %86, 1, !dbg !7628
  br i1 %cmp113, label %if.then115, label %if.else, !dbg !7629

if.then115:                                       ; preds = %for.body107
  %87 = load i8*, i8** %fpga.addr, align 8, !dbg !7630
  %cmp116 = icmp ne i8* %87, null, !dbg !7633
  br i1 %cmp116, label %if.then118, label %if.end123, !dbg !7634

if.then118:                                       ; preds = %if.then115
  %88 = load i8*, i8** %fpga.addr, align 8, !dbg !7635
  %89 = load i8*, i8** %ptr, align 8, !dbg !7636
  %90 = load %struct.zfile_block*, %struct.zfile_block** %b, align 8, !dbg !7637
  %file_offset119 = getelementptr inbounds %struct.zfile_block, %struct.zfile_block* %90, i32 0, i32 1, !dbg !7638
  %91 = load i32, i32* %file_offset119, align 1, !dbg !7638
  %idx.ext120 = zext i32 %91 to i64, !dbg !7639
  %add.ptr121 = getelementptr i8, i8* %89, i64 %idx.ext120, !dbg !7639
  %92 = load %struct.zfile_block*, %struct.zfile_block** %b, align 8, !dbg !7640
  %size122 = getelementptr inbounds %struct.zfile_block, %struct.zfile_block* %92, i32 0, i32 3, !dbg !7641
  %93 = load i32, i32* %size122, align 1, !dbg !7641
  call void @cyz_fpga_copy(i8* %88, i8* %add.ptr121, i32 %93) #11, !dbg !7642
  br label %if.end123, !dbg !7642

if.end123:                                        ; preds = %if.then118, %if.then115
  br label %if.end135, !dbg !7643

if.else:                                          ; preds = %for.body107
  %94 = load i8*, i8** %base.addr, align 8, !dbg !7644
  %cmp124 = icmp ne i8* %94, null, !dbg !7647
  br i1 %cmp124, label %if.then126, label %if.end134, !dbg !7648

if.then126:                                       ; preds = %if.else
  %95 = load i8*, i8** %base.addr, align 8, !dbg !7649
  %96 = load %struct.zfile_block*, %struct.zfile_block** %b, align 8, !dbg !7650
  %ram_offset = getelementptr inbounds %struct.zfile_block, %struct.zfile_block* %96, i32 0, i32 2, !dbg !7651
  %97 = load i32, i32* %ram_offset, align 1, !dbg !7651
  %idx.ext127 = zext i32 %97 to i64, !dbg !7652
  %add.ptr128 = getelementptr i8, i8* %95, i64 %idx.ext127, !dbg !7652
  %98 = load i8*, i8** %ptr, align 8, !dbg !7653
  %99 = load %struct.zfile_block*, %struct.zfile_block** %b, align 8, !dbg !7654
  %file_offset129 = getelementptr inbounds %struct.zfile_block, %struct.zfile_block* %99, i32 0, i32 1, !dbg !7655
  %100 = load i32, i32* %file_offset129, align 1, !dbg !7655
  %idx.ext130 = zext i32 %100 to i64, !dbg !7656
  %add.ptr131 = getelementptr i8, i8* %98, i64 %idx.ext130, !dbg !7656
  %101 = load %struct.zfile_block*, %struct.zfile_block** %b, align 8, !dbg !7657
  %size132 = getelementptr inbounds %struct.zfile_block, %struct.zfile_block* %101, i32 0, i32 3, !dbg !7658
  %102 = load i32, i32* %size132, align 1, !dbg !7658
  %conv133 = zext i32 %102 to i64, !dbg !7657
  call void @memcpy_toio(i8* %add.ptr128, i8* %add.ptr131, i64 %conv133) #11, !dbg !7659
  br label %if.end134, !dbg !7659

if.end134:                                        ; preds = %if.then126, %if.else
  br label %if.end135

if.end135:                                        ; preds = %if.end134, %if.end123
  br label %for.inc136, !dbg !7660

for.inc136:                                       ; preds = %if.end135
  %103 = load i32, i32* %a, align 4, !dbg !7661
  %inc137 = add i32 %103, 1, !dbg !7661
  store i32 %inc137, i32* %a, align 4, !dbg !7661
  br label %for.cond103, !dbg !7662, !llvm.loop !7663

for.end138:                                       ; preds = %for.cond103
  store i32 0, i32* %retval, align 4, !dbg !7665
  br label %return, !dbg !7665

return:                                           ; preds = %for.end138, %if.then78, %if.then65, %if.then51, %if.then33, %if.then26, %if.then17, %if.then
  %104 = load i32, i32* %retval, align 4, !dbg !7666
  ret i32 %104, !dbg !7666
}

; Function Attrs: noredzone
declare dso_local void @release_firmware(%struct.firmware*) #2

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cyc_isfwstr(i8* %str, i32 %size) #4 !dbg !7667 {
entry:
  %retval = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %a = alloca i32, align 4
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !7670, metadata !DIExpression()), !dbg !7671
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7672, metadata !DIExpression()), !dbg !7673
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7674, metadata !DIExpression()), !dbg !7675
  store i32 0, i32* %a, align 4, !dbg !7676
  br label %for.cond, !dbg !7678

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %a, align 4, !dbg !7679
  %1 = load i32, i32* %size.addr, align 4, !dbg !7681
  %cmp = icmp ult i32 %0, %1, !dbg !7682
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7683

land.rhs:                                         ; preds = %for.cond
  %2 = load i8*, i8** %str.addr, align 8, !dbg !7684
  %3 = load i8, i8* %2, align 1, !dbg !7685
  %conv = sext i8 %3 to i32, !dbg !7685
  %tobool = icmp ne i32 %conv, 0, !dbg !7683
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %4 = phi i1 [ false, %for.cond ], [ %tobool, %land.rhs ], !dbg !7686
  br i1 %4, label %for.body, label %for.end, !dbg !7687

for.body:                                         ; preds = %land.end
  %5 = load i8*, i8** %str.addr, align 8, !dbg !7688
  %6 = load i8, i8* %5, align 1, !dbg !7690
  %conv1 = sext i8 %6 to i32, !dbg !7690
  %and = and i32 %conv1, 128, !dbg !7691
  %tobool2 = icmp ne i32 %and, 0, !dbg !7691
  br i1 %tobool2, label %if.then, label %if.end, !dbg !7692

if.then:                                          ; preds = %for.body
  store i32 -22, i32* %retval, align 4, !dbg !7693
  br label %return, !dbg !7693

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !7694

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %a, align 4, !dbg !7695
  %inc = add i32 %7, 1, !dbg !7695
  store i32 %inc, i32* %a, align 4, !dbg !7695
  %8 = load i8*, i8** %str.addr, align 8, !dbg !7696
  %incdec.ptr = getelementptr i8, i8* %8, i32 1, !dbg !7696
  store i8* %incdec.ptr, i8** %str.addr, align 8, !dbg !7696
  br label %for.cond, !dbg !7697, !llvm.loop !7698

for.end:                                          ; preds = %land.end
  br label %for.cond3, !dbg !7700

for.cond3:                                        ; preds = %for.inc10, %for.end
  %9 = load i32, i32* %a, align 4, !dbg !7701
  %10 = load i32, i32* %size.addr, align 4, !dbg !7704
  %cmp4 = icmp ult i32 %9, %10, !dbg !7705
  br i1 %cmp4, label %for.body6, label %for.end13, !dbg !7706

for.body6:                                        ; preds = %for.cond3
  %11 = load i8*, i8** %str.addr, align 8, !dbg !7707
  %12 = load i8, i8* %11, align 1, !dbg !7709
  %tobool7 = icmp ne i8 %12, 0, !dbg !7709
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !7710

if.then8:                                         ; preds = %for.body6
  store i32 -22, i32* %retval, align 4, !dbg !7711
  br label %return, !dbg !7711

if.end9:                                          ; preds = %for.body6
  br label %for.inc10, !dbg !7707

for.inc10:                                        ; preds = %if.end9
  %13 = load i32, i32* %a, align 4, !dbg !7712
  %inc11 = add i32 %13, 1, !dbg !7712
  store i32 %inc11, i32* %a, align 4, !dbg !7712
  %14 = load i8*, i8** %str.addr, align 8, !dbg !7713
  %incdec.ptr12 = getelementptr i8, i8* %14, i32 1, !dbg !7713
  store i8* %incdec.ptr12, i8** %str.addr, align 8, !dbg !7713
  br label %for.cond3, !dbg !7714, !llvm.loop !7715

for.end13:                                        ; preds = %for.cond3
  store i32 0, i32* %retval, align 4, !dbg !7717
  br label %return, !dbg !7717

return:                                           ; preds = %for.end13, %if.then8, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !7718
  ret i32 %15, !dbg !7718
}

; Function Attrs: noredzone
declare dso_local i32 @strncmp(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cyz_fpga_copy(i8* %fpga, i8* %data, i32 %size) #4 !dbg !7719 {
entry:
  %fpga.addr = alloca i8*, align 8
  %data.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %fpga, i8** %fpga.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fpga.addr, metadata !7722, metadata !DIExpression()), !dbg !7723
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !7724, metadata !DIExpression()), !dbg !7725
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7726, metadata !DIExpression()), !dbg !7727
  br label %for.cond, !dbg !7728

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %size.addr, align 4, !dbg !7729
  %cmp = icmp ugt i32 %0, 0, !dbg !7732
  br i1 %cmp, label %for.body, label %for.end, !dbg !7733

for.body:                                         ; preds = %for.cond
  br label %do.body, !dbg !7734

do.body:                                          ; preds = %for.body
  %1 = load i8*, i8** %data.addr, align 8, !dbg !7736
  %incdec.ptr = getelementptr i8, i8* %1, i32 1, !dbg !7736
  store i8* %incdec.ptr, i8** %data.addr, align 8, !dbg !7736
  %2 = load i8, i8* %1, align 1, !dbg !7736
  %conv = zext i8 %2 to i32, !dbg !7736
  %3 = load i8*, i8** %fpga.addr, align 8, !dbg !7736
  call void @writel(i32 %conv, i8* %3) #11, !dbg !7736
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !7736, !srcloc !7738
  br label %do.end, !dbg !7736

do.end:                                           ; preds = %do.body
  call void @__const_udelay(i64 42950) #11, !dbg !7739
  br label %for.inc, !dbg !7744

for.inc:                                          ; preds = %do.end
  %4 = load i32, i32* %size.addr, align 4, !dbg !7745
  %dec = add i32 %4, -1, !dbg !7745
  store i32 %dec, i32* %size.addr, align 4, !dbg !7745
  br label %for.cond, !dbg !7746, !llvm.loop !7747

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7749
}

; Function Attrs: noredzone
declare dso_local void @memcpy_toio(i8*, i8*, i64) #2

; Function Attrs: noredzone
declare dso_local i32 @request_threaded_irq(i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cyy_chip_rx(%struct.cyclades_card* %cinfo, i32 %chip, i8* %base_addr) #4 !dbg !7750 {
entry:
  %cinfo.addr = alloca %struct.cyclades_card*, align 8
  %chip.addr = alloca i32, align 4
  %base_addr.addr = alloca i8*, align 8
  %info = alloca %struct.cyclades_port*, align 8
  %port = alloca %struct.tty_port*, align 8
  %len = alloca i32, align 4
  %index = alloca i32, align 4
  %ivr = alloca i8, align 1
  %save_xir = alloca i8, align 1
  %channel = alloca i8, align 1
  %save_car = alloca i8, align 1
  %data = alloca i8, align 1
  %char_count = alloca i8, align 1
  %tty = alloca %struct.tty_struct*, align 8
  store %struct.cyclades_card* %cinfo, %struct.cyclades_card** %cinfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %cinfo.addr, metadata !7753, metadata !DIExpression()), !dbg !7754
  store i32 %chip, i32* %chip.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %chip.addr, metadata !7755, metadata !DIExpression()), !dbg !7756
  store i8* %base_addr, i8** %base_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base_addr.addr, metadata !7757, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info, metadata !7759, metadata !DIExpression()), !dbg !7760
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !7761, metadata !DIExpression()), !dbg !7762
  call void @llvm.dbg.declare(metadata i32* %len, metadata !7763, metadata !DIExpression()), !dbg !7764
  call void @llvm.dbg.declare(metadata i32* %index, metadata !7765, metadata !DIExpression()), !dbg !7766
  %0 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo.addr, align 8, !dbg !7767
  %bus_index = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %0, i32 0, i32 7, !dbg !7768
  %1 = load i32, i32* %bus_index, align 8, !dbg !7768
  store i32 %1, i32* %index, align 4, !dbg !7766
  call void @llvm.dbg.declare(metadata i8* %ivr, metadata !7769, metadata !DIExpression()), !dbg !7770
  call void @llvm.dbg.declare(metadata i8* %save_xir, metadata !7771, metadata !DIExpression()), !dbg !7772
  call void @llvm.dbg.declare(metadata i8* %channel, metadata !7773, metadata !DIExpression()), !dbg !7774
  call void @llvm.dbg.declare(metadata i8* %save_car, metadata !7775, metadata !DIExpression()), !dbg !7776
  call void @llvm.dbg.declare(metadata i8* %data, metadata !7777, metadata !DIExpression()), !dbg !7778
  call void @llvm.dbg.declare(metadata i8* %char_count, metadata !7779, metadata !DIExpression()), !dbg !7780
  %2 = load i8*, i8** %base_addr.addr, align 8, !dbg !7781
  %3 = load i32, i32* %index, align 4, !dbg !7782
  %shl = shl i32 214, %3, !dbg !7783
  %idx.ext = sext i32 %shl to i64, !dbg !7784
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !7784
  %call = call zeroext i8 @readb(i8* %add.ptr) #11, !dbg !7785
  store i8 %call, i8* %save_xir, align 1, !dbg !7786
  %4 = load i8, i8* %save_xir, align 1, !dbg !7787
  %conv = zext i8 %4 to i32, !dbg !7787
  %and = and i32 %conv, 3, !dbg !7788
  %conv1 = trunc i32 %and to i8, !dbg !7787
  store i8 %conv1, i8* %channel, align 1, !dbg !7789
  %5 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo.addr, align 8, !dbg !7790
  %ports = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %5, i32 0, i32 11, !dbg !7791
  %6 = load %struct.cyclades_port*, %struct.cyclades_port** %ports, align 8, !dbg !7791
  %7 = load i8, i8* %channel, align 1, !dbg !7792
  %conv2 = zext i8 %7 to i32, !dbg !7792
  %8 = load i32, i32* %chip.addr, align 4, !dbg !7793
  %mul = mul i32 %8, 4, !dbg !7794
  %add = add i32 %conv2, %mul, !dbg !7795
  %idxprom = sext i32 %add to i64, !dbg !7790
  %arrayidx = getelementptr %struct.cyclades_port, %struct.cyclades_port* %6, i64 %idxprom, !dbg !7790
  store %struct.cyclades_port* %arrayidx, %struct.cyclades_port** %info, align 8, !dbg !7796
  %9 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7797
  %port3 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %9, i32 0, i32 1, !dbg !7798
  store %struct.tty_port* %port3, %struct.tty_port** %port, align 8, !dbg !7799
  %10 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7800
  %call4 = call zeroext i8 @cyy_readb(%struct.cyclades_port* %10, i32 208) #11, !dbg !7801
  store i8 %call4, i8* %save_car, align 1, !dbg !7802
  %11 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7803
  %12 = load i8, i8* %save_xir, align 1, !dbg !7804
  call void @cyy_writeb(%struct.cyclades_port* %11, i32 208, i8 zeroext %12) #11, !dbg !7805
  %13 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7806
  %call5 = call zeroext i8 @cyy_readb(%struct.cyclades_port* %13, i32 134) #11, !dbg !7807
  %conv6 = zext i8 %call5 to i32, !dbg !7807
  %and7 = and i32 %conv6, 7, !dbg !7808
  %conv8 = trunc i32 %and7 to i8, !dbg !7807
  store i8 %conv8, i8* %ivr, align 1, !dbg !7809
  %14 = load i8, i8* %ivr, align 1, !dbg !7810
  %conv9 = zext i8 %14 to i32, !dbg !7810
  %cmp = icmp eq i32 %conv9, 7, !dbg !7812
  br i1 %cmp, label %if.then, label %if.else130, !dbg !7813

if.then:                                          ; preds = %entry
  %15 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7814
  %call11 = call zeroext i8 @cyy_readb(%struct.cyclades_port* %15, i32 196) #11, !dbg !7816
  store i8 %call11, i8* %data, align 1, !dbg !7817
  %16 = load i8, i8* %data, align 1, !dbg !7818
  %conv12 = zext i8 %16 to i32, !dbg !7818
  %and13 = and i32 %conv12, 8, !dbg !7820
  %tobool = icmp ne i32 %and13, 0, !dbg !7820
  br i1 %tobool, label %if.then14, label %if.else, !dbg !7821

if.then14:                                        ; preds = %if.then
  %17 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7822
  %icount = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %17, i32 0, i32 36, !dbg !7823
  %brk = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %icount, i32 0, i32 9, !dbg !7824
  %18 = load i32, i32* %brk, align 4, !dbg !7825
  %inc = add i32 %18, 1, !dbg !7825
  store i32 %inc, i32* %brk, align 4, !dbg !7825
  br label %if.end37, !dbg !7822

if.else:                                          ; preds = %if.then
  %19 = load i8, i8* %data, align 1, !dbg !7826
  %conv15 = zext i8 %19 to i32, !dbg !7826
  %and16 = and i32 %conv15, 2, !dbg !7828
  %tobool17 = icmp ne i32 %and16, 0, !dbg !7828
  br i1 %tobool17, label %if.then18, label %if.else21, !dbg !7829

if.then18:                                        ; preds = %if.else
  %20 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7830
  %icount19 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %20, i32 0, i32 36, !dbg !7831
  %frame = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %icount19, i32 0, i32 6, !dbg !7832
  %21 = load i32, i32* %frame, align 8, !dbg !7833
  %inc20 = add i32 %21, 1, !dbg !7833
  store i32 %inc20, i32* %frame, align 8, !dbg !7833
  br label %if.end36, !dbg !7830

if.else21:                                        ; preds = %if.else
  %22 = load i8, i8* %data, align 1, !dbg !7834
  %conv22 = zext i8 %22 to i32, !dbg !7834
  %and23 = and i32 %conv22, 4, !dbg !7836
  %tobool24 = icmp ne i32 %and23, 0, !dbg !7836
  br i1 %tobool24, label %if.then25, label %if.else28, !dbg !7837

if.then25:                                        ; preds = %if.else21
  %23 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7838
  %icount26 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %23, i32 0, i32 36, !dbg !7839
  %parity = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %icount26, i32 0, i32 7, !dbg !7840
  %24 = load i32, i32* %parity, align 4, !dbg !7841
  %inc27 = add i32 %24, 1, !dbg !7841
  store i32 %inc27, i32* %parity, align 4, !dbg !7841
  br label %if.end35, !dbg !7838

if.else28:                                        ; preds = %if.else21
  %25 = load i8, i8* %data, align 1, !dbg !7842
  %conv29 = zext i8 %25 to i32, !dbg !7842
  %and30 = and i32 %conv29, 1, !dbg !7844
  %tobool31 = icmp ne i32 %and30, 0, !dbg !7844
  br i1 %tobool31, label %if.then32, label %if.end, !dbg !7845

if.then32:                                        ; preds = %if.else28
  %26 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7846
  %icount33 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %26, i32 0, i32 36, !dbg !7847
  %overrun = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %icount33, i32 0, i32 8, !dbg !7848
  %27 = load i32, i32* %overrun, align 8, !dbg !7849
  %inc34 = add i32 %27, 1, !dbg !7849
  store i32 %inc34, i32* %overrun, align 8, !dbg !7849
  br label %if.end, !dbg !7846

if.end:                                           ; preds = %if.then32, %if.else28
  br label %if.end35

if.end35:                                         ; preds = %if.end, %if.then25
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then18
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then14
  %28 = load i8, i8* %data, align 1, !dbg !7850
  %conv38 = zext i8 %28 to i32, !dbg !7850
  %29 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7852
  %ignore_status_mask = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %29, i32 0, i32 8, !dbg !7853
  %30 = load i32, i32* %ignore_status_mask, align 8, !dbg !7853
  %and39 = and i32 %conv38, %30, !dbg !7854
  %tobool40 = icmp ne i32 %and39, 0, !dbg !7854
  br i1 %tobool40, label %if.then41, label %if.end44, !dbg !7855

if.then41:                                        ; preds = %if.end37
  %31 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7856
  %icount42 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %31, i32 0, i32 36, !dbg !7858
  %rx = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %icount42, i32 0, i32 5, !dbg !7859
  %32 = load i32, i32* %rx, align 4, !dbg !7860
  %inc43 = add i32 %32, 1, !dbg !7860
  store i32 %inc43, i32* %rx, align 4, !dbg !7860
  br label %return, !dbg !7861

if.end44:                                         ; preds = %if.end37
  %33 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !7862
  %call45 = call i32 @tty_buffer_request_room(%struct.tty_port* %33, i64 1) #11, !dbg !7864
  %tobool46 = icmp ne i32 %call45, 0, !dbg !7864
  br i1 %tobool46, label %if.then47, label %if.else123, !dbg !7865

if.then47:                                        ; preds = %if.end44
  %34 = load i8, i8* %data, align 1, !dbg !7866
  %conv48 = zext i8 %34 to i32, !dbg !7866
  %35 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7869
  %read_status_mask = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %35, i32 0, i32 7, !dbg !7870
  %36 = load i32, i32* %read_status_mask, align 4, !dbg !7870
  %and49 = and i32 %conv48, %36, !dbg !7871
  %tobool50 = icmp ne i32 %and49, 0, !dbg !7871
  br i1 %tobool50, label %if.then51, label %if.else117, !dbg !7872

if.then51:                                        ; preds = %if.then47
  %37 = load i8, i8* %data, align 1, !dbg !7873
  %conv52 = zext i8 %37 to i32, !dbg !7873
  %and53 = and i32 %conv52, 8, !dbg !7876
  %tobool54 = icmp ne i32 %and53, 0, !dbg !7876
  br i1 %tobool54, label %if.then55, label %if.else69, !dbg !7877

if.then55:                                        ; preds = %if.then51
  %38 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !7878
  %39 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7880
  %call56 = call zeroext i8 @cyy_readb(%struct.cyclades_port* %39, i32 196) #11, !dbg !7881
  %call57 = call i32 @tty_insert_flip_char(%struct.tty_port* %38, i8 zeroext %call56, i8 signext 1) #11, !dbg !7882
  %40 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7883
  %icount58 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %40, i32 0, i32 36, !dbg !7884
  %rx59 = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %icount58, i32 0, i32 5, !dbg !7885
  %41 = load i32, i32* %rx59, align 4, !dbg !7886
  %inc60 = add i32 %41, 1, !dbg !7886
  store i32 %inc60, i32* %rx59, align 4, !dbg !7886
  %42 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !7887
  %flags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %42, i32 0, i32 10, !dbg !7889
  %43 = load i64, i64* %flags, align 8, !dbg !7889
  %and61 = and i64 %43, 4, !dbg !7890
  %tobool62 = icmp ne i64 %and61, 0, !dbg !7890
  br i1 %tobool62, label %if.then63, label %if.end68, !dbg !7891

if.then63:                                        ; preds = %if.then55
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty, metadata !7892, metadata !DIExpression()), !dbg !7894
  %44 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !7895
  %call64 = call %struct.tty_struct* @tty_port_tty_get(%struct.tty_port* %44) #11, !dbg !7896
  store %struct.tty_struct* %call64, %struct.tty_struct** %tty, align 8, !dbg !7894
  %45 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !7897
  %tobool65 = icmp ne %struct.tty_struct* %45, null, !dbg !7897
  br i1 %tobool65, label %if.then66, label %if.end67, !dbg !7899

if.then66:                                        ; preds = %if.then63
  %46 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !7900
  call void @do_SAK(%struct.tty_struct* %46) #11, !dbg !7902
  %47 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !7903
  call void @tty_kref_put(%struct.tty_struct* %47) #11, !dbg !7904
  br label %if.end67, !dbg !7905

if.end67:                                         ; preds = %if.then66, %if.then63
  br label %if.end68, !dbg !7906

if.end68:                                         ; preds = %if.end67, %if.then55
  br label %if.end116, !dbg !7907

if.else69:                                        ; preds = %if.then51
  %48 = load i8, i8* %data, align 1, !dbg !7908
  %conv70 = zext i8 %48 to i32, !dbg !7908
  %and71 = and i32 %conv70, 2, !dbg !7910
  %tobool72 = icmp ne i32 %and71, 0, !dbg !7910
  br i1 %tobool72, label %if.then73, label %if.else80, !dbg !7911

if.then73:                                        ; preds = %if.else69
  %49 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !7912
  %50 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7914
  %call74 = call zeroext i8 @cyy_readb(%struct.cyclades_port* %50, i32 196) #11, !dbg !7915
  %call75 = call i32 @tty_insert_flip_char(%struct.tty_port* %49, i8 zeroext %call74, i8 signext 2) #11, !dbg !7916
  %51 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7917
  %icount76 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %51, i32 0, i32 36, !dbg !7918
  %rx77 = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %icount76, i32 0, i32 5, !dbg !7919
  %52 = load i32, i32* %rx77, align 4, !dbg !7920
  %inc78 = add i32 %52, 1, !dbg !7920
  store i32 %inc78, i32* %rx77, align 4, !dbg !7920
  %53 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7921
  %idle_stats = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %53, i32 0, i32 35, !dbg !7922
  %frame_errs = getelementptr inbounds %struct.cyclades_idle_stats, %struct.cyclades_idle_stats* %idle_stats, i32 0, i32 6, !dbg !7923
  %54 = load i64, i64* %frame_errs, align 8, !dbg !7924
  %inc79 = add i64 %54, 1, !dbg !7924
  store i64 %inc79, i64* %frame_errs, align 8, !dbg !7924
  br label %if.end115, !dbg !7925

if.else80:                                        ; preds = %if.else69
  %55 = load i8, i8* %data, align 1, !dbg !7926
  %conv81 = zext i8 %55 to i32, !dbg !7926
  %and82 = and i32 %conv81, 4, !dbg !7928
  %tobool83 = icmp ne i32 %and82, 0, !dbg !7928
  br i1 %tobool83, label %if.then84, label %if.else92, !dbg !7929

if.then84:                                        ; preds = %if.else80
  %56 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !7930
  %57 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7932
  %call85 = call zeroext i8 @cyy_readb(%struct.cyclades_port* %57, i32 196) #11, !dbg !7933
  %call86 = call i32 @tty_insert_flip_char(%struct.tty_port* %56, i8 zeroext %call85, i8 signext 3) #11, !dbg !7934
  %58 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7935
  %icount87 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %58, i32 0, i32 36, !dbg !7936
  %rx88 = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %icount87, i32 0, i32 5, !dbg !7937
  %59 = load i32, i32* %rx88, align 4, !dbg !7938
  %inc89 = add i32 %59, 1, !dbg !7938
  store i32 %inc89, i32* %rx88, align 4, !dbg !7938
  %60 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7939
  %idle_stats90 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %60, i32 0, i32 35, !dbg !7940
  %parity_errs = getelementptr inbounds %struct.cyclades_idle_stats, %struct.cyclades_idle_stats* %idle_stats90, i32 0, i32 7, !dbg !7941
  %61 = load i64, i64* %parity_errs, align 8, !dbg !7942
  %inc91 = add i64 %61, 1, !dbg !7942
  store i64 %inc91, i64* %parity_errs, align 8, !dbg !7942
  br label %if.end114, !dbg !7943

if.else92:                                        ; preds = %if.else80
  %62 = load i8, i8* %data, align 1, !dbg !7944
  %conv93 = zext i8 %62 to i32, !dbg !7944
  %and94 = and i32 %conv93, 1, !dbg !7946
  %tobool95 = icmp ne i32 %and94, 0, !dbg !7946
  br i1 %tobool95, label %if.then96, label %if.else108, !dbg !7947

if.then96:                                        ; preds = %if.else92
  %63 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !7948
  %call97 = call i32 @tty_insert_flip_char(%struct.tty_port* %63, i8 zeroext 0, i8 signext 4) #11, !dbg !7950
  %64 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7951
  %icount98 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %64, i32 0, i32 36, !dbg !7952
  %rx99 = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %icount98, i32 0, i32 5, !dbg !7953
  %65 = load i32, i32* %rx99, align 4, !dbg !7954
  %inc100 = add i32 %65, 1, !dbg !7954
  store i32 %inc100, i32* %rx99, align 4, !dbg !7954
  %66 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !7955
  %67 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7956
  %call101 = call zeroext i8 @cyy_readb(%struct.cyclades_port* %67, i32 196) #11, !dbg !7957
  %call102 = call i32 @tty_insert_flip_char(%struct.tty_port* %66, i8 zeroext %call101, i8 signext 2) #11, !dbg !7958
  %68 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7959
  %icount103 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %68, i32 0, i32 36, !dbg !7960
  %rx104 = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %icount103, i32 0, i32 5, !dbg !7961
  %69 = load i32, i32* %rx104, align 4, !dbg !7962
  %inc105 = add i32 %69, 1, !dbg !7962
  store i32 %inc105, i32* %rx104, align 4, !dbg !7962
  %70 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7963
  %idle_stats106 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %70, i32 0, i32 35, !dbg !7964
  %overruns = getelementptr inbounds %struct.cyclades_idle_stats, %struct.cyclades_idle_stats* %idle_stats106, i32 0, i32 5, !dbg !7965
  %71 = load i64, i64* %overruns, align 8, !dbg !7966
  %inc107 = add i64 %71, 1, !dbg !7966
  store i64 %inc107, i64* %overruns, align 8, !dbg !7966
  br label %if.end113, !dbg !7967

if.else108:                                       ; preds = %if.else92
  %72 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !7968
  %call109 = call i32 @tty_insert_flip_char(%struct.tty_port* %72, i8 zeroext 0, i8 signext 0) #11, !dbg !7970
  %73 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7971
  %icount110 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %73, i32 0, i32 36, !dbg !7972
  %rx111 = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %icount110, i32 0, i32 5, !dbg !7973
  %74 = load i32, i32* %rx111, align 4, !dbg !7974
  %inc112 = add i32 %74, 1, !dbg !7974
  store i32 %inc112, i32* %rx111, align 4, !dbg !7974
  br label %if.end113

if.end113:                                        ; preds = %if.else108, %if.then96
  br label %if.end114

if.end114:                                        ; preds = %if.end113, %if.then84
  br label %if.end115

if.end115:                                        ; preds = %if.end114, %if.then73
  br label %if.end116

if.end116:                                        ; preds = %if.end115, %if.end68
  br label %if.end122, !dbg !7975

if.else117:                                       ; preds = %if.then47
  %75 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !7976
  %call118 = call i32 @tty_insert_flip_char(%struct.tty_port* %75, i8 zeroext 0, i8 signext 0) #11, !dbg !7978
  %76 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7979
  %icount119 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %76, i32 0, i32 36, !dbg !7980
  %rx120 = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %icount119, i32 0, i32 5, !dbg !7981
  %77 = load i32, i32* %rx120, align 4, !dbg !7982
  %inc121 = add i32 %77, 1, !dbg !7982
  store i32 %inc121, i32* %rx120, align 4, !dbg !7982
  br label %if.end122

if.end122:                                        ; preds = %if.else117, %if.end116
  br label %if.end129, !dbg !7983

if.else123:                                       ; preds = %if.end44
  %78 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7984
  %icount124 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %78, i32 0, i32 36, !dbg !7986
  %buf_overrun = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %icount124, i32 0, i32 10, !dbg !7987
  %79 = load i32, i32* %buf_overrun, align 8, !dbg !7988
  %inc125 = add i32 %79, 1, !dbg !7988
  store i32 %inc125, i32* %buf_overrun, align 8, !dbg !7988
  %80 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7989
  %idle_stats126 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %80, i32 0, i32 35, !dbg !7990
  %overruns127 = getelementptr inbounds %struct.cyclades_idle_stats, %struct.cyclades_idle_stats* %idle_stats126, i32 0, i32 5, !dbg !7991
  %81 = load i64, i64* %overruns127, align 8, !dbg !7992
  %inc128 = add i64 %81, 1, !dbg !7992
  store i64 %inc128, i64* %overruns127, align 8, !dbg !7992
  br label %if.end129

if.end129:                                        ; preds = %if.else123, %if.end122
  br label %if.end143, !dbg !7993

if.else130:                                       ; preds = %entry
  %82 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !7994
  %call131 = call zeroext i8 @cyy_readb(%struct.cyclades_port* %82, i32 28) #11, !dbg !7996
  store i8 %call131, i8* %char_count, align 1, !dbg !7997
  %83 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !7998
  %84 = load i8, i8* %char_count, align 1, !dbg !7999
  %conv132 = zext i8 %84 to i64, !dbg !7999
  %call133 = call i32 @tty_buffer_request_room(%struct.tty_port* %83, i64 %conv132) #11, !dbg !8000
  store i32 %call133, i32* %len, align 4, !dbg !8001
  br label %while.cond, !dbg !8002

while.cond:                                       ; preds = %while.body, %if.else130
  %85 = load i32, i32* %len, align 4, !dbg !8003
  %dec = add i32 %85, -1, !dbg !8003
  store i32 %dec, i32* %len, align 4, !dbg !8003
  %tobool134 = icmp ne i32 %85, 0, !dbg !8002
  br i1 %tobool134, label %while.body, label %while.end, !dbg !8002

while.body:                                       ; preds = %while.cond
  %86 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8004
  %call135 = call zeroext i8 @cyy_readb(%struct.cyclades_port* %86, i32 196) #11, !dbg !8006
  store i8 %call135, i8* %data, align 1, !dbg !8007
  %87 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !8008
  %88 = load i8, i8* %data, align 1, !dbg !8009
  %call136 = call i32 @tty_insert_flip_char(%struct.tty_port* %87, i8 zeroext %88, i8 signext 0) #11, !dbg !8010
  %89 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8011
  %idle_stats137 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %89, i32 0, i32 35, !dbg !8012
  %recv_bytes = getelementptr inbounds %struct.cyclades_idle_stats, %struct.cyclades_idle_stats* %idle_stats137, i32 0, i32 3, !dbg !8013
  %90 = load i64, i64* %recv_bytes, align 8, !dbg !8014
  %inc138 = add i64 %90, 1, !dbg !8014
  store i64 %inc138, i64* %recv_bytes, align 8, !dbg !8014
  %91 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8015
  %icount139 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %91, i32 0, i32 36, !dbg !8016
  %rx140 = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %icount139, i32 0, i32 5, !dbg !8017
  %92 = load i32, i32* %rx140, align 4, !dbg !8018
  %inc141 = add i32 %92, 1, !dbg !8018
  store i32 %inc141, i32* %rx140, align 4, !dbg !8018
  br label %while.cond, !dbg !8002, !llvm.loop !8019

while.end:                                        ; preds = %while.cond
  %93 = load volatile i64, i64* @jiffies, align 8, !dbg !8021
  %94 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8022
  %idle_stats142 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %94, i32 0, i32 35, !dbg !8023
  %recv_idle = getelementptr inbounds %struct.cyclades_idle_stats, %struct.cyclades_idle_stats* %idle_stats142, i32 0, i32 1, !dbg !8024
  store i64 %93, i64* %recv_idle, align 8, !dbg !8025
  br label %if.end143

if.end143:                                        ; preds = %while.end, %if.end129
  %95 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !8026
  call void @tty_schedule_flip(%struct.tty_port* %95) #11, !dbg !8027
  %96 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8028
  %97 = load i8, i8* %save_xir, align 1, !dbg !8029
  %conv144 = zext i8 %97 to i32, !dbg !8029
  %and145 = and i32 %conv144, 63, !dbg !8030
  %conv146 = trunc i32 %and145 to i8, !dbg !8029
  call void @cyy_writeb(%struct.cyclades_port* %96, i32 214, i8 zeroext %conv146) #11, !dbg !8031
  %98 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8032
  %99 = load i8, i8* %save_car, align 1, !dbg !8033
  call void @cyy_writeb(%struct.cyclades_port* %98, i32 208, i8 zeroext %99) #11, !dbg !8034
  br label %return, !dbg !8035

return:                                           ; preds = %if.end143, %if.then41
  ret void, !dbg !8035
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cyy_chip_tx(%struct.cyclades_card* %cinfo, i32 %chip, i8* %base_addr) #4 !dbg !8036 {
entry:
  %cinfo.addr = alloca %struct.cyclades_card*, align 8
  %chip.addr = alloca i32, align 4
  %base_addr.addr = alloca i8*, align 8
  %info = alloca %struct.cyclades_port*, align 8
  %tty = alloca %struct.tty_struct*, align 8
  %char_count = alloca i32, align 4
  %index = alloca i32, align 4
  %save_xir = alloca i8, align 1
  %channel = alloca i8, align 1
  %save_car = alloca i8, align 1
  %outch = alloca i8, align 1
  store %struct.cyclades_card* %cinfo, %struct.cyclades_card** %cinfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %cinfo.addr, metadata !8039, metadata !DIExpression()), !dbg !8040
  store i32 %chip, i32* %chip.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %chip.addr, metadata !8041, metadata !DIExpression()), !dbg !8042
  store i8* %base_addr, i8** %base_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base_addr.addr, metadata !8043, metadata !DIExpression()), !dbg !8044
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info, metadata !8045, metadata !DIExpression()), !dbg !8046
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty, metadata !8047, metadata !DIExpression()), !dbg !8048
  call void @llvm.dbg.declare(metadata i32* %char_count, metadata !8049, metadata !DIExpression()), !dbg !8050
  call void @llvm.dbg.declare(metadata i32* %index, metadata !8051, metadata !DIExpression()), !dbg !8052
  %0 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo.addr, align 8, !dbg !8053
  %bus_index = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %0, i32 0, i32 7, !dbg !8054
  %1 = load i32, i32* %bus_index, align 8, !dbg !8054
  store i32 %1, i32* %index, align 4, !dbg !8052
  call void @llvm.dbg.declare(metadata i8* %save_xir, metadata !8055, metadata !DIExpression()), !dbg !8056
  call void @llvm.dbg.declare(metadata i8* %channel, metadata !8057, metadata !DIExpression()), !dbg !8058
  call void @llvm.dbg.declare(metadata i8* %save_car, metadata !8059, metadata !DIExpression()), !dbg !8060
  call void @llvm.dbg.declare(metadata i8* %outch, metadata !8061, metadata !DIExpression()), !dbg !8062
  %2 = load i8*, i8** %base_addr.addr, align 8, !dbg !8063
  %3 = load i32, i32* %index, align 4, !dbg !8064
  %shl = shl i32 212, %3, !dbg !8065
  %idx.ext = sext i32 %shl to i64, !dbg !8066
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !8066
  %call = call zeroext i8 @readb(i8* %add.ptr) #11, !dbg !8067
  store i8 %call, i8* %save_xir, align 1, !dbg !8068
  %4 = load i8, i8* %save_xir, align 1, !dbg !8069
  %conv = zext i8 %4 to i32, !dbg !8069
  %and = and i32 %conv, 3, !dbg !8070
  %conv1 = trunc i32 %and to i8, !dbg !8069
  store i8 %conv1, i8* %channel, align 1, !dbg !8071
  %5 = load i8*, i8** %base_addr.addr, align 8, !dbg !8072
  %6 = load i32, i32* %index, align 4, !dbg !8073
  %shl2 = shl i32 208, %6, !dbg !8074
  %idx.ext3 = sext i32 %shl2 to i64, !dbg !8075
  %add.ptr4 = getelementptr i8, i8* %5, i64 %idx.ext3, !dbg !8075
  %call5 = call zeroext i8 @readb(i8* %add.ptr4) #11, !dbg !8076
  store i8 %call5, i8* %save_car, align 1, !dbg !8077
  br label %do.body, !dbg !8078

do.body:                                          ; preds = %entry
  %7 = load i8, i8* %save_xir, align 1, !dbg !8079
  %8 = load i8*, i8** %base_addr.addr, align 8, !dbg !8079
  %9 = load i32, i32* %index, align 4, !dbg !8079
  %shl6 = shl i32 208, %9, !dbg !8079
  %idx.ext7 = sext i32 %shl6 to i64, !dbg !8079
  %add.ptr8 = getelementptr i8, i8* %8, i64 %idx.ext7, !dbg !8079
  call void @writeb(i8 zeroext %7, i8* %add.ptr8) #11, !dbg !8079
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8079, !srcloc !8081
  br label %do.end, !dbg !8079

do.end:                                           ; preds = %do.body
  %10 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo.addr, align 8, !dbg !8082
  %ports = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %10, i32 0, i32 11, !dbg !8083
  %11 = load %struct.cyclades_port*, %struct.cyclades_port** %ports, align 8, !dbg !8083
  %12 = load i8, i8* %channel, align 1, !dbg !8084
  %conv9 = zext i8 %12 to i32, !dbg !8084
  %13 = load i32, i32* %chip.addr, align 4, !dbg !8085
  %mul = mul i32 %13, 4, !dbg !8086
  %add = add i32 %conv9, %mul, !dbg !8087
  %idxprom = zext i32 %add to i64, !dbg !8082
  %arrayidx = getelementptr %struct.cyclades_port, %struct.cyclades_port* %11, i64 %idxprom, !dbg !8082
  store %struct.cyclades_port* %arrayidx, %struct.cyclades_port** %info, align 8, !dbg !8088
  %14 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8089
  %port = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %14, i32 0, i32 1, !dbg !8090
  %call10 = call %struct.tty_struct* @tty_port_tty_get(%struct.tty_port* %port) #11, !dbg !8091
  store %struct.tty_struct* %call10, %struct.tty_struct** %tty, align 8, !dbg !8092
  %15 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !8093
  %cmp = icmp eq %struct.tty_struct* %15, null, !dbg !8095
  br i1 %cmp, label %if.then, label %if.end, !dbg !8096

if.then:                                          ; preds = %do.end
  %16 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8097
  %17 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8099
  %call12 = call zeroext i8 @cyy_readb(%struct.cyclades_port* %17, i32 12) #11, !dbg !8100
  %conv13 = zext i8 %call12 to i32, !dbg !8100
  %and14 = and i32 %conv13, -5, !dbg !8101
  %conv15 = trunc i32 %and14 to i8, !dbg !8100
  call void @cyy_writeb(%struct.cyclades_port* %16, i32 12, i8 zeroext %conv15) #11, !dbg !8102
  br label %end, !dbg !8103

if.end:                                           ; preds = %do.end
  %18 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8104
  %xmit_fifo_size = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %18, i32 0, i32 10, !dbg !8105
  %19 = load i32, i32* %xmit_fifo_size, align 8, !dbg !8105
  store i32 %19, i32* %char_count, align 4, !dbg !8106
  %20 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8107
  %x_char = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %20, i32 0, i32 25, !dbg !8109
  %21 = load i8, i8* %x_char, align 4, !dbg !8109
  %tobool = icmp ne i8 %21, 0, !dbg !8107
  br i1 %tobool, label %if.then16, label %if.end19, !dbg !8110

if.then16:                                        ; preds = %if.end
  %22 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8111
  %x_char17 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %22, i32 0, i32 25, !dbg !8113
  %23 = load i8, i8* %x_char17, align 4, !dbg !8113
  store i8 %23, i8* %outch, align 1, !dbg !8114
  %24 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8115
  %25 = load i8, i8* %outch, align 1, !dbg !8116
  call void @cyy_writeb(%struct.cyclades_port* %24, i32 198, i8 zeroext %25) #11, !dbg !8117
  %26 = load i32, i32* %char_count, align 4, !dbg !8118
  %dec = add i32 %26, -1, !dbg !8118
  store i32 %dec, i32* %char_count, align 4, !dbg !8118
  %27 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8119
  %icount = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %27, i32 0, i32 36, !dbg !8120
  %tx = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %icount, i32 0, i32 4, !dbg !8121
  %28 = load i32, i32* %tx, align 8, !dbg !8122
  %inc = add i32 %28, 1, !dbg !8122
  store i32 %inc, i32* %tx, align 8, !dbg !8122
  %29 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8123
  %x_char18 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %29, i32 0, i32 25, !dbg !8124
  store i8 0, i8* %x_char18, align 4, !dbg !8125
  br label %if.end19, !dbg !8126

if.end19:                                         ; preds = %if.then16, %if.end
  %30 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8127
  %breakon = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %30, i32 0, i32 26, !dbg !8129
  %31 = load i32, i32* %breakon, align 8, !dbg !8129
  %tobool20 = icmp ne i32 %31, 0, !dbg !8127
  br i1 %tobool20, label %if.then22, label %lor.lhs.false, !dbg !8130

lor.lhs.false:                                    ; preds = %if.end19
  %32 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8131
  %breakoff = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %32, i32 0, i32 27, !dbg !8132
  %33 = load i32, i32* %breakoff, align 4, !dbg !8132
  %tobool21 = icmp ne i32 %33, 0, !dbg !8131
  br i1 %tobool21, label %if.then22, label %if.end34, !dbg !8133

if.then22:                                        ; preds = %lor.lhs.false, %if.end19
  %34 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8134
  %breakon23 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %34, i32 0, i32 26, !dbg !8137
  %35 = load i32, i32* %breakon23, align 8, !dbg !8137
  %tobool24 = icmp ne i32 %35, 0, !dbg !8134
  br i1 %tobool24, label %if.then25, label %if.end27, !dbg !8138

if.then25:                                        ; preds = %if.then22
  %36 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8139
  call void @cyy_writeb(%struct.cyclades_port* %36, i32 198, i8 zeroext 0) #11, !dbg !8141
  %37 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8142
  call void @cyy_writeb(%struct.cyclades_port* %37, i32 198, i8 zeroext -127) #11, !dbg !8143
  %38 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8144
  %breakon26 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %38, i32 0, i32 26, !dbg !8145
  store i32 0, i32* %breakon26, align 8, !dbg !8146
  %39 = load i32, i32* %char_count, align 4, !dbg !8147
  %sub = sub i32 %39, 2, !dbg !8147
  store i32 %sub, i32* %char_count, align 4, !dbg !8147
  br label %if.end27, !dbg !8148

if.end27:                                         ; preds = %if.then25, %if.then22
  %40 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8149
  %breakoff28 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %40, i32 0, i32 27, !dbg !8151
  %41 = load i32, i32* %breakoff28, align 4, !dbg !8151
  %tobool29 = icmp ne i32 %41, 0, !dbg !8149
  br i1 %tobool29, label %if.then30, label %if.end33, !dbg !8152

if.then30:                                        ; preds = %if.end27
  %42 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8153
  call void @cyy_writeb(%struct.cyclades_port* %42, i32 198, i8 zeroext 0) #11, !dbg !8155
  %43 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8156
  call void @cyy_writeb(%struct.cyclades_port* %43, i32 198, i8 zeroext -125) #11, !dbg !8157
  %44 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8158
  %breakoff31 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %44, i32 0, i32 27, !dbg !8159
  store i32 0, i32* %breakoff31, align 4, !dbg !8160
  %45 = load i32, i32* %char_count, align 4, !dbg !8161
  %sub32 = sub i32 %45, 2, !dbg !8161
  store i32 %sub32, i32* %char_count, align 4, !dbg !8161
  br label %if.end33, !dbg !8162

if.end33:                                         ; preds = %if.then30, %if.end27
  br label %if.end34, !dbg !8163

if.end34:                                         ; preds = %if.end33, %lor.lhs.false
  br label %while.cond, !dbg !8164

while.cond:                                       ; preds = %if.end108, %if.end34
  %46 = load i32, i32* %char_count, align 4, !dbg !8165
  %dec35 = add i32 %46, -1, !dbg !8165
  store i32 %dec35, i32* %char_count, align 4, !dbg !8165
  %cmp36 = icmp sgt i32 %46, 0, !dbg !8166
  br i1 %cmp36, label %while.body, label %while.end, !dbg !8164

while.body:                                       ; preds = %while.cond
  %47 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8167
  %xmit_cnt = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %47, i32 0, i32 30, !dbg !8170
  %48 = load i32, i32* %xmit_cnt, align 8, !dbg !8170
  %tobool38 = icmp ne i32 %48, 0, !dbg !8167
  br i1 %tobool38, label %if.end54, label %if.then39, !dbg !8171

if.then39:                                        ; preds = %while.body
  %49 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8172
  %call40 = call zeroext i8 @cyy_readb(%struct.cyclades_port* %49, i32 12) #11, !dbg !8175
  %conv41 = zext i8 %call40 to i32, !dbg !8175
  %and42 = and i32 %conv41, 2, !dbg !8176
  %tobool43 = icmp ne i32 %and42, 0, !dbg !8176
  br i1 %tobool43, label %if.then44, label %if.else, !dbg !8177

if.then44:                                        ; preds = %if.then39
  %50 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8178
  %51 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8180
  %call45 = call zeroext i8 @cyy_readb(%struct.cyclades_port* %51, i32 12) #11, !dbg !8181
  %conv46 = zext i8 %call45 to i32, !dbg !8181
  %and47 = and i32 %conv46, -3, !dbg !8182
  %conv48 = trunc i32 %and47 to i8, !dbg !8181
  call void @cyy_writeb(%struct.cyclades_port* %50, i32 12, i8 zeroext %conv48) #11, !dbg !8183
  br label %if.end53, !dbg !8184

if.else:                                          ; preds = %if.then39
  %52 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8185
  %53 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8187
  %call49 = call zeroext i8 @cyy_readb(%struct.cyclades_port* %53, i32 12) #11, !dbg !8188
  %conv50 = zext i8 %call49 to i32, !dbg !8188
  %and51 = and i32 %conv50, -5, !dbg !8189
  %or = or i32 2, %and51, !dbg !8190
  %conv52 = trunc i32 %or to i8, !dbg !8191
  call void @cyy_writeb(%struct.cyclades_port* %52, i32 12, i8 zeroext %conv52) #11, !dbg !8192
  br label %if.end53

if.end53:                                         ; preds = %if.else, %if.then44
  br label %done, !dbg !8193

if.end54:                                         ; preds = %while.body
  %54 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8194
  %port55 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %54, i32 0, i32 1, !dbg !8196
  %xmit_buf = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port55, i32 0, i32 15, !dbg !8197
  %55 = load i8*, i8** %xmit_buf, align 8, !dbg !8197
  %cmp56 = icmp eq i8* %55, null, !dbg !8198
  br i1 %cmp56, label %if.then58, label %if.end63, !dbg !8199

if.then58:                                        ; preds = %if.end54
  %56 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8200
  %57 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8202
  %call59 = call zeroext i8 @cyy_readb(%struct.cyclades_port* %57, i32 12) #11, !dbg !8203
  %conv60 = zext i8 %call59 to i32, !dbg !8203
  %and61 = and i32 %conv60, -5, !dbg !8204
  %conv62 = trunc i32 %and61 to i8, !dbg !8203
  call void @cyy_writeb(%struct.cyclades_port* %56, i32 12, i8 zeroext %conv62) #11, !dbg !8205
  br label %done, !dbg !8206

if.end63:                                         ; preds = %if.end54
  %58 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !8207
  %stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %58, i32 0, i32 24, !dbg !8209
  %bf.load = load i8, i8* %stopped, align 4, !dbg !8209
  %bf.clear = and i8 %bf.load, 1, !dbg !8209
  %bf.cast = zext i8 %bf.clear to i64, !dbg !8209
  %conv64 = trunc i64 %bf.cast to i32, !dbg !8207
  %tobool65 = icmp ne i32 %conv64, 0, !dbg !8207
  br i1 %tobool65, label %if.then68, label %lor.lhs.false66, !dbg !8210

lor.lhs.false66:                                  ; preds = %if.end63
  %59 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !8211
  %hw_stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %59, i32 0, i32 26, !dbg !8212
  %60 = load i32, i32* %hw_stopped, align 8, !dbg !8212
  %tobool67 = icmp ne i32 %60, 0, !dbg !8211
  br i1 %tobool67, label %if.then68, label %if.end73, !dbg !8213

if.then68:                                        ; preds = %lor.lhs.false66, %if.end63
  %61 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8214
  %62 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8216
  %call69 = call zeroext i8 @cyy_readb(%struct.cyclades_port* %62, i32 12) #11, !dbg !8217
  %conv70 = zext i8 %call69 to i32, !dbg !8217
  %and71 = and i32 %conv70, -5, !dbg !8218
  %conv72 = trunc i32 %and71 to i8, !dbg !8217
  call void @cyy_writeb(%struct.cyclades_port* %61, i32 12, i8 zeroext %conv72) #11, !dbg !8219
  br label %done, !dbg !8220

if.end73:                                         ; preds = %lor.lhs.false66
  %63 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8221
  %port74 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %63, i32 0, i32 1, !dbg !8222
  %xmit_buf75 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port74, i32 0, i32 15, !dbg !8223
  %64 = load i8*, i8** %xmit_buf75, align 8, !dbg !8223
  %65 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8224
  %xmit_tail = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %65, i32 0, i32 29, !dbg !8225
  %66 = load i32, i32* %xmit_tail, align 4, !dbg !8225
  %idxprom76 = sext i32 %66 to i64, !dbg !8221
  %arrayidx77 = getelementptr i8, i8* %64, i64 %idxprom76, !dbg !8221
  %67 = load i8, i8* %arrayidx77, align 1, !dbg !8221
  store i8 %67, i8* %outch, align 1, !dbg !8226
  %68 = load i8, i8* %outch, align 1, !dbg !8227
  %tobool78 = icmp ne i8 %68, 0, !dbg !8227
  br i1 %tobool78, label %if.then79, label %if.else91, !dbg !8229

if.then79:                                        ; preds = %if.end73
  %69 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8230
  %xmit_cnt80 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %69, i32 0, i32 30, !dbg !8232
  %70 = load i32, i32* %xmit_cnt80, align 8, !dbg !8233
  %dec81 = add i32 %70, -1, !dbg !8233
  store i32 %dec81, i32* %xmit_cnt80, align 8, !dbg !8233
  %71 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8234
  %xmit_tail82 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %71, i32 0, i32 29, !dbg !8235
  %72 = load i32, i32* %xmit_tail82, align 4, !dbg !8235
  %add83 = add i32 %72, 1, !dbg !8236
  %conv84 = sext i32 %add83 to i64, !dbg !8237
  %and85 = and i64 %conv84, 4095, !dbg !8238
  %conv86 = trunc i64 %and85 to i32, !dbg !8237
  %73 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8239
  %xmit_tail87 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %73, i32 0, i32 29, !dbg !8240
  store i32 %conv86, i32* %xmit_tail87, align 4, !dbg !8241
  %74 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8242
  %75 = load i8, i8* %outch, align 1, !dbg !8243
  call void @cyy_writeb(%struct.cyclades_port* %74, i32 198, i8 zeroext %75) #11, !dbg !8244
  %76 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8245
  %icount88 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %76, i32 0, i32 36, !dbg !8246
  %tx89 = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %icount88, i32 0, i32 4, !dbg !8247
  %77 = load i32, i32* %tx89, align 8, !dbg !8248
  %inc90 = add i32 %77, 1, !dbg !8248
  store i32 %inc90, i32* %tx89, align 8, !dbg !8248
  br label %if.end108, !dbg !8249

if.else91:                                        ; preds = %if.end73
  %78 = load i32, i32* %char_count, align 4, !dbg !8250
  %cmp92 = icmp sgt i32 %78, 1, !dbg !8253
  br i1 %cmp92, label %if.then94, label %if.end107, !dbg !8254

if.then94:                                        ; preds = %if.else91
  %79 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8255
  %xmit_cnt95 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %79, i32 0, i32 30, !dbg !8257
  %80 = load i32, i32* %xmit_cnt95, align 8, !dbg !8258
  %dec96 = add i32 %80, -1, !dbg !8258
  store i32 %dec96, i32* %xmit_cnt95, align 8, !dbg !8258
  %81 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8259
  %xmit_tail97 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %81, i32 0, i32 29, !dbg !8260
  %82 = load i32, i32* %xmit_tail97, align 4, !dbg !8260
  %add98 = add i32 %82, 1, !dbg !8261
  %conv99 = sext i32 %add98 to i64, !dbg !8262
  %and100 = and i64 %conv99, 4095, !dbg !8263
  %conv101 = trunc i64 %and100 to i32, !dbg !8262
  %83 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8264
  %xmit_tail102 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %83, i32 0, i32 29, !dbg !8265
  store i32 %conv101, i32* %xmit_tail102, align 4, !dbg !8266
  %84 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8267
  %85 = load i8, i8* %outch, align 1, !dbg !8268
  call void @cyy_writeb(%struct.cyclades_port* %84, i32 198, i8 zeroext %85) #11, !dbg !8269
  %86 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8270
  call void @cyy_writeb(%struct.cyclades_port* %86, i32 198, i8 zeroext 0) #11, !dbg !8271
  %87 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8272
  %icount103 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %87, i32 0, i32 36, !dbg !8273
  %tx104 = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %icount103, i32 0, i32 4, !dbg !8274
  %88 = load i32, i32* %tx104, align 8, !dbg !8275
  %inc105 = add i32 %88, 1, !dbg !8275
  store i32 %inc105, i32* %tx104, align 8, !dbg !8275
  %89 = load i32, i32* %char_count, align 4, !dbg !8276
  %dec106 = add i32 %89, -1, !dbg !8276
  store i32 %dec106, i32* %char_count, align 4, !dbg !8276
  br label %if.end107, !dbg !8277

if.end107:                                        ; preds = %if.then94, %if.else91
  br label %if.end108

if.end108:                                        ; preds = %if.end107, %if.then79
  br label %while.cond, !dbg !8164, !llvm.loop !8278

while.end:                                        ; preds = %while.cond
  br label %done, !dbg !8164

done:                                             ; preds = %while.end, %if.then68, %if.then58, %if.end53
  call void @llvm.dbg.label(metadata !8280), !dbg !8281
  %90 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !8282
  call void @tty_wakeup(%struct.tty_struct* %90) #11, !dbg !8283
  %91 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !8284
  call void @tty_kref_put(%struct.tty_struct* %91) #11, !dbg !8285
  br label %end, !dbg !8285

end:                                              ; preds = %done, %if.then
  call void @llvm.dbg.label(metadata !8286), !dbg !8287
  %92 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8288
  %93 = load i8, i8* %save_xir, align 1, !dbg !8289
  %conv109 = zext i8 %93 to i32, !dbg !8289
  %and110 = and i32 %conv109, 63, !dbg !8290
  %conv111 = trunc i32 %and110 to i8, !dbg !8289
  call void @cyy_writeb(%struct.cyclades_port* %92, i32 212, i8 zeroext %conv111) #11, !dbg !8291
  %94 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8292
  %95 = load i8, i8* %save_car, align 1, !dbg !8293
  call void @cyy_writeb(%struct.cyclades_port* %94, i32 208, i8 zeroext %95) #11, !dbg !8294
  ret void, !dbg !8295
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cyy_chip_modem(%struct.cyclades_card* %cinfo, i32 %chip, i8* %base_addr) #4 !dbg !8296 {
entry:
  %cinfo.addr = alloca %struct.cyclades_card*, align 8
  %chip.addr = alloca i32, align 4
  %base_addr.addr = alloca i8*, align 8
  %info = alloca %struct.cyclades_port*, align 8
  %tty = alloca %struct.tty_struct*, align 8
  %index = alloca i32, align 4
  %save_xir = alloca i8, align 1
  %channel = alloca i8, align 1
  %save_car = alloca i8, align 1
  %mdm_change = alloca i8, align 1
  %mdm_status = alloca i8, align 1
  store %struct.cyclades_card* %cinfo, %struct.cyclades_card** %cinfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %cinfo.addr, metadata !8297, metadata !DIExpression()), !dbg !8298
  store i32 %chip, i32* %chip.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %chip.addr, metadata !8299, metadata !DIExpression()), !dbg !8300
  store i8* %base_addr, i8** %base_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base_addr.addr, metadata !8301, metadata !DIExpression()), !dbg !8302
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info, metadata !8303, metadata !DIExpression()), !dbg !8304
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty, metadata !8305, metadata !DIExpression()), !dbg !8306
  call void @llvm.dbg.declare(metadata i32* %index, metadata !8307, metadata !DIExpression()), !dbg !8308
  %0 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo.addr, align 8, !dbg !8309
  %bus_index = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %0, i32 0, i32 7, !dbg !8310
  %1 = load i32, i32* %bus_index, align 8, !dbg !8310
  store i32 %1, i32* %index, align 4, !dbg !8308
  call void @llvm.dbg.declare(metadata i8* %save_xir, metadata !8311, metadata !DIExpression()), !dbg !8312
  call void @llvm.dbg.declare(metadata i8* %channel, metadata !8313, metadata !DIExpression()), !dbg !8314
  call void @llvm.dbg.declare(metadata i8* %save_car, metadata !8315, metadata !DIExpression()), !dbg !8316
  call void @llvm.dbg.declare(metadata i8* %mdm_change, metadata !8317, metadata !DIExpression()), !dbg !8318
  call void @llvm.dbg.declare(metadata i8* %mdm_status, metadata !8319, metadata !DIExpression()), !dbg !8320
  %2 = load i8*, i8** %base_addr.addr, align 8, !dbg !8321
  %3 = load i32, i32* %index, align 4, !dbg !8322
  %shl = shl i32 210, %3, !dbg !8323
  %idx.ext = sext i32 %shl to i64, !dbg !8324
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !8324
  %call = call zeroext i8 @readb(i8* %add.ptr) #11, !dbg !8325
  store i8 %call, i8* %save_xir, align 1, !dbg !8326
  %4 = load i8, i8* %save_xir, align 1, !dbg !8327
  %conv = zext i8 %4 to i32, !dbg !8327
  %and = and i32 %conv, 3, !dbg !8328
  %conv1 = trunc i32 %and to i8, !dbg !8327
  store i8 %conv1, i8* %channel, align 1, !dbg !8329
  %5 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo.addr, align 8, !dbg !8330
  %ports = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %5, i32 0, i32 11, !dbg !8331
  %6 = load %struct.cyclades_port*, %struct.cyclades_port** %ports, align 8, !dbg !8331
  %7 = load i8, i8* %channel, align 1, !dbg !8332
  %conv2 = zext i8 %7 to i32, !dbg !8332
  %8 = load i32, i32* %chip.addr, align 4, !dbg !8333
  %mul = mul i32 %8, 4, !dbg !8334
  %add = add i32 %conv2, %mul, !dbg !8335
  %idxprom = sext i32 %add to i64, !dbg !8330
  %arrayidx = getelementptr %struct.cyclades_port, %struct.cyclades_port* %6, i64 %idxprom, !dbg !8330
  store %struct.cyclades_port* %arrayidx, %struct.cyclades_port** %info, align 8, !dbg !8336
  %9 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8337
  %call3 = call zeroext i8 @cyy_readb(%struct.cyclades_port* %9, i32 208) #11, !dbg !8338
  store i8 %call3, i8* %save_car, align 1, !dbg !8339
  %10 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8340
  %11 = load i8, i8* %save_xir, align 1, !dbg !8341
  call void @cyy_writeb(%struct.cyclades_port* %10, i32 208, i8 zeroext %11) #11, !dbg !8342
  %12 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8343
  %call4 = call zeroext i8 @cyy_readb(%struct.cyclades_port* %12, i32 152) #11, !dbg !8344
  store i8 %call4, i8* %mdm_change, align 1, !dbg !8345
  %13 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8346
  %call5 = call zeroext i8 @cyy_readb(%struct.cyclades_port* %13, i32 216) #11, !dbg !8347
  store i8 %call5, i8* %mdm_status, align 1, !dbg !8348
  %14 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8349
  %port = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %14, i32 0, i32 1, !dbg !8350
  %call6 = call %struct.tty_struct* @tty_port_tty_get(%struct.tty_port* %port) #11, !dbg !8351
  store %struct.tty_struct* %call6, %struct.tty_struct** %tty, align 8, !dbg !8352
  %15 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !8353
  %tobool = icmp ne %struct.tty_struct* %15, null, !dbg !8353
  br i1 %tobool, label %if.end, label %if.then, !dbg !8355

if.then:                                          ; preds = %entry
  br label %end, !dbg !8356

if.end:                                           ; preds = %entry
  %16 = load i8, i8* %mdm_change, align 1, !dbg !8357
  %conv7 = zext i8 %16 to i32, !dbg !8357
  %and8 = and i32 %conv7, 240, !dbg !8359
  %tobool9 = icmp ne i32 %and8, 0, !dbg !8359
  br i1 %tobool9, label %if.then10, label %if.end38, !dbg !8360

if.then10:                                        ; preds = %if.end
  %17 = load i8, i8* %mdm_change, align 1, !dbg !8361
  %conv11 = zext i8 %17 to i32, !dbg !8361
  %and12 = and i32 %conv11, 16, !dbg !8364
  %tobool13 = icmp ne i32 %and12, 0, !dbg !8364
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !8365

if.then14:                                        ; preds = %if.then10
  %18 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8366
  %icount = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %18, i32 0, i32 36, !dbg !8367
  %dcd = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %icount, i32 0, i32 3, !dbg !8368
  %19 = load i32, i32* %dcd, align 4, !dbg !8369
  %inc = add i32 %19, 1, !dbg !8369
  store i32 %inc, i32* %dcd, align 4, !dbg !8369
  br label %if.end15, !dbg !8366

if.end15:                                         ; preds = %if.then14, %if.then10
  %20 = load i8, i8* %mdm_change, align 1, !dbg !8370
  %conv16 = zext i8 %20 to i32, !dbg !8370
  %and17 = and i32 %conv16, 64, !dbg !8372
  %tobool18 = icmp ne i32 %and17, 0, !dbg !8372
  br i1 %tobool18, label %if.then19, label %if.end22, !dbg !8373

if.then19:                                        ; preds = %if.end15
  %21 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8374
  %icount20 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %21, i32 0, i32 36, !dbg !8375
  %cts = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %icount20, i32 0, i32 0, !dbg !8376
  %22 = load i32, i32* %cts, align 8, !dbg !8377
  %inc21 = add i32 %22, 1, !dbg !8377
  store i32 %inc21, i32* %cts, align 8, !dbg !8377
  br label %if.end22, !dbg !8374

if.end22:                                         ; preds = %if.then19, %if.end15
  %23 = load i8, i8* %mdm_change, align 1, !dbg !8378
  %conv23 = zext i8 %23 to i32, !dbg !8378
  %and24 = and i32 %conv23, 128, !dbg !8380
  %tobool25 = icmp ne i32 %and24, 0, !dbg !8380
  br i1 %tobool25, label %if.then26, label %if.end29, !dbg !8381

if.then26:                                        ; preds = %if.end22
  %24 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8382
  %icount27 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %24, i32 0, i32 36, !dbg !8383
  %dsr = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %icount27, i32 0, i32 1, !dbg !8384
  %25 = load i32, i32* %dsr, align 4, !dbg !8385
  %inc28 = add i32 %25, 1, !dbg !8385
  store i32 %inc28, i32* %dsr, align 4, !dbg !8385
  br label %if.end29, !dbg !8382

if.end29:                                         ; preds = %if.then26, %if.end22
  %26 = load i8, i8* %mdm_change, align 1, !dbg !8386
  %conv30 = zext i8 %26 to i32, !dbg !8386
  %and31 = and i32 %conv30, 32, !dbg !8388
  %tobool32 = icmp ne i32 %and31, 0, !dbg !8388
  br i1 %tobool32, label %if.then33, label %if.end36, !dbg !8389

if.then33:                                        ; preds = %if.end29
  %27 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8390
  %icount34 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %27, i32 0, i32 36, !dbg !8391
  %rng = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %icount34, i32 0, i32 2, !dbg !8392
  %28 = load i32, i32* %rng, align 8, !dbg !8393
  %inc35 = add i32 %28, 1, !dbg !8393
  store i32 %inc35, i32* %rng, align 8, !dbg !8393
  br label %if.end36, !dbg !8390

if.end36:                                         ; preds = %if.then33, %if.end29
  %29 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8394
  %port37 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %29, i32 0, i32 1, !dbg !8394
  %delta_msr_wait = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port37, i32 0, i32 9, !dbg !8394
  call void @__wake_up(%struct.wait_queue_head* %delta_msr_wait, i32 1, i32 1, i8* null) #11, !dbg !8394
  br label %if.end38, !dbg !8395

if.end38:                                         ; preds = %if.end36, %if.end
  %30 = load i8, i8* %mdm_change, align 1, !dbg !8396
  %conv39 = zext i8 %30 to i32, !dbg !8396
  %and40 = and i32 %conv39, 16, !dbg !8398
  %tobool41 = icmp ne i32 %and40, 0, !dbg !8398
  br i1 %tobool41, label %land.lhs.true, label %if.end52, !dbg !8399

land.lhs.true:                                    ; preds = %if.end38
  %31 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8400
  %port42 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %31, i32 0, i32 1, !dbg !8401
  %call43 = call zeroext i1 @tty_port_check_carrier(%struct.tty_port* %port42) #11, !dbg !8402
  br i1 %call43, label %if.then45, label %if.end52, !dbg !8403

if.then45:                                        ; preds = %land.lhs.true
  %32 = load i8, i8* %mdm_status, align 1, !dbg !8404
  %conv46 = zext i8 %32 to i32, !dbg !8404
  %and47 = and i32 %conv46, 16, !dbg !8407
  %tobool48 = icmp ne i32 %and47, 0, !dbg !8407
  br i1 %tobool48, label %if.then49, label %if.else, !dbg !8408

if.then49:                                        ; preds = %if.then45
  %33 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8409
  %port50 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %33, i32 0, i32 1, !dbg !8409
  %open_wait = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port50, i32 0, i32 8, !dbg !8409
  call void @__wake_up(%struct.wait_queue_head* %open_wait, i32 1, i32 1, i8* null) #11, !dbg !8409
  br label %if.end51, !dbg !8409

if.else:                                          ; preds = %if.then45
  %34 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !8410
  call void @tty_hangup(%struct.tty_struct* %34) #11, !dbg !8411
  br label %if.end51

if.end51:                                         ; preds = %if.else, %if.then49
  br label %if.end52, !dbg !8412

if.end52:                                         ; preds = %if.end51, %land.lhs.true, %if.end38
  %35 = load i8, i8* %mdm_change, align 1, !dbg !8413
  %conv53 = zext i8 %35 to i32, !dbg !8413
  %and54 = and i32 %conv53, 64, !dbg !8415
  %tobool55 = icmp ne i32 %and54, 0, !dbg !8415
  br i1 %tobool55, label %land.lhs.true56, label %if.end84, !dbg !8416

land.lhs.true56:                                  ; preds = %if.end52
  %36 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8417
  %port57 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %36, i32 0, i32 1, !dbg !8418
  %call58 = call zeroext i1 @tty_port_cts_enabled(%struct.tty_port* %port57) #11, !dbg !8419
  br i1 %call58, label %if.then60, label %if.end84, !dbg !8420

if.then60:                                        ; preds = %land.lhs.true56
  %37 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !8421
  %hw_stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %37, i32 0, i32 26, !dbg !8424
  %38 = load i32, i32* %hw_stopped, align 8, !dbg !8424
  %tobool61 = icmp ne i32 %38, 0, !dbg !8421
  br i1 %tobool61, label %if.then62, label %if.else72, !dbg !8425

if.then62:                                        ; preds = %if.then60
  %39 = load i8, i8* %mdm_status, align 1, !dbg !8426
  %conv63 = zext i8 %39 to i32, !dbg !8426
  %and64 = and i32 %conv63, 64, !dbg !8429
  %tobool65 = icmp ne i32 %and64, 0, !dbg !8429
  br i1 %tobool65, label %if.then66, label %if.end71, !dbg !8430

if.then66:                                        ; preds = %if.then62
  %40 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !8431
  %hw_stopped67 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %40, i32 0, i32 26, !dbg !8433
  store i32 0, i32* %hw_stopped67, align 8, !dbg !8434
  %41 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8435
  %42 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8436
  %call68 = call zeroext i8 @cyy_readb(%struct.cyclades_port* %42, i32 12) #11, !dbg !8437
  %conv69 = zext i8 %call68 to i32, !dbg !8437
  %or = or i32 %conv69, 4, !dbg !8438
  %conv70 = trunc i32 %or to i8, !dbg !8437
  call void @cyy_writeb(%struct.cyclades_port* %41, i32 12, i8 zeroext %conv70) #11, !dbg !8439
  %43 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !8440
  call void @tty_wakeup(%struct.tty_struct* %43) #11, !dbg !8441
  br label %if.end71, !dbg !8442

if.end71:                                         ; preds = %if.then66, %if.then62
  br label %if.end83, !dbg !8443

if.else72:                                        ; preds = %if.then60
  %44 = load i8, i8* %mdm_status, align 1, !dbg !8444
  %conv73 = zext i8 %44 to i32, !dbg !8444
  %and74 = and i32 %conv73, 64, !dbg !8447
  %tobool75 = icmp ne i32 %and74, 0, !dbg !8447
  br i1 %tobool75, label %if.end82, label %if.then76, !dbg !8448

if.then76:                                        ; preds = %if.else72
  %45 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !8449
  %hw_stopped77 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %45, i32 0, i32 26, !dbg !8451
  store i32 1, i32* %hw_stopped77, align 8, !dbg !8452
  %46 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8453
  %47 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8454
  %call78 = call zeroext i8 @cyy_readb(%struct.cyclades_port* %47, i32 12) #11, !dbg !8455
  %conv79 = zext i8 %call78 to i32, !dbg !8455
  %and80 = and i32 %conv79, -5, !dbg !8456
  %conv81 = trunc i32 %and80 to i8, !dbg !8455
  call void @cyy_writeb(%struct.cyclades_port* %46, i32 12, i8 zeroext %conv81) #11, !dbg !8457
  br label %if.end82, !dbg !8458

if.end82:                                         ; preds = %if.then76, %if.else72
  br label %if.end83

if.end83:                                         ; preds = %if.end82, %if.end71
  br label %if.end84, !dbg !8459

if.end84:                                         ; preds = %if.end83, %land.lhs.true56, %if.end52
  %48 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !8460
  call void @tty_kref_put(%struct.tty_struct* %48) #11, !dbg !8461
  br label %end, !dbg !8461

end:                                              ; preds = %if.end84, %if.then
  call void @llvm.dbg.label(metadata !8462), !dbg !8463
  %49 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8464
  %50 = load i8, i8* %save_xir, align 1, !dbg !8465
  %conv85 = zext i8 %50 to i32, !dbg !8465
  %and86 = and i32 %conv85, 63, !dbg !8466
  %conv87 = trunc i32 %and86 to i8, !dbg !8465
  call void @cyy_writeb(%struct.cyclades_port* %49, i32 210, i8 zeroext %conv87) #11, !dbg !8467
  %51 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8468
  %52 = load i8, i8* %save_car, align 1, !dbg !8469
  call void @cyy_writeb(%struct.cyclades_port* %51, i32 208, i8 zeroext %52) #11, !dbg !8470
  ret void, !dbg !8471
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @cyy_readb(%struct.cyclades_port* %port, i32 %reg) #4 !dbg !8472 {
entry:
  %port.addr = alloca %struct.cyclades_port*, align 8
  %reg.addr = alloca i32, align 4
  %card = alloca %struct.cyclades_card*, align 8
  store %struct.cyclades_port* %port, %struct.cyclades_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %port.addr, metadata !8475, metadata !DIExpression()), !dbg !8476
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !8477, metadata !DIExpression()), !dbg !8478
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %card, metadata !8479, metadata !DIExpression()), !dbg !8480
  %0 = load %struct.cyclades_port*, %struct.cyclades_port** %port.addr, align 8, !dbg !8481
  %card1 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %0, i32 0, i32 2, !dbg !8482
  %1 = load %struct.cyclades_card*, %struct.cyclades_card** %card1, align 8, !dbg !8482
  store %struct.cyclades_card* %1, %struct.cyclades_card** %card, align 8, !dbg !8480
  %2 = load %struct.cyclades_port*, %struct.cyclades_port** %port.addr, align 8, !dbg !8483
  %u = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %2, i32 0, i32 3, !dbg !8484
  %cyy = bitcast %union.anon.67* %u to %struct.anon.68*, !dbg !8485
  %base_addr = getelementptr inbounds %struct.anon.68, %struct.anon.68* %cyy, i32 0, i32 0, !dbg !8486
  %3 = load i8*, i8** %base_addr, align 8, !dbg !8486
  %4 = load i32, i32* %reg.addr, align 4, !dbg !8487
  %5 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !8488
  %bus_index = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %5, i32 0, i32 7, !dbg !8489
  %6 = load i32, i32* %bus_index, align 8, !dbg !8489
  %shl = shl i32 %4, %6, !dbg !8490
  %idx.ext = zext i32 %shl to i64, !dbg !8491
  %add.ptr = getelementptr i8, i8* %3, i64 %idx.ext, !dbg !8491
  %call = call zeroext i8 @readb(i8* %add.ptr) #11, !dbg !8492
  ret i8 %call, !dbg !8493
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cyy_writeb(%struct.cyclades_port* %port, i32 %reg, i8 zeroext %val) #4 !dbg !8494 {
entry:
  %port.addr = alloca %struct.cyclades_port*, align 8
  %reg.addr = alloca i32, align 4
  %val.addr = alloca i8, align 1
  %card = alloca %struct.cyclades_card*, align 8
  store %struct.cyclades_port* %port, %struct.cyclades_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %port.addr, metadata !8497, metadata !DIExpression()), !dbg !8498
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !8499, metadata !DIExpression()), !dbg !8500
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !8501, metadata !DIExpression()), !dbg !8502
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %card, metadata !8503, metadata !DIExpression()), !dbg !8504
  %0 = load %struct.cyclades_port*, %struct.cyclades_port** %port.addr, align 8, !dbg !8505
  %card1 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %0, i32 0, i32 2, !dbg !8506
  %1 = load %struct.cyclades_card*, %struct.cyclades_card** %card1, align 8, !dbg !8506
  store %struct.cyclades_card* %1, %struct.cyclades_card** %card, align 8, !dbg !8504
  br label %do.body, !dbg !8507

do.body:                                          ; preds = %entry
  %2 = load i8, i8* %val.addr, align 1, !dbg !8508
  %3 = load %struct.cyclades_port*, %struct.cyclades_port** %port.addr, align 8, !dbg !8508
  %u = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %3, i32 0, i32 3, !dbg !8508
  %cyy = bitcast %union.anon.67* %u to %struct.anon.68*, !dbg !8508
  %base_addr = getelementptr inbounds %struct.anon.68, %struct.anon.68* %cyy, i32 0, i32 0, !dbg !8508
  %4 = load i8*, i8** %base_addr, align 8, !dbg !8508
  %5 = load i32, i32* %reg.addr, align 4, !dbg !8508
  %6 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !8508
  %bus_index = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %6, i32 0, i32 7, !dbg !8508
  %7 = load i32, i32* %bus_index, align 8, !dbg !8508
  %shl = shl i32 %5, %7, !dbg !8508
  %idx.ext = zext i32 %shl to i64, !dbg !8508
  %add.ptr = getelementptr i8, i8* %4, i64 %idx.ext, !dbg !8508
  call void @writeb(i8 zeroext %2, i8* %add.ptr) #11, !dbg !8508
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8508, !srcloc !8510
  br label %do.end, !dbg !8508

do.end:                                           ; preds = %do.body
  ret void, !dbg !8511
}

; Function Attrs: noredzone
declare dso_local void @do_SAK(%struct.tty_struct*) #2

; Function Attrs: noredzone
declare dso_local void @tty_hangup(%struct.tty_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @tty_port_cts_enabled(%struct.tty_port* %port) #4 !dbg !8512 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !8513, metadata !DIExpression()), !dbg !8514
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !8515
  %iflags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %0, i32 0, i32 11, !dbg !8516
  %call = call zeroext i1 @test_bit(i64 3, i64* %iflags) #11, !dbg !8517
  ret i1 %call, !dbg !8518
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #4 !dbg !8519 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !8522, metadata !DIExpression()), !dbg !8523
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8524, metadata !DIExpression()), !dbg !8525
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8526, metadata !DIExpression()), !dbg !8527
  %0 = load i64, i64* %n.addr, align 8, !dbg !8528
  %1 = load i64, i64* %size.addr, align 8, !dbg !8529
  %2 = load i32, i32* %flags.addr, align 4, !dbg !8530
  %or = or i32 %2, 256, !dbg !8531
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #11, !dbg !8532
  ret i8* %call, !dbg !8533
}

; Function Attrs: noredzone
declare dso_local void @tty_port_init(%struct.tty_port*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_completion(%struct.completion* %x) #4 !dbg !4787 {
entry:
  %x.addr = alloca %struct.completion*, align 8
  store %struct.completion* %x, %struct.completion** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.completion** %x.addr, metadata !8534, metadata !DIExpression()), !dbg !8535
  %0 = load %struct.completion*, %struct.completion** %x.addr, align 8, !dbg !8536
  %done = getelementptr inbounds %struct.completion, %struct.completion* %0, i32 0, i32 0, !dbg !8537
  store i32 0, i32* %done, align 8, !dbg !8538
  br label %do.body, !dbg !8539

do.body:                                          ; preds = %entry
  %1 = load %struct.completion*, %struct.completion** %x.addr, align 8, !dbg !8540
  %wait = getelementptr inbounds %struct.completion, %struct.completion* %1, i32 0, i32 1, !dbg !8540
  call void @__init_swait_queue_head(%struct.swait_queue_head* %wait, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.36, i64 0, i64 0), %struct.lock_class_key* @__init_completion.__key) #11, !dbg !8540
  br label %do.end, !dbg !8540

do.end:                                           ; preds = %do.body
  ret void, !dbg !8542
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @timer_pending(%struct.timer_list* %timer) #4 !dbg !8543 {
entry:
  %timer.addr = alloca %struct.timer_list*, align 8
  store %struct.timer_list* %timer, %struct.timer_list** %timer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %timer.addr, metadata !8548, metadata !DIExpression()), !dbg !8549
  %0 = load %struct.timer_list*, %struct.timer_list** %timer.addr, align 8, !dbg !8550
  %entry1 = getelementptr inbounds %struct.timer_list, %struct.timer_list* %0, i32 0, i32 0, !dbg !8551
  %call = call i32 @hlist_unhashed_lockless(%struct.hlist_node* %entry1) #11, !dbg !8552
  %tobool = icmp ne i32 %call, 0, !dbg !8553
  %lnot = xor i1 %tobool, true, !dbg !8553
  %lnot.ext = zext i1 %lnot to i32, !dbg !8553
  ret i32 %lnot.ext, !dbg !8554
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #4 !dbg !8555 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !8556, metadata !DIExpression()), !dbg !8560
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !8569, metadata !DIExpression()), !dbg !8570
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !8571, metadata !DIExpression()), !dbg !8572
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !8573, metadata !DIExpression()), !dbg !8574
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !8575, metadata !DIExpression()), !dbg !8579
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !8581, metadata !DIExpression()), !dbg !8585
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !8587, metadata !DIExpression()), !dbg !8591
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !8596, metadata !DIExpression()), !dbg !8597
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !8598, metadata !DIExpression()), !dbg !8599
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8600, metadata !DIExpression()), !dbg !8601
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !8602, metadata !DIExpression()), !dbg !8603
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !8604, metadata !DIExpression()), !dbg !8605
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8606, metadata !DIExpression()), !dbg !8607
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !8608, metadata !DIExpression()), !dbg !8609
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !8610, metadata !DIExpression()), !dbg !8611
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !8612, metadata !DIExpression()), !dbg !8613
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8614, metadata !DIExpression()), !dbg !8615
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8616, metadata !DIExpression()), !dbg !8617
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !8618, metadata !DIExpression()), !dbg !8619
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !8620, metadata !DIExpression()), !dbg !8623
  %0 = load i64, i64* %n.addr, align 8, !dbg !8623
  store i64 %0, i64* %__a, align 8, !dbg !8623
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !8624, metadata !DIExpression()), !dbg !8623
  %1 = load i64, i64* %size.addr, align 8, !dbg !8623
  store i64 %1, i64* %__b, align 8, !dbg !8623
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !8625, metadata !DIExpression()), !dbg !8623
  store i64* %bytes, i64** %__d, align 8, !dbg !8623
  %cmp = icmp eq i64* %__a, %__b, !dbg !8623
  %conv = zext i1 %cmp to i32, !dbg !8623
  %2 = load i64*, i64** %__d, align 8, !dbg !8623
  %cmp1 = icmp eq i64* %__a, %2, !dbg !8623
  %conv2 = zext i1 %cmp1 to i32, !dbg !8623
  %3 = load i64, i64* %__a, align 8, !dbg !8623
  %4 = load i64, i64* %__b, align 8, !dbg !8623
  %5 = load i64*, i64** %__d, align 8, !dbg !8623
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !8623
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !8623
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !8623
  store i64 %8, i64* %5, align 8, !dbg !8623
  %frombool = zext i1 %7 to i8, !dbg !8623
  store i8 %frombool, i8* %tmp, align 1, !dbg !8623
  %9 = load i8, i8* %tmp, align 1, !dbg !8623
  %tobool = trunc i8 %9 to i1, !dbg !8623
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #11, !dbg !8627
  %lnot = xor i1 %call, true, !dbg !8627
  %lnot3 = xor i1 %lnot, true, !dbg !8627
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !8627
  %conv4 = sext i32 %lnot.ext to i64, !dbg !8627
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !8627
  br i1 %tobool5, label %if.then, label %if.end, !dbg !8628

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !8629
  br label %return, !dbg !8629

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !8630
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !8631
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !8632

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !8633
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !8634
  br i1 %13, label %if.then6, label %if.end8, !dbg !8635

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !8636
  %15 = load i32, i32* %flags.addr, align 4, !dbg !8637
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !8638
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #10, !dbg !8639
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !8640

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !8641
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !8642
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !8643

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !8644
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !8645
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !8646
  %call.i.i = call i32 @get_order(i64 %21) #14, !dbg !8647
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !8605
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !8648
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !8649
  %24 = load i32, i32* %order.i.i, align 4, !dbg !8650
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !8651
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !8652
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !8653
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #13, !dbg !8654
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !8654
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !8654
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !8654
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !8654
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !8655
  br label %kmalloc.exit, !dbg !8655

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !8656
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8657
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !8657
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !8659

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !8660
  br label %kmalloc_index.exit.i, !dbg !8660

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8661
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !8663
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !8664

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8665
  br label %kmalloc_index.exit.i, !dbg !8665

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8666
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !8668
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !8669

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8670
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !8671
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !8672

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !8673
  br label %kmalloc_index.exit.i, !dbg !8673

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8674
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !8676
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !8677

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8678
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !8679
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !8680

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !8681
  br label %kmalloc_index.exit.i, !dbg !8681

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8682
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !8684
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !8685

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8686
  br label %kmalloc_index.exit.i, !dbg !8686

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8687
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !8689
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !8690

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !8691
  br label %kmalloc_index.exit.i, !dbg !8691

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8692
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !8694
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !8695

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !8696
  br label %kmalloc_index.exit.i, !dbg !8696

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8697
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !8699
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !8700

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !8701
  br label %kmalloc_index.exit.i, !dbg !8701

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8702
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !8704
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !8705

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !8706
  br label %kmalloc_index.exit.i, !dbg !8706

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8707
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !8709
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !8710

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !8711
  br label %kmalloc_index.exit.i, !dbg !8711

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8712
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !8714
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !8715

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !8716
  br label %kmalloc_index.exit.i, !dbg !8716

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8717
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !8719
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !8720

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !8721
  br label %kmalloc_index.exit.i, !dbg !8721

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8722
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !8724
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !8725

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !8726
  br label %kmalloc_index.exit.i, !dbg !8726

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8727
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !8729
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !8730

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !8731
  br label %kmalloc_index.exit.i, !dbg !8731

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8732
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !8734
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !8735

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !8736
  br label %kmalloc_index.exit.i, !dbg !8736

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8737
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !8739
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !8740

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !8741
  br label %kmalloc_index.exit.i, !dbg !8741

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8742
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !8744
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !8745

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !8746
  br label %kmalloc_index.exit.i, !dbg !8746

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8747
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !8749
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !8750

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !8751
  br label %kmalloc_index.exit.i, !dbg !8751

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8752
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !8754
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !8755

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !8756
  br label %kmalloc_index.exit.i, !dbg !8756

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8757
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !8759
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !8760

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !8761
  br label %kmalloc_index.exit.i, !dbg !8761

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8762
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !8764
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !8765

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !8766
  br label %kmalloc_index.exit.i, !dbg !8766

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8767
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !8769
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !8770

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !8771
  br label %kmalloc_index.exit.i, !dbg !8771

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8772
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !8774
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !8775

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !8776
  br label %kmalloc_index.exit.i, !dbg !8776

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8777
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !8779
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !8780

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !8781
  br label %kmalloc_index.exit.i, !dbg !8781

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8782
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !8784
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !8785

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !8786
  br label %kmalloc_index.exit.i, !dbg !8786

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8787
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !8789
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !8790

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !8791
  br label %kmalloc_index.exit.i, !dbg !8791

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8792
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !8794
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !8795

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !8796
  br label %kmalloc_index.exit.i, !dbg !8796

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8797
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !8799
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !8800

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !8801
  br label %kmalloc_index.exit.i, !dbg !8801

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.35, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !8802, !srcloc !8805
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 232) #10, !dbg !8806, !srcloc !8809
  unreachable, !dbg !8810

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !8811
  store i32 %59, i32* %index.i, align 4, !dbg !8812
  %60 = load i32, i32* %index.i, align 4, !dbg !8813
  %tobool.i = icmp ne i32 %60, 0, !dbg !8813
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !8815

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !8816
  br label %kmalloc.exit, !dbg !8816

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !8817
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8818
  %and.i.i = and i32 %62, 17, !dbg !8818
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !8818
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !8818
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !8818
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !8818
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !8820

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !8821
  br label %kmalloc_type.exit.i, !dbg !8821

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8822
  %and2.i.i = and i32 %63, 1, !dbg !8823
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !8822
  %64 = zext i1 %tobool3.i.i to i64, !dbg !8822
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !8822
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !8824
  br label %kmalloc_type.exit.i, !dbg !8824

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !8825
  %idxprom.i = zext i32 %65 to i64, !dbg !8826
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !8826
  %66 = load i32, i32* %index.i, align 4, !dbg !8827
  %idxprom6.i = zext i32 %66 to i64, !dbg !8826
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !8826
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !8826
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !8828
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !8829
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8830
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8831
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #13, !dbg !8832
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !8832
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !8832
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !8832
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !8832
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !8574
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8833
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !8834
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !8835
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8836
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #13, !dbg !8837
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !8838
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !8839
  store i8* %76, i8** %retval.i, align 8, !dbg !8840
  br label %kmalloc.exit, !dbg !8840

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !8841
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !8842
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #13, !dbg !8843
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !8843
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !8843
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !8843
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !8843
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !8844
  br label %kmalloc.exit, !dbg !8844

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !8845
  store i8* %79, i8** %retval, align 8, !dbg !8846
  br label %return, !dbg !8846

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !8847
  %81 = load i32, i32* %flags.addr, align 4, !dbg !8848
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #11, !dbg !8849
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !8849
  %maskedptr = and i64 %ptrint, 7, !dbg !8849
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !8849
  call void @llvm.assume(i1 %maskcond), !dbg !8849
  store i8* %call9, i8** %retval, align 8, !dbg !8850
  br label %return, !dbg !8850

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !8851
  ret i8* %82, !dbg !8851
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #4 !dbg !8852 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !8856, metadata !DIExpression()), !dbg !8857
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !8858
  %tobool = trunc i8 %0 to i1, !dbg !8858
  %lnot = xor i1 %tobool, true, !dbg !8858
  %lnot1 = xor i1 %lnot, true, !dbg !8858
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8858
  %conv = sext i32 %lnot.ext to i64, !dbg !8858
  %tobool2 = icmp ne i64 %conv, 0, !dbg !8858
  ret i1 %tobool2, !dbg !8859
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #7

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #8 !dbg !8860 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !8864, metadata !DIExpression()), !dbg !8868
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !8870, metadata !DIExpression()), !dbg !8871
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8872, metadata !DIExpression()), !dbg !8873
  %0 = load i64, i64* %size.addr, align 8, !dbg !8874
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !8876
  br i1 %1, label %if.then, label %if.end447, !dbg !8877

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !8878
  %tobool = icmp ne i64 %2, 0, !dbg !8878
  br i1 %tobool, label %if.end, label %if.then1, !dbg !8881

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !8882
  br label %return, !dbg !8882

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !8883
  %cmp = icmp ult i64 %3, 4096, !dbg !8885
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !8886

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8887
  br label %return, !dbg !8887

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub = sub i64 %4, 1, !dbg !8888
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !8888
  br i1 %5, label %cond.true, label %cond.false442, !dbg !8888

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub4 = sub i64 %6, 1, !dbg !8888
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !8888
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !8888

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub6 = sub i64 %8, 1, !dbg !8888
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !8888
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !8888

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !8888

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub9 = sub i64 %9, 1, !dbg !8888
  %and = and i64 %sub9, -9223372036854775808, !dbg !8888
  %tobool10 = icmp ne i64 %and, 0, !dbg !8888
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !8888

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !8888

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub13 = sub i64 %10, 1, !dbg !8888
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !8888
  %tobool15 = icmp ne i64 %and14, 0, !dbg !8888
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !8888

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !8888

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub18 = sub i64 %11, 1, !dbg !8888
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !8888
  %tobool20 = icmp ne i64 %and19, 0, !dbg !8888
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !8888

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !8888

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub23 = sub i64 %12, 1, !dbg !8888
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !8888
  %tobool25 = icmp ne i64 %and24, 0, !dbg !8888
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !8888

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !8888

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub28 = sub i64 %13, 1, !dbg !8888
  %and29 = and i64 %sub28, 576460752303423488, !dbg !8888
  %tobool30 = icmp ne i64 %and29, 0, !dbg !8888
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !8888

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !8888

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub33 = sub i64 %14, 1, !dbg !8888
  %and34 = and i64 %sub33, 288230376151711744, !dbg !8888
  %tobool35 = icmp ne i64 %and34, 0, !dbg !8888
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !8888

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !8888

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub38 = sub i64 %15, 1, !dbg !8888
  %and39 = and i64 %sub38, 144115188075855872, !dbg !8888
  %tobool40 = icmp ne i64 %and39, 0, !dbg !8888
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !8888

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !8888

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub43 = sub i64 %16, 1, !dbg !8888
  %and44 = and i64 %sub43, 72057594037927936, !dbg !8888
  %tobool45 = icmp ne i64 %and44, 0, !dbg !8888
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !8888

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !8888

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub48 = sub i64 %17, 1, !dbg !8888
  %and49 = and i64 %sub48, 36028797018963968, !dbg !8888
  %tobool50 = icmp ne i64 %and49, 0, !dbg !8888
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !8888

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !8888

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub53 = sub i64 %18, 1, !dbg !8888
  %and54 = and i64 %sub53, 18014398509481984, !dbg !8888
  %tobool55 = icmp ne i64 %and54, 0, !dbg !8888
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !8888

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !8888

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub58 = sub i64 %19, 1, !dbg !8888
  %and59 = and i64 %sub58, 9007199254740992, !dbg !8888
  %tobool60 = icmp ne i64 %and59, 0, !dbg !8888
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !8888

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !8888

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub63 = sub i64 %20, 1, !dbg !8888
  %and64 = and i64 %sub63, 4503599627370496, !dbg !8888
  %tobool65 = icmp ne i64 %and64, 0, !dbg !8888
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !8888

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !8888

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub68 = sub i64 %21, 1, !dbg !8888
  %and69 = and i64 %sub68, 2251799813685248, !dbg !8888
  %tobool70 = icmp ne i64 %and69, 0, !dbg !8888
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !8888

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !8888

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub73 = sub i64 %22, 1, !dbg !8888
  %and74 = and i64 %sub73, 1125899906842624, !dbg !8888
  %tobool75 = icmp ne i64 %and74, 0, !dbg !8888
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !8888

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !8888

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub78 = sub i64 %23, 1, !dbg !8888
  %and79 = and i64 %sub78, 562949953421312, !dbg !8888
  %tobool80 = icmp ne i64 %and79, 0, !dbg !8888
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !8888

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !8888

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub83 = sub i64 %24, 1, !dbg !8888
  %and84 = and i64 %sub83, 281474976710656, !dbg !8888
  %tobool85 = icmp ne i64 %and84, 0, !dbg !8888
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !8888

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !8888

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub88 = sub i64 %25, 1, !dbg !8888
  %and89 = and i64 %sub88, 140737488355328, !dbg !8888
  %tobool90 = icmp ne i64 %and89, 0, !dbg !8888
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !8888

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !8888

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub93 = sub i64 %26, 1, !dbg !8888
  %and94 = and i64 %sub93, 70368744177664, !dbg !8888
  %tobool95 = icmp ne i64 %and94, 0, !dbg !8888
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !8888

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !8888

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub98 = sub i64 %27, 1, !dbg !8888
  %and99 = and i64 %sub98, 35184372088832, !dbg !8888
  %tobool100 = icmp ne i64 %and99, 0, !dbg !8888
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !8888

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !8888

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub103 = sub i64 %28, 1, !dbg !8888
  %and104 = and i64 %sub103, 17592186044416, !dbg !8888
  %tobool105 = icmp ne i64 %and104, 0, !dbg !8888
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !8888

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !8888

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub108 = sub i64 %29, 1, !dbg !8888
  %and109 = and i64 %sub108, 8796093022208, !dbg !8888
  %tobool110 = icmp ne i64 %and109, 0, !dbg !8888
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !8888

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !8888

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub113 = sub i64 %30, 1, !dbg !8888
  %and114 = and i64 %sub113, 4398046511104, !dbg !8888
  %tobool115 = icmp ne i64 %and114, 0, !dbg !8888
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !8888

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !8888

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub118 = sub i64 %31, 1, !dbg !8888
  %and119 = and i64 %sub118, 2199023255552, !dbg !8888
  %tobool120 = icmp ne i64 %and119, 0, !dbg !8888
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !8888

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !8888

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub123 = sub i64 %32, 1, !dbg !8888
  %and124 = and i64 %sub123, 1099511627776, !dbg !8888
  %tobool125 = icmp ne i64 %and124, 0, !dbg !8888
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !8888

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !8888

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub128 = sub i64 %33, 1, !dbg !8888
  %and129 = and i64 %sub128, 549755813888, !dbg !8888
  %tobool130 = icmp ne i64 %and129, 0, !dbg !8888
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !8888

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !8888

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub133 = sub i64 %34, 1, !dbg !8888
  %and134 = and i64 %sub133, 274877906944, !dbg !8888
  %tobool135 = icmp ne i64 %and134, 0, !dbg !8888
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !8888

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !8888

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub138 = sub i64 %35, 1, !dbg !8888
  %and139 = and i64 %sub138, 137438953472, !dbg !8888
  %tobool140 = icmp ne i64 %and139, 0, !dbg !8888
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !8888

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !8888

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub143 = sub i64 %36, 1, !dbg !8888
  %and144 = and i64 %sub143, 68719476736, !dbg !8888
  %tobool145 = icmp ne i64 %and144, 0, !dbg !8888
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !8888

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !8888

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub148 = sub i64 %37, 1, !dbg !8888
  %and149 = and i64 %sub148, 34359738368, !dbg !8888
  %tobool150 = icmp ne i64 %and149, 0, !dbg !8888
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !8888

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !8888

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub153 = sub i64 %38, 1, !dbg !8888
  %and154 = and i64 %sub153, 17179869184, !dbg !8888
  %tobool155 = icmp ne i64 %and154, 0, !dbg !8888
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !8888

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !8888

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub158 = sub i64 %39, 1, !dbg !8888
  %and159 = and i64 %sub158, 8589934592, !dbg !8888
  %tobool160 = icmp ne i64 %and159, 0, !dbg !8888
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !8888

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !8888

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub163 = sub i64 %40, 1, !dbg !8888
  %and164 = and i64 %sub163, 4294967296, !dbg !8888
  %tobool165 = icmp ne i64 %and164, 0, !dbg !8888
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !8888

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !8888

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub168 = sub i64 %41, 1, !dbg !8888
  %and169 = and i64 %sub168, 2147483648, !dbg !8888
  %tobool170 = icmp ne i64 %and169, 0, !dbg !8888
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !8888

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !8888

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub173 = sub i64 %42, 1, !dbg !8888
  %and174 = and i64 %sub173, 1073741824, !dbg !8888
  %tobool175 = icmp ne i64 %and174, 0, !dbg !8888
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !8888

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !8888

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub178 = sub i64 %43, 1, !dbg !8888
  %and179 = and i64 %sub178, 536870912, !dbg !8888
  %tobool180 = icmp ne i64 %and179, 0, !dbg !8888
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !8888

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !8888

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub183 = sub i64 %44, 1, !dbg !8888
  %and184 = and i64 %sub183, 268435456, !dbg !8888
  %tobool185 = icmp ne i64 %and184, 0, !dbg !8888
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !8888

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !8888

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub188 = sub i64 %45, 1, !dbg !8888
  %and189 = and i64 %sub188, 134217728, !dbg !8888
  %tobool190 = icmp ne i64 %and189, 0, !dbg !8888
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !8888

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !8888

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub193 = sub i64 %46, 1, !dbg !8888
  %and194 = and i64 %sub193, 67108864, !dbg !8888
  %tobool195 = icmp ne i64 %and194, 0, !dbg !8888
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !8888

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !8888

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub198 = sub i64 %47, 1, !dbg !8888
  %and199 = and i64 %sub198, 33554432, !dbg !8888
  %tobool200 = icmp ne i64 %and199, 0, !dbg !8888
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !8888

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !8888

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub203 = sub i64 %48, 1, !dbg !8888
  %and204 = and i64 %sub203, 16777216, !dbg !8888
  %tobool205 = icmp ne i64 %and204, 0, !dbg !8888
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !8888

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !8888

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub208 = sub i64 %49, 1, !dbg !8888
  %and209 = and i64 %sub208, 8388608, !dbg !8888
  %tobool210 = icmp ne i64 %and209, 0, !dbg !8888
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !8888

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !8888

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub213 = sub i64 %50, 1, !dbg !8888
  %and214 = and i64 %sub213, 4194304, !dbg !8888
  %tobool215 = icmp ne i64 %and214, 0, !dbg !8888
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !8888

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !8888

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub218 = sub i64 %51, 1, !dbg !8888
  %and219 = and i64 %sub218, 2097152, !dbg !8888
  %tobool220 = icmp ne i64 %and219, 0, !dbg !8888
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !8888

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !8888

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub223 = sub i64 %52, 1, !dbg !8888
  %and224 = and i64 %sub223, 1048576, !dbg !8888
  %tobool225 = icmp ne i64 %and224, 0, !dbg !8888
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !8888

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !8888

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub228 = sub i64 %53, 1, !dbg !8888
  %and229 = and i64 %sub228, 524288, !dbg !8888
  %tobool230 = icmp ne i64 %and229, 0, !dbg !8888
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !8888

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !8888

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub233 = sub i64 %54, 1, !dbg !8888
  %and234 = and i64 %sub233, 262144, !dbg !8888
  %tobool235 = icmp ne i64 %and234, 0, !dbg !8888
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !8888

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !8888

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub238 = sub i64 %55, 1, !dbg !8888
  %and239 = and i64 %sub238, 131072, !dbg !8888
  %tobool240 = icmp ne i64 %and239, 0, !dbg !8888
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !8888

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !8888

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub243 = sub i64 %56, 1, !dbg !8888
  %and244 = and i64 %sub243, 65536, !dbg !8888
  %tobool245 = icmp ne i64 %and244, 0, !dbg !8888
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !8888

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !8888

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub248 = sub i64 %57, 1, !dbg !8888
  %and249 = and i64 %sub248, 32768, !dbg !8888
  %tobool250 = icmp ne i64 %and249, 0, !dbg !8888
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !8888

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !8888

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub253 = sub i64 %58, 1, !dbg !8888
  %and254 = and i64 %sub253, 16384, !dbg !8888
  %tobool255 = icmp ne i64 %and254, 0, !dbg !8888
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !8888

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !8888

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub258 = sub i64 %59, 1, !dbg !8888
  %and259 = and i64 %sub258, 8192, !dbg !8888
  %tobool260 = icmp ne i64 %and259, 0, !dbg !8888
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !8888

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !8888

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub263 = sub i64 %60, 1, !dbg !8888
  %and264 = and i64 %sub263, 4096, !dbg !8888
  %tobool265 = icmp ne i64 %and264, 0, !dbg !8888
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !8888

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !8888

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub268 = sub i64 %61, 1, !dbg !8888
  %and269 = and i64 %sub268, 2048, !dbg !8888
  %tobool270 = icmp ne i64 %and269, 0, !dbg !8888
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !8888

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !8888

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub273 = sub i64 %62, 1, !dbg !8888
  %and274 = and i64 %sub273, 1024, !dbg !8888
  %tobool275 = icmp ne i64 %and274, 0, !dbg !8888
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !8888

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !8888

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub278 = sub i64 %63, 1, !dbg !8888
  %and279 = and i64 %sub278, 512, !dbg !8888
  %tobool280 = icmp ne i64 %and279, 0, !dbg !8888
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !8888

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !8888

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub283 = sub i64 %64, 1, !dbg !8888
  %and284 = and i64 %sub283, 256, !dbg !8888
  %tobool285 = icmp ne i64 %and284, 0, !dbg !8888
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !8888

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !8888

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub288 = sub i64 %65, 1, !dbg !8888
  %and289 = and i64 %sub288, 128, !dbg !8888
  %tobool290 = icmp ne i64 %and289, 0, !dbg !8888
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !8888

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !8888

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub293 = sub i64 %66, 1, !dbg !8888
  %and294 = and i64 %sub293, 64, !dbg !8888
  %tobool295 = icmp ne i64 %and294, 0, !dbg !8888
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !8888

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !8888

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub298 = sub i64 %67, 1, !dbg !8888
  %and299 = and i64 %sub298, 32, !dbg !8888
  %tobool300 = icmp ne i64 %and299, 0, !dbg !8888
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !8888

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !8888

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub303 = sub i64 %68, 1, !dbg !8888
  %and304 = and i64 %sub303, 16, !dbg !8888
  %tobool305 = icmp ne i64 %and304, 0, !dbg !8888
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !8888

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !8888

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub308 = sub i64 %69, 1, !dbg !8888
  %and309 = and i64 %sub308, 8, !dbg !8888
  %tobool310 = icmp ne i64 %and309, 0, !dbg !8888
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !8888

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !8888

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub313 = sub i64 %70, 1, !dbg !8888
  %and314 = and i64 %sub313, 4, !dbg !8888
  %tobool315 = icmp ne i64 %and314, 0, !dbg !8888
  %71 = zext i1 %tobool315 to i64, !dbg !8888
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !8888
  br label %cond.end, !dbg !8888

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !8888
  br label %cond.end317, !dbg !8888

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !8888
  br label %cond.end319, !dbg !8888

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !8888
  br label %cond.end321, !dbg !8888

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !8888
  br label %cond.end323, !dbg !8888

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !8888
  br label %cond.end325, !dbg !8888

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !8888
  br label %cond.end327, !dbg !8888

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !8888
  br label %cond.end329, !dbg !8888

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !8888
  br label %cond.end331, !dbg !8888

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !8888
  br label %cond.end333, !dbg !8888

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !8888
  br label %cond.end335, !dbg !8888

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !8888
  br label %cond.end337, !dbg !8888

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !8888
  br label %cond.end339, !dbg !8888

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !8888
  br label %cond.end341, !dbg !8888

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !8888
  br label %cond.end343, !dbg !8888

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !8888
  br label %cond.end345, !dbg !8888

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !8888
  br label %cond.end347, !dbg !8888

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !8888
  br label %cond.end349, !dbg !8888

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !8888
  br label %cond.end351, !dbg !8888

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !8888
  br label %cond.end353, !dbg !8888

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !8888
  br label %cond.end355, !dbg !8888

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !8888
  br label %cond.end357, !dbg !8888

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !8888
  br label %cond.end359, !dbg !8888

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !8888
  br label %cond.end361, !dbg !8888

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !8888
  br label %cond.end363, !dbg !8888

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !8888
  br label %cond.end365, !dbg !8888

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !8888
  br label %cond.end367, !dbg !8888

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !8888
  br label %cond.end369, !dbg !8888

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !8888
  br label %cond.end371, !dbg !8888

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !8888
  br label %cond.end373, !dbg !8888

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !8888
  br label %cond.end375, !dbg !8888

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !8888
  br label %cond.end377, !dbg !8888

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !8888
  br label %cond.end379, !dbg !8888

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !8888
  br label %cond.end381, !dbg !8888

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !8888
  br label %cond.end383, !dbg !8888

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !8888
  br label %cond.end385, !dbg !8888

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !8888
  br label %cond.end387, !dbg !8888

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !8888
  br label %cond.end389, !dbg !8888

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !8888
  br label %cond.end391, !dbg !8888

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !8888
  br label %cond.end393, !dbg !8888

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !8888
  br label %cond.end395, !dbg !8888

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !8888
  br label %cond.end397, !dbg !8888

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !8888
  br label %cond.end399, !dbg !8888

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !8888
  br label %cond.end401, !dbg !8888

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !8888
  br label %cond.end403, !dbg !8888

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !8888
  br label %cond.end405, !dbg !8888

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !8888
  br label %cond.end407, !dbg !8888

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !8888
  br label %cond.end409, !dbg !8888

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !8888
  br label %cond.end411, !dbg !8888

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !8888
  br label %cond.end413, !dbg !8888

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !8888
  br label %cond.end415, !dbg !8888

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !8888
  br label %cond.end417, !dbg !8888

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !8888
  br label %cond.end419, !dbg !8888

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !8888
  br label %cond.end421, !dbg !8888

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !8888
  br label %cond.end423, !dbg !8888

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !8888
  br label %cond.end425, !dbg !8888

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !8888
  br label %cond.end427, !dbg !8888

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !8888
  br label %cond.end429, !dbg !8888

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !8888
  br label %cond.end431, !dbg !8888

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !8888
  br label %cond.end433, !dbg !8888

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !8888
  br label %cond.end435, !dbg !8888

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !8888
  br label %cond.end437, !dbg !8888

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !8888
  br label %cond.end440, !dbg !8888

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !8888

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !8888
  br label %cond.end444, !dbg !8888

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !8888
  %sub443 = sub i64 %72, 1, !dbg !8888
  %call = call i32 @__ilog2_u64(i64 %sub443) #14, !dbg !8888
  br label %cond.end444, !dbg !8888

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !8888
  %sub446 = sub i32 %cond445, 12, !dbg !8889
  %add = add i32 %sub446, 1, !dbg !8890
  store i32 %add, i32* %retval, align 4, !dbg !8891
  br label %return, !dbg !8891

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !8892
  %dec = add i64 %73, -1, !dbg !8892
  store i64 %dec, i64* %size.addr, align 8, !dbg !8892
  %74 = load i64, i64* %size.addr, align 8, !dbg !8893
  %shr = lshr i64 %74, 12, !dbg !8893
  store i64 %shr, i64* %size.addr, align 8, !dbg !8893
  %75 = load i64, i64* %size.addr, align 8, !dbg !8894
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !8871
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !8895
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !8896
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #9, !dbg !8895, !srcloc !8897
  store i32 %78, i32* %bitpos.i, align 4, !dbg !8895
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !8898
  %add.i = add i32 %79, 1, !dbg !8899
  store i32 %add.i, i32* %retval, align 4, !dbg !8900
  br label %return, !dbg !8900

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !8901
  ret i32 %80, !dbg !8901
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #8 !dbg !8902 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !8864, metadata !DIExpression()), !dbg !8906
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !8870, metadata !DIExpression()), !dbg !8908
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !8909, metadata !DIExpression()), !dbg !8910
  %0 = load i64, i64* %n.addr, align 8, !dbg !8911
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !8908
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !8912
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !8913
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #9, !dbg !8912, !srcloc !8897
  store i32 %3, i32* %bitpos.i, align 4, !dbg !8912
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !8914
  %add.i = add i32 %4, 1, !dbg !8915
  %sub = sub i32 %add.i, 1, !dbg !8916
  ret i32 %sub, !dbg !8917
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #4 !dbg !8918 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !8922, metadata !DIExpression()), !dbg !8923
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !8924, metadata !DIExpression()), !dbg !8925
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8926, metadata !DIExpression()), !dbg !8927
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8928, metadata !DIExpression()), !dbg !8929
  %0 = load i8*, i8** %object.addr, align 8, !dbg !8930
  ret i8* %0, !dbg !8931
}

; Function Attrs: noredzone
declare dso_local void @__init_swait_queue_head(%struct.swait_queue_head*, i8*, %struct.lock_class_key*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cyz_carrier_raised(%struct.tty_port* %port) #4 !dbg !8932 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  %info = alloca %struct.cyclades_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.cyclades_port*, align 8
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !8933, metadata !DIExpression()), !dbg !8934
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info, metadata !8935, metadata !DIExpression()), !dbg !8936
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8937, metadata !DIExpression()), !dbg !8939
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !8939
  %1 = bitcast %struct.tty_port* %0 to i8*, !dbg !8939
  store i8* %1, i8** %__mptr, align 8, !dbg !8939
  br label %do.body, !dbg !8939

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8940

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8939
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !8939
  %3 = bitcast i8* %add.ptr to %struct.cyclades_port*, !dbg !8939
  store %struct.cyclades_port* %3, %struct.cyclades_port** %tmp, align 8, !dbg !8940
  %4 = load %struct.cyclades_port*, %struct.cyclades_port** %tmp, align 8, !dbg !8939
  store %struct.cyclades_port* %4, %struct.cyclades_port** %info, align 8, !dbg !8936
  %5 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8942
  %u = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %5, i32 0, i32 3, !dbg !8943
  %cyz = bitcast %union.anon.67* %u to %struct.anon.69*, !dbg !8944
  %ch_ctrl = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cyz, i32 0, i32 0, !dbg !8945
  %6 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !8945
  %rs_status = getelementptr inbounds %struct.CH_CTRL, %struct.CH_CTRL* %6, i32 0, i32 10, !dbg !8946
  %7 = bitcast i32* %rs_status to i8*, !dbg !8947
  %call = call i32 @readl(i8* %7) #11, !dbg !8948
  %and = and i32 %call, 256, !dbg !8949
  ret i32 %and, !dbg !8950
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cyz_dtr_rts(%struct.tty_port* %port, i32 %raise) #4 !dbg !8951 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  %raise.addr = alloca i32, align 4
  %info = alloca %struct.cyclades_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.cyclades_port*, align 8
  %cinfo = alloca %struct.cyclades_card*, align 8
  %ch_ctrl = alloca %struct.CH_CTRL*, align 8
  %ret = alloca i32, align 4
  %channel = alloca i32, align 4
  %rs = alloca i32, align 4
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !8952, metadata !DIExpression()), !dbg !8953
  store i32 %raise, i32* %raise.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %raise.addr, metadata !8954, metadata !DIExpression()), !dbg !8955
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info, metadata !8956, metadata !DIExpression()), !dbg !8957
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8958, metadata !DIExpression()), !dbg !8960
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !8960
  %1 = bitcast %struct.tty_port* %0 to i8*, !dbg !8960
  store i8* %1, i8** %__mptr, align 8, !dbg !8960
  br label %do.body, !dbg !8960

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8961

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8960
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !8960
  %3 = bitcast i8* %add.ptr to %struct.cyclades_port*, !dbg !8960
  store %struct.cyclades_port* %3, %struct.cyclades_port** %tmp, align 8, !dbg !8961
  %4 = load %struct.cyclades_port*, %struct.cyclades_port** %tmp, align 8, !dbg !8960
  store %struct.cyclades_port* %4, %struct.cyclades_port** %info, align 8, !dbg !8957
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %cinfo, metadata !8963, metadata !DIExpression()), !dbg !8964
  %5 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8965
  %card = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %5, i32 0, i32 2, !dbg !8966
  %6 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !8966
  store %struct.cyclades_card* %6, %struct.cyclades_card** %cinfo, align 8, !dbg !8964
  call void @llvm.dbg.declare(metadata %struct.CH_CTRL** %ch_ctrl, metadata !8967, metadata !DIExpression()), !dbg !8968
  %7 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8969
  %u = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %7, i32 0, i32 3, !dbg !8970
  %cyz = bitcast %union.anon.67* %u to %struct.anon.69*, !dbg !8971
  %ch_ctrl1 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cyz, i32 0, i32 0, !dbg !8972
  %8 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl1, align 8, !dbg !8972
  store %struct.CH_CTRL* %8, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !8968
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8973, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !8975, metadata !DIExpression()), !dbg !8976
  %9 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !8977
  %line = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %9, i32 0, i32 4, !dbg !8978
  %10 = load i32, i32* %line, align 8, !dbg !8978
  %11 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !8979
  %first_line = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %11, i32 0, i32 5, !dbg !8980
  %12 = load i32, i32* %first_line, align 8, !dbg !8980
  %sub = sub i32 %10, %12, !dbg !8981
  store i32 %sub, i32* %channel, align 4, !dbg !8976
  call void @llvm.dbg.declare(metadata i32* %rs, metadata !8982, metadata !DIExpression()), !dbg !8983
  %13 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !8984
  %rs_control = getelementptr inbounds %struct.CH_CTRL, %struct.CH_CTRL* %13, i32 0, i32 9, !dbg !8985
  %14 = bitcast i32* %rs_control to i8*, !dbg !8986
  %call = call i32 @readl(i8* %14) #11, !dbg !8987
  store i32 %call, i32* %rs, align 4, !dbg !8988
  %15 = load i32, i32* %raise.addr, align 4, !dbg !8989
  %tobool = icmp ne i32 %15, 0, !dbg !8989
  br i1 %tobool, label %if.then, label %if.else, !dbg !8991

if.then:                                          ; preds = %do.end
  %16 = load i32, i32* %rs, align 4, !dbg !8992
  %or = or i32 %16, 5, !dbg !8992
  store i32 %or, i32* %rs, align 4, !dbg !8992
  br label %if.end, !dbg !8993

if.else:                                          ; preds = %do.end
  %17 = load i32, i32* %rs, align 4, !dbg !8994
  %and = and i32 %17, -6, !dbg !8994
  store i32 %and, i32* %rs, align 4, !dbg !8994
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %do.body2, !dbg !8995

do.body2:                                         ; preds = %if.end
  %18 = load i32, i32* %rs, align 4, !dbg !8996
  %19 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !8996
  %rs_control3 = getelementptr inbounds %struct.CH_CTRL, %struct.CH_CTRL* %19, i32 0, i32 9, !dbg !8996
  %20 = bitcast i32* %rs_control3 to i8*, !dbg !8996
  call void @writel(i32 %18, i8* %20) #11, !dbg !8996
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8996, !srcloc !8998
  br label %do.end4, !dbg !8996

do.end4:                                          ; preds = %do.body2
  %21 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !8999
  %22 = load i32, i32* %channel, align 4, !dbg !9000
  %call5 = call i32 @cyz_issue_cmd(%struct.cyclades_card* %21, i32 %22, i8 zeroext 4, i32 0) #11, !dbg !9001
  store i32 %call5, i32* %ret, align 4, !dbg !9002
  %23 = load i32, i32* %ret, align 4, !dbg !9003
  %cmp = icmp ne i32 %23, 0, !dbg !9005
  br i1 %cmp, label %if.then6, label %if.end9, !dbg !9006

if.then6:                                         ; preds = %do.end4
  %24 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !9007
  %line7 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %24, i32 0, i32 4, !dbg !9008
  %25 = load i32, i32* %line7, align 8, !dbg !9008
  %26 = load i32, i32* %ret, align 4, !dbg !9009
  %call8 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.cyz_dtr_rts, i64 0, i64 0), i32 %25, i32 %26) #12, !dbg !9010
  br label %if.end9, !dbg !9010

if.end9:                                          ; preds = %if.then6, %do.end4
  ret void, !dbg !9011
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cy_do_close(%struct.tty_port* %port) #4 !dbg !9012 {
entry:
  %lock.addr.i116 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i116, metadata !9013, metadata !DIExpression()), !dbg !9017
  %flags.addr.i117 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i117, metadata !9019, metadata !DIExpression()), !dbg !9020
  %tmp.i118 = alloca i32, align 4
  %tmp8.i119 = alloca i32, align 4
  %lock.addr.i114 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i114, metadata !7101, metadata !DIExpression()), !dbg !9021
  %lock.addr.i109 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i109, metadata !9013, metadata !DIExpression()), !dbg !9032
  %flags.addr.i110 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i110, metadata !9019, metadata !DIExpression()), !dbg !9034
  %tmp.i111 = alloca i32, align 4
  %tmp8.i112 = alloca i32, align 4
  %lock.addr.i107 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i107, metadata !7101, metadata !DIExpression()), !dbg !9035
  %lock.addr.i105 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i105, metadata !9013, metadata !DIExpression()), !dbg !9045
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9019, metadata !DIExpression()), !dbg !9047
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7101, metadata !DIExpression()), !dbg !9048
  %port.addr = alloca %struct.tty_port*, align 8
  %info = alloca %struct.cyclades_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.cyclades_port*, align 8
  %card = alloca %struct.cyclades_card*, align 8
  %flags = alloca i64, align 8
  %channel = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp4 = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  %__dummy35 = alloca i64, align 8
  %__dummy236 = alloca i64, align 8
  %tmp39 = alloca i32, align 4
  %__dummy43 = alloca i64, align 8
  %__dummy244 = alloca i64, align 8
  %tmp47 = alloca i32, align 4
  %ch_ctrl = alloca %struct.CH_CTRL*, align 8
  %retval = alloca i32, align 4
  %__dummy76 = alloca i64, align 8
  %__dummy277 = alloca i64, align 8
  %tmp80 = alloca i32, align 4
  %__dummy84 = alloca i64, align 8
  %__dummy285 = alloca i64, align 8
  %tmp88 = alloca i32, align 4
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !9055, metadata !DIExpression()), !dbg !9056
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info, metadata !9057, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9059, metadata !DIExpression()), !dbg !9061
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !9061
  %1 = bitcast %struct.tty_port* %0 to i8*, !dbg !9061
  store i8* %1, i8** %__mptr, align 8, !dbg !9061
  br label %do.body, !dbg !9061

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9062

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9061
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !9061
  %3 = bitcast i8* %add.ptr to %struct.cyclades_port*, !dbg !9061
  store %struct.cyclades_port* %3, %struct.cyclades_port** %tmp, align 8, !dbg !9062
  %4 = load %struct.cyclades_port*, %struct.cyclades_port** %tmp, align 8, !dbg !9061
  store %struct.cyclades_port* %4, %struct.cyclades_port** %info, align 8, !dbg !9058
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %card, metadata !9064, metadata !DIExpression()), !dbg !9065
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9066, metadata !DIExpression()), !dbg !9067
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !9068, metadata !DIExpression()), !dbg !9069
  %5 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !9070
  %card1 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %5, i32 0, i32 2, !dbg !9071
  %6 = load %struct.cyclades_card*, %struct.cyclades_card** %card1, align 8, !dbg !9071
  store %struct.cyclades_card* %6, %struct.cyclades_card** %card, align 8, !dbg !9072
  %7 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !9073
  %line = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %7, i32 0, i32 4, !dbg !9074
  %8 = load i32, i32* %line, align 8, !dbg !9074
  %9 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !9075
  %first_line = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %9, i32 0, i32 5, !dbg !9076
  %10 = load i32, i32* %first_line, align 8, !dbg !9076
  %sub = sub i32 %8, %10, !dbg !9077
  store i32 %sub, i32* %channel, align 4, !dbg !9078
  br label %do.body2, !dbg !9079

do.body2:                                         ; preds = %do.end
  br label %do.body3, !dbg !9080

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9081, metadata !DIExpression()), !dbg !9083
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9084, metadata !DIExpression()), !dbg !9083
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9083
  %conv = zext i1 %cmp to i32, !dbg !9083
  store i32 1, i32* %tmp4, align 4, !dbg !9083
  %11 = load i32, i32* %tmp4, align 4, !dbg !9083
  br label %do.body5, !dbg !9085

do.body5:                                         ; preds = %do.body3
  br label %do.body6, !dbg !9086

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !9087

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !9089, metadata !DIExpression()), !dbg !9092
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !9093, metadata !DIExpression()), !dbg !9092
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !9092
  %conv11 = zext i1 %cmp10 to i32, !dbg !9092
  store i32 1, i32* %tmp12, align 4, !dbg !9092
  %12 = load i32, i32* %tmp12, align 4, !dbg !9092
  %call = call i64 @arch_local_irq_save() #11, !dbg !9094
  store i64 %call, i64* %flags, align 8, !dbg !9094
  br label %do.end13, !dbg !9094

do.end13:                                         ; preds = %do.body7
  br label %do.end14, !dbg !9087

do.end14:                                         ; preds = %do.end13
  br label %do.body15, !dbg !9086

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9095, !srcloc !9096
  br label %do.body16, !dbg !9095

do.body16:                                        ; preds = %do.body15
  %13 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !9097
  %card_lock = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %13, i32 0, i32 10, !dbg !9097
  store %struct.spinlock* %card_lock, %struct.spinlock** %lock.addr.i, align 8
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9098
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !9099
  %rlock.i = bitcast %union.anon.0* %15 to %struct.raw_spinlock*, !dbg !9099
  br label %do.end18, !dbg !9097

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !9095

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !9086

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !9085

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !9080

do.end22:                                         ; preds = %do.end21
  %16 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !9100
  %call23 = call zeroext i1 @cy_is_Z(%struct.cyclades_card* %16) #11, !dbg !9101
  br i1 %call23, label %if.else, label %if.then, !dbg !9102

if.then:                                          ; preds = %do.end22
  %17 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !9103
  %18 = load i32, i32* %channel, align 4, !dbg !9104
  %and = and i32 %18, 3, !dbg !9105
  %conv24 = trunc i32 %and to i8, !dbg !9104
  call void @cyy_writeb(%struct.cyclades_port* %17, i32 208, i8 zeroext %conv24) #11, !dbg !9106
  %19 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !9107
  %20 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !9108
  %call25 = call zeroext i8 @cyy_readb(%struct.cyclades_port* %20, i32 12) #11, !dbg !9109
  %conv26 = zext i8 %call25 to i32, !dbg !9109
  %and27 = and i32 %conv26, -17, !dbg !9110
  %conv28 = trunc i32 %and27 to i8, !dbg !9109
  call void @cyy_writeb(%struct.cyclades_port* %19, i32 12, i8 zeroext %conv28) #11, !dbg !9111
  %21 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !9112
  %port29 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %21, i32 0, i32 1, !dbg !9113
  %call30 = call zeroext i1 @tty_port_initialized(%struct.tty_port* %port29) #11, !dbg !9114
  br i1 %call30, label %if.then31, label %if.end, !dbg !9115

if.then31:                                        ; preds = %if.then
  %22 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !9116
  %card_lock32 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %22, i32 0, i32 10, !dbg !9117
  %23 = load i64, i64* %flags, align 8, !dbg !9118
  store %struct.spinlock* %card_lock32, %struct.spinlock** %lock.addr.i105, align 8
  store i64 %23, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !217, metadata !9119, metadata !DIExpression()) #10, !dbg !9122
  call void @llvm.dbg.declare(metadata !217, metadata !9123, metadata !DIExpression()) #10, !dbg !9122
  store i32 1, i32* %tmp.i, align 4, !dbg !9122
  %24 = load i32, i32* %tmp.i, align 4, !dbg !9122
  call void @llvm.dbg.declare(metadata !217, metadata !9124, metadata !DIExpression()) #10, !dbg !9129
  call void @llvm.dbg.declare(metadata !217, metadata !9130, metadata !DIExpression()) #10, !dbg !9129
  store i32 1, i32* %tmp8.i, align 4, !dbg !9129
  %25 = load i32, i32* %tmp8.i, align 4, !dbg !9129
  %26 = load i64, i64* %flags.addr.i, align 8, !dbg !9131
  call void @arch_local_irq_restore(i64 %26) #13, !dbg !9131
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9132, !srcloc !9134
  %27 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i105, align 8, !dbg !9135
  %28 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %27, i32 0, i32 0, !dbg !9135
  %rlock.i106 = bitcast %union.anon.0* %28 to %struct.raw_spinlock*, !dbg !9135
  %29 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !9137
  %tty = getelementptr inbounds %struct.tty_port, %struct.tty_port* %29, i32 0, i32 1, !dbg !9138
  %30 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !9138
  %31 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !9139
  %timeout = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %31, i32 0, i32 9, !dbg !9140
  %32 = load i32, i32* %timeout, align 4, !dbg !9140
  call void @cy_wait_until_sent(%struct.tty_struct* %30, i32 %32) #11, !dbg !9141
  br label %do.body33, !dbg !9142

do.body33:                                        ; preds = %if.then31
  br label %do.body34, !dbg !9143

do.body34:                                        ; preds = %do.body33
  call void @llvm.dbg.declare(metadata i64* %__dummy35, metadata !9144, metadata !DIExpression()), !dbg !9146
  call void @llvm.dbg.declare(metadata i64* %__dummy236, metadata !9147, metadata !DIExpression()), !dbg !9146
  %cmp37 = icmp eq i64* %__dummy35, %__dummy236, !dbg !9146
  %conv38 = zext i1 %cmp37 to i32, !dbg !9146
  store i32 1, i32* %tmp39, align 4, !dbg !9146
  %33 = load i32, i32* %tmp39, align 4, !dbg !9146
  br label %do.body40, !dbg !9148

do.body40:                                        ; preds = %do.body34
  br label %do.body41, !dbg !9149

do.body41:                                        ; preds = %do.body40
  br label %do.body42, !dbg !9150

do.body42:                                        ; preds = %do.body41
  call void @llvm.dbg.declare(metadata i64* %__dummy43, metadata !9152, metadata !DIExpression()), !dbg !9155
  call void @llvm.dbg.declare(metadata i64* %__dummy244, metadata !9156, metadata !DIExpression()), !dbg !9155
  %cmp45 = icmp eq i64* %__dummy43, %__dummy244, !dbg !9155
  %conv46 = zext i1 %cmp45 to i32, !dbg !9155
  store i32 1, i32* %tmp47, align 4, !dbg !9155
  %34 = load i32, i32* %tmp47, align 4, !dbg !9155
  %call48 = call i64 @arch_local_irq_save() #11, !dbg !9157
  store i64 %call48, i64* %flags, align 8, !dbg !9157
  br label %do.end49, !dbg !9157

do.end49:                                         ; preds = %do.body42
  br label %do.end50, !dbg !9150

do.end50:                                         ; preds = %do.end49
  br label %do.body51, !dbg !9149

do.body51:                                        ; preds = %do.end50
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9158, !srcloc !9159
  br label %do.body52, !dbg !9158

do.body52:                                        ; preds = %do.body51
  %35 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !9160
  %card_lock53 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %35, i32 0, i32 10, !dbg !9160
  store %struct.spinlock* %card_lock53, %struct.spinlock** %lock.addr.i107, align 8
  %36 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i107, align 8, !dbg !9161
  %37 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %36, i32 0, i32 0, !dbg !9162
  %rlock.i108 = bitcast %union.anon.0* %37 to %struct.raw_spinlock*, !dbg !9162
  br label %do.end55, !dbg !9160

do.end55:                                         ; preds = %do.body52
  br label %do.end56, !dbg !9158

do.end56:                                         ; preds = %do.end55
  br label %do.end57, !dbg !9149

do.end57:                                         ; preds = %do.end56
  br label %do.end58, !dbg !9148

do.end58:                                         ; preds = %do.end57
  br label %do.end59, !dbg !9143

do.end59:                                         ; preds = %do.end58
  br label %if.end, !dbg !9163

if.end:                                           ; preds = %do.end59, %if.then
  br label %if.end102, !dbg !9164

if.else:                                          ; preds = %do.end22
  call void @llvm.dbg.declare(metadata %struct.CH_CTRL** %ch_ctrl, metadata !9165, metadata !DIExpression()), !dbg !9166
  %38 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !9167
  %u = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %38, i32 0, i32 3, !dbg !9168
  %cyz = bitcast %union.anon.67* %u to %struct.anon.69*, !dbg !9169
  %ch_ctrl60 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cyz, i32 0, i32 0, !dbg !9170
  %39 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl60, align 8, !dbg !9170
  store %struct.CH_CTRL* %39, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !9166
  call void @llvm.dbg.declare(metadata i32* %retval, metadata !9171, metadata !DIExpression()), !dbg !9172
  %40 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !9173
  %flow_status = getelementptr inbounds %struct.CH_CTRL, %struct.CH_CTRL* %40, i32 0, i32 3, !dbg !9174
  %41 = bitcast i32* %flow_status to i8*, !dbg !9175
  %call61 = call i32 @readl(i8* %41) #11, !dbg !9176
  %cmp62 = icmp ne i32 %call61, 0, !dbg !9177
  br i1 %cmp62, label %if.then64, label %if.end101, !dbg !9178

if.then64:                                        ; preds = %if.else
  %42 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !9179
  %43 = load i32, i32* %channel, align 4, !dbg !9180
  %call65 = call i32 @cyz_issue_cmd(%struct.cyclades_card* %42, i32 %43, i8 zeroext 3, i32 0) #11, !dbg !9181
  store i32 %call65, i32* %retval, align 4, !dbg !9182
  %44 = load i32, i32* %retval, align 4, !dbg !9183
  %cmp66 = icmp ne i32 %44, 0, !dbg !9185
  br i1 %cmp66, label %if.then68, label %if.end71, !dbg !9186

if.then68:                                        ; preds = %if.then64
  %45 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !9187
  %line69 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %45, i32 0, i32 4, !dbg !9189
  %46 = load i32, i32* %line69, align 8, !dbg !9189
  %47 = load i32, i32* %retval, align 4, !dbg !9190
  %call70 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.38, i64 0, i64 0), i32 %46, i32 %47) #12, !dbg !9191
  br label %if.end71, !dbg !9192

if.end71:                                         ; preds = %if.then68, %if.then64
  %48 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !9193
  %card_lock72 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %48, i32 0, i32 10, !dbg !9194
  %49 = load i64, i64* %flags, align 8, !dbg !9195
  store %struct.spinlock* %card_lock72, %struct.spinlock** %lock.addr.i109, align 8
  store i64 %49, i64* %flags.addr.i110, align 8
  call void @llvm.dbg.declare(metadata !217, metadata !9119, metadata !DIExpression()) #10, !dbg !9196
  call void @llvm.dbg.declare(metadata !217, metadata !9123, metadata !DIExpression()) #10, !dbg !9196
  store i32 1, i32* %tmp.i111, align 4, !dbg !9196
  %50 = load i32, i32* %tmp.i111, align 4, !dbg !9196
  call void @llvm.dbg.declare(metadata !217, metadata !9124, metadata !DIExpression()) #10, !dbg !9197
  call void @llvm.dbg.declare(metadata !217, metadata !9130, metadata !DIExpression()) #10, !dbg !9197
  store i32 1, i32* %tmp8.i112, align 4, !dbg !9197
  %51 = load i32, i32* %tmp8.i112, align 4, !dbg !9197
  %52 = load i64, i64* %flags.addr.i110, align 8, !dbg !9198
  call void @arch_local_irq_restore(i64 %52) #13, !dbg !9198
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9199, !srcloc !9134
  %53 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i109, align 8, !dbg !9200
  %54 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %53, i32 0, i32 0, !dbg !9200
  %rlock.i113 = bitcast %union.anon.0* %54 to %struct.raw_spinlock*, !dbg !9200
  %55 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !9201
  %shutdown_wait = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %55, i32 0, i32 37, !dbg !9202
  %call73 = call i32 @wait_for_completion_interruptible(%struct.completion* %shutdown_wait) #11, !dbg !9203
  br label %do.body74, !dbg !9204

do.body74:                                        ; preds = %if.end71
  br label %do.body75, !dbg !9205

do.body75:                                        ; preds = %do.body74
  call void @llvm.dbg.declare(metadata i64* %__dummy76, metadata !9206, metadata !DIExpression()), !dbg !9208
  call void @llvm.dbg.declare(metadata i64* %__dummy277, metadata !9209, metadata !DIExpression()), !dbg !9208
  %cmp78 = icmp eq i64* %__dummy76, %__dummy277, !dbg !9208
  %conv79 = zext i1 %cmp78 to i32, !dbg !9208
  store i32 1, i32* %tmp80, align 4, !dbg !9208
  %56 = load i32, i32* %tmp80, align 4, !dbg !9208
  br label %do.body81, !dbg !9210

do.body81:                                        ; preds = %do.body75
  br label %do.body82, !dbg !9211

do.body82:                                        ; preds = %do.body81
  br label %do.body83, !dbg !9212

do.body83:                                        ; preds = %do.body82
  call void @llvm.dbg.declare(metadata i64* %__dummy84, metadata !9214, metadata !DIExpression()), !dbg !9217
  call void @llvm.dbg.declare(metadata i64* %__dummy285, metadata !9218, metadata !DIExpression()), !dbg !9217
  %cmp86 = icmp eq i64* %__dummy84, %__dummy285, !dbg !9217
  %conv87 = zext i1 %cmp86 to i32, !dbg !9217
  store i32 1, i32* %tmp88, align 4, !dbg !9217
  %57 = load i32, i32* %tmp88, align 4, !dbg !9217
  %call89 = call i64 @arch_local_irq_save() #11, !dbg !9219
  store i64 %call89, i64* %flags, align 8, !dbg !9219
  br label %do.end90, !dbg !9219

do.end90:                                         ; preds = %do.body83
  br label %do.end91, !dbg !9212

do.end91:                                         ; preds = %do.end90
  br label %do.body92, !dbg !9211

do.body92:                                        ; preds = %do.end91
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9220, !srcloc !9221
  br label %do.body93, !dbg !9220

do.body93:                                        ; preds = %do.body92
  %58 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !9222
  %card_lock94 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %58, i32 0, i32 10, !dbg !9222
  store %struct.spinlock* %card_lock94, %struct.spinlock** %lock.addr.i114, align 8
  %59 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i114, align 8, !dbg !9223
  %60 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %59, i32 0, i32 0, !dbg !9224
  %rlock.i115 = bitcast %union.anon.0* %60 to %struct.raw_spinlock*, !dbg !9224
  br label %do.end96, !dbg !9222

do.end96:                                         ; preds = %do.body93
  br label %do.end97, !dbg !9220

do.end97:                                         ; preds = %do.end96
  br label %do.end98, !dbg !9211

do.end98:                                         ; preds = %do.end97
  br label %do.end99, !dbg !9210

do.end99:                                         ; preds = %do.end98
  br label %do.end100, !dbg !9205

do.end100:                                        ; preds = %do.end99
  br label %if.end101, !dbg !9225

if.end101:                                        ; preds = %do.end100, %if.else
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.end
  %61 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !9226
  %card_lock103 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %61, i32 0, i32 10, !dbg !9227
  %62 = load i64, i64* %flags, align 8, !dbg !9228
  store %struct.spinlock* %card_lock103, %struct.spinlock** %lock.addr.i116, align 8
  store i64 %62, i64* %flags.addr.i117, align 8
  call void @llvm.dbg.declare(metadata !217, metadata !9119, metadata !DIExpression()) #10, !dbg !9229
  call void @llvm.dbg.declare(metadata !217, metadata !9123, metadata !DIExpression()) #10, !dbg !9229
  store i32 1, i32* %tmp.i118, align 4, !dbg !9229
  %63 = load i32, i32* %tmp.i118, align 4, !dbg !9229
  call void @llvm.dbg.declare(metadata !217, metadata !9124, metadata !DIExpression()) #10, !dbg !9230
  call void @llvm.dbg.declare(metadata !217, metadata !9130, metadata !DIExpression()) #10, !dbg !9230
  store i32 1, i32* %tmp8.i119, align 4, !dbg !9230
  %64 = load i32, i32* %tmp8.i119, align 4, !dbg !9230
  %65 = load i64, i64* %flags.addr.i117, align 8, !dbg !9231
  call void @arch_local_irq_restore(i64 %65) #13, !dbg !9231
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9232, !srcloc !9134
  %66 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i116, align 8, !dbg !9233
  %67 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %66, i32 0, i32 0, !dbg !9233
  %rlock.i120 = bitcast %union.anon.0* %67 to %struct.raw_spinlock*, !dbg !9233
  %68 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !9234
  %69 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !9235
  %tty104 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %69, i32 0, i32 1, !dbg !9236
  %70 = load %struct.tty_struct*, %struct.tty_struct** %tty104, align 8, !dbg !9236
  call void @cy_shutdown(%struct.cyclades_port* %68, %struct.tty_struct* %70) #11, !dbg !9237
  ret void, !dbg !9238
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cyz_issue_cmd(%struct.cyclades_card* %cinfo, i32 %channel, i8 zeroext %cmd, i32 %param) #4 !dbg !9239 {
entry:
  %retval = alloca i32, align 4
  %cinfo.addr = alloca %struct.cyclades_card*, align 8
  %channel.addr = alloca i32, align 4
  %cmd.addr = alloca i8, align 1
  %param.addr = alloca i32, align 4
  %board_ctrl = alloca %struct.BOARD_CTRL*, align 8
  %pci_doorbell = alloca i32*, align 8
  %index = alloca i32, align 4
  store %struct.cyclades_card* %cinfo, %struct.cyclades_card** %cinfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %cinfo.addr, metadata !9242, metadata !DIExpression()), !dbg !9243
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !9244, metadata !DIExpression()), !dbg !9245
  store i8 %cmd, i8* %cmd.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %cmd.addr, metadata !9246, metadata !DIExpression()), !dbg !9247
  store i32 %param, i32* %param.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %param.addr, metadata !9248, metadata !DIExpression()), !dbg !9249
  call void @llvm.dbg.declare(metadata %struct.BOARD_CTRL** %board_ctrl, metadata !9250, metadata !DIExpression()), !dbg !9251
  %0 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo.addr, align 8, !dbg !9252
  %board_ctrl1 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %0, i32 0, i32 2, !dbg !9253
  %1 = load %struct.BOARD_CTRL*, %struct.BOARD_CTRL** %board_ctrl1, align 8, !dbg !9253
  store %struct.BOARD_CTRL* %1, %struct.BOARD_CTRL** %board_ctrl, align 8, !dbg !9251
  call void @llvm.dbg.declare(metadata i32** %pci_doorbell, metadata !9254, metadata !DIExpression()), !dbg !9255
  call void @llvm.dbg.declare(metadata i32* %index, metadata !9256, metadata !DIExpression()), !dbg !9257
  %2 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo.addr, align 8, !dbg !9258
  %call = call zeroext i1 @cyz_is_loaded(%struct.cyclades_card* %2) #11, !dbg !9260
  br i1 %call, label %if.end, label %if.then, !dbg !9261

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !9262
  br label %return, !dbg !9262

if.end:                                           ; preds = %entry
  store i32 0, i32* %index, align 4, !dbg !9263
  %3 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo.addr, align 8, !dbg !9264
  %ctl_addr = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %3, i32 0, i32 1, !dbg !9265
  %p9060 = bitcast %union.anon* %ctl_addr to %struct.RUNTIME_9060**, !dbg !9266
  %4 = load %struct.RUNTIME_9060*, %struct.RUNTIME_9060** %p9060, align 8, !dbg !9266
  %pci_doorbell2 = getelementptr inbounds %struct.RUNTIME_9060, %struct.RUNTIME_9060* %4, i32 0, i32 24, !dbg !9267
  store i32* %pci_doorbell2, i32** %pci_doorbell, align 8, !dbg !9268
  br label %while.cond, !dbg !9269

while.cond:                                       ; preds = %if.end8, %if.end
  %5 = load i32*, i32** %pci_doorbell, align 8, !dbg !9270
  %6 = bitcast i32* %5 to i8*, !dbg !9270
  %call3 = call i32 @readl(i8* %6) #11, !dbg !9271
  %and = and i32 %call3, 255, !dbg !9272
  %cmp = icmp ne i32 %and, 0, !dbg !9273
  br i1 %cmp, label %while.body, label %while.end, !dbg !9269

while.body:                                       ; preds = %while.cond
  %7 = load i32, i32* %index, align 4, !dbg !9274
  %inc = add i32 %7, 1, !dbg !9274
  store i32 %inc, i32* %index, align 4, !dbg !9274
  %cmp4 = icmp eq i32 %7, 1000, !dbg !9277
  br i1 %cmp4, label %if.then5, label %if.end8, !dbg !9278

if.then5:                                         ; preds = %while.body
  %8 = load i32*, i32** %pci_doorbell, align 8, !dbg !9279
  %9 = bitcast i32* %8 to i8*, !dbg !9279
  %call6 = call i32 @readl(i8* %9) #11, !dbg !9280
  %and7 = and i32 %call6, 255, !dbg !9281
  store i32 %and7, i32* %retval, align 4, !dbg !9282
  br label %return, !dbg !9282

if.end8:                                          ; preds = %while.body
  call void @__const_udelay(i64 214750) #11, !dbg !9283
  br label %while.cond, !dbg !9269, !llvm.loop !9288

while.end:                                        ; preds = %while.cond
  br label %do.body, !dbg !9290

do.body:                                          ; preds = %while.end
  %10 = load i32, i32* %channel.addr, align 4, !dbg !9291
  %11 = load %struct.BOARD_CTRL*, %struct.BOARD_CTRL** %board_ctrl, align 8, !dbg !9291
  %hcmd_channel = getelementptr inbounds %struct.BOARD_CTRL, %struct.BOARD_CTRL* %11, i32 0, i32 5, !dbg !9291
  %12 = bitcast i32* %hcmd_channel to i8*, !dbg !9291
  call void @writel(i32 %10, i8* %12) #11, !dbg !9291
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9291, !srcloc !9293
  br label %do.end, !dbg !9291

do.end:                                           ; preds = %do.body
  br label %do.body9, !dbg !9294

do.body9:                                         ; preds = %do.end
  %13 = load i32, i32* %param.addr, align 4, !dbg !9295
  %14 = load %struct.BOARD_CTRL*, %struct.BOARD_CTRL** %board_ctrl, align 8, !dbg !9295
  %hcmd_param = getelementptr inbounds %struct.BOARD_CTRL, %struct.BOARD_CTRL* %14, i32 0, i32 6, !dbg !9295
  %15 = bitcast i32* %hcmd_param to i8*, !dbg !9295
  call void @writel(i32 %13, i8* %15) #11, !dbg !9295
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9295, !srcloc !9297
  br label %do.end10, !dbg !9295

do.end10:                                         ; preds = %do.body9
  br label %do.body11, !dbg !9298

do.body11:                                        ; preds = %do.end10
  %16 = load i8, i8* %cmd.addr, align 1, !dbg !9299
  %conv = zext i8 %16 to i64, !dbg !9299
  %conv12 = trunc i64 %conv to i32, !dbg !9299
  %17 = load i32*, i32** %pci_doorbell, align 8, !dbg !9299
  %18 = bitcast i32* %17 to i8*, !dbg !9299
  call void @writel(i32 %conv12, i8* %18) #11, !dbg !9299
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9299, !srcloc !9301
  br label %do.end13, !dbg !9299

do.end13:                                         ; preds = %do.body11
  store i32 0, i32* %retval, align 4, !dbg !9302
  br label %return, !dbg !9302

return:                                           ; preds = %do.end13, %if.then5, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !9303
  ret i32 %19, !dbg !9303
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #4 !dbg !9304 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !9308, metadata !DIExpression()), !dbg !9309
  %call = call i64 @arch_local_save_flags() #11, !dbg !9310
  store i64 %call, i64* %f, align 8, !dbg !9311
  call void @arch_local_irq_disable() #11, !dbg !9312
  %0 = load i64, i64* %f, align 8, !dbg !9313
  ret i64 %0, !dbg !9314
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @tty_port_initialized(%struct.tty_port* %port) #4 !dbg !9315 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !9316, metadata !DIExpression()), !dbg !9317
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !9318
  %iflags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %0, i32 0, i32 11, !dbg !9319
  %call = call zeroext i1 @test_bit(i64 0, i64* %iflags) #11, !dbg !9320
  ret i1 %call, !dbg !9321
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cy_wait_until_sent(%struct.tty_struct* %tty, i32 %timeout) #4 !dbg !9322 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %timeout.addr = alloca i32, align 4
  %card = alloca %struct.cyclades_card*, align 8
  %info = alloca %struct.cyclades_port*, align 8
  %orig_jiffies = alloca i64, align 8
  %char_time = alloca i32, align 4
  %__UNIQUE_ID___x240 = alloca i32, align 4
  %__UNIQUE_ID___y241 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !9323, metadata !DIExpression()), !dbg !9324
  store i32 %timeout, i32* %timeout.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeout.addr, metadata !9325, metadata !DIExpression()), !dbg !9326
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %card, metadata !9327, metadata !DIExpression()), !dbg !9328
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info, metadata !9329, metadata !DIExpression()), !dbg !9330
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9331
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !9332
  %1 = load i8*, i8** %driver_data, align 8, !dbg !9332
  %2 = bitcast i8* %1 to %struct.cyclades_port*, !dbg !9331
  store %struct.cyclades_port* %2, %struct.cyclades_port** %info, align 8, !dbg !9330
  call void @llvm.dbg.declare(metadata i64* %orig_jiffies, metadata !9333, metadata !DIExpression()), !dbg !9334
  call void @llvm.dbg.declare(metadata i32* %char_time, metadata !9335, metadata !DIExpression()), !dbg !9336
  %3 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !9337
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9339
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 18, !dbg !9340
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !9339
  %call = call i32 @serial_paranoia_check(%struct.cyclades_port* %3, i8* %arraydecay, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.39, i64 0, i64 0)) #11, !dbg !9341
  %tobool = icmp ne i32 %call, 0, !dbg !9341
  br i1 %tobool, label %if.then, label %if.end, !dbg !9342

if.then:                                          ; preds = %entry
  br label %return, !dbg !9343

if.end:                                           ; preds = %entry
  %5 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !9344
  %xmit_fifo_size = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %5, i32 0, i32 10, !dbg !9346
  %6 = load i32, i32* %xmit_fifo_size, align 8, !dbg !9346
  %cmp = icmp eq i32 %6, 0, !dbg !9347
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !9348

if.then1:                                         ; preds = %if.end
  br label %return, !dbg !9349

if.end2:                                          ; preds = %if.end
  %7 = load volatile i64, i64* @jiffies, align 8, !dbg !9350
  store i64 %7, i64* %orig_jiffies, align 8, !dbg !9351
  %8 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !9352
  %timeout3 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %8, i32 0, i32 9, !dbg !9353
  %9 = load i32, i32* %timeout3, align 4, !dbg !9353
  %sub = sub i32 %9, 5, !dbg !9354
  %10 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !9355
  %xmit_fifo_size4 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %10, i32 0, i32 10, !dbg !9356
  %11 = load i32, i32* %xmit_fifo_size4, align 8, !dbg !9356
  %div = sdiv i32 %sub, %11, !dbg !9357
  store i32 %div, i32* %char_time, align 4, !dbg !9358
  %12 = load i32, i32* %char_time, align 4, !dbg !9359
  %div5 = sdiv i32 %12, 5, !dbg !9360
  store i32 %div5, i32* %char_time, align 4, !dbg !9361
  %13 = load i32, i32* %char_time, align 4, !dbg !9362
  %cmp6 = icmp sle i32 %13, 0, !dbg !9364
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !9365

if.then7:                                         ; preds = %if.end2
  store i32 1, i32* %char_time, align 4, !dbg !9366
  br label %if.end8, !dbg !9367

if.end8:                                          ; preds = %if.then7, %if.end2
  %14 = load i32, i32* %timeout.addr, align 4, !dbg !9368
  %cmp9 = icmp slt i32 %14, 0, !dbg !9370
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !9371

if.then10:                                        ; preds = %if.end8
  store i32 0, i32* %timeout.addr, align 4, !dbg !9372
  br label %if.end11, !dbg !9373

if.end11:                                         ; preds = %if.then10, %if.end8
  %15 = load i32, i32* %timeout.addr, align 4, !dbg !9374
  %tobool12 = icmp ne i32 %15, 0, !dbg !9374
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !9376

if.then13:                                        ; preds = %if.end11
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x240, metadata !9377, metadata !DIExpression()), !dbg !9379
  %16 = load i32, i32* %char_time, align 4, !dbg !9379
  store i32 %16, i32* %__UNIQUE_ID___x240, align 4, !dbg !9379
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y241, metadata !9380, metadata !DIExpression()), !dbg !9379
  %17 = load i32, i32* %timeout.addr, align 4, !dbg !9379
  store i32 %17, i32* %__UNIQUE_ID___y241, align 4, !dbg !9379
  %18 = load i32, i32* %__UNIQUE_ID___x240, align 4, !dbg !9379
  %19 = load i32, i32* %__UNIQUE_ID___y241, align 4, !dbg !9379
  %cmp14 = icmp slt i32 %18, %19, !dbg !9379
  br i1 %cmp14, label %cond.true, label %cond.false, !dbg !9379

cond.true:                                        ; preds = %if.then13
  %20 = load i32, i32* %__UNIQUE_ID___x240, align 4, !dbg !9379
  br label %cond.end, !dbg !9379

cond.false:                                       ; preds = %if.then13
  %21 = load i32, i32* %__UNIQUE_ID___y241, align 4, !dbg !9379
  br label %cond.end, !dbg !9379

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %20, %cond.true ], [ %21, %cond.false ], !dbg !9379
  store i32 %cond, i32* %tmp, align 4, !dbg !9379
  %22 = load i32, i32* %tmp, align 4, !dbg !9379
  store i32 %22, i32* %char_time, align 4, !dbg !9381
  br label %if.end15, !dbg !9382

if.end15:                                         ; preds = %cond.end, %if.end11
  %23 = load i32, i32* %timeout.addr, align 4, !dbg !9383
  %tobool16 = icmp ne i32 %23, 0, !dbg !9383
  br i1 %tobool16, label %lor.lhs.false, label %if.then19, !dbg !9385

lor.lhs.false:                                    ; preds = %if.end15
  %24 = load i32, i32* %timeout.addr, align 4, !dbg !9386
  %25 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !9387
  %timeout17 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %25, i32 0, i32 9, !dbg !9388
  %26 = load i32, i32* %timeout17, align 4, !dbg !9388
  %mul = mul i32 2, %26, !dbg !9389
  %cmp18 = icmp sgt i32 %24, %mul, !dbg !9390
  br i1 %cmp18, label %if.then19, label %if.end22, !dbg !9391

if.then19:                                        ; preds = %lor.lhs.false, %if.end15
  %27 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !9392
  %timeout20 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %27, i32 0, i32 9, !dbg !9393
  %28 = load i32, i32* %timeout20, align 4, !dbg !9393
  %mul21 = mul i32 2, %28, !dbg !9394
  store i32 %mul21, i32* %timeout.addr, align 4, !dbg !9395
  br label %if.end22, !dbg !9396

if.end22:                                         ; preds = %if.then19, %lor.lhs.false
  %29 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !9397
  %card23 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %29, i32 0, i32 2, !dbg !9398
  %30 = load %struct.cyclades_card*, %struct.cyclades_card** %card23, align 8, !dbg !9398
  store %struct.cyclades_card* %30, %struct.cyclades_card** %card, align 8, !dbg !9399
  %31 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !9400
  %call24 = call zeroext i1 @cy_is_Z(%struct.cyclades_card* %31) #11, !dbg !9402
  br i1 %call24, label %if.end41, label %if.then25, !dbg !9403

if.then25:                                        ; preds = %if.end22
  br label %while.cond, !dbg !9404

while.cond:                                       ; preds = %if.end40, %if.then25
  %32 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !9406
  %call26 = call zeroext i8 @cyy_readb(%struct.cyclades_port* %32, i32 12) #11, !dbg !9407
  %conv = zext i8 %call26 to i32, !dbg !9407
  %and = and i32 %conv, 4, !dbg !9408
  %tobool27 = icmp ne i32 %and, 0, !dbg !9404
  br i1 %tobool27, label %while.body, label %while.end, !dbg !9404

while.body:                                       ; preds = %while.cond
  %33 = load i32, i32* %char_time, align 4, !dbg !9409
  %conv28 = sext i32 %33 to i64, !dbg !9409
  %call29 = call i32 @jiffies_to_msecs(i64 %conv28) #11, !dbg !9412
  %call30 = call i64 @msleep_interruptible(i32 %call29) #11, !dbg !9413
  %tobool31 = icmp ne i64 %call30, 0, !dbg !9413
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !9414

if.then32:                                        ; preds = %while.body
  br label %while.end, !dbg !9415

if.end33:                                         ; preds = %while.body
  %34 = load i32, i32* %timeout.addr, align 4, !dbg !9416
  %tobool34 = icmp ne i32 %34, 0, !dbg !9416
  br i1 %tobool34, label %land.lhs.true, label %if.end40, !dbg !9418

land.lhs.true:                                    ; preds = %if.end33
  %35 = load i64, i64* %orig_jiffies, align 8, !dbg !9419
  %36 = load i32, i32* %timeout.addr, align 4, !dbg !9419
  %conv35 = sext i32 %36 to i64, !dbg !9419
  %add = add i64 %35, %conv35, !dbg !9419
  %37 = load volatile i64, i64* @jiffies, align 8, !dbg !9419
  %sub36 = sub i64 %add, %37, !dbg !9419
  %cmp37 = icmp slt i64 %sub36, 0, !dbg !9419
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !9420

if.then39:                                        ; preds = %land.lhs.true
  br label %while.end, !dbg !9421

if.end40:                                         ; preds = %land.lhs.true, %if.end33
  br label %while.cond, !dbg !9404, !llvm.loop !9422

while.end:                                        ; preds = %if.then39, %if.then32, %while.cond
  br label %if.end41, !dbg !9424

if.end41:                                         ; preds = %while.end, %if.end22
  %38 = load i32, i32* %char_time, align 4, !dbg !9425
  %mul42 = mul i32 %38, 5, !dbg !9426
  %conv43 = sext i32 %mul42 to i64, !dbg !9425
  %call44 = call i32 @jiffies_to_msecs(i64 %conv43) #11, !dbg !9427
  %call45 = call i64 @msleep_interruptible(i32 %call44) #11, !dbg !9428
  br label %return, !dbg !9429

return:                                           ; preds = %if.end41, %if.then1, %if.then
  ret void, !dbg !9429
}

; Function Attrs: noredzone
declare dso_local i32 @wait_for_completion_interruptible(%struct.completion*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cy_shutdown(%struct.cyclades_port* %info, %struct.tty_struct* %tty) #4 !dbg !9430 {
entry:
  %lock.addr.i96 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i96, metadata !7101, metadata !DIExpression()), !dbg !9433
  %lock.addr.i91 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i91, metadata !9013, metadata !DIExpression()), !dbg !9442
  %flags.addr.i92 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i92, metadata !9019, metadata !DIExpression()), !dbg !9445
  %tmp.i93 = alloca i32, align 4
  %tmp8.i94 = alloca i32, align 4
  %lock.addr.i89 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i89, metadata !9013, metadata !DIExpression()), !dbg !9446
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9019, metadata !DIExpression()), !dbg !9448
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7101, metadata !DIExpression()), !dbg !9449
  %info.addr = alloca %struct.cyclades_port*, align 8
  %tty.addr = alloca %struct.tty_struct*, align 8
  %card = alloca %struct.cyclades_card*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  %temp = alloca i8*, align 8
  %__dummy43 = alloca i64, align 8
  %__dummy244 = alloca i64, align 8
  %tmp47 = alloca i32, align 4
  %__dummy51 = alloca i64, align 8
  %__dummy252 = alloca i64, align 8
  %tmp55 = alloca i32, align 4
  %temp72 = alloca i8*, align 8
  store %struct.cyclades_port* %info, %struct.cyclades_port** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info.addr, metadata !9456, metadata !DIExpression()), !dbg !9457
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !9458, metadata !DIExpression()), !dbg !9459
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %card, metadata !9460, metadata !DIExpression()), !dbg !9461
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9462, metadata !DIExpression()), !dbg !9463
  %0 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !9464
  %port = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %0, i32 0, i32 1, !dbg !9466
  %call = call zeroext i1 @tty_port_initialized(%struct.tty_port* %port) #11, !dbg !9467
  br i1 %call, label %if.end, label %if.then, !dbg !9468

if.then:                                          ; preds = %entry
  br label %if.end88, !dbg !9469

if.end:                                           ; preds = %entry
  %1 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !9470
  %card1 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %1, i32 0, i32 2, !dbg !9471
  %2 = load %struct.cyclades_card*, %struct.cyclades_card** %card1, align 8, !dbg !9471
  store %struct.cyclades_card* %2, %struct.cyclades_card** %card, align 8, !dbg !9472
  %3 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !9473
  %call2 = call zeroext i1 @cy_is_Z(%struct.cyclades_card* %3) #11, !dbg !9474
  br i1 %call2, label %if.else, label %if.then3, !dbg !9475

if.then3:                                         ; preds = %if.end
  br label %do.body, !dbg !9476

do.body:                                          ; preds = %if.then3
  br label %do.body4, !dbg !9477

do.body4:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9478, metadata !DIExpression()), !dbg !9480
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9481, metadata !DIExpression()), !dbg !9480
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9480
  %conv = zext i1 %cmp to i32, !dbg !9480
  store i32 1, i32* %tmp, align 4, !dbg !9480
  %4 = load i32, i32* %tmp, align 4, !dbg !9480
  br label %do.body5, !dbg !9482

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !9483

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !9484

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !9486, metadata !DIExpression()), !dbg !9489
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !9490, metadata !DIExpression()), !dbg !9489
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !9489
  %conv11 = zext i1 %cmp10 to i32, !dbg !9489
  store i32 1, i32* %tmp12, align 4, !dbg !9489
  %5 = load i32, i32* %tmp12, align 4, !dbg !9489
  %call13 = call i64 @arch_local_irq_save() #11, !dbg !9491
  store i64 %call13, i64* %flags, align 8, !dbg !9491
  br label %do.end, !dbg !9491

do.end:                                           ; preds = %do.body7
  br label %do.end14, !dbg !9484

do.end14:                                         ; preds = %do.end
  br label %do.body15, !dbg !9483

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9492, !srcloc !9493
  br label %do.body16, !dbg !9492

do.body16:                                        ; preds = %do.body15
  %6 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !9494
  %card_lock = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %6, i32 0, i32 10, !dbg !9494
  store %struct.spinlock* %card_lock, %struct.spinlock** %lock.addr.i, align 8
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9495
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !9496
  %rlock.i = bitcast %union.anon.0* %8 to %struct.raw_spinlock*, !dbg !9496
  br label %do.end18, !dbg !9494

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !9492

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !9483

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !9482

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !9477

do.end22:                                         ; preds = %do.end21
  %9 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !9497
  %port23 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %9, i32 0, i32 1, !dbg !9497
  %delta_msr_wait = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port23, i32 0, i32 9, !dbg !9497
  call void @__wake_up(%struct.wait_queue_head* %delta_msr_wait, i32 1, i32 1, i8* null) #11, !dbg !9497
  %10 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !9498
  %port24 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %10, i32 0, i32 1, !dbg !9500
  %xmit_buf = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port24, i32 0, i32 15, !dbg !9501
  %11 = load i8*, i8** %xmit_buf, align 8, !dbg !9501
  %tobool = icmp ne i8* %11, null, !dbg !9498
  br i1 %tobool, label %if.then25, label %if.end30, !dbg !9502

if.then25:                                        ; preds = %do.end22
  call void @llvm.dbg.declare(metadata i8** %temp, metadata !9503, metadata !DIExpression()), !dbg !9505
  %12 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !9506
  %port26 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %12, i32 0, i32 1, !dbg !9507
  %xmit_buf27 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port26, i32 0, i32 15, !dbg !9508
  %13 = load i8*, i8** %xmit_buf27, align 8, !dbg !9508
  store i8* %13, i8** %temp, align 8, !dbg !9509
  %14 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !9510
  %port28 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %14, i32 0, i32 1, !dbg !9511
  %xmit_buf29 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port28, i32 0, i32 15, !dbg !9512
  store i8* null, i8** %xmit_buf29, align 8, !dbg !9513
  %15 = load i8*, i8** %temp, align 8, !dbg !9514
  %16 = ptrtoint i8* %15 to i64, !dbg !9514
  call void @free_pages(i64 %16, i32 0) #11, !dbg !9514
  br label %if.end30, !dbg !9515

if.end30:                                         ; preds = %if.then25, %do.end22
  %17 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9516
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %17, i32 0, i32 15, !dbg !9516
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 2, !dbg !9516
  %18 = load i32, i32* %c_cflag, align 8, !dbg !9516
  %and = and i32 %18, 1024, !dbg !9516
  %tobool31 = icmp ne i32 %and, 0, !dbg !9516
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !9518

if.then32:                                        ; preds = %if.end30
  %19 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !9519
  call void @cyy_change_rts_dtr(%struct.cyclades_port* %19, i32 0, i32 6) #11, !dbg !9520
  br label %if.end33, !dbg !9520

if.end33:                                         ; preds = %if.then32, %if.end30
  %20 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !9521
  %call34 = call i32 @cyy_issue_cmd(%struct.cyclades_port* %20, i8 zeroext 17) #11, !dbg !9522
  %21 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9523
  %flags35 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %21, i32 0, i32 21, !dbg !9524
  call void @set_bit(i64 1, i64* %flags35) #11, !dbg !9525
  %22 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !9526
  %port36 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %22, i32 0, i32 1, !dbg !9527
  call void @tty_port_set_initialized(%struct.tty_port* %port36, i1 zeroext false) #11, !dbg !9528
  %23 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !9529
  %card_lock37 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %23, i32 0, i32 10, !dbg !9530
  %24 = load i64, i64* %flags, align 8, !dbg !9531
  store %struct.spinlock* %card_lock37, %struct.spinlock** %lock.addr.i91, align 8
  store i64 %24, i64* %flags.addr.i92, align 8
  call void @llvm.dbg.declare(metadata !217, metadata !9119, metadata !DIExpression()) #10, !dbg !9532
  call void @llvm.dbg.declare(metadata !217, metadata !9123, metadata !DIExpression()) #10, !dbg !9532
  store i32 1, i32* %tmp.i93, align 4, !dbg !9532
  %25 = load i32, i32* %tmp.i93, align 4, !dbg !9532
  call void @llvm.dbg.declare(metadata !217, metadata !9124, metadata !DIExpression()) #10, !dbg !9533
  call void @llvm.dbg.declare(metadata !217, metadata !9130, metadata !DIExpression()) #10, !dbg !9533
  store i32 1, i32* %tmp8.i94, align 4, !dbg !9533
  %26 = load i32, i32* %tmp8.i94, align 4, !dbg !9533
  %27 = load i64, i64* %flags.addr.i92, align 8, !dbg !9534
  call void @arch_local_irq_restore(i64 %27) #13, !dbg !9534
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9535, !srcloc !9134
  %28 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i91, align 8, !dbg !9536
  %29 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %28, i32 0, i32 0, !dbg !9536
  %rlock.i95 = bitcast %union.anon.0* %29 to %struct.raw_spinlock*, !dbg !9536
  br label %if.end88, !dbg !9537

if.else:                                          ; preds = %if.end
  %30 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !9538
  %call38 = call zeroext i1 @cyz_is_loaded(%struct.cyclades_card* %30) #11, !dbg !9540
  br i1 %call38, label %if.end40, label %if.then39, !dbg !9541

if.then39:                                        ; preds = %if.else
  br label %if.end88, !dbg !9542

if.end40:                                         ; preds = %if.else
  br label %do.body41, !dbg !9543

do.body41:                                        ; preds = %if.end40
  br label %do.body42, !dbg !9544

do.body42:                                        ; preds = %do.body41
  call void @llvm.dbg.declare(metadata i64* %__dummy43, metadata !9545, metadata !DIExpression()), !dbg !9547
  call void @llvm.dbg.declare(metadata i64* %__dummy244, metadata !9548, metadata !DIExpression()), !dbg !9547
  %cmp45 = icmp eq i64* %__dummy43, %__dummy244, !dbg !9547
  %conv46 = zext i1 %cmp45 to i32, !dbg !9547
  store i32 1, i32* %tmp47, align 4, !dbg !9547
  %31 = load i32, i32* %tmp47, align 4, !dbg !9547
  br label %do.body48, !dbg !9549

do.body48:                                        ; preds = %do.body42
  br label %do.body49, !dbg !9550

do.body49:                                        ; preds = %do.body48
  br label %do.body50, !dbg !9551

do.body50:                                        ; preds = %do.body49
  call void @llvm.dbg.declare(metadata i64* %__dummy51, metadata !9553, metadata !DIExpression()), !dbg !9556
  call void @llvm.dbg.declare(metadata i64* %__dummy252, metadata !9557, metadata !DIExpression()), !dbg !9556
  %cmp53 = icmp eq i64* %__dummy51, %__dummy252, !dbg !9556
  %conv54 = zext i1 %cmp53 to i32, !dbg !9556
  store i32 1, i32* %tmp55, align 4, !dbg !9556
  %32 = load i32, i32* %tmp55, align 4, !dbg !9556
  %call56 = call i64 @arch_local_irq_save() #11, !dbg !9558
  store i64 %call56, i64* %flags, align 8, !dbg !9558
  br label %do.end57, !dbg !9558

do.end57:                                         ; preds = %do.body50
  br label %do.end58, !dbg !9551

do.end58:                                         ; preds = %do.end57
  br label %do.body59, !dbg !9550

do.body59:                                        ; preds = %do.end58
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9559, !srcloc !9560
  br label %do.body60, !dbg !9559

do.body60:                                        ; preds = %do.body59
  %33 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !9561
  %card_lock61 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %33, i32 0, i32 10, !dbg !9561
  store %struct.spinlock* %card_lock61, %struct.spinlock** %lock.addr.i96, align 8
  %34 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i96, align 8, !dbg !9562
  %35 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %34, i32 0, i32 0, !dbg !9563
  %rlock.i97 = bitcast %union.anon.0* %35 to %struct.raw_spinlock*, !dbg !9563
  br label %do.end63, !dbg !9561

do.end63:                                         ; preds = %do.body60
  br label %do.end64, !dbg !9559

do.end64:                                         ; preds = %do.end63
  br label %do.end65, !dbg !9550

do.end65:                                         ; preds = %do.end64
  br label %do.end66, !dbg !9549

do.end66:                                         ; preds = %do.end65
  br label %do.end67, !dbg !9544

do.end67:                                         ; preds = %do.end66
  %36 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !9564
  %port68 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %36, i32 0, i32 1, !dbg !9566
  %xmit_buf69 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port68, i32 0, i32 15, !dbg !9567
  %37 = load i8*, i8** %xmit_buf69, align 8, !dbg !9567
  %tobool70 = icmp ne i8* %37, null, !dbg !9564
  br i1 %tobool70, label %if.then71, label %if.end77, !dbg !9568

if.then71:                                        ; preds = %do.end67
  call void @llvm.dbg.declare(metadata i8** %temp72, metadata !9569, metadata !DIExpression()), !dbg !9571
  %38 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !9572
  %port73 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %38, i32 0, i32 1, !dbg !9573
  %xmit_buf74 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port73, i32 0, i32 15, !dbg !9574
  %39 = load i8*, i8** %xmit_buf74, align 8, !dbg !9574
  store i8* %39, i8** %temp72, align 8, !dbg !9575
  %40 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !9576
  %port75 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %40, i32 0, i32 1, !dbg !9577
  %xmit_buf76 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port75, i32 0, i32 15, !dbg !9578
  store i8* null, i8** %xmit_buf76, align 8, !dbg !9579
  %41 = load i8*, i8** %temp72, align 8, !dbg !9580
  %42 = ptrtoint i8* %41 to i64, !dbg !9580
  call void @free_pages(i64 %42, i32 0) #11, !dbg !9580
  br label %if.end77, !dbg !9581

if.end77:                                         ; preds = %if.then71, %do.end67
  %43 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9582
  %termios78 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %43, i32 0, i32 15, !dbg !9582
  %c_cflag79 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios78, i32 0, i32 2, !dbg !9582
  %44 = load i32, i32* %c_cflag79, align 8, !dbg !9582
  %and80 = and i32 %44, 1024, !dbg !9582
  %tobool81 = icmp ne i32 %and80, 0, !dbg !9582
  br i1 %tobool81, label %if.then82, label %if.end84, !dbg !9584

if.then82:                                        ; preds = %if.end77
  %45 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !9585
  %port83 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %45, i32 0, i32 1, !dbg !9586
  call void @tty_port_lower_dtr_rts(%struct.tty_port* %port83) #11, !dbg !9587
  br label %if.end84, !dbg !9587

if.end84:                                         ; preds = %if.then82, %if.end77
  %46 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9588
  %flags85 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %46, i32 0, i32 21, !dbg !9589
  call void @set_bit(i64 1, i64* %flags85) #11, !dbg !9590
  %47 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !9591
  %port86 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %47, i32 0, i32 1, !dbg !9592
  call void @tty_port_set_initialized(%struct.tty_port* %port86, i1 zeroext false) #11, !dbg !9593
  %48 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !9594
  %card_lock87 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %48, i32 0, i32 10, !dbg !9595
  %49 = load i64, i64* %flags, align 8, !dbg !9596
  store %struct.spinlock* %card_lock87, %struct.spinlock** %lock.addr.i89, align 8
  store i64 %49, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !217, metadata !9119, metadata !DIExpression()) #10, !dbg !9597
  call void @llvm.dbg.declare(metadata !217, metadata !9123, metadata !DIExpression()) #10, !dbg !9597
  store i32 1, i32* %tmp.i, align 4, !dbg !9597
  %50 = load i32, i32* %tmp.i, align 4, !dbg !9597
  call void @llvm.dbg.declare(metadata !217, metadata !9124, metadata !DIExpression()) #10, !dbg !9598
  call void @llvm.dbg.declare(metadata !217, metadata !9130, metadata !DIExpression()) #10, !dbg !9598
  store i32 1, i32* %tmp8.i, align 4, !dbg !9598
  %51 = load i32, i32* %tmp8.i, align 4, !dbg !9598
  %52 = load i64, i64* %flags.addr.i, align 8, !dbg !9599
  call void @arch_local_irq_restore(i64 %52) #13, !dbg !9599
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9600, !srcloc !9134
  %53 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i89, align 8, !dbg !9601
  %54 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %53, i32 0, i32 0, !dbg !9601
  %rlock.i90 = bitcast %union.anon.0* %54 to %struct.raw_spinlock*, !dbg !9601
  br label %if.end88

if.end88:                                         ; preds = %if.then, %if.then39, %if.end84, %if.end33
  ret void, !dbg !9602
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #4 !dbg !9603 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !9604, metadata !DIExpression()), !dbg !9606
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !9607, metadata !DIExpression()), !dbg !9606
  %0 = load i64, i64* %__edi, align 8, !dbg !9606
  store i64 %0, i64* %__edi, align 8, !dbg !9606
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !9608, metadata !DIExpression()), !dbg !9606
  %1 = load i64, i64* %__esi, align 8, !dbg !9606
  store i64 %1, i64* %__esi, align 8, !dbg !9606
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !9609, metadata !DIExpression()), !dbg !9606
  %2 = load i64, i64* %__edx, align 8, !dbg !9606
  store i64 %2, i64* %__edx, align 8, !dbg !9606
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !9610, metadata !DIExpression()), !dbg !9606
  %3 = load i64, i64* %__ecx, align 8, !dbg !9606
  store i64 %3, i64* %__ecx, align 8, !dbg !9606
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !9611, metadata !DIExpression()), !dbg !9606
  %4 = load i64, i64* %__eax, align 8, !dbg !9606
  store i64 %4, i64* %__eax, align 8, !dbg !9606
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !9606
  %6 = call i64 @llvm.read_register.i64(metadata !4820), !dbg !9612
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #10, !dbg !9612, !srcloc !9615
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !9612
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !9612
  store i64 %asmresult, i64* %__eax, align 8, !dbg !9612
  call void @llvm.write_register.i64(metadata !4820, i64 %asmresult1), !dbg !9612
  %8 = load i64, i64* %__eax, align 8, !dbg !9612
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !9616, metadata !DIExpression()), !dbg !9618
  store i64 -1, i64* %__mask, align 8, !dbg !9618
  %9 = load i64, i64* %__mask, align 8, !dbg !9618
  store i64 %9, i64* %tmp, align 8, !dbg !9618
  %10 = load i64, i64* %tmp, align 8, !dbg !9618
  %and = and i64 %8, %10, !dbg !9612
  store i64 %and, i64* %__ret, align 8, !dbg !9612
  %11 = load i64, i64* %__ret, align 8, !dbg !9606
  store i64 %11, i64* %tmp2, align 8, !dbg !9619
  %12 = load i64, i64* %tmp2, align 8, !dbg !9606
  ret i64 %12, !dbg !9620
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #4 !dbg !9621 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !9622, metadata !DIExpression()), !dbg !9624
  %0 = load i64, i64* %__edi, align 8, !dbg !9624
  store i64 %0, i64* %__edi, align 8, !dbg !9624
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !9625, metadata !DIExpression()), !dbg !9624
  %1 = load i64, i64* %__esi, align 8, !dbg !9624
  store i64 %1, i64* %__esi, align 8, !dbg !9624
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !9626, metadata !DIExpression()), !dbg !9624
  %2 = load i64, i64* %__edx, align 8, !dbg !9624
  store i64 %2, i64* %__edx, align 8, !dbg !9624
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !9627, metadata !DIExpression()), !dbg !9624
  %3 = load i64, i64* %__ecx, align 8, !dbg !9624
  store i64 %3, i64* %__ecx, align 8, !dbg !9624
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !9628, metadata !DIExpression()), !dbg !9624
  %4 = load i64, i64* %__eax, align 8, !dbg !9624
  store i64 %4, i64* %__eax, align 8, !dbg !9624
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !9624
  %6 = call i64 @llvm.read_register.i64(metadata !4820), !dbg !9624
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #10, !dbg !9624, !srcloc !9629
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !9624
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !9624
  store i64 %asmresult, i64* %__eax, align 8, !dbg !9624
  call void @llvm.write_register.i64(metadata !4820, i64 %asmresult1), !dbg !9624
  ret void, !dbg !9630
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #9

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #10

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #4 !dbg !9631 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !9634, metadata !DIExpression()), !dbg !9635
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !9636, metadata !DIExpression()), !dbg !9638
  %0 = load i64, i64* %__edi, align 8, !dbg !9638
  store i64 %0, i64* %__edi, align 8, !dbg !9638
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !9639, metadata !DIExpression()), !dbg !9638
  %1 = load i64, i64* %__esi, align 8, !dbg !9638
  store i64 %1, i64* %__esi, align 8, !dbg !9638
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !9640, metadata !DIExpression()), !dbg !9638
  %2 = load i64, i64* %__edx, align 8, !dbg !9638
  store i64 %2, i64* %__edx, align 8, !dbg !9638
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !9641, metadata !DIExpression()), !dbg !9638
  %3 = load i64, i64* %__ecx, align 8, !dbg !9638
  store i64 %3, i64* %__ecx, align 8, !dbg !9638
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !9642, metadata !DIExpression()), !dbg !9638
  %4 = load i64, i64* %__eax, align 8, !dbg !9638
  store i64 %4, i64* %__eax, align 8, !dbg !9638
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !9638
  %6 = call i64 @llvm.read_register.i64(metadata !4820), !dbg !9638
  %7 = load i64, i64* %f.addr, align 8, !dbg !9638
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #10, !dbg !9638, !srcloc !9643
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !9638
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !9638
  store i64 %asmresult, i64* %__eax, align 8, !dbg !9638
  call void @llvm.write_register.i64(metadata !4820, i64 %asmresult1), !dbg !9638
  ret void, !dbg !9644
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @serial_paranoia_check(%struct.cyclades_port* %info, i8* %name, i8* %routine) #4 !dbg !9645 {
entry:
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.cyclades_port*, align 8
  %name.addr = alloca i8*, align 8
  %routine.addr = alloca i8*, align 8
  store %struct.cyclades_port* %info, %struct.cyclades_port** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info.addr, metadata !9648, metadata !DIExpression()), !dbg !9649
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9650, metadata !DIExpression()), !dbg !9651
  store i8* %routine, i8** %routine.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %routine.addr, metadata !9652, metadata !DIExpression()), !dbg !9653
  %0 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !9654
  %tobool = icmp ne %struct.cyclades_port* %0, null, !dbg !9654
  br i1 %tobool, label %if.end, label %if.then, !dbg !9656

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %name.addr, align 8, !dbg !9657
  %2 = load i8*, i8** %routine.addr, align 8, !dbg !9659
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.40, i64 0, i64 0), i8* %1, i8* %2) #12, !dbg !9660
  store i32 1, i32* %retval, align 4, !dbg !9661
  br label %return, !dbg !9661

if.end:                                           ; preds = %entry
  %3 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !9662
  %magic = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %3, i32 0, i32 0, !dbg !9664
  %4 = load i32, i32* %magic, align 8, !dbg !9664
  %cmp = icmp ne i32 %4, 17241, !dbg !9665
  br i1 %cmp, label %if.then1, label %if.end3, !dbg !9666

if.then1:                                         ; preds = %if.end
  %5 = load i8*, i8** %name.addr, align 8, !dbg !9667
  %6 = load i8*, i8** %routine.addr, align 8, !dbg !9669
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.41, i64 0, i64 0), i8* %5, i8* %6) #12, !dbg !9670
  store i32 1, i32* %retval, align 4, !dbg !9671
  br label %return, !dbg !9671

if.end3:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9672
  br label %return, !dbg !9672

return:                                           ; preds = %if.end3, %if.then1, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !9673
  ret i32 %7, !dbg !9673
}

; Function Attrs: noredzone
declare dso_local i64 @msleep_interruptible(i32) #2

; Function Attrs: noredzone
declare dso_local i32 @jiffies_to_msecs(i64) #2

; Function Attrs: noredzone
declare dso_local void @free_pages(i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cyy_change_rts_dtr(%struct.cyclades_port* %info, i32 %set, i32 %clear) #4 !dbg !9674 {
entry:
  %info.addr = alloca %struct.cyclades_port*, align 8
  %set.addr = alloca i32, align 4
  %clear.addr = alloca i32, align 4
  %card = alloca %struct.cyclades_card*, align 8
  %channel = alloca i32, align 4
  %rts = alloca i32, align 4
  %dtr = alloca i32, align 4
  %msvrr = alloca i32, align 4
  %msvrd = alloca i32, align 4
  store %struct.cyclades_port* %info, %struct.cyclades_port** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info.addr, metadata !9677, metadata !DIExpression()), !dbg !9678
  store i32 %set, i32* %set.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %set.addr, metadata !9679, metadata !DIExpression()), !dbg !9680
  store i32 %clear, i32* %clear.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %clear.addr, metadata !9681, metadata !DIExpression()), !dbg !9682
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %card, metadata !9683, metadata !DIExpression()), !dbg !9684
  %0 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !9685
  %card1 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %0, i32 0, i32 2, !dbg !9686
  %1 = load %struct.cyclades_card*, %struct.cyclades_card** %card1, align 8, !dbg !9686
  store %struct.cyclades_card* %1, %struct.cyclades_card** %card, align 8, !dbg !9684
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !9687, metadata !DIExpression()), !dbg !9688
  %2 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !9689
  %line = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %2, i32 0, i32 4, !dbg !9690
  %3 = load i32, i32* %line, align 8, !dbg !9690
  %4 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !9691
  %first_line = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %4, i32 0, i32 5, !dbg !9692
  %5 = load i32, i32* %first_line, align 8, !dbg !9692
  %sub = sub i32 %3, %5, !dbg !9693
  store i32 %sub, i32* %channel, align 4, !dbg !9688
  call void @llvm.dbg.declare(metadata i32* %rts, metadata !9694, metadata !DIExpression()), !dbg !9695
  call void @llvm.dbg.declare(metadata i32* %dtr, metadata !9696, metadata !DIExpression()), !dbg !9697
  call void @llvm.dbg.declare(metadata i32* %msvrr, metadata !9698, metadata !DIExpression()), !dbg !9699
  call void @llvm.dbg.declare(metadata i32* %msvrd, metadata !9700, metadata !DIExpression()), !dbg !9701
  %6 = load i32, i32* %channel, align 4, !dbg !9702
  %and = and i32 %6, 3, !dbg !9702
  store i32 %and, i32* %channel, align 4, !dbg !9702
  %7 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !9703
  %rtsdtr_inv = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %7, i32 0, i32 22, !dbg !9705
  %8 = load i32, i32* %rtsdtr_inv, align 8, !dbg !9705
  %tobool = icmp ne i32 %8, 0, !dbg !9703
  br i1 %tobool, label %if.then, label %if.else, !dbg !9706

if.then:                                          ; preds = %entry
  store i32 218, i32* %msvrr, align 4, !dbg !9707
  store i32 216, i32* %msvrd, align 4, !dbg !9709
  store i32 2, i32* %rts, align 4, !dbg !9710
  store i32 1, i32* %dtr, align 4, !dbg !9711
  br label %if.end, !dbg !9712

if.else:                                          ; preds = %entry
  store i32 216, i32* %msvrr, align 4, !dbg !9713
  store i32 218, i32* %msvrd, align 4, !dbg !9715
  store i32 1, i32* %rts, align 4, !dbg !9716
  store i32 2, i32* %dtr, align 4, !dbg !9717
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load i32, i32* %set.addr, align 4, !dbg !9718
  %and2 = and i32 %9, 4, !dbg !9720
  %tobool3 = icmp ne i32 %and2, 0, !dbg !9720
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !9721

if.then4:                                         ; preds = %if.end
  %10 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !9722
  %11 = load i32, i32* %channel, align 4, !dbg !9724
  %conv = trunc i32 %11 to i8, !dbg !9724
  call void @cyy_writeb(%struct.cyclades_port* %10, i32 208, i8 zeroext %conv) #11, !dbg !9725
  %12 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !9726
  %13 = load i32, i32* %msvrr, align 4, !dbg !9727
  %14 = load i32, i32* %rts, align 4, !dbg !9728
  %conv5 = trunc i32 %14 to i8, !dbg !9728
  call void @cyy_writeb(%struct.cyclades_port* %12, i32 %13, i8 zeroext %conv5) #11, !dbg !9729
  br label %if.end6, !dbg !9730

if.end6:                                          ; preds = %if.then4, %if.end
  %15 = load i32, i32* %clear.addr, align 4, !dbg !9731
  %and7 = and i32 %15, 4, !dbg !9733
  %tobool8 = icmp ne i32 %and7, 0, !dbg !9733
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !9734

if.then9:                                         ; preds = %if.end6
  %16 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !9735
  %17 = load i32, i32* %channel, align 4, !dbg !9737
  %conv10 = trunc i32 %17 to i8, !dbg !9737
  call void @cyy_writeb(%struct.cyclades_port* %16, i32 208, i8 zeroext %conv10) #11, !dbg !9738
  %18 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !9739
  %19 = load i32, i32* %msvrr, align 4, !dbg !9740
  %20 = load i32, i32* %rts, align 4, !dbg !9741
  %neg = xor i32 %20, -1, !dbg !9742
  %conv11 = trunc i32 %neg to i8, !dbg !9742
  call void @cyy_writeb(%struct.cyclades_port* %18, i32 %19, i8 zeroext %conv11) #11, !dbg !9743
  br label %if.end12, !dbg !9744

if.end12:                                         ; preds = %if.then9, %if.end6
  %21 = load i32, i32* %set.addr, align 4, !dbg !9745
  %and13 = and i32 %21, 2, !dbg !9747
  %tobool14 = icmp ne i32 %and13, 0, !dbg !9747
  br i1 %tobool14, label %if.then15, label %if.end18, !dbg !9748

if.then15:                                        ; preds = %if.end12
  %22 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !9749
  %23 = load i32, i32* %channel, align 4, !dbg !9751
  %conv16 = trunc i32 %23 to i8, !dbg !9751
  call void @cyy_writeb(%struct.cyclades_port* %22, i32 208, i8 zeroext %conv16) #11, !dbg !9752
  %24 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !9753
  %25 = load i32, i32* %msvrd, align 4, !dbg !9754
  %26 = load i32, i32* %dtr, align 4, !dbg !9755
  %conv17 = trunc i32 %26 to i8, !dbg !9755
  call void @cyy_writeb(%struct.cyclades_port* %24, i32 %25, i8 zeroext %conv17) #11, !dbg !9756
  br label %if.end18, !dbg !9757

if.end18:                                         ; preds = %if.then15, %if.end12
  %27 = load i32, i32* %clear.addr, align 4, !dbg !9758
  %and19 = and i32 %27, 2, !dbg !9760
  %tobool20 = icmp ne i32 %and19, 0, !dbg !9760
  br i1 %tobool20, label %if.then21, label %if.end25, !dbg !9761

if.then21:                                        ; preds = %if.end18
  %28 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !9762
  %29 = load i32, i32* %channel, align 4, !dbg !9764
  %conv22 = trunc i32 %29 to i8, !dbg !9764
  call void @cyy_writeb(%struct.cyclades_port* %28, i32 208, i8 zeroext %conv22) #11, !dbg !9765
  %30 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !9766
  %31 = load i32, i32* %msvrd, align 4, !dbg !9767
  %32 = load i32, i32* %dtr, align 4, !dbg !9768
  %neg23 = xor i32 %32, -1, !dbg !9769
  %conv24 = trunc i32 %neg23 to i8, !dbg !9769
  call void @cyy_writeb(%struct.cyclades_port* %30, i32 %31, i8 zeroext %conv24) #11, !dbg !9770
  br label %if.end25, !dbg !9771

if.end25:                                         ; preds = %if.then21, %if.end18
  ret void, !dbg !9772
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cyy_issue_cmd(%struct.cyclades_port* %port, i8 zeroext %cmd) #4 !dbg !9773 {
entry:
  %port.addr = alloca %struct.cyclades_port*, align 8
  %cmd.addr = alloca i8, align 1
  store %struct.cyclades_port* %port, %struct.cyclades_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %port.addr, metadata !9776, metadata !DIExpression()), !dbg !9777
  store i8 %cmd, i8* %cmd.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %cmd.addr, metadata !9778, metadata !DIExpression()), !dbg !9779
  %0 = load %struct.cyclades_port*, %struct.cyclades_port** %port.addr, align 8, !dbg !9780
  %u = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %0, i32 0, i32 3, !dbg !9781
  %cyy = bitcast %union.anon.67* %u to %struct.anon.68*, !dbg !9782
  %base_addr = getelementptr inbounds %struct.anon.68, %struct.anon.68* %cyy, i32 0, i32 0, !dbg !9783
  %1 = load i8*, i8** %base_addr, align 8, !dbg !9783
  %2 = load i8, i8* %cmd.addr, align 1, !dbg !9784
  %3 = load %struct.cyclades_port*, %struct.cyclades_port** %port.addr, align 8, !dbg !9785
  %card = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %3, i32 0, i32 2, !dbg !9786
  %4 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !9786
  %bus_index = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %4, i32 0, i32 7, !dbg !9787
  %5 = load i32, i32* %bus_index, align 8, !dbg !9787
  %call = call i32 @__cyy_issue_cmd(i8* %1, i8 zeroext %2, i32 %5) #11, !dbg !9788
  ret i32 %call, !dbg !9789
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #4 !dbg !9790 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !9795, metadata !DIExpression()), !dbg !9797
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !9799, metadata !DIExpression()), !dbg !9800
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !9801, metadata !DIExpression()), !dbg !9803
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !9805, metadata !DIExpression()), !dbg !9806
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !9807, metadata !DIExpression()), !dbg !9808
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !9809, metadata !DIExpression()), !dbg !9810
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !9811
  %1 = load i64, i64* %nr.addr, align 8, !dbg !9812
  %div = sdiv i64 %1, 64, !dbg !9812
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !9813
  %2 = bitcast i64* %add.ptr to i8*, !dbg !9811
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !9814
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !9815
  %conv.i = trunc i64 %4 to i32, !dbg !9815
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #13, !dbg !9816
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !9817
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !9817
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #13, !dbg !9817
  %7 = load i64, i64* %nr.addr, align 8, !dbg !9818
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !9819
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !9820
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #10, !dbg !9822
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !9823

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !9824
  %12 = bitcast i64* %11 to i8*, !dbg !9824
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !9824
  %shr.i = ashr i64 %13, 3, !dbg !9824
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !9824
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !9826
  %and.i = and i64 %14, 7, !dbg !9826
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !9826
  %shl.i = shl i32 1, %sh_prom.i, !dbg !9826
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #10, !dbg !9827, !srcloc !9828
  br label %arch_set_bit.exit, !dbg !9829

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !9830
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !9832
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #10, !dbg !9833, !srcloc !9834
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !9835
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tty_port_set_initialized(%struct.tty_port* %port, i1 zeroext %val) #4 !dbg !9836 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  %val.addr = alloca i8, align 1
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !9839, metadata !DIExpression()), !dbg !9840
  %frombool = zext i1 %val to i8
  store i8 %frombool, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !9841, metadata !DIExpression()), !dbg !9842
  %0 = load i8, i8* %val.addr, align 1, !dbg !9843
  %tobool = trunc i8 %0 to i1, !dbg !9843
  br i1 %tobool, label %if.then, label %if.else, !dbg !9845

if.then:                                          ; preds = %entry
  %1 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !9846
  %iflags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %1, i32 0, i32 11, !dbg !9847
  call void @set_bit(i64 0, i64* %iflags) #11, !dbg !9848
  br label %if.end, !dbg !9848

if.else:                                          ; preds = %entry
  %2 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !9849
  %iflags1 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %2, i32 0, i32 11, !dbg !9850
  call void @clear_bit(i64 0, i64* %iflags1) #11, !dbg !9851
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9852
}

; Function Attrs: noredzone
declare dso_local void @tty_port_lower_dtr_rts(%struct.tty_port*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__cyy_issue_cmd(i8* %base_addr, i8 zeroext %cmd, i32 %index) #4 !dbg !9853 {
entry:
  %retval = alloca i32, align 4
  %base_addr.addr = alloca i8*, align 8
  %cmd.addr = alloca i8, align 1
  %index.addr = alloca i32, align 4
  %ccr = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %base_addr, i8** %base_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base_addr.addr, metadata !9856, metadata !DIExpression()), !dbg !9857
  store i8 %cmd, i8* %cmd.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %cmd.addr, metadata !9858, metadata !DIExpression()), !dbg !9859
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !9860, metadata !DIExpression()), !dbg !9861
  call void @llvm.dbg.declare(metadata i8** %ccr, metadata !9862, metadata !DIExpression()), !dbg !9863
  %0 = load i8*, i8** %base_addr.addr, align 8, !dbg !9864
  %1 = load i32, i32* %index.addr, align 4, !dbg !9865
  %shl = shl i32 10, %1, !dbg !9866
  %idx.ext = sext i32 %shl to i64, !dbg !9867
  %add.ptr = getelementptr i8, i8* %0, i64 %idx.ext, !dbg !9867
  store i8* %add.ptr, i8** %ccr, align 8, !dbg !9863
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9868, metadata !DIExpression()), !dbg !9869
  store i32 0, i32* %i, align 4, !dbg !9870
  br label %for.cond, !dbg !9872

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !9873
  %cmp = icmp ult i32 %2, 100, !dbg !9875
  br i1 %cmp, label %for.body, label %for.end, !dbg !9876

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %ccr, align 8, !dbg !9877
  %call = call zeroext i8 @readb(i8* %3) #11, !dbg !9880
  %conv = zext i8 %call to i32, !dbg !9880
  %cmp1 = icmp eq i32 %conv, 0, !dbg !9881
  br i1 %cmp1, label %if.then, label %if.end, !dbg !9882

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !9883

if.end:                                           ; preds = %for.body
  call void @__const_udelay(i64 42950) #11, !dbg !9884
  br label %for.inc, !dbg !9889

for.inc:                                          ; preds = %if.end
  %4 = load i32, i32* %i, align 4, !dbg !9890
  %inc = add i32 %4, 1, !dbg !9890
  store i32 %inc, i32* %i, align 4, !dbg !9890
  br label %for.cond, !dbg !9891, !llvm.loop !9892

for.end:                                          ; preds = %if.then, %for.cond
  %5 = load i32, i32* %i, align 4, !dbg !9894
  %cmp3 = icmp eq i32 %5, 100, !dbg !9896
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !9897

if.then5:                                         ; preds = %for.end
  store i32 -1, i32* %retval, align 4, !dbg !9898
  br label %return, !dbg !9898

if.end6:                                          ; preds = %for.end
  br label %do.body, !dbg !9899

do.body:                                          ; preds = %if.end6
  %6 = load i8, i8* %cmd.addr, align 1, !dbg !9900
  %7 = load i8*, i8** %ccr, align 8, !dbg !9900
  call void @writeb(i8 zeroext %6, i8* %7) #11, !dbg !9900
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9900, !srcloc !9902
  br label %do.end, !dbg !9900

do.end:                                           ; preds = %do.body
  store i32 0, i32* %retval, align 4, !dbg !9903
  br label %return, !dbg !9903

return:                                           ; preds = %do.end, %if.then5
  %8 = load i32, i32* %retval, align 4, !dbg !9904
  ret i32 %8, !dbg !9904
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #4 !dbg !9905 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !9906, metadata !DIExpression()), !dbg !9907
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !9908, metadata !DIExpression()), !dbg !9909
  ret i1 true, !dbg !9910
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #4 !dbg !9911 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !9912, metadata !DIExpression()), !dbg !9914
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !9916, metadata !DIExpression()), !dbg !9917
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !9801, metadata !DIExpression()), !dbg !9918
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !9805, metadata !DIExpression()), !dbg !9920
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !9921, metadata !DIExpression()), !dbg !9922
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !9923, metadata !DIExpression()), !dbg !9924
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !9925
  %1 = load i64, i64* %nr.addr, align 8, !dbg !9926
  %div = sdiv i64 %1, 64, !dbg !9926
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !9927
  %2 = bitcast i64* %add.ptr to i8*, !dbg !9925
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !9928
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !9929
  %conv.i = trunc i64 %4 to i32, !dbg !9929
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #13, !dbg !9930
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !9931
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !9931
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #13, !dbg !9931
  %7 = load i64, i64* %nr.addr, align 8, !dbg !9932
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !9933
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !9934
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #10, !dbg !9936
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !9937

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !9938
  %12 = bitcast i64* %11 to i8*, !dbg !9938
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !9938
  %shr.i = ashr i64 %13, 3, !dbg !9938
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !9938
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !9940
  %and.i = and i64 %14, 7, !dbg !9940
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !9940
  %shl.i = shl i32 1, %sh_prom.i, !dbg !9940
  %neg.i = xor i32 %shl.i, -1, !dbg !9941
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #10, !dbg !9942, !srcloc !9943
  br label %arch_clear_bit.exit, !dbg !9944

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !9945
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !9947
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #10, !dbg !9948, !srcloc !9949
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !9950
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cyy_carrier_raised(%struct.tty_port* %port) #4 !dbg !9951 {
entry:
  %lock.addr.i27 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i27, metadata !9013, metadata !DIExpression()), !dbg !9952
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9019, metadata !DIExpression()), !dbg !9954
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7101, metadata !DIExpression()), !dbg !9955
  %port.addr = alloca %struct.tty_port*, align 8
  %info = alloca %struct.cyclades_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.cyclades_port*, align 8
  %cinfo = alloca %struct.cyclades_card*, align 8
  %flags = alloca i64, align 8
  %channel = alloca i32, align 4
  %cd = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp3 = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !9962, metadata !DIExpression()), !dbg !9963
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info, metadata !9964, metadata !DIExpression()), !dbg !9965
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9966, metadata !DIExpression()), !dbg !9968
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !9968
  %1 = bitcast %struct.tty_port* %0 to i8*, !dbg !9968
  store i8* %1, i8** %__mptr, align 8, !dbg !9968
  br label %do.body, !dbg !9968

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9969

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9968
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !9968
  %3 = bitcast i8* %add.ptr to %struct.cyclades_port*, !dbg !9968
  store %struct.cyclades_port* %3, %struct.cyclades_port** %tmp, align 8, !dbg !9969
  %4 = load %struct.cyclades_port*, %struct.cyclades_port** %tmp, align 8, !dbg !9968
  store %struct.cyclades_port* %4, %struct.cyclades_port** %info, align 8, !dbg !9965
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %cinfo, metadata !9971, metadata !DIExpression()), !dbg !9972
  %5 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !9973
  %card = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %5, i32 0, i32 2, !dbg !9974
  %6 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !9974
  store %struct.cyclades_card* %6, %struct.cyclades_card** %cinfo, align 8, !dbg !9972
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9975, metadata !DIExpression()), !dbg !9976
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !9977, metadata !DIExpression()), !dbg !9978
  %7 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !9979
  %line = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %7, i32 0, i32 4, !dbg !9980
  %8 = load i32, i32* %line, align 8, !dbg !9980
  %9 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !9981
  %first_line = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %9, i32 0, i32 5, !dbg !9982
  %10 = load i32, i32* %first_line, align 8, !dbg !9982
  %sub = sub i32 %8, %10, !dbg !9983
  store i32 %sub, i32* %channel, align 4, !dbg !9978
  call void @llvm.dbg.declare(metadata i32* %cd, metadata !9984, metadata !DIExpression()), !dbg !9985
  br label %do.body1, !dbg !9986

do.body1:                                         ; preds = %do.end
  br label %do.body2, !dbg !9987

do.body2:                                         ; preds = %do.body1
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9988, metadata !DIExpression()), !dbg !9990
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9991, metadata !DIExpression()), !dbg !9990
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9990
  %conv = zext i1 %cmp to i32, !dbg !9990
  store i32 1, i32* %tmp3, align 4, !dbg !9990
  %11 = load i32, i32* %tmp3, align 4, !dbg !9990
  br label %do.body4, !dbg !9992

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !9993

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !9994

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !9996, metadata !DIExpression()), !dbg !9999
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !10000, metadata !DIExpression()), !dbg !9999
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !9999
  %conv10 = zext i1 %cmp9 to i32, !dbg !9999
  store i32 1, i32* %tmp11, align 4, !dbg !9999
  %12 = load i32, i32* %tmp11, align 4, !dbg !9999
  %call = call i64 @arch_local_irq_save() #11, !dbg !10001
  store i64 %call, i64* %flags, align 8, !dbg !10001
  br label %do.end12, !dbg !10001

do.end12:                                         ; preds = %do.body6
  br label %do.end13, !dbg !9994

do.end13:                                         ; preds = %do.end12
  br label %do.body14, !dbg !9993

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10002, !srcloc !10003
  br label %do.body15, !dbg !10002

do.body15:                                        ; preds = %do.body14
  %13 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !10004
  %card_lock = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %13, i32 0, i32 10, !dbg !10004
  store %struct.spinlock* %card_lock, %struct.spinlock** %lock.addr.i, align 8
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10005
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !10006
  %rlock.i = bitcast %union.anon.0* %15 to %struct.raw_spinlock*, !dbg !10006
  br label %do.end17, !dbg !10004

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !10002

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !9993

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !9992

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !9987

do.end21:                                         ; preds = %do.end20
  %16 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10007
  %17 = load i32, i32* %channel, align 4, !dbg !10008
  %and = and i32 %17, 3, !dbg !10009
  %conv22 = trunc i32 %and to i8, !dbg !10008
  call void @cyy_writeb(%struct.cyclades_port* %16, i32 208, i8 zeroext %conv22) #11, !dbg !10010
  %18 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10011
  %call23 = call zeroext i8 @cyy_readb(%struct.cyclades_port* %18, i32 216) #11, !dbg !10012
  %conv24 = zext i8 %call23 to i32, !dbg !10012
  %and25 = and i32 %conv24, 16, !dbg !10013
  store i32 %and25, i32* %cd, align 4, !dbg !10014
  %19 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !10015
  %card_lock26 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %19, i32 0, i32 10, !dbg !10016
  %20 = load i64, i64* %flags, align 8, !dbg !10017
  store %struct.spinlock* %card_lock26, %struct.spinlock** %lock.addr.i27, align 8
  store i64 %20, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !217, metadata !9119, metadata !DIExpression()) #10, !dbg !10018
  call void @llvm.dbg.declare(metadata !217, metadata !9123, metadata !DIExpression()) #10, !dbg !10018
  store i32 1, i32* %tmp.i, align 4, !dbg !10018
  %21 = load i32, i32* %tmp.i, align 4, !dbg !10018
  call void @llvm.dbg.declare(metadata !217, metadata !9124, metadata !DIExpression()) #10, !dbg !10019
  call void @llvm.dbg.declare(metadata !217, metadata !9130, metadata !DIExpression()) #10, !dbg !10019
  store i32 1, i32* %tmp8.i, align 4, !dbg !10019
  %22 = load i32, i32* %tmp8.i, align 4, !dbg !10019
  %23 = load i64, i64* %flags.addr.i, align 8, !dbg !10020
  call void @arch_local_irq_restore(i64 %23) #13, !dbg !10020
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10021, !srcloc !9134
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i27, align 8, !dbg !10022
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !10022
  %rlock.i28 = bitcast %union.anon.0* %25 to %struct.raw_spinlock*, !dbg !10022
  %26 = load i32, i32* %cd, align 4, !dbg !10023
  ret i32 %26, !dbg !10024
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cyy_dtr_rts(%struct.tty_port* %port, i32 %raise) #4 !dbg !10025 {
entry:
  %lock.addr.i25 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i25, metadata !9013, metadata !DIExpression()), !dbg !10026
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9019, metadata !DIExpression()), !dbg !10028
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7101, metadata !DIExpression()), !dbg !10029
  %port.addr = alloca %struct.tty_port*, align 8
  %raise.addr = alloca i32, align 4
  %info = alloca %struct.cyclades_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.cyclades_port*, align 8
  %cinfo = alloca %struct.cyclades_card*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp3 = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !10036, metadata !DIExpression()), !dbg !10037
  store i32 %raise, i32* %raise.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %raise.addr, metadata !10038, metadata !DIExpression()), !dbg !10039
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info, metadata !10040, metadata !DIExpression()), !dbg !10041
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10042, metadata !DIExpression()), !dbg !10044
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !10044
  %1 = bitcast %struct.tty_port* %0 to i8*, !dbg !10044
  store i8* %1, i8** %__mptr, align 8, !dbg !10044
  br label %do.body, !dbg !10044

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10045

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10044
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !10044
  %3 = bitcast i8* %add.ptr to %struct.cyclades_port*, !dbg !10044
  store %struct.cyclades_port* %3, %struct.cyclades_port** %tmp, align 8, !dbg !10045
  %4 = load %struct.cyclades_port*, %struct.cyclades_port** %tmp, align 8, !dbg !10044
  store %struct.cyclades_port* %4, %struct.cyclades_port** %info, align 8, !dbg !10041
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %cinfo, metadata !10047, metadata !DIExpression()), !dbg !10048
  %5 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10049
  %card = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %5, i32 0, i32 2, !dbg !10050
  %6 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !10050
  store %struct.cyclades_card* %6, %struct.cyclades_card** %cinfo, align 8, !dbg !10048
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10051, metadata !DIExpression()), !dbg !10052
  br label %do.body1, !dbg !10053

do.body1:                                         ; preds = %do.end
  br label %do.body2, !dbg !10054

do.body2:                                         ; preds = %do.body1
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10055, metadata !DIExpression()), !dbg !10057
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10058, metadata !DIExpression()), !dbg !10057
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !10057
  %conv = zext i1 %cmp to i32, !dbg !10057
  store i32 1, i32* %tmp3, align 4, !dbg !10057
  %7 = load i32, i32* %tmp3, align 4, !dbg !10057
  br label %do.body4, !dbg !10059

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !10060

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !10061

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !10063, metadata !DIExpression()), !dbg !10066
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !10067, metadata !DIExpression()), !dbg !10066
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !10066
  %conv10 = zext i1 %cmp9 to i32, !dbg !10066
  store i32 1, i32* %tmp11, align 4, !dbg !10066
  %8 = load i32, i32* %tmp11, align 4, !dbg !10066
  %call = call i64 @arch_local_irq_save() #11, !dbg !10068
  store i64 %call, i64* %flags, align 8, !dbg !10068
  br label %do.end12, !dbg !10068

do.end12:                                         ; preds = %do.body6
  br label %do.end13, !dbg !10061

do.end13:                                         ; preds = %do.end12
  br label %do.body14, !dbg !10060

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10069, !srcloc !10070
  br label %do.body15, !dbg !10069

do.body15:                                        ; preds = %do.body14
  %9 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !10071
  %card_lock = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %9, i32 0, i32 10, !dbg !10071
  store %struct.spinlock* %card_lock, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10072
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !10073
  %rlock.i = bitcast %union.anon.0* %11 to %struct.raw_spinlock*, !dbg !10073
  br label %do.end17, !dbg !10071

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !10069

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !10060

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !10059

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !10054

do.end21:                                         ; preds = %do.end20
  %12 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10074
  %13 = load i32, i32* %raise.addr, align 4, !dbg !10075
  %tobool = icmp ne i32 %13, 0, !dbg !10075
  %14 = zext i1 %tobool to i64, !dbg !10075
  %cond = select i1 %tobool, i32 6, i32 0, !dbg !10075
  %15 = load i32, i32* %raise.addr, align 4, !dbg !10076
  %tobool22 = icmp ne i32 %15, 0, !dbg !10076
  %16 = zext i1 %tobool22 to i64, !dbg !10076
  %cond23 = select i1 %tobool22, i32 0, i32 6, !dbg !10076
  call void @cyy_change_rts_dtr(%struct.cyclades_port* %12, i32 %cond, i32 %cond23) #11, !dbg !10077
  %17 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !10078
  %card_lock24 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %17, i32 0, i32 10, !dbg !10079
  %18 = load i64, i64* %flags, align 8, !dbg !10080
  store %struct.spinlock* %card_lock24, %struct.spinlock** %lock.addr.i25, align 8
  store i64 %18, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !217, metadata !9119, metadata !DIExpression()) #10, !dbg !10081
  call void @llvm.dbg.declare(metadata !217, metadata !9123, metadata !DIExpression()) #10, !dbg !10081
  store i32 1, i32* %tmp.i, align 4, !dbg !10081
  %19 = load i32, i32* %tmp.i, align 4, !dbg !10081
  call void @llvm.dbg.declare(metadata !217, metadata !9124, metadata !DIExpression()) #10, !dbg !10082
  call void @llvm.dbg.declare(metadata !217, metadata !9130, metadata !DIExpression()) #10, !dbg !10082
  store i32 1, i32* %tmp8.i, align 4, !dbg !10082
  %20 = load i32, i32* %tmp8.i, align 4, !dbg !10082
  %21 = load i64, i64* %flags.addr.i, align 8, !dbg !10083
  call void @arch_local_irq_restore(i64 %21) #13, !dbg !10083
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10084, !srcloc !9134
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i25, align 8, !dbg !10085
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !10085
  %rlock.i26 = bitcast %union.anon.0* %23 to %struct.raw_spinlock*, !dbg !10085
  ret void, !dbg !10086
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hlist_unhashed_lockless(%struct.hlist_node* %h) #4 !dbg !10087 {
entry:
  %h.addr = alloca %struct.hlist_node*, align 8
  %tmp = alloca %struct.hlist_node**, align 8
  store %struct.hlist_node* %h, %struct.hlist_node** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %h.addr, metadata !10093, metadata !DIExpression()), !dbg !10094
  br label %do.body, !dbg !10095

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10097

do.end:                                           ; preds = %do.body
  %0 = load %struct.hlist_node*, %struct.hlist_node** %h.addr, align 8, !dbg !10095
  %pprev = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %0, i32 0, i32 1, !dbg !10095
  %1 = load volatile %struct.hlist_node**, %struct.hlist_node*** %pprev, align 8, !dbg !10095
  store %struct.hlist_node** %1, %struct.hlist_node*** %tmp, align 8, !dbg !10097
  %2 = load %struct.hlist_node**, %struct.hlist_node*** %tmp, align 8, !dbg !10095
  %tobool = icmp ne %struct.hlist_node** %2, null, !dbg !10099
  %lnot = xor i1 %tobool, true, !dbg !10099
  %lnot.ext = zext i1 %lnot to i32, !dbg !10099
  ret i32 %lnot.ext, !dbg !10100
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #4 !dbg !10101 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10104, metadata !DIExpression()), !dbg !10105
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10106, metadata !DIExpression()), !dbg !10107
  %0 = load i8*, i8** %data.addr, align 8, !dbg !10108
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10109
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !10110
  store i8* %0, i8** %driver_data, align 8, !dbg !10111
  ret void, !dbg !10112
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_get_drvdata(%struct.pci_dev* %pdev) #4 !dbg !10113 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !10116, metadata !DIExpression()), !dbg !10117
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10118
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !10119
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #11, !dbg !10120
  ret i8* %call, !dbg !10121
}

; Function Attrs: noredzone
declare dso_local void @tty_port_destroy(%struct.tty_port*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #4 !dbg !10122 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10125, metadata !DIExpression()), !dbg !10126
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10127
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !10128
  %1 = load i8*, i8** %driver_data, align 8, !dbg !10128
  ret i8* %1, !dbg !10129
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.tty_driver* @alloc_tty_driver(i32 %lines) #4 !dbg !10130 {
entry:
  %retval = alloca %struct.tty_driver*, align 8
  %lines.addr = alloca i32, align 4
  %ret = alloca %struct.tty_driver*, align 8
  store i32 %lines, i32* %lines.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lines.addr, metadata !10133, metadata !DIExpression()), !dbg !10134
  call void @llvm.dbg.declare(metadata %struct.tty_driver** %ret, metadata !10135, metadata !DIExpression()), !dbg !10136
  %0 = load i32, i32* %lines.addr, align 4, !dbg !10137
  %call = call %struct.tty_driver* @__tty_alloc_driver(i32 %0, %struct.module* null, i64 0) #11, !dbg !10137
  store %struct.tty_driver* %call, %struct.tty_driver** %ret, align 8, !dbg !10136
  %1 = load %struct.tty_driver*, %struct.tty_driver** %ret, align 8, !dbg !10138
  %2 = bitcast %struct.tty_driver* %1 to i8*, !dbg !10138
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #11, !dbg !10140
  br i1 %call1, label %if.then, label %if.end, !dbg !10141

if.then:                                          ; preds = %entry
  store %struct.tty_driver* null, %struct.tty_driver** %retval, align 8, !dbg !10142
  br label %return, !dbg !10142

if.end:                                           ; preds = %entry
  %3 = load %struct.tty_driver*, %struct.tty_driver** %ret, align 8, !dbg !10143
  store %struct.tty_driver* %3, %struct.tty_driver** %retval, align 8, !dbg !10144
  br label %return, !dbg !10144

return:                                           ; preds = %if.end, %if.then
  %4 = load %struct.tty_driver*, %struct.tty_driver** %retval, align 8, !dbg !10145
  ret %struct.tty_driver* %4, !dbg !10145
}

; Function Attrs: noredzone
declare dso_local void @tty_set_operations(%struct.tty_driver*, %struct.tty_operations*) #2

; Function Attrs: noredzone
declare dso_local i32 @tty_register_driver(%struct.tty_driver*) #2

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @cy_detect_isa() #0 section ".init.text" !dbg !10146 {
entry:
  ret i32 0, !dbg !10147
}

; Function Attrs: noredzone
declare dso_local i32 @__pci_register_driver(%struct.pci_driver*, %struct.module*, i8*) #2

; Function Attrs: noredzone
declare dso_local %struct.tty_driver* @__tty_alloc_driver(i32, %struct.module*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #4 !dbg !10148 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !10152, metadata !DIExpression()), !dbg !10153
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !10154
  %1 = ptrtoint i8* %0 to i64, !dbg !10154
  %2 = inttoptr i64 %1 to i8*, !dbg !10154
  %3 = ptrtoint i8* %2 to i64, !dbg !10154
  %cmp = icmp uge i64 %3, -4095, !dbg !10154
  %lnot = xor i1 %cmp, true, !dbg !10154
  %lnot1 = xor i1 %lnot, true, !dbg !10154
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10154
  %conv = sext i32 %lnot.ext to i64, !dbg !10154
  %tobool = icmp ne i64 %conv, 0, !dbg !10154
  ret i1 %tobool, !dbg !10155
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cy_open(%struct.tty_struct* %tty, %struct.file* %filp) #4 !dbg !10156 {
entry:
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %filp.addr = alloca %struct.file*, align 8
  %info = alloca %struct.cyclades_port*, align 8
  %i = alloca i32, align 4
  %line = alloca i32, align 4
  %retval1 = alloca i32, align 4
  %cinfo = alloca %struct.cyclades_card*, align 8
  %firm_id = alloca %struct.FIRM_ID*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !10157, metadata !DIExpression()), !dbg !10158
  store %struct.file* %filp, %struct.file** %filp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filp.addr, metadata !10159, metadata !DIExpression()), !dbg !10160
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info, metadata !10161, metadata !DIExpression()), !dbg !10162
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10163, metadata !DIExpression()), !dbg !10164
  call void @llvm.dbg.declare(metadata i32* %line, metadata !10165, metadata !DIExpression()), !dbg !10166
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10167
  %index = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 5, !dbg !10168
  %1 = load i32, i32* %index, align 8, !dbg !10168
  store i32 %1, i32* %line, align 4, !dbg !10166
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !10169, metadata !DIExpression()), !dbg !10170
  store i32 0, i32* %i, align 4, !dbg !10171
  br label %for.cond, !dbg !10173

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !10174
  %cmp = icmp ult i32 %2, 4, !dbg !10176
  br i1 %cmp, label %for.body, label %for.end, !dbg !10177

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %line, align 4, !dbg !10178
  %4 = load i32, i32* %i, align 4, !dbg !10180
  %idxprom = zext i32 %4 to i64, !dbg !10181
  %arrayidx = getelementptr [4 x %struct.cyclades_card], [4 x %struct.cyclades_card]* @cy_card, i64 0, i64 %idxprom, !dbg !10181
  %first_line = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %arrayidx, i32 0, i32 5, !dbg !10182
  %5 = load i32, i32* %first_line, align 16, !dbg !10182
  %6 = load i32, i32* %i, align 4, !dbg !10183
  %idxprom2 = zext i32 %6 to i64, !dbg !10184
  %arrayidx3 = getelementptr [4 x %struct.cyclades_card], [4 x %struct.cyclades_card]* @cy_card, i64 0, i64 %idxprom2, !dbg !10184
  %nports = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %arrayidx3, i32 0, i32 6, !dbg !10185
  %7 = load i32, i32* %nports, align 4, !dbg !10185
  %add = add i32 %5, %7, !dbg !10186
  %cmp4 = icmp ult i32 %3, %add, !dbg !10187
  br i1 %cmp4, label %land.lhs.true, label %if.end, !dbg !10188

land.lhs.true:                                    ; preds = %for.body
  %8 = load i32, i32* %line, align 4, !dbg !10189
  %9 = load i32, i32* %i, align 4, !dbg !10190
  %idxprom5 = zext i32 %9 to i64, !dbg !10191
  %arrayidx6 = getelementptr [4 x %struct.cyclades_card], [4 x %struct.cyclades_card]* @cy_card, i64 0, i64 %idxprom5, !dbg !10191
  %first_line7 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %arrayidx6, i32 0, i32 5, !dbg !10192
  %10 = load i32, i32* %first_line7, align 16, !dbg !10192
  %cmp8 = icmp uge i32 %8, %10, !dbg !10193
  br i1 %cmp8, label %if.then, label %if.end, !dbg !10194

if.then:                                          ; preds = %land.lhs.true
  br label %for.end, !dbg !10195

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !10192

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %i, align 4, !dbg !10196
  %inc = add i32 %11, 1, !dbg !10196
  store i32 %inc, i32* %i, align 4, !dbg !10196
  br label %for.cond, !dbg !10197, !llvm.loop !10198

for.end:                                          ; preds = %if.then, %for.cond
  %12 = load i32, i32* %i, align 4, !dbg !10200
  %cmp9 = icmp uge i32 %12, 4, !dbg !10202
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !10203

if.then10:                                        ; preds = %for.end
  store i32 -19, i32* %retval, align 4, !dbg !10204
  br label %return, !dbg !10204

if.end11:                                         ; preds = %for.end
  %13 = load i32, i32* %i, align 4, !dbg !10205
  %idxprom12 = zext i32 %13 to i64, !dbg !10206
  %arrayidx13 = getelementptr [4 x %struct.cyclades_card], [4 x %struct.cyclades_card]* @cy_card, i64 0, i64 %idxprom12, !dbg !10206
  %ports = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %arrayidx13, i32 0, i32 11, !dbg !10207
  %14 = load %struct.cyclades_port*, %struct.cyclades_port** %ports, align 8, !dbg !10207
  %15 = load i32, i32* %line, align 4, !dbg !10208
  %16 = load i32, i32* %i, align 4, !dbg !10209
  %idxprom14 = zext i32 %16 to i64, !dbg !10210
  %arrayidx15 = getelementptr [4 x %struct.cyclades_card], [4 x %struct.cyclades_card]* @cy_card, i64 0, i64 %idxprom14, !dbg !10210
  %first_line16 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %arrayidx15, i32 0, i32 5, !dbg !10211
  %17 = load i32, i32* %first_line16, align 16, !dbg !10211
  %sub = sub i32 %15, %17, !dbg !10212
  %idxprom17 = zext i32 %sub to i64, !dbg !10206
  %arrayidx18 = getelementptr %struct.cyclades_port, %struct.cyclades_port* %14, i64 %idxprom17, !dbg !10206
  store %struct.cyclades_port* %arrayidx18, %struct.cyclades_port** %info, align 8, !dbg !10213
  %18 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10214
  %line19 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %18, i32 0, i32 4, !dbg !10216
  %19 = load i32, i32* %line19, align 8, !dbg !10216
  %cmp20 = icmp slt i32 %19, 0, !dbg !10217
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !10218

if.then21:                                        ; preds = %if.end11
  store i32 -19, i32* %retval, align 4, !dbg !10219
  br label %return, !dbg !10219

if.end22:                                         ; preds = %if.end11
  %20 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10220
  %card = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %20, i32 0, i32 2, !dbg !10222
  %21 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !10222
  %call = call zeroext i1 @cy_is_Z(%struct.cyclades_card* %21) #11, !dbg !10223
  br i1 %call, label %if.then23, label %if.end48, !dbg !10224

if.then23:                                        ; preds = %if.end22
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %cinfo, metadata !10225, metadata !DIExpression()), !dbg !10227
  %22 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10228
  %card24 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %22, i32 0, i32 2, !dbg !10229
  %23 = load %struct.cyclades_card*, %struct.cyclades_card** %card24, align 8, !dbg !10229
  store %struct.cyclades_card* %23, %struct.cyclades_card** %cinfo, align 8, !dbg !10227
  call void @llvm.dbg.declare(metadata %struct.FIRM_ID** %firm_id, metadata !10230, metadata !DIExpression()), !dbg !10231
  %24 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !10232
  %base_addr = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %24, i32 0, i32 0, !dbg !10233
  %25 = load i8*, i8** %base_addr, align 8, !dbg !10233
  %add.ptr = getelementptr i8, i8* %25, i64 384, !dbg !10234
  %26 = bitcast i8* %add.ptr to %struct.FIRM_ID*, !dbg !10232
  store %struct.FIRM_ID* %26, %struct.FIRM_ID** %firm_id, align 8, !dbg !10231
  %27 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !10235
  %call25 = call zeroext i1 @cyz_is_loaded(%struct.cyclades_card* %27) #11, !dbg !10237
  br i1 %call25, label %if.end38, label %if.then26, !dbg !10238

if.then26:                                        ; preds = %if.then23
  %28 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !10239
  %hw_ver = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %28, i32 0, i32 9, !dbg !10242
  %29 = load i32, i32* %hw_ver, align 8, !dbg !10242
  %cmp27 = icmp eq i32 %29, 2, !dbg !10243
  br i1 %cmp27, label %land.lhs.true28, label %if.else, !dbg !10244

land.lhs.true28:                                  ; preds = %if.then26
  %30 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !10245
  %call29 = call zeroext i1 @cyz_fpga_loaded(%struct.cyclades_card* %30) #11, !dbg !10246
  br i1 %call29, label %land.lhs.true30, label %if.else, !dbg !10247

land.lhs.true30:                                  ; preds = %land.lhs.true28
  %31 = load %struct.FIRM_ID*, %struct.FIRM_ID** %firm_id, align 8, !dbg !10248
  %signature = getelementptr inbounds %struct.FIRM_ID, %struct.FIRM_ID* %31, i32 0, i32 0, !dbg !10249
  %32 = bitcast i32* %signature to i8*, !dbg !10250
  %call31 = call i32 @readl(i8* %32) #11, !dbg !10251
  %conv = zext i32 %call31 to i64, !dbg !10251
  %cmp32 = icmp eq i64 %conv, 1498438492, !dbg !10252
  br i1 %cmp32, label %if.then34, label %if.else, !dbg !10253

if.then34:                                        ; preds = %land.lhs.true30
  %call35 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.45, i64 0, i64 0)) #12, !dbg !10254
  br label %if.end37, !dbg !10256

if.else:                                          ; preds = %land.lhs.true30, %land.lhs.true28, %if.then26
  %call36 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.46, i64 0, i64 0)) #12, !dbg !10257
  br label %if.end37

if.end37:                                         ; preds = %if.else, %if.then34
  store i32 -19, i32* %retval, align 4, !dbg !10259
  br label %return, !dbg !10259

if.end38:                                         ; preds = %if.then23
  %33 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10260
  %line39 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %33, i32 0, i32 4, !dbg !10262
  %34 = load i32, i32* %line39, align 8, !dbg !10262
  %35 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !10263
  %first_line40 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %35, i32 0, i32 5, !dbg !10264
  %36 = load i32, i32* %first_line40, align 8, !dbg !10264
  %37 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !10265
  %nports41 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %37, i32 0, i32 6, !dbg !10266
  %38 = load i32, i32* %nports41, align 4, !dbg !10266
  %add42 = add i32 %36, %38, !dbg !10267
  %sub43 = sub i32 %add42, 1, !dbg !10268
  %cmp44 = icmp ugt i32 %34, %sub43, !dbg !10269
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !10270

if.then46:                                        ; preds = %if.end38
  store i32 -19, i32* %retval, align 4, !dbg !10271
  br label %return, !dbg !10271

if.end47:                                         ; preds = %if.end38
  br label %if.end48, !dbg !10272

if.end48:                                         ; preds = %if.end47, %if.end22
  %39 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10273
  %40 = bitcast %struct.cyclades_port* %39 to i8*, !dbg !10273
  %41 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10274
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %41, i32 0, i32 37, !dbg !10275
  store i8* %40, i8** %driver_data, align 8, !dbg !10276
  %42 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10277
  %43 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10279
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %43, i32 0, i32 18, !dbg !10280
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !10279
  %call49 = call i32 @serial_paranoia_check(%struct.cyclades_port* %42, i8* %arraydecay, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i64 0, i64 0)) #11, !dbg !10281
  %tobool = icmp ne i32 %call49, 0, !dbg !10281
  br i1 %tobool, label %if.then50, label %if.end51, !dbg !10282

if.then50:                                        ; preds = %if.end48
  store i32 -19, i32* %retval, align 4, !dbg !10283
  br label %return, !dbg !10283

if.end51:                                         ; preds = %if.end48
  %44 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10284
  %port = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %44, i32 0, i32 1, !dbg !10285
  %count = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 7, !dbg !10286
  %45 = load i32, i32* %count, align 4, !dbg !10287
  %inc52 = add i32 %45, 1, !dbg !10287
  store i32 %inc52, i32* %count, align 4, !dbg !10287
  %46 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10288
  %47 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10289
  %call53 = call i32 @cy_startup(%struct.cyclades_port* %46, %struct.tty_struct* %47) #11, !dbg !10290
  store i32 %call53, i32* %retval1, align 4, !dbg !10291
  %48 = load i32, i32* %retval1, align 4, !dbg !10292
  %tobool54 = icmp ne i32 %48, 0, !dbg !10292
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !10294

if.then55:                                        ; preds = %if.end51
  %49 = load i32, i32* %retval1, align 4, !dbg !10295
  store i32 %49, i32* %retval, align 4, !dbg !10296
  br label %return, !dbg !10296

if.end56:                                         ; preds = %if.end51
  %50 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10297
  %port57 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %50, i32 0, i32 1, !dbg !10298
  %51 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10299
  %52 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !10300
  %call58 = call i32 @tty_port_block_til_ready(%struct.tty_port* %port57, %struct.tty_struct* %51, %struct.file* %52) #11, !dbg !10301
  store i32 %call58, i32* %retval1, align 4, !dbg !10302
  %53 = load i32, i32* %retval1, align 4, !dbg !10303
  %tobool59 = icmp ne i32 %53, 0, !dbg !10303
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !10305

if.then60:                                        ; preds = %if.end56
  %54 = load i32, i32* %retval1, align 4, !dbg !10306
  store i32 %54, i32* %retval, align 4, !dbg !10308
  br label %return, !dbg !10308

if.end61:                                         ; preds = %if.end56
  %55 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10309
  %throttle = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %55, i32 0, i32 38, !dbg !10310
  store i32 0, i32* %throttle, align 8, !dbg !10311
  %56 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10312
  %port62 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %56, i32 0, i32 1, !dbg !10313
  %57 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10314
  call void @tty_port_tty_set(%struct.tty_port* %port62, %struct.tty_struct* %57) #11, !dbg !10315
  store i32 0, i32* %retval, align 4, !dbg !10316
  br label %return, !dbg !10316

return:                                           ; preds = %if.end61, %if.then60, %if.then55, %if.then50, %if.then46, %if.end37, %if.then21, %if.then10
  %58 = load i32, i32* %retval, align 4, !dbg !10317
  ret i32 %58, !dbg !10317
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cy_close(%struct.tty_struct* %tty, %struct.file* %filp) #4 !dbg !10318 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %filp.addr = alloca %struct.file*, align 8
  %info = alloca %struct.cyclades_port*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !10319, metadata !DIExpression()), !dbg !10320
  store %struct.file* %filp, %struct.file** %filp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filp.addr, metadata !10321, metadata !DIExpression()), !dbg !10322
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info, metadata !10323, metadata !DIExpression()), !dbg !10324
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10325
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !10326
  %1 = load i8*, i8** %driver_data, align 8, !dbg !10326
  %2 = bitcast i8* %1 to %struct.cyclades_port*, !dbg !10325
  store %struct.cyclades_port* %2, %struct.cyclades_port** %info, align 8, !dbg !10324
  %3 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10327
  %tobool = icmp ne %struct.cyclades_port* %3, null, !dbg !10327
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !10329

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10330
  %5 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10331
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %5, i32 0, i32 18, !dbg !10332
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !10331
  %call = call i32 @serial_paranoia_check(%struct.cyclades_port* %4, i8* %arraydecay, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i64 0, i64 0)) #11, !dbg !10333
  %tobool1 = icmp ne i32 %call, 0, !dbg !10333
  br i1 %tobool1, label %if.then, label %if.end, !dbg !10334

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !10335

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10336
  %port = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %6, i32 0, i32 1, !dbg !10337
  %7 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10338
  %8 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !10339
  call void @tty_port_close(%struct.tty_port* %port, %struct.tty_struct* %7, %struct.file* %8) #11, !dbg !10340
  br label %return, !dbg !10341

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !10341
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cy_write(%struct.tty_struct* %tty, i8* %buf, i32 %count) #4 !dbg !10342 {
entry:
  %lock.addr.i69 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i69, metadata !9013, metadata !DIExpression()), !dbg !10343
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9019, metadata !DIExpression()), !dbg !10345
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7101, metadata !DIExpression()), !dbg !10346
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i32, align 4
  %info = alloca %struct.cyclades_port*, align 8
  %flags = alloca i64, align 8
  %c = alloca i32, align 4
  %ret = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  %__UNIQUE_ID___x243 = alloca i32, align 4
  %__UNIQUE_ID___y244 = alloca i32, align 4
  %tmp26 = alloca i32, align 4
  %__UNIQUE_ID___x245 = alloca i32, align 4
  %__UNIQUE_ID___y246 = alloca i32, align 4
  %tmp32 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !10353, metadata !DIExpression()), !dbg !10354
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10355, metadata !DIExpression()), !dbg !10356
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !10357, metadata !DIExpression()), !dbg !10358
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info, metadata !10359, metadata !DIExpression()), !dbg !10360
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10361
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !10362
  %1 = load i8*, i8** %driver_data, align 8, !dbg !10362
  %2 = bitcast i8* %1 to %struct.cyclades_port*, !dbg !10361
  store %struct.cyclades_port* %2, %struct.cyclades_port** %info, align 8, !dbg !10360
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10363, metadata !DIExpression()), !dbg !10364
  call void @llvm.dbg.declare(metadata i32* %c, metadata !10365, metadata !DIExpression()), !dbg !10366
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10367, metadata !DIExpression()), !dbg !10368
  store i32 0, i32* %ret, align 4, !dbg !10368
  %3 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10369
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10371
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 18, !dbg !10372
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !10371
  %call = call i32 @serial_paranoia_check(%struct.cyclades_port* %3, i8* %arraydecay, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.53, i64 0, i64 0)) #11, !dbg !10373
  %tobool = icmp ne i32 %call, 0, !dbg !10373
  br i1 %tobool, label %if.then, label %if.end, !dbg !10374

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10375
  br label %return, !dbg !10375

if.end:                                           ; preds = %entry
  %5 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10376
  %port = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %5, i32 0, i32 1, !dbg !10378
  %xmit_buf = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 15, !dbg !10379
  %6 = load i8*, i8** %xmit_buf, align 8, !dbg !10379
  %tobool1 = icmp ne i8* %6, null, !dbg !10376
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !10380

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !10381
  br label %return, !dbg !10381

if.end3:                                          ; preds = %if.end
  br label %do.body, !dbg !10382

do.body:                                          ; preds = %if.end3
  br label %do.body4, !dbg !10383

do.body4:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10384, metadata !DIExpression()), !dbg !10386
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10387, metadata !DIExpression()), !dbg !10386
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !10386
  %conv = zext i1 %cmp to i32, !dbg !10386
  store i32 1, i32* %tmp, align 4, !dbg !10386
  %7 = load i32, i32* %tmp, align 4, !dbg !10386
  br label %do.body5, !dbg !10388

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !10389

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !10390

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !10392, metadata !DIExpression()), !dbg !10395
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !10396, metadata !DIExpression()), !dbg !10395
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !10395
  %conv11 = zext i1 %cmp10 to i32, !dbg !10395
  store i32 1, i32* %tmp12, align 4, !dbg !10395
  %8 = load i32, i32* %tmp12, align 4, !dbg !10395
  %call13 = call i64 @arch_local_irq_save() #11, !dbg !10397
  store i64 %call13, i64* %flags, align 8, !dbg !10397
  br label %do.end, !dbg !10397

do.end:                                           ; preds = %do.body7
  br label %do.end14, !dbg !10390

do.end14:                                         ; preds = %do.end
  br label %do.body15, !dbg !10389

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10398, !srcloc !10399
  br label %do.body16, !dbg !10398

do.body16:                                        ; preds = %do.body15
  %9 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10400
  %card = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %9, i32 0, i32 2, !dbg !10400
  %10 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !10400
  %card_lock = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %10, i32 0, i32 10, !dbg !10400
  store %struct.spinlock* %card_lock, %struct.spinlock** %lock.addr.i, align 8
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10401
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !10402
  %rlock.i = bitcast %union.anon.0* %12 to %struct.raw_spinlock*, !dbg !10402
  br label %do.end18, !dbg !10400

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !10398

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !10389

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !10388

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !10383

do.end22:                                         ; preds = %do.end21
  br label %while.body, !dbg !10403

while.body:                                       ; preds = %do.end22, %if.end42
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x243, metadata !10404, metadata !DIExpression()), !dbg !10407
  %13 = load i32, i32* %count.addr, align 4, !dbg !10407
  store i32 %13, i32* %__UNIQUE_ID___x243, align 4, !dbg !10407
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y244, metadata !10408, metadata !DIExpression()), !dbg !10407
  %14 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10407
  %xmit_cnt = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %14, i32 0, i32 30, !dbg !10407
  %15 = load i32, i32* %xmit_cnt, align 8, !dbg !10407
  %conv23 = sext i32 %15 to i64, !dbg !10407
  %sub = sub i64 4096, %conv23, !dbg !10407
  %sub24 = sub i64 %sub, 1, !dbg !10407
  %conv25 = trunc i64 %sub24 to i32, !dbg !10407
  store i32 %conv25, i32* %__UNIQUE_ID___y244, align 4, !dbg !10407
  %16 = load i32, i32* %__UNIQUE_ID___x243, align 4, !dbg !10407
  %17 = load i32, i32* %__UNIQUE_ID___y244, align 4, !dbg !10407
  %cmp27 = icmp slt i32 %16, %17, !dbg !10407
  br i1 %cmp27, label %cond.true, label %cond.false, !dbg !10407

cond.true:                                        ; preds = %while.body
  %18 = load i32, i32* %__UNIQUE_ID___x243, align 4, !dbg !10407
  br label %cond.end, !dbg !10407

cond.false:                                       ; preds = %while.body
  %19 = load i32, i32* %__UNIQUE_ID___y244, align 4, !dbg !10407
  br label %cond.end, !dbg !10407

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %18, %cond.true ], [ %19, %cond.false ], !dbg !10407
  store i32 %cond, i32* %tmp26, align 4, !dbg !10407
  %20 = load i32, i32* %tmp26, align 4, !dbg !10407
  store i32 %20, i32* %c, align 4, !dbg !10409
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x245, metadata !10410, metadata !DIExpression()), !dbg !10412
  %21 = load i32, i32* %c, align 4, !dbg !10412
  store i32 %21, i32* %__UNIQUE_ID___x245, align 4, !dbg !10412
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y246, metadata !10413, metadata !DIExpression()), !dbg !10412
  %22 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10412
  %xmit_head = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %22, i32 0, i32 28, !dbg !10412
  %23 = load i32, i32* %xmit_head, align 8, !dbg !10412
  %conv29 = sext i32 %23 to i64, !dbg !10412
  %sub30 = sub i64 4096, %conv29, !dbg !10412
  %conv31 = trunc i64 %sub30 to i32, !dbg !10412
  store i32 %conv31, i32* %__UNIQUE_ID___y246, align 4, !dbg !10412
  %24 = load i32, i32* %__UNIQUE_ID___x245, align 4, !dbg !10412
  %25 = load i32, i32* %__UNIQUE_ID___y246, align 4, !dbg !10412
  %cmp33 = icmp slt i32 %24, %25, !dbg !10412
  br i1 %cmp33, label %cond.true35, label %cond.false36, !dbg !10412

cond.true35:                                      ; preds = %cond.end
  %26 = load i32, i32* %__UNIQUE_ID___x245, align 4, !dbg !10412
  br label %cond.end37, !dbg !10412

cond.false36:                                     ; preds = %cond.end
  %27 = load i32, i32* %__UNIQUE_ID___y246, align 4, !dbg !10412
  br label %cond.end37, !dbg !10412

cond.end37:                                       ; preds = %cond.false36, %cond.true35
  %cond38 = phi i32 [ %26, %cond.true35 ], [ %27, %cond.false36 ], !dbg !10412
  store i32 %cond38, i32* %tmp32, align 4, !dbg !10412
  %28 = load i32, i32* %tmp32, align 4, !dbg !10412
  store i32 %28, i32* %c, align 4, !dbg !10414
  %29 = load i32, i32* %c, align 4, !dbg !10415
  %cmp39 = icmp sle i32 %29, 0, !dbg !10417
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !10418

if.then41:                                        ; preds = %cond.end37
  br label %while.end, !dbg !10419

if.end42:                                         ; preds = %cond.end37
  %30 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10420
  %port43 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %30, i32 0, i32 1, !dbg !10421
  %xmit_buf44 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port43, i32 0, i32 15, !dbg !10422
  %31 = load i8*, i8** %xmit_buf44, align 8, !dbg !10422
  %32 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10423
  %xmit_head45 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %32, i32 0, i32 28, !dbg !10424
  %33 = load i32, i32* %xmit_head45, align 8, !dbg !10424
  %idx.ext = sext i32 %33 to i64, !dbg !10425
  %add.ptr = getelementptr i8, i8* %31, i64 %idx.ext, !dbg !10425
  %34 = load i8*, i8** %buf.addr, align 8, !dbg !10426
  %35 = load i32, i32* %c, align 4, !dbg !10427
  %conv46 = sext i32 %35 to i64, !dbg !10427
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 %34, i64 %conv46, i1 false), !dbg !10428
  %36 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10429
  %xmit_head47 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %36, i32 0, i32 28, !dbg !10430
  %37 = load i32, i32* %xmit_head47, align 8, !dbg !10430
  %38 = load i32, i32* %c, align 4, !dbg !10431
  %add = add i32 %37, %38, !dbg !10432
  %conv48 = sext i32 %add to i64, !dbg !10433
  %and = and i64 %conv48, 4095, !dbg !10434
  %conv49 = trunc i64 %and to i32, !dbg !10433
  %39 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10435
  %xmit_head50 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %39, i32 0, i32 28, !dbg !10436
  store i32 %conv49, i32* %xmit_head50, align 8, !dbg !10437
  %40 = load i32, i32* %c, align 4, !dbg !10438
  %41 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10439
  %xmit_cnt51 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %41, i32 0, i32 30, !dbg !10440
  %42 = load i32, i32* %xmit_cnt51, align 8, !dbg !10441
  %add52 = add i32 %42, %40, !dbg !10441
  store i32 %add52, i32* %xmit_cnt51, align 8, !dbg !10441
  %43 = load i32, i32* %c, align 4, !dbg !10442
  %44 = load i8*, i8** %buf.addr, align 8, !dbg !10443
  %idx.ext53 = sext i32 %43 to i64, !dbg !10443
  %add.ptr54 = getelementptr i8, i8* %44, i64 %idx.ext53, !dbg !10443
  store i8* %add.ptr54, i8** %buf.addr, align 8, !dbg !10443
  %45 = load i32, i32* %c, align 4, !dbg !10444
  %46 = load i32, i32* %count.addr, align 4, !dbg !10445
  %sub55 = sub i32 %46, %45, !dbg !10445
  store i32 %sub55, i32* %count.addr, align 4, !dbg !10445
  %47 = load i32, i32* %c, align 4, !dbg !10446
  %48 = load i32, i32* %ret, align 4, !dbg !10447
  %add56 = add i32 %48, %47, !dbg !10447
  store i32 %add56, i32* %ret, align 4, !dbg !10447
  br label %while.body, !dbg !10403, !llvm.loop !10448

while.end:                                        ; preds = %if.then41
  %49 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10450
  %card57 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %49, i32 0, i32 2, !dbg !10451
  %50 = load %struct.cyclades_card*, %struct.cyclades_card** %card57, align 8, !dbg !10451
  %card_lock58 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %50, i32 0, i32 10, !dbg !10452
  %51 = load i64, i64* %flags, align 8, !dbg !10453
  store %struct.spinlock* %card_lock58, %struct.spinlock** %lock.addr.i69, align 8
  store i64 %51, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !217, metadata !9119, metadata !DIExpression()) #10, !dbg !10454
  call void @llvm.dbg.declare(metadata !217, metadata !9123, metadata !DIExpression()) #10, !dbg !10454
  store i32 1, i32* %tmp.i, align 4, !dbg !10454
  %52 = load i32, i32* %tmp.i, align 4, !dbg !10454
  call void @llvm.dbg.declare(metadata !217, metadata !9124, metadata !DIExpression()) #10, !dbg !10455
  call void @llvm.dbg.declare(metadata !217, metadata !9130, metadata !DIExpression()) #10, !dbg !10455
  store i32 1, i32* %tmp8.i, align 4, !dbg !10455
  %53 = load i32, i32* %tmp8.i, align 4, !dbg !10455
  %54 = load i64, i64* %flags.addr.i, align 8, !dbg !10456
  call void @arch_local_irq_restore(i64 %54) #13, !dbg !10456
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10457, !srcloc !9134
  %55 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i69, align 8, !dbg !10458
  %56 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %55, i32 0, i32 0, !dbg !10458
  %rlock.i70 = bitcast %union.anon.0* %56 to %struct.raw_spinlock*, !dbg !10458
  %57 = load i32, i32* %ret, align 4, !dbg !10459
  %conv59 = sext i32 %57 to i64, !dbg !10459
  %58 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10460
  %idle_stats = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %58, i32 0, i32 35, !dbg !10461
  %xmit_bytes = getelementptr inbounds %struct.cyclades_idle_stats, %struct.cyclades_idle_stats* %idle_stats, i32 0, i32 4, !dbg !10462
  %59 = load i64, i64* %xmit_bytes, align 8, !dbg !10463
  %add60 = add i64 %59, %conv59, !dbg !10463
  store i64 %add60, i64* %xmit_bytes, align 8, !dbg !10463
  %60 = load volatile i64, i64* @jiffies, align 8, !dbg !10464
  %61 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10465
  %idle_stats61 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %61, i32 0, i32 35, !dbg !10466
  %xmit_idle = getelementptr inbounds %struct.cyclades_idle_stats, %struct.cyclades_idle_stats* %idle_stats61, i32 0, i32 2, !dbg !10467
  store i64 %60, i64* %xmit_idle, align 8, !dbg !10468
  %62 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10469
  %xmit_cnt62 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %62, i32 0, i32 30, !dbg !10471
  %63 = load i32, i32* %xmit_cnt62, align 8, !dbg !10471
  %tobool63 = icmp ne i32 %63, 0, !dbg !10469
  br i1 %tobool63, label %land.lhs.true, label %if.end68, !dbg !10472

land.lhs.true:                                    ; preds = %while.end
  %64 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10473
  %stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %64, i32 0, i32 24, !dbg !10474
  %bf.load = load i8, i8* %stopped, align 4, !dbg !10474
  %bf.clear = and i8 %bf.load, 1, !dbg !10474
  %bf.cast = zext i8 %bf.clear to i64, !dbg !10474
  %tobool64 = icmp ne i64 %bf.cast, 0, !dbg !10473
  br i1 %tobool64, label %if.end68, label %land.lhs.true65, !dbg !10475

land.lhs.true65:                                  ; preds = %land.lhs.true
  %65 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10476
  %hw_stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %65, i32 0, i32 26, !dbg !10477
  %66 = load i32, i32* %hw_stopped, align 8, !dbg !10477
  %tobool66 = icmp ne i32 %66, 0, !dbg !10476
  br i1 %tobool66, label %if.end68, label %if.then67, !dbg !10478

if.then67:                                        ; preds = %land.lhs.true65
  %67 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10479
  call void @start_xmit(%struct.cyclades_port* %67) #11, !dbg !10480
  br label %if.end68, !dbg !10480

if.end68:                                         ; preds = %if.then67, %land.lhs.true65, %land.lhs.true, %while.end
  %68 = load i32, i32* %ret, align 4, !dbg !10481
  store i32 %68, i32* %retval, align 4, !dbg !10482
  br label %return, !dbg !10482

return:                                           ; preds = %if.end68, %if.then2, %if.then
  %69 = load i32, i32* %retval, align 4, !dbg !10483
  ret i32 %69, !dbg !10483
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cy_put_char(%struct.tty_struct* %tty, i8 zeroext %ch) #4 !dbg !10484 {
entry:
  %lock.addr.i42 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i42, metadata !9013, metadata !DIExpression()), !dbg !10485
  %flags.addr.i43 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i43, metadata !9019, metadata !DIExpression()), !dbg !10489
  %tmp.i44 = alloca i32, align 4
  %tmp8.i45 = alloca i32, align 4
  %lock.addr.i40 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i40, metadata !9013, metadata !DIExpression()), !dbg !10490
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9019, metadata !DIExpression()), !dbg !10492
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7101, metadata !DIExpression()), !dbg !10493
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %ch.addr = alloca i8, align 1
  %info = alloca %struct.cyclades_port*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !10500, metadata !DIExpression()), !dbg !10501
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !10502, metadata !DIExpression()), !dbg !10503
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info, metadata !10504, metadata !DIExpression()), !dbg !10505
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10506
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !10507
  %1 = load i8*, i8** %driver_data, align 8, !dbg !10507
  %2 = bitcast i8* %1 to %struct.cyclades_port*, !dbg !10506
  store %struct.cyclades_port* %2, %struct.cyclades_port** %info, align 8, !dbg !10505
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10508, metadata !DIExpression()), !dbg !10509
  %3 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10510
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10512
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 18, !dbg !10513
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !10512
  %call = call i32 @serial_paranoia_check(%struct.cyclades_port* %3, i8* %arraydecay, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.54, i64 0, i64 0)) #11, !dbg !10514
  %tobool = icmp ne i32 %call, 0, !dbg !10514
  br i1 %tobool, label %if.then, label %if.end, !dbg !10515

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10516
  br label %return, !dbg !10516

if.end:                                           ; preds = %entry
  %5 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10517
  %port = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %5, i32 0, i32 1, !dbg !10519
  %xmit_buf = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 15, !dbg !10520
  %6 = load i8*, i8** %xmit_buf, align 8, !dbg !10520
  %tobool1 = icmp ne i8* %6, null, !dbg !10517
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !10521

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !10522
  br label %return, !dbg !10522

if.end3:                                          ; preds = %if.end
  br label %do.body, !dbg !10523

do.body:                                          ; preds = %if.end3
  br label %do.body4, !dbg !10524

do.body4:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10525, metadata !DIExpression()), !dbg !10527
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10528, metadata !DIExpression()), !dbg !10527
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !10527
  %conv = zext i1 %cmp to i32, !dbg !10527
  store i32 1, i32* %tmp, align 4, !dbg !10527
  %7 = load i32, i32* %tmp, align 4, !dbg !10527
  br label %do.body5, !dbg !10529

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !10530

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !10531

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !10533, metadata !DIExpression()), !dbg !10536
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !10537, metadata !DIExpression()), !dbg !10536
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !10536
  %conv11 = zext i1 %cmp10 to i32, !dbg !10536
  store i32 1, i32* %tmp12, align 4, !dbg !10536
  %8 = load i32, i32* %tmp12, align 4, !dbg !10536
  %call13 = call i64 @arch_local_irq_save() #11, !dbg !10538
  store i64 %call13, i64* %flags, align 8, !dbg !10538
  br label %do.end, !dbg !10538

do.end:                                           ; preds = %do.body7
  br label %do.end14, !dbg !10531

do.end14:                                         ; preds = %do.end
  br label %do.body15, !dbg !10530

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10539, !srcloc !10540
  br label %do.body16, !dbg !10539

do.body16:                                        ; preds = %do.body15
  %9 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10541
  %card = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %9, i32 0, i32 2, !dbg !10541
  %10 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !10541
  %card_lock = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %10, i32 0, i32 10, !dbg !10541
  store %struct.spinlock* %card_lock, %struct.spinlock** %lock.addr.i, align 8
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10542
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !10543
  %rlock.i = bitcast %union.anon.0* %12 to %struct.raw_spinlock*, !dbg !10543
  br label %do.end18, !dbg !10541

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !10539

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !10530

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !10529

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !10524

do.end22:                                         ; preds = %do.end21
  %13 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10544
  %xmit_cnt = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %13, i32 0, i32 30, !dbg !10545
  %14 = load i32, i32* %xmit_cnt, align 8, !dbg !10545
  %cmp23 = icmp sge i32 %14, 4095, !dbg !10546
  br i1 %cmp23, label %if.then25, label %if.end28, !dbg !10547

if.then25:                                        ; preds = %do.end22
  %15 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10548
  %card26 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %15, i32 0, i32 2, !dbg !10549
  %16 = load %struct.cyclades_card*, %struct.cyclades_card** %card26, align 8, !dbg !10549
  %card_lock27 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %16, i32 0, i32 10, !dbg !10550
  %17 = load i64, i64* %flags, align 8, !dbg !10551
  store %struct.spinlock* %card_lock27, %struct.spinlock** %lock.addr.i42, align 8
  store i64 %17, i64* %flags.addr.i43, align 8
  call void @llvm.dbg.declare(metadata !217, metadata !9119, metadata !DIExpression()) #10, !dbg !10552
  call void @llvm.dbg.declare(metadata !217, metadata !9123, metadata !DIExpression()) #10, !dbg !10552
  store i32 1, i32* %tmp.i44, align 4, !dbg !10552
  %18 = load i32, i32* %tmp.i44, align 4, !dbg !10552
  call void @llvm.dbg.declare(metadata !217, metadata !9124, metadata !DIExpression()) #10, !dbg !10553
  call void @llvm.dbg.declare(metadata !217, metadata !9130, metadata !DIExpression()) #10, !dbg !10553
  store i32 1, i32* %tmp8.i45, align 4, !dbg !10553
  %19 = load i32, i32* %tmp8.i45, align 4, !dbg !10553
  %20 = load i64, i64* %flags.addr.i43, align 8, !dbg !10554
  call void @arch_local_irq_restore(i64 %20) #13, !dbg !10554
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10555, !srcloc !9134
  %21 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i42, align 8, !dbg !10556
  %22 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %21, i32 0, i32 0, !dbg !10556
  %rlock.i46 = bitcast %union.anon.0* %22 to %struct.raw_spinlock*, !dbg !10556
  store i32 0, i32* %retval, align 4, !dbg !10557
  br label %return, !dbg !10557

if.end28:                                         ; preds = %do.end22
  %23 = load i8, i8* %ch.addr, align 1, !dbg !10558
  %24 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10559
  %port29 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %24, i32 0, i32 1, !dbg !10560
  %xmit_buf30 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port29, i32 0, i32 15, !dbg !10561
  %25 = load i8*, i8** %xmit_buf30, align 8, !dbg !10561
  %26 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10562
  %xmit_head = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %26, i32 0, i32 28, !dbg !10563
  %27 = load i32, i32* %xmit_head, align 8, !dbg !10564
  %inc = add i32 %27, 1, !dbg !10564
  store i32 %inc, i32* %xmit_head, align 8, !dbg !10564
  %idxprom = sext i32 %27 to i64, !dbg !10559
  %arrayidx = getelementptr i8, i8* %25, i64 %idxprom, !dbg !10559
  store i8 %23, i8* %arrayidx, align 1, !dbg !10565
  %28 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10566
  %xmit_head31 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %28, i32 0, i32 28, !dbg !10567
  %29 = load i32, i32* %xmit_head31, align 8, !dbg !10568
  %conv32 = sext i32 %29 to i64, !dbg !10568
  %and = and i64 %conv32, 4095, !dbg !10568
  %conv33 = trunc i64 %and to i32, !dbg !10568
  store i32 %conv33, i32* %xmit_head31, align 8, !dbg !10568
  %30 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10569
  %xmit_cnt34 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %30, i32 0, i32 30, !dbg !10570
  %31 = load i32, i32* %xmit_cnt34, align 8, !dbg !10571
  %inc35 = add i32 %31, 1, !dbg !10571
  store i32 %inc35, i32* %xmit_cnt34, align 8, !dbg !10571
  %32 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10572
  %idle_stats = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %32, i32 0, i32 35, !dbg !10573
  %xmit_bytes = getelementptr inbounds %struct.cyclades_idle_stats, %struct.cyclades_idle_stats* %idle_stats, i32 0, i32 4, !dbg !10574
  %33 = load i64, i64* %xmit_bytes, align 8, !dbg !10575
  %inc36 = add i64 %33, 1, !dbg !10575
  store i64 %inc36, i64* %xmit_bytes, align 8, !dbg !10575
  %34 = load volatile i64, i64* @jiffies, align 8, !dbg !10576
  %35 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10577
  %idle_stats37 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %35, i32 0, i32 35, !dbg !10578
  %xmit_idle = getelementptr inbounds %struct.cyclades_idle_stats, %struct.cyclades_idle_stats* %idle_stats37, i32 0, i32 2, !dbg !10579
  store i64 %34, i64* %xmit_idle, align 8, !dbg !10580
  %36 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10581
  %card38 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %36, i32 0, i32 2, !dbg !10582
  %37 = load %struct.cyclades_card*, %struct.cyclades_card** %card38, align 8, !dbg !10582
  %card_lock39 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %37, i32 0, i32 10, !dbg !10583
  %38 = load i64, i64* %flags, align 8, !dbg !10584
  store %struct.spinlock* %card_lock39, %struct.spinlock** %lock.addr.i40, align 8
  store i64 %38, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !217, metadata !9119, metadata !DIExpression()) #10, !dbg !10585
  call void @llvm.dbg.declare(metadata !217, metadata !9123, metadata !DIExpression()) #10, !dbg !10585
  store i32 1, i32* %tmp.i, align 4, !dbg !10585
  %39 = load i32, i32* %tmp.i, align 4, !dbg !10585
  call void @llvm.dbg.declare(metadata !217, metadata !9124, metadata !DIExpression()) #10, !dbg !10586
  call void @llvm.dbg.declare(metadata !217, metadata !9130, metadata !DIExpression()) #10, !dbg !10586
  store i32 1, i32* %tmp8.i, align 4, !dbg !10586
  %40 = load i32, i32* %tmp8.i, align 4, !dbg !10586
  %41 = load i64, i64* %flags.addr.i, align 8, !dbg !10587
  call void @arch_local_irq_restore(i64 %41) #13, !dbg !10587
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10588, !srcloc !9134
  %42 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i40, align 8, !dbg !10589
  %43 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %42, i32 0, i32 0, !dbg !10589
  %rlock.i41 = bitcast %union.anon.0* %43 to %struct.raw_spinlock*, !dbg !10589
  store i32 1, i32* %retval, align 4, !dbg !10590
  br label %return, !dbg !10590

return:                                           ; preds = %if.end28, %if.then25, %if.then2, %if.then
  %44 = load i32, i32* %retval, align 4, !dbg !10591
  ret i32 %44, !dbg !10591
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cy_flush_chars(%struct.tty_struct* %tty) #4 !dbg !10592 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.cyclades_port*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !10593, metadata !DIExpression()), !dbg !10594
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info, metadata !10595, metadata !DIExpression()), !dbg !10596
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10597
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !10598
  %1 = load i8*, i8** %driver_data, align 8, !dbg !10598
  %2 = bitcast i8* %1 to %struct.cyclades_port*, !dbg !10597
  store %struct.cyclades_port* %2, %struct.cyclades_port** %info, align 8, !dbg !10596
  %3 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10599
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10601
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 18, !dbg !10602
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !10601
  %call = call i32 @serial_paranoia_check(%struct.cyclades_port* %3, i8* %arraydecay, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.55, i64 0, i64 0)) #11, !dbg !10603
  %tobool = icmp ne i32 %call, 0, !dbg !10603
  br i1 %tobool, label %if.then, label %if.end, !dbg !10604

if.then:                                          ; preds = %entry
  br label %return, !dbg !10605

if.end:                                           ; preds = %entry
  %5 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10606
  %xmit_cnt = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %5, i32 0, i32 30, !dbg !10608
  %6 = load i32, i32* %xmit_cnt, align 8, !dbg !10608
  %cmp = icmp sle i32 %6, 0, !dbg !10609
  br i1 %cmp, label %if.then6, label %lor.lhs.false, !dbg !10610

lor.lhs.false:                                    ; preds = %if.end
  %7 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10611
  %stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %7, i32 0, i32 24, !dbg !10612
  %bf.load = load i8, i8* %stopped, align 4, !dbg !10612
  %bf.clear = and i8 %bf.load, 1, !dbg !10612
  %bf.cast = zext i8 %bf.clear to i64, !dbg !10612
  %conv = trunc i64 %bf.cast to i32, !dbg !10611
  %tobool1 = icmp ne i32 %conv, 0, !dbg !10611
  br i1 %tobool1, label %if.then6, label %lor.lhs.false2, !dbg !10613

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %8 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10614
  %hw_stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %8, i32 0, i32 26, !dbg !10615
  %9 = load i32, i32* %hw_stopped, align 8, !dbg !10615
  %tobool3 = icmp ne i32 %9, 0, !dbg !10614
  br i1 %tobool3, label %if.then6, label %lor.lhs.false4, !dbg !10616

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %10 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10617
  %port = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %10, i32 0, i32 1, !dbg !10618
  %xmit_buf = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 15, !dbg !10619
  %11 = load i8*, i8** %xmit_buf, align 8, !dbg !10619
  %tobool5 = icmp ne i8* %11, null, !dbg !10617
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !10620

if.then6:                                         ; preds = %lor.lhs.false4, %lor.lhs.false2, %lor.lhs.false, %if.end
  br label %return, !dbg !10621

if.end7:                                          ; preds = %lor.lhs.false4
  %12 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10622
  call void @start_xmit(%struct.cyclades_port* %12) #11, !dbg !10623
  br label %return, !dbg !10624

return:                                           ; preds = %if.end7, %if.then6, %if.then
  ret void, !dbg !10624
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cy_write_room(%struct.tty_struct* %tty) #4 !dbg !10625 {
entry:
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.cyclades_port*, align 8
  %ret = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !10626, metadata !DIExpression()), !dbg !10627
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info, metadata !10628, metadata !DIExpression()), !dbg !10629
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10630
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !10631
  %1 = load i8*, i8** %driver_data, align 8, !dbg !10631
  %2 = bitcast i8* %1 to %struct.cyclades_port*, !dbg !10630
  store %struct.cyclades_port* %2, %struct.cyclades_port** %info, align 8, !dbg !10629
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10632, metadata !DIExpression()), !dbg !10633
  %3 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10634
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10636
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 18, !dbg !10637
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !10636
  %call = call i32 @serial_paranoia_check(%struct.cyclades_port* %3, i8* %arraydecay, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.56, i64 0, i64 0)) #11, !dbg !10638
  %tobool = icmp ne i32 %call, 0, !dbg !10638
  br i1 %tobool, label %if.then, label %if.end, !dbg !10639

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10640
  br label %return, !dbg !10640

if.end:                                           ; preds = %entry
  %5 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10641
  %xmit_cnt = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %5, i32 0, i32 30, !dbg !10642
  %6 = load i32, i32* %xmit_cnt, align 8, !dbg !10642
  %conv = sext i32 %6 to i64, !dbg !10641
  %sub = sub i64 4096, %conv, !dbg !10643
  %sub1 = sub i64 %sub, 1, !dbg !10644
  %conv2 = trunc i64 %sub1 to i32, !dbg !10645
  store i32 %conv2, i32* %ret, align 4, !dbg !10646
  %7 = load i32, i32* %ret, align 4, !dbg !10647
  %cmp = icmp slt i32 %7, 0, !dbg !10649
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !10650

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %ret, align 4, !dbg !10651
  br label %if.end5, !dbg !10652

if.end5:                                          ; preds = %if.then4, %if.end
  %8 = load i32, i32* %ret, align 4, !dbg !10653
  store i32 %8, i32* %retval, align 4, !dbg !10654
  br label %return, !dbg !10654

return:                                           ; preds = %if.end5, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !10655
  ret i32 %9, !dbg !10655
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cy_chars_in_buffer(%struct.tty_struct* %tty) #4 !dbg !10656 {
entry:
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.cyclades_port*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !10657, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info, metadata !10659, metadata !DIExpression()), !dbg !10660
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10661
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !10662
  %1 = load i8*, i8** %driver_data, align 8, !dbg !10662
  %2 = bitcast i8* %1 to %struct.cyclades_port*, !dbg !10661
  store %struct.cyclades_port* %2, %struct.cyclades_port** %info, align 8, !dbg !10660
  %3 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10663
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10665
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 18, !dbg !10666
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !10665
  %call = call i32 @serial_paranoia_check(%struct.cyclades_port* %3, i8* %arraydecay, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.57, i64 0, i64 0)) #11, !dbg !10667
  %tobool = icmp ne i32 %call, 0, !dbg !10667
  br i1 %tobool, label %if.then, label %if.end, !dbg !10668

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10669
  br label %return, !dbg !10669

if.end:                                           ; preds = %entry
  %5 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10670
  %xmit_cnt = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %5, i32 0, i32 30, !dbg !10671
  %6 = load i32, i32* %xmit_cnt, align 8, !dbg !10671
  store i32 %6, i32* %retval, align 4, !dbg !10672
  br label %return, !dbg !10672

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !10673
  ret i32 %7, !dbg !10673
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cy_ioctl(%struct.tty_struct* %tty, i32 %cmd, i64 %arg) #4 !dbg !10674 {
entry:
  %lock.addr.i113 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i113, metadata !9013, metadata !DIExpression()), !dbg !10675
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9019, metadata !DIExpression()), !dbg !10678
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7101, metadata !DIExpression()), !dbg !10679
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !10686, metadata !DIExpression()), !dbg !10691
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !10700, metadata !DIExpression()), !dbg !10701
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !10702, metadata !DIExpression()), !dbg !10703
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !10704, metadata !DIExpression()), !dbg !10705
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !10706, metadata !DIExpression()), !dbg !10709
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !10710, metadata !DIExpression()), !dbg !10711
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !10712, metadata !DIExpression()), !dbg !10713
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !10714, metadata !DIExpression()), !dbg !10715
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %cmd.addr = alloca i32, align 4
  %arg.addr = alloca i64, align 8
  %info = alloca %struct.cyclades_port*, align 8
  %cnow = alloca %struct.cyclades_icount, align 4
  %ret_val = alloca i32, align 4
  %flags = alloca i64, align 8
  %argp = alloca i8*, align 8
  %tmp = alloca i64, align 8
  %__ret_pu = alloca i32, align 4
  %__ptr_pu = alloca i8*, align 8
  %__val_pu = alloca i64, align 8
  %tmp12 = alloca i64, align 8
  %tmp23 = alloca i64, align 8
  %__ret_pu24 = alloca i32, align 4
  %__ptr_pu25 = alloca i8*, align 8
  %__val_pu26 = alloca i64, align 8
  %tmp30 = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp69 = alloca i32, align 4
  %__dummy73 = alloca i64, align 8
  %__dummy274 = alloca i64, align 8
  %tmp77 = alloca i32, align 4
  %__ret = alloca i32, align 4
  %__wq_entry = alloca %struct.wait_queue_entry, align 8
  %__ret97 = alloca i64, align 8
  %__int = alloca i64, align 8
  %tmp109 = alloca i64, align 8
  %tmp112 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !10716, metadata !DIExpression()), !dbg !10717
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !10718, metadata !DIExpression()), !dbg !10719
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !10720, metadata !DIExpression()), !dbg !10721
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info, metadata !10722, metadata !DIExpression()), !dbg !10723
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10724
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !10725
  %1 = load i8*, i8** %driver_data, align 8, !dbg !10725
  %2 = bitcast i8* %1 to %struct.cyclades_port*, !dbg !10724
  store %struct.cyclades_port* %2, %struct.cyclades_port** %info, align 8, !dbg !10723
  call void @llvm.dbg.declare(metadata %struct.cyclades_icount* %cnow, metadata !10726, metadata !DIExpression()), !dbg !10727
  call void @llvm.dbg.declare(metadata i32* %ret_val, metadata !10728, metadata !DIExpression()), !dbg !10729
  store i32 0, i32* %ret_val, align 4, !dbg !10729
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10730, metadata !DIExpression()), !dbg !10731
  call void @llvm.dbg.declare(metadata i8** %argp, metadata !10732, metadata !DIExpression()), !dbg !10733
  %3 = load i64, i64* %arg.addr, align 8, !dbg !10734
  %4 = inttoptr i64 %3 to i8*, !dbg !10735
  store i8* %4, i8** %argp, align 8, !dbg !10733
  %5 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10736
  %6 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10738
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %6, i32 0, i32 18, !dbg !10739
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !10738
  %call = call i32 @serial_paranoia_check(%struct.cyclades_port* %5, i8* %arraydecay, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58, i64 0, i64 0)) #11, !dbg !10740
  %tobool = icmp ne i32 %call, 0, !dbg !10740
  br i1 %tobool, label %if.then, label %if.end, !dbg !10741

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !10742
  br label %return, !dbg !10742

if.end:                                           ; preds = %entry
  %7 = load i32, i32* %cmd.addr, align 4, !dbg !10743
  switch i32 %7, label %sw.default [
    i32 4413697, label %sw.bb
    i32 4413698, label %sw.bb6
    i32 4413699, label %sw.bb8
    i32 4413700, label %sw.bb10
    i32 4413701, label %sw.bb15
    i32 4413702, label %sw.bb18
    i32 4413703, label %sw.bb20
    i32 4413704, label %sw.bb22
    i32 4413705, label %sw.bb33
    i32 4413706, label %sw.bb37
    i32 4413707, label %sw.bb39
    i32 4413708, label %sw.bb41
    i32 4413709, label %sw.bb43
    i32 4413712, label %sw.bb45
    i32 4413710, label %sw.bb46
    i32 4413711, label %sw.bb50
    i32 4413714, label %sw.bb54
    i32 4413715, label %sw.bb59
    i32 21593, label %sw.bb63
    i32 21596, label %sw.bb65
  ], !dbg !10744

sw.bb:                                            ; preds = %if.end
  %8 = load i8*, i8** %argp, align 8, !dbg !10745
  %9 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10746
  %mon = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %9, i32 0, i32 34, !dbg !10747
  %10 = bitcast %struct.cyclades_monitor* %mon to i8*, !dbg !10748
  store i8* %8, i8** %to.addr.i, align 8
  store i8* %10, i8** %from.addr.i, align 8
  store i64 32, i64* %n.addr.i, align 8
  %11 = load i8*, i8** %from.addr.i, align 8, !dbg !10749
  %12 = load i64, i64* %n.addr.i, align 8, !dbg !10749
  store i8* %11, i8** %addr.addr.i.i, align 8
  store i64 %12, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !10705
  %13 = load i32, i32* %sz.i.i, align 4, !dbg !10750
  %cmp.i.i = icmp sge i32 %13, 0, !dbg !10750
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !10750

land.rhs.i.i:                                     ; preds = %sw.bb
  %14 = load i32, i32* %sz.i.i, align 4, !dbg !10750
  %conv.i.i = sext i32 %14 to i64, !dbg !10750
  %15 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10750
  %cmp1.i.i = icmp ult i64 %conv.i.i, %15, !dbg !10750
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %sw.bb
  %16 = phi i1 [ false, %sw.bb ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !10752
  %lnot.i.i = xor i1 %16, true, !dbg !10750
  %lnot.ext.i.i = zext i1 %16 to i32, !dbg !10750
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !10750
  br i1 %16, label %if.then.i.i, label %if.end10.i.i, !dbg !10753

if.then.i.i:                                      ; preds = %land.end.i.i
  %17 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10754
  %18 = call i1 @llvm.is.constant.i64(i64 %17) #10, !dbg !10757
  br i1 %18, label %if.else.i.i, label %if.then5.i.i, !dbg !10758

if.then5.i.i:                                     ; preds = %if.then.i.i
  %19 = load i32, i32* %sz.i.i, align 4, !dbg !10759
  %20 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10760
  call void @copy_overflow(i32 %19, i64 %20) #13, !dbg !10761
  br label %if.end9.i.i, !dbg !10761

if.else.i.i:                                      ; preds = %if.then.i.i
  %21 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !10762
  %tobool6.i.i = trunc i8 %21 to i1, !dbg !10762
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !10764

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #13, !dbg !10765
  br label %if.end.i.i, !dbg !10765

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #13, !dbg !10766
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !10767
  br label %check_copy_size.exit.i, !dbg !10767

if.end10.i.i:                                     ; preds = %land.end.i.i
  %22 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10709
  %cmp11.i.i = icmp ugt i64 %22, 2147483647, !dbg !10709
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !10709
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !10709
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !10709
  %23 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !10768
  %tobool17.i.i = icmp ne i32 %23, 0, !dbg !10768
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !10768
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !10768
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !10768
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !10709

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.59, i64 0, i64 0), i32 150, i32 2307, i64 12) #10, !dbg !10770, !srcloc !10773
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #10, !dbg !10774, !srcloc !10776
  br label %if.end31.i.i, !dbg !10777

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %24 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !10709
  %tobool32.i.i = icmp ne i32 %24, 0, !dbg !10709
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !10709
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !10709
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !10709
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !10768
  %25 = load i64, i64* %tmp.i.i, align 8, !dbg !10709
  %tobool38.i.i = icmp ne i64 %25, 0, !dbg !10778
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !10779

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !10780
  br label %check_copy_size.exit.i, !dbg !10780

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %26 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !10781
  %27 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10782
  %28 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !10783
  %tobool41.i.i = trunc i8 %28 to i1, !dbg !10783
  call void @check_object_size(i8* %26, i64 %27, i1 zeroext %tobool41.i.i) #13, !dbg !10784
  store i1 true, i1* %retval.i.i, align 1, !dbg !10785
  br label %check_copy_size.exit.i, !dbg !10785

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %29 = load i1, i1* %retval.i.i, align 1, !dbg !10786
  %lnot.i = xor i1 %29, true, !dbg !10749
  %lnot.ext.i = zext i1 %29 to i32, !dbg !10749
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !10749
  br i1 %29, label %if.then.i, label %copy_to_user.exit, !dbg !10787

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %30 = load i8*, i8** %to.addr.i, align 8, !dbg !10788
  %31 = load i8*, i8** %from.addr.i, align 8, !dbg !10789
  %32 = load i64, i64* %n.addr.i, align 8, !dbg !10790
  %call2.i = call i64 @_copy_to_user(i8* %30, i8* %31, i64 %32) #13, !dbg !10791
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !10792
  br label %copy_to_user.exit, !dbg !10793

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %33 = load i64, i64* %n.addr.i, align 8, !dbg !10794
  %tobool2 = icmp ne i64 %33, 0, !dbg !10795
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !10796

if.then3:                                         ; preds = %copy_to_user.exit
  store i32 -14, i32* %ret_val, align 4, !dbg !10797
  br label %sw.epilog, !dbg !10799

if.end4:                                          ; preds = %copy_to_user.exit
  %34 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10800
  %mon5 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %34, i32 0, i32 34, !dbg !10801
  %35 = bitcast %struct.cyclades_monitor* %mon5 to i8*, !dbg !10802
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 32, i1 false), !dbg !10802
  br label %sw.epilog, !dbg !10803

sw.bb6:                                           ; preds = %if.end
  %36 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10804
  %37 = load i8*, i8** %argp, align 8, !dbg !10805
  %38 = bitcast i8* %37 to i64*, !dbg !10805
  %call7 = call i32 @get_threshold(%struct.cyclades_port* %36, i64* %38) #11, !dbg !10806
  store i32 %call7, i32* %ret_val, align 4, !dbg !10807
  br label %sw.epilog, !dbg !10808

sw.bb8:                                           ; preds = %if.end
  %39 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10809
  %40 = load i64, i64* %arg.addr, align 8, !dbg !10810
  %call9 = call i32 @set_threshold(%struct.cyclades_port* %39, i64 %40) #11, !dbg !10811
  store i32 %call9, i32* %ret_val, align 4, !dbg !10812
  br label %sw.epilog, !dbg !10813

sw.bb10:                                          ; preds = %if.end
  call void @might_fault() #11, !dbg !10814
  call void @llvm.dbg.declare(metadata i32* %__ret_pu, metadata !10816, metadata !DIExpression()), !dbg !10818
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu, metadata !10819, metadata !DIExpression()), !dbg !10818
  call void @llvm.dbg.declare(metadata i64* %__val_pu, metadata !10820, metadata !DIExpression()), !dbg !10818
  %41 = load i8*, i8** %argp, align 8, !dbg !10818
  %42 = bitcast i8* %41 to i64*, !dbg !10818
  %43 = bitcast i64* %42 to i8*, !dbg !10818
  store i8* %43, i8** %__ptr_pu, align 8, !dbg !10818
  %44 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10818
  %default_threshold = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %44, i32 0, i32 31, !dbg !10818
  %45 = load i32, i32* %default_threshold, align 4, !dbg !10818
  %conv = sext i32 %45 to i64, !dbg !10818
  store i64 %conv, i64* %__val_pu, align 8, !dbg !10818
  %46 = call i64 @llvm.read_register.i64(metadata !4820), !dbg !10818
  %47 = load i8*, i8** %__ptr_pu, align 8, !dbg !10818
  %48 = load i64, i64* %__val_pu, align 8, !dbg !10818
  %49 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %47, i64 %48, i64 8, i64 %46) #10, !dbg !10818, !srcloc !10821
  %asmresult = extractvalue { i8*, i64 } %49, 0, !dbg !10818
  %asmresult11 = extractvalue { i8*, i64 } %49, 1, !dbg !10818
  %50 = ptrtoint i8* %asmresult to i64, !dbg !10818
  %51 = trunc i64 %50 to i32, !dbg !10818
  store i32 %51, i32* %__ret_pu, align 4, !dbg !10818
  call void @llvm.write_register.i64(metadata !4820, i64 %asmresult11), !dbg !10818
  %52 = load i32, i32* %__ret_pu, align 4, !dbg !10818
  %conv13 = sext i32 %52 to i64, !dbg !10818
  store i64 %conv13, i64* %tmp12, align 8, !dbg !10818
  %53 = load i64, i64* %tmp12, align 8, !dbg !10818
  store i64 %53, i64* %tmp, align 8, !dbg !10814
  %54 = load i64, i64* %tmp, align 8, !dbg !10814
  %conv14 = trunc i64 %54 to i32, !dbg !10822
  store i32 %conv14, i32* %ret_val, align 4, !dbg !10823
  br label %sw.epilog, !dbg !10824

sw.bb15:                                          ; preds = %if.end
  %55 = load i64, i64* %arg.addr, align 8, !dbg !10825
  %and = and i64 %55, 15, !dbg !10826
  %conv16 = trunc i64 %and to i32, !dbg !10825
  %56 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10827
  %default_threshold17 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %56, i32 0, i32 31, !dbg !10828
  store i32 %conv16, i32* %default_threshold17, align 4, !dbg !10829
  br label %sw.epilog, !dbg !10830

sw.bb18:                                          ; preds = %if.end
  %57 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10831
  %58 = load i8*, i8** %argp, align 8, !dbg !10832
  %59 = bitcast i8* %58 to i64*, !dbg !10832
  %call19 = call i32 @get_timeout(%struct.cyclades_port* %57, i64* %59) #11, !dbg !10833
  store i32 %call19, i32* %ret_val, align 4, !dbg !10834
  br label %sw.epilog, !dbg !10835

sw.bb20:                                          ; preds = %if.end
  %60 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10836
  %61 = load i64, i64* %arg.addr, align 8, !dbg !10837
  %call21 = call i32 @set_timeout(%struct.cyclades_port* %60, i64 %61) #11, !dbg !10838
  store i32 %call21, i32* %ret_val, align 4, !dbg !10839
  br label %sw.epilog, !dbg !10840

sw.bb22:                                          ; preds = %if.end
  call void @might_fault() #11, !dbg !10841
  call void @llvm.dbg.declare(metadata i32* %__ret_pu24, metadata !10843, metadata !DIExpression()), !dbg !10845
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu25, metadata !10846, metadata !DIExpression()), !dbg !10845
  call void @llvm.dbg.declare(metadata i64* %__val_pu26, metadata !10847, metadata !DIExpression()), !dbg !10845
  %62 = load i8*, i8** %argp, align 8, !dbg !10845
  %63 = bitcast i8* %62 to i64*, !dbg !10845
  %64 = bitcast i64* %63 to i8*, !dbg !10845
  store i8* %64, i8** %__ptr_pu25, align 8, !dbg !10845
  %65 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10845
  %default_timeout = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %65, i32 0, i32 32, !dbg !10845
  %66 = load i32, i32* %default_timeout, align 8, !dbg !10845
  %conv27 = sext i32 %66 to i64, !dbg !10845
  store i64 %conv27, i64* %__val_pu26, align 8, !dbg !10845
  %67 = call i64 @llvm.read_register.i64(metadata !4820), !dbg !10845
  %68 = load i8*, i8** %__ptr_pu25, align 8, !dbg !10845
  %69 = load i64, i64* %__val_pu26, align 8, !dbg !10845
  %70 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %68, i64 %69, i64 8, i64 %67) #10, !dbg !10845, !srcloc !10848
  %asmresult28 = extractvalue { i8*, i64 } %70, 0, !dbg !10845
  %asmresult29 = extractvalue { i8*, i64 } %70, 1, !dbg !10845
  %71 = ptrtoint i8* %asmresult28 to i64, !dbg !10845
  %72 = trunc i64 %71 to i32, !dbg !10845
  store i32 %72, i32* %__ret_pu24, align 4, !dbg !10845
  call void @llvm.write_register.i64(metadata !4820, i64 %asmresult29), !dbg !10845
  %73 = load i32, i32* %__ret_pu24, align 4, !dbg !10845
  %conv31 = sext i32 %73 to i64, !dbg !10845
  store i64 %conv31, i64* %tmp30, align 8, !dbg !10845
  %74 = load i64, i64* %tmp30, align 8, !dbg !10845
  store i64 %74, i64* %tmp23, align 8, !dbg !10841
  %75 = load i64, i64* %tmp23, align 8, !dbg !10841
  %conv32 = trunc i64 %75 to i32, !dbg !10849
  store i32 %conv32, i32* %ret_val, align 4, !dbg !10850
  br label %sw.epilog, !dbg !10851

sw.bb33:                                          ; preds = %if.end
  %76 = load i64, i64* %arg.addr, align 8, !dbg !10852
  %and34 = and i64 %76, 255, !dbg !10853
  %conv35 = trunc i64 %and34 to i32, !dbg !10852
  %77 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10854
  %default_timeout36 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %77, i32 0, i32 32, !dbg !10855
  store i32 %conv35, i32* %default_timeout36, align 8, !dbg !10856
  br label %sw.epilog, !dbg !10857

sw.bb37:                                          ; preds = %if.end
  %78 = load i64, i64* %arg.addr, align 8, !dbg !10858
  %conv38 = trunc i64 %78 to i32, !dbg !10859
  %79 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10860
  %rflow = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %79, i32 0, i32 21, !dbg !10861
  store i32 %conv38, i32* %rflow, align 4, !dbg !10862
  br label %sw.epilog, !dbg !10863

sw.bb39:                                          ; preds = %if.end
  %80 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10864
  %rflow40 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %80, i32 0, i32 21, !dbg !10865
  %81 = load i32, i32* %rflow40, align 4, !dbg !10865
  store i32 %81, i32* %ret_val, align 4, !dbg !10866
  br label %sw.epilog, !dbg !10867

sw.bb41:                                          ; preds = %if.end
  %82 = load i64, i64* %arg.addr, align 8, !dbg !10868
  %conv42 = trunc i64 %82 to i32, !dbg !10869
  %83 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10870
  %rtsdtr_inv = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %83, i32 0, i32 22, !dbg !10871
  store i32 %conv42, i32* %rtsdtr_inv, align 8, !dbg !10872
  br label %sw.epilog, !dbg !10873

sw.bb43:                                          ; preds = %if.end
  %84 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10874
  %rtsdtr_inv44 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %84, i32 0, i32 22, !dbg !10875
  %85 = load i32, i32* %rtsdtr_inv44, align 8, !dbg !10875
  store i32 %85, i32* %ret_val, align 4, !dbg !10876
  br label %sw.epilog, !dbg !10877

sw.bb45:                                          ; preds = %if.end
  %86 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10878
  %chip_rev = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %86, i32 0, i32 23, !dbg !10879
  %87 = load i32, i32* %chip_rev, align 4, !dbg !10879
  store i32 %87, i32* %ret_val, align 4, !dbg !10880
  br label %sw.epilog, !dbg !10881

sw.bb46:                                          ; preds = %if.end
  %88 = load i64, i64* %arg.addr, align 8, !dbg !10882
  %cmp = icmp ugt i64 %88, 36893488147419103, !dbg !10884
  br i1 %cmp, label %if.then48, label %if.end49, !dbg !10885

if.then48:                                        ; preds = %sw.bb46
  store i32 -19, i32* %retval, align 4, !dbg !10886
  br label %return, !dbg !10886

if.end49:                                         ; preds = %sw.bb46
  %89 = load i64, i64* %arg.addr, align 8, !dbg !10887
  %mul = mul i64 %89, 250, !dbg !10888
  %div = udiv i64 %mul, 1000, !dbg !10889
  store i64 %div, i64* @cyz_polling_cycle, align 8, !dbg !10890
  br label %sw.epilog, !dbg !10891

sw.bb50:                                          ; preds = %if.end
  %90 = load i64, i64* @cyz_polling_cycle, align 8, !dbg !10892
  %mul51 = mul i64 %90, 1000, !dbg !10893
  %div52 = sdiv i64 %mul51, 250, !dbg !10894
  %conv53 = trunc i64 %div52 to i32, !dbg !10895
  store i32 %conv53, i32* %ret_val, align 4, !dbg !10896
  br label %sw.epilog, !dbg !10897

sw.bb54:                                          ; preds = %if.end
  %91 = load i64, i64* %arg.addr, align 8, !dbg !10898
  %conv55 = trunc i64 %91 to i16, !dbg !10899
  %conv56 = zext i16 %conv55 to i32, !dbg !10899
  %mul57 = mul i32 %conv56, 250, !dbg !10900
  %div58 = sdiv i32 %mul57, 100, !dbg !10901
  %92 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10902
  %port = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %92, i32 0, i32 1, !dbg !10903
  %closing_wait = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 17, !dbg !10904
  store i32 %div58, i32* %closing_wait, align 4, !dbg !10905
  br label %sw.epilog, !dbg !10906

sw.bb59:                                          ; preds = %if.end
  %93 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10907
  %port60 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %93, i32 0, i32 1, !dbg !10908
  %closing_wait61 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port60, i32 0, i32 17, !dbg !10909
  %94 = load i32, i32* %closing_wait61, align 4, !dbg !10909
  %div62 = udiv i32 %94, 2, !dbg !10910
  store i32 %div62, i32* %ret_val, align 4, !dbg !10911
  br label %sw.epilog, !dbg !10912

sw.bb63:                                          ; preds = %if.end
  %95 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10913
  %96 = load i8*, i8** %argp, align 8, !dbg !10914
  %97 = bitcast i8* %96 to i32*, !dbg !10914
  %call64 = call i32 @get_lsr_info(%struct.cyclades_port* %95, i32* %97) #11, !dbg !10915
  store i32 %call64, i32* %ret_val, align 4, !dbg !10916
  br label %sw.epilog, !dbg !10917

sw.bb65:                                          ; preds = %if.end
  br label %do.body, !dbg !10918

do.body:                                          ; preds = %sw.bb65
  br label %do.body66, !dbg !10919

do.body66:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10920, metadata !DIExpression()), !dbg !10922
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10923, metadata !DIExpression()), !dbg !10922
  %cmp67 = icmp eq i64* %__dummy, %__dummy2, !dbg !10922
  %conv68 = zext i1 %cmp67 to i32, !dbg !10922
  store i32 1, i32* %tmp69, align 4, !dbg !10922
  %98 = load i32, i32* %tmp69, align 4, !dbg !10922
  br label %do.body70, !dbg !10924

do.body70:                                        ; preds = %do.body66
  br label %do.body71, !dbg !10925

do.body71:                                        ; preds = %do.body70
  br label %do.body72, !dbg !10926

do.body72:                                        ; preds = %do.body71
  call void @llvm.dbg.declare(metadata i64* %__dummy73, metadata !10928, metadata !DIExpression()), !dbg !10931
  call void @llvm.dbg.declare(metadata i64* %__dummy274, metadata !10932, metadata !DIExpression()), !dbg !10931
  %cmp75 = icmp eq i64* %__dummy73, %__dummy274, !dbg !10931
  %conv76 = zext i1 %cmp75 to i32, !dbg !10931
  store i32 1, i32* %tmp77, align 4, !dbg !10931
  %99 = load i32, i32* %tmp77, align 4, !dbg !10931
  %call78 = call i64 @arch_local_irq_save() #11, !dbg !10933
  store i64 %call78, i64* %flags, align 8, !dbg !10933
  br label %do.end, !dbg !10933

do.end:                                           ; preds = %do.body72
  br label %do.end79, !dbg !10926

do.end79:                                         ; preds = %do.end
  br label %do.body80, !dbg !10925

do.body80:                                        ; preds = %do.end79
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10934, !srcloc !10935
  br label %do.body81, !dbg !10934

do.body81:                                        ; preds = %do.body80
  %100 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10936
  %card = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %100, i32 0, i32 2, !dbg !10936
  %101 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !10936
  %card_lock = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %101, i32 0, i32 10, !dbg !10936
  store %struct.spinlock* %card_lock, %struct.spinlock** %lock.addr.i, align 8
  %102 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10937
  %103 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %102, i32 0, i32 0, !dbg !10938
  %rlock.i = bitcast %union.anon.0* %103 to %struct.raw_spinlock*, !dbg !10938
  br label %do.end83, !dbg !10936

do.end83:                                         ; preds = %do.body81
  br label %do.end84, !dbg !10934

do.end84:                                         ; preds = %do.end83
  br label %do.end85, !dbg !10925

do.end85:                                         ; preds = %do.end84
  br label %do.end86, !dbg !10924

do.end86:                                         ; preds = %do.end85
  br label %do.end87, !dbg !10919

do.end87:                                         ; preds = %do.end86
  %104 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10939
  %icount = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %104, i32 0, i32 36, !dbg !10940
  %105 = bitcast %struct.cyclades_icount* %cnow to i8*, !dbg !10940
  %106 = bitcast %struct.cyclades_icount* %icount to i8*, !dbg !10940
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 8 %106, i64 44, i1 false), !dbg !10940
  %107 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10941
  %card88 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %107, i32 0, i32 2, !dbg !10942
  %108 = load %struct.cyclades_card*, %struct.cyclades_card** %card88, align 8, !dbg !10942
  %card_lock89 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %108, i32 0, i32 10, !dbg !10943
  %109 = load i64, i64* %flags, align 8, !dbg !10944
  store %struct.spinlock* %card_lock89, %struct.spinlock** %lock.addr.i113, align 8
  store i64 %109, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !217, metadata !9119, metadata !DIExpression()) #10, !dbg !10945
  call void @llvm.dbg.declare(metadata !217, metadata !9123, metadata !DIExpression()) #10, !dbg !10945
  store i32 1, i32* %tmp.i, align 4, !dbg !10945
  %110 = load i32, i32* %tmp.i, align 4, !dbg !10945
  call void @llvm.dbg.declare(metadata !217, metadata !9124, metadata !DIExpression()) #10, !dbg !10946
  call void @llvm.dbg.declare(metadata !217, metadata !9130, metadata !DIExpression()) #10, !dbg !10946
  store i32 1, i32* %tmp8.i, align 4, !dbg !10946
  %111 = load i32, i32* %tmp8.i, align 4, !dbg !10946
  %112 = load i64, i64* %flags.addr.i, align 8, !dbg !10947
  call void @arch_local_irq_restore(i64 %112) #13, !dbg !10947
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10948, !srcloc !9134
  %113 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i113, align 8, !dbg !10949
  %114 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %113, i32 0, i32 0, !dbg !10949
  %rlock.i114 = bitcast %union.anon.0* %114 to %struct.raw_spinlock*, !dbg !10949
  call void @llvm.dbg.declare(metadata i32* %__ret, metadata !10950, metadata !DIExpression()), !dbg !10952
  store i32 0, i32* %__ret, align 4, !dbg !10952
  br label %do.body90, !dbg !10952

do.body90:                                        ; preds = %do.end87
  br label %do.body91, !dbg !10953

do.body91:                                        ; preds = %do.body90
  br label %do.end92, !dbg !10955

do.end92:                                         ; preds = %do.body91
  br label %do.end93, !dbg !10953

do.end93:                                         ; preds = %do.end92
  %115 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10957
  %116 = load i64, i64* %arg.addr, align 8, !dbg !10957
  %call94 = call i32 @cy_cflags_changed(%struct.cyclades_port* %115, i64 %116, %struct.cyclades_icount* %cnow) #11, !dbg !10957
  %tobool95 = icmp ne i32 %call94, 0, !dbg !10957
  br i1 %tobool95, label %if.end111, label %if.then96, !dbg !10952

if.then96:                                        ; preds = %do.end93
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %__wq_entry, metadata !10959, metadata !DIExpression()), !dbg !10972
  call void @llvm.dbg.declare(metadata i64* %__ret97, metadata !10973, metadata !DIExpression()), !dbg !10972
  store i64 0, i64* %__ret97, align 8, !dbg !10972
  call void @init_wait_entry(%struct.wait_queue_entry* %__wq_entry, i32 0) #11, !dbg !10972
  br label %for.cond, !dbg !10972

for.cond:                                         ; preds = %if.end106, %if.then96
  call void @llvm.dbg.declare(metadata i64* %__int, metadata !10974, metadata !DIExpression()), !dbg !10978
  %117 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10978
  %port98 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %117, i32 0, i32 1, !dbg !10978
  %delta_msr_wait = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port98, i32 0, i32 9, !dbg !10978
  %call99 = call i64 @prepare_to_wait_event(%struct.wait_queue_head* %delta_msr_wait, %struct.wait_queue_entry* %__wq_entry, i32 1) #11, !dbg !10978
  store i64 %call99, i64* %__int, align 8, !dbg !10978
  %118 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10979
  %119 = load i64, i64* %arg.addr, align 8, !dbg !10979
  %call100 = call i32 @cy_cflags_changed(%struct.cyclades_port* %118, i64 %119, %struct.cyclades_icount* %cnow) #11, !dbg !10979
  %tobool101 = icmp ne i32 %call100, 0, !dbg !10979
  br i1 %tobool101, label %if.then102, label %if.end103, !dbg !10978

if.then102:                                       ; preds = %for.cond
  br label %for.end, !dbg !10979

if.end103:                                        ; preds = %for.cond
  %120 = load i64, i64* %__int, align 8, !dbg !10981
  %tobool104 = icmp ne i64 %120, 0, !dbg !10981
  br i1 %tobool104, label %if.then105, label %if.end106, !dbg !10978

if.then105:                                       ; preds = %if.end103
  %121 = load i64, i64* %__int, align 8, !dbg !10983
  store i64 %121, i64* %__ret97, align 8, !dbg !10983
  br label %__out, !dbg !10983

if.end106:                                        ; preds = %if.end103
  call void @schedule() #11, !dbg !10978
  br label %for.cond, !dbg !10985, !llvm.loop !10986

for.end:                                          ; preds = %if.then102
  %122 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !10972
  %port107 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %122, i32 0, i32 1, !dbg !10972
  %delta_msr_wait108 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port107, i32 0, i32 9, !dbg !10972
  call void @finish_wait(%struct.wait_queue_head* %delta_msr_wait108, %struct.wait_queue_entry* %__wq_entry) #11, !dbg !10972
  br label %__out, !dbg !10972

__out:                                            ; preds = %for.end, %if.then105
  call void @llvm.dbg.label(metadata !10988), !dbg !10972
  %123 = load i64, i64* %__ret97, align 8, !dbg !10972
  store i64 %123, i64* %tmp109, align 8, !dbg !10972
  %124 = load i64, i64* %tmp109, align 8, !dbg !10972
  %conv110 = trunc i64 %124 to i32, !dbg !10957
  store i32 %conv110, i32* %__ret, align 4, !dbg !10957
  br label %if.end111, !dbg !10957

if.end111:                                        ; preds = %__out, %do.end93
  %125 = load i32, i32* %__ret, align 4, !dbg !10952
  store i32 %125, i32* %tmp112, align 4, !dbg !10957
  %126 = load i32, i32* %tmp112, align 4, !dbg !10952
  store i32 %126, i32* %ret_val, align 4, !dbg !10989
  br label %sw.epilog, !dbg !10990

sw.default:                                       ; preds = %if.end
  store i32 -515, i32* %ret_val, align 4, !dbg !10991
  br label %sw.epilog, !dbg !10992

sw.epilog:                                        ; preds = %sw.default, %if.end111, %sw.bb63, %sw.bb59, %sw.bb54, %sw.bb50, %if.end49, %sw.bb45, %sw.bb43, %sw.bb41, %sw.bb39, %sw.bb37, %sw.bb33, %sw.bb22, %sw.bb20, %sw.bb18, %sw.bb15, %sw.bb10, %sw.bb8, %sw.bb6, %if.end4, %if.then3
  %127 = load i32, i32* %ret_val, align 4, !dbg !10993
  store i32 %127, i32* %retval, align 4, !dbg !10994
  br label %return, !dbg !10994

return:                                           ; preds = %sw.epilog, %if.then48, %if.then
  %128 = load i32, i32* %retval, align 4, !dbg !10995
  ret i32 %128, !dbg !10995
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cy_set_termios(%struct.tty_struct* %tty, %struct.ktermios* %old_termios) #4 !dbg !10996 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %old_termios.addr = alloca %struct.ktermios*, align 8
  %info = alloca %struct.cyclades_port*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !10997, metadata !DIExpression()), !dbg !10998
  store %struct.ktermios* %old_termios, %struct.ktermios** %old_termios.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ktermios** %old_termios.addr, metadata !10999, metadata !DIExpression()), !dbg !11000
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info, metadata !11001, metadata !DIExpression()), !dbg !11002
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11003
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !11004
  %1 = load i8*, i8** %driver_data, align 8, !dbg !11004
  %2 = bitcast i8* %1 to %struct.cyclades_port*, !dbg !11003
  store %struct.cyclades_port* %2, %struct.cyclades_port** %info, align 8, !dbg !11002
  %3 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11005
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11006
  call void @cy_set_line_char(%struct.cyclades_port* %3, %struct.tty_struct* %4) #11, !dbg !11007
  %5 = load %struct.ktermios*, %struct.ktermios** %old_termios.addr, align 8, !dbg !11008
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %5, i32 0, i32 2, !dbg !11010
  %6 = load i32, i32* %c_cflag, align 4, !dbg !11010
  %and = and i32 %6, -2147483648, !dbg !11011
  %tobool = icmp ne i32 %and, 0, !dbg !11011
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !11012

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11013
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %7, i32 0, i32 15, !dbg !11013
  %c_cflag1 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 2, !dbg !11013
  %8 = load i32, i32* %c_cflag1, align 8, !dbg !11013
  %and2 = and i32 %8, -2147483648, !dbg !11013
  %tobool3 = icmp ne i32 %and2, 0, !dbg !11013
  br i1 %tobool3, label %if.end, label %if.then, !dbg !11014

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11015
  %hw_stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %9, i32 0, i32 26, !dbg !11017
  store i32 0, i32* %hw_stopped, align 8, !dbg !11018
  %10 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11019
  call void @cy_start(%struct.tty_struct* %10) #11, !dbg !11020
  br label %if.end, !dbg !11021

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !11022
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cy_throttle(%struct.tty_struct* %tty) #4 !dbg !11023 {
entry:
  %lock.addr.i39 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i39, metadata !9013, metadata !DIExpression()), !dbg !11024
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9019, metadata !DIExpression()), !dbg !11030
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7101, metadata !DIExpression()), !dbg !11031
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.cyclades_port*, align 8
  %card = alloca %struct.cyclades_card*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy19 = alloca i64, align 8
  %__dummy220 = alloca i64, align 8
  %tmp23 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !11038, metadata !DIExpression()), !dbg !11039
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info, metadata !11040, metadata !DIExpression()), !dbg !11041
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11042
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !11043
  %1 = load i8*, i8** %driver_data, align 8, !dbg !11043
  %2 = bitcast i8* %1 to %struct.cyclades_port*, !dbg !11042
  store %struct.cyclades_port* %2, %struct.cyclades_port** %info, align 8, !dbg !11041
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %card, metadata !11044, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11046, metadata !DIExpression()), !dbg !11047
  %3 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11048
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11050
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 18, !dbg !11051
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !11050
  %call = call i32 @serial_paranoia_check(%struct.cyclades_port* %3, i8* %arraydecay, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.61, i64 0, i64 0)) #11, !dbg !11052
  %tobool = icmp ne i32 %call, 0, !dbg !11052
  br i1 %tobool, label %if.then, label %if.end, !dbg !11053

if.then:                                          ; preds = %entry
  br label %if.end38, !dbg !11054

if.end:                                           ; preds = %entry
  %5 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11055
  %card1 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %5, i32 0, i32 2, !dbg !11056
  %6 = load %struct.cyclades_card*, %struct.cyclades_card** %card1, align 8, !dbg !11056
  store %struct.cyclades_card* %6, %struct.cyclades_card** %card, align 8, !dbg !11057
  %7 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11058
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %7, i32 0, i32 15, !dbg !11058
  %c_iflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 0, !dbg !11058
  %8 = load i32, i32* %c_iflag, align 8, !dbg !11058
  %and = and i32 %8, 4096, !dbg !11058
  %tobool2 = icmp ne i32 %and, 0, !dbg !11058
  br i1 %tobool2, label %if.then3, label %if.end8, !dbg !11060

if.then3:                                         ; preds = %if.end
  %9 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !11061
  %call4 = call zeroext i1 @cy_is_Z(%struct.cyclades_card* %9) #11, !dbg !11064
  br i1 %call4, label %if.else, label %if.then5, !dbg !11065

if.then5:                                         ; preds = %if.then3
  %10 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11066
  %11 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11067
  %termios6 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %11, i32 0, i32 15, !dbg !11067
  %c_cc = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios6, i32 0, i32 5, !dbg !11067
  %arrayidx = getelementptr [19 x i8], [19 x i8]* %c_cc, i64 0, i64 9, !dbg !11067
  %12 = load i8, i8* %arrayidx, align 1, !dbg !11067
  call void @cy_send_xchar(%struct.tty_struct* %10, i8 signext %12) #11, !dbg !11068
  br label %if.end7, !dbg !11068

if.else:                                          ; preds = %if.then3
  %13 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11069
  %throttle = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %13, i32 0, i32 38, !dbg !11070
  store i32 1, i32* %throttle, align 8, !dbg !11071
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then5
  br label %if.end8, !dbg !11072

if.end8:                                          ; preds = %if.end7, %if.end
  %14 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11073
  %termios9 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %14, i32 0, i32 15, !dbg !11073
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios9, i32 0, i32 2, !dbg !11073
  %15 = load i32, i32* %c_cflag, align 8, !dbg !11073
  %and10 = and i32 %15, -2147483648, !dbg !11073
  %tobool11 = icmp ne i32 %and10, 0, !dbg !11073
  br i1 %tobool11, label %if.then12, label %if.end38, !dbg !11074

if.then12:                                        ; preds = %if.end8
  %16 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !11075
  %call13 = call zeroext i1 @cy_is_Z(%struct.cyclades_card* %16) #11, !dbg !11076
  br i1 %call13, label %if.else35, label %if.then14, !dbg !11077

if.then14:                                        ; preds = %if.then12
  br label %do.body, !dbg !11078

do.body:                                          ; preds = %if.then14
  br label %do.body15, !dbg !11079

do.body15:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11080, metadata !DIExpression()), !dbg !11082
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11083, metadata !DIExpression()), !dbg !11082
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !11082
  %conv = zext i1 %cmp to i32, !dbg !11082
  store i32 1, i32* %tmp, align 4, !dbg !11082
  %17 = load i32, i32* %tmp, align 4, !dbg !11082
  br label %do.body16, !dbg !11084

do.body16:                                        ; preds = %do.body15
  br label %do.body17, !dbg !11085

do.body17:                                        ; preds = %do.body16
  br label %do.body18, !dbg !11086

do.body18:                                        ; preds = %do.body17
  call void @llvm.dbg.declare(metadata i64* %__dummy19, metadata !11088, metadata !DIExpression()), !dbg !11091
  call void @llvm.dbg.declare(metadata i64* %__dummy220, metadata !11092, metadata !DIExpression()), !dbg !11091
  %cmp21 = icmp eq i64* %__dummy19, %__dummy220, !dbg !11091
  %conv22 = zext i1 %cmp21 to i32, !dbg !11091
  store i32 1, i32* %tmp23, align 4, !dbg !11091
  %18 = load i32, i32* %tmp23, align 4, !dbg !11091
  %call24 = call i64 @arch_local_irq_save() #11, !dbg !11093
  store i64 %call24, i64* %flags, align 8, !dbg !11093
  br label %do.end, !dbg !11093

do.end:                                           ; preds = %do.body18
  br label %do.end25, !dbg !11086

do.end25:                                         ; preds = %do.end
  br label %do.body26, !dbg !11085

do.body26:                                        ; preds = %do.end25
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11094, !srcloc !11095
  br label %do.body27, !dbg !11094

do.body27:                                        ; preds = %do.body26
  %19 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !11096
  %card_lock = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %19, i32 0, i32 10, !dbg !11096
  store %struct.spinlock* %card_lock, %struct.spinlock** %lock.addr.i, align 8
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11097
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !11098
  %rlock.i = bitcast %union.anon.0* %21 to %struct.raw_spinlock*, !dbg !11098
  br label %do.end29, !dbg !11096

do.end29:                                         ; preds = %do.body27
  br label %do.end30, !dbg !11094

do.end30:                                         ; preds = %do.end29
  br label %do.end31, !dbg !11085

do.end31:                                         ; preds = %do.end30
  br label %do.end32, !dbg !11084

do.end32:                                         ; preds = %do.end31
  br label %do.end33, !dbg !11079

do.end33:                                         ; preds = %do.end32
  %22 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11099
  call void @cyy_change_rts_dtr(%struct.cyclades_port* %22, i32 0, i32 4) #11, !dbg !11100
  %23 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !11101
  %card_lock34 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %23, i32 0, i32 10, !dbg !11102
  %24 = load i64, i64* %flags, align 8, !dbg !11103
  store %struct.spinlock* %card_lock34, %struct.spinlock** %lock.addr.i39, align 8
  store i64 %24, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !217, metadata !9119, metadata !DIExpression()) #10, !dbg !11104
  call void @llvm.dbg.declare(metadata !217, metadata !9123, metadata !DIExpression()) #10, !dbg !11104
  store i32 1, i32* %tmp.i, align 4, !dbg !11104
  %25 = load i32, i32* %tmp.i, align 4, !dbg !11104
  call void @llvm.dbg.declare(metadata !217, metadata !9124, metadata !DIExpression()) #10, !dbg !11105
  call void @llvm.dbg.declare(metadata !217, metadata !9130, metadata !DIExpression()) #10, !dbg !11105
  store i32 1, i32* %tmp8.i, align 4, !dbg !11105
  %26 = load i32, i32* %tmp8.i, align 4, !dbg !11105
  %27 = load i64, i64* %flags.addr.i, align 8, !dbg !11106
  call void @arch_local_irq_restore(i64 %27) #13, !dbg !11106
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11107, !srcloc !9134
  %28 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i39, align 8, !dbg !11108
  %29 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %28, i32 0, i32 0, !dbg !11108
  %rlock.i40 = bitcast %union.anon.0* %29 to %struct.raw_spinlock*, !dbg !11108
  br label %if.end37, !dbg !11109

if.else35:                                        ; preds = %if.then12
  %30 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11110
  %throttle36 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %30, i32 0, i32 38, !dbg !11112
  store i32 1, i32* %throttle36, align 8, !dbg !11113
  br label %if.end37

if.end37:                                         ; preds = %if.else35, %do.end33
  br label %if.end38, !dbg !11114

if.end38:                                         ; preds = %if.then, %if.end37, %if.end8
  ret void, !dbg !11115
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cy_unthrottle(%struct.tty_struct* %tty) #4 !dbg !11116 {
entry:
  %lock.addr.i39 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i39, metadata !9013, metadata !DIExpression()), !dbg !11117
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9019, metadata !DIExpression()), !dbg !11123
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7101, metadata !DIExpression()), !dbg !11124
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.cyclades_port*, align 8
  %card = alloca %struct.cyclades_card*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy20 = alloca i64, align 8
  %__dummy221 = alloca i64, align 8
  %tmp24 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !11131, metadata !DIExpression()), !dbg !11132
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info, metadata !11133, metadata !DIExpression()), !dbg !11134
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11135
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !11136
  %1 = load i8*, i8** %driver_data, align 8, !dbg !11136
  %2 = bitcast i8* %1 to %struct.cyclades_port*, !dbg !11135
  store %struct.cyclades_port* %2, %struct.cyclades_port** %info, align 8, !dbg !11134
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %card, metadata !11137, metadata !DIExpression()), !dbg !11138
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11139, metadata !DIExpression()), !dbg !11140
  %3 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11141
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11143
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 18, !dbg !11144
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !11143
  %call = call i32 @serial_paranoia_check(%struct.cyclades_port* %3, i8* %arraydecay, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.63, i64 0, i64 0)) #11, !dbg !11145
  %tobool = icmp ne i32 %call, 0, !dbg !11145
  br i1 %tobool, label %if.then, label %if.end, !dbg !11146

if.then:                                          ; preds = %entry
  br label %if.end38, !dbg !11147

if.end:                                           ; preds = %entry
  %5 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11148
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %5, i32 0, i32 15, !dbg !11148
  %c_iflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 0, !dbg !11148
  %6 = load i32, i32* %c_iflag, align 8, !dbg !11148
  %and = and i32 %6, 4096, !dbg !11148
  %tobool1 = icmp ne i32 %and, 0, !dbg !11148
  br i1 %tobool1, label %if.then2, label %if.end8, !dbg !11150

if.then2:                                         ; preds = %if.end
  %7 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11151
  %x_char = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %7, i32 0, i32 25, !dbg !11154
  %8 = load i8, i8* %x_char, align 4, !dbg !11154
  %tobool3 = icmp ne i8 %8, 0, !dbg !11151
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !11155

if.then4:                                         ; preds = %if.then2
  %9 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11156
  %x_char5 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %9, i32 0, i32 25, !dbg !11157
  store i8 0, i8* %x_char5, align 4, !dbg !11158
  br label %if.end7, !dbg !11156

if.else:                                          ; preds = %if.then2
  %10 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11159
  %11 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11160
  %termios6 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %11, i32 0, i32 15, !dbg !11160
  %c_cc = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios6, i32 0, i32 5, !dbg !11160
  %arrayidx = getelementptr [19 x i8], [19 x i8]* %c_cc, i64 0, i64 8, !dbg !11160
  %12 = load i8, i8* %arrayidx, align 1, !dbg !11160
  call void @cy_send_xchar(%struct.tty_struct* %10, i8 signext %12) #11, !dbg !11161
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then4
  br label %if.end8, !dbg !11162

if.end8:                                          ; preds = %if.end7, %if.end
  %13 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11163
  %termios9 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %13, i32 0, i32 15, !dbg !11163
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios9, i32 0, i32 2, !dbg !11163
  %14 = load i32, i32* %c_cflag, align 8, !dbg !11163
  %and10 = and i32 %14, -2147483648, !dbg !11163
  %tobool11 = icmp ne i32 %and10, 0, !dbg !11163
  br i1 %tobool11, label %if.then12, label %if.end38, !dbg !11164

if.then12:                                        ; preds = %if.end8
  %15 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11165
  %card13 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %15, i32 0, i32 2, !dbg !11166
  %16 = load %struct.cyclades_card*, %struct.cyclades_card** %card13, align 8, !dbg !11166
  store %struct.cyclades_card* %16, %struct.cyclades_card** %card, align 8, !dbg !11167
  %17 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !11168
  %call14 = call zeroext i1 @cy_is_Z(%struct.cyclades_card* %17) #11, !dbg !11169
  br i1 %call14, label %if.else36, label %if.then15, !dbg !11170

if.then15:                                        ; preds = %if.then12
  br label %do.body, !dbg !11171

do.body:                                          ; preds = %if.then15
  br label %do.body16, !dbg !11172

do.body16:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11173, metadata !DIExpression()), !dbg !11175
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11176, metadata !DIExpression()), !dbg !11175
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !11175
  %conv = zext i1 %cmp to i32, !dbg !11175
  store i32 1, i32* %tmp, align 4, !dbg !11175
  %18 = load i32, i32* %tmp, align 4, !dbg !11175
  br label %do.body17, !dbg !11177

do.body17:                                        ; preds = %do.body16
  br label %do.body18, !dbg !11178

do.body18:                                        ; preds = %do.body17
  br label %do.body19, !dbg !11179

do.body19:                                        ; preds = %do.body18
  call void @llvm.dbg.declare(metadata i64* %__dummy20, metadata !11181, metadata !DIExpression()), !dbg !11184
  call void @llvm.dbg.declare(metadata i64* %__dummy221, metadata !11185, metadata !DIExpression()), !dbg !11184
  %cmp22 = icmp eq i64* %__dummy20, %__dummy221, !dbg !11184
  %conv23 = zext i1 %cmp22 to i32, !dbg !11184
  store i32 1, i32* %tmp24, align 4, !dbg !11184
  %19 = load i32, i32* %tmp24, align 4, !dbg !11184
  %call25 = call i64 @arch_local_irq_save() #11, !dbg !11186
  store i64 %call25, i64* %flags, align 8, !dbg !11186
  br label %do.end, !dbg !11186

do.end:                                           ; preds = %do.body19
  br label %do.end26, !dbg !11179

do.end26:                                         ; preds = %do.end
  br label %do.body27, !dbg !11178

do.body27:                                        ; preds = %do.end26
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11187, !srcloc !11188
  br label %do.body28, !dbg !11187

do.body28:                                        ; preds = %do.body27
  %20 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !11189
  %card_lock = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %20, i32 0, i32 10, !dbg !11189
  store %struct.spinlock* %card_lock, %struct.spinlock** %lock.addr.i, align 8
  %21 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11190
  %22 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %21, i32 0, i32 0, !dbg !11191
  %rlock.i = bitcast %union.anon.0* %22 to %struct.raw_spinlock*, !dbg !11191
  br label %do.end30, !dbg !11189

do.end30:                                         ; preds = %do.body28
  br label %do.end31, !dbg !11187

do.end31:                                         ; preds = %do.end30
  br label %do.end32, !dbg !11178

do.end32:                                         ; preds = %do.end31
  br label %do.end33, !dbg !11177

do.end33:                                         ; preds = %do.end32
  br label %do.end34, !dbg !11172

do.end34:                                         ; preds = %do.end33
  %23 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11192
  call void @cyy_change_rts_dtr(%struct.cyclades_port* %23, i32 4, i32 0) #11, !dbg !11193
  %24 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !11194
  %card_lock35 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %24, i32 0, i32 10, !dbg !11195
  %25 = load i64, i64* %flags, align 8, !dbg !11196
  store %struct.spinlock* %card_lock35, %struct.spinlock** %lock.addr.i39, align 8
  store i64 %25, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !217, metadata !9119, metadata !DIExpression()) #10, !dbg !11197
  call void @llvm.dbg.declare(metadata !217, metadata !9123, metadata !DIExpression()) #10, !dbg !11197
  store i32 1, i32* %tmp.i, align 4, !dbg !11197
  %26 = load i32, i32* %tmp.i, align 4, !dbg !11197
  call void @llvm.dbg.declare(metadata !217, metadata !9124, metadata !DIExpression()) #10, !dbg !11198
  call void @llvm.dbg.declare(metadata !217, metadata !9130, metadata !DIExpression()) #10, !dbg !11198
  store i32 1, i32* %tmp8.i, align 4, !dbg !11198
  %27 = load i32, i32* %tmp8.i, align 4, !dbg !11198
  %28 = load i64, i64* %flags.addr.i, align 8, !dbg !11199
  call void @arch_local_irq_restore(i64 %28) #13, !dbg !11199
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11200, !srcloc !9134
  %29 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i39, align 8, !dbg !11201
  %30 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %29, i32 0, i32 0, !dbg !11201
  %rlock.i40 = bitcast %union.anon.0* %30 to %struct.raw_spinlock*, !dbg !11201
  br label %if.end37, !dbg !11202

if.else36:                                        ; preds = %if.then12
  %31 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11203
  %throttle = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %31, i32 0, i32 38, !dbg !11205
  store i32 0, i32* %throttle, align 8, !dbg !11206
  br label %if.end37

if.end37:                                         ; preds = %if.else36, %do.end34
  br label %if.end38, !dbg !11207

if.end38:                                         ; preds = %if.then, %if.end37, %if.end8
  ret void, !dbg !11208
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cy_stop(%struct.tty_struct* %tty) #4 !dbg !11209 {
entry:
  %lock.addr.i29 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i29, metadata !9013, metadata !DIExpression()), !dbg !11210
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9019, metadata !DIExpression()), !dbg !11214
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7101, metadata !DIExpression()), !dbg !11215
  %tty.addr = alloca %struct.tty_struct*, align 8
  %cinfo = alloca %struct.cyclades_card*, align 8
  %info = alloca %struct.cyclades_port*, align 8
  %channel = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !11222, metadata !DIExpression()), !dbg !11223
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %cinfo, metadata !11224, metadata !DIExpression()), !dbg !11225
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info, metadata !11226, metadata !DIExpression()), !dbg !11227
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11228
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !11229
  %1 = load i8*, i8** %driver_data, align 8, !dbg !11229
  %2 = bitcast i8* %1 to %struct.cyclades_port*, !dbg !11228
  store %struct.cyclades_port* %2, %struct.cyclades_port** %info, align 8, !dbg !11227
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !11230, metadata !DIExpression()), !dbg !11231
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11232, metadata !DIExpression()), !dbg !11233
  %3 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11234
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11236
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 18, !dbg !11237
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !11236
  %call = call i32 @serial_paranoia_check(%struct.cyclades_port* %3, i8* %arraydecay, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.64, i64 0, i64 0)) #11, !dbg !11238
  %tobool = icmp ne i32 %call, 0, !dbg !11238
  br i1 %tobool, label %if.then, label %if.end, !dbg !11239

if.then:                                          ; preds = %entry
  br label %if.end28, !dbg !11240

if.end:                                           ; preds = %entry
  %5 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11241
  %card = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %5, i32 0, i32 2, !dbg !11242
  %6 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !11242
  store %struct.cyclades_card* %6, %struct.cyclades_card** %cinfo, align 8, !dbg !11243
  %7 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11244
  %line = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %7, i32 0, i32 4, !dbg !11245
  %8 = load i32, i32* %line, align 8, !dbg !11245
  %9 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !11246
  %first_line = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %9, i32 0, i32 5, !dbg !11247
  %10 = load i32, i32* %first_line, align 8, !dbg !11247
  %sub = sub i32 %8, %10, !dbg !11248
  store i32 %sub, i32* %channel, align 4, !dbg !11249
  %11 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !11250
  %call1 = call zeroext i1 @cy_is_Z(%struct.cyclades_card* %11) #11, !dbg !11251
  br i1 %call1, label %if.end28, label %if.then2, !dbg !11252

if.then2:                                         ; preds = %if.end
  br label %do.body, !dbg !11253

do.body:                                          ; preds = %if.then2
  br label %do.body3, !dbg !11254

do.body3:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11255, metadata !DIExpression()), !dbg !11257
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11258, metadata !DIExpression()), !dbg !11257
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !11257
  %conv = zext i1 %cmp to i32, !dbg !11257
  store i32 1, i32* %tmp, align 4, !dbg !11257
  %12 = load i32, i32* %tmp, align 4, !dbg !11257
  br label %do.body4, !dbg !11259

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !11260

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !11261

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !11263, metadata !DIExpression()), !dbg !11266
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !11267, metadata !DIExpression()), !dbg !11266
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !11266
  %conv10 = zext i1 %cmp9 to i32, !dbg !11266
  store i32 1, i32* %tmp11, align 4, !dbg !11266
  %13 = load i32, i32* %tmp11, align 4, !dbg !11266
  %call12 = call i64 @arch_local_irq_save() #11, !dbg !11268
  store i64 %call12, i64* %flags, align 8, !dbg !11268
  br label %do.end, !dbg !11268

do.end:                                           ; preds = %do.body6
  br label %do.end13, !dbg !11261

do.end13:                                         ; preds = %do.end
  br label %do.body14, !dbg !11260

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11269, !srcloc !11270
  br label %do.body15, !dbg !11269

do.body15:                                        ; preds = %do.body14
  %14 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !11271
  %card_lock = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %14, i32 0, i32 10, !dbg !11271
  store %struct.spinlock* %card_lock, %struct.spinlock** %lock.addr.i, align 8
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11272
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !11273
  %rlock.i = bitcast %union.anon.0* %16 to %struct.raw_spinlock*, !dbg !11273
  br label %do.end17, !dbg !11271

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !11269

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !11260

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !11259

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !11254

do.end21:                                         ; preds = %do.end20
  %17 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11274
  %18 = load i32, i32* %channel, align 4, !dbg !11275
  %and = and i32 %18, 3, !dbg !11276
  %conv22 = trunc i32 %and to i8, !dbg !11275
  call void @cyy_writeb(%struct.cyclades_port* %17, i32 208, i8 zeroext %conv22) #11, !dbg !11277
  %19 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11278
  %20 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11279
  %call23 = call zeroext i8 @cyy_readb(%struct.cyclades_port* %20, i32 12) #11, !dbg !11280
  %conv24 = zext i8 %call23 to i32, !dbg !11280
  %and25 = and i32 %conv24, -5, !dbg !11281
  %conv26 = trunc i32 %and25 to i8, !dbg !11280
  call void @cyy_writeb(%struct.cyclades_port* %19, i32 12, i8 zeroext %conv26) #11, !dbg !11282
  %21 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !11283
  %card_lock27 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %21, i32 0, i32 10, !dbg !11284
  %22 = load i64, i64* %flags, align 8, !dbg !11285
  store %struct.spinlock* %card_lock27, %struct.spinlock** %lock.addr.i29, align 8
  store i64 %22, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !217, metadata !9119, metadata !DIExpression()) #10, !dbg !11286
  call void @llvm.dbg.declare(metadata !217, metadata !9123, metadata !DIExpression()) #10, !dbg !11286
  store i32 1, i32* %tmp.i, align 4, !dbg !11286
  %23 = load i32, i32* %tmp.i, align 4, !dbg !11286
  call void @llvm.dbg.declare(metadata !217, metadata !9124, metadata !DIExpression()) #10, !dbg !11287
  call void @llvm.dbg.declare(metadata !217, metadata !9130, metadata !DIExpression()) #10, !dbg !11287
  store i32 1, i32* %tmp8.i, align 4, !dbg !11287
  %24 = load i32, i32* %tmp8.i, align 4, !dbg !11287
  %25 = load i64, i64* %flags.addr.i, align 8, !dbg !11288
  call void @arch_local_irq_restore(i64 %25) #13, !dbg !11288
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11289, !srcloc !9134
  %26 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i29, align 8, !dbg !11290
  %27 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %26, i32 0, i32 0, !dbg !11290
  %rlock.i30 = bitcast %union.anon.0* %27 to %struct.raw_spinlock*, !dbg !11290
  br label %if.end28, !dbg !11291

if.end28:                                         ; preds = %if.then, %do.end21, %if.end
  ret void, !dbg !11292
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cy_start(%struct.tty_struct* %tty) #4 !dbg !11293 {
entry:
  %lock.addr.i28 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i28, metadata !9013, metadata !DIExpression()), !dbg !11294
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9019, metadata !DIExpression()), !dbg !11298
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7101, metadata !DIExpression()), !dbg !11299
  %tty.addr = alloca %struct.tty_struct*, align 8
  %cinfo = alloca %struct.cyclades_card*, align 8
  %info = alloca %struct.cyclades_port*, align 8
  %channel = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !11306, metadata !DIExpression()), !dbg !11307
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %cinfo, metadata !11308, metadata !DIExpression()), !dbg !11309
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info, metadata !11310, metadata !DIExpression()), !dbg !11311
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11312
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !11313
  %1 = load i8*, i8** %driver_data, align 8, !dbg !11313
  %2 = bitcast i8* %1 to %struct.cyclades_port*, !dbg !11312
  store %struct.cyclades_port* %2, %struct.cyclades_port** %info, align 8, !dbg !11311
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !11314, metadata !DIExpression()), !dbg !11315
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11316, metadata !DIExpression()), !dbg !11317
  %3 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11318
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11320
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 18, !dbg !11321
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !11320
  %call = call i32 @serial_paranoia_check(%struct.cyclades_port* %3, i8* %arraydecay, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.65, i64 0, i64 0)) #11, !dbg !11322
  %tobool = icmp ne i32 %call, 0, !dbg !11322
  br i1 %tobool, label %if.then, label %if.end, !dbg !11323

if.then:                                          ; preds = %entry
  br label %if.end27, !dbg !11324

if.end:                                           ; preds = %entry
  %5 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11325
  %card = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %5, i32 0, i32 2, !dbg !11326
  %6 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !11326
  store %struct.cyclades_card* %6, %struct.cyclades_card** %cinfo, align 8, !dbg !11327
  %7 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11328
  %line = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %7, i32 0, i32 4, !dbg !11329
  %8 = load i32, i32* %line, align 8, !dbg !11329
  %9 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !11330
  %first_line = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %9, i32 0, i32 5, !dbg !11331
  %10 = load i32, i32* %first_line, align 8, !dbg !11331
  %sub = sub i32 %8, %10, !dbg !11332
  store i32 %sub, i32* %channel, align 4, !dbg !11333
  %11 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !11334
  %call1 = call zeroext i1 @cy_is_Z(%struct.cyclades_card* %11) #11, !dbg !11335
  br i1 %call1, label %if.end27, label %if.then2, !dbg !11336

if.then2:                                         ; preds = %if.end
  br label %do.body, !dbg !11337

do.body:                                          ; preds = %if.then2
  br label %do.body3, !dbg !11338

do.body3:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11339, metadata !DIExpression()), !dbg !11341
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11342, metadata !DIExpression()), !dbg !11341
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !11341
  %conv = zext i1 %cmp to i32, !dbg !11341
  store i32 1, i32* %tmp, align 4, !dbg !11341
  %12 = load i32, i32* %tmp, align 4, !dbg !11341
  br label %do.body4, !dbg !11343

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !11344

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !11345

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !11347, metadata !DIExpression()), !dbg !11350
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !11351, metadata !DIExpression()), !dbg !11350
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !11350
  %conv10 = zext i1 %cmp9 to i32, !dbg !11350
  store i32 1, i32* %tmp11, align 4, !dbg !11350
  %13 = load i32, i32* %tmp11, align 4, !dbg !11350
  %call12 = call i64 @arch_local_irq_save() #11, !dbg !11352
  store i64 %call12, i64* %flags, align 8, !dbg !11352
  br label %do.end, !dbg !11352

do.end:                                           ; preds = %do.body6
  br label %do.end13, !dbg !11345

do.end13:                                         ; preds = %do.end
  br label %do.body14, !dbg !11344

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11353, !srcloc !11354
  br label %do.body15, !dbg !11353

do.body15:                                        ; preds = %do.body14
  %14 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !11355
  %card_lock = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %14, i32 0, i32 10, !dbg !11355
  store %struct.spinlock* %card_lock, %struct.spinlock** %lock.addr.i, align 8
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11356
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !11357
  %rlock.i = bitcast %union.anon.0* %16 to %struct.raw_spinlock*, !dbg !11357
  br label %do.end17, !dbg !11355

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !11353

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !11344

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !11343

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !11338

do.end21:                                         ; preds = %do.end20
  %17 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11358
  %18 = load i32, i32* %channel, align 4, !dbg !11359
  %and = and i32 %18, 3, !dbg !11360
  %conv22 = trunc i32 %and to i8, !dbg !11359
  call void @cyy_writeb(%struct.cyclades_port* %17, i32 208, i8 zeroext %conv22) #11, !dbg !11361
  %19 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11362
  %20 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11363
  %call23 = call zeroext i8 @cyy_readb(%struct.cyclades_port* %20, i32 12) #11, !dbg !11364
  %conv24 = zext i8 %call23 to i32, !dbg !11364
  %or = or i32 %conv24, 4, !dbg !11365
  %conv25 = trunc i32 %or to i8, !dbg !11364
  call void @cyy_writeb(%struct.cyclades_port* %19, i32 12, i8 zeroext %conv25) #11, !dbg !11366
  %21 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !11367
  %card_lock26 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %21, i32 0, i32 10, !dbg !11368
  %22 = load i64, i64* %flags, align 8, !dbg !11369
  store %struct.spinlock* %card_lock26, %struct.spinlock** %lock.addr.i28, align 8
  store i64 %22, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !217, metadata !9119, metadata !DIExpression()) #10, !dbg !11370
  call void @llvm.dbg.declare(metadata !217, metadata !9123, metadata !DIExpression()) #10, !dbg !11370
  store i32 1, i32* %tmp.i, align 4, !dbg !11370
  %23 = load i32, i32* %tmp.i, align 4, !dbg !11370
  call void @llvm.dbg.declare(metadata !217, metadata !9124, metadata !DIExpression()) #10, !dbg !11371
  call void @llvm.dbg.declare(metadata !217, metadata !9130, metadata !DIExpression()) #10, !dbg !11371
  store i32 1, i32* %tmp8.i, align 4, !dbg !11371
  %24 = load i32, i32* %tmp8.i, align 4, !dbg !11371
  %25 = load i64, i64* %flags.addr.i, align 8, !dbg !11372
  call void @arch_local_irq_restore(i64 %25) #13, !dbg !11372
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11373, !srcloc !9134
  %26 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i28, align 8, !dbg !11374
  %27 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %26, i32 0, i32 0, !dbg !11374
  %rlock.i29 = bitcast %union.anon.0* %27 to %struct.raw_spinlock*, !dbg !11374
  br label %if.end27, !dbg !11375

if.end27:                                         ; preds = %if.then, %do.end21, %if.end
  ret void, !dbg !11376
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cy_hangup(%struct.tty_struct* %tty) #4 !dbg !11377 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.cyclades_port*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !11378, metadata !DIExpression()), !dbg !11379
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info, metadata !11380, metadata !DIExpression()), !dbg !11381
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11382
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !11383
  %1 = load i8*, i8** %driver_data, align 8, !dbg !11383
  %2 = bitcast i8* %1 to %struct.cyclades_port*, !dbg !11382
  store %struct.cyclades_port* %2, %struct.cyclades_port** %info, align 8, !dbg !11381
  %3 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11384
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11386
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 18, !dbg !11387
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !11386
  %call = call i32 @serial_paranoia_check(%struct.cyclades_port* %3, i8* %arraydecay, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.66, i64 0, i64 0)) #11, !dbg !11388
  %tobool = icmp ne i32 %call, 0, !dbg !11388
  br i1 %tobool, label %if.then, label %if.end, !dbg !11389

if.then:                                          ; preds = %entry
  br label %return, !dbg !11390

if.end:                                           ; preds = %entry
  %5 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11391
  call void @cy_flush_buffer(%struct.tty_struct* %5) #11, !dbg !11392
  %6 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11393
  %7 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11394
  call void @cy_shutdown(%struct.cyclades_port* %6, %struct.tty_struct* %7) #11, !dbg !11395
  %8 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11396
  %port = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %8, i32 0, i32 1, !dbg !11397
  call void @tty_port_hangup(%struct.tty_port* %port) #11, !dbg !11398
  br label %return, !dbg !11399

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !11399
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cy_break(%struct.tty_struct* %tty, i32 %break_state) #4 !dbg !11400 {
entry:
  %lock.addr.i138 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i138, metadata !7101, metadata !DIExpression()), !dbg !11401
  %lock.addr.i133 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i133, metadata !9013, metadata !DIExpression()), !dbg !11416
  %flags.addr.i134 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i134, metadata !9019, metadata !DIExpression()), !dbg !11418
  %tmp.i135 = alloca i32, align 4
  %tmp8.i136 = alloca i32, align 4
  %lock.addr.i131 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i131, metadata !7101, metadata !DIExpression()), !dbg !11419
  %lock.addr.i126 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i126, metadata !9013, metadata !DIExpression()), !dbg !11431
  %flags.addr.i127 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i127, metadata !9019, metadata !DIExpression()), !dbg !11433
  %tmp.i128 = alloca i32, align 4
  %tmp8.i129 = alloca i32, align 4
  %lock.addr.i124 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i124, metadata !9013, metadata !DIExpression()), !dbg !11434
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9019, metadata !DIExpression()), !dbg !11436
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7101, metadata !DIExpression()), !dbg !11437
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %break_state.addr = alloca i32, align 4
  %info = alloca %struct.cyclades_port*, align 8
  %card = alloca %struct.cyclades_card*, align 8
  %flags = alloca i64, align 8
  %retval1 = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  %__dummy35 = alloca i64, align 8
  %__dummy236 = alloca i64, align 8
  %tmp39 = alloca i32, align 4
  %__dummy43 = alloca i64, align 8
  %__dummy244 = alloca i64, align 8
  %tmp47 = alloca i32, align 4
  %__dummy71 = alloca i64, align 8
  %__dummy272 = alloca i64, align 8
  %tmp75 = alloca i32, align 4
  %__dummy79 = alloca i64, align 8
  %__dummy280 = alloca i64, align 8
  %tmp83 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !11444, metadata !DIExpression()), !dbg !11445
  store i32 %break_state, i32* %break_state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %break_state.addr, metadata !11446, metadata !DIExpression()), !dbg !11447
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info, metadata !11448, metadata !DIExpression()), !dbg !11449
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11450
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !11451
  %1 = load i8*, i8** %driver_data, align 8, !dbg !11451
  %2 = bitcast i8* %1 to %struct.cyclades_port*, !dbg !11450
  store %struct.cyclades_port* %2, %struct.cyclades_port** %info, align 8, !dbg !11449
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %card, metadata !11452, metadata !DIExpression()), !dbg !11453
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11454, metadata !DIExpression()), !dbg !11455
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !11456, metadata !DIExpression()), !dbg !11457
  store i32 0, i32* %retval1, align 4, !dbg !11457
  %3 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11458
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11460
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 18, !dbg !11461
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !11460
  %call = call i32 @serial_paranoia_check(%struct.cyclades_port* %3, i8* %arraydecay, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.67, i64 0, i64 0)) #11, !dbg !11462
  %tobool = icmp ne i32 %call, 0, !dbg !11462
  br i1 %tobool, label %if.then, label %if.end, !dbg !11463

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !11464
  br label %return, !dbg !11464

if.end:                                           ; preds = %entry
  %5 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11465
  %card2 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %5, i32 0, i32 2, !dbg !11466
  %6 = load %struct.cyclades_card*, %struct.cyclades_card** %card2, align 8, !dbg !11466
  store %struct.cyclades_card* %6, %struct.cyclades_card** %card, align 8, !dbg !11467
  br label %do.body, !dbg !11468

do.body:                                          ; preds = %if.end
  br label %do.body3, !dbg !11469

do.body3:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11470, metadata !DIExpression()), !dbg !11472
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11473, metadata !DIExpression()), !dbg !11472
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !11472
  %conv = zext i1 %cmp to i32, !dbg !11472
  store i32 1, i32* %tmp, align 4, !dbg !11472
  %7 = load i32, i32* %tmp, align 4, !dbg !11472
  br label %do.body4, !dbg !11474

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !11475

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !11476

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !11478, metadata !DIExpression()), !dbg !11481
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !11482, metadata !DIExpression()), !dbg !11481
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !11481
  %conv10 = zext i1 %cmp9 to i32, !dbg !11481
  store i32 1, i32* %tmp11, align 4, !dbg !11481
  %8 = load i32, i32* %tmp11, align 4, !dbg !11481
  %call12 = call i64 @arch_local_irq_save() #11, !dbg !11483
  store i64 %call12, i64* %flags, align 8, !dbg !11483
  br label %do.end, !dbg !11483

do.end:                                           ; preds = %do.body6
  br label %do.end13, !dbg !11476

do.end13:                                         ; preds = %do.end
  br label %do.body14, !dbg !11475

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11484, !srcloc !11485
  br label %do.body15, !dbg !11484

do.body15:                                        ; preds = %do.body14
  %9 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !11486
  %card_lock = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %9, i32 0, i32 10, !dbg !11486
  store %struct.spinlock* %card_lock, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11487
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !11488
  %rlock.i = bitcast %union.anon.0* %11 to %struct.raw_spinlock*, !dbg !11488
  br label %do.end17, !dbg !11486

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !11484

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !11475

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !11474

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !11469

do.end21:                                         ; preds = %do.end20
  %12 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !11489
  %call22 = call zeroext i1 @cy_is_Z(%struct.cyclades_card* %12) #11, !dbg !11490
  br i1 %call22, label %if.else99, label %if.then23, !dbg !11491

if.then23:                                        ; preds = %do.end21
  %13 = load i32, i32* %break_state.addr, align 4, !dbg !11492
  %cmp24 = icmp eq i32 %13, -1, !dbg !11493
  br i1 %cmp24, label %if.then26, label %if.else, !dbg !11494

if.then26:                                        ; preds = %if.then23
  %14 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11495
  %breakon = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %14, i32 0, i32 26, !dbg !11496
  %15 = load i32, i32* %breakon, align 8, !dbg !11496
  %tobool27 = icmp ne i32 %15, 0, !dbg !11495
  br i1 %tobool27, label %if.end61, label %if.then28, !dbg !11497

if.then28:                                        ; preds = %if.then26
  %16 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11498
  %breakon29 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %16, i32 0, i32 26, !dbg !11499
  store i32 1, i32* %breakon29, align 8, !dbg !11500
  %17 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11501
  %xmit_cnt = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %17, i32 0, i32 30, !dbg !11502
  %18 = load i32, i32* %xmit_cnt, align 8, !dbg !11502
  %tobool30 = icmp ne i32 %18, 0, !dbg !11501
  br i1 %tobool30, label %if.end60, label %if.then31, !dbg !11503

if.then31:                                        ; preds = %if.then28
  %19 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !11504
  %card_lock32 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %19, i32 0, i32 10, !dbg !11505
  %20 = load i64, i64* %flags, align 8, !dbg !11506
  store %struct.spinlock* %card_lock32, %struct.spinlock** %lock.addr.i126, align 8
  store i64 %20, i64* %flags.addr.i127, align 8
  call void @llvm.dbg.declare(metadata !217, metadata !9119, metadata !DIExpression()) #10, !dbg !11507
  call void @llvm.dbg.declare(metadata !217, metadata !9123, metadata !DIExpression()) #10, !dbg !11507
  store i32 1, i32* %tmp.i128, align 4, !dbg !11507
  %21 = load i32, i32* %tmp.i128, align 4, !dbg !11507
  call void @llvm.dbg.declare(metadata !217, metadata !9124, metadata !DIExpression()) #10, !dbg !11508
  call void @llvm.dbg.declare(metadata !217, metadata !9130, metadata !DIExpression()) #10, !dbg !11508
  store i32 1, i32* %tmp8.i129, align 4, !dbg !11508
  %22 = load i32, i32* %tmp8.i129, align 4, !dbg !11508
  %23 = load i64, i64* %flags.addr.i127, align 8, !dbg !11509
  call void @arch_local_irq_restore(i64 %23) #13, !dbg !11509
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11510, !srcloc !9134
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i126, align 8, !dbg !11511
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !11511
  %rlock.i130 = bitcast %union.anon.0* %25 to %struct.raw_spinlock*, !dbg !11511
  %26 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11512
  call void @start_xmit(%struct.cyclades_port* %26) #11, !dbg !11513
  br label %do.body33, !dbg !11514

do.body33:                                        ; preds = %if.then31
  br label %do.body34, !dbg !11515

do.body34:                                        ; preds = %do.body33
  call void @llvm.dbg.declare(metadata i64* %__dummy35, metadata !11516, metadata !DIExpression()), !dbg !11518
  call void @llvm.dbg.declare(metadata i64* %__dummy236, metadata !11519, metadata !DIExpression()), !dbg !11518
  %cmp37 = icmp eq i64* %__dummy35, %__dummy236, !dbg !11518
  %conv38 = zext i1 %cmp37 to i32, !dbg !11518
  store i32 1, i32* %tmp39, align 4, !dbg !11518
  %27 = load i32, i32* %tmp39, align 4, !dbg !11518
  br label %do.body40, !dbg !11520

do.body40:                                        ; preds = %do.body34
  br label %do.body41, !dbg !11521

do.body41:                                        ; preds = %do.body40
  br label %do.body42, !dbg !11522

do.body42:                                        ; preds = %do.body41
  call void @llvm.dbg.declare(metadata i64* %__dummy43, metadata !11524, metadata !DIExpression()), !dbg !11527
  call void @llvm.dbg.declare(metadata i64* %__dummy244, metadata !11528, metadata !DIExpression()), !dbg !11527
  %cmp45 = icmp eq i64* %__dummy43, %__dummy244, !dbg !11527
  %conv46 = zext i1 %cmp45 to i32, !dbg !11527
  store i32 1, i32* %tmp47, align 4, !dbg !11527
  %28 = load i32, i32* %tmp47, align 4, !dbg !11527
  %call48 = call i64 @arch_local_irq_save() #11, !dbg !11529
  store i64 %call48, i64* %flags, align 8, !dbg !11529
  br label %do.end49, !dbg !11529

do.end49:                                         ; preds = %do.body42
  br label %do.end50, !dbg !11522

do.end50:                                         ; preds = %do.end49
  br label %do.body51, !dbg !11521

do.body51:                                        ; preds = %do.end50
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11530, !srcloc !11531
  br label %do.body52, !dbg !11530

do.body52:                                        ; preds = %do.body51
  %29 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !11532
  %card_lock53 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %29, i32 0, i32 10, !dbg !11532
  store %struct.spinlock* %card_lock53, %struct.spinlock** %lock.addr.i131, align 8
  %30 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i131, align 8, !dbg !11533
  %31 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %30, i32 0, i32 0, !dbg !11534
  %rlock.i132 = bitcast %union.anon.0* %31 to %struct.raw_spinlock*, !dbg !11534
  br label %do.end55, !dbg !11532

do.end55:                                         ; preds = %do.body52
  br label %do.end56, !dbg !11530

do.end56:                                         ; preds = %do.end55
  br label %do.end57, !dbg !11521

do.end57:                                         ; preds = %do.end56
  br label %do.end58, !dbg !11520

do.end58:                                         ; preds = %do.end57
  br label %do.end59, !dbg !11515

do.end59:                                         ; preds = %do.end58
  br label %if.end60, !dbg !11535

if.end60:                                         ; preds = %do.end59, %if.then28
  br label %if.end61, !dbg !11536

if.end61:                                         ; preds = %if.end60, %if.then26
  br label %if.end98, !dbg !11537

if.else:                                          ; preds = %if.then23
  %32 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11538
  %breakoff = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %32, i32 0, i32 27, !dbg !11539
  %33 = load i32, i32* %breakoff, align 4, !dbg !11539
  %tobool62 = icmp ne i32 %33, 0, !dbg !11538
  br i1 %tobool62, label %if.end97, label %if.then63, !dbg !11540

if.then63:                                        ; preds = %if.else
  %34 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11541
  %breakoff64 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %34, i32 0, i32 27, !dbg !11542
  store i32 1, i32* %breakoff64, align 4, !dbg !11543
  %35 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11544
  %xmit_cnt65 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %35, i32 0, i32 30, !dbg !11545
  %36 = load i32, i32* %xmit_cnt65, align 8, !dbg !11545
  %tobool66 = icmp ne i32 %36, 0, !dbg !11544
  br i1 %tobool66, label %if.end96, label %if.then67, !dbg !11546

if.then67:                                        ; preds = %if.then63
  %37 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !11547
  %card_lock68 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %37, i32 0, i32 10, !dbg !11548
  %38 = load i64, i64* %flags, align 8, !dbg !11549
  store %struct.spinlock* %card_lock68, %struct.spinlock** %lock.addr.i133, align 8
  store i64 %38, i64* %flags.addr.i134, align 8
  call void @llvm.dbg.declare(metadata !217, metadata !9119, metadata !DIExpression()) #10, !dbg !11550
  call void @llvm.dbg.declare(metadata !217, metadata !9123, metadata !DIExpression()) #10, !dbg !11550
  store i32 1, i32* %tmp.i135, align 4, !dbg !11550
  %39 = load i32, i32* %tmp.i135, align 4, !dbg !11550
  call void @llvm.dbg.declare(metadata !217, metadata !9124, metadata !DIExpression()) #10, !dbg !11551
  call void @llvm.dbg.declare(metadata !217, metadata !9130, metadata !DIExpression()) #10, !dbg !11551
  store i32 1, i32* %tmp8.i136, align 4, !dbg !11551
  %40 = load i32, i32* %tmp8.i136, align 4, !dbg !11551
  %41 = load i64, i64* %flags.addr.i134, align 8, !dbg !11552
  call void @arch_local_irq_restore(i64 %41) #13, !dbg !11552
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11553, !srcloc !9134
  %42 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i133, align 8, !dbg !11554
  %43 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %42, i32 0, i32 0, !dbg !11554
  %rlock.i137 = bitcast %union.anon.0* %43 to %struct.raw_spinlock*, !dbg !11554
  %44 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11555
  call void @start_xmit(%struct.cyclades_port* %44) #11, !dbg !11556
  br label %do.body69, !dbg !11557

do.body69:                                        ; preds = %if.then67
  br label %do.body70, !dbg !11558

do.body70:                                        ; preds = %do.body69
  call void @llvm.dbg.declare(metadata i64* %__dummy71, metadata !11559, metadata !DIExpression()), !dbg !11561
  call void @llvm.dbg.declare(metadata i64* %__dummy272, metadata !11562, metadata !DIExpression()), !dbg !11561
  %cmp73 = icmp eq i64* %__dummy71, %__dummy272, !dbg !11561
  %conv74 = zext i1 %cmp73 to i32, !dbg !11561
  store i32 1, i32* %tmp75, align 4, !dbg !11561
  %45 = load i32, i32* %tmp75, align 4, !dbg !11561
  br label %do.body76, !dbg !11563

do.body76:                                        ; preds = %do.body70
  br label %do.body77, !dbg !11564

do.body77:                                        ; preds = %do.body76
  br label %do.body78, !dbg !11565

do.body78:                                        ; preds = %do.body77
  call void @llvm.dbg.declare(metadata i64* %__dummy79, metadata !11567, metadata !DIExpression()), !dbg !11570
  call void @llvm.dbg.declare(metadata i64* %__dummy280, metadata !11571, metadata !DIExpression()), !dbg !11570
  %cmp81 = icmp eq i64* %__dummy79, %__dummy280, !dbg !11570
  %conv82 = zext i1 %cmp81 to i32, !dbg !11570
  store i32 1, i32* %tmp83, align 4, !dbg !11570
  %46 = load i32, i32* %tmp83, align 4, !dbg !11570
  %call84 = call i64 @arch_local_irq_save() #11, !dbg !11572
  store i64 %call84, i64* %flags, align 8, !dbg !11572
  br label %do.end85, !dbg !11572

do.end85:                                         ; preds = %do.body78
  br label %do.end86, !dbg !11565

do.end86:                                         ; preds = %do.end85
  br label %do.body87, !dbg !11564

do.body87:                                        ; preds = %do.end86
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11573, !srcloc !11574
  br label %do.body88, !dbg !11573

do.body88:                                        ; preds = %do.body87
  %47 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !11575
  %card_lock89 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %47, i32 0, i32 10, !dbg !11575
  store %struct.spinlock* %card_lock89, %struct.spinlock** %lock.addr.i138, align 8
  %48 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i138, align 8, !dbg !11576
  %49 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %48, i32 0, i32 0, !dbg !11577
  %rlock.i139 = bitcast %union.anon.0* %49 to %struct.raw_spinlock*, !dbg !11577
  br label %do.end91, !dbg !11575

do.end91:                                         ; preds = %do.body88
  br label %do.end92, !dbg !11573

do.end92:                                         ; preds = %do.end91
  br label %do.end93, !dbg !11564

do.end93:                                         ; preds = %do.end92
  br label %do.end94, !dbg !11563

do.end94:                                         ; preds = %do.end93
  br label %do.end95, !dbg !11558

do.end95:                                         ; preds = %do.end94
  br label %if.end96, !dbg !11578

if.end96:                                         ; preds = %do.end95, %if.then63
  br label %if.end97, !dbg !11579

if.end97:                                         ; preds = %if.end96, %if.else
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %if.end61
  br label %if.end122, !dbg !11580

if.else99:                                        ; preds = %do.end21
  %50 = load i32, i32* %break_state.addr, align 4, !dbg !11581
  %cmp100 = icmp eq i32 %50, -1, !dbg !11584
  br i1 %cmp100, label %if.then102, label %if.else110, !dbg !11585

if.then102:                                       ; preds = %if.else99
  %51 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !11586
  %52 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11588
  %line = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %52, i32 0, i32 4, !dbg !11589
  %53 = load i32, i32* %line, align 8, !dbg !11589
  %54 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !11590
  %first_line = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %54, i32 0, i32 5, !dbg !11591
  %55 = load i32, i32* %first_line, align 8, !dbg !11591
  %sub = sub i32 %53, %55, !dbg !11592
  %call103 = call i32 @cyz_issue_cmd(%struct.cyclades_card* %51, i32 %sub, i8 zeroext 67, i32 0) #11, !dbg !11593
  store i32 %call103, i32* %retval1, align 4, !dbg !11594
  %56 = load i32, i32* %retval1, align 4, !dbg !11595
  %cmp104 = icmp ne i32 %56, 0, !dbg !11597
  br i1 %cmp104, label %if.then106, label %if.end109, !dbg !11598

if.then106:                                       ; preds = %if.then102
  %57 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11599
  %line107 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %57, i32 0, i32 4, !dbg !11601
  %58 = load i32, i32* %line107, align 8, !dbg !11601
  %59 = load i32, i32* %retval1, align 4, !dbg !11602
  %call108 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.68, i64 0, i64 0), i32 %58, i32 %59) #12, !dbg !11603
  br label %if.end109, !dbg !11604

if.end109:                                        ; preds = %if.then106, %if.then102
  br label %if.end121, !dbg !11605

if.else110:                                       ; preds = %if.else99
  %60 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !11606
  %61 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11608
  %line111 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %61, i32 0, i32 4, !dbg !11609
  %62 = load i32, i32* %line111, align 8, !dbg !11609
  %63 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !11610
  %first_line112 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %63, i32 0, i32 5, !dbg !11611
  %64 = load i32, i32* %first_line112, align 8, !dbg !11611
  %sub113 = sub i32 %62, %64, !dbg !11612
  %call114 = call i32 @cyz_issue_cmd(%struct.cyclades_card* %60, i32 %sub113, i8 zeroext 68, i32 0) #11, !dbg !11613
  store i32 %call114, i32* %retval1, align 4, !dbg !11614
  %65 = load i32, i32* %retval1, align 4, !dbg !11615
  %cmp115 = icmp ne i32 %65, 0, !dbg !11617
  br i1 %cmp115, label %if.then117, label %if.end120, !dbg !11618

if.then117:                                       ; preds = %if.else110
  %66 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11619
  %line118 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %66, i32 0, i32 4, !dbg !11621
  %67 = load i32, i32* %line118, align 8, !dbg !11621
  %68 = load i32, i32* %retval1, align 4, !dbg !11622
  %call119 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.69, i64 0, i64 0), i32 %67, i32 %68) #12, !dbg !11623
  br label %if.end120, !dbg !11624

if.end120:                                        ; preds = %if.then117, %if.else110
  br label %if.end121

if.end121:                                        ; preds = %if.end120, %if.end109
  br label %if.end122

if.end122:                                        ; preds = %if.end121, %if.end98
  %69 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !11625
  %card_lock123 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %69, i32 0, i32 10, !dbg !11626
  %70 = load i64, i64* %flags, align 8, !dbg !11627
  store %struct.spinlock* %card_lock123, %struct.spinlock** %lock.addr.i124, align 8
  store i64 %70, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !217, metadata !9119, metadata !DIExpression()) #10, !dbg !11628
  call void @llvm.dbg.declare(metadata !217, metadata !9123, metadata !DIExpression()) #10, !dbg !11628
  store i32 1, i32* %tmp.i, align 4, !dbg !11628
  %71 = load i32, i32* %tmp.i, align 4, !dbg !11628
  call void @llvm.dbg.declare(metadata !217, metadata !9124, metadata !DIExpression()) #10, !dbg !11629
  call void @llvm.dbg.declare(metadata !217, metadata !9130, metadata !DIExpression()) #10, !dbg !11629
  store i32 1, i32* %tmp8.i, align 4, !dbg !11629
  %72 = load i32, i32* %tmp8.i, align 4, !dbg !11629
  %73 = load i64, i64* %flags.addr.i, align 8, !dbg !11630
  call void @arch_local_irq_restore(i64 %73) #13, !dbg !11630
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11631, !srcloc !9134
  %74 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i124, align 8, !dbg !11632
  %75 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %74, i32 0, i32 0, !dbg !11632
  %rlock.i125 = bitcast %union.anon.0* %75 to %struct.raw_spinlock*, !dbg !11632
  %76 = load i32, i32* %retval1, align 4, !dbg !11633
  store i32 %76, i32* %retval, align 4, !dbg !11634
  br label %return, !dbg !11634

return:                                           ; preds = %if.end122, %if.then
  %77 = load i32, i32* %retval, align 4, !dbg !11635
  ret i32 %77, !dbg !11635
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cy_flush_buffer(%struct.tty_struct* %tty) #4 !dbg !11636 {
entry:
  %lock.addr.i67 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i67, metadata !7101, metadata !DIExpression()), !dbg !11637
  %lock.addr.i62 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i62, metadata !9013, metadata !DIExpression()), !dbg !11646
  %flags.addr.i63 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i63, metadata !9019, metadata !DIExpression()), !dbg !11648
  %tmp.i64 = alloca i32, align 4
  %tmp8.i65 = alloca i32, align 4
  %lock.addr.i60 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i60, metadata !9013, metadata !DIExpression()), !dbg !11649
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9019, metadata !DIExpression()), !dbg !11651
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7101, metadata !DIExpression()), !dbg !11652
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.cyclades_port*, align 8
  %card = alloca %struct.cyclades_card*, align 8
  %channel = alloca i32, align 4
  %retval = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  %__dummy26 = alloca i64, align 8
  %__dummy227 = alloca i64, align 8
  %tmp30 = alloca i32, align 4
  %__dummy34 = alloca i64, align 8
  %__dummy235 = alloca i64, align 8
  %tmp38 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !11659, metadata !DIExpression()), !dbg !11660
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info, metadata !11661, metadata !DIExpression()), !dbg !11662
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11663
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !11664
  %1 = load i8*, i8** %driver_data, align 8, !dbg !11664
  %2 = bitcast i8* %1 to %struct.cyclades_port*, !dbg !11663
  store %struct.cyclades_port* %2, %struct.cyclades_port** %info, align 8, !dbg !11662
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %card, metadata !11665, metadata !DIExpression()), !dbg !11666
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !11667, metadata !DIExpression()), !dbg !11668
  call void @llvm.dbg.declare(metadata i32* %retval, metadata !11669, metadata !DIExpression()), !dbg !11670
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11671, metadata !DIExpression()), !dbg !11672
  %3 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11673
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11675
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 18, !dbg !11676
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !11675
  %call = call i32 @serial_paranoia_check(%struct.cyclades_port* %3, i8* %arraydecay, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.70, i64 0, i64 0)) #11, !dbg !11677
  %tobool = icmp ne i32 %call, 0, !dbg !11677
  br i1 %tobool, label %if.then, label %if.end, !dbg !11678

if.then:                                          ; preds = %entry
  br label %return, !dbg !11679

if.end:                                           ; preds = %entry
  %5 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11680
  %card1 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %5, i32 0, i32 2, !dbg !11681
  %6 = load %struct.cyclades_card*, %struct.cyclades_card** %card1, align 8, !dbg !11681
  store %struct.cyclades_card* %6, %struct.cyclades_card** %card, align 8, !dbg !11682
  %7 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11683
  %line = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %7, i32 0, i32 4, !dbg !11684
  %8 = load i32, i32* %line, align 8, !dbg !11684
  %9 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !11685
  %first_line = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %9, i32 0, i32 5, !dbg !11686
  %10 = load i32, i32* %first_line, align 8, !dbg !11686
  %sub = sub i32 %8, %10, !dbg !11687
  store i32 %sub, i32* %channel, align 4, !dbg !11688
  br label %do.body, !dbg !11689

do.body:                                          ; preds = %if.end
  br label %do.body2, !dbg !11690

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11691, metadata !DIExpression()), !dbg !11693
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11694, metadata !DIExpression()), !dbg !11693
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !11693
  %conv = zext i1 %cmp to i32, !dbg !11693
  store i32 1, i32* %tmp, align 4, !dbg !11693
  %11 = load i32, i32* %tmp, align 4, !dbg !11693
  br label %do.body3, !dbg !11695

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !11696

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !11697

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !11699, metadata !DIExpression()), !dbg !11702
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !11703, metadata !DIExpression()), !dbg !11702
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !11702
  %conv9 = zext i1 %cmp8 to i32, !dbg !11702
  store i32 1, i32* %tmp10, align 4, !dbg !11702
  %12 = load i32, i32* %tmp10, align 4, !dbg !11702
  %call11 = call i64 @arch_local_irq_save() #11, !dbg !11704
  store i64 %call11, i64* %flags, align 8, !dbg !11704
  br label %do.end, !dbg !11704

do.end:                                           ; preds = %do.body5
  br label %do.end12, !dbg !11697

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !11696

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11705, !srcloc !11706
  br label %do.body14, !dbg !11705

do.body14:                                        ; preds = %do.body13
  %13 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !11707
  %card_lock = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %13, i32 0, i32 10, !dbg !11707
  store %struct.spinlock* %card_lock, %struct.spinlock** %lock.addr.i, align 8
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11708
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !11709
  %rlock.i = bitcast %union.anon.0* %15 to %struct.raw_spinlock*, !dbg !11709
  br label %do.end16, !dbg !11707

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !11705

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !11696

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !11695

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !11690

do.end20:                                         ; preds = %do.end19
  %16 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11710
  %xmit_tail = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %16, i32 0, i32 29, !dbg !11711
  store i32 0, i32* %xmit_tail, align 4, !dbg !11712
  %17 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11713
  %xmit_head = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %17, i32 0, i32 28, !dbg !11714
  store i32 0, i32* %xmit_head, align 8, !dbg !11715
  %18 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11716
  %xmit_cnt = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %18, i32 0, i32 30, !dbg !11717
  store i32 0, i32* %xmit_cnt, align 8, !dbg !11718
  %19 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !11719
  %card_lock21 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %19, i32 0, i32 10, !dbg !11720
  %20 = load i64, i64* %flags, align 8, !dbg !11721
  store %struct.spinlock* %card_lock21, %struct.spinlock** %lock.addr.i62, align 8
  store i64 %20, i64* %flags.addr.i63, align 8
  call void @llvm.dbg.declare(metadata !217, metadata !9119, metadata !DIExpression()) #10, !dbg !11722
  call void @llvm.dbg.declare(metadata !217, metadata !9123, metadata !DIExpression()) #10, !dbg !11722
  store i32 1, i32* %tmp.i64, align 4, !dbg !11722
  %21 = load i32, i32* %tmp.i64, align 4, !dbg !11722
  call void @llvm.dbg.declare(metadata !217, metadata !9124, metadata !DIExpression()) #10, !dbg !11723
  call void @llvm.dbg.declare(metadata !217, metadata !9130, metadata !DIExpression()) #10, !dbg !11723
  store i32 1, i32* %tmp8.i65, align 4, !dbg !11723
  %22 = load i32, i32* %tmp8.i65, align 4, !dbg !11723
  %23 = load i64, i64* %flags.addr.i63, align 8, !dbg !11724
  call void @arch_local_irq_restore(i64 %23) #13, !dbg !11724
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11725, !srcloc !9134
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i62, align 8, !dbg !11726
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !11726
  %rlock.i66 = bitcast %union.anon.0* %25 to %struct.raw_spinlock*, !dbg !11726
  %26 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !11727
  %call22 = call zeroext i1 @cy_is_Z(%struct.cyclades_card* %26) #11, !dbg !11728
  br i1 %call22, label %if.then23, label %if.end59, !dbg !11729

if.then23:                                        ; preds = %do.end20
  br label %do.body24, !dbg !11730

do.body24:                                        ; preds = %if.then23
  br label %do.body25, !dbg !11731

do.body25:                                        ; preds = %do.body24
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !11732, metadata !DIExpression()), !dbg !11734
  call void @llvm.dbg.declare(metadata i64* %__dummy227, metadata !11735, metadata !DIExpression()), !dbg !11734
  %cmp28 = icmp eq i64* %__dummy26, %__dummy227, !dbg !11734
  %conv29 = zext i1 %cmp28 to i32, !dbg !11734
  store i32 1, i32* %tmp30, align 4, !dbg !11734
  %27 = load i32, i32* %tmp30, align 4, !dbg !11734
  br label %do.body31, !dbg !11736

do.body31:                                        ; preds = %do.body25
  br label %do.body32, !dbg !11737

do.body32:                                        ; preds = %do.body31
  br label %do.body33, !dbg !11738

do.body33:                                        ; preds = %do.body32
  call void @llvm.dbg.declare(metadata i64* %__dummy34, metadata !11740, metadata !DIExpression()), !dbg !11743
  call void @llvm.dbg.declare(metadata i64* %__dummy235, metadata !11744, metadata !DIExpression()), !dbg !11743
  %cmp36 = icmp eq i64* %__dummy34, %__dummy235, !dbg !11743
  %conv37 = zext i1 %cmp36 to i32, !dbg !11743
  store i32 1, i32* %tmp38, align 4, !dbg !11743
  %28 = load i32, i32* %tmp38, align 4, !dbg !11743
  %call39 = call i64 @arch_local_irq_save() #11, !dbg !11745
  store i64 %call39, i64* %flags, align 8, !dbg !11745
  br label %do.end40, !dbg !11745

do.end40:                                         ; preds = %do.body33
  br label %do.end41, !dbg !11738

do.end41:                                         ; preds = %do.end40
  br label %do.body42, !dbg !11737

do.body42:                                        ; preds = %do.end41
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11746, !srcloc !11747
  br label %do.body43, !dbg !11746

do.body43:                                        ; preds = %do.body42
  %29 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !11748
  %card_lock44 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %29, i32 0, i32 10, !dbg !11748
  store %struct.spinlock* %card_lock44, %struct.spinlock** %lock.addr.i67, align 8
  %30 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i67, align 8, !dbg !11749
  %31 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %30, i32 0, i32 0, !dbg !11750
  %rlock.i68 = bitcast %union.anon.0* %31 to %struct.raw_spinlock*, !dbg !11750
  br label %do.end46, !dbg !11748

do.end46:                                         ; preds = %do.body43
  br label %do.end47, !dbg !11746

do.end47:                                         ; preds = %do.end46
  br label %do.end48, !dbg !11737

do.end48:                                         ; preds = %do.end47
  br label %do.end49, !dbg !11736

do.end49:                                         ; preds = %do.end48
  br label %do.end50, !dbg !11731

do.end50:                                         ; preds = %do.end49
  %32 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !11751
  %33 = load i32, i32* %channel, align 4, !dbg !11752
  %call51 = call i32 @cyz_issue_cmd(%struct.cyclades_card* %32, i32 %33, i8 zeroext 87, i32 0) #11, !dbg !11753
  store i32 %call51, i32* %retval, align 4, !dbg !11754
  %34 = load i32, i32* %retval, align 4, !dbg !11755
  %cmp52 = icmp ne i32 %34, 0, !dbg !11757
  br i1 %cmp52, label %if.then54, label %if.end57, !dbg !11758

if.then54:                                        ; preds = %do.end50
  %35 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11759
  %line55 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %35, i32 0, i32 4, !dbg !11761
  %36 = load i32, i32* %line55, align 8, !dbg !11761
  %37 = load i32, i32* %retval, align 4, !dbg !11762
  %call56 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.71, i64 0, i64 0), i32 %36, i32 %37) #12, !dbg !11763
  br label %if.end57, !dbg !11764

if.end57:                                         ; preds = %if.then54, %do.end50
  %38 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !11765
  %card_lock58 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %38, i32 0, i32 10, !dbg !11766
  %39 = load i64, i64* %flags, align 8, !dbg !11767
  store %struct.spinlock* %card_lock58, %struct.spinlock** %lock.addr.i60, align 8
  store i64 %39, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !217, metadata !9119, metadata !DIExpression()) #10, !dbg !11768
  call void @llvm.dbg.declare(metadata !217, metadata !9123, metadata !DIExpression()) #10, !dbg !11768
  store i32 1, i32* %tmp.i, align 4, !dbg !11768
  %40 = load i32, i32* %tmp.i, align 4, !dbg !11768
  call void @llvm.dbg.declare(metadata !217, metadata !9124, metadata !DIExpression()) #10, !dbg !11769
  call void @llvm.dbg.declare(metadata !217, metadata !9130, metadata !DIExpression()) #10, !dbg !11769
  store i32 1, i32* %tmp8.i, align 4, !dbg !11769
  %41 = load i32, i32* %tmp8.i, align 4, !dbg !11769
  %42 = load i64, i64* %flags.addr.i, align 8, !dbg !11770
  call void @arch_local_irq_restore(i64 %42) #13, !dbg !11770
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11771, !srcloc !9134
  %43 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i60, align 8, !dbg !11772
  %44 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %43, i32 0, i32 0, !dbg !11772
  %rlock.i61 = bitcast %union.anon.0* %44 to %struct.raw_spinlock*, !dbg !11772
  br label %if.end59, !dbg !11773

if.end59:                                         ; preds = %if.end57, %do.end20
  %45 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11774
  call void @tty_wakeup(%struct.tty_struct* %45) #11, !dbg !11775
  br label %return, !dbg !11776

return:                                           ; preds = %if.end59, %if.then
  ret void, !dbg !11776
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cy_tiocmget(%struct.tty_struct* %tty) #4 !dbg !11777 {
entry:
  %lock.addr.i99 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i99, metadata !9013, metadata !DIExpression()), !dbg !11778
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9019, metadata !DIExpression()), !dbg !11782
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7101, metadata !DIExpression()), !dbg !11783
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.cyclades_port*, align 8
  %card = alloca %struct.cyclades_card*, align 8
  %result = alloca i32, align 4
  %flags = alloca i64, align 8
  %channel = alloca i32, align 4
  %status = alloca i8, align 1
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  %lstatus = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !11790, metadata !DIExpression()), !dbg !11791
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info, metadata !11792, metadata !DIExpression()), !dbg !11793
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11794
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !11795
  %1 = load i8*, i8** %driver_data, align 8, !dbg !11795
  %2 = bitcast i8* %1 to %struct.cyclades_port*, !dbg !11794
  store %struct.cyclades_port* %2, %struct.cyclades_port** %info, align 8, !dbg !11793
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %card, metadata !11796, metadata !DIExpression()), !dbg !11797
  call void @llvm.dbg.declare(metadata i32* %result, metadata !11798, metadata !DIExpression()), !dbg !11799
  %3 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11800
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11802
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 18, !dbg !11803
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !11802
  %call = call i32 @serial_paranoia_check(%struct.cyclades_port* %3, i8* %arraydecay, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.cy_tiocmget, i64 0, i64 0)) #11, !dbg !11804
  %tobool = icmp ne i32 %call, 0, !dbg !11804
  br i1 %tobool, label %if.then, label %if.end, !dbg !11805

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !11806
  br label %return, !dbg !11806

if.end:                                           ; preds = %entry
  %5 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11807
  %card1 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %5, i32 0, i32 2, !dbg !11808
  %6 = load %struct.cyclades_card*, %struct.cyclades_card** %card1, align 8, !dbg !11808
  store %struct.cyclades_card* %6, %struct.cyclades_card** %card, align 8, !dbg !11809
  %7 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !11810
  %call2 = call zeroext i1 @cy_is_Z(%struct.cyclades_card* %7) #11, !dbg !11811
  br i1 %call2, label %if.else70, label %if.then3, !dbg !11812

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11813, metadata !DIExpression()), !dbg !11814
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !11815, metadata !DIExpression()), !dbg !11816
  %8 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11817
  %line = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %8, i32 0, i32 4, !dbg !11818
  %9 = load i32, i32* %line, align 8, !dbg !11818
  %10 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !11819
  %first_line = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %10, i32 0, i32 5, !dbg !11820
  %11 = load i32, i32* %first_line, align 8, !dbg !11820
  %sub = sub i32 %9, %11, !dbg !11821
  store i32 %sub, i32* %channel, align 4, !dbg !11816
  call void @llvm.dbg.declare(metadata i8* %status, metadata !11822, metadata !DIExpression()), !dbg !11823
  br label %do.body, !dbg !11824

do.body:                                          ; preds = %if.then3
  br label %do.body4, !dbg !11825

do.body4:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11826, metadata !DIExpression()), !dbg !11828
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11829, metadata !DIExpression()), !dbg !11828
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !11828
  %conv = zext i1 %cmp to i32, !dbg !11828
  store i32 1, i32* %tmp, align 4, !dbg !11828
  %12 = load i32, i32* %tmp, align 4, !dbg !11828
  br label %do.body5, !dbg !11830

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !11831

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !11832

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !11834, metadata !DIExpression()), !dbg !11837
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !11838, metadata !DIExpression()), !dbg !11837
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !11837
  %conv11 = zext i1 %cmp10 to i32, !dbg !11837
  store i32 1, i32* %tmp12, align 4, !dbg !11837
  %13 = load i32, i32* %tmp12, align 4, !dbg !11837
  %call13 = call i64 @arch_local_irq_save() #11, !dbg !11839
  store i64 %call13, i64* %flags, align 8, !dbg !11839
  br label %do.end, !dbg !11839

do.end:                                           ; preds = %do.body7
  br label %do.end14, !dbg !11832

do.end14:                                         ; preds = %do.end
  br label %do.body15, !dbg !11831

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11840, !srcloc !11841
  br label %do.body16, !dbg !11840

do.body16:                                        ; preds = %do.body15
  %14 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !11842
  %card_lock = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %14, i32 0, i32 10, !dbg !11842
  store %struct.spinlock* %card_lock, %struct.spinlock** %lock.addr.i, align 8
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11843
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !11844
  %rlock.i = bitcast %union.anon.0* %16 to %struct.raw_spinlock*, !dbg !11844
  br label %do.end18, !dbg !11842

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !11840

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !11831

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !11830

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !11825

do.end22:                                         ; preds = %do.end21
  %17 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11845
  %18 = load i32, i32* %channel, align 4, !dbg !11846
  %and = and i32 %18, 3, !dbg !11847
  %conv23 = trunc i32 %and to i8, !dbg !11846
  call void @cyy_writeb(%struct.cyclades_port* %17, i32 208, i8 zeroext %conv23) #11, !dbg !11848
  %19 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11849
  %call24 = call zeroext i8 @cyy_readb(%struct.cyclades_port* %19, i32 216) #11, !dbg !11850
  store i8 %call24, i8* %status, align 1, !dbg !11851
  %20 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11852
  %call25 = call zeroext i8 @cyy_readb(%struct.cyclades_port* %20, i32 218) #11, !dbg !11853
  %conv26 = zext i8 %call25 to i32, !dbg !11853
  %21 = load i8, i8* %status, align 1, !dbg !11854
  %conv27 = zext i8 %21 to i32, !dbg !11854
  %or = or i32 %conv27, %conv26, !dbg !11854
  %conv28 = trunc i32 %or to i8, !dbg !11854
  store i8 %conv28, i8* %status, align 1, !dbg !11854
  %22 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !11855
  %card_lock29 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %22, i32 0, i32 10, !dbg !11856
  %23 = load i64, i64* %flags, align 8, !dbg !11857
  store %struct.spinlock* %card_lock29, %struct.spinlock** %lock.addr.i99, align 8
  store i64 %23, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !217, metadata !9119, metadata !DIExpression()) #10, !dbg !11858
  call void @llvm.dbg.declare(metadata !217, metadata !9123, metadata !DIExpression()) #10, !dbg !11858
  store i32 1, i32* %tmp.i, align 4, !dbg !11858
  %24 = load i32, i32* %tmp.i, align 4, !dbg !11858
  call void @llvm.dbg.declare(metadata !217, metadata !9124, metadata !DIExpression()) #10, !dbg !11859
  call void @llvm.dbg.declare(metadata !217, metadata !9130, metadata !DIExpression()) #10, !dbg !11859
  store i32 1, i32* %tmp8.i, align 4, !dbg !11859
  %25 = load i32, i32* %tmp8.i, align 4, !dbg !11859
  %26 = load i64, i64* %flags.addr.i, align 8, !dbg !11860
  call void @arch_local_irq_restore(i64 %26) #13, !dbg !11860
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11861, !srcloc !9134
  %27 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i99, align 8, !dbg !11862
  %28 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %27, i32 0, i32 0, !dbg !11862
  %rlock.i100 = bitcast %union.anon.0* %28 to %struct.raw_spinlock*, !dbg !11862
  %29 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11863
  %rtsdtr_inv = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %29, i32 0, i32 22, !dbg !11865
  %30 = load i32, i32* %rtsdtr_inv, align 8, !dbg !11865
  %tobool30 = icmp ne i32 %30, 0, !dbg !11863
  br i1 %tobool30, label %if.then31, label %if.else, !dbg !11866

if.then31:                                        ; preds = %do.end22
  %31 = load i8, i8* %status, align 1, !dbg !11867
  %conv32 = zext i8 %31 to i32, !dbg !11867
  %and33 = and i32 %conv32, 1, !dbg !11869
  %tobool34 = icmp ne i32 %and33, 0, !dbg !11870
  %32 = zext i1 %tobool34 to i64, !dbg !11870
  %cond = select i1 %tobool34, i32 2, i32 0, !dbg !11870
  %33 = load i8, i8* %status, align 1, !dbg !11871
  %conv35 = zext i8 %33 to i32, !dbg !11871
  %and36 = and i32 %conv35, 2, !dbg !11872
  %tobool37 = icmp ne i32 %and36, 0, !dbg !11873
  %34 = zext i1 %tobool37 to i64, !dbg !11873
  %cond38 = select i1 %tobool37, i32 4, i32 0, !dbg !11873
  %or39 = or i32 %cond, %cond38, !dbg !11874
  store i32 %or39, i32* %result, align 4, !dbg !11875
  br label %if.end49, !dbg !11876

if.else:                                          ; preds = %do.end22
  %35 = load i8, i8* %status, align 1, !dbg !11877
  %conv40 = zext i8 %35 to i32, !dbg !11877
  %and41 = and i32 %conv40, 1, !dbg !11879
  %tobool42 = icmp ne i32 %and41, 0, !dbg !11880
  %36 = zext i1 %tobool42 to i64, !dbg !11880
  %cond43 = select i1 %tobool42, i32 4, i32 0, !dbg !11880
  %37 = load i8, i8* %status, align 1, !dbg !11881
  %conv44 = zext i8 %37 to i32, !dbg !11881
  %and45 = and i32 %conv44, 2, !dbg !11882
  %tobool46 = icmp ne i32 %and45, 0, !dbg !11883
  %38 = zext i1 %tobool46 to i64, !dbg !11883
  %cond47 = select i1 %tobool46, i32 2, i32 0, !dbg !11883
  %or48 = or i32 %cond43, %cond47, !dbg !11884
  store i32 %or48, i32* %result, align 4, !dbg !11885
  br label %if.end49

if.end49:                                         ; preds = %if.else, %if.then31
  %39 = load i8, i8* %status, align 1, !dbg !11886
  %conv50 = zext i8 %39 to i32, !dbg !11886
  %and51 = and i32 %conv50, 16, !dbg !11887
  %tobool52 = icmp ne i32 %and51, 0, !dbg !11888
  %40 = zext i1 %tobool52 to i64, !dbg !11888
  %cond53 = select i1 %tobool52, i32 64, i32 0, !dbg !11888
  %41 = load i8, i8* %status, align 1, !dbg !11889
  %conv54 = zext i8 %41 to i32, !dbg !11889
  %and55 = and i32 %conv54, 32, !dbg !11890
  %tobool56 = icmp ne i32 %and55, 0, !dbg !11891
  %42 = zext i1 %tobool56 to i64, !dbg !11891
  %cond57 = select i1 %tobool56, i32 128, i32 0, !dbg !11891
  %or58 = or i32 %cond53, %cond57, !dbg !11892
  %43 = load i8, i8* %status, align 1, !dbg !11893
  %conv59 = zext i8 %43 to i32, !dbg !11893
  %and60 = and i32 %conv59, 128, !dbg !11894
  %tobool61 = icmp ne i32 %and60, 0, !dbg !11895
  %44 = zext i1 %tobool61 to i64, !dbg !11895
  %cond62 = select i1 %tobool61, i32 256, i32 0, !dbg !11895
  %or63 = or i32 %or58, %cond62, !dbg !11896
  %45 = load i8, i8* %status, align 1, !dbg !11897
  %conv64 = zext i8 %45 to i32, !dbg !11897
  %and65 = and i32 %conv64, 64, !dbg !11898
  %tobool66 = icmp ne i32 %and65, 0, !dbg !11899
  %46 = zext i1 %tobool66 to i64, !dbg !11899
  %cond67 = select i1 %tobool66, i32 32, i32 0, !dbg !11899
  %or68 = or i32 %or63, %cond67, !dbg !11900
  %47 = load i32, i32* %result, align 4, !dbg !11901
  %or69 = or i32 %47, %or68, !dbg !11901
  store i32 %or69, i32* %result, align 4, !dbg !11901
  br label %if.end98, !dbg !11902

if.else70:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %lstatus, metadata !11903, metadata !DIExpression()), !dbg !11905
  %48 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !11906
  %call71 = call zeroext i1 @cyz_is_loaded(%struct.cyclades_card* %48) #11, !dbg !11908
  br i1 %call71, label %if.end73, label %if.then72, !dbg !11909

if.then72:                                        ; preds = %if.else70
  store i32 -19, i32* %result, align 4, !dbg !11910
  br label %end, !dbg !11912

if.end73:                                         ; preds = %if.else70
  %49 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11913
  %u = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %49, i32 0, i32 3, !dbg !11914
  %cyz = bitcast %union.anon.67* %u to %struct.anon.69*, !dbg !11915
  %ch_ctrl = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cyz, i32 0, i32 0, !dbg !11916
  %50 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !11916
  %rs_status = getelementptr inbounds %struct.CH_CTRL, %struct.CH_CTRL* %50, i32 0, i32 10, !dbg !11917
  %51 = bitcast i32* %rs_status to i8*, !dbg !11918
  %call74 = call i32 @readl(i8* %51) #11, !dbg !11919
  store i32 %call74, i32* %lstatus, align 4, !dbg !11920
  %52 = load i32, i32* %lstatus, align 4, !dbg !11921
  %and75 = and i32 %52, 1, !dbg !11922
  %tobool76 = icmp ne i32 %and75, 0, !dbg !11923
  %53 = zext i1 %tobool76 to i64, !dbg !11923
  %cond77 = select i1 %tobool76, i32 4, i32 0, !dbg !11923
  %54 = load i32, i32* %lstatus, align 4, !dbg !11924
  %and78 = and i32 %54, 4, !dbg !11925
  %tobool79 = icmp ne i32 %and78, 0, !dbg !11926
  %55 = zext i1 %tobool79 to i64, !dbg !11926
  %cond80 = select i1 %tobool79, i32 2, i32 0, !dbg !11926
  %or81 = or i32 %cond77, %cond80, !dbg !11927
  %56 = load i32, i32* %lstatus, align 4, !dbg !11928
  %and82 = and i32 %56, 256, !dbg !11929
  %tobool83 = icmp ne i32 %and82, 0, !dbg !11930
  %57 = zext i1 %tobool83 to i64, !dbg !11930
  %cond84 = select i1 %tobool83, i32 64, i32 0, !dbg !11930
  %or85 = or i32 %or81, %cond84, !dbg !11931
  %58 = load i32, i32* %lstatus, align 4, !dbg !11932
  %and86 = and i32 %58, 1024, !dbg !11933
  %tobool87 = icmp ne i32 %and86, 0, !dbg !11934
  %59 = zext i1 %tobool87 to i64, !dbg !11934
  %cond88 = select i1 %tobool87, i32 128, i32 0, !dbg !11934
  %or89 = or i32 %or85, %cond88, !dbg !11935
  %60 = load i32, i32* %lstatus, align 4, !dbg !11936
  %and90 = and i32 %60, 512, !dbg !11937
  %tobool91 = icmp ne i32 %and90, 0, !dbg !11938
  %61 = zext i1 %tobool91 to i64, !dbg !11938
  %cond92 = select i1 %tobool91, i32 256, i32 0, !dbg !11938
  %or93 = or i32 %or89, %cond92, !dbg !11939
  %62 = load i32, i32* %lstatus, align 4, !dbg !11940
  %and94 = and i32 %62, 2048, !dbg !11941
  %tobool95 = icmp ne i32 %and94, 0, !dbg !11942
  %63 = zext i1 %tobool95 to i64, !dbg !11942
  %cond96 = select i1 %tobool95, i32 32, i32 0, !dbg !11942
  %or97 = or i32 %or93, %cond96, !dbg !11943
  store i32 %or97, i32* %result, align 4, !dbg !11944
  br label %if.end98

if.end98:                                         ; preds = %if.end73, %if.end49
  br label %end, !dbg !11945

end:                                              ; preds = %if.end98, %if.then72
  call void @llvm.dbg.label(metadata !11946), !dbg !11947
  %64 = load i32, i32* %result, align 4, !dbg !11948
  store i32 %64, i32* %retval, align 4, !dbg !11949
  br label %return, !dbg !11949

return:                                           ; preds = %end, %if.then
  %65 = load i32, i32* %retval, align 4, !dbg !11950
  ret i32 %65, !dbg !11950
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cy_tiocmset(%struct.tty_struct* %tty, i32 %set, i32 %clear) #4 !dbg !11951 {
entry:
  %lock.addr.i94 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i94, metadata !7101, metadata !DIExpression()), !dbg !11952
  %lock.addr.i89 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i89, metadata !9013, metadata !DIExpression()), !dbg !11961
  %flags.addr.i90 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i90, metadata !9019, metadata !DIExpression()), !dbg !11964
  %tmp.i91 = alloca i32, align 4
  %tmp8.i92 = alloca i32, align 4
  %lock.addr.i87 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i87, metadata !9013, metadata !DIExpression()), !dbg !11965
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9019, metadata !DIExpression()), !dbg !11967
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7101, metadata !DIExpression()), !dbg !11968
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %set.addr = alloca i32, align 4
  %clear.addr = alloca i32, align 4
  %info = alloca %struct.cyclades_port*, align 8
  %card = alloca %struct.cyclades_card*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  %ch_ctrl = alloca %struct.CH_CTRL*, align 8
  %retval25 = alloca i32, align 4
  %channel = alloca i32, align 4
  %rs = alloca i32, align 4
  %__dummy31 = alloca i64, align 8
  %__dummy232 = alloca i64, align 8
  %tmp35 = alloca i32, align 4
  %__dummy39 = alloca i64, align 8
  %__dummy240 = alloca i64, align 8
  %tmp43 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !11975, metadata !DIExpression()), !dbg !11976
  store i32 %set, i32* %set.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %set.addr, metadata !11977, metadata !DIExpression()), !dbg !11978
  store i32 %clear, i32* %clear.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %clear.addr, metadata !11979, metadata !DIExpression()), !dbg !11980
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info, metadata !11981, metadata !DIExpression()), !dbg !11982
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11983
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !11984
  %1 = load i8*, i8** %driver_data, align 8, !dbg !11984
  %2 = bitcast i8* %1 to %struct.cyclades_port*, !dbg !11983
  store %struct.cyclades_port* %2, %struct.cyclades_port** %info, align 8, !dbg !11982
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %card, metadata !11985, metadata !DIExpression()), !dbg !11986
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11987, metadata !DIExpression()), !dbg !11988
  %3 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11989
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11991
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 18, !dbg !11992
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !11991
  %call = call i32 @serial_paranoia_check(%struct.cyclades_port* %3, i8* %arraydecay, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.cy_tiocmset, i64 0, i64 0)) #11, !dbg !11993
  %tobool = icmp ne i32 %call, 0, !dbg !11993
  br i1 %tobool, label %if.then, label %if.end, !dbg !11994

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !11995
  br label %return, !dbg !11995

if.end:                                           ; preds = %entry
  %5 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !11996
  %card1 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %5, i32 0, i32 2, !dbg !11997
  %6 = load %struct.cyclades_card*, %struct.cyclades_card** %card1, align 8, !dbg !11997
  store %struct.cyclades_card* %6, %struct.cyclades_card** %card, align 8, !dbg !11998
  %7 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !11999
  %call2 = call zeroext i1 @cy_is_Z(%struct.cyclades_card* %7) #11, !dbg !12000
  br i1 %call2, label %if.else, label %if.then3, !dbg !12001

if.then3:                                         ; preds = %if.end
  br label %do.body, !dbg !12002

do.body:                                          ; preds = %if.then3
  br label %do.body4, !dbg !12003

do.body4:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12004, metadata !DIExpression()), !dbg !12006
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12007, metadata !DIExpression()), !dbg !12006
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !12006
  %conv = zext i1 %cmp to i32, !dbg !12006
  store i32 1, i32* %tmp, align 4, !dbg !12006
  %8 = load i32, i32* %tmp, align 4, !dbg !12006
  br label %do.body5, !dbg !12008

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !12009

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !12010

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !12012, metadata !DIExpression()), !dbg !12015
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !12016, metadata !DIExpression()), !dbg !12015
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !12015
  %conv11 = zext i1 %cmp10 to i32, !dbg !12015
  store i32 1, i32* %tmp12, align 4, !dbg !12015
  %9 = load i32, i32* %tmp12, align 4, !dbg !12015
  %call13 = call i64 @arch_local_irq_save() #11, !dbg !12017
  store i64 %call13, i64* %flags, align 8, !dbg !12017
  br label %do.end, !dbg !12017

do.end:                                           ; preds = %do.body7
  br label %do.end14, !dbg !12010

do.end14:                                         ; preds = %do.end
  br label %do.body15, !dbg !12009

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12018, !srcloc !12019
  br label %do.body16, !dbg !12018

do.body16:                                        ; preds = %do.body15
  %10 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !12020
  %card_lock = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %10, i32 0, i32 10, !dbg !12020
  store %struct.spinlock* %card_lock, %struct.spinlock** %lock.addr.i, align 8
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12021
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !12022
  %rlock.i = bitcast %union.anon.0* %12 to %struct.raw_spinlock*, !dbg !12022
  br label %do.end18, !dbg !12020

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !12018

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !12009

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !12008

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !12003

do.end22:                                         ; preds = %do.end21
  %13 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12023
  %14 = load i32, i32* %set.addr, align 4, !dbg !12024
  %15 = load i32, i32* %clear.addr, align 4, !dbg !12025
  call void @cyy_change_rts_dtr(%struct.cyclades_port* %13, i32 %14, i32 %15) #11, !dbg !12026
  %16 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !12027
  %card_lock23 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %16, i32 0, i32 10, !dbg !12028
  %17 = load i64, i64* %flags, align 8, !dbg !12029
  store %struct.spinlock* %card_lock23, %struct.spinlock** %lock.addr.i89, align 8
  store i64 %17, i64* %flags.addr.i90, align 8
  call void @llvm.dbg.declare(metadata !217, metadata !9119, metadata !DIExpression()) #10, !dbg !12030
  call void @llvm.dbg.declare(metadata !217, metadata !9123, metadata !DIExpression()) #10, !dbg !12030
  store i32 1, i32* %tmp.i91, align 4, !dbg !12030
  %18 = load i32, i32* %tmp.i91, align 4, !dbg !12030
  call void @llvm.dbg.declare(metadata !217, metadata !9124, metadata !DIExpression()) #10, !dbg !12031
  call void @llvm.dbg.declare(metadata !217, metadata !9130, metadata !DIExpression()) #10, !dbg !12031
  store i32 1, i32* %tmp8.i92, align 4, !dbg !12031
  %19 = load i32, i32* %tmp8.i92, align 4, !dbg !12031
  %20 = load i64, i64* %flags.addr.i90, align 8, !dbg !12032
  call void @arch_local_irq_restore(i64 %20) #13, !dbg !12032
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12033, !srcloc !9134
  %21 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i89, align 8, !dbg !12034
  %22 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %21, i32 0, i32 0, !dbg !12034
  %rlock.i93 = bitcast %union.anon.0* %22 to %struct.raw_spinlock*, !dbg !12034
  br label %if.end86, !dbg !12035

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.CH_CTRL** %ch_ctrl, metadata !12036, metadata !DIExpression()), !dbg !12037
  %23 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12038
  %u = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %23, i32 0, i32 3, !dbg !12039
  %cyz = bitcast %union.anon.67* %u to %struct.anon.69*, !dbg !12040
  %ch_ctrl24 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cyz, i32 0, i32 0, !dbg !12041
  %24 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl24, align 8, !dbg !12041
  store %struct.CH_CTRL* %24, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !12037
  call void @llvm.dbg.declare(metadata i32* %retval25, metadata !12042, metadata !DIExpression()), !dbg !12043
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !12044, metadata !DIExpression()), !dbg !12045
  %25 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12046
  %line = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %25, i32 0, i32 4, !dbg !12047
  %26 = load i32, i32* %line, align 8, !dbg !12047
  %27 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !12048
  %first_line = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %27, i32 0, i32 5, !dbg !12049
  %28 = load i32, i32* %first_line, align 8, !dbg !12049
  %sub = sub i32 %26, %28, !dbg !12050
  store i32 %sub, i32* %channel, align 4, !dbg !12045
  call void @llvm.dbg.declare(metadata i32* %rs, metadata !12051, metadata !DIExpression()), !dbg !12052
  %29 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !12053
  %call26 = call zeroext i1 @cyz_is_loaded(%struct.cyclades_card* %29) #11, !dbg !12055
  br i1 %call26, label %if.end28, label %if.then27, !dbg !12056

if.then27:                                        ; preds = %if.else
  store i32 -19, i32* %retval, align 4, !dbg !12057
  br label %return, !dbg !12057

if.end28:                                         ; preds = %if.else
  br label %do.body29, !dbg !12058

do.body29:                                        ; preds = %if.end28
  br label %do.body30, !dbg !12059

do.body30:                                        ; preds = %do.body29
  call void @llvm.dbg.declare(metadata i64* %__dummy31, metadata !12060, metadata !DIExpression()), !dbg !12062
  call void @llvm.dbg.declare(metadata i64* %__dummy232, metadata !12063, metadata !DIExpression()), !dbg !12062
  %cmp33 = icmp eq i64* %__dummy31, %__dummy232, !dbg !12062
  %conv34 = zext i1 %cmp33 to i32, !dbg !12062
  store i32 1, i32* %tmp35, align 4, !dbg !12062
  %30 = load i32, i32* %tmp35, align 4, !dbg !12062
  br label %do.body36, !dbg !12064

do.body36:                                        ; preds = %do.body30
  br label %do.body37, !dbg !12065

do.body37:                                        ; preds = %do.body36
  br label %do.body38, !dbg !12066

do.body38:                                        ; preds = %do.body37
  call void @llvm.dbg.declare(metadata i64* %__dummy39, metadata !12068, metadata !DIExpression()), !dbg !12071
  call void @llvm.dbg.declare(metadata i64* %__dummy240, metadata !12072, metadata !DIExpression()), !dbg !12071
  %cmp41 = icmp eq i64* %__dummy39, %__dummy240, !dbg !12071
  %conv42 = zext i1 %cmp41 to i32, !dbg !12071
  store i32 1, i32* %tmp43, align 4, !dbg !12071
  %31 = load i32, i32* %tmp43, align 4, !dbg !12071
  %call44 = call i64 @arch_local_irq_save() #11, !dbg !12073
  store i64 %call44, i64* %flags, align 8, !dbg !12073
  br label %do.end45, !dbg !12073

do.end45:                                         ; preds = %do.body38
  br label %do.end46, !dbg !12066

do.end46:                                         ; preds = %do.end45
  br label %do.body47, !dbg !12065

do.body47:                                        ; preds = %do.end46
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12074, !srcloc !12075
  br label %do.body48, !dbg !12074

do.body48:                                        ; preds = %do.body47
  %32 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !12076
  %card_lock49 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %32, i32 0, i32 10, !dbg !12076
  store %struct.spinlock* %card_lock49, %struct.spinlock** %lock.addr.i94, align 8
  %33 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i94, align 8, !dbg !12077
  %34 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %33, i32 0, i32 0, !dbg !12078
  %rlock.i95 = bitcast %union.anon.0* %34 to %struct.raw_spinlock*, !dbg !12078
  br label %do.end51, !dbg !12076

do.end51:                                         ; preds = %do.body48
  br label %do.end52, !dbg !12074

do.end52:                                         ; preds = %do.end51
  br label %do.end53, !dbg !12065

do.end53:                                         ; preds = %do.end52
  br label %do.end54, !dbg !12064

do.end54:                                         ; preds = %do.end53
  br label %do.end55, !dbg !12059

do.end55:                                         ; preds = %do.end54
  %35 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !12079
  %rs_control = getelementptr inbounds %struct.CH_CTRL, %struct.CH_CTRL* %35, i32 0, i32 9, !dbg !12080
  %36 = bitcast i32* %rs_control to i8*, !dbg !12081
  %call56 = call i32 @readl(i8* %36) #11, !dbg !12082
  store i32 %call56, i32* %rs, align 4, !dbg !12083
  %37 = load i32, i32* %set.addr, align 4, !dbg !12084
  %and = and i32 %37, 4, !dbg !12086
  %tobool57 = icmp ne i32 %and, 0, !dbg !12086
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !12087

if.then58:                                        ; preds = %do.end55
  %38 = load i32, i32* %rs, align 4, !dbg !12088
  %or = or i32 %38, 1, !dbg !12088
  store i32 %or, i32* %rs, align 4, !dbg !12088
  br label %if.end59, !dbg !12089

if.end59:                                         ; preds = %if.then58, %do.end55
  %39 = load i32, i32* %clear.addr, align 4, !dbg !12090
  %and60 = and i32 %39, 4, !dbg !12092
  %tobool61 = icmp ne i32 %and60, 0, !dbg !12092
  br i1 %tobool61, label %if.then62, label %if.end64, !dbg !12093

if.then62:                                        ; preds = %if.end59
  %40 = load i32, i32* %rs, align 4, !dbg !12094
  %and63 = and i32 %40, -2, !dbg !12094
  store i32 %and63, i32* %rs, align 4, !dbg !12094
  br label %if.end64, !dbg !12095

if.end64:                                         ; preds = %if.then62, %if.end59
  %41 = load i32, i32* %set.addr, align 4, !dbg !12096
  %and65 = and i32 %41, 2, !dbg !12098
  %tobool66 = icmp ne i32 %and65, 0, !dbg !12098
  br i1 %tobool66, label %if.then67, label %if.end69, !dbg !12099

if.then67:                                        ; preds = %if.end64
  %42 = load i32, i32* %rs, align 4, !dbg !12100
  %or68 = or i32 %42, 4, !dbg !12100
  store i32 %or68, i32* %rs, align 4, !dbg !12100
  br label %if.end69, !dbg !12102

if.end69:                                         ; preds = %if.then67, %if.end64
  %43 = load i32, i32* %clear.addr, align 4, !dbg !12103
  %and70 = and i32 %43, 2, !dbg !12105
  %tobool71 = icmp ne i32 %and70, 0, !dbg !12105
  br i1 %tobool71, label %if.then72, label %if.end74, !dbg !12106

if.then72:                                        ; preds = %if.end69
  %44 = load i32, i32* %rs, align 4, !dbg !12107
  %and73 = and i32 %44, -5, !dbg !12107
  store i32 %and73, i32* %rs, align 4, !dbg !12107
  br label %if.end74, !dbg !12109

if.end74:                                         ; preds = %if.then72, %if.end69
  br label %do.body75, !dbg !12110

do.body75:                                        ; preds = %if.end74
  %45 = load i32, i32* %rs, align 4, !dbg !12111
  %46 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !12111
  %rs_control76 = getelementptr inbounds %struct.CH_CTRL, %struct.CH_CTRL* %46, i32 0, i32 9, !dbg !12111
  %47 = bitcast i32* %rs_control76 to i8*, !dbg !12111
  call void @writel(i32 %45, i8* %47) #11, !dbg !12111
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12111, !srcloc !12113
  br label %do.end77, !dbg !12111

do.end77:                                         ; preds = %do.body75
  %48 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !12114
  %49 = load i32, i32* %channel, align 4, !dbg !12115
  %call78 = call i32 @cyz_issue_cmd(%struct.cyclades_card* %48, i32 %49, i8 zeroext 4, i32 0) #11, !dbg !12116
  store i32 %call78, i32* %retval25, align 4, !dbg !12117
  %50 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !12118
  %card_lock79 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %50, i32 0, i32 10, !dbg !12119
  %51 = load i64, i64* %flags, align 8, !dbg !12120
  store %struct.spinlock* %card_lock79, %struct.spinlock** %lock.addr.i87, align 8
  store i64 %51, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !217, metadata !9119, metadata !DIExpression()) #10, !dbg !12121
  call void @llvm.dbg.declare(metadata !217, metadata !9123, metadata !DIExpression()) #10, !dbg !12121
  store i32 1, i32* %tmp.i, align 4, !dbg !12121
  %52 = load i32, i32* %tmp.i, align 4, !dbg !12121
  call void @llvm.dbg.declare(metadata !217, metadata !9124, metadata !DIExpression()) #10, !dbg !12122
  call void @llvm.dbg.declare(metadata !217, metadata !9130, metadata !DIExpression()) #10, !dbg !12122
  store i32 1, i32* %tmp8.i, align 4, !dbg !12122
  %53 = load i32, i32* %tmp8.i, align 4, !dbg !12122
  %54 = load i64, i64* %flags.addr.i, align 8, !dbg !12123
  call void @arch_local_irq_restore(i64 %54) #13, !dbg !12123
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12124, !srcloc !9134
  %55 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i87, align 8, !dbg !12125
  %56 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %55, i32 0, i32 0, !dbg !12125
  %rlock.i88 = bitcast %union.anon.0* %56 to %struct.raw_spinlock*, !dbg !12125
  %57 = load i32, i32* %retval25, align 4, !dbg !12126
  %cmp80 = icmp ne i32 %57, 0, !dbg !12128
  br i1 %cmp80, label %if.then82, label %if.end85, !dbg !12129

if.then82:                                        ; preds = %do.end77
  %58 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12130
  %line83 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %58, i32 0, i32 4, !dbg !12132
  %59 = load i32, i32* %line83, align 8, !dbg !12132
  %60 = load i32, i32* %retval25, align 4, !dbg !12133
  %call84 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.72, i64 0, i64 0), i32 %59, i32 %60) #12, !dbg !12134
  br label %if.end85, !dbg !12135

if.end85:                                         ; preds = %if.then82, %do.end77
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %do.end22
  store i32 0, i32* %retval, align 4, !dbg !12136
  br label %return, !dbg !12136

return:                                           ; preds = %if.end86, %if.then27, %if.then
  %61 = load i32, i32* %retval, align 4, !dbg !12137
  ret i32 %61, !dbg !12137
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cy_get_icount(%struct.tty_struct* %tty, %struct.serial_icounter_struct* %sic) #4 !dbg !12138 {
entry:
  %lock.addr.i32 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i32, metadata !9013, metadata !DIExpression()), !dbg !12139
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9019, metadata !DIExpression()), !dbg !12141
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7101, metadata !DIExpression()), !dbg !12142
  %tty.addr = alloca %struct.tty_struct*, align 8
  %sic.addr = alloca %struct.serial_icounter_struct*, align 8
  %info = alloca %struct.cyclades_port*, align 8
  %cnow = alloca %struct.cyclades_icount, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !12149, metadata !DIExpression()), !dbg !12150
  store %struct.serial_icounter_struct* %sic, %struct.serial_icounter_struct** %sic.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.serial_icounter_struct** %sic.addr, metadata !12151, metadata !DIExpression()), !dbg !12152
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info, metadata !12153, metadata !DIExpression()), !dbg !12154
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12155
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !12156
  %1 = load i8*, i8** %driver_data, align 8, !dbg !12156
  %2 = bitcast i8* %1 to %struct.cyclades_port*, !dbg !12155
  store %struct.cyclades_port* %2, %struct.cyclades_port** %info, align 8, !dbg !12154
  call void @llvm.dbg.declare(metadata %struct.cyclades_icount* %cnow, metadata !12157, metadata !DIExpression()), !dbg !12158
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12159, metadata !DIExpression()), !dbg !12160
  br label %do.body, !dbg !12161

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !12162

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12163, metadata !DIExpression()), !dbg !12165
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12166, metadata !DIExpression()), !dbg !12165
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !12165
  %conv = zext i1 %cmp to i32, !dbg !12165
  store i32 1, i32* %tmp, align 4, !dbg !12165
  %3 = load i32, i32* %tmp, align 4, !dbg !12165
  br label %do.body2, !dbg !12167

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !12168

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !12169

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !12171, metadata !DIExpression()), !dbg !12174
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !12175, metadata !DIExpression()), !dbg !12174
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !12174
  %conv8 = zext i1 %cmp7 to i32, !dbg !12174
  store i32 1, i32* %tmp9, align 4, !dbg !12174
  %4 = load i32, i32* %tmp9, align 4, !dbg !12174
  %call = call i64 @arch_local_irq_save() #11, !dbg !12176
  store i64 %call, i64* %flags, align 8, !dbg !12176
  br label %do.end, !dbg !12176

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !12169

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !12168

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12177, !srcloc !12178
  br label %do.body12, !dbg !12177

do.body12:                                        ; preds = %do.body11
  %5 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12179
  %card = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %5, i32 0, i32 2, !dbg !12179
  %6 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !12179
  %card_lock = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %6, i32 0, i32 10, !dbg !12179
  store %struct.spinlock* %card_lock, %struct.spinlock** %lock.addr.i, align 8
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12180
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !12181
  %rlock.i = bitcast %union.anon.0* %8 to %struct.raw_spinlock*, !dbg !12181
  br label %do.end14, !dbg !12179

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !12177

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !12168

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !12167

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !12162

do.end18:                                         ; preds = %do.end17
  %9 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12182
  %icount = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %9, i32 0, i32 36, !dbg !12183
  %10 = bitcast %struct.cyclades_icount* %cnow to i8*, !dbg !12183
  %11 = bitcast %struct.cyclades_icount* %icount to i8*, !dbg !12183
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 8 %11, i64 44, i1 false), !dbg !12183
  %12 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12184
  %card19 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %12, i32 0, i32 2, !dbg !12185
  %13 = load %struct.cyclades_card*, %struct.cyclades_card** %card19, align 8, !dbg !12185
  %card_lock20 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %13, i32 0, i32 10, !dbg !12186
  %14 = load i64, i64* %flags, align 8, !dbg !12187
  store %struct.spinlock* %card_lock20, %struct.spinlock** %lock.addr.i32, align 8
  store i64 %14, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !217, metadata !9119, metadata !DIExpression()) #10, !dbg !12188
  call void @llvm.dbg.declare(metadata !217, metadata !9123, metadata !DIExpression()) #10, !dbg !12188
  store i32 1, i32* %tmp.i, align 4, !dbg !12188
  %15 = load i32, i32* %tmp.i, align 4, !dbg !12188
  call void @llvm.dbg.declare(metadata !217, metadata !9124, metadata !DIExpression()) #10, !dbg !12189
  call void @llvm.dbg.declare(metadata !217, metadata !9130, metadata !DIExpression()) #10, !dbg !12189
  store i32 1, i32* %tmp8.i, align 4, !dbg !12189
  %16 = load i32, i32* %tmp8.i, align 4, !dbg !12189
  %17 = load i64, i64* %flags.addr.i, align 8, !dbg !12190
  call void @arch_local_irq_restore(i64 %17) #13, !dbg !12190
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12191, !srcloc !9134
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i32, align 8, !dbg !12192
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !12192
  %rlock.i33 = bitcast %union.anon.0* %19 to %struct.raw_spinlock*, !dbg !12192
  %cts = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %cnow, i32 0, i32 0, !dbg !12193
  %20 = load i32, i32* %cts, align 4, !dbg !12193
  %21 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %sic.addr, align 8, !dbg !12194
  %cts21 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %21, i32 0, i32 0, !dbg !12195
  store i32 %20, i32* %cts21, align 4, !dbg !12196
  %dsr = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %cnow, i32 0, i32 1, !dbg !12197
  %22 = load i32, i32* %dsr, align 4, !dbg !12197
  %23 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %sic.addr, align 8, !dbg !12198
  %dsr22 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %23, i32 0, i32 1, !dbg !12199
  store i32 %22, i32* %dsr22, align 4, !dbg !12200
  %rng = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %cnow, i32 0, i32 2, !dbg !12201
  %24 = load i32, i32* %rng, align 4, !dbg !12201
  %25 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %sic.addr, align 8, !dbg !12202
  %rng23 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %25, i32 0, i32 2, !dbg !12203
  store i32 %24, i32* %rng23, align 4, !dbg !12204
  %dcd = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %cnow, i32 0, i32 3, !dbg !12205
  %26 = load i32, i32* %dcd, align 4, !dbg !12205
  %27 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %sic.addr, align 8, !dbg !12206
  %dcd24 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %27, i32 0, i32 3, !dbg !12207
  store i32 %26, i32* %dcd24, align 4, !dbg !12208
  %rx = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %cnow, i32 0, i32 5, !dbg !12209
  %28 = load i32, i32* %rx, align 4, !dbg !12209
  %29 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %sic.addr, align 8, !dbg !12210
  %rx25 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %29, i32 0, i32 4, !dbg !12211
  store i32 %28, i32* %rx25, align 4, !dbg !12212
  %tx = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %cnow, i32 0, i32 4, !dbg !12213
  %30 = load i32, i32* %tx, align 4, !dbg !12213
  %31 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %sic.addr, align 8, !dbg !12214
  %tx26 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %31, i32 0, i32 5, !dbg !12215
  store i32 %30, i32* %tx26, align 4, !dbg !12216
  %frame = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %cnow, i32 0, i32 6, !dbg !12217
  %32 = load i32, i32* %frame, align 4, !dbg !12217
  %33 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %sic.addr, align 8, !dbg !12218
  %frame27 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %33, i32 0, i32 6, !dbg !12219
  store i32 %32, i32* %frame27, align 4, !dbg !12220
  %overrun = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %cnow, i32 0, i32 8, !dbg !12221
  %34 = load i32, i32* %overrun, align 4, !dbg !12221
  %35 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %sic.addr, align 8, !dbg !12222
  %overrun28 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %35, i32 0, i32 7, !dbg !12223
  store i32 %34, i32* %overrun28, align 4, !dbg !12224
  %parity = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %cnow, i32 0, i32 7, !dbg !12225
  %36 = load i32, i32* %parity, align 4, !dbg !12225
  %37 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %sic.addr, align 8, !dbg !12226
  %parity29 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %37, i32 0, i32 8, !dbg !12227
  store i32 %36, i32* %parity29, align 4, !dbg !12228
  %brk = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %cnow, i32 0, i32 9, !dbg !12229
  %38 = load i32, i32* %brk, align 4, !dbg !12229
  %39 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %sic.addr, align 8, !dbg !12230
  %brk30 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %39, i32 0, i32 9, !dbg !12231
  store i32 %38, i32* %brk30, align 4, !dbg !12232
  %buf_overrun = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %cnow, i32 0, i32 10, !dbg !12233
  %40 = load i32, i32* %buf_overrun, align 4, !dbg !12233
  %41 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %sic.addr, align 8, !dbg !12234
  %buf_overrun31 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %41, i32 0, i32 10, !dbg !12235
  store i32 %40, i32* %buf_overrun31, align 4, !dbg !12236
  ret i32 0, !dbg !12237
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cy_get_serial_info(%struct.tty_struct* %tty, %struct.serial_struct* %ss) #4 !dbg !12238 {
entry:
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %ss.addr = alloca %struct.serial_struct*, align 8
  %info = alloca %struct.cyclades_port*, align 8
  %cinfo = alloca %struct.cyclades_card*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !12239, metadata !DIExpression()), !dbg !12240
  store %struct.serial_struct* %ss, %struct.serial_struct** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.serial_struct** %ss.addr, metadata !12241, metadata !DIExpression()), !dbg !12242
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info, metadata !12243, metadata !DIExpression()), !dbg !12244
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12245
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !12246
  %1 = load i8*, i8** %driver_data, align 8, !dbg !12246
  %2 = bitcast i8* %1 to %struct.cyclades_port*, !dbg !12245
  store %struct.cyclades_port* %2, %struct.cyclades_port** %info, align 8, !dbg !12244
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %cinfo, metadata !12247, metadata !DIExpression()), !dbg !12248
  %3 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12249
  %card = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %3, i32 0, i32 2, !dbg !12250
  %4 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !12250
  store %struct.cyclades_card* %4, %struct.cyclades_card** %cinfo, align 8, !dbg !12248
  %5 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12251
  %6 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12253
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %6, i32 0, i32 18, !dbg !12254
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !12253
  %call = call i32 @serial_paranoia_check(%struct.cyclades_port* %5, i8* %arraydecay, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58, i64 0, i64 0)) #11, !dbg !12255
  %tobool = icmp ne i32 %call, 0, !dbg !12255
  br i1 %tobool, label %if.then, label %if.end, !dbg !12256

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !12257
  br label %return, !dbg !12257

if.end:                                           ; preds = %entry
  %7 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12258
  %type = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %7, i32 0, i32 6, !dbg !12259
  %8 = load i32, i32* %type, align 8, !dbg !12259
  %9 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !12260
  %type1 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %9, i32 0, i32 0, !dbg !12261
  store i32 %8, i32* %type1, align 8, !dbg !12262
  %10 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12263
  %line = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %10, i32 0, i32 4, !dbg !12264
  %11 = load i32, i32* %line, align 8, !dbg !12264
  %12 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !12265
  %line2 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %12, i32 0, i32 1, !dbg !12266
  store i32 %11, i32* %line2, align 4, !dbg !12267
  %13 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12268
  %card3 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %13, i32 0, i32 2, !dbg !12269
  %14 = load %struct.cyclades_card*, %struct.cyclades_card** %card3, align 8, !dbg !12269
  %sub.ptr.lhs.cast = ptrtoint %struct.cyclades_card* %14 to i64, !dbg !12270
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, ptrtoint ([4 x %struct.cyclades_card]* @cy_card to i64), !dbg !12270
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 64, !dbg !12270
  %mul = mul i64 %sub.ptr.div, 256, !dbg !12271
  %15 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12272
  %line4 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %15, i32 0, i32 4, !dbg !12273
  %16 = load i32, i32* %line4, align 8, !dbg !12273
  %conv = sext i32 %16 to i64, !dbg !12272
  %add = add i64 %mul, %conv, !dbg !12274
  %17 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !12275
  %first_line = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %17, i32 0, i32 5, !dbg !12276
  %18 = load i32, i32* %first_line, align 8, !dbg !12276
  %conv5 = zext i32 %18 to i64, !dbg !12275
  %sub = sub i64 %add, %conv5, !dbg !12277
  %conv6 = trunc i64 %sub to i32, !dbg !12278
  %19 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !12279
  %port = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %19, i32 0, i32 2, !dbg !12280
  store i32 %conv6, i32* %port, align 8, !dbg !12281
  %20 = load %struct.cyclades_card*, %struct.cyclades_card** %cinfo, align 8, !dbg !12282
  %irq = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %20, i32 0, i32 3, !dbg !12283
  %21 = load i32, i32* %irq, align 8, !dbg !12283
  %22 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !12284
  %irq7 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %22, i32 0, i32 3, !dbg !12285
  store i32 %21, i32* %irq7, align 4, !dbg !12286
  %23 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12287
  %port8 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %23, i32 0, i32 1, !dbg !12288
  %flags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port8, i32 0, i32 10, !dbg !12289
  %24 = load i64, i64* %flags, align 8, !dbg !12289
  %conv9 = trunc i64 %24 to i32, !dbg !12287
  %25 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !12290
  %flags10 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %25, i32 0, i32 4, !dbg !12291
  store i32 %conv9, i32* %flags10, align 8, !dbg !12292
  %26 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12293
  %port11 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %26, i32 0, i32 1, !dbg !12294
  %close_delay = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port11, i32 0, i32 16, !dbg !12295
  %27 = load i32, i32* %close_delay, align 8, !dbg !12295
  %conv12 = trunc i32 %27 to i16, !dbg !12293
  %28 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !12296
  %close_delay13 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %28, i32 0, i32 8, !dbg !12297
  store i16 %conv12, i16* %close_delay13, align 8, !dbg !12298
  %29 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12299
  %port14 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %29, i32 0, i32 1, !dbg !12300
  %closing_wait = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port14, i32 0, i32 17, !dbg !12301
  %30 = load i32, i32* %closing_wait, align 4, !dbg !12301
  %conv15 = trunc i32 %30 to i16, !dbg !12299
  %31 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !12302
  %closing_wait16 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %31, i32 0, i32 12, !dbg !12303
  store i16 %conv15, i16* %closing_wait16, align 8, !dbg !12304
  %32 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12305
  %baud = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %32, i32 0, i32 20, !dbg !12306
  %33 = load i32, i32* %baud, align 8, !dbg !12306
  %34 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !12307
  %baud_base = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %34, i32 0, i32 7, !dbg !12308
  store i32 %33, i32* %baud_base, align 4, !dbg !12309
  %35 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12310
  %custom_divisor = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %35, i32 0, i32 24, !dbg !12311
  %36 = load i32, i32* %custom_divisor, align 8, !dbg !12311
  %37 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !12312
  %custom_divisor17 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %37, i32 0, i32 6, !dbg !12313
  store i32 %36, i32* %custom_divisor17, align 8, !dbg !12314
  store i32 0, i32* %retval, align 4, !dbg !12315
  br label %return, !dbg !12315

return:                                           ; preds = %if.end, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !12316
  ret i32 %38, !dbg !12316
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cy_set_serial_info(%struct.tty_struct* %tty, %struct.serial_struct* %ss) #4 !dbg !4817 {
entry:
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %ss.addr = alloca %struct.serial_struct*, align 8
  %info = alloca %struct.cyclades_port*, align 8
  %old_flags = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !12317, metadata !DIExpression()), !dbg !12318
  store %struct.serial_struct* %ss, %struct.serial_struct** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.serial_struct** %ss.addr, metadata !12319, metadata !DIExpression()), !dbg !12320
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info, metadata !12321, metadata !DIExpression()), !dbg !12322
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12323
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !12324
  %1 = load i8*, i8** %driver_data, align 8, !dbg !12324
  %2 = bitcast i8* %1 to %struct.cyclades_port*, !dbg !12323
  store %struct.cyclades_port* %2, %struct.cyclades_port** %info, align 8, !dbg !12322
  call void @llvm.dbg.declare(metadata i32* %old_flags, metadata !12325, metadata !DIExpression()), !dbg !12326
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12327, metadata !DIExpression()), !dbg !12328
  %3 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12329
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12331
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 18, !dbg !12332
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !12331
  %call = call i32 @serial_paranoia_check(%struct.cyclades_port* %3, i8* %arraydecay, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58, i64 0, i64 0)) #11, !dbg !12333
  %tobool = icmp ne i32 %call, 0, !dbg !12333
  br i1 %tobool, label %if.then, label %if.end, !dbg !12334

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !12335
  br label %return, !dbg !12335

if.end:                                           ; preds = %entry
  %5 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12336
  %port = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %5, i32 0, i32 1, !dbg !12337
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 13, !dbg !12338
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !12339
  %6 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12340
  %port1 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %6, i32 0, i32 1, !dbg !12341
  %flags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port1, i32 0, i32 10, !dbg !12342
  %7 = load i64, i64* %flags, align 8, !dbg !12342
  %conv = trunc i64 %7 to i32, !dbg !12340
  store i32 %conv, i32* %old_flags, align 4, !dbg !12343
  %call2 = call zeroext i1 @capable(i32 21) #11, !dbg !12344
  br i1 %call2, label %if.end35, label %if.then3, !dbg !12346

if.then3:                                         ; preds = %if.end
  %8 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !12347
  %close_delay = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %8, i32 0, i32 8, !dbg !12350
  %9 = load i16, i16* %close_delay, align 8, !dbg !12350
  %conv4 = zext i16 %9 to i32, !dbg !12347
  %10 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12351
  %port5 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %10, i32 0, i32 1, !dbg !12352
  %close_delay6 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port5, i32 0, i32 16, !dbg !12353
  %11 = load i32, i32* %close_delay6, align 8, !dbg !12353
  %cmp = icmp ne i32 %conv4, %11, !dbg !12354
  br i1 %cmp, label %if.then20, label %lor.lhs.false, !dbg !12355

lor.lhs.false:                                    ; preds = %if.then3
  %12 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !12356
  %baud_base = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %12, i32 0, i32 7, !dbg !12357
  %13 = load i32, i32* %baud_base, align 4, !dbg !12357
  %14 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12358
  %baud = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %14, i32 0, i32 20, !dbg !12359
  %15 = load i32, i32* %baud, align 8, !dbg !12359
  %cmp8 = icmp ne i32 %13, %15, !dbg !12360
  br i1 %cmp8, label %if.then20, label %lor.lhs.false10, !dbg !12361

lor.lhs.false10:                                  ; preds = %lor.lhs.false
  %16 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !12362
  %flags11 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %16, i32 0, i32 4, !dbg !12363
  %17 = load i32, i32* %flags11, align 8, !dbg !12363
  %and = and i32 %17, 131071, !dbg !12364
  %and12 = and i32 %and, -13361, !dbg !12365
  %conv13 = zext i32 %and12 to i64, !dbg !12366
  %18 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12367
  %port14 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %18, i32 0, i32 1, !dbg !12368
  %flags15 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port14, i32 0, i32 10, !dbg !12369
  %19 = load i64, i64* %flags15, align 8, !dbg !12369
  %and16 = and i64 %19, 131071, !dbg !12370
  %and17 = and i64 %and16, 4294953935, !dbg !12371
  %cmp18 = icmp ne i64 %conv13, %and17, !dbg !12372
  br i1 %cmp18, label %if.then20, label %if.end23, !dbg !12373

if.then20:                                        ; preds = %lor.lhs.false10, %lor.lhs.false, %if.then3
  %20 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12374
  %port21 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %20, i32 0, i32 1, !dbg !12376
  %mutex22 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port21, i32 0, i32 13, !dbg !12377
  call void @mutex_unlock(%struct.mutex* %mutex22) #11, !dbg !12378
  store i32 -1, i32* %retval, align 4, !dbg !12379
  br label %return, !dbg !12379

if.end23:                                         ; preds = %lor.lhs.false10
  %21 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12380
  %port24 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %21, i32 0, i32 1, !dbg !12381
  %flags25 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port24, i32 0, i32 10, !dbg !12382
  %22 = load i64, i64* %flags25, align 8, !dbg !12382
  %and26 = and i64 %22, 4294953935, !dbg !12383
  %23 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !12384
  %flags27 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %23, i32 0, i32 4, !dbg !12385
  %24 = load i32, i32* %flags27, align 8, !dbg !12385
  %and28 = and i32 %24, 13360, !dbg !12386
  %conv29 = zext i32 %and28 to i64, !dbg !12387
  %or = or i64 %and26, %conv29, !dbg !12388
  %25 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12389
  %port30 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %25, i32 0, i32 1, !dbg !12390
  %flags31 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port30, i32 0, i32 10, !dbg !12391
  store i64 %or, i64* %flags31, align 8, !dbg !12392
  %26 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !12393
  %baud_base32 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %26, i32 0, i32 7, !dbg !12394
  %27 = load i32, i32* %baud_base32, align 4, !dbg !12394
  %28 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12395
  %baud33 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %28, i32 0, i32 20, !dbg !12396
  store i32 %27, i32* %baud33, align 8, !dbg !12397
  %29 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !12398
  %custom_divisor = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %29, i32 0, i32 6, !dbg !12399
  %30 = load i32, i32* %custom_divisor, align 8, !dbg !12399
  %31 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12400
  %custom_divisor34 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %31, i32 0, i32 24, !dbg !12401
  store i32 %30, i32* %custom_divisor34, align 8, !dbg !12402
  br label %check_and_exit, !dbg !12403

if.end35:                                         ; preds = %if.end
  %32 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !12404
  %baud_base36 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %32, i32 0, i32 7, !dbg !12405
  %33 = load i32, i32* %baud_base36, align 4, !dbg !12405
  %34 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12406
  %baud37 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %34, i32 0, i32 20, !dbg !12407
  store i32 %33, i32* %baud37, align 8, !dbg !12408
  %35 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !12409
  %custom_divisor38 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %35, i32 0, i32 6, !dbg !12410
  %36 = load i32, i32* %custom_divisor38, align 8, !dbg !12410
  %37 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12411
  %custom_divisor39 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %37, i32 0, i32 24, !dbg !12412
  store i32 %36, i32* %custom_divisor39, align 8, !dbg !12413
  %38 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12414
  %port40 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %38, i32 0, i32 1, !dbg !12415
  %flags41 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port40, i32 0, i32 10, !dbg !12416
  %39 = load i64, i64* %flags41, align 8, !dbg !12416
  %and42 = and i64 %39, 4294836224, !dbg !12417
  %40 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !12418
  %flags43 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %40, i32 0, i32 4, !dbg !12419
  %41 = load i32, i32* %flags43, align 8, !dbg !12419
  %and44 = and i32 %41, 131071, !dbg !12420
  %conv45 = zext i32 %and44 to i64, !dbg !12421
  %or46 = or i64 %and42, %conv45, !dbg !12422
  %42 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12423
  %port47 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %42, i32 0, i32 1, !dbg !12424
  %flags48 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port47, i32 0, i32 10, !dbg !12425
  store i64 %or46, i64* %flags48, align 8, !dbg !12426
  %43 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !12427
  %close_delay49 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %43, i32 0, i32 8, !dbg !12428
  %44 = load i16, i16* %close_delay49, align 8, !dbg !12428
  %conv50 = zext i16 %44 to i32, !dbg !12427
  %mul = mul i32 %conv50, 250, !dbg !12429
  %div = sdiv i32 %mul, 100, !dbg !12430
  %45 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12431
  %port51 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %45, i32 0, i32 1, !dbg !12432
  %close_delay52 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port51, i32 0, i32 16, !dbg !12433
  store i32 %div, i32* %close_delay52, align 8, !dbg !12434
  %46 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !12435
  %closing_wait = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %46, i32 0, i32 12, !dbg !12436
  %47 = load i16, i16* %closing_wait, align 8, !dbg !12436
  %conv53 = zext i16 %47 to i32, !dbg !12435
  %mul54 = mul i32 %conv53, 250, !dbg !12437
  %div55 = sdiv i32 %mul54, 100, !dbg !12438
  %48 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12439
  %port56 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %48, i32 0, i32 1, !dbg !12440
  %closing_wait57 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port56, i32 0, i32 17, !dbg !12441
  store i32 %div55, i32* %closing_wait57, align 4, !dbg !12442
  br label %check_and_exit, !dbg !12439

check_and_exit:                                   ; preds = %if.end35, %if.end23
  call void @llvm.dbg.label(metadata !12443), !dbg !12444
  %49 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12445
  %port58 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %49, i32 0, i32 1, !dbg !12447
  %call59 = call zeroext i1 @tty_port_initialized(%struct.tty_port* %port58) #11, !dbg !12448
  br i1 %call59, label %if.then60, label %if.else, !dbg !12449

if.then60:                                        ; preds = %check_and_exit
  %50 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !12450
  %flags61 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %50, i32 0, i32 4, !dbg !12453
  %51 = load i32, i32* %flags61, align 8, !dbg !12453
  %52 = load i32, i32* %old_flags, align 4, !dbg !12454
  %xor = xor i32 %51, %52, !dbg !12455
  %and62 = and i32 %xor, 4144, !dbg !12456
  %tobool63 = icmp ne i32 %and62, 0, !dbg !12456
  br i1 %tobool63, label %if.then64, label %if.end74, !dbg !12457

if.then64:                                        ; preds = %if.then60
  %53 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !12458
  %flags65 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %53, i32 0, i32 4, !dbg !12461
  %54 = load i32, i32* %flags65, align 8, !dbg !12461
  %and66 = and i32 %54, 4144, !dbg !12462
  %tobool67 = icmp ne i32 %and66, 0, !dbg !12462
  br i1 %tobool67, label %if.then68, label %if.end73, !dbg !12463

if.then68:                                        ; preds = %if.then64
  br label %do.body, !dbg !12464

do.body:                                          ; preds = %if.then68
  %call69 = call i32 @___ratelimit(%struct.ratelimit_state* @cy_set_serial_info._rs, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.cy_set_serial_info, i64 0, i64 0)) #11, !dbg !12465
  %tobool70 = icmp ne i32 %call69, 0, !dbg !12465
  br i1 %tobool70, label %if.then71, label %if.end72, !dbg !12468

if.then71:                                        ; preds = %do.body
  %55 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12465
  %dev = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %55, i32 0, i32 2, !dbg !12465
  %56 = load %struct.device*, %struct.device** %dev, align 8, !dbg !12465
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %56, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.73, i64 0, i64 0)) #12, !dbg !12465
  br label %if.end72, !dbg !12465

if.end72:                                         ; preds = %if.then71, %do.body
  br label %do.end, !dbg !12468

do.end:                                           ; preds = %if.end72
  br label %if.end73, !dbg !12468

if.end73:                                         ; preds = %do.end, %if.then64
  br label %if.end74, !dbg !12469

if.end74:                                         ; preds = %if.end73, %if.then60
  %57 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12470
  %58 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12471
  call void @cy_set_line_char(%struct.cyclades_port* %57, %struct.tty_struct* %58) #11, !dbg !12472
  store i32 0, i32* %ret, align 4, !dbg !12473
  br label %if.end76, !dbg !12474

if.else:                                          ; preds = %check_and_exit
  %59 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12475
  %60 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12477
  %call75 = call i32 @cy_startup(%struct.cyclades_port* %59, %struct.tty_struct* %60) #11, !dbg !12478
  store i32 %call75, i32* %ret, align 4, !dbg !12479
  br label %if.end76

if.end76:                                         ; preds = %if.else, %if.end74
  %61 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12480
  %port77 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %61, i32 0, i32 1, !dbg !12481
  %mutex78 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port77, i32 0, i32 13, !dbg !12482
  call void @mutex_unlock(%struct.mutex* %mutex78) #11, !dbg !12483
  %62 = load i32, i32* %ret, align 4, !dbg !12484
  store i32 %62, i32* %retval, align 4, !dbg !12485
  br label %return, !dbg !12485

return:                                           ; preds = %if.end76, %if.then20, %if.then
  %63 = load i32, i32* %retval, align 4, !dbg !12486
  ret i32 %63, !dbg !12486
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cyclades_proc_show(%struct.seq_file* %m, i8* %v) #4 !dbg !12487 {
entry:
  %m.addr = alloca %struct.seq_file*, align 8
  %v.addr = alloca i8*, align 8
  %info = alloca %struct.cyclades_port*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %cur_jifs = alloca i32, align 4
  %tty = alloca %struct.tty_struct*, align 8
  %ld = alloca %struct.tty_ldisc*, align 8
  %num = alloca i32, align 4
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !12488, metadata !DIExpression()), !dbg !12489
  store i8* %v, i8** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr, metadata !12490, metadata !DIExpression()), !dbg !12491
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info, metadata !12492, metadata !DIExpression()), !dbg !12493
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12494, metadata !DIExpression()), !dbg !12495
  call void @llvm.dbg.declare(metadata i32* %j, metadata !12496, metadata !DIExpression()), !dbg !12497
  call void @llvm.dbg.declare(metadata i32* %cur_jifs, metadata !12498, metadata !DIExpression()), !dbg !12499
  %0 = load volatile i64, i64* @jiffies, align 8, !dbg !12500
  %conv = trunc i64 %0 to i32, !dbg !12500
  store i32 %conv, i32* %cur_jifs, align 4, !dbg !12499
  %1 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12501
  call void @seq_puts(%struct.seq_file* %1, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.74, i64 0, i64 0)) #11, !dbg !12502
  store i32 0, i32* %i, align 4, !dbg !12503
  br label %for.cond, !dbg !12505

for.cond:                                         ; preds = %for.inc32, %entry
  %2 = load i32, i32* %i, align 4, !dbg !12506
  %cmp = icmp ult i32 %2, 4, !dbg !12508
  br i1 %cmp, label %for.body, label %for.end34, !dbg !12509

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !12510
  br label %for.cond2, !dbg !12512

for.cond2:                                        ; preds = %for.inc, %for.body
  %3 = load i32, i32* %j, align 4, !dbg !12513
  %4 = load i32, i32* %i, align 4, !dbg !12515
  %idxprom = zext i32 %4 to i64, !dbg !12516
  %arrayidx = getelementptr [4 x %struct.cyclades_card], [4 x %struct.cyclades_card]* @cy_card, i64 0, i64 %idxprom, !dbg !12516
  %nports = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %arrayidx, i32 0, i32 6, !dbg !12517
  %5 = load i32, i32* %nports, align 4, !dbg !12517
  %cmp3 = icmp ult i32 %3, %5, !dbg !12518
  br i1 %cmp3, label %for.body5, label %for.end, !dbg !12519

for.body5:                                        ; preds = %for.cond2
  %6 = load i32, i32* %i, align 4, !dbg !12520
  %idxprom6 = zext i32 %6 to i64, !dbg !12522
  %arrayidx7 = getelementptr [4 x %struct.cyclades_card], [4 x %struct.cyclades_card]* @cy_card, i64 0, i64 %idxprom6, !dbg !12522
  %ports = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %arrayidx7, i32 0, i32 11, !dbg !12523
  %7 = load %struct.cyclades_port*, %struct.cyclades_port** %ports, align 8, !dbg !12523
  %8 = load i32, i32* %j, align 4, !dbg !12524
  %idxprom8 = zext i32 %8 to i64, !dbg !12522
  %arrayidx9 = getelementptr %struct.cyclades_port, %struct.cyclades_port* %7, i64 %idxprom8, !dbg !12522
  store %struct.cyclades_port* %arrayidx9, %struct.cyclades_port** %info, align 8, !dbg !12525
  %9 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12526
  %port = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %9, i32 0, i32 1, !dbg !12528
  %count = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 7, !dbg !12529
  %10 = load i32, i32* %count, align 4, !dbg !12529
  %tobool = icmp ne i32 %10, 0, !dbg !12526
  br i1 %tobool, label %if.then, label %if.else, !dbg !12530

if.then:                                          ; preds = %for.body5
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty, metadata !12531, metadata !DIExpression()), !dbg !12533
  call void @llvm.dbg.declare(metadata %struct.tty_ldisc** %ld, metadata !12534, metadata !DIExpression()), !dbg !12535
  call void @llvm.dbg.declare(metadata i32* %num, metadata !12536, metadata !DIExpression()), !dbg !12537
  store i32 0, i32* %num, align 4, !dbg !12537
  %11 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12538
  %port10 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %11, i32 0, i32 1, !dbg !12539
  %call = call %struct.tty_struct* @tty_port_tty_get(%struct.tty_port* %port10) #11, !dbg !12540
  store %struct.tty_struct* %call, %struct.tty_struct** %tty, align 8, !dbg !12541
  %12 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !12542
  %tobool11 = icmp ne %struct.tty_struct* %12, null, !dbg !12542
  br i1 %tobool11, label %if.then12, label %if.end17, !dbg !12544

if.then12:                                        ; preds = %if.then
  %13 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !12545
  %call13 = call %struct.tty_ldisc* @tty_ldisc_ref(%struct.tty_struct* %13) #11, !dbg !12547
  store %struct.tty_ldisc* %call13, %struct.tty_ldisc** %ld, align 8, !dbg !12548
  %14 = load %struct.tty_ldisc*, %struct.tty_ldisc** %ld, align 8, !dbg !12549
  %tobool14 = icmp ne %struct.tty_ldisc* %14, null, !dbg !12549
  br i1 %tobool14, label %if.then15, label %if.end, !dbg !12551

if.then15:                                        ; preds = %if.then12
  %15 = load %struct.tty_ldisc*, %struct.tty_ldisc** %ld, align 8, !dbg !12552
  %ops = getelementptr inbounds %struct.tty_ldisc, %struct.tty_ldisc* %15, i32 0, i32 0, !dbg !12554
  %16 = load %struct.tty_ldisc_ops*, %struct.tty_ldisc_ops** %ops, align 8, !dbg !12554
  %num16 = getelementptr inbounds %struct.tty_ldisc_ops, %struct.tty_ldisc_ops* %16, i32 0, i32 2, !dbg !12555
  %17 = load i32, i32* %num16, align 8, !dbg !12555
  store i32 %17, i32* %num, align 4, !dbg !12556
  %18 = load %struct.tty_ldisc*, %struct.tty_ldisc** %ld, align 8, !dbg !12557
  call void @tty_ldisc_deref(%struct.tty_ldisc* %18) #11, !dbg !12558
  br label %if.end, !dbg !12559

if.end:                                           ; preds = %if.then15, %if.then12
  %19 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !12560
  call void @tty_kref_put(%struct.tty_struct* %19) #11, !dbg !12561
  br label %if.end17, !dbg !12562

if.end17:                                         ; preds = %if.end, %if.then
  %20 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12563
  %21 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12564
  %line = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %21, i32 0, i32 4, !dbg !12565
  %22 = load i32, i32* %line, align 8, !dbg !12565
  %23 = load i32, i32* %cur_jifs, align 4, !dbg !12566
  %conv18 = zext i32 %23 to i64, !dbg !12566
  %24 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12567
  %idle_stats = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %24, i32 0, i32 35, !dbg !12568
  %in_use = getelementptr inbounds %struct.cyclades_idle_stats, %struct.cyclades_idle_stats* %idle_stats, i32 0, i32 0, !dbg !12569
  %25 = load i64, i64* %in_use, align 8, !dbg !12569
  %sub = sub i64 %conv18, %25, !dbg !12570
  %div = sdiv i64 %sub, 250, !dbg !12571
  %26 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12572
  %idle_stats19 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %26, i32 0, i32 35, !dbg !12573
  %xmit_bytes = getelementptr inbounds %struct.cyclades_idle_stats, %struct.cyclades_idle_stats* %idle_stats19, i32 0, i32 4, !dbg !12574
  %27 = load i64, i64* %xmit_bytes, align 8, !dbg !12574
  %28 = load i32, i32* %cur_jifs, align 4, !dbg !12575
  %conv20 = zext i32 %28 to i64, !dbg !12575
  %29 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12576
  %idle_stats21 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %29, i32 0, i32 35, !dbg !12577
  %xmit_idle = getelementptr inbounds %struct.cyclades_idle_stats, %struct.cyclades_idle_stats* %idle_stats21, i32 0, i32 2, !dbg !12578
  %30 = load i64, i64* %xmit_idle, align 8, !dbg !12578
  %sub22 = sub i64 %conv20, %30, !dbg !12579
  %div23 = sdiv i64 %sub22, 250, !dbg !12580
  %31 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12581
  %idle_stats24 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %31, i32 0, i32 35, !dbg !12582
  %recv_bytes = getelementptr inbounds %struct.cyclades_idle_stats, %struct.cyclades_idle_stats* %idle_stats24, i32 0, i32 3, !dbg !12583
  %32 = load i64, i64* %recv_bytes, align 8, !dbg !12583
  %33 = load i32, i32* %cur_jifs, align 4, !dbg !12584
  %conv25 = zext i32 %33 to i64, !dbg !12584
  %34 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12585
  %idle_stats26 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %34, i32 0, i32 35, !dbg !12586
  %recv_idle = getelementptr inbounds %struct.cyclades_idle_stats, %struct.cyclades_idle_stats* %idle_stats26, i32 0, i32 1, !dbg !12587
  %35 = load i64, i64* %recv_idle, align 8, !dbg !12587
  %sub27 = sub i64 %conv25, %35, !dbg !12588
  %div28 = sdiv i64 %sub27, 250, !dbg !12589
  %36 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12590
  %idle_stats29 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %36, i32 0, i32 35, !dbg !12591
  %overruns = getelementptr inbounds %struct.cyclades_idle_stats, %struct.cyclades_idle_stats* %idle_stats29, i32 0, i32 5, !dbg !12592
  %37 = load i64, i64* %overruns, align 8, !dbg !12592
  %38 = load i32, i32* %num, align 4, !dbg !12593
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %20, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.75, i64 0, i64 0), i32 %22, i64 %div, i64 %27, i64 %div23, i64 %32, i64 %div28, i64 %37, i32 %38) #11, !dbg !12594
  br label %if.end31, !dbg !12595

if.else:                                          ; preds = %for.body5
  %39 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !12596
  %40 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !12597
  %line30 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %40, i32 0, i32 4, !dbg !12598
  %41 = load i32, i32* %line30, align 8, !dbg !12598
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %39, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.76, i64 0, i64 0), i32 %41, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0) #11, !dbg !12599
  br label %if.end31

if.end31:                                         ; preds = %if.else, %if.end17
  br label %for.inc, !dbg !12600

for.inc:                                          ; preds = %if.end31
  %42 = load i32, i32* %j, align 4, !dbg !12601
  %inc = add i32 %42, 1, !dbg !12601
  store i32 %inc, i32* %j, align 4, !dbg !12601
  br label %for.cond2, !dbg !12602, !llvm.loop !12603

for.end:                                          ; preds = %for.cond2
  br label %for.inc32, !dbg !12604

for.inc32:                                        ; preds = %for.end
  %43 = load i32, i32* %i, align 4, !dbg !12605
  %inc33 = add i32 %43, 1, !dbg !12605
  store i32 %inc33, i32* %i, align 4, !dbg !12605
  br label %for.cond, !dbg !12606, !llvm.loop !12607

for.end34:                                        ; preds = %for.cond
  ret i32 0, !dbg !12609
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cy_startup(%struct.cyclades_port* %info, %struct.tty_struct* %tty) #4 !dbg !12610 {
entry:
  %lock.addr.i143 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i143, metadata !9013, metadata !DIExpression()), !dbg !12613
  %flags.addr.i144 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i144, metadata !9019, metadata !DIExpression()), !dbg !12615
  %tmp.i145 = alloca i32, align 4
  %tmp8.i146 = alloca i32, align 4
  %lock.addr.i141 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i141, metadata !7101, metadata !DIExpression()), !dbg !12616
  %lock.addr.i139 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i139, metadata !7101, metadata !DIExpression()), !dbg !12625
  %lock.addr.i134 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i134, metadata !9013, metadata !DIExpression()), !dbg !12633
  %flags.addr.i135 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i135, metadata !9019, metadata !DIExpression()), !dbg !12635
  %tmp.i136 = alloca i32, align 4
  %tmp8.i137 = alloca i32, align 4
  %lock.addr.i132 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i132, metadata !9013, metadata !DIExpression()), !dbg !12636
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9019, metadata !DIExpression()), !dbg !12638
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7101, metadata !DIExpression()), !dbg !12639
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.cyclades_port*, align 8
  %tty.addr = alloca %struct.tty_struct*, align 8
  %card = alloca %struct.cyclades_card*, align 8
  %flags = alloca i64, align 8
  %retval1 = alloca i32, align 4
  %channel = alloca i32, align 4
  %page = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  %__dummy40 = alloca i64, align 8
  %__dummy241 = alloca i64, align 8
  %tmp44 = alloca i32, align 4
  %__dummy48 = alloca i64, align 8
  %__dummy249 = alloca i64, align 8
  %tmp52 = alloca i32, align 4
  %ch_ctrl = alloca %struct.CH_CTRL*, align 8
  %__dummy80 = alloca i64, align 8
  %__dummy281 = alloca i64, align 8
  %tmp84 = alloca i32, align 4
  %__dummy88 = alloca i64, align 8
  %__dummy289 = alloca i64, align 8
  %tmp92 = alloca i32, align 4
  store %struct.cyclades_port* %info, %struct.cyclades_port** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info.addr, metadata !12646, metadata !DIExpression()), !dbg !12647
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !12648, metadata !DIExpression()), !dbg !12649
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %card, metadata !12650, metadata !DIExpression()), !dbg !12651
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12652, metadata !DIExpression()), !dbg !12653
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !12654, metadata !DIExpression()), !dbg !12655
  store i32 0, i32* %retval1, align 4, !dbg !12655
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !12656, metadata !DIExpression()), !dbg !12657
  call void @llvm.dbg.declare(metadata i64* %page, metadata !12658, metadata !DIExpression()), !dbg !12659
  %0 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12660
  %card2 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %0, i32 0, i32 2, !dbg !12661
  %1 = load %struct.cyclades_card*, %struct.cyclades_card** %card2, align 8, !dbg !12661
  store %struct.cyclades_card* %1, %struct.cyclades_card** %card, align 8, !dbg !12662
  %2 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12663
  %line = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %2, i32 0, i32 4, !dbg !12664
  %3 = load i32, i32* %line, align 8, !dbg !12664
  %4 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !12665
  %first_line = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %4, i32 0, i32 5, !dbg !12666
  %5 = load i32, i32* %first_line, align 8, !dbg !12666
  %sub = sub i32 %3, %5, !dbg !12667
  store i32 %sub, i32* %channel, align 4, !dbg !12668
  %call = call i64 @get_zeroed_page(i32 3264) #11, !dbg !12669
  store i64 %call, i64* %page, align 8, !dbg !12670
  %6 = load i64, i64* %page, align 8, !dbg !12671
  %tobool = icmp ne i64 %6, 0, !dbg !12671
  br i1 %tobool, label %if.end, label %if.then, !dbg !12673

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !12674
  br label %return, !dbg !12674

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !12675

do.body:                                          ; preds = %if.end
  br label %do.body3, !dbg !12676

do.body3:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12677, metadata !DIExpression()), !dbg !12679
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12680, metadata !DIExpression()), !dbg !12679
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !12679
  %conv = zext i1 %cmp to i32, !dbg !12679
  store i32 1, i32* %tmp, align 4, !dbg !12679
  %7 = load i32, i32* %tmp, align 4, !dbg !12679
  br label %do.body4, !dbg !12681

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !12682

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !12683

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !12685, metadata !DIExpression()), !dbg !12688
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !12689, metadata !DIExpression()), !dbg !12688
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !12688
  %conv10 = zext i1 %cmp9 to i32, !dbg !12688
  store i32 1, i32* %tmp11, align 4, !dbg !12688
  %8 = load i32, i32* %tmp11, align 4, !dbg !12688
  %call12 = call i64 @arch_local_irq_save() #11, !dbg !12690
  store i64 %call12, i64* %flags, align 8, !dbg !12690
  br label %do.end, !dbg !12690

do.end:                                           ; preds = %do.body6
  br label %do.end13, !dbg !12683

do.end13:                                         ; preds = %do.end
  br label %do.body14, !dbg !12682

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12691, !srcloc !12692
  br label %do.body15, !dbg !12691

do.body15:                                        ; preds = %do.body14
  %9 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !12693
  %card_lock = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %9, i32 0, i32 10, !dbg !12693
  store %struct.spinlock* %card_lock, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12694
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !12695
  %rlock.i = bitcast %union.anon.0* %11 to %struct.raw_spinlock*, !dbg !12695
  br label %do.end17, !dbg !12693

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !12691

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !12682

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !12681

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !12676

do.end21:                                         ; preds = %do.end20
  %12 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12696
  %port = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %12, i32 0, i32 1, !dbg !12698
  %call22 = call zeroext i1 @tty_port_initialized(%struct.tty_port* %port) #11, !dbg !12699
  br i1 %call22, label %if.then23, label %if.end24, !dbg !12700

if.then23:                                        ; preds = %do.end21
  br label %errout, !dbg !12701

if.end24:                                         ; preds = %do.end21
  %13 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12702
  %type = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %13, i32 0, i32 6, !dbg !12704
  %14 = load i32, i32* %type, align 8, !dbg !12704
  %tobool25 = icmp ne i32 %14, 0, !dbg !12702
  br i1 %tobool25, label %if.end28, label %if.then26, !dbg !12705

if.then26:                                        ; preds = %if.end24
  %15 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12706
  %flags27 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %15, i32 0, i32 21, !dbg !12708
  call void @set_bit(i64 1, i64* %flags27) #11, !dbg !12709
  br label %errout, !dbg !12710

if.end28:                                         ; preds = %if.end24
  %16 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12711
  %port29 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %16, i32 0, i32 1, !dbg !12713
  %xmit_buf = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port29, i32 0, i32 15, !dbg !12714
  %17 = load i8*, i8** %xmit_buf, align 8, !dbg !12714
  %tobool30 = icmp ne i8* %17, null, !dbg !12711
  br i1 %tobool30, label %if.then31, label %if.else, !dbg !12715

if.then31:                                        ; preds = %if.end28
  %18 = load i64, i64* %page, align 8, !dbg !12716
  call void @free_pages(i64 %18, i32 0) #11, !dbg !12716
  br label %if.end34, !dbg !12716

if.else:                                          ; preds = %if.end28
  %19 = load i64, i64* %page, align 8, !dbg !12717
  %20 = inttoptr i64 %19 to i8*, !dbg !12718
  %21 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12719
  %port32 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %21, i32 0, i32 1, !dbg !12720
  %xmit_buf33 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port32, i32 0, i32 15, !dbg !12721
  store i8* %20, i8** %xmit_buf33, align 8, !dbg !12722
  br label %if.end34

if.end34:                                         ; preds = %if.else, %if.then31
  %22 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !12723
  %card_lock35 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %22, i32 0, i32 10, !dbg !12724
  %23 = load i64, i64* %flags, align 8, !dbg !12725
  store %struct.spinlock* %card_lock35, %struct.spinlock** %lock.addr.i134, align 8
  store i64 %23, i64* %flags.addr.i135, align 8
  call void @llvm.dbg.declare(metadata !217, metadata !9119, metadata !DIExpression()) #10, !dbg !12726
  call void @llvm.dbg.declare(metadata !217, metadata !9123, metadata !DIExpression()) #10, !dbg !12726
  store i32 1, i32* %tmp.i136, align 4, !dbg !12726
  %24 = load i32, i32* %tmp.i136, align 4, !dbg !12726
  call void @llvm.dbg.declare(metadata !217, metadata !9124, metadata !DIExpression()) #10, !dbg !12727
  call void @llvm.dbg.declare(metadata !217, metadata !9130, metadata !DIExpression()) #10, !dbg !12727
  store i32 1, i32* %tmp8.i137, align 4, !dbg !12727
  %25 = load i32, i32* %tmp8.i137, align 4, !dbg !12727
  %26 = load i64, i64* %flags.addr.i135, align 8, !dbg !12728
  call void @arch_local_irq_restore(i64 %26) #13, !dbg !12728
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12729, !srcloc !9134
  %27 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i134, align 8, !dbg !12730
  %28 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %27, i32 0, i32 0, !dbg !12730
  %rlock.i138 = bitcast %union.anon.0* %28 to %struct.raw_spinlock*, !dbg !12730
  %29 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12731
  %30 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12732
  call void @cy_set_line_char(%struct.cyclades_port* %29, %struct.tty_struct* %30) #11, !dbg !12733
  %31 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !12734
  %call36 = call zeroext i1 @cy_is_Z(%struct.cyclades_card* %31) #11, !dbg !12735
  br i1 %call36, label %if.else73, label %if.then37, !dbg !12736

if.then37:                                        ; preds = %if.end34
  %32 = load i32, i32* %channel, align 4, !dbg !12737
  %and = and i32 %32, 3, !dbg !12737
  store i32 %and, i32* %channel, align 4, !dbg !12737
  br label %do.body38, !dbg !12738

do.body38:                                        ; preds = %if.then37
  br label %do.body39, !dbg !12739

do.body39:                                        ; preds = %do.body38
  call void @llvm.dbg.declare(metadata i64* %__dummy40, metadata !12740, metadata !DIExpression()), !dbg !12742
  call void @llvm.dbg.declare(metadata i64* %__dummy241, metadata !12743, metadata !DIExpression()), !dbg !12742
  %cmp42 = icmp eq i64* %__dummy40, %__dummy241, !dbg !12742
  %conv43 = zext i1 %cmp42 to i32, !dbg !12742
  store i32 1, i32* %tmp44, align 4, !dbg !12742
  %33 = load i32, i32* %tmp44, align 4, !dbg !12742
  br label %do.body45, !dbg !12744

do.body45:                                        ; preds = %do.body39
  br label %do.body46, !dbg !12745

do.body46:                                        ; preds = %do.body45
  br label %do.body47, !dbg !12746

do.body47:                                        ; preds = %do.body46
  call void @llvm.dbg.declare(metadata i64* %__dummy48, metadata !12748, metadata !DIExpression()), !dbg !12751
  call void @llvm.dbg.declare(metadata i64* %__dummy249, metadata !12752, metadata !DIExpression()), !dbg !12751
  %cmp50 = icmp eq i64* %__dummy48, %__dummy249, !dbg !12751
  %conv51 = zext i1 %cmp50 to i32, !dbg !12751
  store i32 1, i32* %tmp52, align 4, !dbg !12751
  %34 = load i32, i32* %tmp52, align 4, !dbg !12751
  %call53 = call i64 @arch_local_irq_save() #11, !dbg !12753
  store i64 %call53, i64* %flags, align 8, !dbg !12753
  br label %do.end54, !dbg !12753

do.end54:                                         ; preds = %do.body47
  br label %do.end55, !dbg !12746

do.end55:                                         ; preds = %do.end54
  br label %do.body56, !dbg !12745

do.body56:                                        ; preds = %do.end55
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12754, !srcloc !12755
  br label %do.body57, !dbg !12754

do.body57:                                        ; preds = %do.body56
  %35 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !12756
  %card_lock58 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %35, i32 0, i32 10, !dbg !12756
  store %struct.spinlock* %card_lock58, %struct.spinlock** %lock.addr.i139, align 8
  %36 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i139, align 8, !dbg !12757
  %37 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %36, i32 0, i32 0, !dbg !12758
  %rlock.i140 = bitcast %union.anon.0* %37 to %struct.raw_spinlock*, !dbg !12758
  br label %do.end60, !dbg !12756

do.end60:                                         ; preds = %do.body57
  br label %do.end61, !dbg !12754

do.end61:                                         ; preds = %do.end60
  br label %do.end62, !dbg !12745

do.end62:                                         ; preds = %do.end61
  br label %do.end63, !dbg !12744

do.end63:                                         ; preds = %do.end62
  br label %do.end64, !dbg !12739

do.end64:                                         ; preds = %do.end63
  %38 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12759
  %39 = load i32, i32* %channel, align 4, !dbg !12760
  %conv65 = trunc i32 %39 to i8, !dbg !12760
  call void @cyy_writeb(%struct.cyclades_port* %38, i32 208, i8 zeroext %conv65) #11, !dbg !12761
  %40 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12762
  %41 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12763
  %default_timeout = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %41, i32 0, i32 32, !dbg !12764
  %42 = load i32, i32* %default_timeout, align 8, !dbg !12764
  %tobool66 = icmp ne i32 %42, 0, !dbg !12763
  br i1 %tobool66, label %cond.true, label %cond.false, !dbg !12763

cond.true:                                        ; preds = %do.end64
  %43 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12765
  %default_timeout67 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %43, i32 0, i32 32, !dbg !12766
  %44 = load i32, i32* %default_timeout67, align 8, !dbg !12766
  br label %cond.end, !dbg !12763

cond.false:                                       ; preds = %do.end64
  br label %cond.end, !dbg !12763

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %44, %cond.true ], [ 2, %cond.false ], !dbg !12763
  %conv68 = trunc i32 %cond to i8, !dbg !12767
  call void @cyy_writeb(%struct.cyclades_port* %40, i32 66, i8 zeroext %conv68) #11, !dbg !12768
  %45 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12769
  %call69 = call i32 @cyy_issue_cmd(%struct.cyclades_port* %45, i8 zeroext 26) #11, !dbg !12770
  %46 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12771
  call void @cyy_change_rts_dtr(%struct.cyclades_port* %46, i32 6, i32 0) #11, !dbg !12772
  %47 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12773
  %48 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12774
  %call70 = call zeroext i8 @cyy_readb(%struct.cyclades_port* %48, i32 12) #11, !dbg !12775
  %conv71 = zext i8 %call70 to i32, !dbg !12775
  %or = or i32 %conv71, 16, !dbg !12776
  %conv72 = trunc i32 %or to i8, !dbg !12775
  call void @cyy_writeb(%struct.cyclades_port* %47, i32 12, i8 zeroext %conv72) #11, !dbg !12777
  br label %if.end124, !dbg !12778

if.else73:                                        ; preds = %if.end34
  call void @llvm.dbg.declare(metadata %struct.CH_CTRL** %ch_ctrl, metadata !12779, metadata !DIExpression()), !dbg !12780
  %49 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12781
  %u = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %49, i32 0, i32 3, !dbg !12782
  %cyz = bitcast %union.anon.67* %u to %struct.anon.69*, !dbg !12783
  %ch_ctrl74 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cyz, i32 0, i32 0, !dbg !12784
  %50 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl74, align 8, !dbg !12784
  store %struct.CH_CTRL* %50, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !12780
  %51 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !12785
  %call75 = call zeroext i1 @cyz_is_loaded(%struct.cyclades_card* %51) #11, !dbg !12787
  br i1 %call75, label %if.end77, label %if.then76, !dbg !12788

if.then76:                                        ; preds = %if.else73
  store i32 -19, i32* %retval, align 4, !dbg !12789
  br label %return, !dbg !12789

if.end77:                                         ; preds = %if.else73
  br label %do.body78, !dbg !12790

do.body78:                                        ; preds = %if.end77
  br label %do.body79, !dbg !12791

do.body79:                                        ; preds = %do.body78
  call void @llvm.dbg.declare(metadata i64* %__dummy80, metadata !12792, metadata !DIExpression()), !dbg !12794
  call void @llvm.dbg.declare(metadata i64* %__dummy281, metadata !12795, metadata !DIExpression()), !dbg !12794
  %cmp82 = icmp eq i64* %__dummy80, %__dummy281, !dbg !12794
  %conv83 = zext i1 %cmp82 to i32, !dbg !12794
  store i32 1, i32* %tmp84, align 4, !dbg !12794
  %52 = load i32, i32* %tmp84, align 4, !dbg !12794
  br label %do.body85, !dbg !12796

do.body85:                                        ; preds = %do.body79
  br label %do.body86, !dbg !12797

do.body86:                                        ; preds = %do.body85
  br label %do.body87, !dbg !12798

do.body87:                                        ; preds = %do.body86
  call void @llvm.dbg.declare(metadata i64* %__dummy88, metadata !12800, metadata !DIExpression()), !dbg !12803
  call void @llvm.dbg.declare(metadata i64* %__dummy289, metadata !12804, metadata !DIExpression()), !dbg !12803
  %cmp90 = icmp eq i64* %__dummy88, %__dummy289, !dbg !12803
  %conv91 = zext i1 %cmp90 to i32, !dbg !12803
  store i32 1, i32* %tmp92, align 4, !dbg !12803
  %53 = load i32, i32* %tmp92, align 4, !dbg !12803
  %call93 = call i64 @arch_local_irq_save() #11, !dbg !12805
  store i64 %call93, i64* %flags, align 8, !dbg !12805
  br label %do.end94, !dbg !12805

do.end94:                                         ; preds = %do.body87
  br label %do.end95, !dbg !12798

do.end95:                                         ; preds = %do.end94
  br label %do.body96, !dbg !12797

do.body96:                                        ; preds = %do.end95
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12806, !srcloc !12807
  br label %do.body97, !dbg !12806

do.body97:                                        ; preds = %do.body96
  %54 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !12808
  %card_lock98 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %54, i32 0, i32 10, !dbg !12808
  store %struct.spinlock* %card_lock98, %struct.spinlock** %lock.addr.i141, align 8
  %55 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i141, align 8, !dbg !12809
  %56 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %55, i32 0, i32 0, !dbg !12810
  %rlock.i142 = bitcast %union.anon.0* %56 to %struct.raw_spinlock*, !dbg !12810
  br label %do.end100, !dbg !12808

do.end100:                                        ; preds = %do.body97
  br label %do.end101, !dbg !12806

do.end101:                                        ; preds = %do.end100
  br label %do.end102, !dbg !12797

do.end102:                                        ; preds = %do.end101
  br label %do.end103, !dbg !12796

do.end103:                                        ; preds = %do.end102
  br label %do.end104, !dbg !12791

do.end104:                                        ; preds = %do.end103
  br label %do.body105, !dbg !12811

do.body105:                                       ; preds = %do.end104
  %57 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !12812
  %op_mode = getelementptr inbounds %struct.CH_CTRL, %struct.CH_CTRL* %57, i32 0, i32 0, !dbg !12812
  %58 = bitcast i32* %op_mode to i8*, !dbg !12812
  call void @writel(i32 3, i8* %58) #11, !dbg !12812
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12812, !srcloc !12814
  br label %do.end106, !dbg !12812

do.end106:                                        ; preds = %do.body105
  br label %do.body107, !dbg !12815

do.body107:                                       ; preds = %do.end106
  %59 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !12816
  %intr_enable = getelementptr inbounds %struct.CH_CTRL, %struct.CH_CTRL* %59, i32 0, i32 1, !dbg !12816
  %60 = bitcast i32* %intr_enable to i8*, !dbg !12816
  call void @writel(i32 131328, i8* %60) #11, !dbg !12816
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12816, !srcloc !12818
  br label %do.end108, !dbg !12816

do.end108:                                        ; preds = %do.body107
  %61 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !12819
  %62 = load i32, i32* %channel, align 4, !dbg !12820
  %call109 = call i32 @cyz_issue_cmd(%struct.cyclades_card* %61, i32 %62, i8 zeroext 2, i32 0) #11, !dbg !12821
  store i32 %call109, i32* %retval1, align 4, !dbg !12822
  %63 = load i32, i32* %retval1, align 4, !dbg !12823
  %cmp110 = icmp ne i32 %63, 0, !dbg !12825
  br i1 %cmp110, label %if.then112, label %if.end115, !dbg !12826

if.then112:                                       ; preds = %do.end108
  %64 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12827
  %line113 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %64, i32 0, i32 4, !dbg !12829
  %65 = load i32, i32* %line113, align 8, !dbg !12829
  %66 = load i32, i32* %retval1, align 4, !dbg !12830
  %call114 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.48, i64 0, i64 0), i32 %65, i32 %66) #12, !dbg !12831
  br label %if.end115, !dbg !12832

if.end115:                                        ; preds = %if.then112, %do.end108
  %67 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !12833
  %68 = load i32, i32* %channel, align 4, !dbg !12834
  %call116 = call i32 @cyz_issue_cmd(%struct.cyclades_card* %67, i32 %68, i8 zeroext 86, i32 0) #11, !dbg !12835
  store i32 %call116, i32* %retval1, align 4, !dbg !12836
  %69 = load i32, i32* %retval1, align 4, !dbg !12837
  %cmp117 = icmp ne i32 %69, 0, !dbg !12839
  br i1 %cmp117, label %if.then119, label %if.end122, !dbg !12840

if.then119:                                       ; preds = %if.end115
  %70 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12841
  %line120 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %70, i32 0, i32 4, !dbg !12843
  %71 = load i32, i32* %line120, align 8, !dbg !12843
  %72 = load i32, i32* %retval1, align 4, !dbg !12844
  %call121 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.49, i64 0, i64 0), i32 %71, i32 %72) #12, !dbg !12845
  br label %if.end122, !dbg !12846

if.end122:                                        ; preds = %if.then119, %if.end115
  %73 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12847
  %port123 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %73, i32 0, i32 1, !dbg !12848
  call void @tty_port_raise_dtr_rts(%struct.tty_port* %port123) #11, !dbg !12849
  br label %if.end124

if.end124:                                        ; preds = %if.end122, %cond.end
  %74 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12850
  %port125 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %74, i32 0, i32 1, !dbg !12851
  call void @tty_port_set_initialized(%struct.tty_port* %port125, i1 zeroext true) #11, !dbg !12852
  %75 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12853
  %flags126 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %75, i32 0, i32 21, !dbg !12854
  call void @clear_bit(i64 1, i64* %flags126) #11, !dbg !12855
  %76 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12856
  %xmit_tail = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %76, i32 0, i32 29, !dbg !12857
  store i32 0, i32* %xmit_tail, align 4, !dbg !12858
  %77 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12859
  %xmit_head = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %77, i32 0, i32 28, !dbg !12860
  store i32 0, i32* %xmit_head, align 8, !dbg !12861
  %78 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12862
  %xmit_cnt = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %78, i32 0, i32 30, !dbg !12863
  store i32 0, i32* %xmit_cnt, align 8, !dbg !12864
  %79 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12865
  %breakoff = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %79, i32 0, i32 27, !dbg !12866
  store i32 0, i32* %breakoff, align 4, !dbg !12867
  %80 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12868
  %breakon = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %80, i32 0, i32 26, !dbg !12869
  store i32 0, i32* %breakon, align 8, !dbg !12870
  %81 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12871
  %idle_stats = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %81, i32 0, i32 35, !dbg !12872
  %82 = bitcast %struct.cyclades_idle_stats* %idle_stats to i8*, !dbg !12873
  call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 64, i1 false), !dbg !12873
  %83 = load volatile i64, i64* @jiffies, align 8, !dbg !12874
  %84 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12875
  %idle_stats127 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %84, i32 0, i32 35, !dbg !12876
  %xmit_idle = getelementptr inbounds %struct.cyclades_idle_stats, %struct.cyclades_idle_stats* %idle_stats127, i32 0, i32 2, !dbg !12877
  store i64 %83, i64* %xmit_idle, align 8, !dbg !12878
  %85 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12879
  %idle_stats128 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %85, i32 0, i32 35, !dbg !12880
  %recv_idle = getelementptr inbounds %struct.cyclades_idle_stats, %struct.cyclades_idle_stats* %idle_stats128, i32 0, i32 1, !dbg !12881
  store i64 %83, i64* %recv_idle, align 8, !dbg !12882
  %86 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12883
  %idle_stats129 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %86, i32 0, i32 35, !dbg !12884
  %in_use = getelementptr inbounds %struct.cyclades_idle_stats, %struct.cyclades_idle_stats* %idle_stats129, i32 0, i32 0, !dbg !12885
  store i64 %83, i64* %in_use, align 8, !dbg !12886
  %87 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !12887
  %card_lock130 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %87, i32 0, i32 10, !dbg !12888
  %88 = load i64, i64* %flags, align 8, !dbg !12889
  store %struct.spinlock* %card_lock130, %struct.spinlock** %lock.addr.i143, align 8
  store i64 %88, i64* %flags.addr.i144, align 8
  call void @llvm.dbg.declare(metadata !217, metadata !9119, metadata !DIExpression()) #10, !dbg !12890
  call void @llvm.dbg.declare(metadata !217, metadata !9123, metadata !DIExpression()) #10, !dbg !12890
  store i32 1, i32* %tmp.i145, align 4, !dbg !12890
  %89 = load i32, i32* %tmp.i145, align 4, !dbg !12890
  call void @llvm.dbg.declare(metadata !217, metadata !9124, metadata !DIExpression()) #10, !dbg !12891
  call void @llvm.dbg.declare(metadata !217, metadata !9130, metadata !DIExpression()) #10, !dbg !12891
  store i32 1, i32* %tmp8.i146, align 4, !dbg !12891
  %90 = load i32, i32* %tmp8.i146, align 4, !dbg !12891
  %91 = load i64, i64* %flags.addr.i144, align 8, !dbg !12892
  call void @arch_local_irq_restore(i64 %91) #13, !dbg !12892
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12893, !srcloc !9134
  %92 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i143, align 8, !dbg !12894
  %93 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %92, i32 0, i32 0, !dbg !12894
  %rlock.i147 = bitcast %union.anon.0* %93 to %struct.raw_spinlock*, !dbg !12894
  store i32 0, i32* %retval, align 4, !dbg !12895
  br label %return, !dbg !12895

errout:                                           ; preds = %if.then26, %if.then23
  call void @llvm.dbg.label(metadata !12896), !dbg !12897
  %94 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !12898
  %card_lock131 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %94, i32 0, i32 10, !dbg !12899
  %95 = load i64, i64* %flags, align 8, !dbg !12900
  store %struct.spinlock* %card_lock131, %struct.spinlock** %lock.addr.i132, align 8
  store i64 %95, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !217, metadata !9119, metadata !DIExpression()) #10, !dbg !12901
  call void @llvm.dbg.declare(metadata !217, metadata !9123, metadata !DIExpression()) #10, !dbg !12901
  store i32 1, i32* %tmp.i, align 4, !dbg !12901
  %96 = load i32, i32* %tmp.i, align 4, !dbg !12901
  call void @llvm.dbg.declare(metadata !217, metadata !9124, metadata !DIExpression()) #10, !dbg !12902
  call void @llvm.dbg.declare(metadata !217, metadata !9130, metadata !DIExpression()) #10, !dbg !12902
  store i32 1, i32* %tmp8.i, align 4, !dbg !12902
  %97 = load i32, i32* %tmp8.i, align 4, !dbg !12902
  %98 = load i64, i64* %flags.addr.i, align 8, !dbg !12903
  call void @arch_local_irq_restore(i64 %98) #13, !dbg !12903
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12904, !srcloc !9134
  %99 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i132, align 8, !dbg !12905
  %100 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %99, i32 0, i32 0, !dbg !12905
  %rlock.i133 = bitcast %union.anon.0* %100 to %struct.raw_spinlock*, !dbg !12905
  %101 = load i64, i64* %page, align 8, !dbg !12906
  call void @free_pages(i64 %101, i32 0) #11, !dbg !12906
  %102 = load i32, i32* %retval1, align 4, !dbg !12907
  store i32 %102, i32* %retval, align 4, !dbg !12908
  br label %return, !dbg !12908

return:                                           ; preds = %errout, %if.end124, %if.then76, %if.then
  %103 = load i32, i32* %retval, align 4, !dbg !12909
  ret i32 %103, !dbg !12909
}

; Function Attrs: noredzone
declare dso_local i32 @tty_port_block_til_ready(%struct.tty_port*, %struct.tty_struct*, %struct.file*) #2

; Function Attrs: noredzone
declare dso_local void @tty_port_tty_set(%struct.tty_port*, %struct.tty_struct*) #2

; Function Attrs: noredzone
declare dso_local i64 @get_zeroed_page(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cy_set_line_char(%struct.cyclades_port* %info, %struct.tty_struct* %tty) #4 !dbg !12910 {
entry:
  %lock.addr.i432 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i432, metadata !9013, metadata !DIExpression()), !dbg !12911
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9019, metadata !DIExpression()), !dbg !12915
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7101, metadata !DIExpression()), !dbg !12916
  %info.addr = alloca %struct.cyclades_port*, align 8
  %tty.addr = alloca %struct.tty_struct*, align 8
  %card = alloca %struct.cyclades_card*, align 8
  %flags = alloca i64, align 8
  %channel = alloca i32, align 4
  %cflag = alloca i32, align 4
  %iflag = alloca i32, align 4
  %baud = alloca i32, align 4
  %baud_rate = alloca i32, align 4
  %i = alloca i32, align 4
  %cflags = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy162 = alloca i64, align 8
  %__dummy2163 = alloca i64, align 8
  %tmp166 = alloca i32, align 4
  %ch_ctrl = alloca %struct.CH_CTRL*, align 8
  %sw_flow = alloca i32, align 4
  %retval = alloca i32, align 4
  store %struct.cyclades_port* %info, %struct.cyclades_port** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info.addr, metadata !12923, metadata !DIExpression()), !dbg !12924
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !12925, metadata !DIExpression()), !dbg !12926
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %card, metadata !12927, metadata !DIExpression()), !dbg !12928
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12929, metadata !DIExpression()), !dbg !12930
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !12931, metadata !DIExpression()), !dbg !12932
  call void @llvm.dbg.declare(metadata i32* %cflag, metadata !12933, metadata !DIExpression()), !dbg !12934
  call void @llvm.dbg.declare(metadata i32* %iflag, metadata !12935, metadata !DIExpression()), !dbg !12936
  call void @llvm.dbg.declare(metadata i32* %baud, metadata !12937, metadata !DIExpression()), !dbg !12938
  call void @llvm.dbg.declare(metadata i32* %baud_rate, metadata !12939, metadata !DIExpression()), !dbg !12940
  store i32 0, i32* %baud_rate, align 4, !dbg !12940
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12941, metadata !DIExpression()), !dbg !12942
  %0 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12943
  %line = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %0, i32 0, i32 4, !dbg !12945
  %1 = load i32, i32* %line, align 8, !dbg !12945
  %cmp = icmp eq i32 %1, -1, !dbg !12946
  br i1 %cmp, label %if.then, label %if.end, !dbg !12947

if.then:                                          ; preds = %entry
  br label %if.end431, !dbg !12948

if.end:                                           ; preds = %entry
  %2 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12949
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %2, i32 0, i32 15, !dbg !12950
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 2, !dbg !12951
  %3 = load i32, i32* %c_cflag, align 8, !dbg !12951
  store i32 %3, i32* %cflag, align 4, !dbg !12952
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12953
  %termios1 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 15, !dbg !12954
  %c_iflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios1, i32 0, i32 0, !dbg !12955
  %5 = load i32, i32* %c_iflag, align 8, !dbg !12955
  store i32 %5, i32* %iflag, align 4, !dbg !12956
  %6 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12957
  %card2 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %6, i32 0, i32 2, !dbg !12958
  %7 = load %struct.cyclades_card*, %struct.cyclades_card** %card2, align 8, !dbg !12958
  store %struct.cyclades_card* %7, %struct.cyclades_card** %card, align 8, !dbg !12959
  %8 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12960
  %line3 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %8, i32 0, i32 4, !dbg !12961
  %9 = load i32, i32* %line3, align 8, !dbg !12961
  %10 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !12962
  %first_line = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %10, i32 0, i32 5, !dbg !12963
  %11 = load i32, i32* %first_line, align 8, !dbg !12963
  %sub = sub i32 %9, %11, !dbg !12964
  store i32 %sub, i32* %channel, align 4, !dbg !12965
  %12 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !12966
  %call = call zeroext i1 @cy_is_Z(%struct.cyclades_card* %12) #11, !dbg !12967
  br i1 %call, label %if.else242, label %if.then4, !dbg !12968

if.then4:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %cflags, metadata !12969, metadata !DIExpression()), !dbg !12970
  %13 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12971
  %call5 = call i32 @tty_get_baud_rate(%struct.tty_struct* %13) #11, !dbg !12972
  store i32 %call5, i32* %baud, align 4, !dbg !12973
  %14 = load i32, i32* %baud, align 4, !dbg !12974
  %cmp6 = icmp eq i32 %14, 38400, !dbg !12976
  br i1 %cmp6, label %land.lhs.true, label %if.else15, !dbg !12977

land.lhs.true:                                    ; preds = %if.then4
  %15 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12978
  %port = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %15, i32 0, i32 1, !dbg !12979
  %flags7 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 10, !dbg !12980
  %16 = load i64, i64* %flags7, align 8, !dbg !12980
  %and = and i64 %16, 4144, !dbg !12981
  %cmp8 = icmp eq i64 %and, 48, !dbg !12982
  br i1 %cmp8, label %if.then9, label %if.else15, !dbg !12983

if.then9:                                         ; preds = %land.lhs.true
  %17 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12984
  %custom_divisor = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %17, i32 0, i32 24, !dbg !12987
  %18 = load i32, i32* %custom_divisor, align 8, !dbg !12987
  %tobool = icmp ne i32 %18, 0, !dbg !12984
  br i1 %tobool, label %if.then10, label %if.else, !dbg !12988

if.then10:                                        ; preds = %if.then9
  %19 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12989
  %baud11 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %19, i32 0, i32 20, !dbg !12990
  %20 = load i32, i32* %baud11, align 8, !dbg !12990
  %21 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12991
  %custom_divisor12 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %21, i32 0, i32 24, !dbg !12992
  %22 = load i32, i32* %custom_divisor12, align 8, !dbg !12992
  %div = sdiv i32 %20, %22, !dbg !12993
  store i32 %div, i32* %baud_rate, align 4, !dbg !12994
  br label %if.end14, !dbg !12995

if.else:                                          ; preds = %if.then9
  %23 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !12996
  %baud13 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %23, i32 0, i32 20, !dbg !12997
  %24 = load i32, i32* %baud13, align 8, !dbg !12997
  store i32 %24, i32* %baud_rate, align 4, !dbg !12998
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then10
  br label %if.end19, !dbg !12999

if.else15:                                        ; preds = %land.lhs.true, %if.then4
  %25 = load i32, i32* %baud, align 4, !dbg !13000
  %cmp16 = icmp sgt i32 %25, 115200, !dbg !13002
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !13003

if.then17:                                        ; preds = %if.else15
  store i32 115200, i32* %baud, align 4, !dbg !13004
  br label %if.end18, !dbg !13006

if.end18:                                         ; preds = %if.then17, %if.else15
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.end14
  store i32 0, i32* %i, align 4, !dbg !13007
  br label %for.cond, !dbg !13009

for.cond:                                         ; preds = %for.inc, %if.end19
  %26 = load i32, i32* %i, align 4, !dbg !13010
  %cmp20 = icmp slt i32 %26, 20, !dbg !13012
  br i1 %cmp20, label %for.body, label %for.end, !dbg !13013

for.body:                                         ; preds = %for.cond
  %27 = load i32, i32* %baud, align 4, !dbg !13014
  %28 = load i32, i32* %i, align 4, !dbg !13017
  %idxprom = sext i32 %28 to i64, !dbg !13018
  %arrayidx = getelementptr [22 x i32], [22 x i32]* @baud_table, i64 0, i64 %idxprom, !dbg !13018
  %29 = load i32, i32* %arrayidx, align 4, !dbg !13018
  %cmp21 = icmp eq i32 %27, %29, !dbg !13019
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !13020

if.then22:                                        ; preds = %for.body
  br label %for.end, !dbg !13021

if.end23:                                         ; preds = %for.body
  br label %for.inc, !dbg !13022

for.inc:                                          ; preds = %if.end23
  %30 = load i32, i32* %i, align 4, !dbg !13023
  %inc = add i32 %30, 1, !dbg !13023
  store i32 %inc, i32* %i, align 4, !dbg !13023
  br label %for.cond, !dbg !13024, !llvm.loop !13025

for.end:                                          ; preds = %if.then22, %for.cond
  %31 = load i32, i32* %i, align 4, !dbg !13027
  %cmp24 = icmp eq i32 %31, 20, !dbg !13029
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !13030

if.then25:                                        ; preds = %for.end
  store i32 19, i32* %i, align 4, !dbg !13031
  br label %if.end26, !dbg !13032

if.end26:                                         ; preds = %if.then25, %for.end
  %32 = load i32, i32* %baud, align 4, !dbg !13033
  %cmp27 = icmp eq i32 %32, 38400, !dbg !13035
  br i1 %cmp27, label %land.lhs.true28, label %if.else34, !dbg !13036

land.lhs.true28:                                  ; preds = %if.end26
  %33 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13037
  %port29 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %33, i32 0, i32 1, !dbg !13038
  %flags30 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port29, i32 0, i32 10, !dbg !13039
  %34 = load i64, i64* %flags30, align 8, !dbg !13039
  %and31 = and i64 %34, 4144, !dbg !13040
  %cmp32 = icmp eq i64 %and31, 48, !dbg !13041
  br i1 %cmp32, label %if.then33, label %if.else34, !dbg !13042

if.then33:                                        ; preds = %land.lhs.true28
  %35 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13043
  %36 = load i32, i32* %baud_rate, align 4, !dbg !13045
  call void @cyy_baud_calc(%struct.cyclades_port* %35, i32 %36) #11, !dbg !13046
  br label %if.end66, !dbg !13047

if.else34:                                        ; preds = %land.lhs.true28, %if.end26
  %37 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13048
  %chip_rev = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %37, i32 0, i32 23, !dbg !13051
  %38 = load i32, i32* %chip_rev, align 4, !dbg !13051
  %cmp35 = icmp sge i32 %38, 72, !dbg !13052
  br i1 %cmp35, label %if.then36, label %if.else48, !dbg !13053

if.then36:                                        ; preds = %if.else34
  %39 = load i32, i32* %i, align 4, !dbg !13054
  %idxprom37 = sext i32 %39 to i64, !dbg !13056
  %arrayidx38 = getelementptr [21 x i8], [21 x i8]* @baud_bpr_60, i64 0, i64 %idxprom37, !dbg !13056
  %40 = load i8, i8* %arrayidx38, align 1, !dbg !13056
  %conv = sext i8 %40 to i32, !dbg !13056
  %41 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13057
  %tbpr = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %41, i32 0, i32 16, !dbg !13058
  store i32 %conv, i32* %tbpr, align 8, !dbg !13059
  %42 = load i32, i32* %i, align 4, !dbg !13060
  %idxprom39 = sext i32 %42 to i64, !dbg !13061
  %arrayidx40 = getelementptr [21 x i8], [21 x i8]* @baud_co_60, i64 0, i64 %idxprom39, !dbg !13061
  %43 = load i8, i8* %arrayidx40, align 1, !dbg !13061
  %conv41 = sext i8 %43 to i32, !dbg !13061
  %44 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13062
  %tco = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %44, i32 0, i32 17, !dbg !13063
  store i32 %conv41, i32* %tco, align 4, !dbg !13064
  %45 = load i32, i32* %i, align 4, !dbg !13065
  %idxprom42 = sext i32 %45 to i64, !dbg !13066
  %arrayidx43 = getelementptr [21 x i8], [21 x i8]* @baud_bpr_60, i64 0, i64 %idxprom42, !dbg !13066
  %46 = load i8, i8* %arrayidx43, align 1, !dbg !13066
  %conv44 = sext i8 %46 to i32, !dbg !13066
  %47 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13067
  %rbpr = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %47, i32 0, i32 18, !dbg !13068
  store i32 %conv44, i32* %rbpr, align 8, !dbg !13069
  %48 = load i32, i32* %i, align 4, !dbg !13070
  %idxprom45 = sext i32 %48 to i64, !dbg !13071
  %arrayidx46 = getelementptr [21 x i8], [21 x i8]* @baud_co_60, i64 0, i64 %idxprom45, !dbg !13071
  %49 = load i8, i8* %arrayidx46, align 1, !dbg !13071
  %conv47 = sext i8 %49 to i32, !dbg !13071
  %50 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13072
  %rco = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %50, i32 0, i32 19, !dbg !13073
  store i32 %conv47, i32* %rco, align 4, !dbg !13074
  br label %if.end65, !dbg !13075

if.else48:                                        ; preds = %if.else34
  %51 = load i32, i32* %i, align 4, !dbg !13076
  %idxprom49 = sext i32 %51 to i64, !dbg !13078
  %arrayidx50 = getelementptr [20 x i8], [20 x i8]* @baud_bpr_25, i64 0, i64 %idxprom49, !dbg !13078
  %52 = load i8, i8* %arrayidx50, align 1, !dbg !13078
  %conv51 = sext i8 %52 to i32, !dbg !13078
  %53 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13079
  %tbpr52 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %53, i32 0, i32 16, !dbg !13080
  store i32 %conv51, i32* %tbpr52, align 8, !dbg !13081
  %54 = load i32, i32* %i, align 4, !dbg !13082
  %idxprom53 = sext i32 %54 to i64, !dbg !13083
  %arrayidx54 = getelementptr [20 x i8], [20 x i8]* @baud_co_25, i64 0, i64 %idxprom53, !dbg !13083
  %55 = load i8, i8* %arrayidx54, align 1, !dbg !13083
  %conv55 = sext i8 %55 to i32, !dbg !13083
  %56 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13084
  %tco56 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %56, i32 0, i32 17, !dbg !13085
  store i32 %conv55, i32* %tco56, align 4, !dbg !13086
  %57 = load i32, i32* %i, align 4, !dbg !13087
  %idxprom57 = sext i32 %57 to i64, !dbg !13088
  %arrayidx58 = getelementptr [20 x i8], [20 x i8]* @baud_bpr_25, i64 0, i64 %idxprom57, !dbg !13088
  %58 = load i8, i8* %arrayidx58, align 1, !dbg !13088
  %conv59 = sext i8 %58 to i32, !dbg !13088
  %59 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13089
  %rbpr60 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %59, i32 0, i32 18, !dbg !13090
  store i32 %conv59, i32* %rbpr60, align 8, !dbg !13091
  %60 = load i32, i32* %i, align 4, !dbg !13092
  %idxprom61 = sext i32 %60 to i64, !dbg !13093
  %arrayidx62 = getelementptr [20 x i8], [20 x i8]* @baud_co_25, i64 0, i64 %idxprom61, !dbg !13093
  %61 = load i8, i8* %arrayidx62, align 1, !dbg !13093
  %conv63 = sext i8 %61 to i32, !dbg !13093
  %62 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13094
  %rco64 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %62, i32 0, i32 19, !dbg !13095
  store i32 %conv63, i32* %rco64, align 4, !dbg !13096
  br label %if.end65

if.end65:                                         ; preds = %if.else48, %if.then36
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.then33
  %63 = load i32, i32* %i, align 4, !dbg !13097
  %idxprom67 = sext i32 %63 to i64, !dbg !13099
  %arrayidx68 = getelementptr [22 x i32], [22 x i32]* @baud_table, i64 0, i64 %idxprom67, !dbg !13099
  %64 = load i32, i32* %arrayidx68, align 4, !dbg !13099
  %cmp69 = icmp eq i32 %64, 134, !dbg !13100
  br i1 %cmp69, label %if.then71, label %if.else74, !dbg !13101

if.then71:                                        ; preds = %if.end66
  %65 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13102
  %xmit_fifo_size = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %65, i32 0, i32 10, !dbg !13104
  %66 = load i32, i32* %xmit_fifo_size, align 8, !dbg !13104
  %mul = mul i32 %66, 250, !dbg !13105
  %mul72 = mul i32 %mul, 30, !dbg !13106
  %div73 = sdiv i32 %mul72, 269, !dbg !13107
  %add = add i32 %div73, 2, !dbg !13108
  %67 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13109
  %timeout = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %67, i32 0, i32 9, !dbg !13110
  store i32 %add, i32* %timeout, align 4, !dbg !13111
  br label %if.end107, !dbg !13112

if.else74:                                        ; preds = %if.end66
  %68 = load i32, i32* %baud, align 4, !dbg !13113
  %cmp75 = icmp eq i32 %68, 38400, !dbg !13115
  br i1 %cmp75, label %land.lhs.true77, label %if.else90, !dbg !13116

land.lhs.true77:                                  ; preds = %if.else74
  %69 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13117
  %port78 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %69, i32 0, i32 1, !dbg !13118
  %flags79 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port78, i32 0, i32 10, !dbg !13119
  %70 = load i64, i64* %flags79, align 8, !dbg !13119
  %and80 = and i64 %70, 4144, !dbg !13120
  %cmp81 = icmp eq i64 %and80, 48, !dbg !13121
  br i1 %cmp81, label %if.then83, label %if.else90, !dbg !13122

if.then83:                                        ; preds = %land.lhs.true77
  %71 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13123
  %xmit_fifo_size84 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %71, i32 0, i32 10, !dbg !13125
  %72 = load i32, i32* %xmit_fifo_size84, align 8, !dbg !13125
  %mul85 = mul i32 %72, 250, !dbg !13126
  %mul86 = mul i32 %mul85, 15, !dbg !13127
  %73 = load i32, i32* %baud_rate, align 4, !dbg !13128
  %div87 = sdiv i32 %mul86, %73, !dbg !13129
  %add88 = add i32 %div87, 2, !dbg !13130
  %74 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13131
  %timeout89 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %74, i32 0, i32 9, !dbg !13132
  store i32 %add88, i32* %timeout89, align 4, !dbg !13133
  br label %if.end106, !dbg !13134

if.else90:                                        ; preds = %land.lhs.true77, %if.else74
  %75 = load i32, i32* %i, align 4, !dbg !13135
  %idxprom91 = sext i32 %75 to i64, !dbg !13137
  %arrayidx92 = getelementptr [22 x i32], [22 x i32]* @baud_table, i64 0, i64 %idxprom91, !dbg !13137
  %76 = load i32, i32* %arrayidx92, align 4, !dbg !13137
  %tobool93 = icmp ne i32 %76, 0, !dbg !13137
  br i1 %tobool93, label %if.then94, label %if.else103, !dbg !13138

if.then94:                                        ; preds = %if.else90
  %77 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13139
  %xmit_fifo_size95 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %77, i32 0, i32 10, !dbg !13141
  %78 = load i32, i32* %xmit_fifo_size95, align 8, !dbg !13141
  %mul96 = mul i32 %78, 250, !dbg !13142
  %mul97 = mul i32 %mul96, 15, !dbg !13143
  %79 = load i32, i32* %i, align 4, !dbg !13144
  %idxprom98 = sext i32 %79 to i64, !dbg !13145
  %arrayidx99 = getelementptr [22 x i32], [22 x i32]* @baud_table, i64 0, i64 %idxprom98, !dbg !13145
  %80 = load i32, i32* %arrayidx99, align 4, !dbg !13145
  %div100 = sdiv i32 %mul97, %80, !dbg !13146
  %add101 = add i32 %div100, 2, !dbg !13147
  %81 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13148
  %timeout102 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %81, i32 0, i32 9, !dbg !13149
  store i32 %add101, i32* %timeout102, align 4, !dbg !13150
  br label %if.end105, !dbg !13151

if.else103:                                       ; preds = %if.else90
  %82 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13152
  %timeout104 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %82, i32 0, i32 9, !dbg !13154
  store i32 0, i32* %timeout104, align 4, !dbg !13155
  br label %if.end105

if.end105:                                        ; preds = %if.else103, %if.then94
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %if.then83
  br label %if.end107

if.end107:                                        ; preds = %if.end106, %if.then71
  %83 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13156
  %cor5 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %83, i32 0, i32 15, !dbg !13157
  store i32 0, i32* %cor5, align 4, !dbg !13158
  %84 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13159
  %cor4 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %84, i32 0, i32 14, !dbg !13160
  store i32 0, i32* %cor4, align 8, !dbg !13161
  %85 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13162
  %default_threshold = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %85, i32 0, i32 31, !dbg !13163
  %86 = load i32, i32* %default_threshold, align 4, !dbg !13163
  %tobool108 = icmp ne i32 %86, 0, !dbg !13162
  br i1 %tobool108, label %cond.true, label %cond.false, !dbg !13162

cond.true:                                        ; preds = %if.end107
  %87 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13164
  %default_threshold109 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %87, i32 0, i32 31, !dbg !13165
  %88 = load i32, i32* %default_threshold109, align 4, !dbg !13165
  br label %cond.end, !dbg !13162

cond.false:                                       ; preds = %if.end107
  %89 = load i32, i32* %i, align 4, !dbg !13166
  %idxprom110 = sext i32 %89 to i64, !dbg !13167
  %arrayidx111 = getelementptr [21 x i8], [21 x i8]* @baud_cor3, i64 0, i64 %idxprom110, !dbg !13167
  %90 = load i8, i8* %arrayidx111, align 1, !dbg !13167
  %conv112 = sext i8 %90 to i32, !dbg !13167
  br label %cond.end, !dbg !13162

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %88, %cond.true ], [ %conv112, %cond.false ], !dbg !13162
  %91 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13168
  %cor3 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %91, i32 0, i32 13, !dbg !13169
  store i32 %cond, i32* %cor3, align 4, !dbg !13170
  %92 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13171
  %cor2 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %92, i32 0, i32 12, !dbg !13172
  store i32 32, i32* %cor2, align 8, !dbg !13173
  %93 = load i32, i32* %cflag, align 4, !dbg !13174
  %and113 = and i32 %93, 48, !dbg !13175
  switch i32 %and113, label %sw.epilog [
    i32 0, label %sw.bb
    i32 16, label %sw.bb114
    i32 32, label %sw.bb116
    i32 48, label %sw.bb118
  ], !dbg !13176

sw.bb:                                            ; preds = %cond.end
  %94 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13177
  %cor1 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %94, i32 0, i32 11, !dbg !13179
  store i32 0, i32* %cor1, align 4, !dbg !13180
  br label %sw.epilog, !dbg !13181

sw.bb114:                                         ; preds = %cond.end
  %95 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13182
  %cor1115 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %95, i32 0, i32 11, !dbg !13183
  store i32 1, i32* %cor1115, align 4, !dbg !13184
  br label %sw.epilog, !dbg !13185

sw.bb116:                                         ; preds = %cond.end
  %96 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13186
  %cor1117 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %96, i32 0, i32 11, !dbg !13187
  store i32 2, i32* %cor1117, align 4, !dbg !13188
  br label %sw.epilog, !dbg !13189

sw.bb118:                                         ; preds = %cond.end
  %97 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13190
  %cor1119 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %97, i32 0, i32 11, !dbg !13191
  store i32 3, i32* %cor1119, align 4, !dbg !13192
  br label %sw.epilog, !dbg !13193

sw.epilog:                                        ; preds = %cond.end, %sw.bb118, %sw.bb116, %sw.bb114, %sw.bb
  %98 = load i32, i32* %cflag, align 4, !dbg !13194
  %and120 = and i32 %98, 64, !dbg !13196
  %tobool121 = icmp ne i32 %and120, 0, !dbg !13196
  br i1 %tobool121, label %if.then122, label %if.end124, !dbg !13197

if.then122:                                       ; preds = %sw.epilog
  %99 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13198
  %cor1123 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %99, i32 0, i32 11, !dbg !13199
  %100 = load i32, i32* %cor1123, align 4, !dbg !13200
  %or = or i32 %100, 8, !dbg !13200
  store i32 %or, i32* %cor1123, align 4, !dbg !13200
  br label %if.end124, !dbg !13198

if.end124:                                        ; preds = %if.then122, %sw.epilog
  %101 = load i32, i32* %cflag, align 4, !dbg !13201
  %and125 = and i32 %101, 256, !dbg !13203
  %tobool126 = icmp ne i32 %and125, 0, !dbg !13203
  br i1 %tobool126, label %if.then127, label %if.else137, !dbg !13204

if.then127:                                       ; preds = %if.end124
  %102 = load i32, i32* %cflag, align 4, !dbg !13205
  %and128 = and i32 %102, 512, !dbg !13208
  %tobool129 = icmp ne i32 %and128, 0, !dbg !13208
  br i1 %tobool129, label %if.then130, label %if.else133, !dbg !13209

if.then130:                                       ; preds = %if.then127
  %103 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13210
  %cor1131 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %103, i32 0, i32 11, !dbg !13211
  %104 = load i32, i32* %cor1131, align 4, !dbg !13212
  %or132 = or i32 %104, 192, !dbg !13212
  store i32 %or132, i32* %cor1131, align 4, !dbg !13212
  br label %if.end136, !dbg !13210

if.else133:                                       ; preds = %if.then127
  %105 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13213
  %cor1134 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %105, i32 0, i32 11, !dbg !13214
  %106 = load i32, i32* %cor1134, align 4, !dbg !13215
  %or135 = or i32 %106, 64, !dbg !13215
  store i32 %or135, i32* %cor1134, align 4, !dbg !13215
  br label %if.end136

if.end136:                                        ; preds = %if.else133, %if.then130
  br label %if.end139, !dbg !13216

if.else137:                                       ; preds = %if.end124
  %107 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13217
  %cor1138 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %107, i32 0, i32 11, !dbg !13218
  %108 = load i32, i32* %cor1138, align 4, !dbg !13219
  store i32 %108, i32* %cor1138, align 4, !dbg !13219
  br label %if.end139

if.end139:                                        ; preds = %if.else137, %if.end136
  %109 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13220
  %port140 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %109, i32 0, i32 1, !dbg !13221
  %110 = load i32, i32* %cflag, align 4, !dbg !13222
  %and141 = and i32 %110, -2147483648, !dbg !13223
  %tobool142 = icmp ne i32 %and141, 0, !dbg !13222
  call void @tty_port_set_cts_flow(%struct.tty_port* %port140, i1 zeroext %tobool142) #11, !dbg !13224
  %111 = load i32, i32* %cflag, align 4, !dbg !13225
  %and143 = and i32 %111, -2147483648, !dbg !13227
  %tobool144 = icmp ne i32 %and143, 0, !dbg !13227
  br i1 %tobool144, label %if.then145, label %if.else148, !dbg !13228

if.then145:                                       ; preds = %if.end139
  %112 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13229
  %cor2146 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %112, i32 0, i32 12, !dbg !13230
  %113 = load i32, i32* %cor2146, align 8, !dbg !13231
  %or147 = or i32 %113, 2, !dbg !13231
  store i32 %or147, i32* %cor2146, align 8, !dbg !13231
  br label %if.end151, !dbg !13229

if.else148:                                       ; preds = %if.end139
  %114 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13232
  %cor2149 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %114, i32 0, i32 12, !dbg !13233
  %115 = load i32, i32* %cor2149, align 8, !dbg !13234
  %and150 = and i32 %115, -3, !dbg !13234
  store i32 %and150, i32* %cor2149, align 8, !dbg !13234
  br label %if.end151

if.end151:                                        ; preds = %if.else148, %if.then145
  %116 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13235
  %port152 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %116, i32 0, i32 1, !dbg !13236
  %117 = load i32, i32* %cflag, align 4, !dbg !13237
  %neg = xor i32 %117, -1, !dbg !13238
  %and153 = and i32 %neg, 2048, !dbg !13239
  %tobool154 = icmp ne i32 %and153, 0, !dbg !13238
  call void @tty_port_set_check_carrier(%struct.tty_port* %port152, i1 zeroext %tobool154) #11, !dbg !13240
  %118 = load i32, i32* %channel, align 4, !dbg !13241
  %and155 = and i32 %118, 3, !dbg !13241
  store i32 %and155, i32* %channel, align 4, !dbg !13241
  br label %do.body, !dbg !13242

do.body:                                          ; preds = %if.end151
  br label %do.body156, !dbg !13243

do.body156:                                       ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13244, metadata !DIExpression()), !dbg !13246
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13247, metadata !DIExpression()), !dbg !13246
  %cmp157 = icmp eq i64* %__dummy, %__dummy2, !dbg !13246
  %conv158 = zext i1 %cmp157 to i32, !dbg !13246
  store i32 1, i32* %tmp, align 4, !dbg !13246
  %119 = load i32, i32* %tmp, align 4, !dbg !13246
  br label %do.body159, !dbg !13248

do.body159:                                       ; preds = %do.body156
  br label %do.body160, !dbg !13249

do.body160:                                       ; preds = %do.body159
  br label %do.body161, !dbg !13250

do.body161:                                       ; preds = %do.body160
  call void @llvm.dbg.declare(metadata i64* %__dummy162, metadata !13252, metadata !DIExpression()), !dbg !13255
  call void @llvm.dbg.declare(metadata i64* %__dummy2163, metadata !13256, metadata !DIExpression()), !dbg !13255
  %cmp164 = icmp eq i64* %__dummy162, %__dummy2163, !dbg !13255
  %conv165 = zext i1 %cmp164 to i32, !dbg !13255
  store i32 1, i32* %tmp166, align 4, !dbg !13255
  %120 = load i32, i32* %tmp166, align 4, !dbg !13255
  %call167 = call i64 @arch_local_irq_save() #11, !dbg !13257
  store i64 %call167, i64* %flags, align 8, !dbg !13257
  br label %do.end, !dbg !13257

do.end:                                           ; preds = %do.body161
  br label %do.end168, !dbg !13250

do.end168:                                        ; preds = %do.end
  br label %do.body169, !dbg !13249

do.body169:                                       ; preds = %do.end168
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13258, !srcloc !13259
  br label %do.body170, !dbg !13258

do.body170:                                       ; preds = %do.body169
  %121 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !13260
  %card_lock = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %121, i32 0, i32 10, !dbg !13260
  store %struct.spinlock* %card_lock, %struct.spinlock** %lock.addr.i, align 8
  %122 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13261
  %123 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %122, i32 0, i32 0, !dbg !13262
  %rlock.i = bitcast %union.anon.0* %123 to %struct.raw_spinlock*, !dbg !13262
  br label %do.end172, !dbg !13260

do.end172:                                        ; preds = %do.body170
  br label %do.end173, !dbg !13258

do.end173:                                        ; preds = %do.end172
  br label %do.end174, !dbg !13249

do.end174:                                        ; preds = %do.end173
  br label %do.end175, !dbg !13248

do.end175:                                        ; preds = %do.end174
  br label %do.end176, !dbg !13243

do.end176:                                        ; preds = %do.end175
  %124 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13263
  %125 = load i32, i32* %channel, align 4, !dbg !13264
  %conv177 = trunc i32 %125 to i8, !dbg !13264
  call void @cyy_writeb(%struct.cyclades_port* %124, i32 208, i8 zeroext %conv177) #11, !dbg !13265
  %126 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13266
  %127 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13267
  %tco178 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %127, i32 0, i32 17, !dbg !13268
  %128 = load i32, i32* %tco178, align 4, !dbg !13268
  %conv179 = trunc i32 %128 to i8, !dbg !13267
  call void @cyy_writeb(%struct.cyclades_port* %126, i32 236, i8 zeroext %conv179) #11, !dbg !13269
  %129 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13270
  %130 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13271
  %tbpr180 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %130, i32 0, i32 16, !dbg !13272
  %131 = load i32, i32* %tbpr180, align 8, !dbg !13272
  %conv181 = trunc i32 %131 to i8, !dbg !13271
  call void @cyy_writeb(%struct.cyclades_port* %129, i32 228, i8 zeroext %conv181) #11, !dbg !13273
  %132 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13274
  %133 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13275
  %rco182 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %133, i32 0, i32 19, !dbg !13276
  %134 = load i32, i32* %rco182, align 4, !dbg !13276
  %conv183 = trunc i32 %134 to i8, !dbg !13275
  call void @cyy_writeb(%struct.cyclades_port* %132, i32 248, i8 zeroext %conv183) #11, !dbg !13277
  %135 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13278
  %136 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13279
  %rbpr184 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %136, i32 0, i32 18, !dbg !13280
  %137 = load i32, i32* %rbpr184, align 8, !dbg !13280
  %conv185 = trunc i32 %137 to i8, !dbg !13279
  call void @cyy_writeb(%struct.cyclades_port* %135, i32 240, i8 zeroext %conv185) #11, !dbg !13281
  %138 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13282
  %139 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !13283
  %termios186 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %139, i32 0, i32 15, !dbg !13283
  %c_cc = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios186, i32 0, i32 5, !dbg !13283
  %arrayidx187 = getelementptr [19 x i8], [19 x i8]* %c_cc, i64 0, i64 8, !dbg !13283
  %140 = load i8, i8* %arrayidx187, align 1, !dbg !13283
  call void @cyy_writeb(%struct.cyclades_port* %138, i32 52, i8 zeroext %140) #11, !dbg !13284
  %141 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13285
  %142 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !13286
  %termios188 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %142, i32 0, i32 15, !dbg !13286
  %c_cc189 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios188, i32 0, i32 5, !dbg !13286
  %arrayidx190 = getelementptr [19 x i8], [19 x i8]* %c_cc189, i64 0, i64 9, !dbg !13286
  %143 = load i8, i8* %arrayidx190, align 1, !dbg !13286
  call void @cyy_writeb(%struct.cyclades_port* %141, i32 54, i8 zeroext %143) #11, !dbg !13287
  %144 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13288
  %145 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13289
  %cor1191 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %145, i32 0, i32 11, !dbg !13290
  %146 = load i32, i32* %cor1191, align 4, !dbg !13290
  %conv192 = trunc i32 %146 to i8, !dbg !13289
  call void @cyy_writeb(%struct.cyclades_port* %144, i32 16, i8 zeroext %conv192) #11, !dbg !13291
  %147 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13292
  %148 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13293
  %cor2193 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %148, i32 0, i32 12, !dbg !13294
  %149 = load i32, i32* %cor2193, align 8, !dbg !13294
  %conv194 = trunc i32 %149 to i8, !dbg !13293
  call void @cyy_writeb(%struct.cyclades_port* %147, i32 18, i8 zeroext %conv194) #11, !dbg !13295
  %150 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13296
  %151 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13297
  %cor3195 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %151, i32 0, i32 13, !dbg !13298
  %152 = load i32, i32* %cor3195, align 4, !dbg !13298
  %conv196 = trunc i32 %152 to i8, !dbg !13297
  call void @cyy_writeb(%struct.cyclades_port* %150, i32 20, i8 zeroext %conv196) #11, !dbg !13299
  %153 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13300
  %154 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13301
  %cor4197 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %154, i32 0, i32 14, !dbg !13302
  %155 = load i32, i32* %cor4197, align 8, !dbg !13302
  %conv198 = trunc i32 %155 to i8, !dbg !13301
  call void @cyy_writeb(%struct.cyclades_port* %153, i32 60, i8 zeroext %conv198) #11, !dbg !13303
  %156 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13304
  %157 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13305
  %cor5199 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %157, i32 0, i32 15, !dbg !13306
  %158 = load i32, i32* %cor5199, align 4, !dbg !13306
  %conv200 = trunc i32 %158 to i8, !dbg !13305
  call void @cyy_writeb(%struct.cyclades_port* %156, i32 62, i8 zeroext %conv200) #11, !dbg !13307
  %159 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13308
  %call201 = call i32 @cyy_issue_cmd(%struct.cyclades_port* %159, i8 zeroext 78) #11, !dbg !13309
  %160 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13310
  %161 = load i32, i32* %channel, align 4, !dbg !13311
  %conv202 = trunc i32 %161 to i8, !dbg !13311
  call void @cyy_writeb(%struct.cyclades_port* %160, i32 208, i8 zeroext %conv202) #11, !dbg !13312
  %162 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13313
  %163 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13314
  %default_timeout = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %163, i32 0, i32 32, !dbg !13315
  %164 = load i32, i32* %default_timeout, align 8, !dbg !13315
  %tobool203 = icmp ne i32 %164, 0, !dbg !13314
  br i1 %tobool203, label %cond.true204, label %cond.false206, !dbg !13314

cond.true204:                                     ; preds = %do.end176
  %165 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13316
  %default_timeout205 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %165, i32 0, i32 32, !dbg !13317
  %166 = load i32, i32* %default_timeout205, align 8, !dbg !13317
  br label %cond.end207, !dbg !13314

cond.false206:                                    ; preds = %do.end176
  br label %cond.end207, !dbg !13314

cond.end207:                                      ; preds = %cond.false206, %cond.true204
  %cond208 = phi i32 [ %166, %cond.true204 ], [ 2, %cond.false206 ], !dbg !13314
  %conv209 = trunc i32 %cond208 to i8, !dbg !13318
  call void @cyy_writeb(%struct.cyclades_port* %162, i32 66, i8 zeroext %conv209) #11, !dbg !13319
  store i32 64, i32* %cflags, align 4, !dbg !13320
  %167 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !13321
  %termios210 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %167, i32 0, i32 15, !dbg !13321
  %c_cflag211 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios210, i32 0, i32 2, !dbg !13321
  %168 = load i32, i32* %c_cflag211, align 8, !dbg !13321
  %and212 = and i32 %168, 2048, !dbg !13321
  %tobool213 = icmp ne i32 %and212, 0, !dbg !13321
  br i1 %tobool213, label %if.end216, label %if.then214, !dbg !13323

if.then214:                                       ; preds = %cond.end207
  %169 = load i32, i32* %cflags, align 4, !dbg !13324
  %or215 = or i32 %169, 176, !dbg !13324
  store i32 %or215, i32* %cflags, align 4, !dbg !13324
  br label %if.end216, !dbg !13325

if.end216:                                        ; preds = %if.then214, %cond.end207
  %170 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13326
  %171 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13327
  %call217 = call zeroext i8 @cyy_readb(%struct.cyclades_port* %171, i32 12) #11, !dbg !13328
  %conv218 = zext i8 %call217 to i32, !dbg !13328
  %or219 = or i32 %conv218, 128, !dbg !13329
  %conv220 = trunc i32 %or219 to i8, !dbg !13328
  call void @cyy_writeb(%struct.cyclades_port* %170, i32 12, i8 zeroext %conv220) #11, !dbg !13330
  %172 = load i32, i32* %cflag, align 4, !dbg !13331
  %and221 = and i32 %172, -2147483648, !dbg !13333
  %tobool222 = icmp ne i32 %and221, 0, !dbg !13333
  br i1 %tobool222, label %land.lhs.true223, label %if.else231, !dbg !13334

land.lhs.true223:                                 ; preds = %if.end216
  %173 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13335
  %rflow = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %173, i32 0, i32 21, !dbg !13336
  %174 = load i32, i32* %rflow, align 4, !dbg !13336
  %tobool224 = icmp ne i32 %174, 0, !dbg !13335
  br i1 %tobool224, label %if.then225, label %if.else231, !dbg !13337

if.then225:                                       ; preds = %land.lhs.true223
  %175 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13338
  %176 = load i32, i32* %cflags, align 4, !dbg !13339
  %177 = load i32, i32* %i, align 4, !dbg !13340
  %idxprom226 = sext i32 %177 to i64, !dbg !13341
  %arrayidx227 = getelementptr [21 x i8], [21 x i8]* @rflow_thr, i64 0, i64 %idxprom226, !dbg !13341
  %178 = load i8, i8* %arrayidx227, align 1, !dbg !13341
  %conv228 = sext i8 %178 to i32, !dbg !13341
  %or229 = or i32 %176, %conv228, !dbg !13342
  %conv230 = trunc i32 %or229 to i8, !dbg !13339
  call void @cyy_writeb(%struct.cyclades_port* %175, i32 42, i8 zeroext %conv230) #11, !dbg !13343
  br label %if.end233, !dbg !13343

if.else231:                                       ; preds = %land.lhs.true223, %if.end216
  %179 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13344
  %180 = load i32, i32* %cflags, align 4, !dbg !13345
  %conv232 = trunc i32 %180 to i8, !dbg !13345
  call void @cyy_writeb(%struct.cyclades_port* %179, i32 42, i8 zeroext %conv232) #11, !dbg !13346
  br label %if.end233

if.end233:                                        ; preds = %if.else231, %if.then225
  %181 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13347
  %182 = load i32, i32* %cflags, align 4, !dbg !13348
  %conv234 = trunc i32 %182 to i8, !dbg !13348
  call void @cyy_writeb(%struct.cyclades_port* %181, i32 44, i8 zeroext %conv234) #11, !dbg !13349
  %183 = load i32, i32* %i, align 4, !dbg !13350
  %cmp235 = icmp eq i32 %183, 0, !dbg !13352
  br i1 %cmp235, label %if.then237, label %if.else238, !dbg !13353

if.then237:                                       ; preds = %if.end233
  %184 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13354
  call void @cyy_change_rts_dtr(%struct.cyclades_port* %184, i32 0, i32 2) #11, !dbg !13355
  br label %if.end239, !dbg !13355

if.else238:                                       ; preds = %if.end233
  %185 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13356
  call void @cyy_change_rts_dtr(%struct.cyclades_port* %185, i32 2, i32 0) #11, !dbg !13357
  br label %if.end239

if.end239:                                        ; preds = %if.else238, %if.then237
  %186 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !13358
  %flags240 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %186, i32 0, i32 21, !dbg !13359
  call void @clear_bit(i64 1, i64* %flags240) #11, !dbg !13360
  %187 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !13361
  %card_lock241 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %187, i32 0, i32 10, !dbg !13362
  %188 = load i64, i64* %flags, align 8, !dbg !13363
  store %struct.spinlock* %card_lock241, %struct.spinlock** %lock.addr.i432, align 8
  store i64 %188, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !217, metadata !9119, metadata !DIExpression()) #10, !dbg !13364
  call void @llvm.dbg.declare(metadata !217, metadata !9123, metadata !DIExpression()) #10, !dbg !13364
  store i32 1, i32* %tmp.i, align 4, !dbg !13364
  %189 = load i32, i32* %tmp.i, align 4, !dbg !13364
  call void @llvm.dbg.declare(metadata !217, metadata !9124, metadata !DIExpression()) #10, !dbg !13365
  call void @llvm.dbg.declare(metadata !217, metadata !9130, metadata !DIExpression()) #10, !dbg !13365
  store i32 1, i32* %tmp8.i, align 4, !dbg !13365
  %190 = load i32, i32* %tmp8.i, align 4, !dbg !13365
  %191 = load i64, i64* %flags.addr.i, align 8, !dbg !13366
  call void @arch_local_irq_restore(i64 %191) #13, !dbg !13366
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13367, !srcloc !9134
  %192 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i432, align 8, !dbg !13368
  %193 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %192, i32 0, i32 0, !dbg !13368
  %rlock.i433 = bitcast %union.anon.0* %193 to %struct.raw_spinlock*, !dbg !13368
  br label %if.end431, !dbg !13369

if.else242:                                       ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.CH_CTRL** %ch_ctrl, metadata !13370, metadata !DIExpression()), !dbg !13372
  %194 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13373
  %u = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %194, i32 0, i32 3, !dbg !13374
  %cyz = bitcast %union.anon.67* %u to %struct.anon.69*, !dbg !13375
  %ch_ctrl243 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %cyz, i32 0, i32 0, !dbg !13376
  %195 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl243, align 8, !dbg !13376
  store %struct.CH_CTRL* %195, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !13372
  call void @llvm.dbg.declare(metadata i32* %sw_flow, metadata !13377, metadata !DIExpression()), !dbg !13378
  call void @llvm.dbg.declare(metadata i32* %retval, metadata !13379, metadata !DIExpression()), !dbg !13380
  %196 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !13381
  %call244 = call zeroext i1 @cyz_is_loaded(%struct.cyclades_card* %196) #11, !dbg !13383
  br i1 %call244, label %if.end246, label %if.then245, !dbg !13384

if.then245:                                       ; preds = %if.else242
  br label %if.end431, !dbg !13385

if.end246:                                        ; preds = %if.else242
  %197 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !13386
  %call247 = call i32 @tty_get_baud_rate(%struct.tty_struct* %197) #11, !dbg !13387
  store i32 %call247, i32* %baud, align 4, !dbg !13388
  %198 = load i32, i32* %baud, align 4, !dbg !13389
  %cmp248 = icmp eq i32 %198, 38400, !dbg !13391
  br i1 %cmp248, label %land.lhs.true250, label %if.else266, !dbg !13392

land.lhs.true250:                                 ; preds = %if.end246
  %199 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13393
  %port251 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %199, i32 0, i32 1, !dbg !13394
  %flags252 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port251, i32 0, i32 10, !dbg !13395
  %200 = load i64, i64* %flags252, align 8, !dbg !13395
  %and253 = and i64 %200, 4144, !dbg !13396
  %cmp254 = icmp eq i64 %and253, 48, !dbg !13397
  br i1 %cmp254, label %if.then256, label %if.else266, !dbg !13398

if.then256:                                       ; preds = %land.lhs.true250
  %201 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13399
  %custom_divisor257 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %201, i32 0, i32 24, !dbg !13402
  %202 = load i32, i32* %custom_divisor257, align 8, !dbg !13402
  %tobool258 = icmp ne i32 %202, 0, !dbg !13399
  br i1 %tobool258, label %if.then259, label %if.else263, !dbg !13403

if.then259:                                       ; preds = %if.then256
  %203 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13404
  %baud260 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %203, i32 0, i32 20, !dbg !13405
  %204 = load i32, i32* %baud260, align 8, !dbg !13405
  %205 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13406
  %custom_divisor261 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %205, i32 0, i32 24, !dbg !13407
  %206 = load i32, i32* %custom_divisor261, align 8, !dbg !13407
  %div262 = sdiv i32 %204, %206, !dbg !13408
  store i32 %div262, i32* %baud_rate, align 4, !dbg !13409
  br label %if.end265, !dbg !13410

if.else263:                                       ; preds = %if.then256
  %207 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13411
  %baud264 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %207, i32 0, i32 20, !dbg !13412
  %208 = load i32, i32* %baud264, align 8, !dbg !13412
  store i32 %208, i32* %baud_rate, align 4, !dbg !13413
  br label %if.end265

if.end265:                                        ; preds = %if.else263, %if.then259
  br label %if.end271, !dbg !13414

if.else266:                                       ; preds = %land.lhs.true250, %if.end246
  %209 = load i32, i32* %baud, align 4, !dbg !13415
  %cmp267 = icmp sgt i32 %209, 921600, !dbg !13417
  br i1 %cmp267, label %if.then269, label %if.end270, !dbg !13418

if.then269:                                       ; preds = %if.else266
  store i32 921600, i32* %baud, align 4, !dbg !13419
  br label %if.end270, !dbg !13421

if.end270:                                        ; preds = %if.then269, %if.else266
  br label %if.end271

if.end271:                                        ; preds = %if.end270, %if.end265
  br label %do.body272, !dbg !13422

do.body272:                                       ; preds = %if.end271
  %210 = load i32, i32* %baud, align 4, !dbg !13423
  %211 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !13423
  %comm_baud = getelementptr inbounds %struct.CH_CTRL, %struct.CH_CTRL* %211, i32 0, i32 4, !dbg !13423
  %212 = bitcast i32* %comm_baud to i8*, !dbg !13423
  call void @writel(i32 %210, i8* %212) #11, !dbg !13423
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13423, !srcloc !13425
  br label %do.end273, !dbg !13423

do.end273:                                        ; preds = %do.body272
  %213 = load i32, i32* %baud, align 4, !dbg !13426
  %cmp274 = icmp eq i32 %213, 134, !dbg !13428
  br i1 %cmp274, label %if.then276, label %if.else283, !dbg !13429

if.then276:                                       ; preds = %do.end273
  %214 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13430
  %xmit_fifo_size277 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %214, i32 0, i32 10, !dbg !13432
  %215 = load i32, i32* %xmit_fifo_size277, align 8, !dbg !13432
  %mul278 = mul i32 %215, 250, !dbg !13433
  %mul279 = mul i32 %mul278, 30, !dbg !13434
  %div280 = sdiv i32 %mul279, 269, !dbg !13435
  %add281 = add i32 %div280, 2, !dbg !13436
  %216 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13437
  %timeout282 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %216, i32 0, i32 9, !dbg !13438
  store i32 %add281, i32* %timeout282, align 4, !dbg !13439
  br label %if.end312, !dbg !13440

if.else283:                                       ; preds = %do.end273
  %217 = load i32, i32* %baud, align 4, !dbg !13441
  %cmp284 = icmp eq i32 %217, 38400, !dbg !13443
  br i1 %cmp284, label %land.lhs.true286, label %if.else299, !dbg !13444

land.lhs.true286:                                 ; preds = %if.else283
  %218 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13445
  %port287 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %218, i32 0, i32 1, !dbg !13446
  %flags288 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port287, i32 0, i32 10, !dbg !13447
  %219 = load i64, i64* %flags288, align 8, !dbg !13447
  %and289 = and i64 %219, 4144, !dbg !13448
  %cmp290 = icmp eq i64 %and289, 48, !dbg !13449
  br i1 %cmp290, label %if.then292, label %if.else299, !dbg !13450

if.then292:                                       ; preds = %land.lhs.true286
  %220 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13451
  %xmit_fifo_size293 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %220, i32 0, i32 10, !dbg !13453
  %221 = load i32, i32* %xmit_fifo_size293, align 8, !dbg !13453
  %mul294 = mul i32 %221, 250, !dbg !13454
  %mul295 = mul i32 %mul294, 15, !dbg !13455
  %222 = load i32, i32* %baud_rate, align 4, !dbg !13456
  %div296 = sdiv i32 %mul295, %222, !dbg !13457
  %add297 = add i32 %div296, 2, !dbg !13458
  %223 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13459
  %timeout298 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %223, i32 0, i32 9, !dbg !13460
  store i32 %add297, i32* %timeout298, align 4, !dbg !13461
  br label %if.end311, !dbg !13462

if.else299:                                       ; preds = %land.lhs.true286, %if.else283
  %224 = load i32, i32* %baud, align 4, !dbg !13463
  %tobool300 = icmp ne i32 %224, 0, !dbg !13463
  br i1 %tobool300, label %if.then301, label %if.else308, !dbg !13465

if.then301:                                       ; preds = %if.else299
  %225 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13466
  %xmit_fifo_size302 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %225, i32 0, i32 10, !dbg !13468
  %226 = load i32, i32* %xmit_fifo_size302, align 8, !dbg !13468
  %mul303 = mul i32 %226, 250, !dbg !13469
  %mul304 = mul i32 %mul303, 15, !dbg !13470
  %227 = load i32, i32* %baud, align 4, !dbg !13471
  %div305 = sdiv i32 %mul304, %227, !dbg !13472
  %add306 = add i32 %div305, 2, !dbg !13473
  %228 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13474
  %timeout307 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %228, i32 0, i32 9, !dbg !13475
  store i32 %add306, i32* %timeout307, align 4, !dbg !13476
  br label %if.end310, !dbg !13477

if.else308:                                       ; preds = %if.else299
  %229 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13478
  %timeout309 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %229, i32 0, i32 9, !dbg !13480
  store i32 0, i32* %timeout309, align 4, !dbg !13481
  br label %if.end310

if.end310:                                        ; preds = %if.else308, %if.then301
  br label %if.end311

if.end311:                                        ; preds = %if.end310, %if.then292
  br label %if.end312

if.end312:                                        ; preds = %if.end311, %if.then276
  %230 = load i32, i32* %cflag, align 4, !dbg !13482
  %and313 = and i32 %230, 48, !dbg !13483
  switch i32 %and313, label %sw.epilog329 [
    i32 0, label %sw.bb314
    i32 16, label %sw.bb317
    i32 32, label %sw.bb321
    i32 48, label %sw.bb325
  ], !dbg !13484

sw.bb314:                                         ; preds = %if.end312
  br label %do.body315, !dbg !13485

do.body315:                                       ; preds = %sw.bb314
  %231 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !13487
  %comm_data_l = getelementptr inbounds %struct.CH_CTRL, %struct.CH_CTRL* %231, i32 0, i32 6, !dbg !13487
  %232 = bitcast i32* %comm_data_l to i8*, !dbg !13487
  call void @writel(i32 1, i8* %232) #11, !dbg !13487
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13487, !srcloc !13489
  br label %do.end316, !dbg !13487

do.end316:                                        ; preds = %do.body315
  br label %sw.epilog329, !dbg !13490

sw.bb317:                                         ; preds = %if.end312
  br label %do.body318, !dbg !13491

do.body318:                                       ; preds = %sw.bb317
  %233 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !13492
  %comm_data_l319 = getelementptr inbounds %struct.CH_CTRL, %struct.CH_CTRL* %233, i32 0, i32 6, !dbg !13492
  %234 = bitcast i32* %comm_data_l319 to i8*, !dbg !13492
  call void @writel(i32 2, i8* %234) #11, !dbg !13492
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13492, !srcloc !13494
  br label %do.end320, !dbg !13492

do.end320:                                        ; preds = %do.body318
  br label %sw.epilog329, !dbg !13495

sw.bb321:                                         ; preds = %if.end312
  br label %do.body322, !dbg !13496

do.body322:                                       ; preds = %sw.bb321
  %235 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !13497
  %comm_data_l323 = getelementptr inbounds %struct.CH_CTRL, %struct.CH_CTRL* %235, i32 0, i32 6, !dbg !13497
  %236 = bitcast i32* %comm_data_l323 to i8*, !dbg !13497
  call void @writel(i32 4, i8* %236) #11, !dbg !13497
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13497, !srcloc !13499
  br label %do.end324, !dbg !13497

do.end324:                                        ; preds = %do.body322
  br label %sw.epilog329, !dbg !13500

sw.bb325:                                         ; preds = %if.end312
  br label %do.body326, !dbg !13501

do.body326:                                       ; preds = %sw.bb325
  %237 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !13502
  %comm_data_l327 = getelementptr inbounds %struct.CH_CTRL, %struct.CH_CTRL* %237, i32 0, i32 6, !dbg !13502
  %238 = bitcast i32* %comm_data_l327 to i8*, !dbg !13502
  call void @writel(i32 8, i8* %238) #11, !dbg !13502
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13502, !srcloc !13504
  br label %do.end328, !dbg !13502

do.end328:                                        ; preds = %do.body326
  br label %sw.epilog329, !dbg !13505

sw.epilog329:                                     ; preds = %if.end312, %do.end328, %do.end324, %do.end320, %do.end316
  %239 = load i32, i32* %cflag, align 4, !dbg !13506
  %and330 = and i32 %239, 64, !dbg !13508
  %tobool331 = icmp ne i32 %and330, 0, !dbg !13508
  br i1 %tobool331, label %if.then332, label %if.else339, !dbg !13509

if.then332:                                       ; preds = %sw.epilog329
  br label %do.body333, !dbg !13510

do.body333:                                       ; preds = %if.then332
  %240 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !13512
  %comm_data_l334 = getelementptr inbounds %struct.CH_CTRL, %struct.CH_CTRL* %240, i32 0, i32 6, !dbg !13512
  %241 = bitcast i32* %comm_data_l334 to i8*, !dbg !13512
  %call335 = call i32 @readl(i8* %241) #11, !dbg !13512
  %or336 = or i32 %call335, 64, !dbg !13512
  %242 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !13512
  %comm_data_l337 = getelementptr inbounds %struct.CH_CTRL, %struct.CH_CTRL* %242, i32 0, i32 6, !dbg !13512
  %243 = bitcast i32* %comm_data_l337 to i8*, !dbg !13512
  call void @writel(i32 %or336, i8* %243) #11, !dbg !13512
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13512, !srcloc !13514
  br label %do.end338, !dbg !13512

do.end338:                                        ; preds = %do.body333
  br label %if.end346, !dbg !13515

if.else339:                                       ; preds = %sw.epilog329
  br label %do.body340, !dbg !13516

do.body340:                                       ; preds = %if.else339
  %244 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !13518
  %comm_data_l341 = getelementptr inbounds %struct.CH_CTRL, %struct.CH_CTRL* %244, i32 0, i32 6, !dbg !13518
  %245 = bitcast i32* %comm_data_l341 to i8*, !dbg !13518
  %call342 = call i32 @readl(i8* %245) #11, !dbg !13518
  %or343 = or i32 %call342, 16, !dbg !13518
  %246 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !13518
  %comm_data_l344 = getelementptr inbounds %struct.CH_CTRL, %struct.CH_CTRL* %246, i32 0, i32 6, !dbg !13518
  %247 = bitcast i32* %comm_data_l344 to i8*, !dbg !13518
  call void @writel(i32 %or343, i8* %247) #11, !dbg !13518
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13518, !srcloc !13520
  br label %do.end345, !dbg !13518

do.end345:                                        ; preds = %do.body340
  br label %if.end346

if.end346:                                        ; preds = %do.end345, %do.end338
  %248 = load i32, i32* %cflag, align 4, !dbg !13521
  %and347 = and i32 %248, 256, !dbg !13523
  %tobool348 = icmp ne i32 %and347, 0, !dbg !13523
  br i1 %tobool348, label %if.then349, label %if.else360, !dbg !13524

if.then349:                                       ; preds = %if.end346
  %249 = load i32, i32* %cflag, align 4, !dbg !13525
  %and350 = and i32 %249, 512, !dbg !13528
  %tobool351 = icmp ne i32 %and350, 0, !dbg !13528
  br i1 %tobool351, label %if.then352, label %if.else355, !dbg !13529

if.then352:                                       ; preds = %if.then349
  br label %do.body353, !dbg !13530

do.body353:                                       ; preds = %if.then352
  %250 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !13531
  %comm_parity = getelementptr inbounds %struct.CH_CTRL, %struct.CH_CTRL* %250, i32 0, i32 5, !dbg !13531
  %251 = bitcast i32* %comm_parity to i8*, !dbg !13531
  call void @writel(i32 1, i8* %251) #11, !dbg !13531
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13531, !srcloc !13533
  br label %do.end354, !dbg !13531

do.end354:                                        ; preds = %do.body353
  br label %if.end359, !dbg !13531

if.else355:                                       ; preds = %if.then349
  br label %do.body356, !dbg !13534

do.body356:                                       ; preds = %if.else355
  %252 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !13535
  %comm_parity357 = getelementptr inbounds %struct.CH_CTRL, %struct.CH_CTRL* %252, i32 0, i32 5, !dbg !13535
  %253 = bitcast i32* %comm_parity357 to i8*, !dbg !13535
  call void @writel(i32 2, i8* %253) #11, !dbg !13535
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13535, !srcloc !13537
  br label %do.end358, !dbg !13535

do.end358:                                        ; preds = %do.body356
  br label %if.end359

if.end359:                                        ; preds = %do.end358, %do.end354
  br label %if.end364, !dbg !13538

if.else360:                                       ; preds = %if.end346
  br label %do.body361, !dbg !13539

do.body361:                                       ; preds = %if.else360
  %254 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !13540
  %comm_parity362 = getelementptr inbounds %struct.CH_CTRL, %struct.CH_CTRL* %254, i32 0, i32 5, !dbg !13540
  %255 = bitcast i32* %comm_parity362 to i8*, !dbg !13540
  call void @writel(i32 0, i8* %255) #11, !dbg !13540
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13540, !srcloc !13542
  br label %do.end363, !dbg !13540

do.end363:                                        ; preds = %do.body361
  br label %if.end364

if.end364:                                        ; preds = %do.end363, %if.end359
  %256 = load i32, i32* %cflag, align 4, !dbg !13543
  %and365 = and i32 %256, -2147483648, !dbg !13545
  %tobool366 = icmp ne i32 %and365, 0, !dbg !13545
  br i1 %tobool366, label %if.then367, label %if.else374, !dbg !13546

if.then367:                                       ; preds = %if.end364
  br label %do.body368, !dbg !13547

do.body368:                                       ; preds = %if.then367
  %257 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !13549
  %hw_flow = getelementptr inbounds %struct.CH_CTRL, %struct.CH_CTRL* %257, i32 0, i32 8, !dbg !13549
  %258 = bitcast i32* %hw_flow to i8*, !dbg !13549
  %call369 = call i32 @readl(i8* %258) #11, !dbg !13549
  %or370 = or i32 %call369, 2048, !dbg !13549
  %or371 = or i32 %or370, 1, !dbg !13549
  %259 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !13549
  %hw_flow372 = getelementptr inbounds %struct.CH_CTRL, %struct.CH_CTRL* %259, i32 0, i32 8, !dbg !13549
  %260 = bitcast i32* %hw_flow372 to i8*, !dbg !13549
  call void @writel(i32 %or371, i8* %260) #11, !dbg !13549
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13549, !srcloc !13551
  br label %do.end373, !dbg !13549

do.end373:                                        ; preds = %do.body368
  br label %if.end381, !dbg !13552

if.else374:                                       ; preds = %if.end364
  br label %do.body375, !dbg !13553

do.body375:                                       ; preds = %if.else374
  %261 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !13555
  %hw_flow376 = getelementptr inbounds %struct.CH_CTRL, %struct.CH_CTRL* %261, i32 0, i32 8, !dbg !13555
  %262 = bitcast i32* %hw_flow376 to i8*, !dbg !13555
  %call377 = call i32 @readl(i8* %262) #11, !dbg !13555
  %and378 = and i32 %call377, -2050, !dbg !13555
  %263 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !13555
  %hw_flow379 = getelementptr inbounds %struct.CH_CTRL, %struct.CH_CTRL* %263, i32 0, i32 8, !dbg !13555
  %264 = bitcast i32* %hw_flow379 to i8*, !dbg !13555
  call void @writel(i32 %and378, i8* %264) #11, !dbg !13555
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13555, !srcloc !13557
  br label %do.end380, !dbg !13555

do.end380:                                        ; preds = %do.body375
  br label %if.end381

if.end381:                                        ; preds = %do.end380, %do.end373
  %265 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13558
  %port382 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %265, i32 0, i32 1, !dbg !13559
  call void @tty_port_set_cts_flow(%struct.tty_port* %port382, i1 zeroext false) #11, !dbg !13560
  store i32 0, i32* %sw_flow, align 4, !dbg !13561
  %266 = load i32, i32* %iflag, align 4, !dbg !13562
  %and383 = and i32 %266, 1024, !dbg !13564
  %tobool384 = icmp ne i32 %and383, 0, !dbg !13564
  br i1 %tobool384, label %if.then385, label %if.end392, !dbg !13565

if.then385:                                       ; preds = %if.end381
  %267 = load i32, i32* %sw_flow, align 4, !dbg !13566
  %or386 = or i32 %267, 1, !dbg !13566
  store i32 %or386, i32* %sw_flow, align 4, !dbg !13566
  %268 = load i32, i32* %iflag, align 4, !dbg !13568
  %and387 = and i32 %268, 2048, !dbg !13570
  %tobool388 = icmp ne i32 %and387, 0, !dbg !13570
  br i1 %tobool388, label %if.then389, label %if.end391, !dbg !13571

if.then389:                                       ; preds = %if.then385
  %269 = load i32, i32* %sw_flow, align 4, !dbg !13572
  %or390 = or i32 %269, 4, !dbg !13572
  store i32 %or390, i32* %sw_flow, align 4, !dbg !13572
  br label %if.end391, !dbg !13573

if.end391:                                        ; preds = %if.then389, %if.then385
  br label %if.end392, !dbg !13574

if.end392:                                        ; preds = %if.end391, %if.end381
  br label %do.body393, !dbg !13575

do.body393:                                       ; preds = %if.end392
  %270 = load i32, i32* %sw_flow, align 4, !dbg !13576
  %271 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !13576
  %sw_flow394 = getelementptr inbounds %struct.CH_CTRL, %struct.CH_CTRL* %271, i32 0, i32 2, !dbg !13576
  %272 = bitcast i32* %sw_flow394 to i8*, !dbg !13576
  call void @writel(i32 %270, i8* %272) #11, !dbg !13576
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13576, !srcloc !13578
  br label %do.end395, !dbg !13576

do.end395:                                        ; preds = %do.body393
  %273 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !13579
  %274 = load i32, i32* %channel, align 4, !dbg !13580
  %call396 = call i32 @cyz_issue_cmd(%struct.cyclades_card* %273, i32 %274, i8 zeroext 2, i32 0) #11, !dbg !13581
  store i32 %call396, i32* %retval, align 4, !dbg !13582
  %275 = load i32, i32* %retval, align 4, !dbg !13583
  %cmp397 = icmp ne i32 %275, 0, !dbg !13585
  br i1 %cmp397, label %if.then399, label %if.end402, !dbg !13586

if.then399:                                       ; preds = %do.end395
  %276 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13587
  %line400 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %276, i32 0, i32 4, !dbg !13589
  %277 = load i32, i32* %line400, align 8, !dbg !13589
  %278 = load i32, i32* %retval, align 4, !dbg !13590
  %call401 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.50, i64 0, i64 0), i32 %277, i32 %278) #12, !dbg !13591
  br label %if.end402, !dbg !13592

if.end402:                                        ; preds = %if.then399, %do.end395
  %279 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13593
  %port403 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %279, i32 0, i32 1, !dbg !13594
  %280 = load i32, i32* %cflag, align 4, !dbg !13595
  %neg404 = xor i32 %280, -1, !dbg !13596
  %and405 = and i32 %neg404, 2048, !dbg !13597
  %tobool406 = icmp ne i32 %and405, 0, !dbg !13596
  call void @tty_port_set_check_carrier(%struct.tty_port* %port403, i1 zeroext %tobool406) #11, !dbg !13598
  %281 = load i32, i32* %baud, align 4, !dbg !13599
  %cmp407 = icmp eq i32 %281, 0, !dbg !13601
  br i1 %cmp407, label %if.then409, label %if.else415, !dbg !13602

if.then409:                                       ; preds = %if.end402
  br label %do.body410, !dbg !13603

do.body410:                                       ; preds = %if.then409
  %282 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !13605
  %rs_control = getelementptr inbounds %struct.CH_CTRL, %struct.CH_CTRL* %282, i32 0, i32 9, !dbg !13605
  %283 = bitcast i32* %rs_control to i8*, !dbg !13605
  %call411 = call i32 @readl(i8* %283) #11, !dbg !13605
  %and412 = and i32 %call411, -5, !dbg !13605
  %284 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !13605
  %rs_control413 = getelementptr inbounds %struct.CH_CTRL, %struct.CH_CTRL* %284, i32 0, i32 9, !dbg !13605
  %285 = bitcast i32* %rs_control413 to i8*, !dbg !13605
  call void @writel(i32 %and412, i8* %285) #11, !dbg !13605
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13605, !srcloc !13607
  br label %do.end414, !dbg !13605

do.end414:                                        ; preds = %do.body410
  br label %if.end422, !dbg !13608

if.else415:                                       ; preds = %if.end402
  br label %do.body416, !dbg !13609

do.body416:                                       ; preds = %if.else415
  %286 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !13611
  %rs_control417 = getelementptr inbounds %struct.CH_CTRL, %struct.CH_CTRL* %286, i32 0, i32 9, !dbg !13611
  %287 = bitcast i32* %rs_control417 to i8*, !dbg !13611
  %call418 = call i32 @readl(i8* %287) #11, !dbg !13611
  %or419 = or i32 %call418, 4, !dbg !13611
  %288 = load %struct.CH_CTRL*, %struct.CH_CTRL** %ch_ctrl, align 8, !dbg !13611
  %rs_control420 = getelementptr inbounds %struct.CH_CTRL, %struct.CH_CTRL* %288, i32 0, i32 9, !dbg !13611
  %289 = bitcast i32* %rs_control420 to i8*, !dbg !13611
  call void @writel(i32 %or419, i8* %289) #11, !dbg !13611
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13611, !srcloc !13613
  br label %do.end421, !dbg !13611

do.end421:                                        ; preds = %do.body416
  br label %if.end422

if.end422:                                        ; preds = %do.end421, %do.end414
  %290 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !13614
  %291 = load i32, i32* %channel, align 4, !dbg !13615
  %call423 = call i32 @cyz_issue_cmd(%struct.cyclades_card* %290, i32 %291, i8 zeroext 4, i32 0) #11, !dbg !13616
  store i32 %call423, i32* %retval, align 4, !dbg !13617
  %292 = load i32, i32* %retval, align 4, !dbg !13618
  %cmp424 = icmp ne i32 %292, 0, !dbg !13620
  br i1 %cmp424, label %if.then426, label %if.end429, !dbg !13621

if.then426:                                       ; preds = %if.end422
  %293 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13622
  %line427 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %293, i32 0, i32 4, !dbg !13624
  %294 = load i32, i32* %line427, align 8, !dbg !13624
  %295 = load i32, i32* %retval, align 4, !dbg !13625
  %call428 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.51, i64 0, i64 0), i32 %294, i32 %295) #12, !dbg !13626
  br label %if.end429, !dbg !13627

if.end429:                                        ; preds = %if.then426, %if.end422
  %296 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !13628
  %flags430 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %296, i32 0, i32 21, !dbg !13629
  call void @clear_bit(i64 1, i64* %flags430) #11, !dbg !13630
  br label %if.end431

if.end431:                                        ; preds = %if.then, %if.then245, %if.end429, %if.end239
  ret void, !dbg !13631
}

; Function Attrs: noredzone
declare dso_local void @tty_port_raise_dtr_rts(%struct.tty_port*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @tty_get_baud_rate(%struct.tty_struct* %tty) #4 !dbg !13632 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !13635, metadata !DIExpression()), !dbg !13636
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !13637
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 15, !dbg !13638
  %call = call i32 @tty_termios_baud_rate(%struct.ktermios* %termios) #11, !dbg !13639
  ret i32 %call, !dbg !13640
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cyy_baud_calc(%struct.cyclades_port* %info, i32 %baud) #4 !dbg !13641 {
entry:
  %info.addr = alloca %struct.cyclades_port*, align 8
  %baud.addr = alloca i32, align 4
  %co = alloca i32, align 4
  %co_val = alloca i32, align 4
  %bpr = alloca i32, align 4
  %cy_clock = alloca i32, align 4
  store %struct.cyclades_port* %info, %struct.cyclades_port** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info.addr, metadata !13644, metadata !DIExpression()), !dbg !13645
  store i32 %baud, i32* %baud.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %baud.addr, metadata !13646, metadata !DIExpression()), !dbg !13647
  call void @llvm.dbg.declare(metadata i32* %co, metadata !13648, metadata !DIExpression()), !dbg !13649
  call void @llvm.dbg.declare(metadata i32* %co_val, metadata !13650, metadata !DIExpression()), !dbg !13651
  call void @llvm.dbg.declare(metadata i32* %bpr, metadata !13652, metadata !DIExpression()), !dbg !13653
  call void @llvm.dbg.declare(metadata i32* %cy_clock, metadata !13654, metadata !DIExpression()), !dbg !13655
  %0 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13656
  %chip_rev = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %0, i32 0, i32 23, !dbg !13657
  %1 = load i32, i32* %chip_rev, align 4, !dbg !13657
  %cmp = icmp sge i32 %1, 72, !dbg !13658
  %2 = zext i1 %cmp to i64, !dbg !13659
  %cond = select i1 %cmp, i32 60000000, i32 25000000, !dbg !13659
  store i32 %cond, i32* %cy_clock, align 4, !dbg !13655
  %3 = load i32, i32* %baud.addr, align 4, !dbg !13660
  %cmp1 = icmp eq i32 %3, 0, !dbg !13662
  br i1 %cmp1, label %if.then, label %if.end, !dbg !13663

if.then:                                          ; preds = %entry
  %4 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13664
  %rco = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %4, i32 0, i32 19, !dbg !13666
  store i32 0, i32* %rco, align 4, !dbg !13667
  %5 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13668
  %rbpr = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %5, i32 0, i32 18, !dbg !13669
  store i32 0, i32* %rbpr, align 8, !dbg !13670
  %6 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13671
  %tco = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %6, i32 0, i32 17, !dbg !13672
  store i32 0, i32* %tco, align 4, !dbg !13673
  %7 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13674
  %tbpr = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %7, i32 0, i32 16, !dbg !13675
  store i32 0, i32* %tbpr, align 8, !dbg !13676
  br label %return, !dbg !13677

if.end:                                           ; preds = %entry
  store i32 4, i32* %co, align 4, !dbg !13678
  store i32 2048, i32* %co_val, align 4, !dbg !13680
  br label %for.cond, !dbg !13681

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load i32, i32* %co, align 4, !dbg !13682
  %tobool = icmp ne i32 %8, 0, !dbg !13684
  br i1 %tobool, label %for.body, label %for.end, !dbg !13684

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %cy_clock, align 4, !dbg !13685
  %10 = load i32, i32* %co_val, align 4, !dbg !13688
  %div = udiv i32 %9, %10, !dbg !13689
  %11 = load i32, i32* %baud.addr, align 4, !dbg !13690
  %div2 = udiv i32 %div, %11, !dbg !13691
  %cmp3 = icmp ugt i32 %div2, 63, !dbg !13692
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !13693

if.then4:                                         ; preds = %for.body
  br label %for.end, !dbg !13694

if.end5:                                          ; preds = %for.body
  br label %for.inc, !dbg !13695

for.inc:                                          ; preds = %if.end5
  %12 = load i32, i32* %co, align 4, !dbg !13696
  %dec = add i32 %12, -1, !dbg !13696
  store i32 %dec, i32* %co, align 4, !dbg !13696
  %13 = load i32, i32* %co_val, align 4, !dbg !13697
  %shr = ashr i32 %13, 2, !dbg !13697
  store i32 %shr, i32* %co_val, align 4, !dbg !13697
  br label %for.cond, !dbg !13698, !llvm.loop !13699

for.end:                                          ; preds = %if.then4, %for.cond
  %14 = load i32, i32* %cy_clock, align 4, !dbg !13701
  %15 = load i32, i32* %co_val, align 4, !dbg !13702
  %div6 = udiv i32 %14, %15, !dbg !13703
  %mul = mul i32 %div6, 2, !dbg !13704
  %16 = load i32, i32* %baud.addr, align 4, !dbg !13705
  %div7 = udiv i32 %mul, %16, !dbg !13706
  %add = add i32 %div7, 1, !dbg !13707
  %div8 = udiv i32 %add, 2, !dbg !13708
  store i32 %div8, i32* %bpr, align 4, !dbg !13709
  %17 = load i32, i32* %bpr, align 4, !dbg !13710
  %cmp9 = icmp sgt i32 %17, 255, !dbg !13712
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !13713

if.then10:                                        ; preds = %for.end
  store i32 255, i32* %bpr, align 4, !dbg !13714
  br label %if.end11, !dbg !13715

if.end11:                                         ; preds = %if.then10, %for.end
  %18 = load i32, i32* %bpr, align 4, !dbg !13716
  %19 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13717
  %rbpr12 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %19, i32 0, i32 18, !dbg !13718
  store i32 %18, i32* %rbpr12, align 8, !dbg !13719
  %20 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13720
  %tbpr13 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %20, i32 0, i32 16, !dbg !13721
  store i32 %18, i32* %tbpr13, align 8, !dbg !13722
  %21 = load i32, i32* %co, align 4, !dbg !13723
  %22 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13724
  %rco14 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %22, i32 0, i32 19, !dbg !13725
  store i32 %21, i32* %rco14, align 4, !dbg !13726
  %23 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13727
  %tco15 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %23, i32 0, i32 17, !dbg !13728
  store i32 %21, i32* %tco15, align 4, !dbg !13729
  br label %return, !dbg !13730

return:                                           ; preds = %if.end11, %if.then
  ret void, !dbg !13730
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tty_port_set_cts_flow(%struct.tty_port* %port, i1 zeroext %val) #4 !dbg !13731 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  %val.addr = alloca i8, align 1
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !13732, metadata !DIExpression()), !dbg !13733
  %frombool = zext i1 %val to i8
  store i8 %frombool, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !13734, metadata !DIExpression()), !dbg !13735
  %0 = load i8, i8* %val.addr, align 1, !dbg !13736
  %tobool = trunc i8 %0 to i1, !dbg !13736
  br i1 %tobool, label %if.then, label %if.else, !dbg !13738

if.then:                                          ; preds = %entry
  %1 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !13739
  %iflags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %1, i32 0, i32 11, !dbg !13740
  call void @set_bit(i64 3, i64* %iflags) #11, !dbg !13741
  br label %if.end, !dbg !13741

if.else:                                          ; preds = %entry
  %2 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !13742
  %iflags1 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %2, i32 0, i32 11, !dbg !13743
  call void @clear_bit(i64 3, i64* %iflags1) #11, !dbg !13744
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !13745
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tty_port_set_check_carrier(%struct.tty_port* %port, i1 zeroext %val) #4 !dbg !13746 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  %val.addr = alloca i8, align 1
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !13747, metadata !DIExpression()), !dbg !13748
  %frombool = zext i1 %val to i8
  store i8 %frombool, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !13749, metadata !DIExpression()), !dbg !13750
  %0 = load i8, i8* %val.addr, align 1, !dbg !13751
  %tobool = trunc i8 %0 to i1, !dbg !13751
  br i1 %tobool, label %if.then, label %if.else, !dbg !13753

if.then:                                          ; preds = %entry
  %1 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !13754
  %iflags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %1, i32 0, i32 11, !dbg !13755
  call void @set_bit(i64 4, i64* %iflags) #11, !dbg !13756
  br label %if.end, !dbg !13756

if.else:                                          ; preds = %entry
  %2 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !13757
  %iflags1 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %2, i32 0, i32 11, !dbg !13758
  call void @clear_bit(i64 4, i64* %iflags1) #11, !dbg !13759
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !13760
}

; Function Attrs: noredzone
declare dso_local i32 @tty_termios_baud_rate(%struct.ktermios*) #2

; Function Attrs: noredzone
declare dso_local void @tty_port_close(%struct.tty_port*, %struct.tty_struct*, %struct.file*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @start_xmit(%struct.cyclades_port* %info) #4 !dbg !13761 {
entry:
  %lock.addr.i26 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i26, metadata !9013, metadata !DIExpression()), !dbg !13762
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9019, metadata !DIExpression()), !dbg !13766
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7101, metadata !DIExpression()), !dbg !13767
  %info.addr = alloca %struct.cyclades_port*, align 8
  %card = alloca %struct.cyclades_card*, align 8
  %flags = alloca i64, align 8
  %channel = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.cyclades_port* %info, %struct.cyclades_port** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info.addr, metadata !13774, metadata !DIExpression()), !dbg !13775
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %card, metadata !13776, metadata !DIExpression()), !dbg !13777
  %0 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13778
  %card1 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %0, i32 0, i32 2, !dbg !13779
  %1 = load %struct.cyclades_card*, %struct.cyclades_card** %card1, align 8, !dbg !13779
  store %struct.cyclades_card* %1, %struct.cyclades_card** %card, align 8, !dbg !13777
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13780, metadata !DIExpression()), !dbg !13781
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !13782, metadata !DIExpression()), !dbg !13783
  %2 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13784
  %line = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %2, i32 0, i32 4, !dbg !13785
  %3 = load i32, i32* %line, align 8, !dbg !13785
  %4 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !13786
  %first_line = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %4, i32 0, i32 5, !dbg !13787
  %5 = load i32, i32* %first_line, align 8, !dbg !13787
  %sub = sub i32 %3, %5, !dbg !13788
  store i32 %sub, i32* %channel, align 4, !dbg !13783
  %6 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !13789
  %call = call zeroext i1 @cy_is_Z(%struct.cyclades_card* %6) #11, !dbg !13790
  br i1 %call, label %if.else, label %if.then, !dbg !13791

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !13792

do.body:                                          ; preds = %if.then
  br label %do.body2, !dbg !13793

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13794, metadata !DIExpression()), !dbg !13796
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13797, metadata !DIExpression()), !dbg !13796
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13796
  %conv = zext i1 %cmp to i32, !dbg !13796
  store i32 1, i32* %tmp, align 4, !dbg !13796
  %7 = load i32, i32* %tmp, align 4, !dbg !13796
  br label %do.body3, !dbg !13798

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !13799

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !13800

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !13802, metadata !DIExpression()), !dbg !13805
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !13806, metadata !DIExpression()), !dbg !13805
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !13805
  %conv9 = zext i1 %cmp8 to i32, !dbg !13805
  store i32 1, i32* %tmp10, align 4, !dbg !13805
  %8 = load i32, i32* %tmp10, align 4, !dbg !13805
  %call11 = call i64 @arch_local_irq_save() #11, !dbg !13807
  store i64 %call11, i64* %flags, align 8, !dbg !13807
  br label %do.end, !dbg !13807

do.end:                                           ; preds = %do.body5
  br label %do.end12, !dbg !13800

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !13799

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13808, !srcloc !13809
  br label %do.body14, !dbg !13808

do.body14:                                        ; preds = %do.body13
  %9 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !13810
  %card_lock = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %9, i32 0, i32 10, !dbg !13810
  store %struct.spinlock* %card_lock, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13811
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !13812
  %rlock.i = bitcast %union.anon.0* %11 to %struct.raw_spinlock*, !dbg !13812
  br label %do.end16, !dbg !13810

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !13808

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !13799

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !13798

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !13793

do.end20:                                         ; preds = %do.end19
  %12 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13813
  %13 = load i32, i32* %channel, align 4, !dbg !13814
  %and = and i32 %13, 3, !dbg !13815
  %conv21 = trunc i32 %and to i8, !dbg !13814
  call void @cyy_writeb(%struct.cyclades_port* %12, i32 208, i8 zeroext %conv21) #11, !dbg !13816
  %14 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13817
  %15 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13818
  %call22 = call zeroext i8 @cyy_readb(%struct.cyclades_port* %15, i32 12) #11, !dbg !13819
  %conv23 = zext i8 %call22 to i32, !dbg !13819
  %or = or i32 %conv23, 4, !dbg !13820
  %conv24 = trunc i32 %or to i8, !dbg !13819
  call void @cyy_writeb(%struct.cyclades_port* %14, i32 12, i8 zeroext %conv24) #11, !dbg !13821
  %16 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !13822
  %card_lock25 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %16, i32 0, i32 10, !dbg !13823
  %17 = load i64, i64* %flags, align 8, !dbg !13824
  store %struct.spinlock* %card_lock25, %struct.spinlock** %lock.addr.i26, align 8
  store i64 %17, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !217, metadata !9119, metadata !DIExpression()) #10, !dbg !13825
  call void @llvm.dbg.declare(metadata !217, metadata !9123, metadata !DIExpression()) #10, !dbg !13825
  store i32 1, i32* %tmp.i, align 4, !dbg !13825
  %18 = load i32, i32* %tmp.i, align 4, !dbg !13825
  call void @llvm.dbg.declare(metadata !217, metadata !9124, metadata !DIExpression()) #10, !dbg !13826
  call void @llvm.dbg.declare(metadata !217, metadata !9130, metadata !DIExpression()) #10, !dbg !13826
  store i32 1, i32* %tmp8.i, align 4, !dbg !13826
  %19 = load i32, i32* %tmp8.i, align 4, !dbg !13826
  %20 = load i64, i64* %flags.addr.i, align 8, !dbg !13827
  call void @arch_local_irq_restore(i64 %20) #13, !dbg !13827
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13828, !srcloc !9134
  %21 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i26, align 8, !dbg !13829
  %22 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %21, i32 0, i32 0, !dbg !13829
  %rlock.i27 = bitcast %union.anon.0* %22 to %struct.raw_spinlock*, !dbg !13829
  br label %if.end, !dbg !13830

if.else:                                          ; preds = %entry
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end20
  ret void, !dbg !13831
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_threshold(%struct.cyclades_port* %info, i64* %value) #4 !dbg !13832 {
entry:
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.cyclades_port*, align 8
  %value.addr = alloca i64*, align 8
  %card = alloca %struct.cyclades_card*, align 8
  %tmp = alloca i8, align 1
  %tmp4 = alloca i64, align 8
  %__ret_pu = alloca i32, align 4
  %__ptr_pu = alloca i8*, align 8
  %__val_pu = alloca i64, align 8
  %tmp7 = alloca i64, align 8
  store %struct.cyclades_port* %info, %struct.cyclades_port** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info.addr, metadata !13835, metadata !DIExpression()), !dbg !13836
  store i64* %value, i64** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %value.addr, metadata !13837, metadata !DIExpression()), !dbg !13838
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %card, metadata !13839, metadata !DIExpression()), !dbg !13840
  %0 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13841
  %card1 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %0, i32 0, i32 2, !dbg !13842
  %1 = load %struct.cyclades_card*, %struct.cyclades_card** %card1, align 8, !dbg !13842
  store %struct.cyclades_card* %1, %struct.cyclades_card** %card, align 8, !dbg !13840
  %2 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !13843
  %call = call zeroext i1 @cy_is_Z(%struct.cyclades_card* %2) #11, !dbg !13845
  br i1 %call, label %if.end, label %if.then, !dbg !13846

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %tmp, metadata !13847, metadata !DIExpression()), !dbg !13849
  %3 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13850
  %call2 = call zeroext i8 @cyy_readb(%struct.cyclades_port* %3, i32 20) #11, !dbg !13851
  %conv = zext i8 %call2 to i32, !dbg !13851
  %and = and i32 %conv, 15, !dbg !13852
  %conv3 = trunc i32 %and to i8, !dbg !13851
  store i8 %conv3, i8* %tmp, align 1, !dbg !13849
  call void @might_fault() #11, !dbg !13853
  call void @llvm.dbg.declare(metadata i32* %__ret_pu, metadata !13855, metadata !DIExpression()), !dbg !13857
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu, metadata !13858, metadata !DIExpression()), !dbg !13857
  call void @llvm.dbg.declare(metadata i64* %__val_pu, metadata !13859, metadata !DIExpression()), !dbg !13857
  %4 = load i64*, i64** %value.addr, align 8, !dbg !13857
  %5 = bitcast i64* %4 to i8*, !dbg !13857
  store i8* %5, i8** %__ptr_pu, align 8, !dbg !13857
  %6 = load i8, i8* %tmp, align 1, !dbg !13857
  %conv5 = zext i8 %6 to i64, !dbg !13857
  store i64 %conv5, i64* %__val_pu, align 8, !dbg !13857
  %7 = call i64 @llvm.read_register.i64(metadata !4820), !dbg !13857
  %8 = load i8*, i8** %__ptr_pu, align 8, !dbg !13857
  %9 = load i64, i64* %__val_pu, align 8, !dbg !13857
  %10 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %8, i64 %9, i64 8, i64 %7) #10, !dbg !13857, !srcloc !13860
  %asmresult = extractvalue { i8*, i64 } %10, 0, !dbg !13857
  %asmresult6 = extractvalue { i8*, i64 } %10, 1, !dbg !13857
  %11 = ptrtoint i8* %asmresult to i64, !dbg !13857
  %12 = trunc i64 %11 to i32, !dbg !13857
  store i32 %12, i32* %__ret_pu, align 4, !dbg !13857
  call void @llvm.write_register.i64(metadata !4820, i64 %asmresult6), !dbg !13857
  %13 = load i32, i32* %__ret_pu, align 4, !dbg !13857
  %conv8 = sext i32 %13 to i64, !dbg !13857
  store i64 %conv8, i64* %tmp7, align 8, !dbg !13857
  %14 = load i64, i64* %tmp7, align 8, !dbg !13857
  store i64 %14, i64* %tmp4, align 8, !dbg !13853
  %15 = load i64, i64* %tmp4, align 8, !dbg !13853
  %conv9 = trunc i64 %15 to i32, !dbg !13861
  store i32 %conv9, i32* %retval, align 4, !dbg !13862
  br label %return, !dbg !13862

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13863
  br label %return, !dbg !13863

return:                                           ; preds = %if.end, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !13864
  ret i32 %16, !dbg !13864
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_threshold(%struct.cyclades_port* %info, i64 %value) #4 !dbg !13865 {
entry:
  %lock.addr.i29 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i29, metadata !9013, metadata !DIExpression()), !dbg !13868
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9019, metadata !DIExpression()), !dbg !13872
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7101, metadata !DIExpression()), !dbg !13873
  %info.addr = alloca %struct.cyclades_port*, align 8
  %value.addr = alloca i64, align 8
  %card = alloca %struct.cyclades_card*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy10 = alloca i64, align 8
  %__dummy211 = alloca i64, align 8
  %tmp14 = alloca i32, align 4
  store %struct.cyclades_port* %info, %struct.cyclades_port** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info.addr, metadata !13880, metadata !DIExpression()), !dbg !13881
  store i64 %value, i64* %value.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %value.addr, metadata !13882, metadata !DIExpression()), !dbg !13883
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %card, metadata !13884, metadata !DIExpression()), !dbg !13885
  %0 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13886
  %card1 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %0, i32 0, i32 2, !dbg !13887
  %1 = load %struct.cyclades_card*, %struct.cyclades_card** %card1, align 8, !dbg !13887
  store %struct.cyclades_card* %1, %struct.cyclades_card** %card, align 8, !dbg !13885
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13888, metadata !DIExpression()), !dbg !13889
  %2 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !13890
  %call = call zeroext i1 @cy_is_Z(%struct.cyclades_card* %2) #11, !dbg !13891
  br i1 %call, label %if.end, label %if.then, !dbg !13892

if.then:                                          ; preds = %entry
  %3 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13893
  %cor3 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %3, i32 0, i32 13, !dbg !13894
  %4 = load i32, i32* %cor3, align 4, !dbg !13895
  %and = and i32 %4, -16, !dbg !13895
  store i32 %and, i32* %cor3, align 4, !dbg !13895
  %5 = load i64, i64* %value.addr, align 8, !dbg !13896
  %and2 = and i64 %5, 15, !dbg !13897
  %6 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13898
  %cor33 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %6, i32 0, i32 13, !dbg !13899
  %7 = load i32, i32* %cor33, align 4, !dbg !13900
  %conv = sext i32 %7 to i64, !dbg !13900
  %or = or i64 %conv, %and2, !dbg !13900
  %conv4 = trunc i64 %or to i32, !dbg !13900
  store i32 %conv4, i32* %cor33, align 4, !dbg !13900
  br label %do.body, !dbg !13901

do.body:                                          ; preds = %if.then
  br label %do.body5, !dbg !13902

do.body5:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13903, metadata !DIExpression()), !dbg !13905
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13906, metadata !DIExpression()), !dbg !13905
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13905
  %conv6 = zext i1 %cmp to i32, !dbg !13905
  store i32 1, i32* %tmp, align 4, !dbg !13905
  %8 = load i32, i32* %tmp, align 4, !dbg !13905
  br label %do.body7, !dbg !13907

do.body7:                                         ; preds = %do.body5
  br label %do.body8, !dbg !13908

do.body8:                                         ; preds = %do.body7
  br label %do.body9, !dbg !13909

do.body9:                                         ; preds = %do.body8
  call void @llvm.dbg.declare(metadata i64* %__dummy10, metadata !13911, metadata !DIExpression()), !dbg !13914
  call void @llvm.dbg.declare(metadata i64* %__dummy211, metadata !13915, metadata !DIExpression()), !dbg !13914
  %cmp12 = icmp eq i64* %__dummy10, %__dummy211, !dbg !13914
  %conv13 = zext i1 %cmp12 to i32, !dbg !13914
  store i32 1, i32* %tmp14, align 4, !dbg !13914
  %9 = load i32, i32* %tmp14, align 4, !dbg !13914
  %call15 = call i64 @arch_local_irq_save() #11, !dbg !13916
  store i64 %call15, i64* %flags, align 8, !dbg !13916
  br label %do.end, !dbg !13916

do.end:                                           ; preds = %do.body9
  br label %do.end16, !dbg !13909

do.end16:                                         ; preds = %do.end
  br label %do.body17, !dbg !13908

do.body17:                                        ; preds = %do.end16
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13917, !srcloc !13918
  br label %do.body18, !dbg !13917

do.body18:                                        ; preds = %do.body17
  %10 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !13919
  %card_lock = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %10, i32 0, i32 10, !dbg !13919
  store %struct.spinlock* %card_lock, %struct.spinlock** %lock.addr.i, align 8
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13920
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !13921
  %rlock.i = bitcast %union.anon.0* %12 to %struct.raw_spinlock*, !dbg !13921
  br label %do.end20, !dbg !13919

do.end20:                                         ; preds = %do.body18
  br label %do.end21, !dbg !13917

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !13908

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !13907

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !13902

do.end24:                                         ; preds = %do.end23
  %13 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13922
  %14 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13923
  %cor325 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %14, i32 0, i32 13, !dbg !13924
  %15 = load i32, i32* %cor325, align 4, !dbg !13924
  %conv26 = trunc i32 %15 to i8, !dbg !13923
  call void @cyy_writeb(%struct.cyclades_port* %13, i32 20, i8 zeroext %conv26) #11, !dbg !13925
  %16 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13926
  %call27 = call i32 @cyy_issue_cmd(%struct.cyclades_port* %16, i8 zeroext 72) #11, !dbg !13927
  %17 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !13928
  %card_lock28 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %17, i32 0, i32 10, !dbg !13929
  %18 = load i64, i64* %flags, align 8, !dbg !13930
  store %struct.spinlock* %card_lock28, %struct.spinlock** %lock.addr.i29, align 8
  store i64 %18, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !217, metadata !9119, metadata !DIExpression()) #10, !dbg !13931
  call void @llvm.dbg.declare(metadata !217, metadata !9123, metadata !DIExpression()) #10, !dbg !13931
  store i32 1, i32* %tmp.i, align 4, !dbg !13931
  %19 = load i32, i32* %tmp.i, align 4, !dbg !13931
  call void @llvm.dbg.declare(metadata !217, metadata !9124, metadata !DIExpression()) #10, !dbg !13932
  call void @llvm.dbg.declare(metadata !217, metadata !9130, metadata !DIExpression()) #10, !dbg !13932
  store i32 1, i32* %tmp8.i, align 4, !dbg !13932
  %20 = load i32, i32* %tmp8.i, align 4, !dbg !13932
  %21 = load i64, i64* %flags.addr.i, align 8, !dbg !13933
  call void @arch_local_irq_restore(i64 %21) #13, !dbg !13933
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13934, !srcloc !9134
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i29, align 8, !dbg !13935
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !13935
  %rlock.i30 = bitcast %union.anon.0* %23 to %struct.raw_spinlock*, !dbg !13935
  br label %if.end, !dbg !13936

if.end:                                           ; preds = %do.end24, %entry
  ret i32 0, !dbg !13937
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @might_fault() #4 !dbg !13938 {
entry:
  ret void, !dbg !13940
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_timeout(%struct.cyclades_port* %info, i64* %value) #4 !dbg !13941 {
entry:
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.cyclades_port*, align 8
  %value.addr = alloca i64*, align 8
  %card = alloca %struct.cyclades_card*, align 8
  %tmp = alloca i8, align 1
  %tmp3 = alloca i64, align 8
  %__ret_pu = alloca i32, align 4
  %__ptr_pu = alloca i8*, align 8
  %__val_pu = alloca i64, align 8
  %tmp5 = alloca i64, align 8
  store %struct.cyclades_port* %info, %struct.cyclades_port** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info.addr, metadata !13942, metadata !DIExpression()), !dbg !13943
  store i64* %value, i64** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %value.addr, metadata !13944, metadata !DIExpression()), !dbg !13945
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %card, metadata !13946, metadata !DIExpression()), !dbg !13947
  %0 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13948
  %card1 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %0, i32 0, i32 2, !dbg !13949
  %1 = load %struct.cyclades_card*, %struct.cyclades_card** %card1, align 8, !dbg !13949
  store %struct.cyclades_card* %1, %struct.cyclades_card** %card, align 8, !dbg !13947
  %2 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !13950
  %call = call zeroext i1 @cy_is_Z(%struct.cyclades_card* %2) #11, !dbg !13952
  br i1 %call, label %if.end, label %if.then, !dbg !13953

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %tmp, metadata !13954, metadata !DIExpression()), !dbg !13956
  %3 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13957
  %call2 = call zeroext i8 @cyy_readb(%struct.cyclades_port* %3, i32 66) #11, !dbg !13958
  store i8 %call2, i8* %tmp, align 1, !dbg !13956
  call void @might_fault() #11, !dbg !13959
  call void @llvm.dbg.declare(metadata i32* %__ret_pu, metadata !13961, metadata !DIExpression()), !dbg !13963
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu, metadata !13964, metadata !DIExpression()), !dbg !13963
  call void @llvm.dbg.declare(metadata i64* %__val_pu, metadata !13965, metadata !DIExpression()), !dbg !13963
  %4 = load i64*, i64** %value.addr, align 8, !dbg !13963
  %5 = bitcast i64* %4 to i8*, !dbg !13963
  store i8* %5, i8** %__ptr_pu, align 8, !dbg !13963
  %6 = load i8, i8* %tmp, align 1, !dbg !13963
  %conv = zext i8 %6 to i64, !dbg !13963
  store i64 %conv, i64* %__val_pu, align 8, !dbg !13963
  %7 = call i64 @llvm.read_register.i64(metadata !4820), !dbg !13963
  %8 = load i8*, i8** %__ptr_pu, align 8, !dbg !13963
  %9 = load i64, i64* %__val_pu, align 8, !dbg !13963
  %10 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %8, i64 %9, i64 8, i64 %7) #10, !dbg !13963, !srcloc !13966
  %asmresult = extractvalue { i8*, i64 } %10, 0, !dbg !13963
  %asmresult4 = extractvalue { i8*, i64 } %10, 1, !dbg !13963
  %11 = ptrtoint i8* %asmresult to i64, !dbg !13963
  %12 = trunc i64 %11 to i32, !dbg !13963
  store i32 %12, i32* %__ret_pu, align 4, !dbg !13963
  call void @llvm.write_register.i64(metadata !4820, i64 %asmresult4), !dbg !13963
  %13 = load i32, i32* %__ret_pu, align 4, !dbg !13963
  %conv6 = sext i32 %13 to i64, !dbg !13963
  store i64 %conv6, i64* %tmp5, align 8, !dbg !13963
  %14 = load i64, i64* %tmp5, align 8, !dbg !13963
  store i64 %14, i64* %tmp3, align 8, !dbg !13959
  %15 = load i64, i64* %tmp3, align 8, !dbg !13959
  %conv7 = trunc i64 %15 to i32, !dbg !13967
  store i32 %conv7, i32* %retval, align 4, !dbg !13968
  br label %return, !dbg !13968

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13969
  br label %return, !dbg !13969

return:                                           ; preds = %if.end, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !13970
  ret i32 %16, !dbg !13970
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_timeout(%struct.cyclades_port* %info, i64 %value) #4 !dbg !13971 {
entry:
  %lock.addr.i23 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i23, metadata !9013, metadata !DIExpression()), !dbg !13972
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9019, metadata !DIExpression()), !dbg !13976
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7101, metadata !DIExpression()), !dbg !13977
  %info.addr = alloca %struct.cyclades_port*, align 8
  %value.addr = alloca i64, align 8
  %card = alloca %struct.cyclades_card*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.cyclades_port* %info, %struct.cyclades_port** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info.addr, metadata !13984, metadata !DIExpression()), !dbg !13985
  store i64 %value, i64* %value.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %value.addr, metadata !13986, metadata !DIExpression()), !dbg !13987
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %card, metadata !13988, metadata !DIExpression()), !dbg !13989
  %0 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !13990
  %card1 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %0, i32 0, i32 2, !dbg !13991
  %1 = load %struct.cyclades_card*, %struct.cyclades_card** %card1, align 8, !dbg !13991
  store %struct.cyclades_card* %1, %struct.cyclades_card** %card, align 8, !dbg !13989
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13992, metadata !DIExpression()), !dbg !13993
  %2 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !13994
  %call = call zeroext i1 @cy_is_Z(%struct.cyclades_card* %2) #11, !dbg !13995
  br i1 %call, label %if.end, label %if.then, !dbg !13996

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !13997

do.body:                                          ; preds = %if.then
  br label %do.body2, !dbg !13998

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13999, metadata !DIExpression()), !dbg !14001
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !14002, metadata !DIExpression()), !dbg !14001
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !14001
  %conv = zext i1 %cmp to i32, !dbg !14001
  store i32 1, i32* %tmp, align 4, !dbg !14001
  %3 = load i32, i32* %tmp, align 4, !dbg !14001
  br label %do.body3, !dbg !14003

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !14004

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !14005

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !14007, metadata !DIExpression()), !dbg !14010
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !14011, metadata !DIExpression()), !dbg !14010
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !14010
  %conv9 = zext i1 %cmp8 to i32, !dbg !14010
  store i32 1, i32* %tmp10, align 4, !dbg !14010
  %4 = load i32, i32* %tmp10, align 4, !dbg !14010
  %call11 = call i64 @arch_local_irq_save() #11, !dbg !14012
  store i64 %call11, i64* %flags, align 8, !dbg !14012
  br label %do.end, !dbg !14012

do.end:                                           ; preds = %do.body5
  br label %do.end12, !dbg !14005

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !14004

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !14013, !srcloc !14014
  br label %do.body14, !dbg !14013

do.body14:                                        ; preds = %do.body13
  %5 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !14015
  %card_lock = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %5, i32 0, i32 10, !dbg !14015
  store %struct.spinlock* %card_lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !14016
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !14017
  %rlock.i = bitcast %union.anon.0* %7 to %struct.raw_spinlock*, !dbg !14017
  br label %do.end16, !dbg !14015

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !14013

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !14004

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !14003

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !13998

do.end20:                                         ; preds = %do.end19
  %8 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !14018
  %9 = load i64, i64* %value.addr, align 8, !dbg !14019
  %and = and i64 %9, 255, !dbg !14020
  %conv21 = trunc i64 %and to i8, !dbg !14019
  call void @cyy_writeb(%struct.cyclades_port* %8, i32 66, i8 zeroext %conv21) #11, !dbg !14021
  %10 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !14022
  %card_lock22 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %10, i32 0, i32 10, !dbg !14023
  %11 = load i64, i64* %flags, align 8, !dbg !14024
  store %struct.spinlock* %card_lock22, %struct.spinlock** %lock.addr.i23, align 8
  store i64 %11, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !217, metadata !9119, metadata !DIExpression()) #10, !dbg !14025
  call void @llvm.dbg.declare(metadata !217, metadata !9123, metadata !DIExpression()) #10, !dbg !14025
  store i32 1, i32* %tmp.i, align 4, !dbg !14025
  %12 = load i32, i32* %tmp.i, align 4, !dbg !14025
  call void @llvm.dbg.declare(metadata !217, metadata !9124, metadata !DIExpression()) #10, !dbg !14026
  call void @llvm.dbg.declare(metadata !217, metadata !9130, metadata !DIExpression()) #10, !dbg !14026
  store i32 1, i32* %tmp8.i, align 4, !dbg !14026
  %13 = load i32, i32* %tmp8.i, align 4, !dbg !14026
  %14 = load i64, i64* %flags.addr.i, align 8, !dbg !14027
  call void @arch_local_irq_restore(i64 %14) #13, !dbg !14027
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !14028, !srcloc !9134
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i23, align 8, !dbg !14029
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !14029
  %rlock.i24 = bitcast %union.anon.0* %16 to %struct.raw_spinlock*, !dbg !14029
  br label %if.end, !dbg !14030

if.end:                                           ; preds = %do.end20, %entry
  ret i32 0, !dbg !14031
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_lsr_info(%struct.cyclades_port* %info, i32* %value) #4 !dbg !14032 {
entry:
  %lock.addr.i31 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i31, metadata !9013, metadata !DIExpression()), !dbg !14035
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9019, metadata !DIExpression()), !dbg !14039
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7101, metadata !DIExpression()), !dbg !14040
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.cyclades_port*, align 8
  %value.addr = alloca i32*, align 8
  %card = alloca %struct.cyclades_card*, align 8
  %result = alloca i32, align 4
  %flags = alloca i64, align 8
  %status = alloca i8, align 1
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  %tmp26 = alloca i64, align 8
  %__ret_pu = alloca i32, align 4
  %__ptr_pu = alloca i8*, align 8
  %__val_pu = alloca i32, align 4
  %tmp28 = alloca i64, align 8
  store %struct.cyclades_port* %info, %struct.cyclades_port** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info.addr, metadata !14047, metadata !DIExpression()), !dbg !14048
  store i32* %value, i32** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %value.addr, metadata !14049, metadata !DIExpression()), !dbg !14050
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %card, metadata !14051, metadata !DIExpression()), !dbg !14052
  %0 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !14053
  %card1 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %0, i32 0, i32 2, !dbg !14054
  %1 = load %struct.cyclades_card*, %struct.cyclades_card** %card1, align 8, !dbg !14054
  store %struct.cyclades_card* %1, %struct.cyclades_card** %card, align 8, !dbg !14052
  call void @llvm.dbg.declare(metadata i32* %result, metadata !14055, metadata !DIExpression()), !dbg !14056
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !14057, metadata !DIExpression()), !dbg !14058
  call void @llvm.dbg.declare(metadata i8* %status, metadata !14059, metadata !DIExpression()), !dbg !14060
  %2 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !14061
  %call = call zeroext i1 @cy_is_Z(%struct.cyclades_card* %2) #11, !dbg !14062
  br i1 %call, label %if.else, label %if.then, !dbg !14063

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !14064

do.body:                                          ; preds = %if.then
  br label %do.body2, !dbg !14065

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !14066, metadata !DIExpression()), !dbg !14068
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !14069, metadata !DIExpression()), !dbg !14068
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !14068
  %conv = zext i1 %cmp to i32, !dbg !14068
  store i32 1, i32* %tmp, align 4, !dbg !14068
  %3 = load i32, i32* %tmp, align 4, !dbg !14068
  br label %do.body3, !dbg !14070

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !14071

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !14072

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !14074, metadata !DIExpression()), !dbg !14077
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !14078, metadata !DIExpression()), !dbg !14077
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !14077
  %conv9 = zext i1 %cmp8 to i32, !dbg !14077
  store i32 1, i32* %tmp10, align 4, !dbg !14077
  %4 = load i32, i32* %tmp10, align 4, !dbg !14077
  %call11 = call i64 @arch_local_irq_save() #11, !dbg !14079
  store i64 %call11, i64* %flags, align 8, !dbg !14079
  br label %do.end, !dbg !14079

do.end:                                           ; preds = %do.body5
  br label %do.end12, !dbg !14072

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !14071

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !14080, !srcloc !14081
  br label %do.body14, !dbg !14080

do.body14:                                        ; preds = %do.body13
  %5 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !14082
  %card_lock = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %5, i32 0, i32 10, !dbg !14082
  store %struct.spinlock* %card_lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !14083
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !14084
  %rlock.i = bitcast %union.anon.0* %7 to %struct.raw_spinlock*, !dbg !14084
  br label %do.end16, !dbg !14082

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !14080

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !14071

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !14070

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !14065

do.end20:                                         ; preds = %do.end19
  %8 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !14085
  %call21 = call zeroext i8 @cyy_readb(%struct.cyclades_port* %8, i32 12) #11, !dbg !14086
  %conv22 = zext i8 %call21 to i32, !dbg !14086
  %and = and i32 %conv22, 6, !dbg !14087
  %conv23 = trunc i32 %and to i8, !dbg !14086
  store i8 %conv23, i8* %status, align 1, !dbg !14088
  %9 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !14089
  %card_lock24 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %9, i32 0, i32 10, !dbg !14090
  %10 = load i64, i64* %flags, align 8, !dbg !14091
  store %struct.spinlock* %card_lock24, %struct.spinlock** %lock.addr.i31, align 8
  store i64 %10, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !217, metadata !9119, metadata !DIExpression()) #10, !dbg !14092
  call void @llvm.dbg.declare(metadata !217, metadata !9123, metadata !DIExpression()) #10, !dbg !14092
  store i32 1, i32* %tmp.i, align 4, !dbg !14092
  %11 = load i32, i32* %tmp.i, align 4, !dbg !14092
  call void @llvm.dbg.declare(metadata !217, metadata !9124, metadata !DIExpression()) #10, !dbg !14093
  call void @llvm.dbg.declare(metadata !217, metadata !9130, metadata !DIExpression()) #10, !dbg !14093
  store i32 1, i32* %tmp8.i, align 4, !dbg !14093
  %12 = load i32, i32* %tmp8.i, align 4, !dbg !14093
  %13 = load i64, i64* %flags.addr.i, align 8, !dbg !14094
  call void @arch_local_irq_restore(i64 %13) #13, !dbg !14094
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !14095, !srcloc !9134
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i31, align 8, !dbg !14096
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !14096
  %rlock.i32 = bitcast %union.anon.0* %15 to %struct.raw_spinlock*, !dbg !14096
  %16 = load i8, i8* %status, align 1, !dbg !14097
  %conv25 = zext i8 %16 to i32, !dbg !14097
  %tobool = icmp ne i32 %conv25, 0, !dbg !14097
  %17 = zext i1 %tobool to i64, !dbg !14097
  %cond = select i1 %tobool, i32 0, i32 1, !dbg !14097
  store i32 %cond, i32* %result, align 4, !dbg !14098
  br label %if.end, !dbg !14099

if.else:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !14100
  br label %return, !dbg !14100

if.end:                                           ; preds = %do.end20
  call void @might_fault() #11, !dbg !14102
  call void @llvm.dbg.declare(metadata i32* %__ret_pu, metadata !14104, metadata !DIExpression()), !dbg !14106
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu, metadata !14107, metadata !DIExpression()), !dbg !14106
  call void @llvm.dbg.declare(metadata i32* %__val_pu, metadata !14108, metadata !DIExpression()), !dbg !14106
  %18 = load i32*, i32** %value.addr, align 8, !dbg !14106
  %19 = bitcast i32* %18 to i8*, !dbg !14106
  store i8* %19, i8** %__ptr_pu, align 8, !dbg !14106
  %20 = load i32, i32* %result, align 4, !dbg !14106
  store i32 %20, i32* %__val_pu, align 4, !dbg !14106
  %21 = call i64 @llvm.read_register.i64(metadata !4820), !dbg !14106
  %22 = load i8*, i8** %__ptr_pu, align 8, !dbg !14106
  %23 = load i32, i32* %__val_pu, align 4, !dbg !14106
  %24 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %22, i32 %23, i64 4, i64 %21) #10, !dbg !14106, !srcloc !14109
  %asmresult = extractvalue { i8*, i64 } %24, 0, !dbg !14106
  %asmresult27 = extractvalue { i8*, i64 } %24, 1, !dbg !14106
  %25 = ptrtoint i8* %asmresult to i64, !dbg !14106
  %26 = trunc i64 %25 to i32, !dbg !14106
  store i32 %26, i32* %__ret_pu, align 4, !dbg !14106
  call void @llvm.write_register.i64(metadata !4820, i64 %asmresult27), !dbg !14106
  %27 = load i32, i32* %__ret_pu, align 4, !dbg !14106
  %conv29 = sext i32 %27 to i64, !dbg !14106
  store i64 %conv29, i64* %tmp28, align 8, !dbg !14106
  %28 = load i64, i64* %tmp28, align 8, !dbg !14106
  store i64 %28, i64* %tmp26, align 8, !dbg !14102
  %29 = load i64, i64* %tmp26, align 8, !dbg !14102
  %conv30 = trunc i64 %29 to i32, !dbg !14110
  store i32 %conv30, i32* %retval, align 4, !dbg !14111
  br label %return, !dbg !14111

return:                                           ; preds = %if.end, %if.else
  %30 = load i32, i32* %retval, align 4, !dbg !14112
  ret i32 %30, !dbg !14112
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cy_cflags_changed(%struct.cyclades_port* %info, i64 %arg, %struct.cyclades_icount* %cprev) #4 !dbg !14113 {
entry:
  %lock.addr.i42 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i42, metadata !9013, metadata !DIExpression()), !dbg !14117
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9019, metadata !DIExpression()), !dbg !14119
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7101, metadata !DIExpression()), !dbg !14120
  %info.addr = alloca %struct.cyclades_port*, align 8
  %arg.addr = alloca i64, align 8
  %cprev.addr = alloca %struct.cyclades_icount*, align 8
  %cnow = alloca %struct.cyclades_icount, align 4
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.cyclades_port* %info, %struct.cyclades_port** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info.addr, metadata !14127, metadata !DIExpression()), !dbg !14128
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !14129, metadata !DIExpression()), !dbg !14130
  store %struct.cyclades_icount* %cprev, %struct.cyclades_icount** %cprev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cyclades_icount** %cprev.addr, metadata !14131, metadata !DIExpression()), !dbg !14132
  call void @llvm.dbg.declare(metadata %struct.cyclades_icount* %cnow, metadata !14133, metadata !DIExpression()), !dbg !14134
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !14135, metadata !DIExpression()), !dbg !14136
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14137, metadata !DIExpression()), !dbg !14138
  br label %do.body, !dbg !14139

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !14140

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !14141, metadata !DIExpression()), !dbg !14143
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !14144, metadata !DIExpression()), !dbg !14143
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !14143
  %conv = zext i1 %cmp to i32, !dbg !14143
  store i32 1, i32* %tmp, align 4, !dbg !14143
  %0 = load i32, i32* %tmp, align 4, !dbg !14143
  br label %do.body2, !dbg !14145

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !14146

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !14147

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !14149, metadata !DIExpression()), !dbg !14152
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !14153, metadata !DIExpression()), !dbg !14152
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !14152
  %conv8 = zext i1 %cmp7 to i32, !dbg !14152
  store i32 1, i32* %tmp9, align 4, !dbg !14152
  %1 = load i32, i32* %tmp9, align 4, !dbg !14152
  %call = call i64 @arch_local_irq_save() #11, !dbg !14154
  store i64 %call, i64* %flags, align 8, !dbg !14154
  br label %do.end, !dbg !14154

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !14147

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !14146

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !14155, !srcloc !14156
  br label %do.body12, !dbg !14155

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !14157
  %card = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %2, i32 0, i32 2, !dbg !14157
  %3 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !14157
  %card_lock = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %3, i32 0, i32 10, !dbg !14157
  store %struct.spinlock* %card_lock, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !14158
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !14159
  %rlock.i = bitcast %union.anon.0* %5 to %struct.raw_spinlock*, !dbg !14159
  br label %do.end14, !dbg !14157

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !14155

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !14146

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !14145

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !14140

do.end18:                                         ; preds = %do.end17
  %6 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !14160
  %icount = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %6, i32 0, i32 36, !dbg !14161
  %7 = bitcast %struct.cyclades_icount* %cnow to i8*, !dbg !14161
  %8 = bitcast %struct.cyclades_icount* %icount to i8*, !dbg !14161
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 8 %8, i64 44, i1 false), !dbg !14161
  %9 = load %struct.cyclades_port*, %struct.cyclades_port** %info.addr, align 8, !dbg !14162
  %card19 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %9, i32 0, i32 2, !dbg !14163
  %10 = load %struct.cyclades_card*, %struct.cyclades_card** %card19, align 8, !dbg !14163
  %card_lock20 = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %10, i32 0, i32 10, !dbg !14164
  %11 = load i64, i64* %flags, align 8, !dbg !14165
  store %struct.spinlock* %card_lock20, %struct.spinlock** %lock.addr.i42, align 8
  store i64 %11, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !217, metadata !9119, metadata !DIExpression()) #10, !dbg !14166
  call void @llvm.dbg.declare(metadata !217, metadata !9123, metadata !DIExpression()) #10, !dbg !14166
  store i32 1, i32* %tmp.i, align 4, !dbg !14166
  %12 = load i32, i32* %tmp.i, align 4, !dbg !14166
  call void @llvm.dbg.declare(metadata !217, metadata !9124, metadata !DIExpression()) #10, !dbg !14167
  call void @llvm.dbg.declare(metadata !217, metadata !9130, metadata !DIExpression()) #10, !dbg !14167
  store i32 1, i32* %tmp8.i, align 4, !dbg !14167
  %13 = load i32, i32* %tmp8.i, align 4, !dbg !14167
  %14 = load i64, i64* %flags.addr.i, align 8, !dbg !14168
  call void @arch_local_irq_restore(i64 %14) #13, !dbg !14168
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !14169, !srcloc !9134
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i42, align 8, !dbg !14170
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !14170
  %rlock.i43 = bitcast %union.anon.0* %16 to %struct.raw_spinlock*, !dbg !14170
  %17 = load i64, i64* %arg.addr, align 8, !dbg !14171
  %and = and i64 %17, 128, !dbg !14172
  %tobool = icmp ne i64 %and, 0, !dbg !14172
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false, !dbg !14173

land.lhs.true:                                    ; preds = %do.end18
  %rng = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %cnow, i32 0, i32 2, !dbg !14174
  %18 = load i32, i32* %rng, align 4, !dbg !14174
  %19 = load %struct.cyclades_icount*, %struct.cyclades_icount** %cprev.addr, align 8, !dbg !14175
  %rng21 = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %19, i32 0, i32 2, !dbg !14176
  %20 = load i32, i32* %rng21, align 4, !dbg !14176
  %cmp22 = icmp ne i32 %18, %20, !dbg !14177
  br i1 %cmp22, label %lor.end, label %lor.lhs.false, !dbg !14178

lor.lhs.false:                                    ; preds = %land.lhs.true, %do.end18
  %21 = load i64, i64* %arg.addr, align 8, !dbg !14179
  %and24 = and i64 %21, 256, !dbg !14180
  %tobool25 = icmp ne i64 %and24, 0, !dbg !14180
  br i1 %tobool25, label %land.lhs.true26, label %lor.lhs.false30, !dbg !14181

land.lhs.true26:                                  ; preds = %lor.lhs.false
  %dsr = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %cnow, i32 0, i32 1, !dbg !14182
  %22 = load i32, i32* %dsr, align 4, !dbg !14182
  %23 = load %struct.cyclades_icount*, %struct.cyclades_icount** %cprev.addr, align 8, !dbg !14183
  %dsr27 = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %23, i32 0, i32 1, !dbg !14184
  %24 = load i32, i32* %dsr27, align 4, !dbg !14184
  %cmp28 = icmp ne i32 %22, %24, !dbg !14185
  br i1 %cmp28, label %lor.end, label %lor.lhs.false30, !dbg !14186

lor.lhs.false30:                                  ; preds = %land.lhs.true26, %lor.lhs.false
  %25 = load i64, i64* %arg.addr, align 8, !dbg !14187
  %and31 = and i64 %25, 64, !dbg !14188
  %tobool32 = icmp ne i64 %and31, 0, !dbg !14188
  br i1 %tobool32, label %land.lhs.true33, label %lor.rhs, !dbg !14189

land.lhs.true33:                                  ; preds = %lor.lhs.false30
  %dcd = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %cnow, i32 0, i32 3, !dbg !14190
  %26 = load i32, i32* %dcd, align 4, !dbg !14190
  %27 = load %struct.cyclades_icount*, %struct.cyclades_icount** %cprev.addr, align 8, !dbg !14191
  %dcd34 = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %27, i32 0, i32 3, !dbg !14192
  %28 = load i32, i32* %dcd34, align 4, !dbg !14192
  %cmp35 = icmp ne i32 %26, %28, !dbg !14193
  br i1 %cmp35, label %lor.end, label %lor.rhs, !dbg !14194

lor.rhs:                                          ; preds = %land.lhs.true33, %lor.lhs.false30
  %29 = load i64, i64* %arg.addr, align 8, !dbg !14195
  %and37 = and i64 %29, 32, !dbg !14196
  %tobool38 = icmp ne i64 %and37, 0, !dbg !14196
  br i1 %tobool38, label %land.rhs, label %land.end, !dbg !14197

land.rhs:                                         ; preds = %lor.rhs
  %cts = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %cnow, i32 0, i32 0, !dbg !14198
  %30 = load i32, i32* %cts, align 4, !dbg !14198
  %31 = load %struct.cyclades_icount*, %struct.cyclades_icount** %cprev.addr, align 8, !dbg !14199
  %cts39 = getelementptr inbounds %struct.cyclades_icount, %struct.cyclades_icount* %31, i32 0, i32 0, !dbg !14200
  %32 = load i32, i32* %cts39, align 4, !dbg !14200
  %cmp40 = icmp ne i32 %30, %32, !dbg !14201
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %33 = phi i1 [ false, %lor.rhs ], [ %cmp40, %land.rhs ], !dbg !14202
  br label %lor.end, !dbg !14194

lor.end:                                          ; preds = %land.end, %land.lhs.true33, %land.lhs.true26, %land.lhs.true
  %34 = phi i1 [ true, %land.lhs.true33 ], [ true, %land.lhs.true26 ], [ true, %land.lhs.true ], [ %33, %land.end ]
  %lor.ext = zext i1 %34 to i32, !dbg !14194
  store i32 %lor.ext, i32* %ret, align 4, !dbg !14203
  %35 = load %struct.cyclades_icount*, %struct.cyclades_icount** %cprev.addr, align 8, !dbg !14204
  %36 = bitcast %struct.cyclades_icount* %35 to i8*, !dbg !14205
  %37 = bitcast %struct.cyclades_icount* %cnow to i8*, !dbg !14205
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 44, i1 false), !dbg !14205
  %38 = load i32, i32* %ret, align 4, !dbg !14206
  ret i32 %38, !dbg !14207
}

; Function Attrs: noredzone
declare dso_local void @init_wait_entry(%struct.wait_queue_entry*, i32) #2

; Function Attrs: noredzone
declare dso_local i64 @prepare_to_wait_event(%struct.wait_queue_head*, %struct.wait_queue_entry*, i32) #2

; Function Attrs: noredzone
declare dso_local void @schedule() #2

; Function Attrs: noredzone
declare dso_local void @finish_wait(%struct.wait_queue_head*, %struct.wait_queue_entry*) #2

; Function Attrs: noredzone
declare dso_local i64 @_copy_to_user(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @copy_overflow(i32 %size, i64 %count) #4 !dbg !14208 {
entry:
  %size.addr = alloca i32, align 4
  %count.addr = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !14211, metadata !DIExpression()), !dbg !14212
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !14213, metadata !DIExpression()), !dbg !14214
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !14215, metadata !DIExpression()), !dbg !14217
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !14217
  %0 = load i32, i32* %__ret_warn_on, align 4, !dbg !14218
  %tobool = icmp ne i32 %0, 0, !dbg !14218
  %lnot = xor i1 %tobool, true, !dbg !14218
  %lnot1 = xor i1 %lnot, true, !dbg !14218
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !14218
  %conv = sext i32 %lnot.ext to i64, !dbg !14218
  %tobool2 = icmp ne i64 %conv, 0, !dbg !14218
  br i1 %tobool2, label %if.then, label %if.end, !dbg !14217

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !14218

do.body:                                          ; preds = %if.then
  br label %do.body3, !dbg !14220

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !14222

do.end:                                           ; preds = %do.body3
  %1 = load i32, i32* %size.addr, align 4, !dbg !14220
  %2 = load i64, i64* %count.addr, align 8, !dbg !14220
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.60, i64 0, i64 0), i32 %1, i64 %2) #11, !dbg !14220
  br label %do.body4, !dbg !14220

do.body4:                                         ; preds = %do.end
  br label %do.body5, !dbg !14224

do.body5:                                         ; preds = %do.body4
  br label %do.end6, !dbg !14226

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !14224

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.59, i64 0, i64 0), i32 134, i32 2313, i64 12) #10, !dbg !14228, !srcloc !14230
  br label %do.end8, !dbg !14228

do.end8:                                          ; preds = %do.body7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 38) #10, !dbg !14231, !srcloc !14233
  br label %do.body9, !dbg !14224

do.body9:                                         ; preds = %do.end8
  br label %do.end10, !dbg !14234

do.end10:                                         ; preds = %do.body9
  br label %do.end11, !dbg !14224

do.end11:                                         ; preds = %do.end10
  br label %do.body12, !dbg !14220

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !14236

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !14220

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !14220

if.end:                                           ; preds = %do.end14, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !14217
  %tobool15 = icmp ne i32 %3, 0, !dbg !14217
  %lnot16 = xor i1 %tobool15, true, !dbg !14217
  %lnot18 = xor i1 %lnot16, true, !dbg !14217
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !14217
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !14217
  store i64 %conv20, i64* %tmp, align 8, !dbg !14218
  %4 = load i64, i64* %tmp, align 8, !dbg !14217
  ret void, !dbg !14238
}

; Function Attrs: noredzone
declare dso_local void @__bad_copy_from() #2

; Function Attrs: noredzone
declare dso_local void @__bad_copy_to() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @check_object_size(i8* %ptr, i64 %n, i1 zeroext %to_user) #4 !dbg !14239 {
entry:
  %ptr.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %to_user.addr = alloca i8, align 1
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !14242, metadata !DIExpression()), !dbg !14243
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !14244, metadata !DIExpression()), !dbg !14245
  %frombool = zext i1 %to_user to i8
  store i8 %frombool, i8* %to_user.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %to_user.addr, metadata !14246, metadata !DIExpression()), !dbg !14247
  ret void, !dbg !14248
}

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cy_send_xchar(%struct.tty_struct* %tty, i8 signext %ch) #4 !dbg !14249 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %ch.addr = alloca i8, align 1
  %info = alloca %struct.cyclades_port*, align 8
  %card = alloca %struct.cyclades_card*, align 8
  %channel = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !14250, metadata !DIExpression()), !dbg !14251
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !14252, metadata !DIExpression()), !dbg !14253
  call void @llvm.dbg.declare(metadata %struct.cyclades_port** %info, metadata !14254, metadata !DIExpression()), !dbg !14255
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !14256
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !14257
  %1 = load i8*, i8** %driver_data, align 8, !dbg !14257
  %2 = bitcast i8* %1 to %struct.cyclades_port*, !dbg !14256
  store %struct.cyclades_port* %2, %struct.cyclades_port** %info, align 8, !dbg !14255
  call void @llvm.dbg.declare(metadata %struct.cyclades_card** %card, metadata !14258, metadata !DIExpression()), !dbg !14259
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !14260, metadata !DIExpression()), !dbg !14261
  %3 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !14262
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !14264
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 18, !dbg !14265
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !14264
  %call = call i32 @serial_paranoia_check(%struct.cyclades_port* %3, i8* %arraydecay, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.62, i64 0, i64 0)) #11, !dbg !14266
  %tobool = icmp ne i32 %call, 0, !dbg !14266
  br i1 %tobool, label %if.then, label %if.end, !dbg !14267

if.then:                                          ; preds = %entry
  br label %if.end22, !dbg !14268

if.end:                                           ; preds = %entry
  %5 = load i8, i8* %ch.addr, align 1, !dbg !14269
  %6 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !14270
  %x_char = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %6, i32 0, i32 25, !dbg !14271
  store i8 %5, i8* %x_char, align 4, !dbg !14272
  %7 = load i8, i8* %ch.addr, align 1, !dbg !14273
  %tobool1 = icmp ne i8 %7, 0, !dbg !14273
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !14275

if.then2:                                         ; preds = %if.end
  %8 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !14276
  call void @cy_start(%struct.tty_struct* %8) #11, !dbg !14277
  br label %if.end3, !dbg !14277

if.end3:                                          ; preds = %if.then2, %if.end
  %9 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !14278
  %card4 = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %9, i32 0, i32 2, !dbg !14279
  %10 = load %struct.cyclades_card*, %struct.cyclades_card** %card4, align 8, !dbg !14279
  store %struct.cyclades_card* %10, %struct.cyclades_card** %card, align 8, !dbg !14280
  %11 = load %struct.cyclades_port*, %struct.cyclades_port** %info, align 8, !dbg !14281
  %line = getelementptr inbounds %struct.cyclades_port, %struct.cyclades_port* %11, i32 0, i32 4, !dbg !14282
  %12 = load i32, i32* %line, align 8, !dbg !14282
  %13 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !14283
  %first_line = getelementptr inbounds %struct.cyclades_card, %struct.cyclades_card* %13, i32 0, i32 5, !dbg !14284
  %14 = load i32, i32* %first_line, align 8, !dbg !14284
  %sub = sub i32 %12, %14, !dbg !14285
  store i32 %sub, i32* %channel, align 4, !dbg !14286
  %15 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !14287
  %call5 = call zeroext i1 @cy_is_Z(%struct.cyclades_card* %15) #11, !dbg !14289
  br i1 %call5, label %if.then6, label %if.end22, !dbg !14290

if.then6:                                         ; preds = %if.end3
  %16 = load i8, i8* %ch.addr, align 1, !dbg !14291
  %conv = sext i8 %16 to i32, !dbg !14291
  %17 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !14294
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %17, i32 0, i32 15, !dbg !14294
  %c_cc = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 5, !dbg !14294
  %arrayidx = getelementptr [19 x i8], [19 x i8]* %c_cc, i64 0, i64 9, !dbg !14294
  %18 = load i8, i8* %arrayidx, align 1, !dbg !14294
  %conv7 = zext i8 %18 to i32, !dbg !14294
  %cmp = icmp eq i32 %conv, %conv7, !dbg !14295
  br i1 %cmp, label %if.then9, label %if.else, !dbg !14296

if.then9:                                         ; preds = %if.then6
  %19 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !14297
  %20 = load i32, i32* %channel, align 4, !dbg !14298
  %call10 = call i32 @cyz_issue_cmd(%struct.cyclades_card* %19, i32 %20, i8 zeroext 16, i32 0) #11, !dbg !14299
  br label %if.end21, !dbg !14299

if.else:                                          ; preds = %if.then6
  %21 = load i8, i8* %ch.addr, align 1, !dbg !14300
  %conv11 = sext i8 %21 to i32, !dbg !14300
  %22 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !14302
  %termios12 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %22, i32 0, i32 15, !dbg !14302
  %c_cc13 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios12, i32 0, i32 5, !dbg !14302
  %arrayidx14 = getelementptr [19 x i8], [19 x i8]* %c_cc13, i64 0, i64 8, !dbg !14302
  %23 = load i8, i8* %arrayidx14, align 1, !dbg !14302
  %conv15 = zext i8 %23 to i32, !dbg !14302
  %cmp16 = icmp eq i32 %conv11, %conv15, !dbg !14303
  br i1 %cmp16, label %if.then18, label %if.end20, !dbg !14304

if.then18:                                        ; preds = %if.else
  %24 = load %struct.cyclades_card*, %struct.cyclades_card** %card, align 8, !dbg !14305
  %25 = load i32, i32* %channel, align 4, !dbg !14306
  %call19 = call i32 @cyz_issue_cmd(%struct.cyclades_card* %24, i32 %25, i8 zeroext 17, i32 0) #11, !dbg !14307
  br label %if.end20, !dbg !14307

if.end20:                                         ; preds = %if.then18, %if.else
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then9
  br label %if.end22, !dbg !14308

if.end22:                                         ; preds = %if.then, %if.end21, %if.end3
  ret void, !dbg !14309
}

; Function Attrs: noredzone
declare dso_local void @tty_port_hangup(%struct.tty_port*) #2

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @capable(i32) #2

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #2

; Function Attrs: noredzone
declare dso_local i32 @___ratelimit(%struct.ratelimit_state*, i8*) #2

; Function Attrs: noredzone
declare dso_local void @seq_puts(%struct.seq_file*, i8*) #2

; Function Attrs: noredzone
declare dso_local %struct.tty_ldisc* @tty_ldisc_ref(%struct.tty_struct*) #2

; Function Attrs: noredzone
declare dso_local void @tty_ldisc_deref(%struct.tty_ldisc*) #2

; Function Attrs: noredzone
declare dso_local void @seq_printf(%struct.seq_file*, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i64 @__modver_version_show(%struct.module_attribute*, %struct.module_kobject*, i8*) #2

attributes #0 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone willreturn }
attributes #6 = { argmemonly nounwind willreturn }
attributes #7 = { nounwind willreturn }
attributes #8 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { noredzone }
attributes #12 = { cold noredzone }
attributes #13 = { noredzone nounwind }
attributes #14 = { noredzone nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!4820}
!llvm.module.flags = !{!4821, !4822, !4823, !4824}
!llvm.ident = !{!4825}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "cyz_timerlist", scope: !2, file: !3, line: 287, type: !3610, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !115, globals: !4418, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/tty/cyclades.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !37, !43, !52, !60, !66, !72, !79, !87, !93, !98, !102, !108}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !31, line: 59, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36}
!33 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!36 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !38, line: 54, baseType: !7, size: 32, elements: !39)
!38 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!39 = !{!40, !41, !42}
!40 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!41 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!42 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !44, line: 296, baseType: !7, size: 32, elements: !45)
!44 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!45 = !{!46, !47, !48, !49, !50, !51}
!46 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!50 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!51 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!52 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !53, line: 9, baseType: !7, size: 32, elements: !54)
!53 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!54 = !{!55, !56, !57, !58, !59}
!55 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!56 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!59 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !61, line: 26, baseType: !7, size: 32, elements: !62)
!61 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!62 = !{!63, !64, !65}
!63 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !67, line: 44, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71}
!69 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !73, line: 343, baseType: !7, size: 32, elements: !74)
!73 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!74 = !{!75, !76, !77, !78}
!75 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !80, line: 524, baseType: !7, size: 32, elements: !81)
!80 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!81 = !{!82, !83, !84, !85, !86}
!82 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!84 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!85 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!86 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !80, line: 502, baseType: !7, size: 32, elements: !88)
!88 = !{!89, !90, !91, !92}
!89 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !94, line: 10, baseType: !7, size: 32, elements: !95)
!94 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!95 = !{!96, !97}
!96 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!98 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "zblock_type", file: !3, line: 102, baseType: !7, size: 32, elements: !99)
!99 = !{!100, !101}
!100 = !DIEnumerator(name: "ZBLOCK_PRG", value: 0, isUnsigned: true)
!101 = !DIEnumerator(name: "ZBLOCK_FPGA", value: 1, isUnsigned: true)
!102 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !103, line: 11, baseType: !7, size: 32, elements: !104)
!103 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!104 = !{!105, !106, !107}
!105 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!106 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!107 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!108 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !109, line: 305, baseType: !7, size: 32, elements: !110)
!109 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!110 = !{!111, !112, !113, !114}
!111 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!112 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!113 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!114 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!115 = !{!116, !118, !119, !120, !122, !123, !125, !127, !7, !129, !132, !134, !139, !327, !126, !4412, !4414, !4415, !638, !131}
!116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 64)
!117 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!119 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !121, line: 27, baseType: !7)
!121 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 64)
!123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 64)
!124 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 64)
!126 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 64)
!128 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !124)
!129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 64)
!130 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !131)
!131 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!132 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !133, line: 148, baseType: !7)
!133 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !135, size: 64)
!135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cyclades_port", file: !136, line: 119, size: 5120, elements: !137)
!136 = !DIFile(filename: "./include/linux/cyclades.h", directory: "/home/lizy2001/genbc/linux")
!137 = !{!138, !140, !4228, !4295, !4347, !4348, !4349, !4350, !4351, !4352, !4353, !4354, !4355, !4356, !4357, !4358, !4359, !4360, !4361, !4362, !4363, !4364, !4365, !4366, !4367, !4368, !4369, !4370, !4371, !4372, !4373, !4374, !4375, !4376, !4377, !4384, !4396, !4410, !4411}
!138 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !135, file: !136, line: 120, baseType: !139, size: 32)
!139 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !135, file: !136, line: 121, baseType: !141, size: 2432, offset: 64)
!141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_port", file: !142, line: 230, size: 2432, elements: !143)
!142 = !DIFile(filename: "./include/linux/tty.h", directory: "/home/lizy2001/genbc/linux")
!143 = !{!144, !232, !4178, !4179, !4201, !4211, !4212, !4213, !4214, !4215, !4216, !4217, !4218, !4219, !4220, !4221, !4222, !4223, !4224, !4225, !4226, !4227}
!144 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !141, file: !142, line: 231, baseType: !145, size: 1024)
!145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_bufhead", file: !142, line: 85, size: 1024, elements: !146)
!146 = !{!147, !170, !197, !219, !224, !225, !229, !230, !231}
!147 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !145, file: !142, line: 86, baseType: !148, size: 64)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 64)
!149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_buffer", file: !142, line: 58, size: 256, elements: !150)
!150 = !{!151, !161, !162, !163, !164, !165, !166}
!151 = !DIDerivedType(tag: DW_TAG_member, scope: !149, file: !142, line: 59, baseType: !152, size: 64)
!152 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !149, file: !142, line: 59, size: 64, elements: !153)
!153 = !{!154, !155}
!154 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !152, file: !142, line: 60, baseType: !148, size: 64)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !152, file: !142, line: 61, baseType: !156, size: 64)
!156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !157, line: 58, size: 64, elements: !158)
!157 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!158 = !{!159}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !156, file: !157, line: 59, baseType: !160, size: 64)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 64)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !149, file: !142, line: 63, baseType: !139, size: 32, offset: 64)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !149, file: !142, line: 64, baseType: !139, size: 32, offset: 96)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "commit", scope: !149, file: !142, line: 65, baseType: !139, size: 32, offset: 128)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !149, file: !142, line: 66, baseType: !139, size: 32, offset: 160)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !149, file: !142, line: 67, baseType: !139, size: 32, offset: 192)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !149, file: !142, line: 69, baseType: !167, offset: 256)
!167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !126, elements: !168)
!168 = !{!169}
!169 = !DISubrange(count: -1)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !145, file: !142, line: 87, baseType: !171, size: 256, offset: 64)
!171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !172, line: 102, size: 256, elements: !173)
!172 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!173 = !{!174, !185, !191}
!174 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !171, file: !172, line: 103, baseType: !175, size: 64)
!175 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !176, line: 13, baseType: !177)
!176 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!177 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !133, line: 175, baseType: !178)
!178 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !133, line: 173, size: 64, elements: !179)
!179 = !{!180}
!180 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !178, file: !133, line: 174, baseType: !181, size: 64)
!181 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !182, line: 22, baseType: !183)
!182 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !121, line: 30, baseType: !184)
!184 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !171, file: !172, line: 104, baseType: !186, size: 128, offset: 64)
!186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !133, line: 178, size: 128, elements: !187)
!187 = !{!188, !190}
!188 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !186, file: !133, line: 179, baseType: !189, size: 64)
!189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 64)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !186, file: !133, line: 179, baseType: !189, size: 64, offset: 64)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !171, file: !172, line: 105, baseType: !192, size: 64, offset: 192)
!192 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !172, line: 21, baseType: !193)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 64)
!194 = !DISubroutineType(types: !195)
!195 = !{null, !196}
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 64)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !145, file: !142, line: 88, baseType: !198, size: 192, offset: 320)
!198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !199, line: 53, size: 192, elements: !200)
!199 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!200 = !{!201, !202, !218}
!201 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !198, file: !199, line: 54, baseType: !175, size: 64)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !198, file: !199, line: 55, baseType: !203, offset: 64)
!203 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !204, line: 83, baseType: !205)
!204 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !204, line: 71, elements: !206)
!206 = !{!207}
!207 = !DIDerivedType(tag: DW_TAG_member, scope: !205, file: !204, line: 72, baseType: !208)
!208 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !205, file: !204, line: 72, elements: !209)
!209 = !{!210}
!210 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !208, file: !204, line: 73, baseType: !211)
!211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !204, line: 20, elements: !212)
!212 = !{!213}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !211, file: !204, line: 21, baseType: !214)
!214 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !215, line: 25, baseType: !216)
!215 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!216 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !215, line: 25, elements: !217)
!217 = !{}
!218 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !198, file: !199, line: 59, baseType: !186, size: 128, offset: 64)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !145, file: !142, line: 89, baseType: !220, size: 32, offset: 512)
!220 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !133, line: 168, baseType: !221)
!221 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !133, line: 166, size: 32, elements: !222)
!222 = !{!223}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !221, file: !133, line: 167, baseType: !139, size: 32)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "sentinel", scope: !145, file: !142, line: 90, baseType: !149, size: 256, offset: 576)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !145, file: !142, line: 91, baseType: !226, size: 64, offset: 832)
!226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_head", file: !157, line: 54, size: 64, elements: !227)
!227 = !{!228}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !226, file: !157, line: 55, baseType: !160, size: 64)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "mem_used", scope: !145, file: !142, line: 92, baseType: !220, size: 32, offset: 896)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "mem_limit", scope: !145, file: !142, line: 93, baseType: !139, size: 32, offset: 928)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !145, file: !142, line: 94, baseType: !148, size: 64, offset: 960)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !141, file: !142, line: 232, baseType: !233, size: 64, offset: 1024)
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 64)
!234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !142, line: 285, size: 5056, elements: !235)
!235 = !{!236, !237, !247, !3865, !4077, !4078, !4079, !4088, !4138, !4139, !4140, !4141, !4142, !4143, !4144, !4145, !4146, !4147, !4148, !4150, !4151, !4152, !4153, !4154, !4155, !4156, !4157, !4158, !4159, !4160, !4161, !4162, !4163, !4164, !4165, !4166, !4167, !4168, !4169, !4170, !4171, !4172, !4173, !4174, !4175, !4176, !4177}
!236 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !234, file: !142, line: 286, baseType: !139, size: 32)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !234, file: !142, line: 287, baseType: !238, size: 32, offset: 32)
!238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !239, line: 19, size: 32, elements: !240)
!239 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!240 = !{!241}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !238, file: !239, line: 20, baseType: !242, size: 32)
!242 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !243, line: 113, baseType: !244)
!243 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !243, line: 111, size: 32, elements: !245)
!245 = !{!246}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !244, file: !243, line: 112, baseType: !220, size: 32)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !234, file: !142, line: 288, baseType: !248, size: 64, offset: 64)
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 64)
!249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !73, line: 461, size: 5568, elements: !250)
!250 = !{!251, !3419, !3420, !3423, !3424, !3475, !3566, !3567, !3568, !3569, !3570, !3579, !3684, !3697, !3700, !3701, !3705, !3707, !3708, !3709, !3713, !3719, !3720, !3723, !3727, !3817, !3818, !3819, !3820, !3821, !3853, !3854, !3855, !3858, !3861, !3862, !3863, !3864}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !249, file: !73, line: 462, baseType: !252, size: 512)
!252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !253, line: 64, size: 512, elements: !254)
!253 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!254 = !{!255, !258, !259, !261, !305, !3292, !3413, !3414, !3415, !3416, !3417, !3418}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !252, file: !253, line: 65, baseType: !256, size: 64)
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 64)
!257 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !119)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !252, file: !253, line: 66, baseType: !186, size: 128, offset: 64)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !252, file: !253, line: 67, baseType: !260, size: 64, offset: 192)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !252, file: !253, line: 68, baseType: !262, size: 64, offset: 256)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !263, size: 64)
!263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !253, line: 192, size: 704, elements: !264)
!264 = !{!265, !266, !267, !268}
!265 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !263, file: !253, line: 193, baseType: !186, size: 128)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !263, file: !253, line: 194, baseType: !203, offset: 128)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !263, file: !253, line: 195, baseType: !252, size: 512, offset: 128)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !263, file: !253, line: 196, baseType: !269, size: 64, offset: 640)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 64)
!270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !271)
!271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !253, line: 156, size: 192, elements: !272)
!272 = !{!273, !278, !283}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !271, file: !253, line: 157, baseType: !274, size: 64)
!274 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !275)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 64)
!276 = !DISubroutineType(types: !277)
!277 = !{!139, !262, !260}
!278 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !271, file: !253, line: 158, baseType: !279, size: 64, offset: 64)
!279 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !280)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64)
!281 = !DISubroutineType(types: !282)
!282 = !{!256, !262, !260}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !271, file: !253, line: 159, baseType: !284, size: 64, offset: 128)
!284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !285)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !286, size: 64)
!286 = !DISubroutineType(types: !287)
!287 = !{!139, !262, !260, !288}
!288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 64)
!289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !253, line: 148, size: 20736, elements: !290)
!290 = !{!291, !295, !299, !300, !304}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !289, file: !253, line: 149, baseType: !292, size: 192)
!292 = !DICompositeType(tag: DW_TAG_array_type, baseType: !122, size: 192, elements: !293)
!293 = !{!294}
!294 = !DISubrange(count: 3)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !289, file: !253, line: 150, baseType: !296, size: 4096, offset: 192)
!296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !122, size: 4096, elements: !297)
!297 = !{!298}
!298 = !DISubrange(count: 64)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !289, file: !253, line: 151, baseType: !139, size: 32, offset: 4288)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !289, file: !253, line: 152, baseType: !301, size: 16384, offset: 4320)
!301 = !DICompositeType(tag: DW_TAG_array_type, baseType: !119, size: 16384, elements: !302)
!302 = !{!303}
!303 = !DISubrange(count: 2048)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !289, file: !253, line: 153, baseType: !139, size: 32, offset: 20704)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !252, file: !253, line: 69, baseType: !306, size: 64, offset: 320)
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !307, size: 64)
!307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !253, line: 138, size: 448, elements: !308)
!308 = !{!309, !313, !341, !343, !3254, !3282, !3286}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !307, file: !253, line: 139, baseType: !310, size: 64)
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 64)
!311 = !DISubroutineType(types: !312)
!312 = !{null, !260}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !307, file: !253, line: 140, baseType: !314, size: 64, offset: 64)
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 64)
!315 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !316)
!316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !317, line: 230, size: 128, elements: !318)
!317 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!318 = !{!319, !334}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !316, file: !317, line: 231, baseType: !320, size: 64)
!320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 64)
!321 = !DISubroutineType(types: !322)
!322 = !{!323, !260, !328, !122}
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !133, line: 60, baseType: !324)
!324 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !325, line: 73, baseType: !326)
!325 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!326 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !325, line: 15, baseType: !327)
!327 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 64)
!329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !317, line: 30, size: 128, elements: !330)
!330 = !{!331, !332}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !329, file: !317, line: 31, baseType: !256, size: 64)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !329, file: !317, line: 32, baseType: !333, size: 16, offset: 64)
!333 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !133, line: 19, baseType: !131)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !316, file: !317, line: 232, baseType: !335, size: 64, offset: 64)
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64)
!336 = !DISubroutineType(types: !337)
!337 = !{!323, !260, !328, !256, !338}
!338 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !133, line: 55, baseType: !339)
!339 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !325, line: 72, baseType: !340)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !325, line: 16, baseType: !126)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !307, file: !253, line: 141, baseType: !342, size: 64, offset: 128)
!342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 64)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !307, file: !253, line: 142, baseType: !344, size: 64, offset: 192)
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64)
!345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64)
!346 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !347)
!347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !317, line: 84, size: 320, elements: !348)
!348 = !{!349, !350, !354, !3251, !3252}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !347, file: !317, line: 85, baseType: !256, size: 64)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !347, file: !317, line: 86, baseType: !351, size: 64, offset: 64)
!351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64)
!352 = !DISubroutineType(types: !353)
!353 = !{!333, !260, !328, !139}
!354 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !347, file: !317, line: 88, baseType: !355, size: 64, offset: 128)
!355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 64)
!356 = !DISubroutineType(types: !357)
!357 = !{!333, !260, !358, !139}
!358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !359, size: 64)
!359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !317, line: 168, size: 448, elements: !360)
!360 = !{!361, !362, !363, !364, !3246, !3247}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !359, file: !317, line: 169, baseType: !329, size: 128)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !359, file: !317, line: 170, baseType: !338, size: 64, offset: 128)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !359, file: !317, line: 171, baseType: !118, size: 64, offset: 192)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !359, file: !317, line: 172, baseType: !365, size: 64, offset: 256)
!365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 64)
!366 = !DISubroutineType(types: !367)
!367 = !{!323, !368, !260, !358, !122, !538, !338}
!368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !369, size: 64)
!369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !44, line: 916, size: 1856, align: 32, elements: !370)
!370 = !{!371, !384, !3211, !3212, !3213, !3214, !3215, !3216, !3217, !3218, !3219, !3220, !3229, !3230, !3239, !3240, !3241, !3242, !3243, !3244, !3245}
!371 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !369, file: !44, line: 920, baseType: !372, size: 128)
!372 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !369, file: !44, line: 917, size: 128, elements: !373)
!373 = !{!374, !375}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !372, file: !44, line: 918, baseType: !156, size: 64)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !372, file: !44, line: 919, baseType: !376, size: 128, align: 64)
!376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !133, line: 216, size: 128, align: 64, elements: !377)
!377 = !{!378, !380}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !376, file: !133, line: 217, baseType: !379, size: 64)
!379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 64)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !376, file: !133, line: 218, baseType: !381, size: 64, offset: 64)
!381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !382, size: 64)
!382 = !DISubroutineType(types: !383)
!383 = !{null, !379}
!384 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !369, file: !44, line: 921, baseType: !385, size: 128, offset: 128)
!385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !386, line: 8, size: 128, elements: !387)
!386 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!387 = !{!388, !392}
!388 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !385, file: !386, line: 9, baseType: !389, size: 64)
!389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64)
!390 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !391, line: 18, flags: DIFlagFwdDecl)
!391 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!392 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !385, file: !386, line: 10, baseType: !393, size: 64, offset: 64)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64)
!394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !391, line: 89, size: 1536, elements: !395)
!395 = !{!396, !397, !407, !415, !416, !435, !3179, !3181, !3193, !3194, !3195, !3196, !3197, !3203, !3204, !3205}
!396 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !394, file: !391, line: 91, baseType: !7, size: 32)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !394, file: !391, line: 92, baseType: !398, size: 32, offset: 32)
!398 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !399, line: 277, baseType: !400)
!399 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !399, line: 277, size: 32, elements: !401)
!401 = !{!402}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !400, file: !399, line: 277, baseType: !403, size: 32)
!403 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !399, line: 70, baseType: !404)
!404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !399, line: 65, size: 32, elements: !405)
!405 = !{!406}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !404, file: !399, line: 66, baseType: !7, size: 32)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !394, file: !391, line: 93, baseType: !408, size: 128, offset: 64)
!408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !409, line: 38, size: 128, elements: !410)
!409 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!410 = !{!411, !413}
!411 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !408, file: !409, line: 39, baseType: !412, size: 64)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 64)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !408, file: !409, line: 39, baseType: !414, size: 64, offset: 64)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !412, size: 64)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !394, file: !391, line: 94, baseType: !393, size: 64, offset: 192)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !394, file: !391, line: 95, baseType: !417, size: 128, offset: 256)
!417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !391, line: 47, size: 128, elements: !418)
!418 = !{!419, !432}
!419 = !DIDerivedType(tag: DW_TAG_member, scope: !417, file: !391, line: 48, baseType: !420, size: 64)
!420 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !417, file: !391, line: 48, size: 64, elements: !421)
!421 = !{!422, !428}
!422 = !DIDerivedType(tag: DW_TAG_member, scope: !420, file: !391, line: 49, baseType: !423, size: 64)
!423 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !420, file: !391, line: 49, size: 64, elements: !424)
!424 = !{!425, !427}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !423, file: !391, line: 50, baseType: !426, size: 32)
!426 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !182, line: 21, baseType: !120)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !423, file: !391, line: 50, baseType: !426, size: 32, offset: 32)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !420, file: !391, line: 52, baseType: !429, size: 64)
!429 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !182, line: 23, baseType: !430)
!430 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !121, line: 31, baseType: !431)
!431 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !417, file: !391, line: 54, baseType: !433, size: 64, offset: 64)
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 64)
!434 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !124)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !394, file: !391, line: 96, baseType: !436, size: 64, offset: 384)
!436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64)
!437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !44, line: 610, size: 4224, elements: !438)
!438 = !{!439, !440, !441, !449, !456, !457, !603, !2883, !2884, !2885, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !3147, !3155, !3156, !3157, !3175, !3176, !3177, !3178}
!439 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !437, file: !44, line: 611, baseType: !333, size: 16)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !437, file: !44, line: 612, baseType: !131, size: 16, offset: 16)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !437, file: !44, line: 613, baseType: !442, size: 32, offset: 32)
!442 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !443, line: 23, baseType: !444)
!443 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!444 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !443, line: 21, size: 32, elements: !445)
!445 = !{!446}
!446 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !444, file: !443, line: 22, baseType: !447, size: 32)
!447 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !133, line: 32, baseType: !448)
!448 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !325, line: 49, baseType: !7)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !437, file: !44, line: 614, baseType: !450, size: 32, offset: 64)
!450 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !443, line: 28, baseType: !451)
!451 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !443, line: 26, size: 32, elements: !452)
!452 = !{!453}
!453 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !451, file: !443, line: 27, baseType: !454, size: 32)
!454 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !133, line: 33, baseType: !455)
!455 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !325, line: 50, baseType: !7)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !437, file: !44, line: 615, baseType: !7, size: 32, offset: 96)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !437, file: !44, line: 622, baseType: !458, size: 64, offset: 128)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 64)
!459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !460)
!460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !44, line: 1864, size: 1536, align: 512, elements: !461)
!461 = !{!462, !466, !479, !483, !489, !493, !499, !503, !507, !511, !515, !516, !522, !526, !550, !579, !583, !589, !594, !598, !599}
!462 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !460, file: !44, line: 1865, baseType: !463, size: 64)
!463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !464, size: 64)
!464 = !DISubroutineType(types: !465)
!465 = !{!393, !436, !393, !7}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !460, file: !44, line: 1866, baseType: !467, size: 64, offset: 64)
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 64)
!468 = !DISubroutineType(types: !469)
!469 = !{!256, !393, !436, !470}
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !472, line: 10, size: 128, elements: !473)
!472 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!473 = !{!474, !478}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !471, file: !472, line: 11, baseType: !475, size: 64)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 64)
!476 = !DISubroutineType(types: !477)
!477 = !{null, !118}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !471, file: !472, line: 12, baseType: !118, size: 64, offset: 64)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !460, file: !44, line: 1867, baseType: !480, size: 64, offset: 128)
!480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !481, size: 64)
!481 = !DISubroutineType(types: !482)
!482 = !{!139, !436, !139}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !460, file: !44, line: 1868, baseType: !484, size: 64, offset: 192)
!484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 64)
!485 = !DISubroutineType(types: !486)
!486 = !{!487, !436, !139}
!487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 64)
!488 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !44, line: 581, flags: DIFlagFwdDecl)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !460, file: !44, line: 1870, baseType: !490, size: 64, offset: 256)
!490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !491, size: 64)
!491 = !DISubroutineType(types: !492)
!492 = !{!139, !393, !122, !139}
!493 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !460, file: !44, line: 1872, baseType: !494, size: 64, offset: 320)
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 64)
!495 = !DISubroutineType(types: !496)
!496 = !{!139, !436, !393, !333, !497}
!497 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !133, line: 30, baseType: !498)
!498 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !460, file: !44, line: 1873, baseType: !500, size: 64, offset: 384)
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 64)
!501 = !DISubroutineType(types: !502)
!502 = !{!139, !393, !436, !393}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !460, file: !44, line: 1874, baseType: !504, size: 64, offset: 448)
!504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 64)
!505 = !DISubroutineType(types: !506)
!506 = !{!139, !436, !393}
!507 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !460, file: !44, line: 1875, baseType: !508, size: 64, offset: 512)
!508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !509, size: 64)
!509 = !DISubroutineType(types: !510)
!510 = !{!139, !436, !393, !256}
!511 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !460, file: !44, line: 1876, baseType: !512, size: 64, offset: 576)
!512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 64)
!513 = !DISubroutineType(types: !514)
!514 = !{!139, !436, !393, !333}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !460, file: !44, line: 1877, baseType: !504, size: 64, offset: 640)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !460, file: !44, line: 1878, baseType: !517, size: 64, offset: 704)
!517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !518, size: 64)
!518 = !DISubroutineType(types: !519)
!519 = !{!139, !436, !393, !333, !520}
!520 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !133, line: 16, baseType: !521)
!521 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !133, line: 13, baseType: !426)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !460, file: !44, line: 1879, baseType: !523, size: 64, offset: 768)
!523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !524, size: 64)
!524 = !DISubroutineType(types: !525)
!525 = !{!139, !436, !393, !436, !393, !7}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !460, file: !44, line: 1881, baseType: !527, size: 64, offset: 832)
!527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !528, size: 64)
!528 = !DISubroutineType(types: !529)
!529 = !{!139, !393, !530}
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 64)
!531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !44, line: 219, size: 640, elements: !532)
!532 = !{!533, !534, !535, !536, !537, !540, !547, !548, !549}
!533 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !531, file: !44, line: 220, baseType: !7, size: 32)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !531, file: !44, line: 221, baseType: !333, size: 16, offset: 32)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !531, file: !44, line: 222, baseType: !442, size: 32, offset: 64)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !531, file: !44, line: 223, baseType: !450, size: 32, offset: 96)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !531, file: !44, line: 224, baseType: !538, size: 64, offset: 128)
!538 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !133, line: 46, baseType: !539)
!539 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !325, line: 88, baseType: !184)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !531, file: !44, line: 225, baseType: !541, size: 128, offset: 192)
!541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !542, line: 13, size: 128, elements: !543)
!542 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!543 = !{!544, !546}
!544 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !541, file: !542, line: 14, baseType: !545, size: 64)
!545 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !542, line: 8, baseType: !183)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !541, file: !542, line: 15, baseType: !327, size: 64, offset: 64)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !531, file: !44, line: 226, baseType: !541, size: 128, offset: 320)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !531, file: !44, line: 227, baseType: !541, size: 128, offset: 448)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !531, file: !44, line: 234, baseType: !368, size: 64, offset: 576)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !460, file: !44, line: 1882, baseType: !551, size: 64, offset: 896)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64)
!552 = !DISubroutineType(types: !553)
!553 = !{!139, !554, !556, !426, !7}
!554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !555, size: 64)
!555 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !385)
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !557, size: 64)
!557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !558, line: 22, size: 1152, elements: !559)
!558 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!559 = !{!560, !561, !562, !563, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !557, file: !558, line: 23, baseType: !426, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !557, file: !558, line: 24, baseType: !333, size: 16, offset: 32)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !557, file: !558, line: 25, baseType: !7, size: 32, offset: 64)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !557, file: !558, line: 26, baseType: !564, size: 32, offset: 96)
!564 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !133, line: 104, baseType: !426)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !557, file: !558, line: 27, baseType: !429, size: 64, offset: 128)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !557, file: !558, line: 28, baseType: !429, size: 64, offset: 192)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !557, file: !558, line: 37, baseType: !429, size: 64, offset: 256)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !557, file: !558, line: 38, baseType: !520, size: 32, offset: 320)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !557, file: !558, line: 39, baseType: !520, size: 32, offset: 352)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !557, file: !558, line: 40, baseType: !442, size: 32, offset: 384)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !557, file: !558, line: 41, baseType: !450, size: 32, offset: 416)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !557, file: !558, line: 42, baseType: !538, size: 64, offset: 448)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !557, file: !558, line: 43, baseType: !541, size: 128, offset: 512)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !557, file: !558, line: 44, baseType: !541, size: 128, offset: 640)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !557, file: !558, line: 45, baseType: !541, size: 128, offset: 768)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !557, file: !558, line: 46, baseType: !541, size: 128, offset: 896)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !557, file: !558, line: 47, baseType: !429, size: 64, offset: 1024)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !557, file: !558, line: 48, baseType: !429, size: 64, offset: 1088)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !460, file: !44, line: 1883, baseType: !580, size: 64, offset: 960)
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!581 = !DISubroutineType(types: !582)
!582 = !{!323, !393, !122, !338}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !460, file: !44, line: 1884, baseType: !584, size: 64, offset: 1024)
!584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !585, size: 64)
!585 = !DISubroutineType(types: !586)
!586 = !{!139, !436, !587, !429, !429}
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 64)
!588 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !44, line: 50, flags: DIFlagFwdDecl)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !460, file: !44, line: 1886, baseType: !590, size: 64, offset: 1088)
!590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64)
!591 = !DISubroutineType(types: !592)
!592 = !{!139, !436, !593, !139}
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 64)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !460, file: !44, line: 1887, baseType: !595, size: 64, offset: 1152)
!595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !596, size: 64)
!596 = !DISubroutineType(types: !597)
!597 = !{!139, !436, !393, !368, !7, !333}
!598 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !460, file: !44, line: 1890, baseType: !512, size: 64, offset: 1216)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !460, file: !44, line: 1891, baseType: !600, size: 64, offset: 1280)
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !601, size: 64)
!601 = !DISubroutineType(types: !602)
!602 = !{!139, !436, !487, !139}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !437, file: !44, line: 623, baseType: !604, size: 64, offset: 192)
!604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !605, size: 64)
!605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !44, line: 1416, size: 9472, elements: !606)
!606 = !{!607, !608, !609, !610, !611, !612, !662, !2490, !2572, !2655, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2671, !2675, !2676, !2679, !2680, !2683, !2684, !2685, !2726, !2753, !2754, !2755, !2756, !2757, !2758, !2761, !2763, !2770, !2771, !2773, !2774, !2775, !2834, !2835, !2850, !2851, !2852, !2853, !2854, !2857, !2858, !2859, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882}
!607 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !605, file: !44, line: 1417, baseType: !186, size: 128)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !605, file: !44, line: 1418, baseType: !520, size: 32, offset: 128)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !605, file: !44, line: 1419, baseType: !124, size: 8, offset: 160)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !605, file: !44, line: 1420, baseType: !126, size: 64, offset: 192)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !605, file: !44, line: 1421, baseType: !538, size: 64, offset: 256)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !605, file: !44, line: 1422, baseType: !613, size: 64, offset: 320)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !44, line: 2228, size: 576, elements: !615)
!615 = !{!616, !617, !618, !625, !629, !633, !637, !641, !642, !652, !655, !656, !657, !659, !660, !661}
!616 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !614, file: !44, line: 2229, baseType: !256, size: 64)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !614, file: !44, line: 2230, baseType: !139, size: 32, offset: 64)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !614, file: !44, line: 2238, baseType: !619, size: 64, offset: 128)
!619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !620, size: 64)
!620 = !DISubroutineType(types: !621)
!621 = !{!139, !622}
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 64)
!623 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !624, line: 28, flags: DIFlagFwdDecl)
!624 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!625 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !614, file: !44, line: 2239, baseType: !626, size: 64, offset: 192)
!626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !627, size: 64)
!627 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !628)
!628 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !44, line: 70, flags: DIFlagFwdDecl)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !614, file: !44, line: 2240, baseType: !630, size: 64, offset: 256)
!630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !631, size: 64)
!631 = !DISubroutineType(types: !632)
!632 = !{!393, !613, !139, !256, !118}
!633 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !614, file: !44, line: 2242, baseType: !634, size: 64, offset: 320)
!634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 64)
!635 = !DISubroutineType(types: !636)
!636 = !{null, !604}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !614, file: !44, line: 2243, baseType: !638, size: 64, offset: 384)
!638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !639, size: 64)
!639 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !640, line: 76, flags: DIFlagFwdDecl)
!640 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!641 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !614, file: !44, line: 2244, baseType: !613, size: 64, offset: 448)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !614, file: !44, line: 2245, baseType: !643, size: 64, offset: 512)
!643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !133, line: 182, size: 64, elements: !644)
!644 = !{!645}
!645 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !643, file: !133, line: 183, baseType: !646, size: 64)
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 64)
!647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !133, line: 186, size: 128, elements: !648)
!648 = !{!649, !650}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !647, file: !133, line: 187, baseType: !646, size: 64)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !647, file: !133, line: 187, baseType: !651, size: 64, offset: 64)
!651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 64)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !614, file: !44, line: 2247, baseType: !653, offset: 576)
!653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !654, line: 187, elements: !217)
!654 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!655 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !614, file: !44, line: 2248, baseType: !653, offset: 576)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !614, file: !44, line: 2249, baseType: !653, offset: 576)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !614, file: !44, line: 2250, baseType: !658, offset: 576)
!658 = !DICompositeType(tag: DW_TAG_array_type, baseType: !653, elements: !293)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !614, file: !44, line: 2252, baseType: !653, offset: 576)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !614, file: !44, line: 2253, baseType: !653, offset: 576)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !614, file: !44, line: 2254, baseType: !653, offset: 576)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !605, file: !44, line: 1423, baseType: !663, size: 64, offset: 384)
!663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !664, size: 64)
!664 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !665)
!665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !44, line: 1935, size: 1472, elements: !666)
!666 = !{!667, !671, !675, !676, !680, !686, !690, !691, !692, !696, !700, !701, !702, !703, !709, !714, !715, !758, !759, !760, !761, !2474, !2489}
!667 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !665, file: !44, line: 1936, baseType: !668, size: 64)
!668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !669, size: 64)
!669 = !DISubroutineType(types: !670)
!670 = !{!436, !604}
!671 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !665, file: !44, line: 1937, baseType: !672, size: 64, offset: 64)
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 64)
!673 = !DISubroutineType(types: !674)
!674 = !{null, !436}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !665, file: !44, line: 1938, baseType: !672, size: 64, offset: 128)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !665, file: !44, line: 1940, baseType: !677, size: 64, offset: 192)
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 64)
!678 = !DISubroutineType(types: !679)
!679 = !{null, !436, !139}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !665, file: !44, line: 1941, baseType: !681, size: 64, offset: 256)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 64)
!682 = !DISubroutineType(types: !683)
!683 = !{!139, !436, !684}
!684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !685, size: 64)
!685 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !44, line: 289, flags: DIFlagFwdDecl)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !665, file: !44, line: 1942, baseType: !687, size: 64, offset: 320)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!688 = !DISubroutineType(types: !689)
!689 = !{!139, !436}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !665, file: !44, line: 1943, baseType: !672, size: 64, offset: 384)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !665, file: !44, line: 1944, baseType: !634, size: 64, offset: 448)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !665, file: !44, line: 1945, baseType: !693, size: 64, offset: 512)
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 64)
!694 = !DISubroutineType(types: !695)
!695 = !{!139, !604, !139}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !665, file: !44, line: 1946, baseType: !697, size: 64, offset: 576)
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!698 = !DISubroutineType(types: !699)
!699 = !{!139, !604}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !665, file: !44, line: 1947, baseType: !697, size: 64, offset: 640)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !665, file: !44, line: 1948, baseType: !697, size: 64, offset: 704)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !665, file: !44, line: 1949, baseType: !697, size: 64, offset: 768)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !665, file: !44, line: 1950, baseType: !704, size: 64, offset: 832)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 64)
!705 = !DISubroutineType(types: !706)
!706 = !{!139, !393, !707}
!707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !708, size: 64)
!708 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !44, line: 57, flags: DIFlagFwdDecl)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !665, file: !44, line: 1951, baseType: !710, size: 64, offset: 896)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64)
!711 = !DISubroutineType(types: !712)
!712 = !{!139, !604, !713, !122}
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 64)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !665, file: !44, line: 1952, baseType: !634, size: 64, offset: 960)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !665, file: !44, line: 1954, baseType: !716, size: 64, offset: 1024)
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 64)
!717 = !DISubroutineType(types: !718)
!718 = !{!139, !719, !393}
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 64)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !721, line: 16, size: 896, elements: !722)
!721 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!722 = !{!723, !724, !725, !726, !727, !728, !729, !730, !731, !753, !754, !757}
!723 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !720, file: !721, line: 17, baseType: !122, size: 64)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !720, file: !721, line: 18, baseType: !338, size: 64, offset: 64)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !720, file: !721, line: 19, baseType: !338, size: 64, offset: 128)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !720, file: !721, line: 20, baseType: !338, size: 64, offset: 192)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !720, file: !721, line: 21, baseType: !338, size: 64, offset: 256)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !720, file: !721, line: 22, baseType: !538, size: 64, offset: 320)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !720, file: !721, line: 23, baseType: !538, size: 64, offset: 384)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !720, file: !721, line: 24, baseType: !198, size: 192, offset: 448)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !720, file: !721, line: 25, baseType: !732, size: 64, offset: 640)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 64)
!733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !734)
!734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !721, line: 31, size: 256, elements: !735)
!735 = !{!736, !741, !745, !749}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !734, file: !721, line: 32, baseType: !737, size: 64)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 64)
!738 = !DISubroutineType(types: !739)
!739 = !{!118, !719, !740}
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !538, size: 64)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !734, file: !721, line: 33, baseType: !742, size: 64, offset: 64)
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 64)
!743 = !DISubroutineType(types: !744)
!744 = !{null, !719, !118}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !734, file: !721, line: 34, baseType: !746, size: 64, offset: 128)
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 64)
!747 = !DISubroutineType(types: !748)
!748 = !{!118, !719, !118, !740}
!749 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !734, file: !721, line: 35, baseType: !750, size: 64, offset: 192)
!750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 64)
!751 = !DISubroutineType(types: !752)
!752 = !{!139, !719, !118}
!753 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !720, file: !721, line: 26, baseType: !139, size: 32, offset: 704)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !720, file: !721, line: 27, baseType: !755, size: 64, offset: 768)
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!756 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !369)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !720, file: !721, line: 28, baseType: !118, size: 64, offset: 832)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !665, file: !44, line: 1955, baseType: !716, size: 64, offset: 1088)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !665, file: !44, line: 1956, baseType: !716, size: 64, offset: 1152)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !665, file: !44, line: 1957, baseType: !716, size: 64, offset: 1216)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !665, file: !44, line: 1963, baseType: !762, size: 64, offset: 1280)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !763, size: 64)
!763 = !DISubroutineType(types: !764)
!764 = !{!139, !604, !765, !132}
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 64)
!766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !767, line: 68, size: 512, align: 128, elements: !768)
!767 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!768 = !{!769, !770, !2466, !2473}
!769 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !766, file: !767, line: 69, baseType: !126, size: 64)
!770 = !DIDerivedType(tag: DW_TAG_member, scope: !766, file: !767, line: 77, baseType: !771, size: 320, offset: 64)
!771 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !766, file: !767, line: 77, size: 320, elements: !772)
!772 = !{!773, !949, !954, !982, !990, !996, !2397, !2465}
!773 = !DIDerivedType(tag: DW_TAG_member, scope: !771, file: !767, line: 78, baseType: !774, size: 320)
!774 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !771, file: !767, line: 78, size: 320, elements: !775)
!775 = !{!776, !777, !947, !948}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !774, file: !767, line: 84, baseType: !186, size: 128)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !774, file: !767, line: 86, baseType: !778, size: 64, offset: 128)
!778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !779, size: 64)
!779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !44, line: 451, size: 1216, align: 64, elements: !780)
!780 = !{!781, !782, !789, !790, !791, !806, !815, !816, !817, !818, !940, !941, !944, !945, !946}
!781 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !779, file: !44, line: 452, baseType: !436, size: 64)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !779, file: !44, line: 453, baseType: !783, size: 128, offset: 64)
!783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !784, line: 292, size: 128, elements: !785)
!784 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!785 = !{!786, !787, !788}
!786 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !783, file: !784, line: 293, baseType: !203)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !783, file: !784, line: 295, baseType: !132, size: 32)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !783, file: !784, line: 296, baseType: !118, size: 64, offset: 64)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !779, file: !44, line: 454, baseType: !132, size: 32, offset: 192)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !779, file: !44, line: 455, baseType: !220, size: 32, offset: 224)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !779, file: !44, line: 460, baseType: !792, size: 128, offset: 256)
!792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !793, line: 125, size: 128, elements: !794)
!793 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!794 = !{!795, !805}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !792, file: !793, line: 126, baseType: !796, size: 64)
!796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !793, line: 31, size: 64, elements: !797)
!797 = !{!798}
!798 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !796, file: !793, line: 32, baseType: !799, size: 64)
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 64)
!800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !793, line: 24, size: 192, align: 64, elements: !801)
!801 = !{!802, !803, !804}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !800, file: !793, line: 25, baseType: !126, size: 64)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !800, file: !793, line: 26, baseType: !799, size: 64, offset: 64)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !800, file: !793, line: 27, baseType: !799, size: 64, offset: 128)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !792, file: !793, line: 127, baseType: !799, size: 64, offset: 64)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !779, file: !44, line: 461, baseType: !807, size: 256, offset: 384)
!807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !808, line: 35, size: 256, elements: !809)
!808 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!809 = !{!810, !811, !812, !814}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !807, file: !808, line: 36, baseType: !175, size: 64)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !807, file: !808, line: 42, baseType: !175, size: 64, offset: 64)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !807, file: !808, line: 46, baseType: !813, offset: 128)
!813 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !204, line: 29, baseType: !211)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !807, file: !808, line: 47, baseType: !186, size: 128, offset: 128)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !779, file: !44, line: 462, baseType: !126, size: 64, offset: 640)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !779, file: !44, line: 463, baseType: !126, size: 64, offset: 704)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !779, file: !44, line: 464, baseType: !126, size: 64, offset: 768)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !779, file: !44, line: 465, baseType: !819, size: 64, offset: 832)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 64)
!820 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !821)
!821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !44, line: 367, size: 1408, elements: !822)
!822 = !{!823, !827, !831, !835, !839, !843, !849, !855, !859, !864, !868, !872, !876, !904, !908, !914, !915, !916, !920, !925, !929, !936}
!823 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !821, file: !44, line: 368, baseType: !824, size: 64)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!825 = !DISubroutineType(types: !826)
!826 = !{!139, !765, !684}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !821, file: !44, line: 369, baseType: !828, size: 64, offset: 64)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 64)
!829 = !DISubroutineType(types: !830)
!830 = !{!139, !368, !765}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !821, file: !44, line: 372, baseType: !832, size: 64, offset: 128)
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !833, size: 64)
!833 = !DISubroutineType(types: !834)
!834 = !{!139, !778, !684}
!835 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !821, file: !44, line: 375, baseType: !836, size: 64, offset: 192)
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64)
!837 = !DISubroutineType(types: !838)
!838 = !{!139, !765}
!839 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !821, file: !44, line: 381, baseType: !840, size: 64, offset: 256)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 64)
!841 = !DISubroutineType(types: !842)
!842 = !{!139, !368, !778, !189, !7}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !821, file: !44, line: 383, baseType: !844, size: 64, offset: 320)
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !845, size: 64)
!845 = !DISubroutineType(types: !846)
!846 = !{null, !847}
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 64)
!848 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !44, line: 290, flags: DIFlagFwdDecl)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !821, file: !44, line: 385, baseType: !850, size: 64, offset: 384)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = !DISubroutineType(types: !852)
!852 = !{!139, !368, !778, !538, !7, !7, !853, !854}
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 64)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 64)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !821, file: !44, line: 388, baseType: !856, size: 64, offset: 448)
!856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !857, size: 64)
!857 = !DISubroutineType(types: !858)
!858 = !{!139, !368, !778, !538, !7, !7, !765, !118}
!859 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !821, file: !44, line: 393, baseType: !860, size: 64, offset: 512)
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 64)
!861 = !DISubroutineType(types: !862)
!862 = !{!863, !778, !863}
!863 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !133, line: 125, baseType: !429)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !821, file: !44, line: 394, baseType: !865, size: 64, offset: 576)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = !DISubroutineType(types: !867)
!867 = !{null, !765, !7, !7}
!868 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !821, file: !44, line: 395, baseType: !869, size: 64, offset: 640)
!869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 64)
!870 = !DISubroutineType(types: !871)
!871 = !{!139, !765, !132}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !821, file: !44, line: 396, baseType: !873, size: 64, offset: 704)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 64)
!874 = !DISubroutineType(types: !875)
!875 = !{null, !765}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !821, file: !44, line: 397, baseType: !877, size: 64, offset: 768)
!877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !878, size: 64)
!878 = !DISubroutineType(types: !879)
!879 = !{!323, !880, !902}
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !44, line: 320, size: 384, elements: !882)
!882 = !{!883, !884, !885, !889, !890, !891, !894, !895}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !881, file: !44, line: 321, baseType: !368, size: 64)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !881, file: !44, line: 326, baseType: !538, size: 64, offset: 64)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !881, file: !44, line: 327, baseType: !886, size: 64, offset: 128)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!887 = !DISubroutineType(types: !888)
!888 = !{null, !880, !327, !327}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !881, file: !44, line: 328, baseType: !118, size: 64, offset: 192)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !881, file: !44, line: 329, baseType: !139, size: 32, offset: 256)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !881, file: !44, line: 330, baseType: !892, size: 16, offset: 288)
!892 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !182, line: 19, baseType: !893)
!893 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !121, line: 24, baseType: !131)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !881, file: !44, line: 331, baseType: !892, size: 16, offset: 304)
!895 = !DIDerivedType(tag: DW_TAG_member, scope: !881, file: !44, line: 332, baseType: !896, size: 64, offset: 320)
!896 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !881, file: !44, line: 332, size: 64, elements: !897)
!897 = !{!898, !899}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !896, file: !44, line: 333, baseType: !7, size: 32)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !896, file: !44, line: 334, baseType: !900, size: 64)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64)
!901 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !44, line: 334, flags: DIFlagFwdDecl)
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 64)
!903 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !44, line: 64, flags: DIFlagFwdDecl)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !821, file: !44, line: 402, baseType: !905, size: 64, offset: 832)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 64)
!906 = !DISubroutineType(types: !907)
!907 = !{!139, !778, !765, !765, !5}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !821, file: !44, line: 404, baseType: !909, size: 64, offset: 896)
!909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 64)
!910 = !DISubroutineType(types: !911)
!911 = !{!497, !765, !912}
!912 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !913, line: 305, baseType: !7)
!913 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!914 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !821, file: !44, line: 405, baseType: !873, size: 64, offset: 960)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !821, file: !44, line: 406, baseType: !836, size: 64, offset: 1024)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !821, file: !44, line: 407, baseType: !917, size: 64, offset: 1088)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64)
!918 = !DISubroutineType(types: !919)
!919 = !{!139, !765, !126, !126}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !821, file: !44, line: 409, baseType: !921, size: 64, offset: 1152)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64)
!922 = !DISubroutineType(types: !923)
!923 = !{null, !765, !924, !924}
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !497, size: 64)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !821, file: !44, line: 410, baseType: !926, size: 64, offset: 1216)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64)
!927 = !DISubroutineType(types: !928)
!928 = !{!139, !778, !765}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !821, file: !44, line: 413, baseType: !930, size: 64, offset: 1280)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 64)
!931 = !DISubroutineType(types: !932)
!932 = !{!139, !933, !368, !935}
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 64)
!934 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !44, line: 61, flags: DIFlagFwdDecl)
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !863, size: 64)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !821, file: !44, line: 415, baseType: !937, size: 64, offset: 1344)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 64)
!938 = !DISubroutineType(types: !939)
!939 = !{null, !368}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !779, file: !44, line: 466, baseType: !126, size: 64, offset: 896)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !779, file: !44, line: 467, baseType: !942, size: 32, offset: 960)
!942 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !943, line: 8, baseType: !426)
!943 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!944 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !779, file: !44, line: 468, baseType: !203, offset: 992)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !779, file: !44, line: 469, baseType: !186, size: 128, offset: 1024)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !779, file: !44, line: 470, baseType: !118, size: 64, offset: 1152)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !774, file: !767, line: 87, baseType: !126, size: 64, offset: 192)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !774, file: !767, line: 94, baseType: !126, size: 64, offset: 256)
!949 = !DIDerivedType(tag: DW_TAG_member, scope: !771, file: !767, line: 96, baseType: !950, size: 64)
!950 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !771, file: !767, line: 96, size: 64, elements: !951)
!951 = !{!952}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !950, file: !767, line: 101, baseType: !953, size: 64)
!953 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !133, line: 143, baseType: !429)
!954 = !DIDerivedType(tag: DW_TAG_member, scope: !771, file: !767, line: 103, baseType: !955, size: 320)
!955 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !771, file: !767, line: 103, size: 320, elements: !956)
!956 = !{!957, !967, !970, !971}
!957 = !DIDerivedType(tag: DW_TAG_member, scope: !955, file: !767, line: 104, baseType: !958, size: 128)
!958 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !955, file: !767, line: 104, size: 128, elements: !959)
!959 = !{!960, !961}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !958, file: !767, line: 105, baseType: !186, size: 128)
!961 = !DIDerivedType(tag: DW_TAG_member, scope: !958, file: !767, line: 106, baseType: !962, size: 128)
!962 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !958, file: !767, line: 106, size: 128, elements: !963)
!963 = !{!964, !965, !966}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !962, file: !767, line: 107, baseType: !765, size: 64)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !962, file: !767, line: 109, baseType: !139, size: 32, offset: 64)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !962, file: !767, line: 110, baseType: !139, size: 32, offset: 96)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !955, file: !767, line: 117, baseType: !968, size: 64, offset: 128)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64)
!969 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !767, line: 117, flags: DIFlagFwdDecl)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !955, file: !767, line: 119, baseType: !118, size: 64, offset: 192)
!971 = !DIDerivedType(tag: DW_TAG_member, scope: !955, file: !767, line: 120, baseType: !972, size: 64, offset: 256)
!972 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !955, file: !767, line: 120, size: 64, elements: !973)
!973 = !{!974, !975, !976}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !972, file: !767, line: 121, baseType: !118, size: 64)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !972, file: !767, line: 122, baseType: !126, size: 64)
!976 = !DIDerivedType(tag: DW_TAG_member, scope: !972, file: !767, line: 123, baseType: !977, size: 32)
!977 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !972, file: !767, line: 123, size: 32, elements: !978)
!978 = !{!979, !980, !981}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !977, file: !767, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !977, file: !767, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !977, file: !767, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!982 = !DIDerivedType(tag: DW_TAG_member, scope: !771, file: !767, line: 130, baseType: !983, size: 192)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !771, file: !767, line: 130, size: 192, elements: !984)
!984 = !{!985, !986, !987, !988, !989}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !983, file: !767, line: 131, baseType: !126, size: 64)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !983, file: !767, line: 134, baseType: !124, size: 8, offset: 64)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !983, file: !767, line: 135, baseType: !124, size: 8, offset: 72)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !983, file: !767, line: 136, baseType: !220, size: 32, offset: 96)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !983, file: !767, line: 137, baseType: !7, size: 32, offset: 128)
!990 = !DIDerivedType(tag: DW_TAG_member, scope: !771, file: !767, line: 139, baseType: !991, size: 256)
!991 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !771, file: !767, line: 139, size: 256, elements: !992)
!992 = !{!993, !994, !995}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !991, file: !767, line: 140, baseType: !126, size: 64)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !991, file: !767, line: 141, baseType: !220, size: 32, offset: 64)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !991, file: !767, line: 143, baseType: !186, size: 128, offset: 128)
!996 = !DIDerivedType(tag: DW_TAG_member, scope: !771, file: !767, line: 145, baseType: !997, size: 256)
!997 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !771, file: !767, line: 145, size: 256, elements: !998)
!998 = !{!999, !1000, !1003, !1004, !2396}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !997, file: !767, line: 146, baseType: !126, size: 64)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !997, file: !767, line: 147, baseType: !1001, size: 64, offset: 64)
!1001 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1002, line: 509, baseType: !765)
!1002 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !997, file: !767, line: 148, baseType: !126, size: 64, offset: 128)
!1004 = !DIDerivedType(tag: DW_TAG_member, scope: !997, file: !767, line: 149, baseType: !1005, size: 64, offset: 192)
!1005 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !997, file: !767, line: 149, size: 64, elements: !1006)
!1006 = !{!1007, !2395}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1005, file: !767, line: 150, baseType: !1008, size: 64)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64)
!1009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !767, line: 388, size: 7296, elements: !1010)
!1010 = !{!1011, !2394}
!1011 = !DIDerivedType(tag: DW_TAG_member, scope: !1009, file: !767, line: 389, baseType: !1012, size: 7296)
!1012 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1009, file: !767, line: 389, size: 7296, elements: !1013)
!1013 = !{!1014, !1132, !1133, !1134, !1138, !1139, !1140, !1141, !1142, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1183, !1191, !1194, !1234, !1235, !2378, !2379, !2382, !2383, !2384, !2387, !2388, !2389, !2392, !2393}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1012, file: !767, line: 390, baseType: !1015, size: 64)
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 64)
!1016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !767, line: 305, size: 1472, elements: !1017)
!1017 = !{!1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1032, !1033, !1038, !1039, !1042, !1126, !1127, !1128, !1129, !1130}
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1016, file: !767, line: 308, baseType: !126, size: 64)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1016, file: !767, line: 309, baseType: !126, size: 64, offset: 64)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1016, file: !767, line: 313, baseType: !1015, size: 64, offset: 128)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1016, file: !767, line: 313, baseType: !1015, size: 64, offset: 192)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1016, file: !767, line: 315, baseType: !800, size: 192, align: 64, offset: 256)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1016, file: !767, line: 323, baseType: !126, size: 64, offset: 448)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1016, file: !767, line: 327, baseType: !1008, size: 64, offset: 512)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1016, file: !767, line: 333, baseType: !1026, size: 64, offset: 576)
!1026 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1002, line: 284, baseType: !1027)
!1027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1002, line: 284, size: 64, elements: !1028)
!1028 = !{!1029}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1027, file: !1002, line: 284, baseType: !1030, size: 64)
!1030 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1031, line: 19, baseType: !126)
!1031 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1016, file: !767, line: 334, baseType: !126, size: 64, offset: 640)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1016, file: !767, line: 343, baseType: !1034, size: 256, offset: 704)
!1034 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1016, file: !767, line: 340, size: 256, elements: !1035)
!1035 = !{!1036, !1037}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1034, file: !767, line: 341, baseType: !800, size: 192, align: 64)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1034, file: !767, line: 342, baseType: !126, size: 64, offset: 192)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1016, file: !767, line: 351, baseType: !186, size: 128, offset: 960)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1016, file: !767, line: 353, baseType: !1040, size: 64, offset: 1088)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64)
!1041 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !767, line: 353, flags: DIFlagFwdDecl)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1016, file: !767, line: 356, baseType: !1043, size: 64, offset: 1152)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64)
!1044 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1045)
!1045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !1046)
!1046 = !{!1047, !1051, !1052, !1056, !1060, !1100, !1104, !1108, !1112, !1113, !1114, !1118, !1122}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1045, file: !14, line: 558, baseType: !1048, size: 64)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64)
!1049 = !DISubroutineType(types: !1050)
!1050 = !{null, !1015}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1045, file: !14, line: 559, baseType: !1048, size: 64, offset: 64)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1045, file: !14, line: 560, baseType: !1053, size: 64, offset: 128)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 64)
!1054 = !DISubroutineType(types: !1055)
!1055 = !{!139, !1015, !126}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1045, file: !14, line: 561, baseType: !1057, size: 64, offset: 192)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 64)
!1058 = !DISubroutineType(types: !1059)
!1059 = !{!139, !1015}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1045, file: !14, line: 562, baseType: !1061, size: 64, offset: 256)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{!1064, !1065}
!1064 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !767, line: 682, baseType: !7)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 64)
!1066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !1067)
!1067 = !{!1068, !1069, !1070, !1071, !1072, !1073, !1080, !1087, !1093, !1094, !1095, !1097, !1099}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1066, file: !14, line: 509, baseType: !1015, size: 64)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1066, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1066, file: !14, line: 511, baseType: !132, size: 32, offset: 96)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1066, file: !14, line: 512, baseType: !126, size: 64, offset: 128)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1066, file: !14, line: 513, baseType: !126, size: 64, offset: 192)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1066, file: !14, line: 514, baseType: !1074, size: 64, offset: 256)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64)
!1075 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !1002, line: 385, baseType: !1076)
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1002, line: 385, size: 64, elements: !1077)
!1077 = !{!1078}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1076, file: !1002, line: 385, baseType: !1079, size: 64)
!1079 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1031, line: 15, baseType: !126)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1066, file: !14, line: 516, baseType: !1081, size: 64, offset: 320)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64)
!1082 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !1002, line: 359, baseType: !1083)
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1002, line: 359, size: 64, elements: !1084)
!1084 = !{!1085}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1083, file: !1002, line: 359, baseType: !1086, size: 64)
!1086 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1031, line: 16, baseType: !126)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1066, file: !14, line: 519, baseType: !1088, size: 64, offset: 384)
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1031, line: 21, baseType: !1089)
!1089 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1031, line: 21, size: 64, elements: !1090)
!1090 = !{!1091}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1089, file: !1031, line: 21, baseType: !1092, size: 64)
!1092 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1031, line: 14, baseType: !126)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1066, file: !14, line: 521, baseType: !765, size: 64, offset: 448)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1066, file: !14, line: 522, baseType: !765, size: 64, offset: 512)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1066, file: !14, line: 528, baseType: !1096, size: 64, offset: 576)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1066, file: !14, line: 532, baseType: !1098, size: 64, offset: 640)
!1098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 64)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1066, file: !14, line: 536, baseType: !1001, size: 64, offset: 704)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1045, file: !14, line: 563, baseType: !1101, size: 64, offset: 320)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 64)
!1102 = !DISubroutineType(types: !1103)
!1103 = !{!1064, !1065, !13}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1045, file: !14, line: 565, baseType: !1105, size: 64, offset: 384)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64)
!1106 = !DISubroutineType(types: !1107)
!1107 = !{null, !1065, !126, !126}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1045, file: !14, line: 567, baseType: !1109, size: 64, offset: 448)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64)
!1110 = !DISubroutineType(types: !1111)
!1111 = !{!126, !1015}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1045, file: !14, line: 571, baseType: !1061, size: 64, offset: 512)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1045, file: !14, line: 574, baseType: !1061, size: 64, offset: 576)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1045, file: !14, line: 579, baseType: !1115, size: 64, offset: 640)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64)
!1116 = !DISubroutineType(types: !1117)
!1117 = !{!139, !1015, !126, !118, !139, !139}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1045, file: !14, line: 585, baseType: !1119, size: 64, offset: 704)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64)
!1120 = !DISubroutineType(types: !1121)
!1121 = !{!256, !1015}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1045, file: !14, line: 615, baseType: !1123, size: 64, offset: 768)
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 64)
!1124 = !DISubroutineType(types: !1125)
!1125 = !{!765, !1015, !126}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1016, file: !767, line: 359, baseType: !126, size: 64, offset: 1216)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1016, file: !767, line: 361, baseType: !368, size: 64, offset: 1280)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1016, file: !767, line: 362, baseType: !118, size: 64, offset: 1344)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1016, file: !767, line: 365, baseType: !175, size: 64, offset: 1408)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1016, file: !767, line: 373, baseType: !1131, offset: 1472)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !767, line: 296, elements: !217)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1012, file: !767, line: 391, baseType: !796, size: 64, offset: 64)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1012, file: !767, line: 392, baseType: !429, size: 64, offset: 128)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1012, file: !767, line: 394, baseType: !1135, size: 64, offset: 192)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 64)
!1136 = !DISubroutineType(types: !1137)
!1137 = !{!126, !368, !126, !126, !126, !126}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1012, file: !767, line: 398, baseType: !126, size: 64, offset: 256)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1012, file: !767, line: 399, baseType: !126, size: 64, offset: 320)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1012, file: !767, line: 405, baseType: !126, size: 64, offset: 384)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1012, file: !767, line: 406, baseType: !126, size: 64, offset: 448)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1012, file: !767, line: 407, baseType: !1143, size: 64, offset: 512)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 64)
!1144 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1002, line: 286, baseType: !1145)
!1145 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1002, line: 286, size: 64, elements: !1146)
!1146 = !{!1147}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1145, file: !1002, line: 286, baseType: !1148, size: 64)
!1148 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1031, line: 18, baseType: !126)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1012, file: !767, line: 416, baseType: !220, size: 32, offset: 576)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1012, file: !767, line: 428, baseType: !220, size: 32, offset: 608)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1012, file: !767, line: 437, baseType: !220, size: 32, offset: 640)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1012, file: !767, line: 447, baseType: !220, size: 32, offset: 672)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1012, file: !767, line: 450, baseType: !175, size: 64, offset: 704)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1012, file: !767, line: 452, baseType: !139, size: 32, offset: 768)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1012, file: !767, line: 454, baseType: !203, offset: 800)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1012, file: !767, line: 457, baseType: !807, size: 256, offset: 832)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1012, file: !767, line: 459, baseType: !186, size: 128, offset: 1088)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1012, file: !767, line: 466, baseType: !126, size: 64, offset: 1216)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1012, file: !767, line: 467, baseType: !126, size: 64, offset: 1280)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1012, file: !767, line: 469, baseType: !126, size: 64, offset: 1344)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1012, file: !767, line: 470, baseType: !126, size: 64, offset: 1408)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1012, file: !767, line: 471, baseType: !177, size: 64, offset: 1472)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1012, file: !767, line: 472, baseType: !126, size: 64, offset: 1536)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1012, file: !767, line: 473, baseType: !126, size: 64, offset: 1600)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1012, file: !767, line: 474, baseType: !126, size: 64, offset: 1664)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1012, file: !767, line: 475, baseType: !126, size: 64, offset: 1728)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1012, file: !767, line: 477, baseType: !203, offset: 1792)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1012, file: !767, line: 478, baseType: !126, size: 64, offset: 1792)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1012, file: !767, line: 478, baseType: !126, size: 64, offset: 1856)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1012, file: !767, line: 478, baseType: !126, size: 64, offset: 1920)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1012, file: !767, line: 478, baseType: !126, size: 64, offset: 1984)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1012, file: !767, line: 479, baseType: !126, size: 64, offset: 2048)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1012, file: !767, line: 479, baseType: !126, size: 64, offset: 2112)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1012, file: !767, line: 479, baseType: !126, size: 64, offset: 2176)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1012, file: !767, line: 480, baseType: !126, size: 64, offset: 2240)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1012, file: !767, line: 480, baseType: !126, size: 64, offset: 2304)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1012, file: !767, line: 480, baseType: !126, size: 64, offset: 2368)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1012, file: !767, line: 480, baseType: !126, size: 64, offset: 2432)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1012, file: !767, line: 482, baseType: !1180, size: 2816, offset: 2496)
!1180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !126, size: 2816, elements: !1181)
!1181 = !{!1182}
!1182 = !DISubrange(count: 44)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1012, file: !767, line: 488, baseType: !1184, size: 256, offset: 5312)
!1184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1185, line: 60, size: 256, elements: !1186)
!1185 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1186 = !{!1187}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1184, file: !1185, line: 61, baseType: !1188, size: 256)
!1188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 256, elements: !1189)
!1189 = !{!1190}
!1190 = !DISubrange(count: 4)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1012, file: !767, line: 490, baseType: !1192, size: 64, offset: 5568)
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 64)
!1193 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !767, line: 490, flags: DIFlagFwdDecl)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1012, file: !767, line: 493, baseType: !1195, size: 896, offset: 5632)
!1195 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1196, line: 53, baseType: !1197)
!1196 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1196, line: 13, size: 896, elements: !1198)
!1198 = !{!1199, !1200, !1201, !1202, !1205, !1206, !1207, !1208, !1228, !1229, !1230}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1197, file: !1196, line: 18, baseType: !429, size: 64)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1197, file: !1196, line: 28, baseType: !177, size: 64, offset: 64)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1197, file: !1196, line: 31, baseType: !807, size: 256, offset: 128)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1197, file: !1196, line: 32, baseType: !1203, size: 64, offset: 384)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64)
!1204 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1196, line: 32, flags: DIFlagFwdDecl)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1197, file: !1196, line: 37, baseType: !131, size: 16, offset: 448)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1197, file: !1196, line: 40, baseType: !198, size: 192, offset: 512)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1197, file: !1196, line: 41, baseType: !118, size: 64, offset: 704)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1197, file: !1196, line: 42, baseType: !1209, size: 64, offset: 768)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 64)
!1210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1211)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1212, line: 13, size: 896, elements: !1213)
!1212 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1213 = !{!1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1211, file: !1212, line: 14, baseType: !118, size: 64)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1211, file: !1212, line: 15, baseType: !126, size: 64, offset: 64)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1211, file: !1212, line: 17, baseType: !126, size: 64, offset: 128)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1211, file: !1212, line: 17, baseType: !126, size: 64, offset: 192)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1211, file: !1212, line: 19, baseType: !327, size: 64, offset: 256)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1211, file: !1212, line: 21, baseType: !327, size: 64, offset: 320)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1211, file: !1212, line: 22, baseType: !327, size: 64, offset: 384)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1211, file: !1212, line: 23, baseType: !327, size: 64, offset: 448)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1211, file: !1212, line: 24, baseType: !327, size: 64, offset: 512)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1211, file: !1212, line: 25, baseType: !327, size: 64, offset: 576)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1211, file: !1212, line: 26, baseType: !327, size: 64, offset: 640)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1211, file: !1212, line: 27, baseType: !327, size: 64, offset: 704)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1211, file: !1212, line: 28, baseType: !327, size: 64, offset: 768)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1211, file: !1212, line: 29, baseType: !327, size: 64, offset: 832)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1197, file: !1196, line: 44, baseType: !220, size: 32, offset: 832)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1197, file: !1196, line: 50, baseType: !892, size: 16, offset: 864)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1197, file: !1196, line: 51, baseType: !1231, size: 16, offset: 880)
!1231 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !182, line: 18, baseType: !1232)
!1232 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !121, line: 23, baseType: !1233)
!1233 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1012, file: !767, line: 495, baseType: !126, size: 64, offset: 6528)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1012, file: !767, line: 497, baseType: !1236, size: 64, offset: 6592)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 64)
!1237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !767, line: 381, size: 384, elements: !1238)
!1238 = !{!1239, !1240, !2377}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1237, file: !767, line: 382, baseType: !220, size: 32)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1237, file: !767, line: 383, baseType: !1241, size: 128, offset: 64)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !767, line: 376, size: 128, elements: !1242)
!1242 = !{!1243, !2375}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1241, file: !767, line: 377, baseType: !1244, size: 64)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 64)
!1245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1246, line: 640, size: 48640, elements: !1247)
!1246 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1247 = !{!1248, !1254, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1269, !1287, !1298, !1383, !1384, !1385, !1396, !1397, !1399, !1400, !1401, !1402, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1481, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1552, !1554, !1555, !1556, !1568, !1569, !1570, !1571, !1572, !1573, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1597, !1602, !1784, !1785, !1786, !1787, !1791, !1794, !1797, !1800, !1803, !1829, !1928, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1974, !1975, !1976, !1977, !1978, !1983, !1984, !1985, !1988, !1989, !1992, !1995, !1998, !2001, !2033, !2036, !2037, !2116, !2117, !2120, !2121, !2124, !2125, !2126, !2130, !2131, !2132, !2145, !2146, !2147, !2157, !2162, !2165, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1245, file: !1246, line: 646, baseType: !1249, size: 128)
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1250, line: 56, size: 128, elements: !1251)
!1250 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1251 = !{!1252, !1253}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1249, file: !1250, line: 57, baseType: !126, size: 64)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1249, file: !1250, line: 58, baseType: !426, size: 32, offset: 64)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1245, file: !1246, line: 649, baseType: !1255, size: 64, offset: 128)
!1255 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !327)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1245, file: !1246, line: 657, baseType: !118, size: 64, offset: 192)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1245, file: !1246, line: 658, baseType: !242, size: 32, offset: 256)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1245, file: !1246, line: 660, baseType: !7, size: 32, offset: 288)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1245, file: !1246, line: 661, baseType: !7, size: 32, offset: 320)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1245, file: !1246, line: 684, baseType: !139, size: 32, offset: 352)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1245, file: !1246, line: 686, baseType: !139, size: 32, offset: 384)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1245, file: !1246, line: 687, baseType: !139, size: 32, offset: 416)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1245, file: !1246, line: 688, baseType: !139, size: 32, offset: 448)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1245, file: !1246, line: 689, baseType: !7, size: 32, offset: 480)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1245, file: !1246, line: 691, baseType: !1266, size: 64, offset: 512)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64)
!1267 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1268)
!1268 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1246, line: 691, flags: DIFlagFwdDecl)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1245, file: !1246, line: 692, baseType: !1270, size: 832, offset: 576)
!1270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1246, line: 451, size: 832, elements: !1271)
!1271 = !{!1272, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1270, file: !1246, line: 453, baseType: !1273, size: 128)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1246, line: 325, size: 128, elements: !1274)
!1274 = !{!1275, !1276}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1273, file: !1246, line: 326, baseType: !126, size: 64)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1273, file: !1246, line: 327, baseType: !426, size: 32, offset: 64)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1270, file: !1246, line: 454, baseType: !800, size: 192, align: 64, offset: 128)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1270, file: !1246, line: 455, baseType: !186, size: 128, offset: 320)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1270, file: !1246, line: 456, baseType: !7, size: 32, offset: 448)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1270, file: !1246, line: 458, baseType: !429, size: 64, offset: 512)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1270, file: !1246, line: 459, baseType: !429, size: 64, offset: 576)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1270, file: !1246, line: 460, baseType: !429, size: 64, offset: 640)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1270, file: !1246, line: 461, baseType: !429, size: 64, offset: 704)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1270, file: !1246, line: 463, baseType: !429, size: 64, offset: 768)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1270, file: !1246, line: 465, baseType: !1286, offset: 832)
!1286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1246, line: 415, elements: !217)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1245, file: !1246, line: 693, baseType: !1288, size: 384, offset: 1408)
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1246, line: 489, size: 384, elements: !1289)
!1289 = !{!1290, !1291, !1292, !1293, !1294, !1295, !1296}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1288, file: !1246, line: 490, baseType: !186, size: 128)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1288, file: !1246, line: 491, baseType: !126, size: 64, offset: 128)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1288, file: !1246, line: 492, baseType: !126, size: 64, offset: 192)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1288, file: !1246, line: 493, baseType: !7, size: 32, offset: 256)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1288, file: !1246, line: 494, baseType: !131, size: 16, offset: 288)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1288, file: !1246, line: 495, baseType: !131, size: 16, offset: 304)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1288, file: !1246, line: 497, baseType: !1297, size: 64, offset: 320)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 64)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1245, file: !1246, line: 697, baseType: !1299, size: 1792, offset: 1792)
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1246, line: 507, size: 1792, elements: !1300)
!1300 = !{!1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1380, !1381}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1299, file: !1246, line: 508, baseType: !800, size: 192, align: 64)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1299, file: !1246, line: 515, baseType: !429, size: 64, offset: 192)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1299, file: !1246, line: 516, baseType: !429, size: 64, offset: 256)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1299, file: !1246, line: 517, baseType: !429, size: 64, offset: 320)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1299, file: !1246, line: 518, baseType: !429, size: 64, offset: 384)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1299, file: !1246, line: 519, baseType: !429, size: 64, offset: 448)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1299, file: !1246, line: 526, baseType: !181, size: 64, offset: 512)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1299, file: !1246, line: 527, baseType: !429, size: 64, offset: 576)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1299, file: !1246, line: 528, baseType: !7, size: 32, offset: 640)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1299, file: !1246, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1299, file: !1246, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1299, file: !1246, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1299, file: !1246, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1299, file: !1246, line: 563, baseType: !1315, size: 512, offset: 704)
!1315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !1316)
!1316 = !{!1317, !1325, !1326, !1331, !1374, !1377, !1378, !1379}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1315, file: !20, line: 119, baseType: !1318, size: 256)
!1318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1319, line: 9, size: 256, elements: !1320)
!1319 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1320 = !{!1321, !1322}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1318, file: !1319, line: 10, baseType: !800, size: 192, align: 64)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1318, file: !1319, line: 11, baseType: !1323, size: 64, offset: 192)
!1323 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1324, line: 29, baseType: !181)
!1324 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1315, file: !20, line: 120, baseType: !1323, size: 64, offset: 256)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1315, file: !20, line: 121, baseType: !1327, size: 64, offset: 320)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 64)
!1328 = !DISubroutineType(types: !1329)
!1329 = !{!19, !1330}
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 64)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1315, file: !20, line: 122, baseType: !1332, size: 64, offset: 384)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64)
!1333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !1334)
!1334 = !{!1335, !1355, !1356, !1359, !1364, !1365, !1369, !1373}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1333, file: !20, line: 160, baseType: !1336, size: 64)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 64)
!1337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !1338)
!1338 = !{!1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1337, file: !20, line: 215, baseType: !813)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1337, file: !20, line: 216, baseType: !7, size: 32)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1337, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1337, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1337, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1337, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1337, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1337, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1337, file: !20, line: 233, baseType: !1323, size: 64, offset: 128)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1337, file: !20, line: 234, baseType: !1330, size: 64, offset: 192)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1337, file: !20, line: 235, baseType: !1323, size: 64, offset: 256)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1337, file: !20, line: 236, baseType: !1330, size: 64, offset: 320)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1337, file: !20, line: 237, baseType: !1352, size: 4096, offset: 512)
!1352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1333, size: 4096, elements: !1353)
!1353 = !{!1354}
!1354 = !DISubrange(count: 8)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1333, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1333, file: !20, line: 162, baseType: !1357, size: 32, offset: 96)
!1357 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !133, line: 27, baseType: !1358)
!1358 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !325, line: 96, baseType: !139)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1333, file: !20, line: 163, baseType: !1360, size: 32, offset: 128)
!1360 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !399, line: 276, baseType: !1361)
!1361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !399, line: 276, size: 32, elements: !1362)
!1362 = !{!1363}
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1361, file: !399, line: 276, baseType: !403, size: 32)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1333, file: !20, line: 164, baseType: !1330, size: 64, offset: 192)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1333, file: !20, line: 165, baseType: !1366, size: 128, offset: 256)
!1366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1319, line: 14, size: 128, elements: !1367)
!1367 = !{!1368}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1366, file: !1319, line: 15, baseType: !792, size: 128)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1333, file: !20, line: 166, baseType: !1370, size: 64, offset: 384)
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 64)
!1371 = !DISubroutineType(types: !1372)
!1372 = !{!1323}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1333, file: !20, line: 167, baseType: !1323, size: 64, offset: 448)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1315, file: !20, line: 123, baseType: !1375, size: 8, offset: 448)
!1375 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !182, line: 17, baseType: !1376)
!1376 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !121, line: 21, baseType: !124)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1315, file: !20, line: 124, baseType: !1375, size: 8, offset: 456)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1315, file: !20, line: 125, baseType: !1375, size: 8, offset: 464)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1315, file: !20, line: 126, baseType: !1375, size: 8, offset: 472)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1299, file: !1246, line: 572, baseType: !1315, size: 512, offset: 1216)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1299, file: !1246, line: 580, baseType: !1382, size: 64, offset: 1728)
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1245, file: !1246, line: 721, baseType: !7, size: 32, offset: 3584)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1245, file: !1246, line: 722, baseType: !139, size: 32, offset: 3616)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1245, file: !1246, line: 723, baseType: !1386, size: 64, offset: 3648)
!1386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1387, size: 64)
!1387 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1388)
!1388 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1389, line: 17, baseType: !1390)
!1389 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1389, line: 17, size: 64, elements: !1391)
!1391 = !{!1392}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1390, file: !1389, line: 17, baseType: !1393, size: 64)
!1393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !126, size: 64, elements: !1394)
!1394 = !{!1395}
!1395 = !DISubrange(count: 1)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1245, file: !1246, line: 724, baseType: !1388, size: 64, offset: 3712)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1245, file: !1246, line: 749, baseType: !1398, offset: 3776)
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1246, line: 290, elements: !217)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1245, file: !1246, line: 751, baseType: !186, size: 128, offset: 3776)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1245, file: !1246, line: 757, baseType: !1008, size: 64, offset: 3904)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1245, file: !1246, line: 758, baseType: !1008, size: 64, offset: 3968)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1245, file: !1246, line: 761, baseType: !1403, size: 320, offset: 4032)
!1403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1185, line: 34, size: 320, elements: !1404)
!1404 = !{!1405, !1406}
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1403, file: !1185, line: 35, baseType: !429, size: 64)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1403, file: !1185, line: 36, baseType: !1407, size: 256, offset: 64)
!1407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 256, elements: !1189)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1245, file: !1246, line: 766, baseType: !139, size: 32, offset: 4352)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1245, file: !1246, line: 767, baseType: !139, size: 32, offset: 4384)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1245, file: !1246, line: 768, baseType: !139, size: 32, offset: 4416)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1245, file: !1246, line: 770, baseType: !139, size: 32, offset: 4448)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1245, file: !1246, line: 772, baseType: !126, size: 64, offset: 4480)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1245, file: !1246, line: 775, baseType: !7, size: 32, offset: 4544)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1245, file: !1246, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1245, file: !1246, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1245, file: !1246, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1245, file: !1246, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1245, file: !1246, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1245, file: !1246, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1245, file: !1246, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1245, file: !1246, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1245, file: !1246, line: 831, baseType: !126, size: 64, offset: 4672)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1245, file: !1246, line: 833, baseType: !1424, size: 384, offset: 4736)
!1424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !1425)
!1425 = !{!1426, !1431}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1424, file: !25, line: 26, baseType: !1427, size: 64)
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 64)
!1428 = !DISubroutineType(types: !1429)
!1429 = !{!327, !1430}
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 64)
!1431 = !DIDerivedType(tag: DW_TAG_member, scope: !1424, file: !25, line: 27, baseType: !1432, size: 320, offset: 64)
!1432 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1424, file: !25, line: 27, size: 320, elements: !1433)
!1433 = !{!1434, !1444, !1471}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1432, file: !25, line: 36, baseType: !1435, size: 320)
!1435 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1432, file: !25, line: 29, size: 320, elements: !1436)
!1436 = !{!1437, !1439, !1440, !1441, !1442, !1443}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1435, file: !25, line: 30, baseType: !1438, size: 64)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 64)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1435, file: !25, line: 31, baseType: !426, size: 32, offset: 64)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1435, file: !25, line: 32, baseType: !426, size: 32, offset: 96)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1435, file: !25, line: 33, baseType: !426, size: 32, offset: 128)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1435, file: !25, line: 34, baseType: !429, size: 64, offset: 192)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1435, file: !25, line: 35, baseType: !1438, size: 64, offset: 256)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1432, file: !25, line: 46, baseType: !1445, size: 192)
!1445 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1432, file: !25, line: 38, size: 192, elements: !1446)
!1446 = !{!1447, !1448, !1449, !1470}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1445, file: !25, line: 39, baseType: !1357, size: 32)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1445, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!1449 = !DIDerivedType(tag: DW_TAG_member, scope: !1445, file: !25, line: 41, baseType: !1450, size: 64, offset: 64)
!1450 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1445, file: !25, line: 41, size: 64, elements: !1451)
!1451 = !{!1452, !1460}
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1450, file: !25, line: 42, baseType: !1453, size: 64)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 64)
!1454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1455, line: 7, size: 128, elements: !1456)
!1455 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1456 = !{!1457, !1459}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1454, file: !1455, line: 8, baseType: !1458, size: 64)
!1458 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !325, line: 93, baseType: !184)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1454, file: !1455, line: 9, baseType: !184, size: 64, offset: 64)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1450, file: !25, line: 43, baseType: !1461, size: 64)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 64)
!1462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1463, line: 7, size: 64, elements: !1464)
!1463 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1464 = !{!1465, !1469}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1462, file: !1463, line: 8, baseType: !1466, size: 32)
!1466 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1463, line: 5, baseType: !1467)
!1467 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !182, line: 20, baseType: !1468)
!1468 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !121, line: 26, baseType: !139)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1462, file: !1463, line: 9, baseType: !1467, size: 32, offset: 32)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1445, file: !25, line: 45, baseType: !429, size: 64, offset: 128)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1432, file: !25, line: 54, baseType: !1472, size: 256)
!1472 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1432, file: !25, line: 48, size: 256, elements: !1473)
!1473 = !{!1474, !1477, !1478, !1479, !1480}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1472, file: !25, line: 49, baseType: !1475, size: 64)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64)
!1476 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1472, file: !25, line: 50, baseType: !139, size: 32, offset: 64)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1472, file: !25, line: 51, baseType: !139, size: 32, offset: 96)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1472, file: !25, line: 52, baseType: !126, size: 64, offset: 128)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1472, file: !25, line: 53, baseType: !126, size: 64, offset: 192)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1245, file: !1246, line: 835, baseType: !1482, size: 32, offset: 5120)
!1482 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !133, line: 22, baseType: !1483)
!1483 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !325, line: 28, baseType: !139)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1245, file: !1246, line: 836, baseType: !1482, size: 32, offset: 5152)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1245, file: !1246, line: 840, baseType: !126, size: 64, offset: 5184)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1245, file: !1246, line: 849, baseType: !1244, size: 64, offset: 5248)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1245, file: !1246, line: 852, baseType: !1244, size: 64, offset: 5312)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1245, file: !1246, line: 857, baseType: !186, size: 128, offset: 5376)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1245, file: !1246, line: 858, baseType: !186, size: 128, offset: 5504)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1245, file: !1246, line: 859, baseType: !1244, size: 64, offset: 5632)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1245, file: !1246, line: 867, baseType: !186, size: 128, offset: 5696)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1245, file: !1246, line: 868, baseType: !186, size: 128, offset: 5824)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1245, file: !1246, line: 871, baseType: !1494, size: 64, offset: 5952)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64)
!1495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !53, line: 59, size: 768, elements: !1496)
!1496 = !{!1497, !1498, !1499, !1500, !1502, !1503, !1510, !1511}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1495, file: !53, line: 61, baseType: !242, size: 32)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1495, file: !53, line: 62, baseType: !7, size: 32, offset: 32)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1495, file: !53, line: 63, baseType: !203, offset: 64)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1495, file: !53, line: 65, baseType: !1501, size: 256, offset: 64)
!1501 = !DICompositeType(tag: DW_TAG_array_type, baseType: !643, size: 256, elements: !1189)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1495, file: !53, line: 66, baseType: !643, size: 64, offset: 320)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1495, file: !53, line: 68, baseType: !1504, size: 128, offset: 384)
!1504 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1505, line: 40, baseType: !1506)
!1505 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1505, line: 36, size: 128, elements: !1507)
!1507 = !{!1508, !1509}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1506, file: !1505, line: 37, baseType: !203)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1506, file: !1505, line: 38, baseType: !186, size: 128)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1495, file: !53, line: 69, baseType: !376, size: 128, align: 64, offset: 512)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1495, file: !53, line: 70, baseType: !1512, size: 128, offset: 640)
!1512 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1513, size: 128, elements: !1394)
!1513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !53, line: 54, size: 128, elements: !1514)
!1514 = !{!1515, !1516}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1513, file: !53, line: 55, baseType: !139, size: 32)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1513, file: !53, line: 56, baseType: !1517, size: 64, offset: 64)
!1517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1518, size: 64)
!1518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !1519, line: 20, size: 1088, elements: !1520)
!1519 = !DIFile(filename: "./include/linux/pid_namespace.h", directory: "/home/lizy2001/genbc/linux")
!1520 = !{!1521, !1522, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1538, !1541, !1542}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !1518, file: !1519, line: 21, baseType: !238, size: 32)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "idr", scope: !1518, file: !1519, line: 22, baseType: !1523, size: 192, offset: 64)
!1523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !1524, line: 19, size: 192, elements: !1525)
!1524 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!1525 = !{!1526, !1527, !1528}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !1523, file: !1524, line: 20, baseType: !783, size: 128)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !1523, file: !1524, line: 21, baseType: !7, size: 32, offset: 128)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !1523, file: !1524, line: 22, baseType: !7, size: 32, offset: 160)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1518, file: !1519, line: 23, baseType: !376, size: 128, align: 64, offset: 256)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "pid_allocated", scope: !1518, file: !1519, line: 24, baseType: !7, size: 32, offset: 384)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "child_reaper", scope: !1518, file: !1519, line: 25, baseType: !1244, size: 64, offset: 448)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "pid_cachep", scope: !1518, file: !1519, line: 26, baseType: !968, size: 64, offset: 512)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1518, file: !1519, line: 27, baseType: !7, size: 32, offset: 576)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1518, file: !1519, line: 28, baseType: !1517, size: 64, offset: 640)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1518, file: !1519, line: 32, baseType: !1536, size: 64, offset: 704)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 64)
!1537 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !443, line: 18, flags: DIFlagFwdDecl)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !1518, file: !1519, line: 33, baseType: !1539, size: 64, offset: 768)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 64)
!1540 = !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !1519, line: 33, flags: DIFlagFwdDecl)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "reboot", scope: !1518, file: !1519, line: 34, baseType: !139, size: 32, offset: 832)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1518, file: !1519, line: 35, baseType: !1543, size: 192, offset: 896)
!1543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !1544, line: 7, size: 192, elements: !1545)
!1544 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!1545 = !{!1546, !1547, !1551}
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !1543, file: !1544, line: 8, baseType: !175, size: 64)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1543, file: !1544, line: 9, baseType: !1548, size: 64, offset: 64)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 64)
!1549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1550)
!1550 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !1544, line: 5, flags: DIFlagFwdDecl)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !1543, file: !1544, line: 10, baseType: !7, size: 32, offset: 128)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1245, file: !1246, line: 872, baseType: !1553, size: 512, offset: 6016)
!1553 = !DICompositeType(tag: DW_TAG_array_type, baseType: !647, size: 512, elements: !1189)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1245, file: !1246, line: 873, baseType: !186, size: 128, offset: 6528)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1245, file: !1246, line: 874, baseType: !186, size: 128, offset: 6656)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1245, file: !1246, line: 876, baseType: !1557, size: 64, offset: 6784)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 64)
!1558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1559, line: 26, size: 192, elements: !1560)
!1559 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1560 = !{!1561, !1562}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1558, file: !1559, line: 27, baseType: !7, size: 32)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1558, file: !1559, line: 28, baseType: !1563, size: 128, offset: 64)
!1563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1564, line: 43, size: 128, elements: !1565)
!1564 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1565 = !{!1566, !1567}
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1563, file: !1564, line: 44, baseType: !813)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1563, file: !1564, line: 45, baseType: !186, size: 128)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1245, file: !1246, line: 879, baseType: !713, size: 64, offset: 6848)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1245, file: !1246, line: 882, baseType: !713, size: 64, offset: 6912)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1245, file: !1246, line: 884, baseType: !429, size: 64, offset: 6976)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1245, file: !1246, line: 885, baseType: !429, size: 64, offset: 7040)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1245, file: !1246, line: 890, baseType: !429, size: 64, offset: 7104)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1245, file: !1246, line: 891, baseType: !1574, size: 128, offset: 7168)
!1574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1246, line: 242, size: 128, elements: !1575)
!1575 = !{!1576, !1577, !1578}
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1574, file: !1246, line: 244, baseType: !429, size: 64)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1574, file: !1246, line: 245, baseType: !429, size: 64, offset: 64)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1574, file: !1246, line: 246, baseType: !813, offset: 128)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1245, file: !1246, line: 900, baseType: !126, size: 64, offset: 7296)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1245, file: !1246, line: 901, baseType: !126, size: 64, offset: 7360)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1245, file: !1246, line: 904, baseType: !429, size: 64, offset: 7424)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1245, file: !1246, line: 907, baseType: !429, size: 64, offset: 7488)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1245, file: !1246, line: 910, baseType: !126, size: 64, offset: 7552)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1245, file: !1246, line: 911, baseType: !126, size: 64, offset: 7616)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1245, file: !1246, line: 914, baseType: !1586, size: 640, offset: 7680)
!1586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1587, line: 123, size: 640, elements: !1588)
!1587 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1588 = !{!1589, !1595, !1596}
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1586, file: !1587, line: 124, baseType: !1590, size: 576)
!1590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1591, size: 576, elements: !293)
!1591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1587, line: 108, size: 192, elements: !1592)
!1592 = !{!1593, !1594}
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1591, file: !1587, line: 109, baseType: !429, size: 64)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1591, file: !1587, line: 110, baseType: !1366, size: 128, offset: 64)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1586, file: !1587, line: 125, baseType: !7, size: 32, offset: 576)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1586, file: !1587, line: 126, baseType: !7, size: 32, offset: 608)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1245, file: !1246, line: 917, baseType: !1598, size: 192, offset: 8320)
!1598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1587, line: 134, size: 192, elements: !1599)
!1599 = !{!1600, !1601}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1598, file: !1587, line: 135, baseType: !376, size: 128, align: 64)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1598, file: !1587, line: 136, baseType: !7, size: 32, offset: 128)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1245, file: !1246, line: 923, baseType: !1603, size: 64, offset: 8512)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64)
!1604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1605)
!1605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1606, line: 111, size: 1280, elements: !1607)
!1606 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1607 = !{!1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1627, !1628, !1629, !1630, !1631, !1632, !1739, !1740, !1741, !1742, !1768, !1769, !1779}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1605, file: !1606, line: 112, baseType: !220, size: 32)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1605, file: !1606, line: 120, baseType: !442, size: 32, offset: 32)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1605, file: !1606, line: 121, baseType: !450, size: 32, offset: 64)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1605, file: !1606, line: 122, baseType: !442, size: 32, offset: 96)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1605, file: !1606, line: 123, baseType: !450, size: 32, offset: 128)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1605, file: !1606, line: 124, baseType: !442, size: 32, offset: 160)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1605, file: !1606, line: 125, baseType: !450, size: 32, offset: 192)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1605, file: !1606, line: 126, baseType: !442, size: 32, offset: 224)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1605, file: !1606, line: 127, baseType: !450, size: 32, offset: 256)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1605, file: !1606, line: 128, baseType: !7, size: 32, offset: 288)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1605, file: !1606, line: 129, baseType: !1619, size: 64, offset: 320)
!1619 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1620, line: 26, baseType: !1621)
!1620 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1620, line: 24, size: 64, elements: !1622)
!1622 = !{!1623}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1621, file: !1620, line: 25, baseType: !1624, size: 64)
!1624 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 64, elements: !1625)
!1625 = !{!1626}
!1626 = !DISubrange(count: 2)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1605, file: !1606, line: 130, baseType: !1619, size: 64, offset: 384)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1605, file: !1606, line: 131, baseType: !1619, size: 64, offset: 448)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1605, file: !1606, line: 132, baseType: !1619, size: 64, offset: 512)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1605, file: !1606, line: 133, baseType: !1619, size: 64, offset: 576)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1605, file: !1606, line: 135, baseType: !124, size: 8, offset: 640)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1605, file: !1606, line: 137, baseType: !1633, size: 64, offset: 704)
!1633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1634, size: 64)
!1634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1635, line: 189, size: 1664, elements: !1636)
!1635 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1636 = !{!1637, !1638, !1641, !1646, !1647, !1650, !1651, !1656, !1657, !1658, !1659, !1661, !1662, !1663, !1664, !1665, !1703, !1724}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1634, file: !1635, line: 190, baseType: !242, size: 32)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1634, file: !1635, line: 191, baseType: !1639, size: 32, offset: 32)
!1639 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1635, line: 28, baseType: !1640)
!1640 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !133, line: 98, baseType: !1467)
!1641 = !DIDerivedType(tag: DW_TAG_member, scope: !1634, file: !1635, line: 192, baseType: !1642, size: 192, offset: 64)
!1642 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1634, file: !1635, line: 192, size: 192, elements: !1643)
!1643 = !{!1644, !1645}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1642, file: !1635, line: 193, baseType: !186, size: 128)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1642, file: !1635, line: 194, baseType: !800, size: 192, align: 64)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1634, file: !1635, line: 199, baseType: !807, size: 256, offset: 256)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1634, file: !1635, line: 200, baseType: !1648, size: 64, offset: 512)
!1648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 64)
!1649 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1635, line: 200, flags: DIFlagFwdDecl)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1634, file: !1635, line: 201, baseType: !118, size: 64, offset: 576)
!1651 = !DIDerivedType(tag: DW_TAG_member, scope: !1634, file: !1635, line: 202, baseType: !1652, size: 64, offset: 640)
!1652 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1634, file: !1635, line: 202, size: 64, elements: !1653)
!1653 = !{!1654, !1655}
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1652, file: !1635, line: 203, baseType: !545, size: 64)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1652, file: !1635, line: 204, baseType: !545, size: 64)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1634, file: !1635, line: 206, baseType: !545, size: 64, offset: 704)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1634, file: !1635, line: 207, baseType: !442, size: 32, offset: 768)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1634, file: !1635, line: 208, baseType: !450, size: 32, offset: 800)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1634, file: !1635, line: 209, baseType: !1660, size: 32, offset: 832)
!1660 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1635, line: 31, baseType: !564)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1634, file: !1635, line: 210, baseType: !131, size: 16, offset: 864)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1634, file: !1635, line: 211, baseType: !131, size: 16, offset: 880)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1634, file: !1635, line: 215, baseType: !1233, size: 16, offset: 896)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1634, file: !1635, line: 222, baseType: !126, size: 64, offset: 960)
!1665 = !DIDerivedType(tag: DW_TAG_member, scope: !1634, file: !1635, line: 239, baseType: !1666, size: 320, offset: 1024)
!1666 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1634, file: !1635, line: 239, size: 320, elements: !1667)
!1667 = !{!1668, !1695}
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1666, file: !1635, line: 240, baseType: !1669, size: 320)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1635, line: 108, size: 320, elements: !1670)
!1670 = !{!1671, !1672, !1684, !1687, !1694}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1669, file: !1635, line: 110, baseType: !126, size: 64)
!1672 = !DIDerivedType(tag: DW_TAG_member, scope: !1669, file: !1635, line: 111, baseType: !1673, size: 64, offset: 64)
!1673 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1669, file: !1635, line: 111, size: 64, elements: !1674)
!1674 = !{!1675, !1683}
!1675 = !DIDerivedType(tag: DW_TAG_member, scope: !1673, file: !1635, line: 112, baseType: !1676, size: 64)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1673, file: !1635, line: 112, size: 64, elements: !1677)
!1677 = !{!1678, !1679}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1676, file: !1635, line: 114, baseType: !892, size: 16)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1676, file: !1635, line: 115, baseType: !1680, size: 48, offset: 16)
!1680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !119, size: 48, elements: !1681)
!1681 = !{!1682}
!1682 = !DISubrange(count: 6)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1673, file: !1635, line: 121, baseType: !126, size: 64)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1669, file: !1635, line: 123, baseType: !1685, size: 64, offset: 128)
!1685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1686, size: 64)
!1686 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1635, line: 96, flags: DIFlagFwdDecl)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1669, file: !1635, line: 124, baseType: !1688, size: 64, offset: 192)
!1688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 64)
!1689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1635, line: 102, size: 192, elements: !1690)
!1690 = !{!1691, !1692, !1693}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1689, file: !1635, line: 103, baseType: !376, size: 128, align: 64)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1689, file: !1635, line: 104, baseType: !242, size: 32, offset: 128)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1689, file: !1635, line: 105, baseType: !497, size: 8, offset: 160)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1669, file: !1635, line: 125, baseType: !256, size: 64, offset: 256)
!1695 = !DIDerivedType(tag: DW_TAG_member, scope: !1666, file: !1635, line: 241, baseType: !1696, size: 320)
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1666, file: !1635, line: 241, size: 320, elements: !1697)
!1697 = !{!1698, !1699, !1700, !1701, !1702}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1696, file: !1635, line: 242, baseType: !126, size: 64)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1696, file: !1635, line: 243, baseType: !126, size: 64, offset: 64)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1696, file: !1635, line: 244, baseType: !1685, size: 64, offset: 128)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1696, file: !1635, line: 245, baseType: !1688, size: 64, offset: 192)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1696, file: !1635, line: 246, baseType: !122, size: 64, offset: 256)
!1703 = !DIDerivedType(tag: DW_TAG_member, scope: !1634, file: !1635, line: 254, baseType: !1704, size: 256, offset: 1344)
!1704 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1634, file: !1635, line: 254, size: 256, elements: !1705)
!1705 = !{!1706, !1712}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1704, file: !1635, line: 255, baseType: !1707, size: 256)
!1707 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1635, line: 128, size: 256, elements: !1708)
!1708 = !{!1709, !1710}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1707, file: !1635, line: 129, baseType: !118, size: 64)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1707, file: !1635, line: 130, baseType: !1711, size: 256)
!1711 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 256, elements: !1189)
!1712 = !DIDerivedType(tag: DW_TAG_member, scope: !1704, file: !1635, line: 256, baseType: !1713, size: 256)
!1713 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1704, file: !1635, line: 256, size: 256, elements: !1714)
!1714 = !{!1715, !1716}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1713, file: !1635, line: 258, baseType: !186, size: 128)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1713, file: !1635, line: 259, baseType: !1717, size: 128, offset: 128)
!1717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1718, line: 22, size: 128, elements: !1719)
!1718 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1719 = !{!1720, !1723}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1717, file: !1718, line: 23, baseType: !1721, size: 64)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 64)
!1722 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1718, line: 23, flags: DIFlagFwdDecl)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1717, file: !1718, line: 24, baseType: !126, size: 64, offset: 64)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1634, file: !1635, line: 274, baseType: !1725, size: 64, offset: 1600)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 64)
!1726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1635, line: 170, size: 192, elements: !1727)
!1727 = !{!1728, !1737, !1738}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1726, file: !1635, line: 171, baseType: !1729, size: 64)
!1729 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1635, line: 165, baseType: !1730)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 64)
!1731 = !DISubroutineType(types: !1732)
!1732 = !{!139, !1633, !1733, !1735, !1633}
!1733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1734, size: 64)
!1734 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1686)
!1735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 64)
!1736 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1707)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1726, file: !1635, line: 172, baseType: !1633, size: 64, offset: 64)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1726, file: !1635, line: 173, baseType: !1685, size: 64, offset: 128)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1605, file: !1606, line: 138, baseType: !1633, size: 64, offset: 768)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1605, file: !1606, line: 139, baseType: !1633, size: 64, offset: 832)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1605, file: !1606, line: 140, baseType: !1633, size: 64, offset: 896)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1605, file: !1606, line: 145, baseType: !1743, size: 64, offset: 960)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 64)
!1744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1745, line: 13, size: 896, elements: !1746)
!1745 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1746 = !{!1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1744, file: !1745, line: 14, baseType: !242, size: 32)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1744, file: !1745, line: 15, baseType: !220, size: 32, offset: 32)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1744, file: !1745, line: 16, baseType: !220, size: 32, offset: 64)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1744, file: !1745, line: 21, baseType: !175, size: 64, offset: 128)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1744, file: !1745, line: 27, baseType: !126, size: 64, offset: 192)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1744, file: !1745, line: 28, baseType: !126, size: 64, offset: 256)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1744, file: !1745, line: 29, baseType: !175, size: 64, offset: 320)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1744, file: !1745, line: 32, baseType: !647, size: 128, offset: 384)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1744, file: !1745, line: 33, baseType: !442, size: 32, offset: 512)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1744, file: !1745, line: 37, baseType: !175, size: 64, offset: 576)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1744, file: !1745, line: 44, baseType: !1758, size: 256, offset: 640)
!1758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1759, line: 15, size: 256, elements: !1760)
!1759 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1760 = !{!1761, !1762, !1763, !1764, !1765, !1766, !1767}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1758, file: !1759, line: 16, baseType: !813)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1758, file: !1759, line: 18, baseType: !139, size: 32)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1758, file: !1759, line: 19, baseType: !139, size: 32, offset: 32)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1758, file: !1759, line: 20, baseType: !139, size: 32, offset: 64)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1758, file: !1759, line: 21, baseType: !139, size: 32, offset: 96)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1758, file: !1759, line: 22, baseType: !126, size: 64, offset: 128)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1758, file: !1759, line: 23, baseType: !126, size: 64, offset: 192)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1605, file: !1606, line: 146, baseType: !1536, size: 64, offset: 1024)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1605, file: !1606, line: 147, baseType: !1770, size: 64, offset: 1088)
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 64)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1606, line: 25, size: 64, elements: !1772)
!1772 = !{!1773, !1774, !1775}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1771, file: !1606, line: 26, baseType: !220, size: 32)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1771, file: !1606, line: 27, baseType: !139, size: 32, offset: 32)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1771, file: !1606, line: 28, baseType: !1776, offset: 64)
!1776 = !DICompositeType(tag: DW_TAG_array_type, baseType: !450, elements: !1777)
!1777 = !{!1778}
!1778 = !DISubrange(count: 0)
!1779 = !DIDerivedType(tag: DW_TAG_member, scope: !1605, file: !1606, line: 149, baseType: !1780, size: 128, offset: 1152)
!1780 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1605, file: !1606, line: 149, size: 128, elements: !1781)
!1781 = !{!1782, !1783}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1780, file: !1606, line: 150, baseType: !139, size: 32)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1780, file: !1606, line: 151, baseType: !376, size: 128, align: 64)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1245, file: !1246, line: 926, baseType: !1603, size: 64, offset: 8576)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1245, file: !1246, line: 929, baseType: !1603, size: 64, offset: 8640)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1245, file: !1246, line: 933, baseType: !1633, size: 64, offset: 8704)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1245, file: !1246, line: 943, baseType: !1788, size: 128, offset: 8768)
!1788 = !DICompositeType(tag: DW_TAG_array_type, baseType: !119, size: 128, elements: !1789)
!1789 = !{!1790}
!1790 = !DISubrange(count: 16)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1245, file: !1246, line: 945, baseType: !1792, size: 64, offset: 8896)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 64)
!1793 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1246, line: 49, flags: DIFlagFwdDecl)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1245, file: !1246, line: 956, baseType: !1795, size: 64, offset: 8960)
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 64)
!1796 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1246, line: 45, flags: DIFlagFwdDecl)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1245, file: !1246, line: 959, baseType: !1798, size: 64, offset: 9024)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 64)
!1799 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1246, line: 959, flags: DIFlagFwdDecl)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1245, file: !1246, line: 962, baseType: !1801, size: 64, offset: 9088)
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 64)
!1802 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1246, line: 66, flags: DIFlagFwdDecl)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1245, file: !1246, line: 966, baseType: !1804, size: 64, offset: 9152)
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 64)
!1805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1806, line: 31, size: 576, elements: !1807)
!1806 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!1807 = !{!1808, !1809, !1812, !1815, !1818, !1819, !1822, !1825, !1826}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1805, file: !1806, line: 32, baseType: !220, size: 32)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !1805, file: !1806, line: 33, baseType: !1810, size: 64, offset: 64)
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 64)
!1811 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !1806, line: 9, flags: DIFlagFwdDecl)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !1805, file: !1806, line: 34, baseType: !1813, size: 64, offset: 128)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 64)
!1814 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !1806, line: 10, flags: DIFlagFwdDecl)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !1805, file: !1806, line: 35, baseType: !1816, size: 64, offset: 192)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 64)
!1817 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !1806, line: 8, flags: DIFlagFwdDecl)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !1805, file: !1806, line: 36, baseType: !1517, size: 64, offset: 256)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !1805, file: !1806, line: 37, baseType: !1820, size: 64, offset: 320)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 64)
!1821 = !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !1635, line: 34, flags: DIFlagFwdDecl)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !1805, file: !1806, line: 38, baseType: !1823, size: 64, offset: 384)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 64)
!1824 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !1806, line: 38, flags: DIFlagFwdDecl)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !1805, file: !1806, line: 39, baseType: !1823, size: 64, offset: 448)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !1805, file: !1806, line: 40, baseType: !1827, size: 64, offset: 512)
!1827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1828, size: 64)
!1828 = !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !1806, line: 12, flags: DIFlagFwdDecl)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1245, file: !1246, line: 969, baseType: !1830, size: 64, offset: 9216)
!1830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1831, size: 64)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1832, line: 82, size: 7296, elements: !1833)
!1832 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1833 = !{!1834, !1835, !1836, !1837, !1838, !1839, !1840, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1869, !1878, !1879, !1881, !1882, !1883, !1884, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1914, !1915, !1922, !1923, !1924, !1925, !1926, !1927}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1831, file: !1832, line: 83, baseType: !242, size: 32)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1831, file: !1832, line: 84, baseType: !220, size: 32, offset: 32)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1831, file: !1832, line: 85, baseType: !139, size: 32, offset: 64)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1831, file: !1832, line: 86, baseType: !186, size: 128, offset: 128)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1831, file: !1832, line: 88, baseType: !1504, size: 128, offset: 256)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1831, file: !1832, line: 91, baseType: !1244, size: 64, offset: 384)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1831, file: !1832, line: 94, baseType: !1841, size: 192, offset: 448)
!1841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1842, line: 30, size: 192, elements: !1843)
!1842 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1843 = !{!1844, !1845}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1841, file: !1842, line: 31, baseType: !186, size: 128)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1841, file: !1842, line: 32, baseType: !1846, size: 64, offset: 128)
!1846 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1847, line: 25, baseType: !1848)
!1847 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1848 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1847, line: 23, size: 64, elements: !1849)
!1849 = !{!1850}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1848, file: !1847, line: 24, baseType: !1393, size: 64)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1831, file: !1832, line: 97, baseType: !643, size: 64, offset: 640)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1831, file: !1832, line: 100, baseType: !139, size: 32, offset: 704)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1831, file: !1832, line: 106, baseType: !139, size: 32, offset: 736)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1831, file: !1832, line: 107, baseType: !1244, size: 64, offset: 768)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1831, file: !1832, line: 110, baseType: !139, size: 32, offset: 832)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1831, file: !1832, line: 111, baseType: !7, size: 32, offset: 864)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1831, file: !1832, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1831, file: !1832, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1831, file: !1832, line: 128, baseType: !139, size: 32, offset: 928)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1831, file: !1832, line: 129, baseType: !186, size: 128, offset: 960)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1831, file: !1832, line: 132, baseType: !1315, size: 512, offset: 1088)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1831, file: !1832, line: 133, baseType: !1323, size: 64, offset: 1600)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1831, file: !1832, line: 140, baseType: !1864, size: 256, offset: 1664)
!1864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1865, size: 256, elements: !1625)
!1865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1832, line: 38, size: 128, elements: !1866)
!1866 = !{!1867, !1868}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1865, file: !1832, line: 39, baseType: !429, size: 64)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1865, file: !1832, line: 40, baseType: !429, size: 64, offset: 64)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1831, file: !1832, line: 146, baseType: !1870, size: 192, offset: 1920)
!1870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1832, line: 66, size: 192, elements: !1871)
!1871 = !{!1872}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1870, file: !1832, line: 67, baseType: !1873, size: 192)
!1873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1832, line: 47, size: 192, elements: !1874)
!1874 = !{!1875, !1876, !1877}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1873, file: !1832, line: 48, baseType: !177, size: 64)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1873, file: !1832, line: 49, baseType: !177, size: 64, offset: 64)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1873, file: !1832, line: 50, baseType: !177, size: 64, offset: 128)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1831, file: !1832, line: 150, baseType: !1586, size: 640, offset: 2112)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1831, file: !1832, line: 153, baseType: !1880, size: 256, offset: 2752)
!1880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1494, size: 256, elements: !1189)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1831, file: !1832, line: 159, baseType: !1494, size: 64, offset: 3008)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1831, file: !1832, line: 162, baseType: !139, size: 32, offset: 3072)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1831, file: !1832, line: 164, baseType: !233, size: 64, offset: 3136)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1831, file: !1832, line: 175, baseType: !1885, size: 32, offset: 3200)
!1885 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !399, line: 805, baseType: !1886)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !399, line: 798, size: 32, elements: !1887)
!1887 = !{!1888, !1889}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1886, file: !399, line: 803, baseType: !398, size: 32)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1886, file: !399, line: 804, baseType: !203, offset: 32)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1831, file: !1832, line: 176, baseType: !429, size: 64, offset: 3264)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1831, file: !1832, line: 176, baseType: !429, size: 64, offset: 3328)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1831, file: !1832, line: 176, baseType: !429, size: 64, offset: 3392)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1831, file: !1832, line: 176, baseType: !429, size: 64, offset: 3456)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1831, file: !1832, line: 177, baseType: !429, size: 64, offset: 3520)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1831, file: !1832, line: 178, baseType: !429, size: 64, offset: 3584)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1831, file: !1832, line: 179, baseType: !1574, size: 128, offset: 3648)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1831, file: !1832, line: 180, baseType: !126, size: 64, offset: 3776)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1831, file: !1832, line: 180, baseType: !126, size: 64, offset: 3840)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1831, file: !1832, line: 180, baseType: !126, size: 64, offset: 3904)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1831, file: !1832, line: 180, baseType: !126, size: 64, offset: 3968)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1831, file: !1832, line: 181, baseType: !126, size: 64, offset: 4032)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1831, file: !1832, line: 181, baseType: !126, size: 64, offset: 4096)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1831, file: !1832, line: 181, baseType: !126, size: 64, offset: 4160)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1831, file: !1832, line: 181, baseType: !126, size: 64, offset: 4224)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1831, file: !1832, line: 182, baseType: !126, size: 64, offset: 4288)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1831, file: !1832, line: 182, baseType: !126, size: 64, offset: 4352)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1831, file: !1832, line: 182, baseType: !126, size: 64, offset: 4416)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1831, file: !1832, line: 182, baseType: !126, size: 64, offset: 4480)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1831, file: !1832, line: 183, baseType: !126, size: 64, offset: 4544)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1831, file: !1832, line: 183, baseType: !126, size: 64, offset: 4608)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1831, file: !1832, line: 184, baseType: !1912, offset: 4672)
!1912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !1913, line: 12, elements: !217)
!1913 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1831, file: !1832, line: 192, baseType: !431, size: 64, offset: 4672)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1831, file: !1832, line: 203, baseType: !1916, size: 2048, offset: 4736)
!1916 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1917, size: 2048, elements: !1789)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1918, line: 43, size: 128, elements: !1919)
!1918 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!1919 = !{!1920, !1921}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !1917, file: !1918, line: 44, baseType: !340, size: 64)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !1917, file: !1918, line: 45, baseType: !340, size: 64, offset: 64)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1831, file: !1832, line: 220, baseType: !497, size: 8, offset: 6784)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1831, file: !1832, line: 221, baseType: !1233, size: 16, offset: 6800)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1831, file: !1832, line: 222, baseType: !1233, size: 16, offset: 6816)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1831, file: !1832, line: 224, baseType: !1008, size: 64, offset: 6848)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1831, file: !1832, line: 227, baseType: !198, size: 192, offset: 6912)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1831, file: !1832, line: 233, baseType: !198, size: 192, offset: 7104)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1245, file: !1246, line: 970, baseType: !1929, size: 64, offset: 9280)
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 64)
!1930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1832, line: 20, size: 16576, elements: !1931)
!1931 = !{!1932, !1933, !1934, !1935}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !1930, file: !1832, line: 21, baseType: !203)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1930, file: !1832, line: 22, baseType: !242, size: 32)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !1930, file: !1832, line: 23, baseType: !1504, size: 128, offset: 64)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1930, file: !1832, line: 24, baseType: !1936, size: 16384, offset: 192)
!1936 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1937, size: 16384, elements: !297)
!1937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1842, line: 49, size: 256, elements: !1938)
!1938 = !{!1939}
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1937, file: !1842, line: 50, baseType: !1940, size: 256)
!1940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1842, line: 35, size: 256, elements: !1941)
!1941 = !{!1942, !1949, !1950, !1956}
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !1940, file: !1842, line: 37, baseType: !1943, size: 64)
!1943 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !1944, line: 19, baseType: !1945)
!1944 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!1945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 64)
!1946 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !1944, line: 18, baseType: !1947)
!1947 = !DISubroutineType(types: !1948)
!1948 = !{null, !139}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !1940, file: !1842, line: 38, baseType: !126, size: 64, offset: 64)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !1940, file: !1842, line: 44, baseType: !1951, size: 64, offset: 128)
!1951 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !1944, line: 22, baseType: !1952)
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 64)
!1953 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !1944, line: 21, baseType: !1954)
!1954 = !DISubroutineType(types: !1955)
!1955 = !{null}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !1940, file: !1842, line: 46, baseType: !1846, size: 64, offset: 192)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1245, file: !1246, line: 971, baseType: !1846, size: 64, offset: 9344)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1245, file: !1246, line: 972, baseType: !1846, size: 64, offset: 9408)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1245, file: !1246, line: 974, baseType: !1846, size: 64, offset: 9472)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1245, file: !1246, line: 975, baseType: !1841, size: 192, offset: 9536)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1245, file: !1246, line: 976, baseType: !126, size: 64, offset: 9728)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1245, file: !1246, line: 977, baseType: !338, size: 64, offset: 9792)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1245, file: !1246, line: 978, baseType: !7, size: 32, offset: 9856)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1245, file: !1246, line: 980, baseType: !379, size: 64, offset: 9920)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1245, file: !1246, line: 989, baseType: !1966, size: 128, offset: 9984)
!1966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !1967, line: 35, size: 128, elements: !1968)
!1967 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!1968 = !{!1969, !1970, !1971}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1966, file: !1967, line: 36, baseType: !139, size: 32)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !1966, file: !1967, line: 37, baseType: !220, size: 32, offset: 32)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1966, file: !1967, line: 38, baseType: !1972, size: 64, offset: 64)
!1972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1973, size: 64)
!1973 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !1967, line: 23, flags: DIFlagFwdDecl)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1245, file: !1246, line: 992, baseType: !429, size: 64, offset: 10112)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1245, file: !1246, line: 993, baseType: !429, size: 64, offset: 10176)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1245, file: !1246, line: 996, baseType: !203, offset: 10240)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1245, file: !1246, line: 999, baseType: !813, offset: 10240)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1245, file: !1246, line: 1001, baseType: !1979, size: 64, offset: 10240)
!1979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1246, line: 636, size: 64, elements: !1980)
!1980 = !{!1981}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1979, file: !1246, line: 637, baseType: !1982, size: 64)
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1979, size: 64)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1245, file: !1246, line: 1005, baseType: !792, size: 128, offset: 10304)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1245, file: !1246, line: 1007, baseType: !1244, size: 64, offset: 10432)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1245, file: !1246, line: 1009, baseType: !1986, size: 64, offset: 10496)
!1986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1987, size: 64)
!1987 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1246, line: 1009, flags: DIFlagFwdDecl)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1245, file: !1246, line: 1043, baseType: !118, size: 64, offset: 10560)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1245, file: !1246, line: 1046, baseType: !1990, size: 64, offset: 10624)
!1990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 64)
!1991 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1246, line: 41, flags: DIFlagFwdDecl)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1245, file: !1246, line: 1050, baseType: !1993, size: 64, offset: 10688)
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 64)
!1994 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1246, line: 42, flags: DIFlagFwdDecl)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1245, file: !1246, line: 1054, baseType: !1996, size: 64, offset: 10752)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 64)
!1997 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1246, line: 55, flags: DIFlagFwdDecl)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1245, file: !1246, line: 1056, baseType: !1999, size: 64, offset: 10816)
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 64)
!2000 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1246, line: 40, flags: DIFlagFwdDecl)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1245, file: !1246, line: 1058, baseType: !2002, size: 64, offset: 10880)
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 64)
!2003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2004, line: 99, size: 704, elements: !2005)
!2004 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2005 = !{!2006, !2007, !2008, !2009, !2010, !2011, !2012, !2031, !2032}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2003, file: !2004, line: 100, baseType: !175, size: 64)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2003, file: !2004, line: 101, baseType: !220, size: 32, offset: 64)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2003, file: !2004, line: 102, baseType: !220, size: 32, offset: 96)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2003, file: !2004, line: 105, baseType: !203, offset: 128)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2003, file: !2004, line: 107, baseType: !131, size: 16, offset: 128)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2003, file: !2004, line: 109, baseType: !783, size: 128, offset: 192)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2003, file: !2004, line: 110, baseType: !2013, size: 64, offset: 320)
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 64)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2004, line: 73, size: 448, elements: !2015)
!2015 = !{!2016, !2019, !2020, !2025, !2030}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2014, file: !2004, line: 74, baseType: !2017, size: 64)
!2017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 64)
!2018 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !2004, line: 74, flags: DIFlagFwdDecl)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2014, file: !2004, line: 75, baseType: !2002, size: 64, offset: 64)
!2020 = !DIDerivedType(tag: DW_TAG_member, scope: !2014, file: !2004, line: 83, baseType: !2021, size: 128, offset: 128)
!2021 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2014, file: !2004, line: 83, size: 128, elements: !2022)
!2022 = !{!2023, !2024}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2021, file: !2004, line: 84, baseType: !186, size: 128)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2021, file: !2004, line: 85, baseType: !968, size: 64)
!2025 = !DIDerivedType(tag: DW_TAG_member, scope: !2014, file: !2004, line: 87, baseType: !2026, size: 128, offset: 256)
!2026 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2014, file: !2004, line: 87, size: 128, elements: !2027)
!2027 = !{!2028, !2029}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2026, file: !2004, line: 88, baseType: !647, size: 128)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2026, file: !2004, line: 89, baseType: !376, size: 128, align: 64)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2014, file: !2004, line: 92, baseType: !7, size: 32, offset: 384)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2003, file: !2004, line: 111, baseType: !643, size: 64, offset: 384)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2003, file: !2004, line: 113, baseType: !171, size: 256, offset: 448)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1245, file: !1246, line: 1061, baseType: !2034, size: 64, offset: 10944)
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2035, size: 64)
!2035 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1246, line: 43, flags: DIFlagFwdDecl)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1245, file: !1246, line: 1064, baseType: !126, size: 64, offset: 11008)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1245, file: !1246, line: 1065, baseType: !2038, size: 64, offset: 11072)
!2038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 64)
!2039 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1842, line: 14, baseType: !2040)
!2040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1842, line: 12, size: 384, elements: !2041)
!2041 = !{!2042}
!2042 = !DIDerivedType(tag: DW_TAG_member, scope: !2040, file: !1842, line: 13, baseType: !2043, size: 384)
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2040, file: !1842, line: 13, size: 384, elements: !2044)
!2044 = !{!2045, !2046, !2047, !2048}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !2043, file: !1842, line: 13, baseType: !139, size: 32)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !2043, file: !1842, line: 13, baseType: !139, size: 32, offset: 32)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !2043, file: !1842, line: 13, baseType: !139, size: 32, offset: 64)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !2043, file: !1842, line: 13, baseType: !2049, size: 256, offset: 128)
!2049 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !2050, line: 32, size: 256, elements: !2051)
!2050 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!2051 = !{!2052, !2057, !2070, !2076, !2085, !2105, !2110}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !2049, file: !2050, line: 37, baseType: !2053, size: 64)
!2053 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2049, file: !2050, line: 34, size: 64, elements: !2054)
!2054 = !{!2055, !2056}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2053, file: !2050, line: 35, baseType: !1483, size: 32)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2053, file: !2050, line: 36, baseType: !448, size: 32, offset: 32)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !2049, file: !2050, line: 45, baseType: !2058, size: 192)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2049, file: !2050, line: 40, size: 192, elements: !2059)
!2059 = !{!2060, !2062, !2063, !2069}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !2058, file: !2050, line: 41, baseType: !2061, size: 32)
!2061 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !325, line: 95, baseType: !139)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !2058, file: !2050, line: 42, baseType: !139, size: 32, offset: 32)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2058, file: !2050, line: 43, baseType: !2064, size: 64, offset: 64)
!2064 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !2050, line: 11, baseType: !2065)
!2065 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !2050, line: 8, size: 64, elements: !2066)
!2066 = !{!2067, !2068}
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2065, file: !2050, line: 9, baseType: !139, size: 32)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2065, file: !2050, line: 10, baseType: !118, size: 64)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !2058, file: !2050, line: 44, baseType: !139, size: 32, offset: 128)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !2049, file: !2050, line: 52, baseType: !2071, size: 128)
!2071 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2049, file: !2050, line: 48, size: 128, elements: !2072)
!2072 = !{!2073, !2074, !2075}
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2071, file: !2050, line: 49, baseType: !1483, size: 32)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2071, file: !2050, line: 50, baseType: !448, size: 32, offset: 32)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2071, file: !2050, line: 51, baseType: !2064, size: 64, offset: 64)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !2049, file: !2050, line: 61, baseType: !2077, size: 256)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2049, file: !2050, line: 55, size: 256, elements: !2078)
!2078 = !{!2079, !2080, !2081, !2082, !2084}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2077, file: !2050, line: 56, baseType: !1483, size: 32)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2077, file: !2050, line: 57, baseType: !448, size: 32, offset: 32)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2077, file: !2050, line: 58, baseType: !139, size: 32, offset: 64)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2077, file: !2050, line: 59, baseType: !2083, size: 64, offset: 128)
!2083 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !325, line: 94, baseType: !326)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2077, file: !2050, line: 60, baseType: !2083, size: 64, offset: 192)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !2049, file: !2050, line: 95, baseType: !2086, size: 256)
!2086 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2049, file: !2050, line: 64, size: 256, elements: !2087)
!2087 = !{!2088, !2089}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2086, file: !2050, line: 65, baseType: !118, size: 64)
!2089 = !DIDerivedType(tag: DW_TAG_member, scope: !2086, file: !2050, line: 77, baseType: !2090, size: 192, offset: 64)
!2090 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2086, file: !2050, line: 77, size: 192, elements: !2091)
!2091 = !{!2092, !2093, !2100}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2090, file: !2050, line: 82, baseType: !1233, size: 16)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2090, file: !2050, line: 88, baseType: !2094, size: 192)
!2094 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2090, file: !2050, line: 84, size: 192, elements: !2095)
!2095 = !{!2096, !2098, !2099}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2094, file: !2050, line: 85, baseType: !2097, size: 64)
!2097 = !DICompositeType(tag: DW_TAG_array_type, baseType: !119, size: 64, elements: !1353)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2094, file: !2050, line: 86, baseType: !118, size: 64, offset: 64)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2094, file: !2050, line: 87, baseType: !118, size: 64, offset: 128)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2090, file: !2050, line: 93, baseType: !2101, size: 96)
!2101 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2090, file: !2050, line: 90, size: 96, elements: !2102)
!2102 = !{!2103, !2104}
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2101, file: !2050, line: 91, baseType: !2097, size: 64)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2101, file: !2050, line: 92, baseType: !120, size: 32, offset: 64)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !2049, file: !2050, line: 101, baseType: !2106, size: 128)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2049, file: !2050, line: 98, size: 128, elements: !2107)
!2107 = !{!2108, !2109}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2106, file: !2050, line: 99, baseType: !327, size: 64)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2106, file: !2050, line: 100, baseType: !139, size: 32, offset: 64)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !2049, file: !2050, line: 108, baseType: !2111, size: 128)
!2111 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2049, file: !2050, line: 104, size: 128, elements: !2112)
!2112 = !{!2113, !2114, !2115}
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2111, file: !2050, line: 105, baseType: !118, size: 64)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2111, file: !2050, line: 106, baseType: !139, size: 32, offset: 64)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2111, file: !2050, line: 107, baseType: !7, size: 32, offset: 96)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1245, file: !1246, line: 1067, baseType: !1912, offset: 11136)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1245, file: !1246, line: 1099, baseType: !2118, size: 64, offset: 11136)
!2118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2119, size: 64)
!2119 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1246, line: 56, flags: DIFlagFwdDecl)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1245, file: !1246, line: 1103, baseType: !186, size: 128, offset: 11200)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1245, file: !1246, line: 1104, baseType: !2122, size: 64, offset: 11328)
!2122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 64)
!2123 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1246, line: 46, flags: DIFlagFwdDecl)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1245, file: !1246, line: 1105, baseType: !198, size: 192, offset: 11392)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1245, file: !1246, line: 1106, baseType: !7, size: 32, offset: 11584)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1245, file: !1246, line: 1109, baseType: !2127, size: 128, offset: 11648)
!2127 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2128, size: 128, elements: !1625)
!2128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2129, size: 64)
!2129 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1246, line: 51, flags: DIFlagFwdDecl)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1245, file: !1246, line: 1110, baseType: !198, size: 192, offset: 11776)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1245, file: !1246, line: 1111, baseType: !186, size: 128, offset: 11968)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1245, file: !1246, line: 1173, baseType: !2133, size: 64, offset: 12096)
!2133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2134, size: 64)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2135, line: 62, size: 256, align: 256, elements: !2136)
!2135 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2136 = !{!2137, !2138, !2139, !2144}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2134, file: !2135, line: 75, baseType: !120, size: 32)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2134, file: !2135, line: 90, baseType: !120, size: 32, offset: 32)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2134, file: !2135, line: 124, baseType: !2140, size: 64, offset: 64)
!2140 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2134, file: !2135, line: 109, size: 64, elements: !2141)
!2141 = !{!2142, !2143}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2140, file: !2135, line: 110, baseType: !430, size: 64)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2140, file: !2135, line: 112, baseType: !430, size: 64)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2134, file: !2135, line: 144, baseType: !120, size: 32, offset: 128)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1245, file: !1246, line: 1174, baseType: !426, size: 32, offset: 12160)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1245, file: !1246, line: 1179, baseType: !126, size: 64, offset: 12224)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1245, file: !1246, line: 1182, baseType: !2148, size: 128, offset: 12288)
!2148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1185, line: 76, size: 128, elements: !2149)
!2149 = !{!2150, !2155, !2156}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2148, file: !1185, line: 85, baseType: !2151, size: 64)
!2151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2152, line: 7, size: 64, elements: !2153)
!2152 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2153 = !{!2154}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2151, file: !2152, line: 12, baseType: !1390, size: 64)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2148, file: !1185, line: 88, baseType: !497, size: 8, offset: 64)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2148, file: !1185, line: 95, baseType: !497, size: 8, offset: 72)
!2157 = !DIDerivedType(tag: DW_TAG_member, scope: !1245, file: !1246, line: 1184, baseType: !2158, size: 128, offset: 12416)
!2158 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1245, file: !1246, line: 1184, size: 128, elements: !2159)
!2159 = !{!2160, !2161}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2158, file: !1246, line: 1185, baseType: !242, size: 32)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2158, file: !1246, line: 1186, baseType: !376, size: 128, align: 64)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1245, file: !1246, line: 1190, baseType: !2163, size: 64, offset: 12544)
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 64)
!2164 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1246, line: 53, flags: DIFlagFwdDecl)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1245, file: !1246, line: 1192, baseType: !2166, size: 128, offset: 12608)
!2166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1185, line: 64, size: 128, elements: !2167)
!2167 = !{!2168, !2169, !2170}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2166, file: !1185, line: 65, baseType: !765, size: 64)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2166, file: !1185, line: 67, baseType: !120, size: 32, offset: 64)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2166, file: !1185, line: 68, baseType: !120, size: 32, offset: 96)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1245, file: !1246, line: 1206, baseType: !139, size: 32, offset: 12736)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1245, file: !1246, line: 1207, baseType: !139, size: 32, offset: 12768)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1245, file: !1246, line: 1209, baseType: !126, size: 64, offset: 12800)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1245, file: !1246, line: 1219, baseType: !429, size: 64, offset: 12864)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1245, file: !1246, line: 1220, baseType: !429, size: 64, offset: 12928)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1245, file: !1246, line: 1317, baseType: !139, size: 32, offset: 12992)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1245, file: !1246, line: 1319, baseType: !1244, size: 64, offset: 13056)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1245, file: !1246, line: 1322, baseType: !2179, size: 64, offset: 13120)
!2179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2180, size: 64)
!2180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2181, line: 56, size: 512, elements: !2182)
!2181 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2182 = !{!2183, !2184, !2185, !2186, !2187, !2188, !2189, !2191}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2180, file: !2181, line: 57, baseType: !2179, size: 64)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2180, file: !2181, line: 58, baseType: !118, size: 64, offset: 64)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2180, file: !2181, line: 59, baseType: !126, size: 64, offset: 128)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2180, file: !2181, line: 60, baseType: !126, size: 64, offset: 192)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2180, file: !2181, line: 61, baseType: !853, size: 64, offset: 256)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2180, file: !2181, line: 62, baseType: !7, size: 32, offset: 320)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2180, file: !2181, line: 63, baseType: !2190, size: 64, offset: 384)
!2190 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !133, line: 153, baseType: !429)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2180, file: !2181, line: 64, baseType: !2192, size: 64, offset: 448)
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2193, size: 64)
!2193 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1245, file: !1246, line: 1326, baseType: !242, size: 32, offset: 13184)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1245, file: !1246, line: 1342, baseType: !118, size: 64, offset: 13248)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1245, file: !1246, line: 1343, baseType: !430, size: 64, offset: 13312)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1245, file: !1246, line: 1344, baseType: !429, size: 64, offset: 13376)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1245, file: !1246, line: 1345, baseType: !430, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1245, file: !1246, line: 1346, baseType: !430, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1245, file: !1246, line: 1347, baseType: !430, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1245, file: !1246, line: 1348, baseType: !376, size: 128, align: 64, offset: 13504)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1245, file: !1246, line: 1358, baseType: !2203, size: 34816, offset: 13824)
!2203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2204, line: 485, size: 34816, elements: !2205)
!2204 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2205 = !{!2206, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2235, !2236, !2237, !2238, !2239, !2240, !2243, !2244, !2245}
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2203, file: !2204, line: 487, baseType: !2207, size: 192)
!2207 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2208, size: 192, elements: !293)
!2208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2209, line: 16, size: 64, elements: !2210)
!2209 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2210 = !{!2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223}
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2208, file: !2209, line: 17, baseType: !892, size: 16)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2208, file: !2209, line: 18, baseType: !892, size: 16, offset: 16)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2208, file: !2209, line: 19, baseType: !892, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2208, file: !2209, line: 19, baseType: !892, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2208, file: !2209, line: 19, baseType: !892, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2208, file: !2209, line: 19, baseType: !892, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2208, file: !2209, line: 19, baseType: !892, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2208, file: !2209, line: 20, baseType: !892, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2208, file: !2209, line: 20, baseType: !892, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2208, file: !2209, line: 20, baseType: !892, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2208, file: !2209, line: 20, baseType: !892, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2208, file: !2209, line: 20, baseType: !892, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2208, file: !2209, line: 20, baseType: !892, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2203, file: !2204, line: 491, baseType: !126, size: 64, offset: 192)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2203, file: !2204, line: 495, baseType: !131, size: 16, offset: 256)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2203, file: !2204, line: 496, baseType: !131, size: 16, offset: 272)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2203, file: !2204, line: 497, baseType: !131, size: 16, offset: 288)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2203, file: !2204, line: 498, baseType: !131, size: 16, offset: 304)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2203, file: !2204, line: 502, baseType: !126, size: 64, offset: 320)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2203, file: !2204, line: 503, baseType: !126, size: 64, offset: 384)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2203, file: !2204, line: 514, baseType: !2232, size: 256, offset: 448)
!2232 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2233, size: 256, elements: !1189)
!2233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2234, size: 64)
!2234 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2204, line: 483, flags: DIFlagFwdDecl)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2203, file: !2204, line: 516, baseType: !126, size: 64, offset: 704)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2203, file: !2204, line: 518, baseType: !126, size: 64, offset: 768)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2203, file: !2204, line: 520, baseType: !126, size: 64, offset: 832)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2203, file: !2204, line: 521, baseType: !126, size: 64, offset: 896)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2203, file: !2204, line: 522, baseType: !126, size: 64, offset: 960)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2203, file: !2204, line: 528, baseType: !2241, size: 64, offset: 1024)
!2241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2242, size: 64)
!2242 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2204, line: 10, flags: DIFlagFwdDecl)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2203, file: !2204, line: 535, baseType: !126, size: 64, offset: 1088)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2203, file: !2204, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2203, file: !2204, line: 540, baseType: !2246, size: 33280, offset: 1536)
!2246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2247, line: 317, size: 33280, elements: !2248)
!2247 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2248 = !{!2249, !2250, !2251}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2246, file: !2247, line: 330, baseType: !7, size: 32)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2246, file: !2247, line: 337, baseType: !126, size: 64, offset: 64)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2246, file: !2247, line: 348, baseType: !2252, size: 32768, offset: 512)
!2252 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2247, line: 304, size: 32768, elements: !2253)
!2253 = !{!2254, !2269, !2308, !2358, !2371}
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2252, file: !2247, line: 305, baseType: !2255, size: 896)
!2255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2247, line: 12, size: 896, elements: !2256)
!2256 = !{!2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2268}
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2255, file: !2247, line: 13, baseType: !426, size: 32)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2255, file: !2247, line: 14, baseType: !426, size: 32, offset: 32)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2255, file: !2247, line: 15, baseType: !426, size: 32, offset: 64)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2255, file: !2247, line: 16, baseType: !426, size: 32, offset: 96)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2255, file: !2247, line: 17, baseType: !426, size: 32, offset: 128)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2255, file: !2247, line: 18, baseType: !426, size: 32, offset: 160)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2255, file: !2247, line: 19, baseType: !426, size: 32, offset: 192)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2255, file: !2247, line: 22, baseType: !2265, size: 640, offset: 224)
!2265 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 640, elements: !2266)
!2266 = !{!2267}
!2267 = !DISubrange(count: 20)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2255, file: !2247, line: 25, baseType: !426, size: 32, offset: 864)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2252, file: !2247, line: 306, baseType: !2270, size: 4096, align: 128)
!2270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2247, line: 34, size: 4096, align: 128, elements: !2271)
!2271 = !{!2272, !2273, !2274, !2275, !2276, !2291, !2292, !2293, !2297, !2299, !2303}
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2270, file: !2247, line: 35, baseType: !892, size: 16)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2270, file: !2247, line: 36, baseType: !892, size: 16, offset: 16)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2270, file: !2247, line: 37, baseType: !892, size: 16, offset: 32)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2270, file: !2247, line: 38, baseType: !892, size: 16, offset: 48)
!2276 = !DIDerivedType(tag: DW_TAG_member, scope: !2270, file: !2247, line: 39, baseType: !2277, size: 128, offset: 64)
!2277 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2270, file: !2247, line: 39, size: 128, elements: !2278)
!2278 = !{!2279, !2284}
!2279 = !DIDerivedType(tag: DW_TAG_member, scope: !2277, file: !2247, line: 40, baseType: !2280, size: 128)
!2280 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2277, file: !2247, line: 40, size: 128, elements: !2281)
!2281 = !{!2282, !2283}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2280, file: !2247, line: 41, baseType: !429, size: 64)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2280, file: !2247, line: 42, baseType: !429, size: 64, offset: 64)
!2284 = !DIDerivedType(tag: DW_TAG_member, scope: !2277, file: !2247, line: 44, baseType: !2285, size: 128)
!2285 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2277, file: !2247, line: 44, size: 128, elements: !2286)
!2286 = !{!2287, !2288, !2289, !2290}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2285, file: !2247, line: 45, baseType: !426, size: 32)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2285, file: !2247, line: 46, baseType: !426, size: 32, offset: 32)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2285, file: !2247, line: 47, baseType: !426, size: 32, offset: 64)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2285, file: !2247, line: 48, baseType: !426, size: 32, offset: 96)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2270, file: !2247, line: 51, baseType: !426, size: 32, offset: 192)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2270, file: !2247, line: 52, baseType: !426, size: 32, offset: 224)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2270, file: !2247, line: 55, baseType: !2294, size: 1024, offset: 256)
!2294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 1024, elements: !2295)
!2295 = !{!2296}
!2296 = !DISubrange(count: 32)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2270, file: !2247, line: 58, baseType: !2298, size: 2048, offset: 1280)
!2298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 2048, elements: !297)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2270, file: !2247, line: 60, baseType: !2300, size: 384, offset: 3328)
!2300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 384, elements: !2301)
!2301 = !{!2302}
!2302 = !DISubrange(count: 12)
!2303 = !DIDerivedType(tag: DW_TAG_member, scope: !2270, file: !2247, line: 62, baseType: !2304, size: 384, offset: 3712)
!2304 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2270, file: !2247, line: 62, size: 384, elements: !2305)
!2305 = !{!2306, !2307}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2304, file: !2247, line: 63, baseType: !2300, size: 384)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2304, file: !2247, line: 64, baseType: !2300, size: 384)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2252, file: !2247, line: 307, baseType: !2309, size: 1088)
!2309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2247, line: 79, size: 1088, elements: !2310)
!2310 = !{!2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2357}
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2309, file: !2247, line: 80, baseType: !426, size: 32)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2309, file: !2247, line: 81, baseType: !426, size: 32, offset: 32)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2309, file: !2247, line: 82, baseType: !426, size: 32, offset: 64)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2309, file: !2247, line: 83, baseType: !426, size: 32, offset: 96)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2309, file: !2247, line: 84, baseType: !426, size: 32, offset: 128)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2309, file: !2247, line: 85, baseType: !426, size: 32, offset: 160)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2309, file: !2247, line: 86, baseType: !426, size: 32, offset: 192)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2309, file: !2247, line: 88, baseType: !2265, size: 640, offset: 224)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2309, file: !2247, line: 89, baseType: !1375, size: 8, offset: 864)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2309, file: !2247, line: 90, baseType: !1375, size: 8, offset: 872)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2309, file: !2247, line: 91, baseType: !1375, size: 8, offset: 880)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2309, file: !2247, line: 92, baseType: !1375, size: 8, offset: 888)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2309, file: !2247, line: 93, baseType: !1375, size: 8, offset: 896)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2309, file: !2247, line: 94, baseType: !1375, size: 8, offset: 904)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2309, file: !2247, line: 95, baseType: !2326, size: 64, offset: 960)
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2327, size: 64)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2328, line: 11, size: 128, elements: !2329)
!2328 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2329 = !{!2330, !2331}
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2327, file: !2328, line: 12, baseType: !327, size: 64)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2327, file: !2328, line: 13, baseType: !2332, size: 64, offset: 64)
!2332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2333, size: 64)
!2333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2334, line: 56, size: 1344, elements: !2335)
!2334 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2335 = !{!2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356}
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2333, file: !2334, line: 61, baseType: !126, size: 64)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2333, file: !2334, line: 62, baseType: !126, size: 64, offset: 64)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2333, file: !2334, line: 63, baseType: !126, size: 64, offset: 128)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2333, file: !2334, line: 64, baseType: !126, size: 64, offset: 192)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2333, file: !2334, line: 65, baseType: !126, size: 64, offset: 256)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2333, file: !2334, line: 66, baseType: !126, size: 64, offset: 320)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2333, file: !2334, line: 68, baseType: !126, size: 64, offset: 384)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2333, file: !2334, line: 69, baseType: !126, size: 64, offset: 448)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2333, file: !2334, line: 70, baseType: !126, size: 64, offset: 512)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2333, file: !2334, line: 71, baseType: !126, size: 64, offset: 576)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2333, file: !2334, line: 72, baseType: !126, size: 64, offset: 640)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2333, file: !2334, line: 73, baseType: !126, size: 64, offset: 704)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2333, file: !2334, line: 74, baseType: !126, size: 64, offset: 768)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2333, file: !2334, line: 75, baseType: !126, size: 64, offset: 832)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2333, file: !2334, line: 76, baseType: !126, size: 64, offset: 896)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2333, file: !2334, line: 81, baseType: !126, size: 64, offset: 960)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2333, file: !2334, line: 83, baseType: !126, size: 64, offset: 1024)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2333, file: !2334, line: 84, baseType: !126, size: 64, offset: 1088)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2333, file: !2334, line: 85, baseType: !126, size: 64, offset: 1152)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2333, file: !2334, line: 86, baseType: !126, size: 64, offset: 1216)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2333, file: !2334, line: 87, baseType: !126, size: 64, offset: 1280)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2309, file: !2247, line: 96, baseType: !426, size: 32, offset: 1024)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2252, file: !2247, line: 308, baseType: !2359, size: 4608, align: 512)
!2359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2247, line: 289, size: 4608, align: 512, elements: !2360)
!2360 = !{!2361, !2362, !2369}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2359, file: !2247, line: 290, baseType: !2270, size: 4096, align: 128)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2359, file: !2247, line: 291, baseType: !2363, size: 512, offset: 4096)
!2363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2247, line: 268, size: 512, elements: !2364)
!2364 = !{!2365, !2366, !2367}
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2363, file: !2247, line: 269, baseType: !429, size: 64)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2363, file: !2247, line: 270, baseType: !429, size: 64, offset: 64)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2363, file: !2247, line: 271, baseType: !2368, size: 384, offset: 128)
!2368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 384, elements: !1681)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2359, file: !2247, line: 292, baseType: !2370, offset: 4608)
!2370 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1375, elements: !1777)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2252, file: !2247, line: 309, baseType: !2372, size: 32768)
!2372 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1375, size: 32768, elements: !2373)
!2373 = !{!2374}
!2374 = !DISubrange(count: 4096)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1241, file: !767, line: 378, baseType: !2376, size: 64, offset: 64)
!2376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 64)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1237, file: !767, line: 384, baseType: !1558, size: 192, offset: 192)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1012, file: !767, line: 500, baseType: !203, offset: 6656)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1012, file: !767, line: 501, baseType: !2380, size: 64, offset: 6656)
!2380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 64)
!2381 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !767, line: 387, flags: DIFlagFwdDecl)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1012, file: !767, line: 516, baseType: !1536, size: 64, offset: 6720)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1012, file: !767, line: 519, baseType: !368, size: 64, offset: 6784)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1012, file: !767, line: 521, baseType: !2385, size: 64, offset: 6848)
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2386, size: 64)
!2386 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !767, line: 521, flags: DIFlagFwdDecl)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1012, file: !767, line: 545, baseType: !220, size: 32, offset: 6912)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1012, file: !767, line: 548, baseType: !497, size: 8, offset: 6944)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1012, file: !767, line: 550, baseType: !2390, offset: 6952)
!2390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2391, line: 142, elements: !217)
!2391 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1012, file: !767, line: 554, baseType: !171, size: 256, offset: 6976)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1012, file: !767, line: 557, baseType: !426, size: 32, offset: 7232)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1009, file: !767, line: 565, baseType: !167, offset: 7296)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1005, file: !767, line: 151, baseType: !220, size: 32)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !997, file: !767, line: 156, baseType: !203, offset: 256)
!2397 = !DIDerivedType(tag: DW_TAG_member, scope: !771, file: !767, line: 159, baseType: !2398, size: 128)
!2398 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !771, file: !767, line: 159, size: 128, elements: !2399)
!2399 = !{!2400, !2464}
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2398, file: !767, line: 161, baseType: !2401, size: 64)
!2401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2402, size: 64)
!2402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !31, line: 110, size: 1152, elements: !2403)
!2403 = !{!2404, !2414, !2435, !2436, !2437, !2438, !2439, !2451, !2452, !2453}
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !2402, file: !31, line: 111, baseType: !2405, size: 384)
!2405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !31, line: 19, size: 384, elements: !2406)
!2406 = !{!2407, !2409, !2410, !2411, !2412, !2413}
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !2405, file: !31, line: 20, baseType: !2408, size: 64)
!2408 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !126)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !2405, file: !31, line: 21, baseType: !2408, size: 64, offset: 64)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !2405, file: !31, line: 22, baseType: !2408, size: 64, offset: 128)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2405, file: !31, line: 23, baseType: !126, size: 64, offset: 192)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2405, file: !31, line: 24, baseType: !126, size: 64, offset: 256)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2405, file: !31, line: 25, baseType: !126, size: 64, offset: 320)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2402, file: !31, line: 112, baseType: !2415, size: 64, offset: 384)
!2415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2416, size: 64)
!2416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2417, line: 105, size: 128, elements: !2418)
!2417 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2418 = !{!2419, !2420}
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2416, file: !2417, line: 110, baseType: !126, size: 64)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2416, file: !2417, line: 118, baseType: !2421, size: 64, offset: 64)
!2421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2422, size: 64)
!2422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2417, line: 95, size: 448, elements: !2423)
!2423 = !{!2424, !2425, !2430, !2431, !2432, !2433, !2434}
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2422, file: !2417, line: 96, baseType: !175, size: 64)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2422, file: !2417, line: 97, baseType: !2426, size: 64, offset: 64)
!2426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2427, size: 64)
!2427 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2417, line: 60, baseType: !2428)
!2428 = !DISubroutineType(types: !2429)
!2429 = !{null, !2415}
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2422, file: !2417, line: 98, baseType: !2426, size: 64, offset: 128)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2422, file: !2417, line: 99, baseType: !497, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2422, file: !2417, line: 100, baseType: !497, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2422, file: !2417, line: 101, baseType: !376, size: 128, align: 64, offset: 256)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2422, file: !2417, line: 102, baseType: !2415, size: 64, offset: 384)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !2402, file: !31, line: 113, baseType: !2416, size: 128, offset: 448)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2402, file: !31, line: 114, baseType: !1558, size: 192, offset: 576)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2402, file: !31, line: 115, baseType: !30, size: 32, offset: 768)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2402, file: !31, line: 116, baseType: !7, size: 32, offset: 800)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2402, file: !31, line: 117, baseType: !2440, size: 64, offset: 832)
!2440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2441, size: 64)
!2441 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2442)
!2442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !31, line: 67, size: 256, elements: !2443)
!2443 = !{!2444, !2445, !2449, !2450}
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !2442, file: !31, line: 73, baseType: !873, size: 64)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2442, file: !31, line: 78, baseType: !2446, size: 64, offset: 64)
!2446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2447, size: 64)
!2447 = !DISubroutineType(types: !2448)
!2448 = !{null, !2401}
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2442, file: !31, line: 83, baseType: !2446, size: 64, offset: 128)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !2442, file: !31, line: 89, baseType: !1061, size: 64, offset: 192)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2402, file: !31, line: 118, baseType: !118, size: 64, offset: 896)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !2402, file: !31, line: 119, baseType: !139, size: 32, offset: 960)
!2453 = !DIDerivedType(tag: DW_TAG_member, scope: !2402, file: !31, line: 120, baseType: !2454, size: 128, offset: 1024)
!2454 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2402, file: !31, line: 120, size: 128, elements: !2455)
!2455 = !{!2456, !2462}
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2454, file: !31, line: 121, baseType: !2457, size: 128)
!2457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !2458, line: 6, size: 128, elements: !2459)
!2458 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!2459 = !{!2460, !2461}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2457, file: !2458, line: 7, baseType: !429, size: 64)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2457, file: !2458, line: 8, baseType: !429, size: 64, offset: 64)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !2454, file: !31, line: 122, baseType: !2463)
!2463 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2457, elements: !1777)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2398, file: !767, line: 162, baseType: !118, size: 64, offset: 64)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !771, file: !767, line: 176, baseType: !376, size: 128, align: 64)
!2466 = !DIDerivedType(tag: DW_TAG_member, scope: !766, file: !767, line: 179, baseType: !2467, size: 32, offset: 384)
!2467 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !766, file: !767, line: 179, size: 32, elements: !2468)
!2468 = !{!2469, !2470, !2471, !2472}
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2467, file: !767, line: 184, baseType: !220, size: 32)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2467, file: !767, line: 192, baseType: !7, size: 32)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2467, file: !767, line: 194, baseType: !7, size: 32)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2467, file: !767, line: 195, baseType: !139, size: 32)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !766, file: !767, line: 199, baseType: !220, size: 32, offset: 416)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !665, file: !44, line: 1964, baseType: !2475, size: 64, offset: 1344)
!2475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2476, size: 64)
!2476 = !DISubroutineType(types: !2477)
!2477 = !{!327, !604, !2478}
!2478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 64)
!2479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2480, line: 12, size: 256, elements: !2481)
!2480 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2481 = !{!2482, !2483, !2484, !2485, !2486}
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2479, file: !2480, line: 13, baseType: !132, size: 32)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2479, file: !2480, line: 16, baseType: !139, size: 32, offset: 32)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2479, file: !2480, line: 23, baseType: !126, size: 64, offset: 64)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2479, file: !2480, line: 30, baseType: !126, size: 64, offset: 128)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2479, file: !2480, line: 33, baseType: !2487, size: 64, offset: 192)
!2487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2488, size: 64)
!2488 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !767, line: 27, flags: DIFlagFwdDecl)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !665, file: !44, line: 1966, baseType: !2475, size: 64, offset: 1408)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !605, file: !44, line: 1424, baseType: !2491, size: 64, offset: 448)
!2491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2492, size: 64)
!2492 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2493)
!2493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !38, line: 322, size: 704, elements: !2494)
!2494 = !{!2495, !2541, !2545, !2549, !2550, !2551, !2552, !2553, !2558, !2563, !2567}
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2493, file: !38, line: 323, baseType: !2496, size: 64)
!2496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2497, size: 64)
!2497 = !DISubroutineType(types: !2498)
!2498 = !{!139, !2499}
!2499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2500, size: 64)
!2500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !38, line: 294, size: 1600, elements: !2501)
!2501 = !{!2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2526, !2527, !2528}
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2500, file: !38, line: 295, baseType: !647, size: 128)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2500, file: !38, line: 296, baseType: !186, size: 128, offset: 128)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2500, file: !38, line: 297, baseType: !186, size: 128, offset: 256)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2500, file: !38, line: 298, baseType: !186, size: 128, offset: 384)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2500, file: !38, line: 299, baseType: !198, size: 192, offset: 512)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2500, file: !38, line: 300, baseType: !203, offset: 704)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2500, file: !38, line: 301, baseType: !220, size: 32, offset: 704)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2500, file: !38, line: 302, baseType: !604, size: 64, offset: 768)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2500, file: !38, line: 303, baseType: !2511, size: 64, offset: 832)
!2511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !38, line: 68, size: 64, elements: !2512)
!2512 = !{!2513, !2525}
!2513 = !DIDerivedType(tag: DW_TAG_member, scope: !2511, file: !38, line: 69, baseType: !2514, size: 32)
!2514 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2511, file: !38, line: 69, size: 32, elements: !2515)
!2515 = !{!2516, !2517, !2518}
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2514, file: !38, line: 70, baseType: !442, size: 32)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2514, file: !38, line: 71, baseType: !450, size: 32)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2514, file: !38, line: 72, baseType: !2519, size: 32)
!2519 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2520, line: 24, baseType: !2521)
!2520 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2521 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2520, line: 22, size: 32, elements: !2522)
!2522 = !{!2523}
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2521, file: !2520, line: 23, baseType: !2524, size: 32)
!2524 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2520, line: 20, baseType: !448)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2511, file: !38, line: 74, baseType: !37, size: 32, offset: 32)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2500, file: !38, line: 304, baseType: !538, size: 64, offset: 896)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2500, file: !38, line: 305, baseType: !126, size: 64, offset: 960)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2500, file: !38, line: 306, baseType: !2529, size: 576, offset: 1024)
!2529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !38, line: 205, size: 576, elements: !2530)
!2530 = !{!2531, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540}
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2529, file: !38, line: 206, baseType: !2532, size: 64)
!2532 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !38, line: 66, baseType: !184)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2529, file: !38, line: 207, baseType: !2532, size: 64, offset: 64)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2529, file: !38, line: 208, baseType: !2532, size: 64, offset: 128)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2529, file: !38, line: 209, baseType: !2532, size: 64, offset: 192)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2529, file: !38, line: 210, baseType: !2532, size: 64, offset: 256)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2529, file: !38, line: 211, baseType: !2532, size: 64, offset: 320)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2529, file: !38, line: 212, baseType: !2532, size: 64, offset: 384)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2529, file: !38, line: 213, baseType: !545, size: 64, offset: 448)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2529, file: !38, line: 214, baseType: !545, size: 64, offset: 512)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2493, file: !38, line: 324, baseType: !2542, size: 64, offset: 64)
!2542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2543, size: 64)
!2543 = !DISubroutineType(types: !2544)
!2544 = !{!2499, !604, !139}
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2493, file: !38, line: 325, baseType: !2546, size: 64, offset: 128)
!2546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2547, size: 64)
!2547 = !DISubroutineType(types: !2548)
!2548 = !{null, !2499}
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2493, file: !38, line: 326, baseType: !2496, size: 64, offset: 192)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2493, file: !38, line: 327, baseType: !2496, size: 64, offset: 256)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2493, file: !38, line: 328, baseType: !2496, size: 64, offset: 320)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2493, file: !38, line: 329, baseType: !693, size: 64, offset: 384)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2493, file: !38, line: 332, baseType: !2554, size: 64, offset: 448)
!2554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2555, size: 64)
!2555 = !DISubroutineType(types: !2556)
!2556 = !{!2557, !436}
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2532, size: 64)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2493, file: !38, line: 333, baseType: !2559, size: 64, offset: 512)
!2559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2560, size: 64)
!2560 = !DISubroutineType(types: !2561)
!2561 = !{!139, !436, !2562}
!2562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2519, size: 64)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2493, file: !38, line: 335, baseType: !2564, size: 64, offset: 576)
!2564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2565, size: 64)
!2565 = !DISubroutineType(types: !2566)
!2566 = !{!139, !436, !2557}
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2493, file: !38, line: 337, baseType: !2568, size: 64, offset: 640)
!2568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2569, size: 64)
!2569 = !DISubroutineType(types: !2570)
!2570 = !{!139, !604, !2571}
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 64)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !605, file: !44, line: 1425, baseType: !2573, size: 64, offset: 512)
!2573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2574, size: 64)
!2574 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2575)
!2575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !38, line: 428, size: 704, elements: !2576)
!2576 = !{!2577, !2581, !2582, !2586, !2587, !2588, !2603, !2626, !2630, !2631, !2654}
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2575, file: !38, line: 429, baseType: !2578, size: 64)
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2579, size: 64)
!2579 = !DISubroutineType(types: !2580)
!2580 = !{!139, !604, !139, !139, !554}
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2575, file: !38, line: 430, baseType: !693, size: 64, offset: 64)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2575, file: !38, line: 431, baseType: !2583, size: 64, offset: 128)
!2583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2584, size: 64)
!2584 = !DISubroutineType(types: !2585)
!2585 = !{!139, !604, !7}
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2575, file: !38, line: 432, baseType: !2583, size: 64, offset: 192)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2575, file: !38, line: 433, baseType: !693, size: 64, offset: 256)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2575, file: !38, line: 434, baseType: !2589, size: 64, offset: 320)
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2590, size: 64)
!2590 = !DISubroutineType(types: !2591)
!2591 = !{!139, !604, !139, !2592}
!2592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2593, size: 64)
!2593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !38, line: 415, size: 256, elements: !2594)
!2594 = !{!2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602}
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2593, file: !38, line: 416, baseType: !139, size: 32)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2593, file: !38, line: 417, baseType: !7, size: 32, offset: 32)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2593, file: !38, line: 418, baseType: !7, size: 32, offset: 64)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2593, file: !38, line: 420, baseType: !7, size: 32, offset: 96)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2593, file: !38, line: 421, baseType: !7, size: 32, offset: 128)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2593, file: !38, line: 422, baseType: !7, size: 32, offset: 160)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2593, file: !38, line: 423, baseType: !7, size: 32, offset: 192)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2593, file: !38, line: 424, baseType: !7, size: 32, offset: 224)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2575, file: !38, line: 435, baseType: !2604, size: 64, offset: 384)
!2604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2605, size: 64)
!2605 = !DISubroutineType(types: !2606)
!2606 = !{!139, !604, !2511, !2607}
!2607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2608, size: 64)
!2608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !38, line: 343, size: 960, elements: !2609)
!2609 = !{!2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625}
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2608, file: !38, line: 344, baseType: !139, size: 32)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2608, file: !38, line: 345, baseType: !429, size: 64, offset: 64)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2608, file: !38, line: 346, baseType: !429, size: 64, offset: 128)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2608, file: !38, line: 347, baseType: !429, size: 64, offset: 192)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2608, file: !38, line: 348, baseType: !429, size: 64, offset: 256)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2608, file: !38, line: 349, baseType: !429, size: 64, offset: 320)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2608, file: !38, line: 350, baseType: !429, size: 64, offset: 384)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2608, file: !38, line: 351, baseType: !181, size: 64, offset: 448)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2608, file: !38, line: 353, baseType: !181, size: 64, offset: 512)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2608, file: !38, line: 354, baseType: !139, size: 32, offset: 576)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2608, file: !38, line: 355, baseType: !139, size: 32, offset: 608)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2608, file: !38, line: 356, baseType: !429, size: 64, offset: 640)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2608, file: !38, line: 357, baseType: !429, size: 64, offset: 704)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2608, file: !38, line: 358, baseType: !429, size: 64, offset: 768)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2608, file: !38, line: 359, baseType: !181, size: 64, offset: 832)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2608, file: !38, line: 360, baseType: !139, size: 32, offset: 896)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2575, file: !38, line: 436, baseType: !2627, size: 64, offset: 448)
!2627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2628, size: 64)
!2628 = !DISubroutineType(types: !2629)
!2629 = !{!139, !604, !2571, !2607}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2575, file: !38, line: 438, baseType: !2604, size: 64, offset: 512)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2575, file: !38, line: 439, baseType: !2632, size: 64, offset: 576)
!2632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2633, size: 64)
!2633 = !DISubroutineType(types: !2634)
!2634 = !{!139, !604, !2635}
!2635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2636, size: 64)
!2636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !38, line: 409, size: 1408, elements: !2637)
!2637 = !{!2638, !2639}
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2636, file: !38, line: 410, baseType: !7, size: 32)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2636, file: !38, line: 411, baseType: !2640, size: 1344, offset: 64)
!2640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2641, size: 1344, elements: !293)
!2641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !38, line: 395, size: 448, elements: !2642)
!2642 = !{!2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2653}
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2641, file: !38, line: 396, baseType: !7, size: 32)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2641, file: !38, line: 397, baseType: !7, size: 32, offset: 32)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2641, file: !38, line: 399, baseType: !7, size: 32, offset: 64)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2641, file: !38, line: 400, baseType: !7, size: 32, offset: 96)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2641, file: !38, line: 401, baseType: !7, size: 32, offset: 128)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2641, file: !38, line: 402, baseType: !7, size: 32, offset: 160)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2641, file: !38, line: 403, baseType: !7, size: 32, offset: 192)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2641, file: !38, line: 404, baseType: !431, size: 64, offset: 256)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2641, file: !38, line: 405, baseType: !2652, size: 64, offset: 320)
!2652 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !133, line: 126, baseType: !429)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2641, file: !38, line: 406, baseType: !2652, size: 64, offset: 384)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2575, file: !38, line: 440, baseType: !2583, size: 64, offset: 640)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !605, file: !44, line: 1426, baseType: !2656, size: 64, offset: 576)
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2657, size: 64)
!2657 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2658)
!2658 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !44, line: 49, flags: DIFlagFwdDecl)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !605, file: !44, line: 1427, baseType: !126, size: 64, offset: 640)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !605, file: !44, line: 1428, baseType: !126, size: 64, offset: 704)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !605, file: !44, line: 1429, baseType: !126, size: 64, offset: 768)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !605, file: !44, line: 1430, baseType: !393, size: 64, offset: 832)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !605, file: !44, line: 1431, baseType: !807, size: 256, offset: 896)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !605, file: !44, line: 1432, baseType: !139, size: 32, offset: 1152)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !605, file: !44, line: 1433, baseType: !220, size: 32, offset: 1184)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !605, file: !44, line: 1437, baseType: !2667, size: 64, offset: 1216)
!2667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2668, size: 64)
!2668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2669, size: 64)
!2669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2670)
!2670 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !44, line: 1437, flags: DIFlagFwdDecl)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !605, file: !44, line: 1449, baseType: !2672, size: 64, offset: 1280)
!2672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !409, line: 34, size: 64, elements: !2673)
!2673 = !{!2674}
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2672, file: !409, line: 35, baseType: !412, size: 64)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !605, file: !44, line: 1450, baseType: !186, size: 128, offset: 1344)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !605, file: !44, line: 1451, baseType: !2677, size: 64, offset: 1472)
!2677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2678, size: 64)
!2678 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !44, line: 699, flags: DIFlagFwdDecl)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !605, file: !44, line: 1452, baseType: !1999, size: 64, offset: 1536)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !605, file: !44, line: 1453, baseType: !2681, size: 64, offset: 1600)
!2681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2682, size: 64)
!2682 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !44, line: 1453, flags: DIFlagFwdDecl)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !605, file: !44, line: 1454, baseType: !647, size: 128, offset: 1664)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !605, file: !44, line: 1455, baseType: !7, size: 32, offset: 1792)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !605, file: !44, line: 1456, baseType: !2686, size: 2432, offset: 1856)
!2686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !38, line: 518, size: 2432, elements: !2687)
!2687 = !{!2688, !2689, !2690, !2692, !2724}
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2686, file: !38, line: 519, baseType: !7, size: 32)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2686, file: !38, line: 520, baseType: !807, size: 256, offset: 64)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2686, file: !38, line: 521, baseType: !2691, size: 192, offset: 320)
!2691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !436, size: 192, elements: !293)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2686, file: !38, line: 522, baseType: !2693, size: 1728, offset: 512)
!2693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2694, size: 1728, elements: !293)
!2694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !38, line: 222, size: 576, elements: !2695)
!2695 = !{!2696, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723}
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2694, file: !38, line: 223, baseType: !2697, size: 64)
!2697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2698, size: 64)
!2698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !38, line: 443, size: 256, elements: !2699)
!2699 = !{!2700, !2701, !2714, !2715}
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2698, file: !38, line: 444, baseType: !139, size: 32)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2698, file: !38, line: 445, baseType: !2702, size: 64, offset: 64)
!2702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2703, size: 64)
!2703 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2704)
!2704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !38, line: 310, size: 512, elements: !2705)
!2705 = !{!2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713}
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2704, file: !38, line: 311, baseType: !693, size: 64)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2704, file: !38, line: 312, baseType: !693, size: 64, offset: 64)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2704, file: !38, line: 313, baseType: !693, size: 64, offset: 128)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2704, file: !38, line: 314, baseType: !693, size: 64, offset: 192)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2704, file: !38, line: 315, baseType: !2496, size: 64, offset: 256)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2704, file: !38, line: 316, baseType: !2496, size: 64, offset: 320)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2704, file: !38, line: 317, baseType: !2496, size: 64, offset: 384)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2704, file: !38, line: 318, baseType: !2568, size: 64, offset: 448)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2698, file: !38, line: 446, baseType: !638, size: 64, offset: 128)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2698, file: !38, line: 447, baseType: !2697, size: 64, offset: 192)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2694, file: !38, line: 224, baseType: !139, size: 32, offset: 64)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2694, file: !38, line: 226, baseType: !186, size: 128, offset: 128)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2694, file: !38, line: 227, baseType: !126, size: 64, offset: 256)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2694, file: !38, line: 228, baseType: !7, size: 32, offset: 320)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2694, file: !38, line: 229, baseType: !7, size: 32, offset: 352)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2694, file: !38, line: 230, baseType: !2532, size: 64, offset: 384)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2694, file: !38, line: 231, baseType: !2532, size: 64, offset: 448)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2694, file: !38, line: 232, baseType: !118, size: 64, offset: 512)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2686, file: !38, line: 523, baseType: !2725, size: 192, offset: 2240)
!2725 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2702, size: 192, elements: !293)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !605, file: !44, line: 1458, baseType: !2727, size: 2112, offset: 4288)
!2727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !44, line: 1410, size: 2112, elements: !2728)
!2728 = !{!2729, !2730, !2731}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2727, file: !44, line: 1411, baseType: !139, size: 32)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2727, file: !44, line: 1412, baseType: !1504, size: 128, offset: 64)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2727, file: !44, line: 1413, baseType: !2732, size: 1920, offset: 192)
!2732 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2733, size: 1920, elements: !293)
!2733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2734, line: 12, size: 640, elements: !2735)
!2734 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2735 = !{!2736, !2744, !2746, !2751, !2752}
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2733, file: !2734, line: 13, baseType: !2737, size: 320)
!2737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2738, line: 17, size: 320, elements: !2739)
!2738 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2739 = !{!2740, !2741, !2742, !2743}
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2737, file: !2738, line: 18, baseType: !139, size: 32)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2737, file: !2738, line: 19, baseType: !139, size: 32, offset: 32)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2737, file: !2738, line: 20, baseType: !1504, size: 128, offset: 64)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2737, file: !2738, line: 22, baseType: !376, size: 128, align: 64, offset: 192)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2733, file: !2734, line: 14, baseType: !2745, size: 64, offset: 320)
!2745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2733, file: !2734, line: 15, baseType: !2747, size: 64, offset: 384)
!2747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2748, line: 16, size: 64, elements: !2749)
!2748 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2749 = !{!2750}
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2747, file: !2748, line: 17, baseType: !1244, size: 64)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2733, file: !2734, line: 16, baseType: !1504, size: 128, offset: 448)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2733, file: !2734, line: 17, baseType: !220, size: 32, offset: 576)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !605, file: !44, line: 1465, baseType: !118, size: 64, offset: 6400)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !605, file: !44, line: 1468, baseType: !426, size: 32, offset: 6464)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !605, file: !44, line: 1470, baseType: !545, size: 64, offset: 6528)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !605, file: !44, line: 1471, baseType: !545, size: 64, offset: 6592)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !605, file: !44, line: 1473, baseType: !120, size: 32, offset: 6656)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !605, file: !44, line: 1474, baseType: !2759, size: 64, offset: 6720)
!2759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2760, size: 64)
!2760 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !44, line: 603, flags: DIFlagFwdDecl)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !605, file: !44, line: 1477, baseType: !2762, size: 256, offset: 6784)
!2762 = !DICompositeType(tag: DW_TAG_array_type, baseType: !119, size: 256, elements: !2295)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !605, file: !44, line: 1478, baseType: !2764, size: 128, offset: 7040)
!2764 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2765, line: 18, baseType: !2766)
!2765 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2766 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2765, line: 16, size: 128, elements: !2767)
!2767 = !{!2768}
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2766, file: !2765, line: 17, baseType: !2769, size: 128)
!2769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1376, size: 128, elements: !1789)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !605, file: !44, line: 1480, baseType: !7, size: 32, offset: 7168)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !605, file: !44, line: 1481, baseType: !2772, size: 32, offset: 7200)
!2772 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !133, line: 150, baseType: !7)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !605, file: !44, line: 1487, baseType: !198, size: 192, offset: 7232)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !605, file: !44, line: 1493, baseType: !256, size: 64, offset: 7424)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !605, file: !44, line: 1495, baseType: !2776, size: 64, offset: 7488)
!2776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2777, size: 64)
!2777 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2778)
!2778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !391, line: 135, size: 1024, align: 512, elements: !2779)
!2779 = !{!2780, !2784, !2785, !2792, !2798, !2802, !2806, !2810, !2811, !2815, !2819, !2824, !2828}
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2778, file: !391, line: 136, baseType: !2781, size: 64)
!2781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2782, size: 64)
!2782 = !DISubroutineType(types: !2783)
!2783 = !{!139, !393, !7}
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2778, file: !391, line: 137, baseType: !2781, size: 64, offset: 64)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2778, file: !391, line: 138, baseType: !2786, size: 64, offset: 128)
!2786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2787, size: 64)
!2787 = !DISubroutineType(types: !2788)
!2788 = !{!139, !2789, !2791}
!2789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2790, size: 64)
!2790 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !394)
!2791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2778, file: !391, line: 139, baseType: !2793, size: 64, offset: 192)
!2793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2794, size: 64)
!2794 = !DISubroutineType(types: !2795)
!2795 = !{!139, !2789, !7, !256, !2796}
!2796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2797, size: 64)
!2797 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !417)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2778, file: !391, line: 141, baseType: !2799, size: 64, offset: 256)
!2799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2800, size: 64)
!2800 = !DISubroutineType(types: !2801)
!2801 = !{!139, !2789}
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2778, file: !391, line: 142, baseType: !2803, size: 64, offset: 320)
!2803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2804, size: 64)
!2804 = !DISubroutineType(types: !2805)
!2805 = !{!139, !393}
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2778, file: !391, line: 143, baseType: !2807, size: 64, offset: 384)
!2807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2808, size: 64)
!2808 = !DISubroutineType(types: !2809)
!2809 = !{null, !393}
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2778, file: !391, line: 144, baseType: !2807, size: 64, offset: 448)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2778, file: !391, line: 145, baseType: !2812, size: 64, offset: 512)
!2812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2813, size: 64)
!2813 = !DISubroutineType(types: !2814)
!2814 = !{null, !393, !436}
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2778, file: !391, line: 146, baseType: !2816, size: 64, offset: 576)
!2816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2817, size: 64)
!2817 = !DISubroutineType(types: !2818)
!2818 = !{!122, !393, !122, !139}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2778, file: !391, line: 147, baseType: !2820, size: 64, offset: 640)
!2820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2821, size: 64)
!2821 = !DISubroutineType(types: !2822)
!2822 = !{!389, !2823}
!2823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 64)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2778, file: !391, line: 148, baseType: !2825, size: 64, offset: 704)
!2825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2826, size: 64)
!2826 = !DISubroutineType(types: !2827)
!2827 = !{!139, !554, !497}
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2778, file: !391, line: 149, baseType: !2829, size: 64, offset: 768)
!2829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2830, size: 64)
!2830 = !DISubroutineType(types: !2831)
!2831 = !{!393, !393, !2832}
!2832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2833, size: 64)
!2833 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !437)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !605, file: !44, line: 1500, baseType: !139, size: 32, offset: 7552)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !605, file: !44, line: 1502, baseType: !2836, size: 448, offset: 7616)
!2836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2480, line: 60, size: 448, elements: !2837)
!2837 = !{!2838, !2843, !2844, !2845, !2846, !2847, !2848}
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2836, file: !2480, line: 61, baseType: !2839, size: 64)
!2839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2840, size: 64)
!2840 = !DISubroutineType(types: !2841)
!2841 = !{!126, !2842, !2478}
!2842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2836, size: 64)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2836, file: !2480, line: 63, baseType: !2839, size: 64, offset: 64)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2836, file: !2480, line: 66, baseType: !327, size: 64, offset: 128)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2836, file: !2480, line: 67, baseType: !139, size: 32, offset: 192)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2836, file: !2480, line: 68, baseType: !7, size: 32, offset: 224)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2836, file: !2480, line: 71, baseType: !186, size: 128, offset: 256)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2836, file: !2480, line: 77, baseType: !2849, size: 64, offset: 384)
!2849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !175, size: 64)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !605, file: !44, line: 1505, baseType: !175, size: 64, offset: 8064)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !605, file: !44, line: 1508, baseType: !175, size: 64, offset: 8128)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !605, file: !44, line: 1511, baseType: !139, size: 32, offset: 8192)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !605, file: !44, line: 1514, baseType: !942, size: 32, offset: 8224)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !605, file: !44, line: 1517, baseType: !2855, size: 64, offset: 8256)
!2855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2856, size: 64)
!2856 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !172, line: 18, flags: DIFlagFwdDecl)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !605, file: !44, line: 1518, baseType: !643, size: 64, offset: 8320)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !605, file: !44, line: 1525, baseType: !1536, size: 64, offset: 8384)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !605, file: !44, line: 1532, baseType: !2860, size: 64, offset: 8448)
!2860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2861, line: 52, size: 64, elements: !2862)
!2861 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2862 = !{!2863}
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2860, file: !2861, line: 53, baseType: !2864, size: 64)
!2864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2865, size: 64)
!2865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2861, line: 40, size: 256, elements: !2866)
!2866 = !{!2867, !2868, !2873}
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2865, file: !2861, line: 42, baseType: !203)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2865, file: !2861, line: 44, baseType: !2869, size: 192)
!2869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2861, line: 28, size: 192, elements: !2870)
!2870 = !{!2871, !2872}
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2869, file: !2861, line: 29, baseType: !186, size: 128)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2869, file: !2861, line: 31, baseType: !327, size: 64, offset: 128)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2865, file: !2861, line: 49, baseType: !327, size: 64, offset: 192)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !605, file: !44, line: 1533, baseType: !2860, size: 64, offset: 8512)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !605, file: !44, line: 1534, baseType: !376, size: 128, align: 64, offset: 8576)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !605, file: !44, line: 1535, baseType: !171, size: 256, offset: 8704)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !605, file: !44, line: 1537, baseType: !198, size: 192, offset: 8960)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !605, file: !44, line: 1542, baseType: !139, size: 32, offset: 9152)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !605, file: !44, line: 1545, baseType: !203, offset: 9184)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !605, file: !44, line: 1546, baseType: !186, size: 128, offset: 9216)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !605, file: !44, line: 1548, baseType: !203, offset: 9344)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !605, file: !44, line: 1549, baseType: !186, size: 128, offset: 9344)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !437, file: !44, line: 624, baseType: !778, size: 64, offset: 256)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !437, file: !44, line: 631, baseType: !126, size: 64, offset: 320)
!2885 = !DIDerivedType(tag: DW_TAG_member, scope: !437, file: !44, line: 639, baseType: !2886, size: 32, offset: 384)
!2886 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !437, file: !44, line: 639, size: 32, elements: !2887)
!2887 = !{!2888, !2890}
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2886, file: !44, line: 640, baseType: !2889, size: 32)
!2889 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2886, file: !44, line: 641, baseType: !7, size: 32)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !437, file: !44, line: 643, baseType: !520, size: 32, offset: 416)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !437, file: !44, line: 644, baseType: !538, size: 64, offset: 448)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !437, file: !44, line: 645, baseType: !541, size: 128, offset: 512)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !437, file: !44, line: 646, baseType: !541, size: 128, offset: 640)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !437, file: !44, line: 647, baseType: !541, size: 128, offset: 768)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !437, file: !44, line: 648, baseType: !203, offset: 896)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !437, file: !44, line: 649, baseType: !131, size: 16, offset: 896)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !437, file: !44, line: 650, baseType: !1375, size: 8, offset: 912)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !437, file: !44, line: 651, baseType: !1375, size: 8, offset: 920)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !437, file: !44, line: 652, baseType: !2652, size: 64, offset: 960)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !437, file: !44, line: 659, baseType: !126, size: 64, offset: 1024)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !437, file: !44, line: 660, baseType: !807, size: 256, offset: 1088)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !437, file: !44, line: 662, baseType: !126, size: 64, offset: 1344)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !437, file: !44, line: 663, baseType: !126, size: 64, offset: 1408)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !437, file: !44, line: 665, baseType: !647, size: 128, offset: 1472)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !437, file: !44, line: 666, baseType: !186, size: 128, offset: 1600)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !437, file: !44, line: 675, baseType: !186, size: 128, offset: 1728)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !437, file: !44, line: 676, baseType: !186, size: 128, offset: 1856)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !437, file: !44, line: 677, baseType: !186, size: 128, offset: 1984)
!2910 = !DIDerivedType(tag: DW_TAG_member, scope: !437, file: !44, line: 678, baseType: !2911, size: 128, offset: 2112)
!2911 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !437, file: !44, line: 678, size: 128, elements: !2912)
!2912 = !{!2913, !2914}
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2911, file: !44, line: 679, baseType: !643, size: 64)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2911, file: !44, line: 680, baseType: !376, size: 128, align: 64)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !437, file: !44, line: 682, baseType: !177, size: 64, offset: 2240)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !437, file: !44, line: 683, baseType: !177, size: 64, offset: 2304)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !437, file: !44, line: 684, baseType: !220, size: 32, offset: 2368)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !437, file: !44, line: 685, baseType: !220, size: 32, offset: 2400)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !437, file: !44, line: 686, baseType: !220, size: 32, offset: 2432)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !437, file: !44, line: 688, baseType: !220, size: 32, offset: 2464)
!2921 = !DIDerivedType(tag: DW_TAG_member, scope: !437, file: !44, line: 690, baseType: !2922, size: 64, offset: 2496)
!2922 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !437, file: !44, line: 690, size: 64, elements: !2923)
!2923 = !{!2924, !3146}
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2922, file: !44, line: 691, baseType: !2925, size: 64)
!2925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2926, size: 64)
!2926 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2927)
!2927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !44, line: 1822, size: 2048, elements: !2928)
!2928 = !{!2929, !2930, !2934, !2938, !2942, !2943, !2944, !2948, !2961, !2962, !2970, !2974, !2975, !2979, !2980, !2984, !2989, !2990, !2994, !2998, !3106, !3110, !3111, !3115, !3116, !3120, !3124, !3129, !3133, !3137, !3141, !3145}
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2927, file: !44, line: 1823, baseType: !638, size: 64)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !2927, file: !44, line: 1824, baseType: !2931, size: 64, offset: 64)
!2931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2932, size: 64)
!2932 = !DISubroutineType(types: !2933)
!2933 = !{!538, !368, !538, !139}
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2927, file: !44, line: 1825, baseType: !2935, size: 64, offset: 128)
!2935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2936, size: 64)
!2936 = !DISubroutineType(types: !2937)
!2937 = !{!323, !368, !122, !338, !740}
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2927, file: !44, line: 1826, baseType: !2939, size: 64, offset: 192)
!2939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2940, size: 64)
!2940 = !DISubroutineType(types: !2941)
!2941 = !{!323, !368, !256, !338, !740}
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !2927, file: !44, line: 1827, baseType: !877, size: 64, offset: 256)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !2927, file: !44, line: 1828, baseType: !877, size: 64, offset: 320)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !2927, file: !44, line: 1829, baseType: !2945, size: 64, offset: 384)
!2945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2946, size: 64)
!2946 = !DISubroutineType(types: !2947)
!2947 = !{!139, !880, !497}
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !2927, file: !44, line: 1830, baseType: !2949, size: 64, offset: 448)
!2949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2950, size: 64)
!2950 = !DISubroutineType(types: !2951)
!2951 = !{!139, !368, !2952}
!2952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2953, size: 64)
!2953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !44, line: 1776, size: 128, elements: !2954)
!2954 = !{!2955, !2960}
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !2953, file: !44, line: 1777, baseType: !2956, size: 64)
!2956 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !44, line: 1773, baseType: !2957)
!2957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2958, size: 64)
!2958 = !DISubroutineType(types: !2959)
!2959 = !{!139, !2952, !256, !139, !538, !429, !7}
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2953, file: !44, line: 1778, baseType: !538, size: 64, offset: 64)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !2927, file: !44, line: 1831, baseType: !2949, size: 64, offset: 512)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2927, file: !44, line: 1832, baseType: !2963, size: 64, offset: 576)
!2963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2964, size: 64)
!2964 = !DISubroutineType(types: !2965)
!2965 = !{!2966, !368, !2968}
!2966 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !2967, line: 52, baseType: !7)
!2967 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!2968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2969, size: 64)
!2969 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !624, line: 27, flags: DIFlagFwdDecl)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !2927, file: !44, line: 1833, baseType: !2971, size: 64, offset: 640)
!2971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2972, size: 64)
!2972 = !DISubroutineType(types: !2973)
!2973 = !{!327, !368, !7, !126}
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2927, file: !44, line: 1834, baseType: !2971, size: 64, offset: 704)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2927, file: !44, line: 1835, baseType: !2976, size: 64, offset: 768)
!2976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2977, size: 64)
!2977 = !DISubroutineType(types: !2978)
!2978 = !{!139, !368, !1015}
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !2927, file: !44, line: 1836, baseType: !126, size: 64, offset: 832)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2927, file: !44, line: 1837, baseType: !2981, size: 64, offset: 896)
!2981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2982, size: 64)
!2982 = !DISubroutineType(types: !2983)
!2983 = !{!139, !436, !368}
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2927, file: !44, line: 1838, baseType: !2985, size: 64, offset: 960)
!2985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2986, size: 64)
!2986 = !DISubroutineType(types: !2987)
!2987 = !{!139, !368, !2988}
!2988 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !44, line: 1007, baseType: !118)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2927, file: !44, line: 1839, baseType: !2981, size: 64, offset: 1024)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !2927, file: !44, line: 1840, baseType: !2991, size: 64, offset: 1088)
!2991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2992, size: 64)
!2992 = !DISubroutineType(types: !2993)
!2993 = !{!139, !368, !538, !538, !139}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !2927, file: !44, line: 1841, baseType: !2995, size: 64, offset: 1152)
!2995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2996, size: 64)
!2996 = !DISubroutineType(types: !2997)
!2997 = !{!139, !139, !368, !139}
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2927, file: !44, line: 1842, baseType: !2999, size: 64, offset: 1216)
!2999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3000, size: 64)
!3000 = !DISubroutineType(types: !3001)
!3001 = !{!139, !368, !139, !3002}
!3002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3003, size: 64)
!3003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !44, line: 1062, size: 1664, elements: !3004)
!3004 = !{!3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3036, !3037, !3038, !3051, !3082}
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !3003, file: !44, line: 1063, baseType: !3002, size: 64)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !3003, file: !44, line: 1064, baseType: !186, size: 128, offset: 64)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !3003, file: !44, line: 1065, baseType: !647, size: 128, offset: 192)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !3003, file: !44, line: 1066, baseType: !186, size: 128, offset: 320)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !3003, file: !44, line: 1069, baseType: !186, size: 128, offset: 448)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !3003, file: !44, line: 1072, baseType: !2988, size: 64, offset: 576)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !3003, file: !44, line: 1073, baseType: !7, size: 32, offset: 640)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !3003, file: !44, line: 1074, baseType: !124, size: 8, offset: 672)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !3003, file: !44, line: 1075, baseType: !7, size: 32, offset: 704)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !3003, file: !44, line: 1076, baseType: !139, size: 32, offset: 736)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !3003, file: !44, line: 1077, baseType: !1504, size: 128, offset: 768)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !3003, file: !44, line: 1078, baseType: !368, size: 64, offset: 896)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !3003, file: !44, line: 1079, baseType: !538, size: 64, offset: 960)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !3003, file: !44, line: 1080, baseType: !538, size: 64, offset: 1024)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !3003, file: !44, line: 1082, baseType: !3020, size: 64, offset: 1088)
!3020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3021, size: 64)
!3021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !44, line: 1314, size: 320, elements: !3022)
!3022 = !{!3023, !3031, !3032, !3033, !3034, !3035}
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !3021, file: !44, line: 1315, baseType: !3024)
!3024 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !3025, line: 20, baseType: !3026)
!3025 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!3026 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3025, line: 11, elements: !3027)
!3027 = !{!3028}
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !3026, file: !3025, line: 12, baseType: !3029)
!3029 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !215, line: 33, baseType: !3030)
!3030 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !215, line: 31, elements: !217)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3021, file: !44, line: 1316, baseType: !139, size: 32)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !3021, file: !44, line: 1317, baseType: !139, size: 32, offset: 32)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !3021, file: !44, line: 1318, baseType: !3020, size: 64, offset: 64)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !3021, file: !44, line: 1319, baseType: !368, size: 64, offset: 128)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !3021, file: !44, line: 1320, baseType: !376, size: 128, align: 64, offset: 192)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !3003, file: !44, line: 1084, baseType: !126, size: 64, offset: 1152)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !3003, file: !44, line: 1085, baseType: !126, size: 64, offset: 1216)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !3003, file: !44, line: 1087, baseType: !3039, size: 64, offset: 1280)
!3039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3040, size: 64)
!3040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3041)
!3041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !44, line: 1011, size: 128, elements: !3042)
!3042 = !{!3043, !3047}
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !3041, file: !44, line: 1012, baseType: !3044, size: 64)
!3044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3045, size: 64)
!3045 = !DISubroutineType(types: !3046)
!3046 = !{null, !3002, !3002}
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !3041, file: !44, line: 1013, baseType: !3048, size: 64, offset: 64)
!3048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3049, size: 64)
!3049 = !DISubroutineType(types: !3050)
!3050 = !{null, !3002}
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !3003, file: !44, line: 1088, baseType: !3052, size: 64, offset: 1344)
!3052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3053, size: 64)
!3053 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3054)
!3054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !44, line: 1016, size: 512, elements: !3055)
!3055 = !{!3056, !3060, !3064, !3065, !3069, !3073, !3077, !3081}
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !3054, file: !44, line: 1017, baseType: !3057, size: 64)
!3057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3058, size: 64)
!3058 = !DISubroutineType(types: !3059)
!3059 = !{!2988, !2988}
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !3054, file: !44, line: 1018, baseType: !3061, size: 64, offset: 64)
!3061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3062, size: 64)
!3062 = !DISubroutineType(types: !3063)
!3063 = !{null, !2988}
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !3054, file: !44, line: 1019, baseType: !3048, size: 64, offset: 128)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !3054, file: !44, line: 1020, baseType: !3066, size: 64, offset: 192)
!3066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3067, size: 64)
!3067 = !DISubroutineType(types: !3068)
!3068 = !{!139, !3002, !139}
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !3054, file: !44, line: 1021, baseType: !3070, size: 64, offset: 256)
!3070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3071, size: 64)
!3071 = !DISubroutineType(types: !3072)
!3072 = !{!497, !3002}
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !3054, file: !44, line: 1022, baseType: !3074, size: 64, offset: 320)
!3074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3075, size: 64)
!3075 = !DISubroutineType(types: !3076)
!3076 = !{!139, !3002, !139, !189}
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !3054, file: !44, line: 1023, baseType: !3078, size: 64, offset: 384)
!3078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3079, size: 64)
!3079 = !DISubroutineType(types: !3080)
!3080 = !{null, !3002, !854}
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !3054, file: !44, line: 1024, baseType: !3070, size: 64, offset: 448)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !3003, file: !44, line: 1097, baseType: !3083, size: 256, offset: 1408)
!3083 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3003, file: !44, line: 1089, size: 256, elements: !3084)
!3084 = !{!3085, !3094, !3100}
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !3083, file: !44, line: 1090, baseType: !3086, size: 256)
!3086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !3087, line: 10, size: 256, elements: !3088)
!3087 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!3088 = !{!3089, !3090, !3093}
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3086, file: !3087, line: 11, baseType: !426, size: 32)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3086, file: !3087, line: 12, baseType: !3091, size: 64, offset: 64)
!3091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3092, size: 64)
!3092 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !3087, line: 5, flags: DIFlagFwdDecl)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3086, file: !3087, line: 13, baseType: !186, size: 128, offset: 128)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !3083, file: !44, line: 1091, baseType: !3095, size: 64)
!3095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !3087, line: 17, size: 64, elements: !3096)
!3096 = !{!3097}
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3095, file: !3087, line: 18, baseType: !3098, size: 64)
!3098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3099, size: 64)
!3099 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !3087, line: 16, flags: DIFlagFwdDecl)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !3083, file: !44, line: 1096, baseType: !3101, size: 192)
!3101 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3083, file: !44, line: 1092, size: 192, elements: !3102)
!3102 = !{!3103, !3104, !3105}
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3101, file: !44, line: 1093, baseType: !186, size: 128)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3101, file: !44, line: 1094, baseType: !139, size: 32, offset: 128)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !3101, file: !44, line: 1095, baseType: !7, size: 32, offset: 160)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !2927, file: !44, line: 1843, baseType: !3107, size: 64, offset: 1280)
!3107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3108, size: 64)
!3108 = !DISubroutineType(types: !3109)
!3109 = !{!323, !368, !765, !139, !338, !740, !139}
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2927, file: !44, line: 1844, baseType: !1135, size: 64, offset: 1344)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !2927, file: !44, line: 1845, baseType: !3112, size: 64, offset: 1408)
!3112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3113, size: 64)
!3113 = !DISubroutineType(types: !3114)
!3114 = !{!139, !139}
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !2927, file: !44, line: 1846, baseType: !2999, size: 64, offset: 1472)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !2927, file: !44, line: 1847, baseType: !3117, size: 64, offset: 1536)
!3117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3118, size: 64)
!3118 = !DISubroutineType(types: !3119)
!3119 = !{!323, !2163, !368, !740, !338, !7}
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !2927, file: !44, line: 1848, baseType: !3121, size: 64, offset: 1600)
!3121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3122, size: 64)
!3122 = !DISubroutineType(types: !3123)
!3123 = !{!323, !368, !740, !2163, !338, !7}
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !2927, file: !44, line: 1849, baseType: !3125, size: 64, offset: 1664)
!3125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3126, size: 64)
!3126 = !DISubroutineType(types: !3127)
!3127 = !{!139, !368, !327, !3128, !854}
!3128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3002, size: 64)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !2927, file: !44, line: 1850, baseType: !3130, size: 64, offset: 1728)
!3130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3131, size: 64)
!3131 = !DISubroutineType(types: !3132)
!3132 = !{!327, !368, !139, !538, !538}
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !2927, file: !44, line: 1852, baseType: !3134, size: 64, offset: 1792)
!3134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3135, size: 64)
!3135 = !DISubroutineType(types: !3136)
!3136 = !{null, !719, !368}
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !2927, file: !44, line: 1856, baseType: !3138, size: 64, offset: 1856)
!3138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3139, size: 64)
!3139 = !DISubroutineType(types: !3140)
!3140 = !{!323, !368, !538, !368, !538, !338, !7}
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !2927, file: !44, line: 1858, baseType: !3142, size: 64, offset: 1920)
!3142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3143, size: 64)
!3143 = !DISubroutineType(types: !3144)
!3144 = !{!538, !368, !538, !368, !538, !538, !7}
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !2927, file: !44, line: 1861, baseType: !2991, size: 64, offset: 1984)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2922, file: !44, line: 692, baseType: !672, size: 64)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !437, file: !44, line: 694, baseType: !3148, size: 64, offset: 2560)
!3148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3149, size: 64)
!3149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !44, line: 1100, size: 384, elements: !3150)
!3150 = !{!3151, !3152, !3153, !3154}
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3149, file: !44, line: 1101, baseType: !203)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3149, file: !44, line: 1102, baseType: !186, size: 128)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3149, file: !44, line: 1103, baseType: !186, size: 128, offset: 128)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3149, file: !44, line: 1104, baseType: !186, size: 128, offset: 256)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !437, file: !44, line: 695, baseType: !779, size: 1216, align: 64, offset: 2624)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !437, file: !44, line: 696, baseType: !186, size: 128, offset: 3840)
!3157 = !DIDerivedType(tag: DW_TAG_member, scope: !437, file: !44, line: 697, baseType: !3158, size: 64, offset: 3968)
!3158 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !437, file: !44, line: 697, size: 64, elements: !3159)
!3159 = !{!3160, !3161, !3162, !3173, !3174}
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3158, file: !44, line: 698, baseType: !2163, size: 64)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3158, file: !44, line: 699, baseType: !2677, size: 64)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3158, file: !44, line: 700, baseType: !3163, size: 64)
!3163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3164, size: 64)
!3164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !3165, line: 14, size: 832, elements: !3166)
!3165 = !DIFile(filename: "./include/linux/cdev.h", directory: "/home/lizy2001/genbc/linux")
!3166 = !{!3167, !3168, !3169, !3170, !3171, !3172}
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3164, file: !3165, line: 15, baseType: !252, size: 512)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3164, file: !3165, line: 16, baseType: !638, size: 64, offset: 512)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3164, file: !3165, line: 17, baseType: !2925, size: 64, offset: 576)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3164, file: !3165, line: 18, baseType: !186, size: 128, offset: 640)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3164, file: !3165, line: 19, baseType: !520, size: 32, offset: 768)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3164, file: !3165, line: 20, baseType: !7, size: 32, offset: 800)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3158, file: !44, line: 701, baseType: !122, size: 64)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3158, file: !44, line: 702, baseType: !7, size: 32)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !437, file: !44, line: 705, baseType: !120, size: 32, offset: 4032)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !437, file: !44, line: 708, baseType: !120, size: 32, offset: 4064)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !437, file: !44, line: 709, baseType: !2759, size: 64, offset: 4096)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !437, file: !44, line: 720, baseType: !118, size: 64, offset: 4160)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !394, file: !391, line: 98, baseType: !3180, size: 256, offset: 448)
!3180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !124, size: 256, elements: !2295)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !394, file: !391, line: 101, baseType: !3182, size: 32, offset: 704)
!3182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3183, line: 25, size: 32, elements: !3184)
!3183 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3184 = !{!3185}
!3185 = !DIDerivedType(tag: DW_TAG_member, scope: !3182, file: !3183, line: 26, baseType: !3186, size: 32)
!3186 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3182, file: !3183, line: 26, size: 32, elements: !3187)
!3187 = !{!3188}
!3188 = !DIDerivedType(tag: DW_TAG_member, scope: !3186, file: !3183, line: 30, baseType: !3189, size: 32)
!3189 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3186, file: !3183, line: 30, size: 32, elements: !3190)
!3190 = !{!3191, !3192}
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3189, file: !3183, line: 31, baseType: !203)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3189, file: !3183, line: 32, baseType: !139, size: 32)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !394, file: !391, line: 102, baseType: !2776, size: 64, offset: 768)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !394, file: !391, line: 103, baseType: !604, size: 64, offset: 832)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !394, file: !391, line: 104, baseType: !126, size: 64, offset: 896)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !394, file: !391, line: 105, baseType: !118, size: 64, offset: 960)
!3197 = !DIDerivedType(tag: DW_TAG_member, scope: !394, file: !391, line: 107, baseType: !3198, size: 128, offset: 1024)
!3198 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !394, file: !391, line: 107, size: 128, elements: !3199)
!3199 = !{!3200, !3201}
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3198, file: !391, line: 108, baseType: !186, size: 128)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3198, file: !391, line: 109, baseType: !3202, size: 64)
!3202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 64)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !394, file: !391, line: 111, baseType: !186, size: 128, offset: 1152)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !394, file: !391, line: 112, baseType: !186, size: 128, offset: 1280)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !394, file: !391, line: 120, baseType: !3206, size: 128, offset: 1408)
!3206 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !394, file: !391, line: 116, size: 128, elements: !3207)
!3207 = !{!3208, !3209, !3210}
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3206, file: !391, line: 117, baseType: !647, size: 128)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3206, file: !391, line: 118, baseType: !408, size: 128)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3206, file: !391, line: 119, baseType: !376, size: 128, align: 64)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !369, file: !44, line: 922, baseType: !436, size: 64, offset: 256)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !369, file: !44, line: 923, baseType: !2925, size: 64, offset: 320)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !369, file: !44, line: 929, baseType: !203, offset: 384)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !369, file: !44, line: 930, baseType: !43, size: 32, offset: 384)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !369, file: !44, line: 931, baseType: !175, size: 64, offset: 448)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !369, file: !44, line: 932, baseType: !7, size: 32, offset: 512)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !369, file: !44, line: 933, baseType: !2772, size: 32, offset: 544)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !369, file: !44, line: 934, baseType: !198, size: 192, offset: 576)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !369, file: !44, line: 935, baseType: !538, size: 64, offset: 768)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !369, file: !44, line: 936, baseType: !3221, size: 192, offset: 832)
!3221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !44, line: 885, size: 192, elements: !3222)
!3222 = !{!3223, !3224, !3225, !3226, !3227, !3228}
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3221, file: !44, line: 886, baseType: !3024)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3221, file: !44, line: 887, baseType: !1494, size: 64)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3221, file: !44, line: 888, baseType: !52, size: 32, offset: 64)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3221, file: !44, line: 889, baseType: !442, size: 32, offset: 96)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3221, file: !44, line: 889, baseType: !442, size: 32, offset: 128)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3221, file: !44, line: 890, baseType: !139, size: 32, offset: 160)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !369, file: !44, line: 937, baseType: !1603, size: 64, offset: 1024)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !369, file: !44, line: 938, baseType: !3231, size: 256, offset: 1088)
!3231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !44, line: 896, size: 256, elements: !3232)
!3232 = !{!3233, !3234, !3235, !3236, !3237, !3238}
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3231, file: !44, line: 897, baseType: !126, size: 64)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3231, file: !44, line: 898, baseType: !7, size: 32, offset: 64)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3231, file: !44, line: 899, baseType: !7, size: 32, offset: 96)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3231, file: !44, line: 902, baseType: !7, size: 32, offset: 128)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3231, file: !44, line: 903, baseType: !7, size: 32, offset: 160)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3231, file: !44, line: 904, baseType: !538, size: 64, offset: 192)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !369, file: !44, line: 940, baseType: !429, size: 64, offset: 1344)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !369, file: !44, line: 945, baseType: !118, size: 64, offset: 1408)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !369, file: !44, line: 949, baseType: !186, size: 128, offset: 1472)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !369, file: !44, line: 950, baseType: !186, size: 128, offset: 1600)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !369, file: !44, line: 952, baseType: !778, size: 64, offset: 1728)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !369, file: !44, line: 953, baseType: !942, size: 32, offset: 1792)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !369, file: !44, line: 954, baseType: !942, size: 32, offset: 1824)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !359, file: !317, line: 174, baseType: !365, size: 64, offset: 320)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !359, file: !317, line: 176, baseType: !3248, size: 64, offset: 384)
!3248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3249, size: 64)
!3249 = !DISubroutineType(types: !3250)
!3250 = !{!139, !368, !260, !358, !1015}
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !347, file: !317, line: 90, baseType: !342, size: 64, offset: 192)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !347, file: !317, line: 91, baseType: !3253, size: 64, offset: 256)
!3253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !307, file: !253, line: 143, baseType: !3255, size: 64, offset: 256)
!3255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3256, size: 64)
!3256 = !DISubroutineType(types: !3257)
!3257 = !{!3258, !260}
!3258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3259, size: 64)
!3259 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3260)
!3260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !61, line: 39, size: 384, elements: !3261)
!3261 = !{!3262, !3263, !3267, !3271, !3277, !3281}
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3260, file: !61, line: 40, baseType: !60, size: 32)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3260, file: !61, line: 41, baseType: !3264, size: 64, offset: 64)
!3264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3265, size: 64)
!3265 = !DISubroutineType(types: !3266)
!3266 = !{!497}
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3260, file: !61, line: 42, baseType: !3268, size: 64, offset: 128)
!3268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3269, size: 64)
!3269 = !DISubroutineType(types: !3270)
!3270 = !{!118}
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3260, file: !61, line: 43, baseType: !3272, size: 64, offset: 192)
!3272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3273, size: 64)
!3273 = !DISubroutineType(types: !3274)
!3274 = !{!2192, !3275}
!3275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3276, size: 64)
!3276 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !61, line: 19, flags: DIFlagFwdDecl)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3260, file: !61, line: 44, baseType: !3278, size: 64, offset: 256)
!3278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3279, size: 64)
!3279 = !DISubroutineType(types: !3280)
!3280 = !{!2192}
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3260, file: !61, line: 45, baseType: !475, size: 64, offset: 320)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !307, file: !253, line: 144, baseType: !3283, size: 64, offset: 320)
!3283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3284, size: 64)
!3284 = !DISubroutineType(types: !3285)
!3285 = !{!2192, !260}
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !307, file: !253, line: 145, baseType: !3287, size: 64, offset: 384)
!3287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3288, size: 64)
!3288 = !DISubroutineType(types: !3289)
!3289 = !{null, !260, !3290, !3291}
!3290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 64)
!3291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !450, size: 64)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !252, file: !253, line: 70, baseType: !3293, size: 64, offset: 384)
!3293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3294, size: 64)
!3294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !624, line: 123, size: 1024, elements: !3295)
!3295 = !{!3296, !3297, !3298, !3299, !3300, !3301, !3302, !3303, !3406, !3407, !3408, !3409, !3410}
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3294, file: !624, line: 124, baseType: !220, size: 32)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3294, file: !624, line: 125, baseType: !220, size: 32, offset: 32)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3294, file: !624, line: 135, baseType: !3293, size: 64, offset: 64)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3294, file: !624, line: 136, baseType: !256, size: 64, offset: 128)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3294, file: !624, line: 138, baseType: !800, size: 192, align: 64, offset: 192)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3294, file: !624, line: 140, baseType: !2192, size: 64, offset: 384)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3294, file: !624, line: 141, baseType: !7, size: 32, offset: 448)
!3303 = !DIDerivedType(tag: DW_TAG_member, scope: !3294, file: !624, line: 142, baseType: !3304, size: 256, offset: 512)
!3304 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3294, file: !624, line: 142, size: 256, elements: !3305)
!3305 = !{!3306, !3346, !3350}
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3304, file: !624, line: 143, baseType: !3307, size: 192)
!3307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !624, line: 91, size: 192, elements: !3308)
!3308 = !{!3309, !3310, !3311}
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3307, file: !624, line: 92, baseType: !126, size: 64)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3307, file: !624, line: 94, baseType: !796, size: 64, offset: 64)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3307, file: !624, line: 100, baseType: !3312, size: 64, offset: 128)
!3312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3313, size: 64)
!3313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !624, line: 180, size: 704, elements: !3314)
!3314 = !{!3315, !3316, !3317, !3318, !3319, !3320, !3344, !3345}
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3313, file: !624, line: 182, baseType: !3293, size: 64)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3313, file: !624, line: 183, baseType: !7, size: 32, offset: 64)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3313, file: !624, line: 186, baseType: !1523, size: 192, offset: 128)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3313, file: !624, line: 187, baseType: !426, size: 32, offset: 320)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3313, file: !624, line: 188, baseType: !426, size: 32, offset: 352)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3313, file: !624, line: 189, baseType: !3321, size: 64, offset: 384)
!3321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3322, size: 64)
!3322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !624, line: 168, size: 320, elements: !3323)
!3323 = !{!3324, !3328, !3332, !3336, !3340}
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3322, file: !624, line: 169, baseType: !3325, size: 64)
!3325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3326, size: 64)
!3326 = !DISubroutineType(types: !3327)
!3327 = !{!139, !719, !3312}
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3322, file: !624, line: 171, baseType: !3329, size: 64, offset: 64)
!3329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3330, size: 64)
!3330 = !DISubroutineType(types: !3331)
!3331 = !{!139, !3293, !256, !333}
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3322, file: !624, line: 173, baseType: !3333, size: 64, offset: 128)
!3333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3334, size: 64)
!3334 = !DISubroutineType(types: !3335)
!3335 = !{!139, !3293}
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3322, file: !624, line: 174, baseType: !3337, size: 64, offset: 192)
!3337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3338, size: 64)
!3338 = !DISubroutineType(types: !3339)
!3339 = !{!139, !3293, !3293, !256}
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3322, file: !624, line: 176, baseType: !3341, size: 64, offset: 256)
!3341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3342, size: 64)
!3342 = !DISubroutineType(types: !3343)
!3343 = !{!139, !719, !3293, !3312}
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3313, file: !624, line: 192, baseType: !186, size: 128, offset: 448)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3313, file: !624, line: 194, baseType: !1504, size: 128, offset: 576)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3304, file: !624, line: 144, baseType: !3347, size: 64)
!3347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !624, line: 103, size: 64, elements: !3348)
!3348 = !{!3349}
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3347, file: !624, line: 104, baseType: !3293, size: 64)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3304, file: !624, line: 145, baseType: !3351, size: 256)
!3351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !624, line: 107, size: 256, elements: !3352)
!3352 = !{!3353, !3401, !3404, !3405}
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3351, file: !624, line: 108, baseType: !3354, size: 64)
!3354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3355, size: 64)
!3355 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3356)
!3356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !624, line: 217, size: 768, elements: !3357)
!3357 = !{!3358, !3378, !3382, !3383, !3384, !3385, !3386, !3390, !3391, !3392, !3393, !3397}
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3356, file: !624, line: 222, baseType: !3359, size: 64)
!3359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3360, size: 64)
!3360 = !DISubroutineType(types: !3361)
!3361 = !{!139, !3362}
!3362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3363, size: 64)
!3363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !624, line: 197, size: 1088, elements: !3364)
!3364 = !{!3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377}
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3363, file: !624, line: 199, baseType: !3293, size: 64)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3363, file: !624, line: 200, baseType: !368, size: 64, offset: 64)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3363, file: !624, line: 201, baseType: !719, size: 64, offset: 128)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3363, file: !624, line: 202, baseType: !118, size: 64, offset: 192)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3363, file: !624, line: 205, baseType: !198, size: 192, offset: 256)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3363, file: !624, line: 206, baseType: !198, size: 192, offset: 448)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3363, file: !624, line: 207, baseType: !139, size: 32, offset: 640)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3363, file: !624, line: 208, baseType: !186, size: 128, offset: 704)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3363, file: !624, line: 209, baseType: !122, size: 64, offset: 832)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3363, file: !624, line: 211, baseType: !338, size: 64, offset: 896)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3363, file: !624, line: 212, baseType: !497, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3363, file: !624, line: 213, baseType: !497, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3363, file: !624, line: 214, baseType: !1043, size: 64, offset: 1024)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3356, file: !624, line: 223, baseType: !3379, size: 64, offset: 64)
!3379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3380, size: 64)
!3380 = !DISubroutineType(types: !3381)
!3381 = !{null, !3362}
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3356, file: !624, line: 236, baseType: !750, size: 64, offset: 128)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3356, file: !624, line: 238, baseType: !737, size: 64, offset: 192)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3356, file: !624, line: 239, baseType: !746, size: 64, offset: 256)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3356, file: !624, line: 240, baseType: !742, size: 64, offset: 320)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3356, file: !624, line: 242, baseType: !3387, size: 64, offset: 384)
!3387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3388, size: 64)
!3388 = !DISubroutineType(types: !3389)
!3389 = !{!323, !3362, !122, !338, !538}
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3356, file: !624, line: 252, baseType: !338, size: 64, offset: 448)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3356, file: !624, line: 259, baseType: !497, size: 8, offset: 512)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3356, file: !624, line: 260, baseType: !3387, size: 64, offset: 576)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3356, file: !624, line: 263, baseType: !3394, size: 64, offset: 640)
!3394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3395, size: 64)
!3395 = !DISubroutineType(types: !3396)
!3396 = !{!2966, !3362, !2968}
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3356, file: !624, line: 266, baseType: !3398, size: 64, offset: 704)
!3398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3399, size: 64)
!3399 = !DISubroutineType(types: !3400)
!3400 = !{!139, !3362, !1015}
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3351, file: !624, line: 109, baseType: !3402, size: 64, offset: 64)
!3402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3403, size: 64)
!3403 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !624, line: 31, flags: DIFlagFwdDecl)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3351, file: !624, line: 110, baseType: !538, size: 64, offset: 128)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3351, file: !624, line: 111, baseType: !3293, size: 64, offset: 192)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3294, file: !624, line: 148, baseType: !118, size: 64, offset: 768)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3294, file: !624, line: 154, baseType: !429, size: 64, offset: 832)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3294, file: !624, line: 156, baseType: !131, size: 16, offset: 896)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3294, file: !624, line: 157, baseType: !333, size: 16, offset: 912)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3294, file: !624, line: 158, baseType: !3411, size: 64, offset: 960)
!3411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3412, size: 64)
!3412 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !624, line: 32, flags: DIFlagFwdDecl)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !252, file: !253, line: 71, baseType: !238, size: 32, offset: 448)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !252, file: !253, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !252, file: !253, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !252, file: !253, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !252, file: !253, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !252, file: !253, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !249, file: !73, line: 463, baseType: !248, size: 64, offset: 512)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !249, file: !73, line: 465, baseType: !3421, size: 64, offset: 576)
!3421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3422, size: 64)
!3422 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !73, line: 36, flags: DIFlagFwdDecl)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !249, file: !73, line: 467, baseType: !256, size: 64, offset: 640)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !249, file: !73, line: 468, baseType: !3425, size: 64, offset: 704)
!3425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3426, size: 64)
!3426 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3427)
!3427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !73, line: 87, size: 384, elements: !3428)
!3428 = !{!3429, !3430, !3431, !3435, !3440, !3444}
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3427, file: !73, line: 88, baseType: !256, size: 64)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3427, file: !73, line: 89, baseType: !344, size: 64, offset: 64)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3427, file: !73, line: 90, baseType: !3432, size: 64, offset: 128)
!3432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3433, size: 64)
!3433 = !DISubroutineType(types: !3434)
!3434 = !{!139, !248, !288}
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3427, file: !73, line: 91, baseType: !3436, size: 64, offset: 192)
!3436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3437, size: 64)
!3437 = !DISubroutineType(types: !3438)
!3438 = !{!122, !248, !3439, !3290, !3291}
!3439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 64)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3427, file: !73, line: 93, baseType: !3441, size: 64, offset: 256)
!3441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3442, size: 64)
!3442 = !DISubroutineType(types: !3443)
!3443 = !{null, !248}
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3427, file: !73, line: 95, baseType: !3445, size: 64, offset: 320)
!3445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3446, size: 64)
!3446 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3447)
!3447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !80, line: 278, size: 1472, elements: !3448)
!3448 = !{!3449, !3453, !3454, !3455, !3456, !3457, !3458, !3459, !3460, !3461, !3462, !3463, !3464, !3465, !3466, !3467, !3468, !3469, !3470, !3471, !3472, !3473, !3474}
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3447, file: !80, line: 279, baseType: !3450, size: 64)
!3450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3451, size: 64)
!3451 = !DISubroutineType(types: !3452)
!3452 = !{!139, !248}
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3447, file: !80, line: 280, baseType: !3441, size: 64, offset: 64)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3447, file: !80, line: 281, baseType: !3450, size: 64, offset: 128)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3447, file: !80, line: 282, baseType: !3450, size: 64, offset: 192)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3447, file: !80, line: 283, baseType: !3450, size: 64, offset: 256)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3447, file: !80, line: 284, baseType: !3450, size: 64, offset: 320)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3447, file: !80, line: 285, baseType: !3450, size: 64, offset: 384)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3447, file: !80, line: 286, baseType: !3450, size: 64, offset: 448)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3447, file: !80, line: 287, baseType: !3450, size: 64, offset: 512)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3447, file: !80, line: 288, baseType: !3450, size: 64, offset: 576)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3447, file: !80, line: 289, baseType: !3450, size: 64, offset: 640)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3447, file: !80, line: 290, baseType: !3450, size: 64, offset: 704)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3447, file: !80, line: 291, baseType: !3450, size: 64, offset: 768)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3447, file: !80, line: 292, baseType: !3450, size: 64, offset: 832)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3447, file: !80, line: 293, baseType: !3450, size: 64, offset: 896)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3447, file: !80, line: 294, baseType: !3450, size: 64, offset: 960)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3447, file: !80, line: 295, baseType: !3450, size: 64, offset: 1024)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3447, file: !80, line: 296, baseType: !3450, size: 64, offset: 1088)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3447, file: !80, line: 297, baseType: !3450, size: 64, offset: 1152)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3447, file: !80, line: 298, baseType: !3450, size: 64, offset: 1216)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3447, file: !80, line: 299, baseType: !3450, size: 64, offset: 1280)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3447, file: !80, line: 300, baseType: !3450, size: 64, offset: 1344)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3447, file: !80, line: 301, baseType: !3450, size: 64, offset: 1408)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !249, file: !73, line: 470, baseType: !3476, size: 64, offset: 768)
!3476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3477, size: 64)
!3477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3478, line: 82, size: 1408, elements: !3479)
!3478 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3479 = !{!3480, !3481, !3482, !3483, !3484, !3485, !3486, !3545, !3546, !3547, !3548, !3549, !3550, !3551, !3552, !3553, !3554, !3555, !3556, !3557, !3561, !3564, !3565}
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3477, file: !3478, line: 83, baseType: !256, size: 64)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3477, file: !3478, line: 84, baseType: !256, size: 64, offset: 64)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3477, file: !3478, line: 85, baseType: !248, size: 64, offset: 128)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3477, file: !3478, line: 86, baseType: !344, size: 64, offset: 192)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3477, file: !3478, line: 87, baseType: !344, size: 64, offset: 256)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3477, file: !3478, line: 88, baseType: !344, size: 64, offset: 320)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3477, file: !3478, line: 90, baseType: !3487, size: 64, offset: 384)
!3487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3488, size: 64)
!3488 = !DISubroutineType(types: !3489)
!3489 = !{!139, !248, !3490}
!3490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3491, size: 64)
!3491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !67, line: 95, size: 1152, elements: !3492)
!3492 = !{!3493, !3494, !3495, !3496, !3497, !3498, !3499, !3512, !3525, !3526, !3527, !3528, !3529, !3537, !3538, !3539, !3540, !3541, !3542}
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3491, file: !67, line: 96, baseType: !256, size: 64)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3491, file: !67, line: 97, baseType: !3476, size: 64, offset: 64)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3491, file: !67, line: 99, baseType: !638, size: 64, offset: 128)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3491, file: !67, line: 100, baseType: !256, size: 64, offset: 192)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3491, file: !67, line: 102, baseType: !497, size: 8, offset: 256)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3491, file: !67, line: 103, baseType: !66, size: 32, offset: 288)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3491, file: !67, line: 105, baseType: !3500, size: 64, offset: 320)
!3500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3501, size: 64)
!3501 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3502)
!3502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3503, line: 262, size: 1600, elements: !3504)
!3503 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3504 = !{!3505, !3506, !3507, !3511}
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3502, file: !3503, line: 263, baseType: !2762, size: 256)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3502, file: !3503, line: 264, baseType: !2762, size: 256, offset: 256)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3502, file: !3503, line: 265, baseType: !3508, size: 1024, offset: 512)
!3508 = !DICompositeType(tag: DW_TAG_array_type, baseType: !119, size: 1024, elements: !3509)
!3509 = !{!3510}
!3510 = !DISubrange(count: 128)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3502, file: !3503, line: 266, baseType: !2192, size: 64, offset: 1536)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3491, file: !67, line: 106, baseType: !3513, size: 64, offset: 384)
!3513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3514, size: 64)
!3514 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3515)
!3515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3503, line: 210, size: 256, elements: !3516)
!3516 = !{!3517, !3521, !3523, !3524}
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3515, file: !3503, line: 211, baseType: !3518, size: 72)
!3518 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1376, size: 72, elements: !3519)
!3519 = !{!3520}
!3520 = !DISubrange(count: 9)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3515, file: !3503, line: 212, baseType: !3522, size: 64, offset: 128)
!3522 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3503, line: 14, baseType: !126)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3515, file: !3503, line: 213, baseType: !120, size: 32, offset: 192)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3515, file: !3503, line: 214, baseType: !120, size: 32, offset: 224)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3491, file: !67, line: 108, baseType: !3450, size: 64, offset: 448)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3491, file: !67, line: 109, baseType: !3441, size: 64, offset: 512)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3491, file: !67, line: 110, baseType: !3450, size: 64, offset: 576)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3491, file: !67, line: 111, baseType: !3441, size: 64, offset: 640)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3491, file: !67, line: 112, baseType: !3530, size: 64, offset: 704)
!3530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3531, size: 64)
!3531 = !DISubroutineType(types: !3532)
!3532 = !{!139, !248, !3533}
!3533 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !80, line: 52, baseType: !3534)
!3534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !80, line: 50, size: 32, elements: !3535)
!3535 = !{!3536}
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3534, file: !80, line: 51, baseType: !139, size: 32)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3491, file: !67, line: 113, baseType: !3450, size: 64, offset: 768)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3491, file: !67, line: 114, baseType: !344, size: 64, offset: 832)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3491, file: !67, line: 115, baseType: !344, size: 64, offset: 896)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3491, file: !67, line: 117, baseType: !3445, size: 64, offset: 960)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3491, file: !67, line: 118, baseType: !3441, size: 64, offset: 1024)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3491, file: !67, line: 120, baseType: !3543, size: 64, offset: 1088)
!3543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3544, size: 64)
!3544 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !67, line: 120, flags: DIFlagFwdDecl)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3477, file: !3478, line: 91, baseType: !3432, size: 64, offset: 448)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3477, file: !3478, line: 92, baseType: !3450, size: 64, offset: 512)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3477, file: !3478, line: 93, baseType: !3441, size: 64, offset: 576)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3477, file: !3478, line: 94, baseType: !3450, size: 64, offset: 640)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3477, file: !3478, line: 95, baseType: !3441, size: 64, offset: 704)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3477, file: !3478, line: 97, baseType: !3450, size: 64, offset: 768)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3477, file: !3478, line: 98, baseType: !3450, size: 64, offset: 832)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3477, file: !3478, line: 100, baseType: !3530, size: 64, offset: 896)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3477, file: !3478, line: 101, baseType: !3450, size: 64, offset: 960)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3477, file: !3478, line: 103, baseType: !3450, size: 64, offset: 1024)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3477, file: !3478, line: 105, baseType: !3450, size: 64, offset: 1088)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3477, file: !3478, line: 107, baseType: !3445, size: 64, offset: 1152)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3477, file: !3478, line: 109, baseType: !3558, size: 64, offset: 1216)
!3558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3559, size: 64)
!3559 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3560)
!3560 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3478, line: 109, flags: DIFlagFwdDecl)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3477, file: !3478, line: 111, baseType: !3562, size: 64, offset: 1280)
!3562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3563, size: 64)
!3563 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3478, line: 111, flags: DIFlagFwdDecl)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3477, file: !3478, line: 112, baseType: !653, offset: 1344)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3477, file: !3478, line: 114, baseType: !497, size: 8, offset: 1344)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !249, file: !73, line: 471, baseType: !3490, size: 64, offset: 832)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !249, file: !73, line: 473, baseType: !118, size: 64, offset: 896)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !249, file: !73, line: 475, baseType: !118, size: 64, offset: 960)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !249, file: !73, line: 480, baseType: !198, size: 192, offset: 1024)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !249, file: !73, line: 484, baseType: !3571, size: 576, offset: 1216)
!3571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !73, line: 361, size: 576, elements: !3572)
!3572 = !{!3573, !3574, !3575, !3576, !3577, !3578}
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3571, file: !73, line: 362, baseType: !186, size: 128)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3571, file: !73, line: 363, baseType: !186, size: 128, offset: 128)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3571, file: !73, line: 364, baseType: !186, size: 128, offset: 256)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3571, file: !73, line: 365, baseType: !186, size: 128, offset: 384)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3571, file: !73, line: 366, baseType: !497, size: 8, offset: 512)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3571, file: !73, line: 367, baseType: !72, size: 32, offset: 544)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !249, file: !73, line: 485, baseType: !3580, size: 2304, offset: 1792)
!3580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !80, line: 565, size: 2304, elements: !3581)
!3581 = !{!3582, !3583, !3584, !3585, !3586, !3587, !3588, !3589, !3590, !3591, !3592, !3593, !3594, !3595, !3596, !3597, !3635, !3636, !3637, !3638, !3639, !3640, !3641, !3642, !3643, !3644, !3645, !3646, !3647, !3648, !3649, !3650, !3651, !3652, !3653, !3654, !3655, !3656, !3657, !3658, !3659, !3660, !3661, !3662, !3663, !3664, !3665, !3666, !3667, !3677, !3681}
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3580, file: !80, line: 566, baseType: !3533, size: 32)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3580, file: !80, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3580, file: !80, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3580, file: !80, line: 569, baseType: !497, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3580, file: !80, line: 570, baseType: !497, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3580, file: !80, line: 571, baseType: !497, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3580, file: !80, line: 572, baseType: !497, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3580, file: !80, line: 573, baseType: !497, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3580, file: !80, line: 574, baseType: !497, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3580, file: !80, line: 575, baseType: !497, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3580, file: !80, line: 576, baseType: !497, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3580, file: !80, line: 577, baseType: !426, size: 32, offset: 64)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3580, file: !80, line: 578, baseType: !203, offset: 96)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3580, file: !80, line: 580, baseType: !186, size: 128, offset: 128)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3580, file: !80, line: 581, baseType: !1558, size: 192, offset: 256)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3580, file: !80, line: 582, baseType: !3598, size: 64, offset: 448)
!3598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3599, size: 64)
!3599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3600, line: 43, size: 1472, elements: !3601)
!3600 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3601 = !{!3602, !3603, !3604, !3605, !3606, !3609, !3621, !3622, !3623, !3624, !3625, !3626, !3627, !3628, !3629, !3630, !3631, !3632, !3633, !3634}
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3599, file: !3600, line: 44, baseType: !256, size: 64)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3599, file: !3600, line: 45, baseType: !139, size: 32, offset: 64)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3599, file: !3600, line: 46, baseType: !186, size: 128, offset: 128)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3599, file: !3600, line: 47, baseType: !203, offset: 256)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3599, file: !3600, line: 48, baseType: !3607, size: 64, offset: 256)
!3607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3608, size: 64)
!3608 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !80, line: 533, flags: DIFlagFwdDecl)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3599, file: !3600, line: 49, baseType: !3610, size: 320, offset: 320)
!3610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3611, line: 11, size: 320, elements: !3612)
!3611 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3612 = !{!3613, !3614, !3615, !3620}
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3610, file: !3611, line: 16, baseType: !647, size: 128)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3610, file: !3611, line: 17, baseType: !126, size: 64, offset: 128)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3610, file: !3611, line: 18, baseType: !3616, size: 64, offset: 192)
!3616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3617, size: 64)
!3617 = !DISubroutineType(types: !3618)
!3618 = !{null, !3619}
!3619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3610, size: 64)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3610, file: !3611, line: 19, baseType: !426, size: 32, offset: 256)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3599, file: !3600, line: 50, baseType: !126, size: 64, offset: 640)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3599, file: !3600, line: 51, baseType: !1323, size: 64, offset: 704)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3599, file: !3600, line: 52, baseType: !1323, size: 64, offset: 768)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3599, file: !3600, line: 53, baseType: !1323, size: 64, offset: 832)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3599, file: !3600, line: 54, baseType: !1323, size: 64, offset: 896)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3599, file: !3600, line: 55, baseType: !1323, size: 64, offset: 960)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3599, file: !3600, line: 56, baseType: !126, size: 64, offset: 1024)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3599, file: !3600, line: 57, baseType: !126, size: 64, offset: 1088)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3599, file: !3600, line: 58, baseType: !126, size: 64, offset: 1152)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3599, file: !3600, line: 59, baseType: !126, size: 64, offset: 1216)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3599, file: !3600, line: 60, baseType: !126, size: 64, offset: 1280)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3599, file: !3600, line: 61, baseType: !248, size: 64, offset: 1344)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3599, file: !3600, line: 62, baseType: !497, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3599, file: !3600, line: 63, baseType: !497, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3580, file: !80, line: 583, baseType: !497, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3580, file: !80, line: 584, baseType: !497, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3580, file: !80, line: 585, baseType: !497, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3580, file: !80, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3580, file: !80, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3580, file: !80, line: 592, baseType: !1315, size: 512, offset: 576)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3580, file: !80, line: 593, baseType: !429, size: 64, offset: 1088)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3580, file: !80, line: 594, baseType: !171, size: 256, offset: 1152)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3580, file: !80, line: 595, baseType: !1504, size: 128, offset: 1408)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3580, file: !80, line: 596, baseType: !3607, size: 64, offset: 1536)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3580, file: !80, line: 597, baseType: !220, size: 32, offset: 1600)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3580, file: !80, line: 598, baseType: !220, size: 32, offset: 1632)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3580, file: !80, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3580, file: !80, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3580, file: !80, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3580, file: !80, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3580, file: !80, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3580, file: !80, line: 604, baseType: !497, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3580, file: !80, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3580, file: !80, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3580, file: !80, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3580, file: !80, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3580, file: !80, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3580, file: !80, line: 610, baseType: !7, size: 32, offset: 1696)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3580, file: !80, line: 611, baseType: !79, size: 32, offset: 1728)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3580, file: !80, line: 612, baseType: !87, size: 32, offset: 1760)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3580, file: !80, line: 613, baseType: !139, size: 32, offset: 1792)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3580, file: !80, line: 614, baseType: !139, size: 32, offset: 1824)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3580, file: !80, line: 615, baseType: !429, size: 64, offset: 1856)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3580, file: !80, line: 616, baseType: !429, size: 64, offset: 1920)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3580, file: !80, line: 617, baseType: !429, size: 64, offset: 1984)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3580, file: !80, line: 618, baseType: !429, size: 64, offset: 2048)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3580, file: !80, line: 620, baseType: !3668, size: 64, offset: 2112)
!3668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3669, size: 64)
!3669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !80, line: 536, size: 256, elements: !3670)
!3670 = !{!3671, !3672, !3673, !3674}
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3669, file: !80, line: 537, baseType: !203)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3669, file: !80, line: 538, baseType: !7, size: 32)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3669, file: !80, line: 540, baseType: !186, size: 128, offset: 64)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3669, file: !80, line: 543, baseType: !3675, size: 64, offset: 192)
!3675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3676, size: 64)
!3676 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !80, line: 534, flags: DIFlagFwdDecl)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3580, file: !80, line: 621, baseType: !3678, size: 64, offset: 2176)
!3678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3679, size: 64)
!3679 = !DISubroutineType(types: !3680)
!3680 = !{null, !248, !1467}
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3580, file: !80, line: 622, baseType: !3682, size: 64, offset: 2240)
!3682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3683, size: 64)
!3683 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !80, line: 622, flags: DIFlagFwdDecl)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !249, file: !73, line: 486, baseType: !3685, size: 64, offset: 4096)
!3685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3686, size: 64)
!3686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !80, line: 642, size: 1792, elements: !3687)
!3687 = !{!3688, !3689, !3690, !3694, !3695, !3696}
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3686, file: !80, line: 643, baseType: !3447, size: 1472)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3686, file: !80, line: 644, baseType: !3450, size: 64, offset: 1472)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3686, file: !80, line: 645, baseType: !3691, size: 64, offset: 1536)
!3691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3692, size: 64)
!3692 = !DISubroutineType(types: !3693)
!3693 = !{null, !248, !497}
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3686, file: !80, line: 646, baseType: !3450, size: 64, offset: 1600)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3686, file: !80, line: 647, baseType: !3441, size: 64, offset: 1664)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3686, file: !80, line: 648, baseType: !3441, size: 64, offset: 1728)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !249, file: !73, line: 493, baseType: !3698, size: 64, offset: 4160)
!3698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3699, size: 64)
!3699 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !73, line: 493, flags: DIFlagFwdDecl)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !249, file: !73, line: 499, baseType: !186, size: 128, offset: 4224)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !249, file: !73, line: 502, baseType: !3702, size: 64, offset: 4352)
!3702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3703, size: 64)
!3703 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3704)
!3704 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !73, line: 502, flags: DIFlagFwdDecl)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !249, file: !73, line: 504, baseType: !3706, size: 64, offset: 4416)
!3706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 64)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !249, file: !73, line: 505, baseType: !429, size: 64, offset: 4480)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !249, file: !73, line: 510, baseType: !429, size: 64, offset: 4544)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !249, file: !73, line: 511, baseType: !3710, size: 64, offset: 4608)
!3710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3711, size: 64)
!3711 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3712)
!3712 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !73, line: 511, flags: DIFlagFwdDecl)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !249, file: !73, line: 513, baseType: !3714, size: 64, offset: 4672)
!3714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3715, size: 64)
!3715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !73, line: 288, size: 128, elements: !3716)
!3716 = !{!3717, !3718}
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3715, file: !73, line: 293, baseType: !7, size: 32)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3715, file: !73, line: 294, baseType: !126, size: 64, offset: 64)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !249, file: !73, line: 515, baseType: !186, size: 128, offset: 4736)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !249, file: !73, line: 526, baseType: !3721, offset: 4864)
!3721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3722, line: 5, elements: !217)
!3722 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !249, file: !73, line: 528, baseType: !3724, size: 64, offset: 4864)
!3724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3725, size: 64)
!3725 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3726, line: 14, flags: DIFlagFwdDecl)
!3726 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !249, file: !73, line: 529, baseType: !3728, size: 64, offset: 4928)
!3728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3729, size: 64)
!3729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3730, line: 17, size: 192, elements: !3731)
!3730 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3731 = !{!3732, !3733, !3816}
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3729, file: !3730, line: 18, baseType: !3728, size: 64)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3729, file: !3730, line: 19, baseType: !3734, size: 64, offset: 64)
!3734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3735, size: 64)
!3735 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3736)
!3736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3730, line: 110, size: 1152, elements: !3737)
!3737 = !{!3738, !3742, !3746, !3752, !3758, !3762, !3766, !3771, !3775, !3776, !3780, !3784, !3788, !3799, !3800, !3801, !3802, !3812}
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3736, file: !3730, line: 111, baseType: !3739, size: 64)
!3739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3740, size: 64)
!3740 = !DISubroutineType(types: !3741)
!3741 = !{!3728, !3728}
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3736, file: !3730, line: 112, baseType: !3743, size: 64, offset: 64)
!3743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3744, size: 64)
!3744 = !DISubroutineType(types: !3745)
!3745 = !{null, !3728}
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3736, file: !3730, line: 113, baseType: !3747, size: 64, offset: 128)
!3747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3748, size: 64)
!3748 = !DISubroutineType(types: !3749)
!3749 = !{!497, !3750}
!3750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3751, size: 64)
!3751 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3729)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3736, file: !3730, line: 114, baseType: !3753, size: 64, offset: 192)
!3753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3754, size: 64)
!3754 = !DISubroutineType(types: !3755)
!3755 = !{!2192, !3750, !3756}
!3756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3757, size: 64)
!3757 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !249)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3736, file: !3730, line: 116, baseType: !3759, size: 64, offset: 256)
!3759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3760, size: 64)
!3760 = !DISubroutineType(types: !3761)
!3761 = !{!497, !3750, !256}
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3736, file: !3730, line: 118, baseType: !3763, size: 64, offset: 320)
!3763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3764, size: 64)
!3764 = !DISubroutineType(types: !3765)
!3765 = !{!139, !3750, !256, !7, !118, !338}
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3736, file: !3730, line: 123, baseType: !3767, size: 64, offset: 384)
!3767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3768, size: 64)
!3768 = !DISubroutineType(types: !3769)
!3769 = !{!139, !3750, !256, !3770, !338}
!3770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 64)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3736, file: !3730, line: 126, baseType: !3772, size: 64, offset: 448)
!3772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3773, size: 64)
!3773 = !DISubroutineType(types: !3774)
!3774 = !{!256, !3750}
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3736, file: !3730, line: 127, baseType: !3772, size: 64, offset: 512)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3736, file: !3730, line: 128, baseType: !3777, size: 64, offset: 576)
!3777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3778, size: 64)
!3778 = !DISubroutineType(types: !3779)
!3779 = !{!3728, !3750}
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3736, file: !3730, line: 130, baseType: !3781, size: 64, offset: 640)
!3781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3782, size: 64)
!3782 = !DISubroutineType(types: !3783)
!3783 = !{!3728, !3750, !3728}
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3736, file: !3730, line: 133, baseType: !3785, size: 64, offset: 704)
!3785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3786, size: 64)
!3786 = !DISubroutineType(types: !3787)
!3787 = !{!3728, !3750, !256}
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3736, file: !3730, line: 135, baseType: !3789, size: 64, offset: 768)
!3789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3790, size: 64)
!3790 = !DISubroutineType(types: !3791)
!3791 = !{!139, !3750, !256, !256, !7, !7, !3792}
!3792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3793, size: 64)
!3793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3730, line: 43, size: 640, elements: !3794)
!3794 = !{!3795, !3796, !3797}
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3793, file: !3730, line: 44, baseType: !3728, size: 64)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3793, file: !3730, line: 45, baseType: !7, size: 32, offset: 64)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3793, file: !3730, line: 46, baseType: !3798, size: 512, offset: 128)
!3798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 512, elements: !1353)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3736, file: !3730, line: 140, baseType: !3781, size: 64, offset: 832)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3736, file: !3730, line: 143, baseType: !3777, size: 64, offset: 896)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3736, file: !3730, line: 145, baseType: !3739, size: 64, offset: 960)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3736, file: !3730, line: 146, baseType: !3803, size: 64, offset: 1024)
!3803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3804, size: 64)
!3804 = !DISubroutineType(types: !3805)
!3805 = !{!139, !3750, !3806}
!3806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3807, size: 64)
!3807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3730, line: 29, size: 128, elements: !3808)
!3808 = !{!3809, !3810, !3811}
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3807, file: !3730, line: 30, baseType: !7, size: 32)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3807, file: !3730, line: 31, baseType: !7, size: 32, offset: 32)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3807, file: !3730, line: 32, baseType: !3750, size: 64, offset: 64)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3736, file: !3730, line: 148, baseType: !3813, size: 64, offset: 1088)
!3813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3814, size: 64)
!3814 = !DISubroutineType(types: !3815)
!3815 = !{!139, !3750, !248}
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3729, file: !3730, line: 20, baseType: !248, size: 64, offset: 128)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !249, file: !73, line: 534, baseType: !520, size: 32, offset: 4992)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !249, file: !73, line: 535, baseType: !426, size: 32, offset: 5024)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !249, file: !73, line: 537, baseType: !203, offset: 5056)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !249, file: !73, line: 538, baseType: !186, size: 128, offset: 5056)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !249, file: !73, line: 540, baseType: !3822, size: 64, offset: 5184)
!3822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3823, size: 64)
!3823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !3824, line: 54, size: 960, elements: !3825)
!3824 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!3825 = !{!3826, !3827, !3828, !3829, !3830, !3831, !3832, !3836, !3840, !3841, !3842, !3843, !3847, !3851, !3852}
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3823, file: !3824, line: 55, baseType: !256, size: 64)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3823, file: !3824, line: 56, baseType: !638, size: 64, offset: 64)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !3823, file: !3824, line: 58, baseType: !344, size: 64, offset: 128)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3823, file: !3824, line: 59, baseType: !344, size: 64, offset: 192)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !3823, file: !3824, line: 60, baseType: !260, size: 64, offset: 256)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !3823, file: !3824, line: 62, baseType: !3432, size: 64, offset: 320)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3823, file: !3824, line: 63, baseType: !3833, size: 64, offset: 384)
!3833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3834, size: 64)
!3834 = !DISubroutineType(types: !3835)
!3835 = !{!122, !248, !3439}
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !3823, file: !3824, line: 65, baseType: !3837, size: 64, offset: 448)
!3837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3838, size: 64)
!3838 = !DISubroutineType(types: !3839)
!3839 = !{null, !3822}
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !3823, file: !3824, line: 66, baseType: !3441, size: 64, offset: 512)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !3823, file: !3824, line: 68, baseType: !3450, size: 64, offset: 576)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !3823, file: !3824, line: 70, baseType: !3258, size: 64, offset: 640)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3823, file: !3824, line: 71, baseType: !3844, size: 64, offset: 704)
!3844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3845, size: 64)
!3845 = !DISubroutineType(types: !3846)
!3846 = !{!2192, !248}
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3823, file: !3824, line: 73, baseType: !3848, size: 64, offset: 768)
!3848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3849, size: 64)
!3849 = !DISubroutineType(types: !3850)
!3850 = !{null, !248, !3290, !3291}
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3823, file: !3824, line: 75, baseType: !3445, size: 64, offset: 832)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3823, file: !3824, line: 77, baseType: !3562, size: 64, offset: 896)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !249, file: !73, line: 541, baseType: !344, size: 64, offset: 5248)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !249, file: !73, line: 543, baseType: !3441, size: 64, offset: 5312)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !249, file: !73, line: 544, baseType: !3856, size: 64, offset: 5376)
!3856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3857, size: 64)
!3857 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !73, line: 45, flags: DIFlagFwdDecl)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !249, file: !73, line: 545, baseType: !3859, size: 64, offset: 5440)
!3859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3860, size: 64)
!3860 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !73, line: 47, flags: DIFlagFwdDecl)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !249, file: !73, line: 547, baseType: !497, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !249, file: !73, line: 548, baseType: !497, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !249, file: !73, line: 549, baseType: !497, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !249, file: !73, line: 550, baseType: !497, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !234, file: !142, line: 289, baseType: !3866, size: 64, offset: 128)
!3866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3867, size: 64)
!3867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_driver", file: !3868, line: 302, size: 1472, elements: !3869)
!3868 = !DIFile(filename: "./include/linux/tty_driver.h", directory: "/home/lizy2001/genbc/linux")
!3869 = !{!3870, !3871, !3872, !3874, !3875, !3876, !3877, !3878, !3879, !3880, !3881, !3882, !3883, !3901, !3902, !3906, !3907, !3909, !3912, !3915, !3916, !4076}
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3867, file: !3868, line: 303, baseType: !139, size: 32)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !3867, file: !3868, line: 304, baseType: !238, size: 32, offset: 32)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "cdevs", scope: !3867, file: !3868, line: 305, baseType: !3873, size: 64, offset: 64)
!3873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3163, size: 64)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3867, file: !3868, line: 306, baseType: !638, size: 64, offset: 128)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "driver_name", scope: !3867, file: !3868, line: 307, baseType: !256, size: 64, offset: 192)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3867, file: !3868, line: 308, baseType: !256, size: 64, offset: 256)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "name_base", scope: !3867, file: !3868, line: 309, baseType: !139, size: 32, offset: 320)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !3867, file: !3868, line: 310, baseType: !139, size: 32, offset: 352)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "minor_start", scope: !3867, file: !3868, line: 311, baseType: !139, size: 32, offset: 384)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3867, file: !3868, line: 312, baseType: !7, size: 32, offset: 416)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3867, file: !3868, line: 313, baseType: !1233, size: 16, offset: 448)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !3867, file: !3868, line: 314, baseType: !1233, size: 16, offset: 464)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "init_termios", scope: !3867, file: !3868, line: 315, baseType: !3884, size: 352, offset: 480)
!3884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ktermios", file: !3885, line: 32, size: 352, elements: !3886)
!3885 = !DIFile(filename: "./include/uapi/asm-generic/termbits.h", directory: "/home/lizy2001/genbc/linux")
!3886 = !{!3887, !3889, !3890, !3891, !3892, !3894, !3898, !3900}
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "c_iflag", scope: !3884, file: !3885, line: 33, baseType: !3888, size: 32)
!3888 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcflag_t", file: !3885, line: 9, baseType: !7)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "c_oflag", scope: !3884, file: !3885, line: 34, baseType: !3888, size: 32, offset: 32)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "c_cflag", scope: !3884, file: !3885, line: 35, baseType: !3888, size: 32, offset: 64)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "c_lflag", scope: !3884, file: !3885, line: 36, baseType: !3888, size: 32, offset: 96)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "c_line", scope: !3884, file: !3885, line: 37, baseType: !3893, size: 8, offset: 128)
!3893 = !DIDerivedType(tag: DW_TAG_typedef, name: "cc_t", file: !3885, line: 7, baseType: !124)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "c_cc", scope: !3884, file: !3885, line: 38, baseType: !3895, size: 152, offset: 136)
!3895 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3893, size: 152, elements: !3896)
!3896 = !{!3897}
!3897 = !DISubrange(count: 19)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "c_ispeed", scope: !3884, file: !3885, line: 39, baseType: !3899, size: 32, offset: 288)
!3899 = !DIDerivedType(tag: DW_TAG_typedef, name: "speed_t", file: !3885, line: 8, baseType: !7)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "c_ospeed", scope: !3884, file: !3885, line: 40, baseType: !3899, size: 32, offset: 320)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3867, file: !3868, line: 316, baseType: !126, size: 64, offset: 832)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "proc_entry", scope: !3867, file: !3868, line: 317, baseType: !3903, size: 64, offset: 896)
!3903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3904, size: 64)
!3904 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !3905, line: 123, flags: DIFlagFwdDecl)
!3905 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !3867, file: !3868, line: 318, baseType: !3866, size: 64, offset: 960)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "ttys", scope: !3867, file: !3868, line: 323, baseType: !3908, size: 64, offset: 1024)
!3908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 64)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !3867, file: !3868, line: 324, baseType: !3910, size: 64, offset: 1088)
!3910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3911, size: 64)
!3911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 64)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "termios", scope: !3867, file: !3868, line: 325, baseType: !3913, size: 64, offset: 1152)
!3913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3914, size: 64)
!3914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3884, size: 64)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "driver_state", scope: !3867, file: !3868, line: 326, baseType: !118, size: 64, offset: 1216)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3867, file: !3868, line: 332, baseType: !3917, size: 64, offset: 1280)
!3917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3918, size: 64)
!3918 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3919)
!3919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_operations", file: !3868, line: 254, size: 2176, elements: !3920)
!3920 = !{!3921, !3925, !3929, !3933, !3937, !3941, !3945, !3946, !3950, !3954, !3955, !3959, !3960, !3964, !3968, !3972, !3973, !3974, !3975, !3976, !3977, !3981, !3982, !3983, !3987, !3991, !3992, !3996, !4008, !4023, !4044, !4070, !4071, !4075}
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !3919, file: !3868, line: 255, baseType: !3922, size: 64)
!3922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3923, size: 64)
!3923 = !DISubroutineType(types: !3924)
!3924 = !{!233, !3866, !368, !139}
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "install", scope: !3919, file: !3868, line: 257, baseType: !3926, size: 64, offset: 64)
!3926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3927, size: 64)
!3927 = !DISubroutineType(types: !3928)
!3928 = !{!139, !3866, !233}
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3919, file: !3868, line: 258, baseType: !3930, size: 64, offset: 128)
!3930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3931, size: 64)
!3931 = !DISubroutineType(types: !3932)
!3932 = !{null, !3866, !233}
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3919, file: !3868, line: 259, baseType: !3934, size: 64, offset: 192)
!3934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3935, size: 64)
!3935 = !DISubroutineType(types: !3936)
!3936 = !{!139, !233, !368}
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !3919, file: !3868, line: 260, baseType: !3938, size: 64, offset: 256)
!3938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3939, size: 64)
!3939 = !DISubroutineType(types: !3940)
!3940 = !{null, !233, !368}
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3919, file: !3868, line: 261, baseType: !3942, size: 64, offset: 320)
!3942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3943, size: 64)
!3943 = !DISubroutineType(types: !3944)
!3944 = !{null, !233}
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !3919, file: !3868, line: 262, baseType: !3942, size: 64, offset: 384)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3919, file: !3868, line: 263, baseType: !3947, size: 64, offset: 448)
!3947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3948, size: 64)
!3948 = !DISubroutineType(types: !3949)
!3949 = !{!139, !233, !433, !139}
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "put_char", scope: !3919, file: !3868, line: 265, baseType: !3951, size: 64, offset: 512)
!3951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3952, size: 64)
!3952 = !DISubroutineType(types: !3953)
!3953 = !{!139, !233, !124}
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "flush_chars", scope: !3919, file: !3868, line: 266, baseType: !3942, size: 64, offset: 576)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "write_room", scope: !3919, file: !3868, line: 267, baseType: !3956, size: 64, offset: 640)
!3956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3957, size: 64)
!3957 = !DISubroutineType(types: !3958)
!3958 = !{!139, !233}
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "chars_in_buffer", scope: !3919, file: !3868, line: 268, baseType: !3956, size: 64, offset: 704)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !3919, file: !3868, line: 269, baseType: !3961, size: 64, offset: 768)
!3961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3962, size: 64)
!3962 = !DISubroutineType(types: !3963)
!3963 = !{!139, !233, !7, !126}
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !3919, file: !3868, line: 271, baseType: !3965, size: 64, offset: 832)
!3965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3966, size: 64)
!3966 = !DISubroutineType(types: !3967)
!3967 = !{!327, !233, !7, !126}
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "set_termios", scope: !3919, file: !3868, line: 273, baseType: !3969, size: 64, offset: 896)
!3969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3970, size: 64)
!3970 = !DISubroutineType(types: !3971)
!3971 = !{null, !233, !3914}
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "throttle", scope: !3919, file: !3868, line: 274, baseType: !3942, size: 64, offset: 960)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "unthrottle", scope: !3919, file: !3868, line: 275, baseType: !3942, size: 64, offset: 1024)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !3919, file: !3868, line: 276, baseType: !3942, size: 64, offset: 1088)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3919, file: !3868, line: 277, baseType: !3942, size: 64, offset: 1152)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "hangup", scope: !3919, file: !3868, line: 278, baseType: !3942, size: 64, offset: 1216)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "break_ctl", scope: !3919, file: !3868, line: 279, baseType: !3978, size: 64, offset: 1280)
!3978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3979, size: 64)
!3979 = !DISubroutineType(types: !3980)
!3980 = !{!139, !233, !139}
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "flush_buffer", scope: !3919, file: !3868, line: 280, baseType: !3942, size: 64, offset: 1344)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "set_ldisc", scope: !3919, file: !3868, line: 281, baseType: !3942, size: 64, offset: 1408)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "wait_until_sent", scope: !3919, file: !3868, line: 282, baseType: !3984, size: 64, offset: 1472)
!3984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3985, size: 64)
!3985 = !DISubroutineType(types: !3986)
!3986 = !{null, !233, !139}
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "send_xchar", scope: !3919, file: !3868, line: 283, baseType: !3988, size: 64, offset: 1536)
!3988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3989, size: 64)
!3989 = !DISubroutineType(types: !3990)
!3990 = !{null, !233, !119}
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "tiocmget", scope: !3919, file: !3868, line: 284, baseType: !3956, size: 64, offset: 1600)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "tiocmset", scope: !3919, file: !3868, line: 285, baseType: !3993, size: 64, offset: 1664)
!3993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3994, size: 64)
!3994 = !DISubroutineType(types: !3995)
!3995 = !{!139, !233, !7, !7}
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "resize", scope: !3919, file: !3868, line: 287, baseType: !3997, size: 64, offset: 1728)
!3997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3998, size: 64)
!3998 = !DISubroutineType(types: !3999)
!3999 = !{!139, !233, !4000}
!4000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4001, size: 64)
!4001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "winsize", file: !4002, line: 15, size: 64, elements: !4003)
!4002 = !DIFile(filename: "./include/uapi/asm-generic/termios.h", directory: "/home/lizy2001/genbc/linux")
!4003 = !{!4004, !4005, !4006, !4007}
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "ws_row", scope: !4001, file: !4002, line: 16, baseType: !131, size: 16)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "ws_col", scope: !4001, file: !4002, line: 17, baseType: !131, size: 16, offset: 16)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "ws_xpixel", scope: !4001, file: !4002, line: 18, baseType: !131, size: 16, offset: 32)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "ws_ypixel", scope: !4001, file: !4002, line: 19, baseType: !131, size: 16, offset: 48)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "set_termiox", scope: !3919, file: !3868, line: 288, baseType: !4009, size: 64, offset: 1792)
!4009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4010, size: 64)
!4010 = !DISubroutineType(types: !4011)
!4011 = !{!139, !233, !4012}
!4012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4013, size: 64)
!4013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "termiox", file: !4014, line: 10, size: 128, elements: !4015)
!4014 = !DIFile(filename: "./include/uapi/linux/termios.h", directory: "/home/lizy2001/genbc/linux")
!4015 = !{!4016, !4017, !4018, !4022}
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "x_hflag", scope: !4013, file: !4014, line: 12, baseType: !893, size: 16)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "x_cflag", scope: !4013, file: !4014, line: 13, baseType: !893, size: 16, offset: 16)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "x_rflag", scope: !4013, file: !4014, line: 14, baseType: !4019, size: 80, offset: 32)
!4019 = !DICompositeType(tag: DW_TAG_array_type, baseType: !893, size: 80, elements: !4020)
!4020 = !{!4021}
!4021 = !DISubrange(count: 5)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "x_sflag", scope: !4013, file: !4014, line: 15, baseType: !893, size: 16, offset: 112)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "get_icount", scope: !3919, file: !3868, line: 289, baseType: !4024, size: 64, offset: 1856)
!4024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4025, size: 64)
!4025 = !DISubroutineType(types: !4026)
!4026 = !{!139, !233, !4027}
!4027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4028, size: 64)
!4028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "serial_icounter_struct", file: !4029, line: 102, size: 640, elements: !4030)
!4029 = !DIFile(filename: "./include/uapi/linux/serial.h", directory: "/home/lizy2001/genbc/linux")
!4030 = !{!4031, !4032, !4033, !4034, !4035, !4036, !4037, !4038, !4039, !4040, !4041, !4042}
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "cts", scope: !4028, file: !4029, line: 103, baseType: !139, size: 32)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "dsr", scope: !4028, file: !4029, line: 103, baseType: !139, size: 32, offset: 32)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "rng", scope: !4028, file: !4029, line: 103, baseType: !139, size: 32, offset: 64)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "dcd", scope: !4028, file: !4029, line: 103, baseType: !139, size: 32, offset: 96)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "rx", scope: !4028, file: !4029, line: 104, baseType: !139, size: 32, offset: 128)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !4028, file: !4029, line: 104, baseType: !139, size: 32, offset: 160)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !4028, file: !4029, line: 105, baseType: !139, size: 32, offset: 192)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "overrun", scope: !4028, file: !4029, line: 105, baseType: !139, size: 32, offset: 224)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !4028, file: !4029, line: 105, baseType: !139, size: 32, offset: 256)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !4028, file: !4029, line: 105, baseType: !139, size: 32, offset: 288)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "buf_overrun", scope: !4028, file: !4029, line: 106, baseType: !139, size: 32, offset: 320)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4028, file: !4029, line: 107, baseType: !4043, size: 288, offset: 352)
!4043 = !DICompositeType(tag: DW_TAG_array_type, baseType: !139, size: 288, elements: !3519)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "get_serial", scope: !3919, file: !3868, line: 291, baseType: !4045, size: 64, offset: 1920)
!4045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4046, size: 64)
!4046 = !DISubroutineType(types: !4047)
!4047 = !{!139, !233, !4048}
!4048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4049, size: 64)
!4049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "serial_struct", file: !4029, line: 19, size: 576, elements: !4050)
!4050 = !{!4051, !4052, !4053, !4054, !4055, !4056, !4057, !4058, !4059, !4060, !4061, !4063, !4064, !4065, !4066, !4067, !4068, !4069}
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4049, file: !4029, line: 20, baseType: !139, size: 32)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !4049, file: !4029, line: 21, baseType: !139, size: 32, offset: 32)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4049, file: !4029, line: 22, baseType: !7, size: 32, offset: 64)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4049, file: !4029, line: 23, baseType: !139, size: 32, offset: 96)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4049, file: !4029, line: 24, baseType: !139, size: 32, offset: 128)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_fifo_size", scope: !4049, file: !4029, line: 25, baseType: !139, size: 32, offset: 160)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "custom_divisor", scope: !4049, file: !4029, line: 26, baseType: !139, size: 32, offset: 192)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "baud_base", scope: !4049, file: !4029, line: 27, baseType: !139, size: 32, offset: 224)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "close_delay", scope: !4049, file: !4029, line: 28, baseType: !131, size: 16, offset: 256)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "io_type", scope: !4049, file: !4029, line: 29, baseType: !119, size: 8, offset: 272)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_char", scope: !4049, file: !4029, line: 30, baseType: !4062, size: 8, offset: 280)
!4062 = !DICompositeType(tag: DW_TAG_array_type, baseType: !119, size: 8, elements: !1394)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "hub6", scope: !4049, file: !4029, line: 31, baseType: !139, size: 32, offset: 288)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "closing_wait", scope: !4049, file: !4029, line: 32, baseType: !131, size: 16, offset: 320)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "closing_wait2", scope: !4049, file: !4029, line: 33, baseType: !131, size: 16, offset: 336)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "iomem_base", scope: !4049, file: !4029, line: 34, baseType: !123, size: 64, offset: 384)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "iomem_reg_shift", scope: !4049, file: !4029, line: 35, baseType: !131, size: 16, offset: 448)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "port_high", scope: !4049, file: !4029, line: 36, baseType: !7, size: 32, offset: 480)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "iomap_base", scope: !4049, file: !4029, line: 37, baseType: !126, size: 64, offset: 512)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "set_serial", scope: !3919, file: !3868, line: 292, baseType: !4045, size: 64, offset: 1984)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !3919, file: !3868, line: 293, baseType: !4072, size: 64, offset: 2048)
!4072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4073, size: 64)
!4073 = !DISubroutineType(types: !4074)
!4074 = !{null, !233, !719}
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "proc_show", scope: !3919, file: !3868, line: 299, baseType: !750, size: 64, offset: 2112)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "tty_drivers", scope: !3867, file: !3868, line: 333, baseType: !186, size: 128, offset: 1344)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !234, file: !142, line: 290, baseType: !3917, size: 64, offset: 192)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !234, file: !142, line: 291, baseType: !139, size: 32, offset: 256)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "ldisc_sem", scope: !234, file: !142, line: 294, baseType: !4080, size: 384, offset: 320)
!4080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ld_semaphore", file: !4081, line: 133, size: 384, elements: !4082)
!4081 = !DIFile(filename: "./include/linux/tty_ldisc.h", directory: "/home/lizy2001/genbc/linux")
!4082 = !{!4083, !4084, !4085, !4086, !4087}
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4080, file: !4081, line: 134, baseType: !175, size: 64)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !4080, file: !4081, line: 135, baseType: !813, offset: 64)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "wait_readers", scope: !4080, file: !4081, line: 136, baseType: !7, size: 32, offset: 64)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "read_wait", scope: !4080, file: !4081, line: 137, baseType: !186, size: 128, offset: 128)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "write_wait", scope: !4080, file: !4081, line: 138, baseType: !186, size: 128, offset: 256)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "ldisc", scope: !234, file: !142, line: 295, baseType: !4089, size: 64, offset: 704)
!4089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4090, size: 64)
!4090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_ldisc", file: !4081, line: 215, size: 128, elements: !4091)
!4091 = !{!4092, !4137}
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4090, file: !4081, line: 216, baseType: !4093, size: 64)
!4093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4094, size: 64)
!4094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_ldisc_ops", file: !4081, line: 175, size: 1216, elements: !4095)
!4095 = !{!4096, !4097, !4098, !4099, !4100, !4101, !4102, !4103, !4107, !4111, !4115, !4116, !4117, !4121, !4122, !4126, !4127, !4131, !4135, !4136}
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !4094, file: !4081, line: 176, baseType: !139, size: 32)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4094, file: !4081, line: 177, baseType: !122, size: 64, offset: 64)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !4094, file: !4081, line: 178, baseType: !139, size: 32, offset: 128)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4094, file: !4081, line: 179, baseType: !139, size: 32, offset: 160)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4094, file: !4081, line: 184, baseType: !3956, size: 64, offset: 192)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !4094, file: !4081, line: 185, baseType: !3942, size: 64, offset: 256)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "flush_buffer", scope: !4094, file: !4081, line: 186, baseType: !3942, size: 64, offset: 320)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4094, file: !4081, line: 187, baseType: !4104, size: 64, offset: 384)
!4104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4105, size: 64)
!4105 = !DISubroutineType(types: !4106)
!4106 = !{!323, !233, !368, !123, !338}
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4094, file: !4081, line: 189, baseType: !4108, size: 64, offset: 448)
!4108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4109, size: 64)
!4109 = !DISubroutineType(types: !4110)
!4110 = !{!323, !233, !368, !433, !338}
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !4094, file: !4081, line: 191, baseType: !4112, size: 64, offset: 512)
!4112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4113, size: 64)
!4113 = !DISubroutineType(types: !4114)
!4114 = !{!139, !233, !368, !7, !126}
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !4094, file: !4081, line: 193, baseType: !4112, size: 64, offset: 576)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "set_termios", scope: !4094, file: !4081, line: 195, baseType: !3969, size: 64, offset: 640)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4094, file: !4081, line: 196, baseType: !4118, size: 64, offset: 704)
!4118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4119, size: 64)
!4119 = !DISubroutineType(types: !4120)
!4120 = !{!2966, !233, !368, !2968}
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "hangup", scope: !4094, file: !4081, line: 198, baseType: !3956, size: 64, offset: 768)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buf", scope: !4094, file: !4081, line: 203, baseType: !4123, size: 64, offset: 832)
!4123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4124, size: 64)
!4124 = !DISubroutineType(types: !4125)
!4125 = !{null, !233, !433, !122, !139}
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "write_wakeup", scope: !4094, file: !4081, line: 205, baseType: !3942, size: 64, offset: 896)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "dcd_change", scope: !4094, file: !4081, line: 206, baseType: !4128, size: 64, offset: 960)
!4128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4129, size: 64)
!4129 = !DISubroutineType(types: !4130)
!4130 = !{null, !233, !7}
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buf2", scope: !4094, file: !4081, line: 207, baseType: !4132, size: 64, offset: 1024)
!4132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4133, size: 64)
!4133 = !DISubroutineType(types: !4134)
!4134 = !{!139, !233, !433, !122, !139}
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4094, file: !4081, line: 210, baseType: !638, size: 64, offset: 1088)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4094, file: !4081, line: 212, baseType: !139, size: 32, offset: 1152)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !4090, file: !4081, line: 217, baseType: !233, size: 64, offset: 64)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_lock", scope: !234, file: !142, line: 297, baseType: !198, size: 192, offset: 768)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mutex", scope: !234, file: !142, line: 298, baseType: !198, size: 192, offset: 960)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "throttle_mutex", scope: !234, file: !142, line: 299, baseType: !198, size: 192, offset: 1152)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "termios_rwsem", scope: !234, file: !142, line: 300, baseType: !807, size: 256, offset: 1344)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "winsize_mutex", scope: !234, file: !142, line: 301, baseType: !198, size: 192, offset: 1600)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl_lock", scope: !234, file: !142, line: 302, baseType: !203, offset: 1792)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "flow_lock", scope: !234, file: !142, line: 303, baseType: !203, offset: 1792)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "termios", scope: !234, file: !142, line: 305, baseType: !3884, size: 352, offset: 1792)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "termios_locked", scope: !234, file: !142, line: 305, baseType: !3884, size: 352, offset: 2144)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "termiox", scope: !234, file: !142, line: 306, baseType: !4012, size: 64, offset: 2496)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !234, file: !142, line: 307, baseType: !4149, size: 512, offset: 2560)
!4149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !119, size: 512, elements: !297)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "pgrp", scope: !234, file: !142, line: 308, baseType: !1494, size: 64, offset: 3072)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "session", scope: !234, file: !142, line: 313, baseType: !1494, size: 64, offset: 3136)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !234, file: !142, line: 314, baseType: !126, size: 64, offset: 3200)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !234, file: !142, line: 315, baseType: !139, size: 32, offset: 3264)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "winsize", scope: !234, file: !142, line: 316, baseType: !4001, size: 64, offset: 3296)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "stopped", scope: !234, file: !142, line: 317, baseType: !126, size: 1, offset: 3360, flags: DIFlagBitField, extraData: i64 3360)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "flow_stopped", scope: !234, file: !142, line: 318, baseType: !126, size: 1, offset: 3361, flags: DIFlagBitField, extraData: i64 3360)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !234, file: !142, line: 319, baseType: !126, size: 62, offset: 3392, flags: DIFlagBitField, extraData: i64 3392)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "hw_stopped", scope: !234, file: !142, line: 320, baseType: !139, size: 32, offset: 3456)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl_status", scope: !234, file: !142, line: 321, baseType: !126, size: 8, offset: 3488, flags: DIFlagBitField, extraData: i64 3488)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !234, file: !142, line: 322, baseType: !126, size: 1, offset: 3496, flags: DIFlagBitField, extraData: i64 3488)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "unused_ctrl", scope: !234, file: !142, line: 323, baseType: !126, size: 55, offset: 3520, flags: DIFlagBitField, extraData: i64 3520)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "receive_room", scope: !234, file: !142, line: 324, baseType: !7, size: 32, offset: 3584)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "flow_change", scope: !234, file: !142, line: 325, baseType: !139, size: 32, offset: 3616)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !234, file: !142, line: 327, baseType: !233, size: 64, offset: 3648)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !234, file: !142, line: 328, baseType: !3020, size: 64, offset: 3712)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "write_wait", scope: !234, file: !142, line: 329, baseType: !1504, size: 128, offset: 3776)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "read_wait", scope: !234, file: !142, line: 330, baseType: !1504, size: 128, offset: 3904)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "hangup_work", scope: !234, file: !142, line: 331, baseType: !171, size: 256, offset: 4032)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "disc_data", scope: !234, file: !142, line: 332, baseType: !118, size: 64, offset: 4288)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !234, file: !142, line: 333, baseType: !118, size: 64, offset: 4352)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "files_lock", scope: !234, file: !142, line: 334, baseType: !203, offset: 4416)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "tty_files", scope: !234, file: !142, line: 335, baseType: !186, size: 128, offset: 4416)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "closing", scope: !234, file: !142, line: 339, baseType: !139, size: 32, offset: 4544)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "write_buf", scope: !234, file: !142, line: 340, baseType: !123, size: 64, offset: 4608)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "write_cnt", scope: !234, file: !142, line: 341, baseType: !139, size: 32, offset: 4672)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "SAK_work", scope: !234, file: !142, line: 343, baseType: !171, size: 256, offset: 4736)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !234, file: !142, line: 344, baseType: !3911, size: 64, offset: 4992)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "itty", scope: !141, file: !142, line: 233, baseType: !233, size: 64, offset: 1088)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !141, file: !142, line: 234, baseType: !4180, size: 64, offset: 1152)
!4180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4181, size: 64)
!4181 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4182)
!4182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_port_operations", file: !142, line: 205, size: 320, elements: !4183)
!4183 = !{!4184, !4188, !4192, !4196, !4200}
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_raised", scope: !4182, file: !142, line: 207, baseType: !4185, size: 64)
!4185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4186, size: 64)
!4186 = !DISubroutineType(types: !4187)
!4187 = !{!139, !3911}
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "dtr_rts", scope: !4182, file: !142, line: 209, baseType: !4189, size: 64, offset: 64)
!4189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4190, size: 64)
!4190 = !DISubroutineType(types: !4191)
!4191 = !{null, !3911, !139}
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4182, file: !142, line: 213, baseType: !4193, size: 64, offset: 128)
!4193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4194, size: 64)
!4194 = !DISubroutineType(types: !4195)
!4195 = !{null, !3911}
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4182, file: !142, line: 218, baseType: !4197, size: 64, offset: 192)
!4197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4198, size: 64)
!4198 = !DISubroutineType(types: !4199)
!4199 = !{!139, !3911, !233}
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "destruct", scope: !4182, file: !142, line: 220, baseType: !4193, size: 64, offset: 256)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "client_ops", scope: !141, file: !142, line: 235, baseType: !4202, size: 64, offset: 1216)
!4202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4203, size: 64)
!4203 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4204)
!4204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_port_client_operations", file: !142, line: 223, size: 128, elements: !4205)
!4205 = !{!4206, !4210}
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buf", scope: !4204, file: !142, line: 224, baseType: !4207, size: 64)
!4207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4208, size: 64)
!4208 = !DISubroutineType(types: !4209)
!4209 = !{!139, !3911, !433, !433, !338}
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "write_wakeup", scope: !4204, file: !142, line: 225, baseType: !4193, size: 64, offset: 64)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !141, file: !142, line: 236, baseType: !203, offset: 1280)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "blocked_open", scope: !141, file: !142, line: 237, baseType: !139, size: 32, offset: 1280)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !141, file: !142, line: 238, baseType: !139, size: 32, offset: 1312)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "open_wait", scope: !141, file: !142, line: 239, baseType: !1504, size: 128, offset: 1344)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "delta_msr_wait", scope: !141, file: !142, line: 240, baseType: !1504, size: 128, offset: 1472)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !141, file: !142, line: 241, baseType: !126, size: 64, offset: 1600)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "iflags", scope: !141, file: !142, line: 242, baseType: !126, size: 64, offset: 1664)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "console", scope: !141, file: !142, line: 243, baseType: !124, size: 1, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "low_latency", scope: !141, file: !142, line: 244, baseType: !124, size: 1, offset: 1729, flags: DIFlagBitField, extraData: i64 1728)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !141, file: !142, line: 245, baseType: !198, size: 192, offset: 1792)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "buf_mutex", scope: !141, file: !142, line: 246, baseType: !198, size: 192, offset: 1984)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_buf", scope: !141, file: !142, line: 247, baseType: !123, size: 64, offset: 2176)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "close_delay", scope: !141, file: !142, line: 248, baseType: !7, size: 32, offset: 2240)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "closing_wait", scope: !141, file: !142, line: 249, baseType: !7, size: 32, offset: 2272)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "drain_delay", scope: !141, file: !142, line: 250, baseType: !139, size: 32, offset: 2304)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !141, file: !142, line: 253, baseType: !238, size: 32, offset: 2336)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !141, file: !142, line: 254, baseType: !118, size: 64, offset: 2368)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "card", scope: !135, file: !136, line: 122, baseType: !4229, size: 64, offset: 2496)
!4229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4230, size: 64)
!4230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cyclades_card", file: !136, line: 74, size: 512, elements: !4231)
!4231 = !{!4232, !4233, !4270, !4286, !4287, !4288, !4289, !4290, !4291, !4292, !4293, !4294}
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !4230, file: !136, line: 75, baseType: !118, size: 64)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_addr", scope: !4230, file: !136, line: 79, baseType: !4234, size: 64, offset: 64)
!4234 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4230, file: !136, line: 76, size: 64, elements: !4235)
!4235 = !{!4236, !4237}
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "p9050", scope: !4234, file: !136, line: 77, baseType: !118, size: 64)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "p9060", scope: !4234, file: !136, line: 78, baseType: !4238, size: 64)
!4238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4239, size: 64)
!4239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RUNTIME_9060", file: !4240, line: 188, size: 896, elements: !4241)
!4240 = !DIFile(filename: "./include/uapi/linux/cyclades.h", directory: "/home/lizy2001/genbc/linux")
!4241 = !{!4242, !4243, !4244, !4245, !4246, !4247, !4248, !4249, !4250, !4251, !4252, !4253, !4254, !4255, !4256, !4257, !4258, !4259, !4260, !4261, !4262, !4263, !4264, !4265, !4266, !4267, !4268, !4269}
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "loc_addr_range", scope: !4239, file: !4240, line: 189, baseType: !120, size: 32)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "loc_addr_base", scope: !4239, file: !4240, line: 190, baseType: !120, size: 32, offset: 32)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "loc_arbitr", scope: !4239, file: !4240, line: 191, baseType: !120, size: 32, offset: 64)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "endian_descr", scope: !4239, file: !4240, line: 192, baseType: !120, size: 32, offset: 96)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "loc_rom_range", scope: !4239, file: !4240, line: 193, baseType: !120, size: 32, offset: 128)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "loc_rom_base", scope: !4239, file: !4240, line: 194, baseType: !120, size: 32, offset: 160)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "loc_bus_descr", scope: !4239, file: !4240, line: 195, baseType: !120, size: 32, offset: 192)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "loc_range_mst", scope: !4239, file: !4240, line: 196, baseType: !120, size: 32, offset: 224)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "loc_base_mst", scope: !4239, file: !4240, line: 197, baseType: !120, size: 32, offset: 256)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "loc_range_io", scope: !4239, file: !4240, line: 198, baseType: !120, size: 32, offset: 288)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "pci_base_mst", scope: !4239, file: !4240, line: 199, baseType: !120, size: 32, offset: 320)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "pci_conf_io", scope: !4239, file: !4240, line: 200, baseType: !120, size: 32, offset: 352)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "filler1", scope: !4239, file: !4240, line: 201, baseType: !120, size: 32, offset: 384)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "filler2", scope: !4239, file: !4240, line: 202, baseType: !120, size: 32, offset: 416)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "filler3", scope: !4239, file: !4240, line: 203, baseType: !120, size: 32, offset: 448)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "filler4", scope: !4239, file: !4240, line: 204, baseType: !120, size: 32, offset: 480)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "mail_box_0", scope: !4239, file: !4240, line: 205, baseType: !120, size: 32, offset: 512)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "mail_box_1", scope: !4239, file: !4240, line: 206, baseType: !120, size: 32, offset: 544)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "mail_box_2", scope: !4239, file: !4240, line: 207, baseType: !120, size: 32, offset: 576)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "mail_box_3", scope: !4239, file: !4240, line: 208, baseType: !120, size: 32, offset: 608)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "filler5", scope: !4239, file: !4240, line: 209, baseType: !120, size: 32, offset: 640)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "filler6", scope: !4239, file: !4240, line: 210, baseType: !120, size: 32, offset: 672)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "filler7", scope: !4239, file: !4240, line: 211, baseType: !120, size: 32, offset: 704)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "filler8", scope: !4239, file: !4240, line: 212, baseType: !120, size: 32, offset: 736)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "pci_doorbell", scope: !4239, file: !4240, line: 213, baseType: !120, size: 32, offset: 768)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "loc_doorbell", scope: !4239, file: !4240, line: 214, baseType: !120, size: 32, offset: 800)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "intr_ctrl_stat", scope: !4239, file: !4240, line: 215, baseType: !120, size: 32, offset: 832)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "init_ctrl", scope: !4239, file: !4240, line: 216, baseType: !120, size: 32, offset: 864)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "board_ctrl", scope: !4230, file: !136, line: 80, baseType: !4271, size: 64, offset: 128)
!4271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4272, size: 64)
!4272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BOARD_CTRL", file: !4240, line: 442, size: 512, elements: !4273)
!4273 = !{!4274, !4275, !4276, !4277, !4278, !4279, !4280, !4281, !4282, !4283, !4284}
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "n_channel", scope: !4272, file: !4240, line: 445, baseType: !120, size: 32)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "fw_version", scope: !4272, file: !4240, line: 446, baseType: !120, size: 32, offset: 32)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "op_system", scope: !4272, file: !4240, line: 449, baseType: !120, size: 32, offset: 64)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "dr_version", scope: !4272, file: !4240, line: 450, baseType: !120, size: 32, offset: 96)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "inactivity", scope: !4272, file: !4240, line: 453, baseType: !120, size: 32, offset: 128)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "hcmd_channel", scope: !4272, file: !4240, line: 456, baseType: !120, size: 32, offset: 160)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "hcmd_param", scope: !4272, file: !4240, line: 457, baseType: !120, size: 32, offset: 192)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "fwcmd_channel", scope: !4272, file: !4240, line: 460, baseType: !120, size: 32, offset: 224)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "fwcmd_param", scope: !4272, file: !4240, line: 461, baseType: !120, size: 32, offset: 256)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "zf_int_queue_addr", scope: !4272, file: !4240, line: 462, baseType: !120, size: 32, offset: 288)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "filler", scope: !4272, file: !4240, line: 465, baseType: !4285, size: 192, offset: 320)
!4285 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 192, elements: !1681)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4230, file: !136, line: 81, baseType: !139, size: 32, offset: 192)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "num_chips", scope: !4230, file: !136, line: 82, baseType: !7, size: 32, offset: 224)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "first_line", scope: !4230, file: !136, line: 83, baseType: !7, size: 32, offset: 256)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "nports", scope: !4230, file: !136, line: 84, baseType: !7, size: 32, offset: 288)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "bus_index", scope: !4230, file: !136, line: 85, baseType: !139, size: 32, offset: 320)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "intr_enabled", scope: !4230, file: !136, line: 86, baseType: !139, size: 32, offset: 352)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "hw_ver", scope: !4230, file: !136, line: 87, baseType: !426, size: 32, offset: 384)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "card_lock", scope: !4230, file: !136, line: 88, baseType: !203, offset: 416)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !4230, file: !136, line: 89, baseType: !134, size: 64, offset: 448)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !135, file: !136, line: 131, baseType: !4296, size: 128, offset: 2560)
!4296 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !135, file: !136, line: 123, size: 128, elements: !4297)
!4297 = !{!4298, !4302}
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "cyy", scope: !4296, file: !136, line: 126, baseType: !4299, size: 64)
!4299 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4296, file: !136, line: 124, size: 64, elements: !4300)
!4300 = !{!4301}
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !4299, file: !136, line: 125, baseType: !118, size: 64)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "cyz", scope: !4296, file: !136, line: 130, baseType: !4303, size: 128)
!4303 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4296, file: !136, line: 127, size: 128, elements: !4304)
!4304 = !{!4305, !4330}
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "ch_ctrl", scope: !4303, file: !136, line: 128, baseType: !4306, size: 64)
!4306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4307, size: 64)
!4307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CH_CTRL", file: !4240, line: 395, size: 768, elements: !4308)
!4308 = !{!4309, !4310, !4311, !4312, !4313, !4314, !4315, !4316, !4317, !4318, !4319, !4320, !4321, !4322, !4323, !4324, !4325, !4326}
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "op_mode", scope: !4307, file: !4240, line: 396, baseType: !120, size: 32)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "intr_enable", scope: !4307, file: !4240, line: 397, baseType: !120, size: 32, offset: 32)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "sw_flow", scope: !4307, file: !4240, line: 398, baseType: !120, size: 32, offset: 64)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "flow_status", scope: !4307, file: !4240, line: 399, baseType: !120, size: 32, offset: 96)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "comm_baud", scope: !4307, file: !4240, line: 400, baseType: !120, size: 32, offset: 128)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "comm_parity", scope: !4307, file: !4240, line: 401, baseType: !120, size: 32, offset: 160)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "comm_data_l", scope: !4307, file: !4240, line: 402, baseType: !120, size: 32, offset: 192)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "comm_flags", scope: !4307, file: !4240, line: 403, baseType: !120, size: 32, offset: 224)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow", scope: !4307, file: !4240, line: 404, baseType: !120, size: 32, offset: 256)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "rs_control", scope: !4307, file: !4240, line: 405, baseType: !120, size: 32, offset: 288)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "rs_status", scope: !4307, file: !4240, line: 406, baseType: !120, size: 32, offset: 320)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "flow_xon", scope: !4307, file: !4240, line: 407, baseType: !120, size: 32, offset: 352)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "flow_xoff", scope: !4307, file: !4240, line: 408, baseType: !120, size: 32, offset: 384)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "hw_overflow", scope: !4307, file: !4240, line: 409, baseType: !120, size: 32, offset: 416)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "sw_overflow", scope: !4307, file: !4240, line: 410, baseType: !120, size: 32, offset: 448)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "comm_error", scope: !4307, file: !4240, line: 411, baseType: !120, size: 32, offset: 480)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "ichar", scope: !4307, file: !4240, line: 412, baseType: !120, size: 32, offset: 512)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "filler", scope: !4307, file: !4240, line: 413, baseType: !4327, size: 224, offset: 544)
!4327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 224, elements: !4328)
!4328 = !{!4329}
!4329 = !DISubrange(count: 7)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ctrl", scope: !4303, file: !136, line: 129, baseType: !4331, size: 64, offset: 64)
!4331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4332, size: 64)
!4332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BUF_CTRL", file: !4240, line: 422, size: 512, elements: !4333)
!4333 = !{!4334, !4335, !4336, !4337, !4338, !4339, !4340, !4341, !4342, !4343, !4344, !4345}
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dma", scope: !4332, file: !4240, line: 423, baseType: !120, size: 32)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bufaddr", scope: !4332, file: !4240, line: 424, baseType: !120, size: 32, offset: 32)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bufsize", scope: !4332, file: !4240, line: 425, baseType: !120, size: 32, offset: 64)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "tx_threshold", scope: !4332, file: !4240, line: 426, baseType: !120, size: 32, offset: 96)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "tx_get", scope: !4332, file: !4240, line: 427, baseType: !120, size: 32, offset: 128)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "tx_put", scope: !4332, file: !4240, line: 428, baseType: !120, size: 32, offset: 160)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bufaddr", scope: !4332, file: !4240, line: 429, baseType: !120, size: 32, offset: 192)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bufsize", scope: !4332, file: !4240, line: 430, baseType: !120, size: 32, offset: 224)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "rx_threshold", scope: !4332, file: !4240, line: 431, baseType: !120, size: 32, offset: 256)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "rx_get", scope: !4332, file: !4240, line: 432, baseType: !120, size: 32, offset: 288)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "rx_put", scope: !4332, file: !4240, line: 433, baseType: !120, size: 32, offset: 320)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "filler", scope: !4332, file: !4240, line: 434, baseType: !4346, size: 160, offset: 352)
!4346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 160, elements: !4020)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !135, file: !136, line: 132, baseType: !139, size: 32, offset: 2688)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !135, file: !136, line: 133, baseType: !139, size: 32, offset: 2720)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !135, file: !136, line: 134, baseType: !139, size: 32, offset: 2752)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "read_status_mask", scope: !135, file: !136, line: 135, baseType: !139, size: 32, offset: 2784)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_status_mask", scope: !135, file: !136, line: 136, baseType: !139, size: 32, offset: 2816)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !135, file: !136, line: 137, baseType: !139, size: 32, offset: 2848)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_fifo_size", scope: !135, file: !136, line: 138, baseType: !139, size: 32, offset: 2880)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "cor1", scope: !135, file: !136, line: 139, baseType: !139, size: 32, offset: 2912)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "cor2", scope: !135, file: !136, line: 139, baseType: !139, size: 32, offset: 2944)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "cor3", scope: !135, file: !136, line: 139, baseType: !139, size: 32, offset: 2976)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "cor4", scope: !135, file: !136, line: 139, baseType: !139, size: 32, offset: 3008)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "cor5", scope: !135, file: !136, line: 139, baseType: !139, size: 32, offset: 3040)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "tbpr", scope: !135, file: !136, line: 140, baseType: !139, size: 32, offset: 3072)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "tco", scope: !135, file: !136, line: 140, baseType: !139, size: 32, offset: 3104)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "rbpr", scope: !135, file: !136, line: 140, baseType: !139, size: 32, offset: 3136)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "rco", scope: !135, file: !136, line: 140, baseType: !139, size: 32, offset: 3168)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "baud", scope: !135, file: !136, line: 141, baseType: !139, size: 32, offset: 3200)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "rflow", scope: !135, file: !136, line: 142, baseType: !139, size: 32, offset: 3232)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "rtsdtr_inv", scope: !135, file: !136, line: 143, baseType: !139, size: 32, offset: 3264)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "chip_rev", scope: !135, file: !136, line: 144, baseType: !139, size: 32, offset: 3296)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "custom_divisor", scope: !135, file: !136, line: 145, baseType: !139, size: 32, offset: 3328)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "x_char", scope: !135, file: !136, line: 146, baseType: !1375, size: 8, offset: 3360)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "breakon", scope: !135, file: !136, line: 147, baseType: !139, size: 32, offset: 3392)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "breakoff", scope: !135, file: !136, line: 148, baseType: !139, size: 32, offset: 3424)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_head", scope: !135, file: !136, line: 149, baseType: !139, size: 32, offset: 3456)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_tail", scope: !135, file: !136, line: 150, baseType: !139, size: 32, offset: 3488)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_cnt", scope: !135, file: !136, line: 151, baseType: !139, size: 32, offset: 3520)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "default_threshold", scope: !135, file: !136, line: 152, baseType: !139, size: 32, offset: 3552)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "default_timeout", scope: !135, file: !136, line: 153, baseType: !139, size: 32, offset: 3584)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "rflush_count", scope: !135, file: !136, line: 154, baseType: !126, size: 64, offset: 3648)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "mon", scope: !135, file: !136, line: 155, baseType: !4378, size: 256, offset: 3712)
!4378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cyclades_monitor", file: !4240, line: 73, size: 256, elements: !4379)
!4379 = !{!4380, !4381, !4382, !4383}
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "int_count", scope: !4378, file: !4240, line: 74, baseType: !126, size: 64)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "char_count", scope: !4378, file: !4240, line: 75, baseType: !126, size: 64, offset: 64)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "char_max", scope: !4378, file: !4240, line: 76, baseType: !126, size: 64, offset: 128)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "char_last", scope: !4378, file: !4240, line: 77, baseType: !126, size: 64, offset: 192)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "idle_stats", scope: !135, file: !136, line: 156, baseType: !4385, size: 512, offset: 3968)
!4385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cyclades_idle_stats", file: !4240, line: 85, size: 512, elements: !4386)
!4386 = !{!4387, !4389, !4390, !4391, !4392, !4393, !4394, !4395}
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "in_use", scope: !4385, file: !4240, line: 86, baseType: !4388, size: 64)
!4388 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_old_time_t", file: !325, line: 89, baseType: !326)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "recv_idle", scope: !4385, file: !4240, line: 87, baseType: !4388, size: 64, offset: 64)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_idle", scope: !4385, file: !4240, line: 88, baseType: !4388, size: 64, offset: 128)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "recv_bytes", scope: !4385, file: !4240, line: 89, baseType: !126, size: 64, offset: 192)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_bytes", scope: !4385, file: !4240, line: 90, baseType: !126, size: 64, offset: 256)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "overruns", scope: !4385, file: !4240, line: 91, baseType: !126, size: 64, offset: 320)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "frame_errs", scope: !4385, file: !4240, line: 92, baseType: !126, size: 64, offset: 384)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "parity_errs", scope: !4385, file: !4240, line: 93, baseType: !126, size: 64, offset: 448)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "icount", scope: !135, file: !136, line: 157, baseType: !4397, size: 352, offset: 4480)
!4397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cyclades_icount", file: !136, line: 104, size: 352, elements: !4398)
!4398 = !{!4399, !4400, !4401, !4402, !4403, !4404, !4405, !4406, !4407, !4408, !4409}
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "cts", scope: !4397, file: !136, line: 105, baseType: !120, size: 32)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "dsr", scope: !4397, file: !136, line: 105, baseType: !120, size: 32, offset: 32)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "rng", scope: !4397, file: !136, line: 105, baseType: !120, size: 32, offset: 64)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "dcd", scope: !4397, file: !136, line: 105, baseType: !120, size: 32, offset: 96)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !4397, file: !136, line: 105, baseType: !120, size: 32, offset: 128)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "rx", scope: !4397, file: !136, line: 105, baseType: !120, size: 32, offset: 160)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !4397, file: !136, line: 106, baseType: !120, size: 32, offset: 192)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !4397, file: !136, line: 106, baseType: !120, size: 32, offset: 224)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "overrun", scope: !4397, file: !136, line: 106, baseType: !120, size: 32, offset: 256)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !4397, file: !136, line: 106, baseType: !120, size: 32, offset: 288)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "buf_overrun", scope: !4397, file: !136, line: 107, baseType: !120, size: 32, offset: 320)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_wait", scope: !135, file: !136, line: 158, baseType: !1558, size: 192, offset: 4864)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "throttle", scope: !135, file: !136, line: 159, baseType: !139, size: 32, offset: 5056)
!4412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4413, size: 64)
!4413 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !119)
!4414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 64)
!4415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4416, size: 64)
!4416 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4417)
!4417 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !651)
!4418 = !{!4419, !4421, !4426, !4431, !4436, !4438, !4483, !4488, !4493, !4495, !0, !4498, !4500, !4777, !4780, !4783, !4785, !4790, !4792, !4794, !4796, !4798, !4801, !4803, !4805, !4811, !4813, !4815, !4818}
!4419 = !DIGlobalVariableExpression(var: !4420, expr: !DIExpression())
!4420 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_cy_init251", scope: !2, file: !3, line: 4113, type: !118, isLocal: true, isDefinition: true)
!4421 = !DIGlobalVariableExpression(var: !4422, expr: !DIExpression())
!4422 = distinct !DIGlobalVariable(name: "__exitcall_cy_cleanup_module", scope: !2, file: !3, line: 4114, type: !4423, isLocal: true, isDefinition: true)
!4423 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !4424, line: 117, baseType: !4425)
!4424 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!4425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64)
!4426 = !DIGlobalVariableExpression(var: !4427, expr: !DIExpression())
!4427 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file252", scope: !2, file: !3, line: 4116, type: !4428, isLocal: true, isDefinition: true, align: 8)
!4428 = !DICompositeType(tag: DW_TAG_array_type, baseType: !257, size: 280, elements: !4429)
!4429 = !{!4430}
!4430 = !DISubrange(count: 35)
!4431 = !DIGlobalVariableExpression(var: !4432, expr: !DIExpression())
!4432 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license253", scope: !2, file: !3, line: 4116, type: !4433, isLocal: true, isDefinition: true, align: 8)
!4433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !257, size: 168, elements: !4434)
!4434 = !{!4435}
!4435 = !DISubrange(count: 21)
!4436 = !DIGlobalVariableExpression(var: !4437, expr: !DIExpression())
!4437 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_version254", scope: !2, file: !3, line: 4117, type: !4433, isLocal: true, isDefinition: true, align: 8)
!4438 = !DIGlobalVariableExpression(var: !4439, expr: !DIExpression())
!4439 = distinct !DIGlobalVariable(name: "__modver_attr", scope: !2, file: !3, line: 4117, type: !4440, isLocal: true, isDefinition: true)
!4440 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4441)
!4441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4442, size: 64)
!4442 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4443)
!4443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_version_attribute", file: !4444, line: 65, size: 576, align: 64, elements: !4445)
!4444 = !DIFile(filename: "./include/linux/module.h", directory: "/home/lizy2001/genbc/linux")
!4445 = !{!4446, !4481, !4482}
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "mattr", scope: !4443, file: !4444, line: 66, baseType: !4447, size: 448)
!4447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_attribute", file: !4444, line: 54, size: 448, elements: !4448)
!4448 = !{!4449, !4450, !4465, !4469, !4473, !4477}
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4447, file: !4444, line: 55, baseType: !329, size: 128)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !4447, file: !4444, line: 56, baseType: !4451, size: 64, offset: 128)
!4451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4452, size: 64)
!4452 = !DISubroutineType(types: !4453)
!4453 = !{!323, !4454, !4455, !122}
!4454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4447, size: 64)
!4455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4456, size: 64)
!4456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_kobject", file: !4444, line: 46, size: 768, elements: !4457)
!4457 = !{!4458, !4459, !4460, !4461, !4464}
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4456, file: !4444, line: 47, baseType: !252, size: 512)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !4456, file: !4444, line: 48, baseType: !638, size: 64, offset: 512)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "drivers_dir", scope: !4456, file: !4444, line: 49, baseType: !260, size: 64, offset: 576)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "mp", scope: !4456, file: !4444, line: 50, baseType: !4462, size: 64, offset: 640)
!4462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4463, size: 64)
!4463 = !DICompositeType(tag: DW_TAG_structure_type, name: "module_param_attrs", file: !4444, line: 50, flags: DIFlagFwdDecl)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "kobj_completion", scope: !4456, file: !4444, line: 51, baseType: !1557, size: 64, offset: 704)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !4447, file: !4444, line: 58, baseType: !4466, size: 64, offset: 192)
!4466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4467, size: 64)
!4467 = !DISubroutineType(types: !4468)
!4468 = !{!323, !4454, !4455, !256, !338}
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !4447, file: !4444, line: 60, baseType: !4470, size: 64, offset: 256)
!4470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4471, size: 64)
!4471 = !DISubroutineType(types: !4472)
!4472 = !{null, !638, !256}
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !4447, file: !4444, line: 61, baseType: !4474, size: 64, offset: 320)
!4474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4475, size: 64)
!4475 = !DISubroutineType(types: !4476)
!4476 = !{!139, !638}
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4447, file: !4444, line: 62, baseType: !4478, size: 64, offset: 384)
!4478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4479, size: 64)
!4479 = !DISubroutineType(types: !4480)
!4480 = !{null, !638}
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !4443, file: !4444, line: 67, baseType: !256, size: 64, offset: 448)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !4443, file: !4444, line: 68, baseType: !256, size: 64, offset: 512)
!4483 = !DIGlobalVariableExpression(var: !4484, expr: !DIExpression())
!4484 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_alias255", scope: !2, file: !3, line: 4118, type: !4485, isLocal: true, isDefinition: true, align: 8)
!4485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !257, size: 248, elements: !4486)
!4486 = !{!4487}
!4487 = !DISubrange(count: 31)
!4488 = !DIGlobalVariableExpression(var: !4489, expr: !DIExpression())
!4489 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmware256", scope: !2, file: !3, line: 4119, type: !4490, isLocal: true, isDefinition: true, align: 8)
!4490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !257, size: 240, elements: !4491)
!4491 = !{!4492}
!4492 = !DISubrange(count: 30)
!4493 = !DIGlobalVariableExpression(var: !4494, expr: !DIExpression())
!4494 = distinct !DIGlobalVariable(name: "cy_serial_driver", scope: !2, file: !3, line: 133, type: !3866, isLocal: true, isDefinition: true)
!4495 = !DIGlobalVariableExpression(var: !4496, expr: !DIExpression())
!4496 = distinct !DIGlobalVariable(name: "cy_card", scope: !2, file: !3, line: 168, type: !4497, isLocal: true, isDefinition: true)
!4497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4230, size: 2048, elements: !1189)
!4498 = !DIGlobalVariableExpression(var: !4499, expr: !DIExpression())
!4499 = distinct !DIGlobalVariable(name: "cyz_polling_cycle", scope: !2, file: !3, line: 285, type: !327, isLocal: true, isDefinition: true)
!4500 = !DIGlobalVariableExpression(var: !4501, expr: !DIExpression())
!4501 = distinct !DIGlobalVariable(name: "cy_pci_driver", scope: !2, file: !3, line: 3917, type: !4502, isLocal: true, isDefinition: true)
!4502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !4503, line: 858, size: 2048, elements: !4504)
!4503 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!4504 = !{!4505, !4506, !4507, !4519, !4735, !4739, !4743, !4747, !4748, !4752, !4770, !4771, !4772}
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4502, file: !4503, line: 859, baseType: !186, size: 128)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4502, file: !4503, line: 860, baseType: !256, size: 64, offset: 128)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !4502, file: !4503, line: 861, baseType: !4508, size: 64, offset: 192)
!4508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4509, size: 64)
!4509 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4510)
!4510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !3503, line: 38, size: 256, elements: !4511)
!4511 = !{!4512, !4513, !4514, !4515, !4516, !4517, !4518}
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !4510, file: !3503, line: 39, baseType: !120, size: 32)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4510, file: !3503, line: 39, baseType: !120, size: 32, offset: 32)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !4510, file: !3503, line: 40, baseType: !120, size: 32, offset: 64)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !4510, file: !3503, line: 40, baseType: !120, size: 32, offset: 96)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4510, file: !3503, line: 41, baseType: !120, size: 32, offset: 128)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !4510, file: !3503, line: 41, baseType: !120, size: 32, offset: 160)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4510, file: !3503, line: 42, baseType: !3522, size: 64, offset: 192)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4502, file: !4503, line: 862, baseType: !4520, size: 64, offset: 256)
!4520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4521, size: 64)
!4521 = !DISubroutineType(types: !4522)
!4522 = !{!139, !4523, !4508}
!4523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4524, size: 64)
!4524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !4503, line: 309, size: 19264, elements: !4525)
!4525 = !{!4526, !4527, !4599, !4600, !4601, !4602, !4613, !4614, !4615, !4616, !4617, !4618, !4619, !4620, !4621, !4622, !4623, !4624, !4625, !4626, !4627, !4628, !4629, !4631, !4632, !4633, !4635, !4636, !4637, !4638, !4639, !4640, !4641, !4642, !4643, !4644, !4645, !4646, !4647, !4648, !4649, !4650, !4651, !4652, !4653, !4654, !4657, !4658, !4659, !4660, !4662, !4663, !4664, !4665, !4669, !4670, !4671, !4672, !4673, !4674, !4675, !4676, !4677, !4678, !4679, !4680, !4681, !4682, !4683, !4684, !4685, !4686, !4687, !4688, !4689, !4690, !4691, !4692, !4693, !4694, !4695, !4696, !4697, !4698, !4699, !4700, !4701, !4702, !4703, !4704, !4705, !4706, !4708, !4709, !4711, !4712, !4713, !4714, !4716, !4717, !4718, !4721, !4728, !4729, !4730, !4731, !4732, !4733, !4734}
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !4524, file: !4503, line: 310, baseType: !186, size: 128)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4524, file: !4503, line: 311, baseType: !4528, size: 64, offset: 128)
!4528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4529, size: 64)
!4529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !4503, line: 605, size: 8064, elements: !4530)
!4530 = !{!4531, !4532, !4533, !4534, !4535, !4536, !4537, !4552, !4553, !4554, !4578, !4581, !4582, !4583, !4584, !4585, !4586, !4587, !4591, !4592, !4594, !4595, !4596, !4597, !4598}
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4529, file: !4503, line: 606, baseType: !186, size: 128)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4529, file: !4503, line: 607, baseType: !4528, size: 64, offset: 128)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4529, file: !4503, line: 608, baseType: !186, size: 128, offset: 192)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !4529, file: !4503, line: 609, baseType: !186, size: 128, offset: 320)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !4529, file: !4503, line: 610, baseType: !4523, size: 64, offset: 448)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !4529, file: !4503, line: 611, baseType: !186, size: 128, offset: 512)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !4529, file: !4503, line: 613, baseType: !4538, size: 256, offset: 640)
!4538 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4539, size: 256, elements: !1189)
!4539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4540, size: 64)
!4540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !4541, line: 20, size: 512, elements: !4542)
!4541 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!4542 = !{!4543, !4545, !4546, !4547, !4548, !4549, !4550, !4551}
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4540, file: !4541, line: 21, baseType: !4544, size: 64)
!4544 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !133, line: 158, baseType: !2190)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4540, file: !4541, line: 22, baseType: !4544, size: 64, offset: 64)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4540, file: !4541, line: 23, baseType: !256, size: 64, offset: 128)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4540, file: !4541, line: 24, baseType: !126, size: 64, offset: 192)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4540, file: !4541, line: 25, baseType: !126, size: 64, offset: 256)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4540, file: !4541, line: 26, baseType: !4539, size: 64, offset: 320)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !4540, file: !4541, line: 26, baseType: !4539, size: 64, offset: 384)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !4540, file: !4541, line: 26, baseType: !4539, size: 64, offset: 448)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !4529, file: !4503, line: 614, baseType: !186, size: 128, offset: 896)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !4529, file: !4503, line: 615, baseType: !4540, size: 512, offset: 1024)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4529, file: !4503, line: 617, baseType: !4555, size: 64, offset: 1536)
!4555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4556, size: 64)
!4556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !4503, line: 731, size: 320, elements: !4557)
!4557 = !{!4558, !4562, !4566, !4570, !4574}
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !4556, file: !4503, line: 732, baseType: !4559, size: 64)
!4559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4560, size: 64)
!4560 = !DISubroutineType(types: !4561)
!4561 = !{!139, !4528}
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !4556, file: !4503, line: 733, baseType: !4563, size: 64, offset: 64)
!4563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4564, size: 64)
!4564 = !DISubroutineType(types: !4565)
!4565 = !{null, !4528}
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !4556, file: !4503, line: 734, baseType: !4567, size: 64, offset: 128)
!4567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4568, size: 64)
!4568 = !DISubroutineType(types: !4569)
!4569 = !{!118, !4528, !7, !139}
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4556, file: !4503, line: 735, baseType: !4571, size: 64, offset: 192)
!4571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4572, size: 64)
!4572 = !DISubroutineType(types: !4573)
!4573 = !{!139, !4528, !7, !139, !139, !1438}
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4556, file: !4503, line: 736, baseType: !4575, size: 64, offset: 256)
!4575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4576, size: 64)
!4576 = !DISubroutineType(types: !4577)
!4577 = !{!139, !4528, !7, !139, !139, !426}
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !4529, file: !4503, line: 618, baseType: !4579, size: 64, offset: 1600)
!4579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4580, size: 64)
!4580 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !4503, line: 537, flags: DIFlagFwdDecl)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !4529, file: !4503, line: 619, baseType: !118, size: 64, offset: 1664)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !4529, file: !4503, line: 620, baseType: !3903, size: 64, offset: 1728)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !4529, file: !4503, line: 622, baseType: !124, size: 8, offset: 1792)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !4529, file: !4503, line: 623, baseType: !124, size: 8, offset: 1800)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !4529, file: !4503, line: 624, baseType: !124, size: 8, offset: 1808)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !4529, file: !4503, line: 625, baseType: !124, size: 8, offset: 1816)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4529, file: !4503, line: 630, baseType: !4588, size: 384, offset: 1824)
!4588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !119, size: 384, elements: !4589)
!4589 = !{!4590}
!4590 = !DISubrange(count: 48)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !4529, file: !4503, line: 632, baseType: !131, size: 16, offset: 2208)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !4529, file: !4503, line: 633, baseType: !4593, size: 16, offset: 2224)
!4593 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !4503, line: 237, baseType: !131)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !4529, file: !4503, line: 634, baseType: !248, size: 64, offset: 2240)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4529, file: !4503, line: 635, baseType: !249, size: 5568, offset: 2304)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !4529, file: !4503, line: 636, baseType: !358, size: 64, offset: 7872)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !4529, file: !4503, line: 637, baseType: !358, size: 64, offset: 7936)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !4529, file: !4503, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !4524, file: !4503, line: 312, baseType: !4528, size: 64, offset: 192)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !4524, file: !4503, line: 314, baseType: !118, size: 64, offset: 256)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !4524, file: !4503, line: 315, baseType: !3903, size: 64, offset: 320)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !4524, file: !4503, line: 316, baseType: !4603, size: 64, offset: 384)
!4603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4604, size: 64)
!4604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !4503, line: 69, size: 832, elements: !4605)
!4605 = !{!4606, !4607, !4608, !4611, !4612}
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4604, file: !4503, line: 70, baseType: !4528, size: 64)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4604, file: !4503, line: 71, baseType: !186, size: 128, offset: 64)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !4604, file: !4503, line: 72, baseType: !4609, size: 64, offset: 192)
!4609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4610, size: 64)
!4610 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !4503, line: 72, flags: DIFlagFwdDecl)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !4604, file: !4503, line: 73, baseType: !124, size: 8, offset: 256)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4604, file: !4503, line: 74, baseType: !252, size: 512, offset: 320)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !4524, file: !4503, line: 318, baseType: !7, size: 32, offset: 448)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !4524, file: !4503, line: 319, baseType: !131, size: 16, offset: 480)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4524, file: !4503, line: 320, baseType: !131, size: 16, offset: 496)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !4524, file: !4503, line: 321, baseType: !131, size: 16, offset: 512)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !4524, file: !4503, line: 322, baseType: !131, size: 16, offset: 528)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4524, file: !4503, line: 323, baseType: !7, size: 32, offset: 544)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !4524, file: !4503, line: 324, baseType: !1375, size: 8, offset: 576)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !4524, file: !4503, line: 325, baseType: !1375, size: 8, offset: 584)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !4524, file: !4503, line: 330, baseType: !1375, size: 8, offset: 592)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !4524, file: !4503, line: 331, baseType: !1375, size: 8, offset: 600)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !4524, file: !4503, line: 332, baseType: !1375, size: 8, offset: 608)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !4524, file: !4503, line: 333, baseType: !1375, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !4524, file: !4503, line: 334, baseType: !1375, size: 8, offset: 624)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !4524, file: !4503, line: 335, baseType: !1375, size: 8, offset: 632)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !4524, file: !4503, line: 336, baseType: !892, size: 16, offset: 640)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !4524, file: !4503, line: 337, baseType: !125, size: 64, offset: 704)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4524, file: !4503, line: 339, baseType: !4630, size: 64, offset: 768)
!4630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4502, size: 64)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !4524, file: !4503, line: 340, baseType: !429, size: 64, offset: 832)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !4524, file: !4503, line: 346, baseType: !3715, size: 128, offset: 896)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !4524, file: !4503, line: 348, baseType: !4634, size: 32, offset: 1024)
!4634 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !4503, line: 155, baseType: !139)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !4524, file: !4503, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !4524, file: !4503, line: 352, baseType: !1375, size: 8, offset: 1064)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !4524, file: !4503, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !4524, file: !4503, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !4524, file: !4503, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !4524, file: !4503, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !4524, file: !4503, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !4524, file: !4503, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !4524, file: !4503, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !4524, file: !4503, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !4524, file: !4503, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !4524, file: !4503, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !4524, file: !4503, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !4524, file: !4503, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !4524, file: !4503, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !4524, file: !4503, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !4524, file: !4503, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !4524, file: !4503, line: 376, baseType: !7, size: 32, offset: 1120)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !4524, file: !4503, line: 377, baseType: !7, size: 32, offset: 1152)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !4524, file: !4503, line: 380, baseType: !4655, size: 64, offset: 1216)
!4655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4656, size: 64)
!4656 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !4503, line: 303, flags: DIFlagFwdDecl)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !4524, file: !4503, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !4524, file: !4503, line: 383, baseType: !139, size: 32, offset: 1312)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !4524, file: !4503, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !4524, file: !4503, line: 387, baseType: !4661, size: 32, offset: 1376)
!4661 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !4503, line: 180, baseType: !7)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4524, file: !4503, line: 388, baseType: !249, size: 5568, offset: 1408)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !4524, file: !4503, line: 390, baseType: !139, size: 32, offset: 6976)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4524, file: !4503, line: 396, baseType: !7, size: 32, offset: 7008)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !4524, file: !4503, line: 397, baseType: !4666, size: 8704, offset: 7040)
!4666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4540, size: 8704, elements: !4667)
!4667 = !{!4668}
!4668 = !DISubrange(count: 17)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !4524, file: !4503, line: 399, baseType: !497, size: 8, offset: 15744)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !4524, file: !4503, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !4524, file: !4503, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !4524, file: !4503, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !4524, file: !4503, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !4524, file: !4503, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !4524, file: !4503, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !4524, file: !4503, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !4524, file: !4503, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !4524, file: !4503, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !4524, file: !4503, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !4524, file: !4503, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !4524, file: !4503, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !4524, file: !4503, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !4524, file: !4503, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !4524, file: !4503, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !4524, file: !4503, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !4524, file: !4503, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !4524, file: !4503, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !4524, file: !4503, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !4524, file: !4503, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !4524, file: !4503, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !4524, file: !4503, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !4524, file: !4503, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !4524, file: !4503, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !4524, file: !4503, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !4524, file: !4503, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !4524, file: !4503, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !4524, file: !4503, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !4524, file: !4503, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !4524, file: !4503, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !4524, file: !4503, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !4524, file: !4503, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !4524, file: !4503, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !4524, file: !4503, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !4524, file: !4503, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !4524, file: !4503, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !4524, file: !4503, line: 450, baseType: !4707, size: 16, offset: 15792)
!4707 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !4503, line: 206, baseType: !131)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !4524, file: !4503, line: 451, baseType: !220, size: 32, offset: 15808)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !4524, file: !4503, line: 453, baseType: !4710, size: 512, offset: 15840)
!4710 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 512, elements: !1789)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !4524, file: !4503, line: 454, baseType: !643, size: 64, offset: 16384)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !4524, file: !4503, line: 455, baseType: !358, size: 64, offset: 16448)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !4524, file: !4503, line: 456, baseType: !139, size: 32, offset: 16512)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !4524, file: !4503, line: 457, baseType: !4715, size: 1088, offset: 16576)
!4715 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 1088, elements: !4667)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !4524, file: !4503, line: 458, baseType: !4715, size: 1088, offset: 17664)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !4524, file: !4503, line: 469, baseType: !344, size: 64, offset: 18752)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !4524, file: !4503, line: 471, baseType: !4719, size: 64, offset: 18816)
!4719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4720, size: 64)
!4720 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !4503, line: 304, flags: DIFlagFwdDecl)
!4721 = !DIDerivedType(tag: DW_TAG_member, scope: !4524, file: !4503, line: 478, baseType: !4722, size: 64, offset: 18880)
!4722 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4524, file: !4503, line: 478, size: 64, elements: !4723)
!4723 = !{!4724, !4727}
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !4722, file: !4503, line: 479, baseType: !4725, size: 64)
!4725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4726, size: 64)
!4726 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !4503, line: 305, flags: DIFlagFwdDecl)
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !4722, file: !4503, line: 480, baseType: !4523, size: 64)
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !4524, file: !4503, line: 482, baseType: !892, size: 16, offset: 18944)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !4524, file: !4503, line: 483, baseType: !1375, size: 8, offset: 18960)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !4524, file: !4503, line: 497, baseType: !892, size: 16, offset: 18976)
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !4524, file: !4503, line: 498, baseType: !2190, size: 64, offset: 19008)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !4524, file: !4503, line: 499, baseType: !338, size: 64, offset: 19072)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !4524, file: !4503, line: 500, baseType: !122, size: 64, offset: 19136)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !4524, file: !4503, line: 502, baseType: !126, size: 64, offset: 19200)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4502, file: !4503, line: 863, baseType: !4736, size: 64, offset: 320)
!4736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4737, size: 64)
!4737 = !DISubroutineType(types: !4738)
!4738 = !{null, !4523}
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4502, file: !4503, line: 864, baseType: !4740, size: 64, offset: 384)
!4740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4741, size: 64)
!4741 = !DISubroutineType(types: !4742)
!4742 = !{!139, !4523, !3533}
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4502, file: !4503, line: 865, baseType: !4744, size: 64, offset: 448)
!4744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4745, size: 64)
!4745 = !DISubroutineType(types: !4746)
!4746 = !{!139, !4523}
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4502, file: !4503, line: 866, baseType: !4736, size: 64, offset: 512)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !4502, file: !4503, line: 867, baseType: !4749, size: 64, offset: 576)
!4749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4750, size: 64)
!4750 = !DISubroutineType(types: !4751)
!4751 = !{!139, !4523, !139}
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !4502, file: !4503, line: 868, baseType: !4753, size: 64, offset: 640)
!4753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4754, size: 64)
!4754 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4755)
!4755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !4503, line: 795, size: 384, elements: !4756)
!4756 = !{!4757, !4762, !4766, !4767, !4768, !4769}
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !4755, file: !4503, line: 797, baseType: !4758, size: 64)
!4758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4759, size: 64)
!4759 = !DISubroutineType(types: !4760)
!4760 = !{!4761, !4523, !4661}
!4761 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !4503, line: 772, baseType: !7)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !4755, file: !4503, line: 801, baseType: !4763, size: 64, offset: 64)
!4763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4764, size: 64)
!4764 = !DISubroutineType(types: !4765)
!4765 = !{!4761, !4523}
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !4755, file: !4503, line: 804, baseType: !4763, size: 64, offset: 128)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !4755, file: !4503, line: 807, baseType: !4736, size: 64, offset: 192)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !4755, file: !4503, line: 808, baseType: !4736, size: 64, offset: 256)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4755, file: !4503, line: 811, baseType: !4736, size: 64, offset: 320)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4502, file: !4503, line: 869, baseType: !344, size: 64, offset: 704)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4502, file: !4503, line: 870, baseType: !3491, size: 1152, offset: 768)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !4502, file: !4503, line: 871, baseType: !4773, size: 128, offset: 1920)
!4773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !4503, line: 759, size: 128, elements: !4774)
!4774 = !{!4775, !4776}
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4773, file: !4503, line: 760, baseType: !203)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4773, file: !4503, line: 761, baseType: !186, size: 128)
!4777 = !DIGlobalVariableExpression(var: !4778, expr: !DIExpression())
!4778 = distinct !DIGlobalVariable(name: "cy_pci_dev_id", scope: !2, file: !3, line: 252, type: !4779, isLocal: true, isDefinition: true)
!4779 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4509, size: 2304, elements: !3519)
!4780 = !DIGlobalVariableExpression(var: !4781, expr: !DIExpression())
!4781 = distinct !DIGlobalVariable(name: "cy_chip_offset", scope: !2, file: !3, line: 239, type: !4782, isLocal: true, isDefinition: true)
!4782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2889, size: 256, elements: !1353)
!4783 = !DIGlobalVariableExpression(var: !4784, expr: !DIExpression())
!4784 = distinct !DIGlobalVariable(name: "cy_next_channel", scope: !2, file: !3, line: 170, type: !139, isLocal: true, isDefinition: true)
!4785 = !DIGlobalVariableExpression(var: !4786, expr: !DIExpression())
!4786 = distinct !DIGlobalVariable(name: "__key", scope: !4787, file: !1559, line: 88, type: !653, isLocal: true, isDefinition: true)
!4787 = distinct !DISubprogram(name: "__init_completion", scope: !1559, file: !1559, line: 85, type: !4788, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!4788 = !DISubroutineType(types: !4789)
!4789 = !{null, !1557}
!4790 = !DIGlobalVariableExpression(var: !4791, expr: !DIExpression())
!4791 = distinct !DIGlobalVariable(name: "cyz_port_ops", scope: !2, file: !3, line: 3035, type: !4181, isLocal: true, isDefinition: true)
!4792 = !DIGlobalVariableExpression(var: !4793, expr: !DIExpression())
!4793 = distinct !DIGlobalVariable(name: "cyy_port_ops", scope: !2, file: !3, line: 3029, type: !4181, isLocal: true, isDefinition: true)
!4794 = !DIGlobalVariableExpression(var: !4795, expr: !DIExpression())
!4795 = distinct !DIGlobalVariable(name: "baud_bpr_60", scope: !2, file: !3, line: 207, type: !4433, isLocal: true, isDefinition: true)
!4796 = !DIGlobalVariableExpression(var: !4797, expr: !DIExpression())
!4797 = distinct !DIGlobalVariable(name: "baud_co_60", scope: !2, file: !3, line: 199, type: !4433, isLocal: true, isDefinition: true)
!4798 = !DIGlobalVariableExpression(var: !4799, expr: !DIExpression())
!4799 = distinct !DIGlobalVariable(name: "baud_bpr_25", scope: !2, file: !3, line: 194, type: !4800, isLocal: true, isDefinition: true)
!4800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !257, size: 160, elements: !2266)
!4801 = !DIGlobalVariableExpression(var: !4802, expr: !DIExpression())
!4802 = distinct !DIGlobalVariable(name: "baud_co_25", scope: !2, file: !3, line: 187, type: !4800, isLocal: true, isDefinition: true)
!4803 = !DIGlobalVariableExpression(var: !4804, expr: !DIExpression())
!4804 = distinct !DIGlobalVariable(name: "cy_ops", scope: !2, file: !3, line: 3988, type: !3918, isLocal: true, isDefinition: true)
!4805 = !DIGlobalVariableExpression(var: !4806, expr: !DIExpression())
!4806 = distinct !DIGlobalVariable(name: "baud_table", scope: !2, file: !3, line: 181, type: !4807, isLocal: true, isDefinition: true)
!4807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4808, size: 704, elements: !4809)
!4808 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !139)
!4809 = !{!4810}
!4810 = !DISubrange(count: 22)
!4811 = !DIGlobalVariableExpression(var: !4812, expr: !DIExpression())
!4812 = distinct !DIGlobalVariable(name: "baud_cor3", scope: !2, file: !3, line: 213, type: !4433, isLocal: true, isDefinition: true)
!4813 = !DIGlobalVariableExpression(var: !4814, expr: !DIExpression())
!4814 = distinct !DIGlobalVariable(name: "rflow_thr", scope: !2, file: !3, line: 230, type: !4433, isLocal: true, isDefinition: true)
!4815 = !DIGlobalVariableExpression(var: !4816, expr: !DIExpression())
!4816 = distinct !DIGlobalVariable(name: "_rs", scope: !4817, file: !3, line: 2329, type: !1758, isLocal: true, isDefinition: true)
!4817 = distinct !DISubprogram(name: "cy_set_serial_info", scope: !3, file: !3, line: 2281, type: !4046, scopeLine: 2283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!4818 = !DIGlobalVariableExpression(var: !4819, expr: !DIExpression())
!4819 = distinct !DIGlobalVariable(name: "___modver_attr", scope: !2, file: !3, line: 4117, type: !4443, isLocal: true, isDefinition: true)
!4820 = !{!"rsp"}
!4821 = !{i32 7, !"Dwarf Version", i32 4}
!4822 = !{i32 2, !"Debug Info Version", i32 3}
!4823 = !{i32 1, !"wchar_size", i32 2}
!4824 = !{i32 1, !"Code Model", i32 2}
!4825 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4826 = distinct !DISubprogram(name: "cy_cleanup_module", scope: !3, file: !3, line: 4071, type: !1954, scopeLine: 4072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!4827 = !DILocalVariable(name: "card", scope: !4826, file: !3, line: 4073, type: !4229)
!4828 = !DILocation(line: 4073, column: 24, scope: !4826)
!4829 = !DILocalVariable(name: "i", scope: !4826, file: !3, line: 4074, type: !7)
!4830 = !DILocation(line: 4074, column: 15, scope: !4826)
!4831 = !DILocalVariable(name: "e1", scope: !4826, file: !3, line: 4074, type: !7)
!4832 = !DILocation(line: 4074, column: 18, scope: !4826)
!4833 = !DILocation(line: 4077, column: 2, scope: !4826)
!4834 = !DILocation(line: 4080, column: 29, scope: !4826)
!4835 = !DILocation(line: 4080, column: 7, scope: !4826)
!4836 = !DILocation(line: 4080, column: 5, scope: !4826)
!4837 = !DILocation(line: 4081, column: 6, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4826, file: !3, line: 4081, column: 6)
!4839 = !DILocation(line: 4081, column: 6, scope: !4826)
!4840 = !DILocation(line: 4083, column: 21, scope: !4838)
!4841 = !DILocation(line: 4082, column: 3, scope: !4838)
!4842 = !DILocation(line: 4086, column: 2, scope: !4826)
!4843 = !DILocation(line: 4089, column: 9, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !4826, file: !3, line: 4089, column: 2)
!4845 = !DILocation(line: 4089, column: 7, scope: !4844)
!4846 = !DILocation(line: 4089, column: 14, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4844, file: !3, line: 4089, column: 2)
!4848 = !DILocation(line: 4089, column: 16, scope: !4847)
!4849 = !DILocation(line: 4089, column: 2, scope: !4844)
!4850 = !DILocation(line: 4090, column: 19, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4847, file: !3, line: 4089, column: 33)
!4852 = !DILocation(line: 4090, column: 11, scope: !4851)
!4853 = !DILocation(line: 4090, column: 8, scope: !4851)
!4854 = !DILocation(line: 4091, column: 7, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4851, file: !3, line: 4091, column: 7)
!4856 = !DILocation(line: 4091, column: 13, scope: !4855)
!4857 = !DILocation(line: 4091, column: 7, scope: !4851)
!4858 = !DILocation(line: 4093, column: 4, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4855, file: !3, line: 4091, column: 24)
!4860 = !DILocation(line: 4093, column: 4, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4859, file: !3, line: 4093, column: 4)
!4862 = !{i32 -2141360677}
!4863 = !DILocation(line: 4094, column: 12, scope: !4859)
!4864 = !DILocation(line: 4094, column: 18, scope: !4859)
!4865 = !DILocation(line: 4094, column: 4, scope: !4859)
!4866 = !DILocation(line: 4095, column: 8, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4859, file: !3, line: 4095, column: 8)
!4868 = !DILocation(line: 4095, column: 14, scope: !4867)
!4869 = !DILocation(line: 4095, column: 23, scope: !4867)
!4870 = !DILocation(line: 4095, column: 8, scope: !4859)
!4871 = !DILocation(line: 4096, column: 13, scope: !4867)
!4872 = !DILocation(line: 4096, column: 19, scope: !4867)
!4873 = !DILocation(line: 4096, column: 28, scope: !4867)
!4874 = !DILocation(line: 4096, column: 5, scope: !4867)
!4875 = !DILocation(line: 4097, column: 8, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4859, file: !3, line: 4097, column: 8)
!4877 = !DILocation(line: 4097, column: 14, scope: !4876)
!4878 = !DILocation(line: 4099, column: 5, scope: !4876)
!4879 = !DILocation(line: 4099, column: 17, scope: !4876)
!4880 = !DILocation(line: 4099, column: 9, scope: !4876)
!4881 = !DILocation(line: 4097, column: 8, scope: !4859)
!4882 = !DILocation(line: 4102, column: 14, scope: !4876)
!4883 = !DILocation(line: 4102, column: 20, scope: !4876)
!4884 = !DILocation(line: 4102, column: 25, scope: !4876)
!4885 = !DILocation(line: 4102, column: 5, scope: !4876)
!4886 = !DILocation(line: 4103, column: 14, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4859, file: !3, line: 4103, column: 4)
!4888 = !DILocation(line: 4103, column: 20, scope: !4887)
!4889 = !DILocation(line: 4103, column: 12, scope: !4887)
!4890 = !DILocation(line: 4103, column: 9, scope: !4887)
!4891 = !DILocation(line: 4103, column: 32, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4887, file: !3, line: 4103, column: 4)
!4893 = !DILocation(line: 4103, column: 37, scope: !4892)
!4894 = !DILocation(line: 4103, column: 43, scope: !4892)
!4895 = !DILocation(line: 4104, column: 6, scope: !4892)
!4896 = !DILocation(line: 4104, column: 12, scope: !4892)
!4897 = !DILocation(line: 4103, column: 54, scope: !4892)
!4898 = !DILocation(line: 4103, column: 35, scope: !4892)
!4899 = !DILocation(line: 4103, column: 4, scope: !4887)
!4900 = !DILocation(line: 4105, column: 27, scope: !4892)
!4901 = !DILocation(line: 4105, column: 45, scope: !4892)
!4902 = !DILocation(line: 4105, column: 5, scope: !4892)
!4903 = !DILocation(line: 4104, column: 22, scope: !4892)
!4904 = !DILocation(line: 4103, column: 4, scope: !4892)
!4905 = distinct !{!4905, !4899, !4906}
!4906 = !DILocation(line: 4105, column: 47, scope: !4887)
!4907 = !DILocation(line: 4106, column: 10, scope: !4859)
!4908 = !DILocation(line: 4106, column: 16, scope: !4859)
!4909 = !DILocation(line: 4106, column: 4, scope: !4859)
!4910 = !DILocation(line: 4107, column: 3, scope: !4859)
!4911 = !DILocation(line: 4108, column: 2, scope: !4851)
!4912 = !DILocation(line: 4089, column: 29, scope: !4847)
!4913 = !DILocation(line: 4089, column: 2, scope: !4847)
!4914 = distinct !{!4914, !4849, !4915}
!4915 = !DILocation(line: 4108, column: 2, scope: !4844)
!4916 = !DILocation(line: 4110, column: 17, scope: !4826)
!4917 = !DILocation(line: 4110, column: 2, scope: !4826)
!4918 = !DILocation(line: 4111, column: 1, scope: !4826)
!4919 = distinct !DISubprogram(name: "writeb", scope: !4920, file: !4920, line: 65, type: !4921, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!4920 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!4921 = !DISubroutineType(types: !4922)
!4922 = !{null, !124, !4923}
!4923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4924, size: 64)
!4924 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!4925 = !DILocalVariable(name: "val", arg: 1, scope: !4919, file: !4920, line: 65, type: !124)
!4926 = !DILocation(line: 65, column: 1, scope: !4919)
!4927 = !DILocalVariable(name: "addr", arg: 2, scope: !4919, file: !4920, line: 65, type: !4923)
!4928 = !{i32 -2141902287}
!4929 = distinct !DISubprogram(name: "cy_is_Z", scope: !3, file: !3, line: 307, type: !4930, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!4930 = !DISubroutineType(types: !4931)
!4931 = !{!497, !4229}
!4932 = !DILocalVariable(name: "card", arg: 1, scope: !4929, file: !3, line: 307, type: !4229)
!4933 = !DILocation(line: 307, column: 50, scope: !4929)
!4934 = !DILocation(line: 309, column: 9, scope: !4929)
!4935 = !DILocation(line: 309, column: 15, scope: !4929)
!4936 = !DILocation(line: 309, column: 25, scope: !4929)
!4937 = !DILocation(line: 309, column: 2, scope: !4929)
!4938 = distinct !DISubprogram(name: "cy_init", scope: !3, file: !3, line: 4014, type: !4939, scopeLine: 4015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!4939 = !DISubroutineType(types: !4940)
!4940 = !{!139}
!4941 = !DILocalVariable(name: "nboards", scope: !4938, file: !3, line: 4016, type: !7)
!4942 = !DILocation(line: 4016, column: 15, scope: !4938)
!4943 = !DILocalVariable(name: "retval", scope: !4938, file: !3, line: 4017, type: !139)
!4944 = !DILocation(line: 4017, column: 6, scope: !4938)
!4945 = !DILocation(line: 4019, column: 21, scope: !4938)
!4946 = !DILocation(line: 4019, column: 19, scope: !4938)
!4947 = !DILocation(line: 4020, column: 7, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4938, file: !3, line: 4020, column: 6)
!4949 = !DILocation(line: 4020, column: 6, scope: !4938)
!4950 = !DILocation(line: 4021, column: 3, scope: !4948)
!4951 = !DILocation(line: 4023, column: 2, scope: !4938)
!4952 = !DILocation(line: 4027, column: 2, scope: !4938)
!4953 = !DILocation(line: 4027, column: 20, scope: !4938)
!4954 = !DILocation(line: 4027, column: 32, scope: !4938)
!4955 = !DILocation(line: 4028, column: 2, scope: !4938)
!4956 = !DILocation(line: 4028, column: 20, scope: !4938)
!4957 = !DILocation(line: 4028, column: 25, scope: !4938)
!4958 = !DILocation(line: 4029, column: 2, scope: !4938)
!4959 = !DILocation(line: 4029, column: 20, scope: !4938)
!4960 = !DILocation(line: 4029, column: 26, scope: !4938)
!4961 = !DILocation(line: 4030, column: 2, scope: !4938)
!4962 = !DILocation(line: 4030, column: 20, scope: !4938)
!4963 = !DILocation(line: 4030, column: 32, scope: !4938)
!4964 = !DILocation(line: 4031, column: 2, scope: !4938)
!4965 = !DILocation(line: 4031, column: 20, scope: !4938)
!4966 = !DILocation(line: 4031, column: 25, scope: !4938)
!4967 = !DILocation(line: 4032, column: 2, scope: !4938)
!4968 = !DILocation(line: 4032, column: 20, scope: !4938)
!4969 = !DILocation(line: 4032, column: 28, scope: !4938)
!4970 = !DILocation(line: 4033, column: 2, scope: !4938)
!4971 = !DILocation(line: 4033, column: 20, scope: !4938)
!4972 = !DILocation(line: 4033, column: 35, scope: !4938)
!4973 = !DILocation(line: 4034, column: 2, scope: !4938)
!4974 = !DILocation(line: 4034, column: 20, scope: !4938)
!4975 = !DILocation(line: 4034, column: 33, scope: !4938)
!4976 = !DILocation(line: 4034, column: 41, scope: !4938)
!4977 = !DILocation(line: 4036, column: 2, scope: !4938)
!4978 = !DILocation(line: 4036, column: 20, scope: !4938)
!4979 = !DILocation(line: 4036, column: 26, scope: !4938)
!4980 = !DILocation(line: 4037, column: 21, scope: !4938)
!4981 = !DILocation(line: 4037, column: 2, scope: !4938)
!4982 = !DILocation(line: 4039, column: 31, scope: !4938)
!4983 = !DILocation(line: 4039, column: 11, scope: !4938)
!4984 = !DILocation(line: 4039, column: 9, scope: !4938)
!4985 = !DILocation(line: 4040, column: 6, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4938, file: !3, line: 4040, column: 6)
!4987 = !DILocation(line: 4040, column: 6, scope: !4938)
!4988 = !DILocation(line: 4041, column: 3, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4986, file: !3, line: 4040, column: 14)
!4990 = !DILocation(line: 4042, column: 3, scope: !4989)
!4991 = !DILocation(line: 4053, column: 12, scope: !4938)
!4992 = !DILocation(line: 4053, column: 10, scope: !4938)
!4993 = !DILocation(line: 4057, column: 11, scope: !4938)
!4994 = !DILocation(line: 4057, column: 9, scope: !4938)
!4995 = !DILocation(line: 4058, column: 6, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4938, file: !3, line: 4058, column: 6)
!4997 = !DILocation(line: 4058, column: 13, scope: !4996)
!4998 = !DILocation(line: 4058, column: 17, scope: !4996)
!4999 = !DILocation(line: 4058, column: 6, scope: !4938)
!5000 = !DILocation(line: 4059, column: 25, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !4996, file: !3, line: 4058, column: 26)
!5002 = !DILocation(line: 4059, column: 3, scope: !5001)
!5003 = !DILocation(line: 4060, column: 3, scope: !5001)
!5004 = !DILocation(line: 4064, column: 2, scope: !4938)
!5005 = !DILabel(scope: !4938, name: "err_frtty", file: !3, line: 4065)
!5006 = !DILocation(line: 4065, column: 1, scope: !4938)
!5007 = !DILocation(line: 4066, column: 17, scope: !4938)
!5008 = !DILocation(line: 4066, column: 2, scope: !4938)
!5009 = !DILabel(scope: !4938, name: "err", file: !3, line: 4067)
!5010 = !DILocation(line: 4067, column: 1, scope: !4938)
!5011 = !DILocation(line: 4068, column: 9, scope: !4938)
!5012 = !DILocation(line: 4068, column: 2, scope: !4938)
!5013 = !DILocation(line: 4069, column: 1, scope: !4938)
!5014 = distinct !DISubprogram(name: "cyz_poll", scope: !3, file: !3, line: 1217, type: !3617, scopeLine: 1218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!5015 = !DILocalVariable(name: "unused", arg: 1, scope: !5014, file: !3, line: 1217, type: !3619)
!5016 = !DILocation(line: 1217, column: 41, scope: !5014)
!5017 = !DILocalVariable(name: "cinfo", scope: !5014, file: !3, line: 1219, type: !4229)
!5018 = !DILocation(line: 1219, column: 24, scope: !5014)
!5019 = !DILocalVariable(name: "info", scope: !5014, file: !3, line: 1220, type: !134)
!5020 = !DILocation(line: 1220, column: 24, scope: !5014)
!5021 = !DILocalVariable(name: "expires", scope: !5014, file: !3, line: 1221, type: !126)
!5022 = !DILocation(line: 1221, column: 16, scope: !5014)
!5023 = !DILocation(line: 1221, column: 26, scope: !5014)
!5024 = !DILocation(line: 1221, column: 34, scope: !5014)
!5025 = !DILocalVariable(name: "port", scope: !5014, file: !3, line: 1222, type: !7)
!5026 = !DILocation(line: 1222, column: 15, scope: !5014)
!5027 = !DILocalVariable(name: "card", scope: !5014, file: !3, line: 1222, type: !7)
!5028 = !DILocation(line: 1222, column: 21, scope: !5014)
!5029 = !DILocation(line: 1224, column: 12, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !5014, file: !3, line: 1224, column: 2)
!5031 = !DILocation(line: 1224, column: 7, scope: !5030)
!5032 = !DILocation(line: 1224, column: 17, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !5030, file: !3, line: 1224, column: 2)
!5034 = !DILocation(line: 1224, column: 22, scope: !5033)
!5035 = !DILocation(line: 1224, column: 2, scope: !5030)
!5036 = !DILocation(line: 1225, column: 20, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5033, file: !3, line: 1224, column: 42)
!5038 = !DILocation(line: 1225, column: 12, scope: !5037)
!5039 = !DILocation(line: 1225, column: 9, scope: !5037)
!5040 = !DILocation(line: 1227, column: 16, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !5037, file: !3, line: 1227, column: 7)
!5042 = !DILocation(line: 1227, column: 8, scope: !5041)
!5043 = !DILocation(line: 1227, column: 7, scope: !5037)
!5044 = !DILocation(line: 1228, column: 4, scope: !5041)
!5045 = !DILocation(line: 1229, column: 22, scope: !5046)
!5046 = distinct !DILexicalBlock(scope: !5037, file: !3, line: 1229, column: 7)
!5047 = !DILocation(line: 1229, column: 8, scope: !5046)
!5048 = !DILocation(line: 1229, column: 7, scope: !5037)
!5049 = !DILocation(line: 1230, column: 4, scope: !5046)
!5050 = !DILocation(line: 1233, column: 8, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5037, file: !3, line: 1233, column: 7)
!5052 = !DILocation(line: 1233, column: 15, scope: !5051)
!5053 = !DILocation(line: 1233, column: 7, scope: !5037)
!5054 = !DILocation(line: 1234, column: 4, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !5051, file: !3, line: 1233, column: 29)
!5056 = !DILocation(line: 1234, column: 11, scope: !5055)
!5057 = !DILocation(line: 1234, column: 24, scope: !5055)
!5058 = !DILocation(line: 1235, column: 4, scope: !5055)
!5059 = !DILocation(line: 1238, column: 18, scope: !5037)
!5060 = !DILocation(line: 1238, column: 3, scope: !5037)
!5061 = !DILocation(line: 1240, column: 13, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !5037, file: !3, line: 1240, column: 3)
!5063 = !DILocation(line: 1240, column: 8, scope: !5062)
!5064 = !DILocation(line: 1240, column: 18, scope: !5065)
!5065 = distinct !DILexicalBlock(scope: !5062, file: !3, line: 1240, column: 3)
!5066 = !DILocation(line: 1240, column: 25, scope: !5065)
!5067 = !DILocation(line: 1240, column: 32, scope: !5065)
!5068 = !DILocation(line: 1240, column: 23, scope: !5065)
!5069 = !DILocation(line: 1240, column: 3, scope: !5062)
!5070 = !DILocation(line: 1241, column: 12, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !5065, file: !3, line: 1240, column: 48)
!5072 = !DILocation(line: 1241, column: 19, scope: !5071)
!5073 = !DILocation(line: 1241, column: 25, scope: !5071)
!5074 = !DILocation(line: 1241, column: 9, scope: !5071)
!5075 = !DILocation(line: 1243, column: 9, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5071, file: !3, line: 1243, column: 8)
!5077 = !DILocation(line: 1243, column: 15, scope: !5076)
!5078 = !DILocation(line: 1243, column: 8, scope: !5071)
!5079 = !DILocation(line: 1244, column: 19, scope: !5076)
!5080 = !DILocation(line: 1244, column: 5, scope: !5076)
!5081 = !DILocation(line: 1245, column: 18, scope: !5071)
!5082 = !DILocation(line: 1245, column: 4, scope: !5071)
!5083 = !DILocation(line: 1246, column: 3, scope: !5071)
!5084 = !DILocation(line: 1240, column: 44, scope: !5065)
!5085 = !DILocation(line: 1240, column: 3, scope: !5065)
!5086 = distinct !{!5086, !5069, !5087}
!5087 = !DILocation(line: 1246, column: 3, scope: !5062)
!5088 = !DILocation(line: 1248, column: 13, scope: !5037)
!5089 = !DILocation(line: 1248, column: 23, scope: !5037)
!5090 = !DILocation(line: 1248, column: 21, scope: !5037)
!5091 = !DILocation(line: 1248, column: 11, scope: !5037)
!5092 = !DILocation(line: 1249, column: 2, scope: !5037)
!5093 = !DILocation(line: 1224, column: 38, scope: !5033)
!5094 = !DILocation(line: 1224, column: 2, scope: !5033)
!5095 = distinct !{!5095, !5035, !5096}
!5096 = !DILocation(line: 1249, column: 2, scope: !5030)
!5097 = !DILocation(line: 1250, column: 28, scope: !5014)
!5098 = !DILocation(line: 1250, column: 2, scope: !5014)
!5099 = !DILocation(line: 1251, column: 1, scope: !5014)
!5100 = distinct !DISubprogram(name: "cyz_is_loaded", scope: !3, file: !3, line: 322, type: !4930, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!5101 = !DILocalVariable(name: "card", arg: 1, scope: !5100, file: !3, line: 322, type: !4229)
!5102 = !DILocation(line: 322, column: 49, scope: !5100)
!5103 = !DILocalVariable(name: "fw_id", scope: !5100, file: !3, line: 324, type: !5104)
!5104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5105, size: 64)
!5105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FIRM_ID", file: !4240, line: 257, size: 64, elements: !5106)
!5106 = !{!5107, !5108}
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !5105, file: !4240, line: 258, baseType: !120, size: 32)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "zfwctrl_addr", scope: !5105, file: !4240, line: 259, baseType: !120, size: 32, offset: 32)
!5109 = !DILocation(line: 324, column: 26, scope: !5100)
!5110 = !DILocation(line: 324, column: 34, scope: !5100)
!5111 = !DILocation(line: 324, column: 40, scope: !5100)
!5112 = !DILocation(line: 324, column: 50, scope: !5100)
!5113 = !DILocation(line: 326, column: 10, scope: !5100)
!5114 = !DILocation(line: 326, column: 16, scope: !5100)
!5115 = !DILocation(line: 326, column: 23, scope: !5100)
!5116 = !DILocation(line: 326, column: 32, scope: !5100)
!5117 = !DILocation(line: 326, column: 51, scope: !5100)
!5118 = !DILocation(line: 326, column: 35, scope: !5100)
!5119 = !DILocation(line: 326, column: 58, scope: !5100)
!5120 = !DILocation(line: 327, column: 11, scope: !5100)
!5121 = !DILocation(line: 327, column: 18, scope: !5100)
!5122 = !DILocation(line: 327, column: 10, scope: !5100)
!5123 = !DILocation(line: 327, column: 4, scope: !5100)
!5124 = !DILocation(line: 327, column: 29, scope: !5100)
!5125 = !DILocation(line: 0, scope: !5100)
!5126 = !DILocation(line: 326, column: 2, scope: !5100)
!5127 = distinct !DISubprogram(name: "cyz_handle_cmd", scope: !3, file: !3, line: 1083, type: !5128, scopeLine: 1084, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!5128 = !DISubroutineType(types: !5129)
!5129 = !{null, !4229}
!5130 = !DILocalVariable(name: "cinfo", arg: 1, scope: !5127, file: !3, line: 1083, type: !4229)
!5131 = !DILocation(line: 1083, column: 50, scope: !5127)
!5132 = !DILocalVariable(name: "board_ctrl", scope: !5127, file: !3, line: 1085, type: !4271)
!5133 = !DILocation(line: 1085, column: 29, scope: !5127)
!5134 = !DILocation(line: 1085, column: 42, scope: !5127)
!5135 = !DILocation(line: 1085, column: 49, scope: !5127)
!5136 = !DILocalVariable(name: "info", scope: !5127, file: !3, line: 1086, type: !134)
!5137 = !DILocation(line: 1086, column: 24, scope: !5127)
!5138 = !DILocalVariable(name: "channel", scope: !5127, file: !3, line: 1087, type: !120)
!5139 = !DILocation(line: 1087, column: 8, scope: !5127)
!5140 = !DILocalVariable(name: "param", scope: !5127, file: !3, line: 1087, type: !120)
!5141 = !DILocation(line: 1087, column: 17, scope: !5127)
!5142 = !DILocalVariable(name: "fw_ver", scope: !5127, file: !3, line: 1087, type: !120)
!5143 = !DILocation(line: 1087, column: 24, scope: !5127)
!5144 = !DILocalVariable(name: "cmd", scope: !5127, file: !3, line: 1088, type: !1376)
!5145 = !DILocation(line: 1088, column: 7, scope: !5127)
!5146 = !DILocalVariable(name: "special_count", scope: !5127, file: !3, line: 1089, type: !139)
!5147 = !DILocation(line: 1089, column: 6, scope: !5127)
!5148 = !DILocalVariable(name: "delta_count", scope: !5127, file: !3, line: 1090, type: !139)
!5149 = !DILocation(line: 1090, column: 6, scope: !5127)
!5150 = !DILocation(line: 1092, column: 18, scope: !5127)
!5151 = !DILocation(line: 1092, column: 30, scope: !5127)
!5152 = !DILocation(line: 1092, column: 17, scope: !5127)
!5153 = !DILocation(line: 1092, column: 11, scope: !5127)
!5154 = !DILocation(line: 1092, column: 9, scope: !5127)
!5155 = !DILocation(line: 1094, column: 2, scope: !5127)
!5156 = !DILocation(line: 1094, column: 23, scope: !5127)
!5157 = !DILocation(line: 1094, column: 9, scope: !5127)
!5158 = !DILocation(line: 1094, column: 54, scope: !5127)
!5159 = !DILocation(line: 1095, column: 17, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5127, file: !3, line: 1094, column: 60)
!5161 = !DILocation(line: 1096, column: 15, scope: !5160)
!5162 = !DILocation(line: 1097, column: 11, scope: !5160)
!5163 = !DILocation(line: 1097, column: 18, scope: !5160)
!5164 = !DILocation(line: 1097, column: 24, scope: !5160)
!5165 = !DILocation(line: 1097, column: 8, scope: !5160)
!5166 = !DILocation(line: 1099, column: 11, scope: !5160)
!5167 = !DILocation(line: 1099, column: 3, scope: !5160)
!5168 = !DILocation(line: 1101, column: 26, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5160, file: !3, line: 1099, column: 16)
!5170 = !DILocation(line: 1101, column: 32, scope: !5169)
!5171 = !DILocation(line: 1101, column: 4, scope: !5169)
!5172 = !DILocation(line: 1102, column: 4, scope: !5169)
!5173 = !DILocation(line: 1102, column: 10, scope: !5169)
!5174 = !DILocation(line: 1102, column: 17, scope: !5169)
!5175 = !DILocation(line: 1102, column: 19, scope: !5169)
!5176 = !DILocation(line: 1103, column: 17, scope: !5169)
!5177 = !DILocation(line: 1104, column: 4, scope: !5169)
!5178 = !DILocation(line: 1106, column: 26, scope: !5169)
!5179 = !DILocation(line: 1106, column: 32, scope: !5169)
!5180 = !DILocation(line: 1106, column: 4, scope: !5169)
!5181 = !DILocation(line: 1107, column: 4, scope: !5169)
!5182 = !DILocation(line: 1107, column: 10, scope: !5169)
!5183 = !DILocation(line: 1107, column: 17, scope: !5169)
!5184 = !DILocation(line: 1107, column: 19, scope: !5169)
!5185 = !DILocation(line: 1108, column: 17, scope: !5169)
!5186 = !DILocation(line: 1109, column: 4, scope: !5169)
!5187 = !DILocation(line: 1111, column: 26, scope: !5169)
!5188 = !DILocation(line: 1111, column: 32, scope: !5169)
!5189 = !DILocation(line: 1111, column: 4, scope: !5169)
!5190 = !DILocation(line: 1112, column: 4, scope: !5169)
!5191 = !DILocation(line: 1112, column: 10, scope: !5169)
!5192 = !DILocation(line: 1112, column: 17, scope: !5169)
!5193 = !DILocation(line: 1112, column: 19, scope: !5169)
!5194 = !DILocation(line: 1113, column: 17, scope: !5169)
!5195 = !DILocation(line: 1114, column: 4, scope: !5169)
!5196 = !DILocation(line: 1116, column: 4, scope: !5169)
!5197 = !DILocation(line: 1116, column: 10, scope: !5169)
!5198 = !DILocation(line: 1116, column: 17, scope: !5169)
!5199 = !DILocation(line: 1116, column: 20, scope: !5169)
!5200 = !DILocation(line: 1117, column: 15, scope: !5169)
!5201 = !DILocation(line: 1118, column: 32, scope: !5202)
!5202 = distinct !DILexicalBlock(scope: !5169, file: !3, line: 1118, column: 8)
!5203 = !DILocation(line: 1118, column: 38, scope: !5202)
!5204 = !DILocation(line: 1118, column: 8, scope: !5202)
!5205 = !DILocation(line: 1118, column: 8, scope: !5169)
!5206 = !DILocalVariable(name: "dcd", scope: !5207, file: !3, line: 1119, type: !426)
!5207 = distinct !DILexicalBlock(scope: !5202, file: !3, line: 1118, column: 45)
!5208 = !DILocation(line: 1119, column: 9, scope: !5207)
!5209 = !DILocation(line: 1119, column: 15, scope: !5207)
!5210 = !DILocation(line: 1119, column: 22, scope: !5207)
!5211 = !DILocation(line: 1119, column: 30, scope: !5207)
!5212 = !DILocation(line: 1120, column: 13, scope: !5207)
!5213 = !DILocation(line: 1120, column: 19, scope: !5207)
!5214 = !DILocation(line: 1120, column: 21, scope: !5207)
!5215 = !DILocation(line: 1120, column: 25, scope: !5207)
!5216 = !DILocation(line: 1120, column: 34, scope: !5207)
!5217 = !DILocation(line: 1120, column: 12, scope: !5207)
!5218 = !DILocation(line: 1120, column: 6, scope: !5207)
!5219 = !DILocation(line: 1121, column: 9, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5207, file: !3, line: 1121, column: 9)
!5221 = !DILocation(line: 1121, column: 13, scope: !5220)
!5222 = !DILocation(line: 1121, column: 9, scope: !5207)
!5223 = !DILocation(line: 1122, column: 6, scope: !5220)
!5224 = !DILocation(line: 1124, column: 27, scope: !5220)
!5225 = !DILocation(line: 1124, column: 33, scope: !5220)
!5226 = !DILocation(line: 1124, column: 6, scope: !5220)
!5227 = !DILocation(line: 1125, column: 4, scope: !5207)
!5228 = !DILocation(line: 1126, column: 4, scope: !5169)
!5229 = !DILocation(line: 1128, column: 4, scope: !5169)
!5230 = !DILocation(line: 1128, column: 10, scope: !5169)
!5231 = !DILocation(line: 1128, column: 17, scope: !5169)
!5232 = !DILocation(line: 1128, column: 20, scope: !5169)
!5233 = !DILocation(line: 1129, column: 15, scope: !5169)
!5234 = !DILocation(line: 1130, column: 4, scope: !5169)
!5235 = !DILocation(line: 1132, column: 4, scope: !5169)
!5236 = !DILocation(line: 1132, column: 10, scope: !5169)
!5237 = !DILocation(line: 1132, column: 17, scope: !5169)
!5238 = !DILocation(line: 1132, column: 20, scope: !5169)
!5239 = !DILocation(line: 1133, column: 15, scope: !5169)
!5240 = !DILocation(line: 1134, column: 4, scope: !5169)
!5241 = !DILocation(line: 1136, column: 4, scope: !5169)
!5242 = !DILocation(line: 1136, column: 10, scope: !5169)
!5243 = !DILocation(line: 1136, column: 17, scope: !5169)
!5244 = !DILocation(line: 1136, column: 20, scope: !5169)
!5245 = !DILocation(line: 1137, column: 15, scope: !5169)
!5246 = !DILocation(line: 1138, column: 4, scope: !5169)
!5247 = !DILocation(line: 1141, column: 14, scope: !5169)
!5248 = !DILocation(line: 1141, column: 20, scope: !5169)
!5249 = !DILocation(line: 1141, column: 4, scope: !5169)
!5250 = !DILocation(line: 1142, column: 4, scope: !5169)
!5251 = !DILocation(line: 1168, column: 4, scope: !5169)
!5252 = !DILocation(line: 1170, column: 4, scope: !5169)
!5253 = !DILocation(line: 1172, column: 7, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !5160, file: !3, line: 1172, column: 7)
!5255 = !DILocation(line: 1172, column: 7, scope: !5160)
!5256 = !DILocation(line: 1173, column: 4, scope: !5254)
!5257 = !DILocation(line: 1174, column: 7, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5160, file: !3, line: 1174, column: 7)
!5259 = !DILocation(line: 1174, column: 7, scope: !5160)
!5260 = !DILocation(line: 1175, column: 23, scope: !5258)
!5261 = !DILocation(line: 1175, column: 29, scope: !5258)
!5262 = !DILocation(line: 1175, column: 4, scope: !5258)
!5263 = distinct !{!5263, !5155, !5264}
!5264 = !DILocation(line: 1176, column: 2, scope: !5127)
!5265 = !DILocation(line: 1177, column: 1, scope: !5127)
!5266 = distinct !DISubprogram(name: "cyz_handle_rx", scope: !3, file: !3, line: 918, type: !5267, scopeLine: 919, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!5267 = !DISubroutineType(types: !5268)
!5268 = !{null, !134}
!5269 = !DILocalVariable(name: "info", arg: 1, scope: !5266, file: !3, line: 918, type: !134)
!5270 = !DILocation(line: 918, column: 49, scope: !5266)
!5271 = !DILocalVariable(name: "buf_ctrl", scope: !5266, file: !3, line: 920, type: !4331)
!5272 = !DILocation(line: 920, column: 27, scope: !5266)
!5273 = !DILocation(line: 920, column: 38, scope: !5266)
!5274 = !DILocation(line: 920, column: 44, scope: !5266)
!5275 = !DILocation(line: 920, column: 46, scope: !5266)
!5276 = !DILocation(line: 920, column: 50, scope: !5266)
!5277 = !DILocalVariable(name: "cinfo", scope: !5266, file: !3, line: 921, type: !4229)
!5278 = !DILocation(line: 921, column: 24, scope: !5266)
!5279 = !DILocation(line: 921, column: 32, scope: !5266)
!5280 = !DILocation(line: 921, column: 38, scope: !5266)
!5281 = !DILocalVariable(name: "port", scope: !5266, file: !3, line: 922, type: !3911)
!5282 = !DILocation(line: 922, column: 19, scope: !5266)
!5283 = !DILocation(line: 922, column: 27, scope: !5266)
!5284 = !DILocation(line: 922, column: 33, scope: !5266)
!5285 = !DILocalVariable(name: "char_count", scope: !5266, file: !3, line: 923, type: !7)
!5286 = !DILocation(line: 923, column: 15, scope: !5266)
!5287 = !DILocalVariable(name: "len", scope: !5266, file: !3, line: 924, type: !139)
!5288 = !DILocation(line: 924, column: 6, scope: !5266)
!5289 = !DILocalVariable(name: "data", scope: !5266, file: !3, line: 928, type: !119)
!5290 = !DILocation(line: 928, column: 7, scope: !5266)
!5291 = !DILocalVariable(name: "rx_put", scope: !5266, file: !3, line: 930, type: !120)
!5292 = !DILocation(line: 930, column: 8, scope: !5266)
!5293 = !DILocalVariable(name: "rx_get", scope: !5266, file: !3, line: 930, type: !120)
!5294 = !DILocation(line: 930, column: 16, scope: !5266)
!5295 = !DILocalVariable(name: "new_rx_get", scope: !5266, file: !3, line: 930, type: !120)
!5296 = !DILocation(line: 930, column: 24, scope: !5266)
!5297 = !DILocalVariable(name: "rx_bufsize", scope: !5266, file: !3, line: 930, type: !120)
!5298 = !DILocation(line: 930, column: 36, scope: !5266)
!5299 = !DILocalVariable(name: "rx_bufaddr", scope: !5266, file: !3, line: 930, type: !120)
!5300 = !DILocation(line: 930, column: 48, scope: !5266)
!5301 = !DILocation(line: 932, column: 31, scope: !5266)
!5302 = !DILocation(line: 932, column: 41, scope: !5266)
!5303 = !DILocation(line: 932, column: 30, scope: !5266)
!5304 = !DILocation(line: 932, column: 24, scope: !5266)
!5305 = !DILocation(line: 932, column: 22, scope: !5266)
!5306 = !DILocation(line: 932, column: 9, scope: !5266)
!5307 = !DILocation(line: 933, column: 18, scope: !5266)
!5308 = !DILocation(line: 933, column: 28, scope: !5266)
!5309 = !DILocation(line: 933, column: 17, scope: !5266)
!5310 = !DILocation(line: 933, column: 11, scope: !5266)
!5311 = !DILocation(line: 933, column: 9, scope: !5266)
!5312 = !DILocation(line: 934, column: 22, scope: !5266)
!5313 = !DILocation(line: 934, column: 32, scope: !5266)
!5314 = !DILocation(line: 934, column: 21, scope: !5266)
!5315 = !DILocation(line: 934, column: 15, scope: !5266)
!5316 = !DILocation(line: 934, column: 13, scope: !5266)
!5317 = !DILocation(line: 935, column: 22, scope: !5266)
!5318 = !DILocation(line: 935, column: 32, scope: !5266)
!5319 = !DILocation(line: 935, column: 21, scope: !5266)
!5320 = !DILocation(line: 935, column: 15, scope: !5266)
!5321 = !DILocation(line: 935, column: 13, scope: !5266)
!5322 = !DILocation(line: 936, column: 6, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5266, file: !3, line: 936, column: 6)
!5324 = !DILocation(line: 936, column: 16, scope: !5323)
!5325 = !DILocation(line: 936, column: 13, scope: !5323)
!5326 = !DILocation(line: 936, column: 6, scope: !5266)
!5327 = !DILocation(line: 937, column: 16, scope: !5323)
!5328 = !DILocation(line: 937, column: 25, scope: !5323)
!5329 = !DILocation(line: 937, column: 23, scope: !5323)
!5330 = !DILocation(line: 937, column: 14, scope: !5323)
!5331 = !DILocation(line: 937, column: 3, scope: !5323)
!5332 = !DILocation(line: 939, column: 16, scope: !5323)
!5333 = !DILocation(line: 939, column: 25, scope: !5323)
!5334 = !DILocation(line: 939, column: 23, scope: !5323)
!5335 = !DILocation(line: 939, column: 34, scope: !5323)
!5336 = !DILocation(line: 939, column: 32, scope: !5323)
!5337 = !DILocation(line: 939, column: 14, scope: !5323)
!5338 = !DILocation(line: 941, column: 7, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5266, file: !3, line: 941, column: 6)
!5340 = !DILocation(line: 941, column: 6, scope: !5266)
!5341 = !DILocation(line: 942, column: 3, scope: !5339)
!5342 = !DILocation(line: 975, column: 32, scope: !5266)
!5343 = !DILocation(line: 975, column: 38, scope: !5266)
!5344 = !DILocation(line: 975, column: 8, scope: !5266)
!5345 = !DILocation(line: 975, column: 6, scope: !5266)
!5346 = !DILocation(line: 976, column: 2, scope: !5266)
!5347 = !DILocation(line: 976, column: 12, scope: !5266)
!5348 = !DILocation(line: 977, column: 16, scope: !5349)
!5349 = distinct !DILexicalBlock(scope: !5266, file: !3, line: 976, column: 16)
!5350 = !DILocation(line: 977, column: 23, scope: !5349)
!5351 = !DILocation(line: 977, column: 35, scope: !5349)
!5352 = !DILocation(line: 977, column: 33, scope: !5349)
!5353 = !DILocation(line: 978, column: 5, scope: !5349)
!5354 = !DILocation(line: 977, column: 46, scope: !5349)
!5355 = !DILocation(line: 977, column: 10, scope: !5349)
!5356 = !DILocation(line: 977, column: 8, scope: !5349)
!5357 = !DILocation(line: 979, column: 17, scope: !5349)
!5358 = !DILocation(line: 979, column: 28, scope: !5349)
!5359 = !DILocation(line: 980, column: 7, scope: !5349)
!5360 = !DILocation(line: 980, column: 18, scope: !5349)
!5361 = !DILocation(line: 979, column: 33, scope: !5349)
!5362 = !DILocation(line: 979, column: 14, scope: !5349)
!5363 = !DILocation(line: 981, column: 24, scope: !5349)
!5364 = !DILocation(line: 981, column: 30, scope: !5349)
!5365 = !DILocation(line: 981, column: 3, scope: !5349)
!5366 = !DILocation(line: 982, column: 3, scope: !5349)
!5367 = !DILocation(line: 982, column: 9, scope: !5349)
!5368 = !DILocation(line: 982, column: 20, scope: !5349)
!5369 = !DILocation(line: 982, column: 30, scope: !5349)
!5370 = !DILocation(line: 983, column: 3, scope: !5349)
!5371 = !DILocation(line: 983, column: 9, scope: !5349)
!5372 = !DILocation(line: 983, column: 16, scope: !5349)
!5373 = !DILocation(line: 983, column: 18, scope: !5349)
!5374 = distinct !{!5374, !5346, !5375}
!5375 = !DILocation(line: 984, column: 2, scope: !5266)
!5376 = !DILocation(line: 998, column: 31, scope: !5266)
!5377 = !DILocation(line: 998, column: 2, scope: !5266)
!5378 = !DILocation(line: 998, column: 8, scope: !5266)
!5379 = !DILocation(line: 998, column: 19, scope: !5266)
!5380 = !DILocation(line: 998, column: 29, scope: !5266)
!5381 = !DILocation(line: 999, column: 21, scope: !5266)
!5382 = !DILocation(line: 999, column: 27, scope: !5266)
!5383 = !DILocation(line: 999, column: 2, scope: !5266)
!5384 = !DILocation(line: 1002, column: 2, scope: !5266)
!5385 = !DILocation(line: 1002, column: 2, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5266, file: !3, line: 1002, column: 2)
!5387 = !{i32 -2141444109}
!5388 = !DILocation(line: 1003, column: 1, scope: !5266)
!5389 = distinct !DISubprogram(name: "cyz_handle_tx", scope: !3, file: !3, line: 1005, type: !5267, scopeLine: 1006, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!5390 = !DILocalVariable(name: "info", arg: 1, scope: !5389, file: !3, line: 1005, type: !134)
!5391 = !DILocation(line: 1005, column: 49, scope: !5389)
!5392 = !DILocalVariable(name: "buf_ctrl", scope: !5389, file: !3, line: 1007, type: !4331)
!5393 = !DILocation(line: 1007, column: 27, scope: !5389)
!5394 = !DILocation(line: 1007, column: 38, scope: !5389)
!5395 = !DILocation(line: 1007, column: 44, scope: !5389)
!5396 = !DILocation(line: 1007, column: 46, scope: !5389)
!5397 = !DILocation(line: 1007, column: 50, scope: !5389)
!5398 = !DILocalVariable(name: "cinfo", scope: !5389, file: !3, line: 1008, type: !4229)
!5399 = !DILocation(line: 1008, column: 24, scope: !5389)
!5400 = !DILocation(line: 1008, column: 32, scope: !5389)
!5401 = !DILocation(line: 1008, column: 38, scope: !5389)
!5402 = !DILocalVariable(name: "tty", scope: !5389, file: !3, line: 1009, type: !233)
!5403 = !DILocation(line: 1009, column: 21, scope: !5389)
!5404 = !DILocalVariable(name: "data", scope: !5389, file: !3, line: 1010, type: !1375)
!5405 = !DILocation(line: 1010, column: 5, scope: !5389)
!5406 = !DILocalVariable(name: "char_count", scope: !5389, file: !3, line: 1011, type: !7)
!5407 = !DILocation(line: 1011, column: 15, scope: !5389)
!5408 = !DILocalVariable(name: "tx_put", scope: !5389, file: !3, line: 1015, type: !120)
!5409 = !DILocation(line: 1015, column: 8, scope: !5389)
!5410 = !DILocalVariable(name: "tx_get", scope: !5389, file: !3, line: 1015, type: !120)
!5411 = !DILocation(line: 1015, column: 16, scope: !5389)
!5412 = !DILocalVariable(name: "tx_bufsize", scope: !5389, file: !3, line: 1015, type: !120)
!5413 = !DILocation(line: 1015, column: 24, scope: !5389)
!5414 = !DILocalVariable(name: "tx_bufaddr", scope: !5389, file: !3, line: 1015, type: !120)
!5415 = !DILocation(line: 1015, column: 36, scope: !5389)
!5416 = !DILocation(line: 1017, column: 6, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5389, file: !3, line: 1017, column: 6)
!5418 = !DILocation(line: 1017, column: 12, scope: !5417)
!5419 = !DILocation(line: 1017, column: 21, scope: !5417)
!5420 = !DILocation(line: 1017, column: 6, scope: !5389)
!5421 = !DILocation(line: 1018, column: 3, scope: !5417)
!5422 = !DILocation(line: 1020, column: 18, scope: !5389)
!5423 = !DILocation(line: 1020, column: 28, scope: !5389)
!5424 = !DILocation(line: 1020, column: 17, scope: !5389)
!5425 = !DILocation(line: 1020, column: 11, scope: !5389)
!5426 = !DILocation(line: 1020, column: 9, scope: !5389)
!5427 = !DILocation(line: 1021, column: 18, scope: !5389)
!5428 = !DILocation(line: 1021, column: 28, scope: !5389)
!5429 = !DILocation(line: 1021, column: 17, scope: !5389)
!5430 = !DILocation(line: 1021, column: 11, scope: !5389)
!5431 = !DILocation(line: 1021, column: 9, scope: !5389)
!5432 = !DILocation(line: 1022, column: 22, scope: !5389)
!5433 = !DILocation(line: 1022, column: 32, scope: !5389)
!5434 = !DILocation(line: 1022, column: 21, scope: !5389)
!5435 = !DILocation(line: 1022, column: 15, scope: !5389)
!5436 = !DILocation(line: 1022, column: 13, scope: !5389)
!5437 = !DILocation(line: 1023, column: 22, scope: !5389)
!5438 = !DILocation(line: 1023, column: 32, scope: !5389)
!5439 = !DILocation(line: 1023, column: 21, scope: !5389)
!5440 = !DILocation(line: 1023, column: 15, scope: !5389)
!5441 = !DILocation(line: 1023, column: 13, scope: !5389)
!5442 = !DILocation(line: 1024, column: 6, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5389, file: !3, line: 1024, column: 6)
!5444 = !DILocation(line: 1024, column: 16, scope: !5443)
!5445 = !DILocation(line: 1024, column: 13, scope: !5443)
!5446 = !DILocation(line: 1024, column: 6, scope: !5389)
!5447 = !DILocation(line: 1025, column: 16, scope: !5443)
!5448 = !DILocation(line: 1025, column: 25, scope: !5443)
!5449 = !DILocation(line: 1025, column: 23, scope: !5443)
!5450 = !DILocation(line: 1025, column: 32, scope: !5443)
!5451 = !DILocation(line: 1025, column: 38, scope: !5443)
!5452 = !DILocation(line: 1025, column: 36, scope: !5443)
!5453 = !DILocation(line: 1025, column: 14, scope: !5443)
!5454 = !DILocation(line: 1025, column: 3, scope: !5443)
!5455 = !DILocation(line: 1027, column: 16, scope: !5443)
!5456 = !DILocation(line: 1027, column: 25, scope: !5443)
!5457 = !DILocation(line: 1027, column: 23, scope: !5443)
!5458 = !DILocation(line: 1027, column: 32, scope: !5443)
!5459 = !DILocation(line: 1027, column: 14, scope: !5443)
!5460 = !DILocation(line: 1029, column: 7, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5389, file: !3, line: 1029, column: 6)
!5462 = !DILocation(line: 1029, column: 6, scope: !5389)
!5463 = !DILocation(line: 1030, column: 3, scope: !5461)
!5464 = !DILocation(line: 1032, column: 26, scope: !5389)
!5465 = !DILocation(line: 1032, column: 32, scope: !5389)
!5466 = !DILocation(line: 1032, column: 8, scope: !5389)
!5467 = !DILocation(line: 1032, column: 6, scope: !5389)
!5468 = !DILocation(line: 1033, column: 6, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !5389, file: !3, line: 1033, column: 6)
!5470 = !DILocation(line: 1033, column: 10, scope: !5469)
!5471 = !DILocation(line: 1033, column: 6, scope: !5389)
!5472 = !DILocation(line: 1034, column: 3, scope: !5469)
!5473 = !DILocation(line: 1036, column: 6, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !5389, file: !3, line: 1036, column: 6)
!5475 = !DILocation(line: 1036, column: 12, scope: !5474)
!5476 = !DILocation(line: 1036, column: 6, scope: !5389)
!5477 = !DILocation(line: 1037, column: 10, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5474, file: !3, line: 1036, column: 20)
!5479 = !DILocation(line: 1037, column: 16, scope: !5478)
!5480 = !DILocation(line: 1037, column: 8, scope: !5478)
!5481 = !DILocation(line: 1039, column: 3, scope: !5478)
!5482 = !DILocation(line: 1039, column: 3, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !5478, file: !3, line: 1039, column: 3)
!5484 = !{i32 -2141443942}
!5485 = !DILocation(line: 1040, column: 13, scope: !5478)
!5486 = !DILocation(line: 1040, column: 20, scope: !5478)
!5487 = !DILocation(line: 1040, column: 28, scope: !5478)
!5488 = !DILocation(line: 1040, column: 39, scope: !5478)
!5489 = !DILocation(line: 1040, column: 25, scope: !5478)
!5490 = !DILocation(line: 1040, column: 10, scope: !5478)
!5491 = !DILocation(line: 1041, column: 3, scope: !5478)
!5492 = !DILocation(line: 1041, column: 9, scope: !5478)
!5493 = !DILocation(line: 1041, column: 16, scope: !5478)
!5494 = !DILocation(line: 1042, column: 13, scope: !5478)
!5495 = !DILocation(line: 1043, column: 3, scope: !5478)
!5496 = !DILocation(line: 1043, column: 9, scope: !5478)
!5497 = !DILocation(line: 1043, column: 16, scope: !5478)
!5498 = !DILocation(line: 1043, column: 18, scope: !5478)
!5499 = !DILocation(line: 1044, column: 2, scope: !5478)
!5500 = !DILocation(line: 1064, column: 2, scope: !5389)
!5501 = !DILocation(line: 1064, column: 9, scope: !5389)
!5502 = !DILocation(line: 1064, column: 15, scope: !5389)
!5503 = !DILocation(line: 1064, column: 24, scope: !5389)
!5504 = !DILocation(line: 1064, column: 27, scope: !5389)
!5505 = !DILocation(line: 0, scope: !5389)
!5506 = !DILocation(line: 1065, column: 10, scope: !5507)
!5507 = distinct !DILexicalBlock(scope: !5389, file: !3, line: 1064, column: 39)
!5508 = !DILocation(line: 1065, column: 16, scope: !5507)
!5509 = !DILocation(line: 1065, column: 21, scope: !5507)
!5510 = !DILocation(line: 1065, column: 30, scope: !5507)
!5511 = !DILocation(line: 1065, column: 36, scope: !5507)
!5512 = !DILocation(line: 1065, column: 8, scope: !5507)
!5513 = !DILocation(line: 1066, column: 3, scope: !5507)
!5514 = !DILocation(line: 1066, column: 9, scope: !5507)
!5515 = !DILocation(line: 1066, column: 17, scope: !5507)
!5516 = !DILocation(line: 1067, column: 22, scope: !5507)
!5517 = !DILocation(line: 1067, column: 28, scope: !5507)
!5518 = !DILocation(line: 1067, column: 38, scope: !5507)
!5519 = !DILocation(line: 1067, column: 21, scope: !5507)
!5520 = !DILocation(line: 1067, column: 43, scope: !5507)
!5521 = !DILocation(line: 1067, column: 3, scope: !5507)
!5522 = !DILocation(line: 1067, column: 9, scope: !5507)
!5523 = !DILocation(line: 1067, column: 19, scope: !5507)
!5524 = !DILocation(line: 1070, column: 3, scope: !5507)
!5525 = !DILocation(line: 1070, column: 3, scope: !5526)
!5526 = distinct !DILexicalBlock(scope: !5507, file: !3, line: 1070, column: 3)
!5527 = !{i32 -2141443741}
!5528 = !DILocation(line: 1071, column: 13, scope: !5507)
!5529 = !DILocation(line: 1071, column: 20, scope: !5507)
!5530 = !DILocation(line: 1071, column: 28, scope: !5507)
!5531 = !DILocation(line: 1071, column: 39, scope: !5507)
!5532 = !DILocation(line: 1071, column: 25, scope: !5507)
!5533 = !DILocation(line: 1071, column: 10, scope: !5507)
!5534 = !DILocation(line: 1072, column: 13, scope: !5507)
!5535 = !DILocation(line: 1073, column: 3, scope: !5507)
!5536 = !DILocation(line: 1073, column: 9, scope: !5507)
!5537 = !DILocation(line: 1073, column: 16, scope: !5507)
!5538 = !DILocation(line: 1073, column: 18, scope: !5507)
!5539 = distinct !{!5539, !5500, !5540}
!5540 = !DILocation(line: 1074, column: 2, scope: !5389)
!5541 = !DILocation(line: 1076, column: 13, scope: !5389)
!5542 = !DILocation(line: 1076, column: 2, scope: !5389)
!5543 = !DILocation(line: 1077, column: 15, scope: !5389)
!5544 = !DILocation(line: 1077, column: 2, scope: !5389)
!5545 = !DILabel(scope: !5389, name: "ztxdone", file: !3, line: 1078)
!5546 = !DILocation(line: 1078, column: 1, scope: !5389)
!5547 = !DILocation(line: 1080, column: 2, scope: !5389)
!5548 = !DILocation(line: 1080, column: 2, scope: !5549)
!5549 = distinct !DILexicalBlock(scope: !5389, file: !3, line: 1080, column: 2)
!5550 = !{i32 -2141443629}
!5551 = !DILocation(line: 1081, column: 1, scope: !5389)
!5552 = distinct !DISubprogram(name: "cyz_fpga_loaded", scope: !3, file: !3, line: 317, type: !4930, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!5553 = !DILocalVariable(name: "card", arg: 1, scope: !5552, file: !3, line: 317, type: !4229)
!5554 = !DILocation(line: 317, column: 58, scope: !5552)
!5555 = !DILocation(line: 319, column: 27, scope: !5552)
!5556 = !DILocation(line: 319, column: 33, scope: !5552)
!5557 = !DILocation(line: 319, column: 42, scope: !5552)
!5558 = !DILocation(line: 319, column: 9, scope: !5552)
!5559 = !DILocation(line: 319, column: 2, scope: !5552)
!5560 = distinct !DISubprogram(name: "readl", scope: !4920, file: !4920, line: 59, type: !5561, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!5561 = !DISubroutineType(types: !5562)
!5562 = !{!7, !5563}
!5563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5564, size: 64)
!5564 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4924)
!5565 = !DILocalVariable(name: "addr", arg: 1, scope: !5560, file: !4920, line: 59, type: !5563)
!5566 = !DILocation(line: 59, column: 1, scope: !5560)
!5567 = !DILocalVariable(name: "ret", scope: !5560, file: !4920, line: 59, type: !7)
!5568 = !{i32 -2141903910}
!5569 = distinct !DISubprogram(name: "__cyz_fpga_loaded", scope: !3, file: !3, line: 312, type: !5570, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!5570 = !DISubroutineType(types: !5571)
!5571 = !{!497, !4238}
!5572 = !DILocalVariable(name: "ctl_addr", arg: 1, scope: !5569, file: !3, line: 312, type: !4238)
!5573 = !DILocation(line: 312, column: 67, scope: !5569)
!5574 = !DILocation(line: 314, column: 16, scope: !5569)
!5575 = !DILocation(line: 314, column: 26, scope: !5569)
!5576 = !DILocation(line: 314, column: 15, scope: !5569)
!5577 = !DILocation(line: 314, column: 9, scope: !5569)
!5578 = !DILocation(line: 314, column: 37, scope: !5569)
!5579 = !DILocation(line: 314, column: 2, scope: !5569)
!5580 = distinct !DISubprogram(name: "cyz_fetch_msg", scope: !3, file: !3, line: 876, type: !5581, scopeLine: 878, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!5581 = !DISubroutineType(types: !5582)
!5582 = !{!139, !4229, !5583, !5584, !5583}
!5583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 64)
!5584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 64)
!5585 = !DILocalVariable(name: "cinfo", arg: 1, scope: !5580, file: !3, line: 876, type: !4229)
!5586 = !DILocation(line: 876, column: 37, scope: !5580)
!5587 = !DILocalVariable(name: "channel", arg: 2, scope: !5580, file: !3, line: 877, type: !5583)
!5588 = !DILocation(line: 877, column: 10, scope: !5580)
!5589 = !DILocalVariable(name: "cmd", arg: 3, scope: !5580, file: !3, line: 877, type: !5584)
!5590 = !DILocation(line: 877, column: 25, scope: !5580)
!5591 = !DILocalVariable(name: "param", arg: 4, scope: !5580, file: !3, line: 877, type: !5583)
!5592 = !DILocation(line: 877, column: 37, scope: !5580)
!5593 = !DILocalVariable(name: "board_ctrl", scope: !5580, file: !3, line: 879, type: !4271)
!5594 = !DILocation(line: 879, column: 29, scope: !5580)
!5595 = !DILocation(line: 879, column: 42, scope: !5580)
!5596 = !DILocation(line: 879, column: 49, scope: !5580)
!5597 = !DILocalVariable(name: "loc_doorbell", scope: !5580, file: !3, line: 880, type: !126)
!5598 = !DILocation(line: 880, column: 16, scope: !5580)
!5599 = !DILocation(line: 882, column: 24, scope: !5580)
!5600 = !DILocation(line: 882, column: 31, scope: !5580)
!5601 = !DILocation(line: 882, column: 40, scope: !5580)
!5602 = !DILocation(line: 882, column: 47, scope: !5580)
!5603 = !DILocation(line: 882, column: 23, scope: !5580)
!5604 = !DILocation(line: 882, column: 17, scope: !5580)
!5605 = !DILocation(line: 882, column: 15, scope: !5580)
!5606 = !DILocation(line: 883, column: 6, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5580, file: !3, line: 883, column: 6)
!5608 = !DILocation(line: 883, column: 6, scope: !5580)
!5609 = !DILocation(line: 884, column: 24, scope: !5610)
!5610 = distinct !DILexicalBlock(scope: !5607, file: !3, line: 883, column: 20)
!5611 = !DILocation(line: 884, column: 22, scope: !5610)
!5612 = !DILocation(line: 884, column: 10, scope: !5610)
!5613 = !DILocation(line: 884, column: 4, scope: !5610)
!5614 = !DILocation(line: 884, column: 8, scope: !5610)
!5615 = !DILocation(line: 885, column: 21, scope: !5610)
!5616 = !DILocation(line: 885, column: 33, scope: !5610)
!5617 = !DILocation(line: 885, column: 20, scope: !5610)
!5618 = !DILocation(line: 885, column: 14, scope: !5610)
!5619 = !DILocation(line: 885, column: 4, scope: !5610)
!5620 = !DILocation(line: 885, column: 12, scope: !5610)
!5621 = !DILocation(line: 886, column: 27, scope: !5610)
!5622 = !DILocation(line: 886, column: 39, scope: !5610)
!5623 = !DILocation(line: 886, column: 26, scope: !5610)
!5624 = !DILocation(line: 886, column: 20, scope: !5610)
!5625 = !DILocation(line: 886, column: 4, scope: !5610)
!5626 = !DILocation(line: 886, column: 10, scope: !5610)
!5627 = !DILocation(line: 887, column: 3, scope: !5610)
!5628 = !DILocation(line: 887, column: 3, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5610, file: !3, line: 887, column: 3)
!5630 = !{i32 -2141444848}
!5631 = !DILocation(line: 888, column: 3, scope: !5610)
!5632 = !DILocation(line: 890, column: 2, scope: !5580)
!5633 = !DILocation(line: 891, column: 1, scope: !5580)
!5634 = distinct !DISubprogram(name: "tty_insert_flip_char", scope: !5635, file: !5635, line: 18, type: !5636, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!5635 = !DIFile(filename: "./include/linux/tty_flip.h", directory: "/home/lizy2001/genbc/linux")
!5636 = !DISubroutineType(types: !5637)
!5637 = !{!139, !3911, !124, !119}
!5638 = !DILocalVariable(name: "port", arg: 1, scope: !5634, file: !5635, line: 18, type: !3911)
!5639 = !DILocation(line: 18, column: 57, scope: !5634)
!5640 = !DILocalVariable(name: "ch", arg: 2, scope: !5634, file: !5635, line: 19, type: !124)
!5641 = !DILocation(line: 19, column: 20, scope: !5634)
!5642 = !DILocalVariable(name: "flag", arg: 3, scope: !5634, file: !5635, line: 19, type: !119)
!5643 = !DILocation(line: 19, column: 29, scope: !5634)
!5644 = !DILocalVariable(name: "tb", scope: !5634, file: !5635, line: 21, type: !148)
!5645 = !DILocation(line: 21, column: 21, scope: !5634)
!5646 = !DILocation(line: 21, column: 26, scope: !5634)
!5647 = !DILocation(line: 21, column: 32, scope: !5634)
!5648 = !DILocation(line: 21, column: 36, scope: !5634)
!5649 = !DILocalVariable(name: "change", scope: !5634, file: !5635, line: 22, type: !139)
!5650 = !DILocation(line: 22, column: 6, scope: !5634)
!5651 = !DILocation(line: 24, column: 12, scope: !5634)
!5652 = !DILocation(line: 24, column: 16, scope: !5634)
!5653 = !DILocation(line: 24, column: 22, scope: !5634)
!5654 = !DILocation(line: 24, column: 37, scope: !5634)
!5655 = !DILocation(line: 24, column: 41, scope: !5634)
!5656 = !DILocation(line: 24, column: 46, scope: !5634)
!5657 = !DILocation(line: 0, scope: !5634)
!5658 = !DILocation(line: 24, column: 9, scope: !5634)
!5659 = !DILocation(line: 25, column: 7, scope: !5660)
!5660 = distinct !DILexicalBlock(scope: !5634, file: !5635, line: 25, column: 6)
!5661 = !DILocation(line: 25, column: 14, scope: !5660)
!5662 = !DILocation(line: 25, column: 17, scope: !5660)
!5663 = !DILocation(line: 25, column: 21, scope: !5660)
!5664 = !DILocation(line: 25, column: 28, scope: !5660)
!5665 = !DILocation(line: 25, column: 32, scope: !5660)
!5666 = !DILocation(line: 25, column: 26, scope: !5660)
!5667 = !DILocation(line: 25, column: 6, scope: !5634)
!5668 = !DILocation(line: 26, column: 8, scope: !5669)
!5669 = distinct !DILexicalBlock(scope: !5670, file: !5635, line: 26, column: 7)
!5670 = distinct !DILexicalBlock(scope: !5660, file: !5635, line: 25, column: 38)
!5671 = !DILocation(line: 26, column: 12, scope: !5669)
!5672 = !DILocation(line: 26, column: 7, scope: !5669)
!5673 = !DILocation(line: 26, column: 18, scope: !5669)
!5674 = !DILocation(line: 26, column: 7, scope: !5670)
!5675 = !DILocation(line: 27, column: 34, scope: !5669)
!5676 = !DILocation(line: 27, column: 18, scope: !5669)
!5677 = !DILocation(line: 27, column: 22, scope: !5669)
!5678 = !DILocation(line: 27, column: 26, scope: !5669)
!5679 = !DILocation(line: 27, column: 5, scope: !5669)
!5680 = !DILocation(line: 27, column: 32, scope: !5669)
!5681 = !DILocation(line: 27, column: 4, scope: !5669)
!5682 = !DILocation(line: 28, column: 35, scope: !5670)
!5683 = !DILocation(line: 28, column: 17, scope: !5670)
!5684 = !DILocation(line: 28, column: 21, scope: !5670)
!5685 = !DILocation(line: 28, column: 25, scope: !5670)
!5686 = !DILocation(line: 28, column: 29, scope: !5670)
!5687 = !DILocation(line: 28, column: 4, scope: !5670)
!5688 = !DILocation(line: 28, column: 33, scope: !5670)
!5689 = !DILocation(line: 29, column: 3, scope: !5670)
!5690 = !DILocation(line: 31, column: 32, scope: !5634)
!5691 = !DILocation(line: 31, column: 38, scope: !5634)
!5692 = !DILocation(line: 31, column: 42, scope: !5634)
!5693 = !DILocation(line: 31, column: 9, scope: !5634)
!5694 = !DILocation(line: 31, column: 2, scope: !5634)
!5695 = !DILocation(line: 32, column: 1, scope: !5634)
!5696 = distinct !DISubprogram(name: "tty_port_check_carrier", scope: !142, file: !142, line: 638, type: !5697, scopeLine: 639, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!5697 = !DISubroutineType(types: !5698)
!5698 = !{!497, !3911}
!5699 = !DILocalVariable(name: "port", arg: 1, scope: !5696, file: !142, line: 638, type: !3911)
!5700 = !DILocation(line: 638, column: 60, scope: !5696)
!5701 = !DILocation(line: 640, column: 38, scope: !5696)
!5702 = !DILocation(line: 640, column: 44, scope: !5696)
!5703 = !DILocation(line: 640, column: 9, scope: !5696)
!5704 = !DILocation(line: 640, column: 2, scope: !5696)
!5705 = distinct !DISubprogram(name: "writel", scope: !4920, file: !4920, line: 67, type: !5706, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!5706 = !DISubroutineType(types: !5707)
!5707 = !{null, !7, !4923}
!5708 = !DILocalVariable(name: "val", arg: 1, scope: !5705, file: !4920, line: 67, type: !7)
!5709 = !DILocation(line: 67, column: 1, scope: !5705)
!5710 = !DILocalVariable(name: "addr", arg: 2, scope: !5705, file: !4920, line: 67, type: !4923)
!5711 = !{i32 -2141901517}
!5712 = distinct !DISubprogram(name: "flag_buf_ptr", scope: !142, file: !142, line: 80, type: !5713, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!5713 = !DISubroutineType(types: !5714)
!5714 = !{!122, !148, !139}
!5715 = !DILocalVariable(name: "b", arg: 1, scope: !5712, file: !142, line: 80, type: !148)
!5716 = !DILocation(line: 80, column: 53, scope: !5712)
!5717 = !DILocalVariable(name: "ofs", arg: 2, scope: !5712, file: !142, line: 80, type: !139)
!5718 = !DILocation(line: 80, column: 60, scope: !5712)
!5719 = !DILocation(line: 82, column: 30, scope: !5712)
!5720 = !DILocation(line: 82, column: 33, scope: !5712)
!5721 = !DILocation(line: 82, column: 17, scope: !5712)
!5722 = !DILocation(line: 82, column: 40, scope: !5712)
!5723 = !DILocation(line: 82, column: 43, scope: !5712)
!5724 = !DILocation(line: 82, column: 38, scope: !5712)
!5725 = !DILocation(line: 82, column: 2, scope: !5712)
!5726 = distinct !DISubprogram(name: "char_buf_ptr", scope: !142, file: !142, line: 75, type: !5727, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!5727 = !DISubroutineType(types: !5728)
!5728 = !{!123, !148, !139}
!5729 = !DILocalVariable(name: "b", arg: 1, scope: !5726, file: !142, line: 75, type: !148)
!5730 = !DILocation(line: 75, column: 62, scope: !5726)
!5731 = !DILocalVariable(name: "ofs", arg: 2, scope: !5726, file: !142, line: 75, type: !139)
!5732 = !DILocation(line: 75, column: 69, scope: !5726)
!5733 = !DILocation(line: 77, column: 27, scope: !5726)
!5734 = !DILocation(line: 77, column: 30, scope: !5726)
!5735 = !DILocation(line: 77, column: 10, scope: !5726)
!5736 = !DILocation(line: 77, column: 38, scope: !5726)
!5737 = !DILocation(line: 77, column: 36, scope: !5726)
!5738 = !DILocation(line: 77, column: 2, scope: !5726)
!5739 = distinct !DISubprogram(name: "test_bit", scope: !5740, file: !5740, line: 132, type: !5741, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!5740 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!5741 = !DISubroutineType(types: !5742)
!5742 = !{!497, !327, !5743}
!5743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5744, size: 64)
!5744 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5745)
!5745 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !126)
!5746 = !DILocalVariable(name: "nr", arg: 1, scope: !5747, file: !5748, line: 210, type: !327)
!5747 = distinct !DISubprogram(name: "variable_test_bit", scope: !5748, file: !5748, line: 210, type: !5741, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!5748 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!5749 = !DILocation(line: 210, column: 52, scope: !5747, inlinedAt: !5750)
!5750 = distinct !DILocation(line: 135, column: 9, scope: !5739)
!5751 = !DILocalVariable(name: "addr", arg: 2, scope: !5747, file: !5748, line: 210, type: !5743)
!5752 = !DILocation(line: 210, column: 86, scope: !5747, inlinedAt: !5750)
!5753 = !DILocalVariable(name: "oldbit", scope: !5747, file: !5748, line: 212, type: !497)
!5754 = !DILocation(line: 212, column: 7, scope: !5747, inlinedAt: !5750)
!5755 = !DILocalVariable(name: "nr", arg: 1, scope: !5756, file: !5748, line: 204, type: !327)
!5756 = distinct !DISubprogram(name: "constant_test_bit", scope: !5748, file: !5748, line: 204, type: !5741, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!5757 = !DILocation(line: 204, column: 52, scope: !5756, inlinedAt: !5758)
!5758 = distinct !DILocation(line: 135, column: 9, scope: !5739)
!5759 = !DILocalVariable(name: "addr", arg: 2, scope: !5756, file: !5748, line: 204, type: !5743)
!5760 = !DILocation(line: 204, column: 86, scope: !5756, inlinedAt: !5758)
!5761 = !DILocalVariable(name: "v", arg: 1, scope: !5762, file: !5763, line: 69, type: !5563)
!5762 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !5763, file: !5763, line: 69, type: !5764, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!5763 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!5764 = !DISubroutineType(types: !5765)
!5765 = !{null, !5563, !338}
!5766 = !DILocation(line: 69, column: 73, scope: !5762, inlinedAt: !5767)
!5767 = distinct !DILocation(line: 134, column: 2, scope: !5739)
!5768 = !DILocalVariable(name: "size", arg: 2, scope: !5762, file: !5763, line: 69, type: !338)
!5769 = !DILocation(line: 69, column: 83, scope: !5762, inlinedAt: !5767)
!5770 = !DILocalVariable(name: "nr", arg: 1, scope: !5739, file: !5740, line: 132, type: !327)
!5771 = !DILocation(line: 132, column: 34, scope: !5739)
!5772 = !DILocalVariable(name: "addr", arg: 2, scope: !5739, file: !5740, line: 132, type: !5743)
!5773 = !DILocation(line: 132, column: 68, scope: !5739)
!5774 = !DILocation(line: 134, column: 25, scope: !5739)
!5775 = !DILocation(line: 134, column: 32, scope: !5739)
!5776 = !DILocation(line: 134, column: 30, scope: !5739)
!5777 = !DILocation(line: 71, column: 19, scope: !5762, inlinedAt: !5767)
!5778 = !DILocation(line: 71, column: 22, scope: !5762, inlinedAt: !5767)
!5779 = !DILocation(line: 71, column: 2, scope: !5762, inlinedAt: !5767)
!5780 = !DILocation(line: 72, column: 2, scope: !5762, inlinedAt: !5767)
!5781 = !DILocation(line: 135, column: 9, scope: !5739)
!5782 = !DILocation(line: 206, column: 19, scope: !5756, inlinedAt: !5758)
!5783 = !DILocation(line: 206, column: 22, scope: !5756, inlinedAt: !5758)
!5784 = !DILocation(line: 206, column: 15, scope: !5756, inlinedAt: !5758)
!5785 = !DILocation(line: 207, column: 4, scope: !5756, inlinedAt: !5758)
!5786 = !DILocation(line: 207, column: 9, scope: !5756, inlinedAt: !5758)
!5787 = !DILocation(line: 207, column: 12, scope: !5756, inlinedAt: !5758)
!5788 = !DILocation(line: 206, column: 44, scope: !5756, inlinedAt: !5758)
!5789 = !DILocation(line: 207, column: 37, scope: !5756, inlinedAt: !5758)
!5790 = !DILocation(line: 217, column: 33, scope: !5747, inlinedAt: !5750)
!5791 = !DILocation(line: 217, column: 46, scope: !5747, inlinedAt: !5750)
!5792 = !DILocation(line: 214, column: 2, scope: !5747, inlinedAt: !5750)
!5793 = !{i32 -2147034925, i32 -2147034865}
!5794 = !DILocation(line: 219, column: 9, scope: !5747, inlinedAt: !5750)
!5795 = !DILocation(line: 135, column: 2, scope: !5739)
!5796 = distinct !DISubprogram(name: "kasan_check_read", scope: !5797, file: !5797, line: 34, type: !5798, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!5797 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!5798 = !DISubroutineType(types: !5799)
!5799 = !{!497, !5563, !7}
!5800 = !DILocalVariable(name: "p", arg: 1, scope: !5796, file: !5797, line: 34, type: !5563)
!5801 = !DILocation(line: 34, column: 58, scope: !5796)
!5802 = !DILocalVariable(name: "size", arg: 2, scope: !5796, file: !5797, line: 34, type: !7)
!5803 = !DILocation(line: 34, column: 74, scope: !5796)
!5804 = !DILocation(line: 36, column: 2, scope: !5796)
!5805 = distinct !DISubprogram(name: "kcsan_check_access", scope: !5806, file: !5806, line: 178, type: !5807, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!5806 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!5807 = !DISubroutineType(types: !5808)
!5808 = !{null, !5563, !338, !139}
!5809 = !DILocalVariable(name: "ptr", arg: 1, scope: !5805, file: !5806, line: 178, type: !5563)
!5810 = !DILocation(line: 178, column: 60, scope: !5805)
!5811 = !DILocalVariable(name: "size", arg: 2, scope: !5805, file: !5806, line: 178, type: !338)
!5812 = !DILocation(line: 178, column: 72, scope: !5805)
!5813 = !DILocalVariable(name: "type", arg: 3, scope: !5805, file: !5806, line: 179, type: !139)
!5814 = !DILocation(line: 179, column: 15, scope: !5805)
!5815 = !DILocation(line: 179, column: 23, scope: !5805)
!5816 = distinct !DISubprogram(name: "readb", scope: !4920, file: !4920, line: 57, type: !5817, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!5817 = !DISubroutineType(types: !5818)
!5818 = !{!124, !5563}
!5819 = !DILocalVariable(name: "addr", arg: 1, scope: !5816, file: !4920, line: 57, type: !5563)
!5820 = !DILocation(line: 57, column: 1, scope: !5816)
!5821 = !DILocalVariable(name: "ret", scope: !5816, file: !4920, line: 57, type: !124)
!5822 = !{i32 -2141904741}
!5823 = distinct !DISubprogram(name: "cy_pci_probe", scope: !3, file: !3, line: 3640, type: !4521, scopeLine: 3642, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!5824 = !DILocalVariable(name: "pdev", arg: 1, scope: !5823, file: !3, line: 3640, type: !4523)
!5825 = !DILocation(line: 3640, column: 41, scope: !5823)
!5826 = !DILocalVariable(name: "ent", arg: 2, scope: !5823, file: !3, line: 3641, type: !4508)
!5827 = !DILocation(line: 3641, column: 31, scope: !5823)
!5828 = !DILocalVariable(name: "card", scope: !5823, file: !3, line: 3643, type: !4229)
!5829 = !DILocation(line: 3643, column: 24, scope: !5823)
!5830 = !DILocalVariable(name: "addr0", scope: !5823, file: !3, line: 3644, type: !118)
!5831 = !DILocation(line: 3644, column: 16, scope: !5823)
!5832 = !DILocalVariable(name: "addr2", scope: !5823, file: !3, line: 3644, type: !118)
!5833 = !DILocation(line: 3644, column: 31, scope: !5823)
!5834 = !DILocalVariable(name: "card_name", scope: !5823, file: !3, line: 3645, type: !122)
!5835 = !DILocation(line: 3645, column: 8, scope: !5823)
!5836 = !DILocalVariable(name: "mailbox", scope: !5823, file: !3, line: 3646, type: !426)
!5837 = !DILocation(line: 3646, column: 6, scope: !5823)
!5838 = !DILocalVariable(name: "device_id", scope: !5823, file: !3, line: 3647, type: !7)
!5839 = !DILocation(line: 3647, column: 15, scope: !5823)
!5840 = !DILocalVariable(name: "nchan", scope: !5823, file: !3, line: 3647, type: !7)
!5841 = !DILocation(line: 3647, column: 26, scope: !5823)
!5842 = !DILocalVariable(name: "card_no", scope: !5823, file: !3, line: 3647, type: !7)
!5843 = !DILocation(line: 3647, column: 37, scope: !5823)
!5844 = !DILocalVariable(name: "i", scope: !5823, file: !3, line: 3647, type: !7)
!5845 = !DILocation(line: 3647, column: 46, scope: !5823)
!5846 = !DILocalVariable(name: "j", scope: !5823, file: !3, line: 3647, type: !7)
!5847 = !DILocation(line: 3647, column: 49, scope: !5823)
!5848 = !DILocalVariable(name: "plx_ver", scope: !5823, file: !3, line: 3648, type: !124)
!5849 = !DILocation(line: 3648, column: 16, scope: !5823)
!5850 = !DILocalVariable(name: "retval", scope: !5823, file: !3, line: 3649, type: !139)
!5851 = !DILocation(line: 3649, column: 6, scope: !5823)
!5852 = !DILocalVariable(name: "irq", scope: !5823, file: !3, line: 3649, type: !139)
!5853 = !DILocation(line: 3649, column: 14, scope: !5823)
!5854 = !DILocation(line: 3651, column: 29, scope: !5823)
!5855 = !DILocation(line: 3651, column: 11, scope: !5823)
!5856 = !DILocation(line: 3651, column: 9, scope: !5823)
!5857 = !DILocation(line: 3652, column: 6, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5823, file: !3, line: 3652, column: 6)
!5859 = !DILocation(line: 3652, column: 6, scope: !5823)
!5860 = !DILocation(line: 3653, column: 3, scope: !5861)
!5861 = distinct !DILexicalBlock(scope: !5858, file: !3, line: 3652, column: 14)
!5862 = !DILocation(line: 3654, column: 3, scope: !5861)
!5863 = !DILocation(line: 3658, column: 8, scope: !5823)
!5864 = !DILocation(line: 3658, column: 14, scope: !5823)
!5865 = !DILocation(line: 3658, column: 6, scope: !5823)
!5866 = !DILocation(line: 3659, column: 14, scope: !5823)
!5867 = !DILocation(line: 3659, column: 20, scope: !5823)
!5868 = !DILocation(line: 3659, column: 27, scope: !5823)
!5869 = !DILocation(line: 3659, column: 12, scope: !5823)
!5870 = !DILocation(line: 3669, column: 6, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !5823, file: !3, line: 3669, column: 6)
!5872 = !DILocation(line: 3669, column: 16, scope: !5871)
!5873 = !DILocation(line: 3669, column: 6, scope: !5823)
!5874 = !DILocation(line: 3670, column: 3, scope: !5875)
!5875 = distinct !DILexicalBlock(scope: !5871, file: !3, line: 3669, column: 46)
!5876 = !DILocation(line: 3672, column: 10, scope: !5875)
!5877 = !DILocation(line: 3673, column: 3, scope: !5875)
!5878 = !DILocation(line: 3676, column: 6, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !5823, file: !3, line: 3676, column: 6)
!5880 = !DILocation(line: 3676, column: 34, scope: !5879)
!5881 = !DILocation(line: 3676, column: 6, scope: !5823)
!5882 = !DILocation(line: 3677, column: 3, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5879, file: !3, line: 3676, column: 51)
!5884 = !DILocation(line: 3679, column: 3, scope: !5883)
!5885 = !DILocation(line: 3679, column: 9, scope: !5883)
!5886 = !DILocation(line: 3679, column: 21, scope: !5883)
!5887 = !DILocation(line: 3679, column: 27, scope: !5883)
!5888 = !DILocation(line: 3680, column: 2, scope: !5883)
!5889 = !DILocation(line: 3682, column: 31, scope: !5823)
!5890 = !DILocation(line: 3682, column: 11, scope: !5823)
!5891 = !DILocation(line: 3682, column: 9, scope: !5823)
!5892 = !DILocation(line: 3683, column: 6, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5823, file: !3, line: 3683, column: 6)
!5894 = !DILocation(line: 3683, column: 6, scope: !5823)
!5895 = !DILocation(line: 3684, column: 3, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !5893, file: !3, line: 3683, column: 14)
!5897 = !DILocation(line: 3685, column: 3, scope: !5896)
!5898 = !DILocation(line: 3688, column: 9, scope: !5823)
!5899 = !DILocation(line: 3689, column: 6, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5823, file: !3, line: 3689, column: 6)
!5901 = !DILocation(line: 3689, column: 16, scope: !5900)
!5902 = !DILocation(line: 3689, column: 45, scope: !5900)
!5903 = !DILocation(line: 3690, column: 4, scope: !5900)
!5904 = !DILocation(line: 3690, column: 14, scope: !5900)
!5905 = !DILocation(line: 3689, column: 6, scope: !5823)
!5906 = !DILocation(line: 3691, column: 13, scope: !5907)
!5907 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 3690, column: 44)
!5908 = !DILocation(line: 3693, column: 19, scope: !5907)
!5909 = !DILocation(line: 3693, column: 11, scope: !5907)
!5910 = !DILocation(line: 3693, column: 9, scope: !5907)
!5911 = !DILocation(line: 3695, column: 7, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5907, file: !3, line: 3695, column: 7)
!5913 = !DILocation(line: 3695, column: 13, scope: !5912)
!5914 = !DILocation(line: 3695, column: 7, scope: !5907)
!5915 = !DILocation(line: 3696, column: 4, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5912, file: !3, line: 3695, column: 22)
!5917 = !DILocation(line: 3697, column: 4, scope: !5916)
!5918 = !DILocation(line: 3699, column: 19, scope: !5907)
!5919 = !DILocation(line: 3699, column: 11, scope: !5907)
!5920 = !DILocation(line: 3699, column: 9, scope: !5907)
!5921 = !DILocation(line: 3701, column: 7, scope: !5922)
!5922 = distinct !DILexicalBlock(scope: !5907, file: !3, line: 3701, column: 7)
!5923 = !DILocation(line: 3701, column: 13, scope: !5922)
!5924 = !DILocation(line: 3701, column: 7, scope: !5907)
!5925 = !DILocation(line: 3702, column: 4, scope: !5926)
!5926 = distinct !DILexicalBlock(scope: !5922, file: !3, line: 3701, column: 22)
!5927 = !DILocation(line: 3703, column: 4, scope: !5926)
!5928 = !DILocation(line: 3706, column: 44, scope: !5907)
!5929 = !DILocation(line: 3706, column: 30, scope: !5907)
!5930 = !DILocation(line: 3706, column: 28, scope: !5907)
!5931 = !DILocation(line: 3706, column: 9, scope: !5907)
!5932 = !DILocation(line: 3707, column: 7, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !5907, file: !3, line: 3707, column: 7)
!5934 = !DILocation(line: 3707, column: 13, scope: !5933)
!5935 = !DILocation(line: 3707, column: 7, scope: !5907)
!5936 = !DILocation(line: 3708, column: 4, scope: !5937)
!5937 = distinct !DILexicalBlock(scope: !5933, file: !3, line: 3707, column: 19)
!5938 = !DILocation(line: 3710, column: 4, scope: !5937)
!5939 = !DILocation(line: 3712, column: 2, scope: !5907)
!5940 = !DILocation(line: 3712, column: 13, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 3712, column: 13)
!5942 = !DILocation(line: 3712, column: 23, scope: !5941)
!5943 = !DILocation(line: 3712, column: 13, scope: !5900)
!5944 = !DILocalVariable(name: "ctl_addr", scope: !5945, file: !3, line: 3713, type: !4238)
!5945 = distinct !DILexicalBlock(scope: !5941, file: !3, line: 3712, column: 53)
!5946 = !DILocation(line: 3713, column: 32, scope: !5945)
!5947 = !DILocation(line: 3715, column: 30, scope: !5945)
!5948 = !DILocation(line: 3715, column: 22, scope: !5945)
!5949 = !DILocation(line: 3715, column: 20, scope: !5945)
!5950 = !DILocation(line: 3715, column: 14, scope: !5945)
!5951 = !DILocation(line: 3715, column: 12, scope: !5945)
!5952 = !DILocation(line: 3717, column: 7, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5945, file: !3, line: 3717, column: 7)
!5954 = !DILocation(line: 3717, column: 13, scope: !5953)
!5955 = !DILocation(line: 3717, column: 7, scope: !5945)
!5956 = !DILocation(line: 3718, column: 4, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5953, file: !3, line: 3717, column: 22)
!5958 = !DILocation(line: 3719, column: 4, scope: !5957)
!5959 = !DILocation(line: 3723, column: 3, scope: !5945)
!5960 = !DILocation(line: 3723, column: 3, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5945, file: !3, line: 3723, column: 3)
!5962 = !{i32 -2141363514}
!5963 = !DILocation(line: 3726, column: 12, scope: !5945)
!5964 = !DILocation(line: 3726, column: 18, scope: !5945)
!5965 = !DILocation(line: 3726, column: 23, scope: !5945)
!5966 = !DILocation(line: 3726, column: 3, scope: !5945)
!5967 = !DILocation(line: 3728, column: 20, scope: !5945)
!5968 = !DILocation(line: 3728, column: 30, scope: !5945)
!5969 = !DILocation(line: 3728, column: 19, scope: !5945)
!5970 = !DILocation(line: 3728, column: 13, scope: !5945)
!5971 = !DILocation(line: 3728, column: 11, scope: !5945)
!5972 = !DILocation(line: 3730, column: 19, scope: !5945)
!5973 = !DILocation(line: 3731, column: 5, scope: !5945)
!5974 = !DILocation(line: 3731, column: 13, scope: !5945)
!5975 = !DILocation(line: 3730, column: 11, scope: !5945)
!5976 = !DILocation(line: 3730, column: 9, scope: !5945)
!5977 = !DILocation(line: 3732, column: 7, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !5945, file: !3, line: 3732, column: 7)
!5979 = !DILocation(line: 3732, column: 13, scope: !5978)
!5980 = !DILocation(line: 3732, column: 7, scope: !5945)
!5981 = !DILocation(line: 3733, column: 4, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !5978, file: !3, line: 3732, column: 22)
!5983 = !DILocation(line: 3734, column: 4, scope: !5982)
!5984 = !DILocation(line: 3737, column: 7, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5945, file: !3, line: 3737, column: 7)
!5986 = !DILocation(line: 3737, column: 15, scope: !5985)
!5987 = !DILocation(line: 3737, column: 7, scope: !5945)
!5988 = !DILocation(line: 3738, column: 14, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5985, file: !3, line: 3737, column: 25)
!5990 = !DILocation(line: 3739, column: 3, scope: !5989)
!5991 = !DILocation(line: 3740, column: 14, scope: !5992)
!5992 = distinct !DILexicalBlock(scope: !5985, file: !3, line: 3739, column: 10)
!5993 = !DILocation(line: 3760, column: 9, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5992, file: !3, line: 3760, column: 8)
!5995 = !DILocation(line: 3760, column: 17, scope: !5994)
!5996 = !DILocation(line: 3760, column: 27, scope: !5994)
!5997 = !DILocation(line: 3760, column: 31, scope: !5994)
!5998 = !DILocation(line: 3760, column: 39, scope: !5994)
!5999 = !DILocation(line: 3760, column: 8, scope: !5992)
!6000 = !DILocation(line: 3761, column: 5, scope: !5994)
!6001 = !DILocation(line: 3761, column: 5, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !5994, file: !3, line: 3761, column: 5)
!6003 = !{i32 -2141363173}
!6004 = !DILocation(line: 3764, column: 24, scope: !5945)
!6005 = !DILocation(line: 3764, column: 30, scope: !5945)
!6006 = !DILocation(line: 3764, column: 37, scope: !5945)
!6007 = !DILocation(line: 3764, column: 44, scope: !5945)
!6008 = !DILocation(line: 3764, column: 12, scope: !5945)
!6009 = !DILocation(line: 3764, column: 10, scope: !5945)
!6010 = !DILocation(line: 3765, column: 7, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !5945, file: !3, line: 3765, column: 7)
!6012 = !DILocation(line: 3765, column: 14, scope: !6011)
!6013 = !DILocation(line: 3765, column: 7, scope: !5945)
!6014 = !DILocation(line: 3766, column: 4, scope: !6011)
!6015 = !DILocation(line: 3767, column: 11, scope: !5945)
!6016 = !DILocation(line: 3767, column: 9, scope: !5945)
!6017 = !DILocation(line: 3768, column: 2, scope: !5945)
!6018 = !DILocation(line: 3770, column: 7, scope: !6019)
!6019 = distinct !DILexicalBlock(scope: !5823, file: !3, line: 3770, column: 6)
!6020 = !DILocation(line: 3770, column: 25, scope: !6019)
!6021 = !DILocation(line: 3770, column: 23, scope: !6019)
!6022 = !DILocation(line: 3770, column: 32, scope: !6019)
!6023 = !DILocation(line: 3770, column: 6, scope: !5823)
!6024 = !DILocation(line: 3771, column: 3, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6019, file: !3, line: 3770, column: 44)
!6026 = !DILocation(line: 3774, column: 3, scope: !6025)
!6027 = !DILocation(line: 3777, column: 15, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !5823, file: !3, line: 3777, column: 2)
!6029 = !DILocation(line: 3777, column: 7, scope: !6028)
!6030 = !DILocation(line: 3777, column: 20, scope: !6031)
!6031 = distinct !DILexicalBlock(scope: !6028, file: !3, line: 3777, column: 2)
!6032 = !DILocation(line: 3777, column: 28, scope: !6031)
!6033 = !DILocation(line: 3777, column: 2, scope: !6028)
!6034 = !DILocation(line: 3778, column: 19, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !6031, file: !3, line: 3777, column: 51)
!6036 = !DILocation(line: 3778, column: 11, scope: !6035)
!6037 = !DILocation(line: 3778, column: 8, scope: !6035)
!6038 = !DILocation(line: 3779, column: 7, scope: !6039)
!6039 = distinct !DILexicalBlock(scope: !6035, file: !3, line: 3779, column: 7)
!6040 = !DILocation(line: 3779, column: 13, scope: !6039)
!6041 = !DILocation(line: 3779, column: 23, scope: !6039)
!6042 = !DILocation(line: 3779, column: 7, scope: !6035)
!6043 = !DILocation(line: 3780, column: 4, scope: !6039)
!6044 = !DILocation(line: 3781, column: 2, scope: !6035)
!6045 = !DILocation(line: 3777, column: 47, scope: !6031)
!6046 = !DILocation(line: 3777, column: 2, scope: !6031)
!6047 = distinct !{!6047, !6033, !6048}
!6048 = !DILocation(line: 3781, column: 2, scope: !6028)
!6049 = !DILocation(line: 3782, column: 6, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !5823, file: !3, line: 3782, column: 6)
!6051 = !DILocation(line: 3782, column: 14, scope: !6050)
!6052 = !DILocation(line: 3782, column: 6, scope: !5823)
!6053 = !DILocation(line: 3783, column: 3, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6050, file: !3, line: 3782, column: 27)
!6055 = !DILocation(line: 3786, column: 3, scope: !6054)
!6056 = !DILocation(line: 3789, column: 6, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !5823, file: !3, line: 3789, column: 6)
!6058 = !DILocation(line: 3789, column: 16, scope: !6057)
!6059 = !DILocation(line: 3789, column: 45, scope: !6057)
!6060 = !DILocation(line: 3790, column: 4, scope: !6057)
!6061 = !DILocation(line: 3790, column: 14, scope: !6057)
!6062 = !DILocation(line: 3789, column: 6, scope: !5823)
!6063 = !DILocation(line: 3792, column: 24, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !6057, file: !3, line: 3790, column: 44)
!6065 = !DILocation(line: 3793, column: 30, scope: !6064)
!6066 = !DILocation(line: 3792, column: 12, scope: !6064)
!6067 = !DILocation(line: 3792, column: 10, scope: !6064)
!6068 = !DILocation(line: 3794, column: 7, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 3794, column: 7)
!6070 = !DILocation(line: 3794, column: 7, scope: !6064)
!6071 = !DILocation(line: 3795, column: 4, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !6069, file: !3, line: 3794, column: 15)
!6073 = !DILocation(line: 3796, column: 4, scope: !6072)
!6074 = !DILocation(line: 3798, column: 21, scope: !6064)
!6075 = !DILocation(line: 3798, column: 27, scope: !6064)
!6076 = !DILocation(line: 3798, column: 3, scope: !6064)
!6077 = !DILocation(line: 3798, column: 9, scope: !6064)
!6078 = !DILocation(line: 3798, column: 19, scope: !6064)
!6079 = !DILocation(line: 3799, column: 2, scope: !6064)
!6080 = !DILocalVariable(name: "firm_id", scope: !6081, file: !3, line: 3800, type: !5104)
!6081 = distinct !DILexicalBlock(scope: !6057, file: !3, line: 3799, column: 9)
!6082 = !DILocation(line: 3800, column: 27, scope: !6081)
!6083 = !DILocation(line: 3800, column: 37, scope: !6081)
!6084 = !DILocation(line: 3800, column: 43, scope: !6081)
!6085 = !DILocalVariable(name: "zfw_ctrl", scope: !6081, file: !3, line: 3801, type: !6086)
!6086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6087, size: 64)
!6087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ZFW_CTRL", file: !4240, line: 485, size: 82432, elements: !6088)
!6088 = !{!6089, !6090, !6092}
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "board_ctrl", scope: !6087, file: !4240, line: 486, baseType: !4272, size: 512)
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "ch_ctrl", scope: !6087, file: !4240, line: 487, baseType: !6091, size: 49152, offset: 512)
!6091 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4307, size: 49152, elements: !297)
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ctrl", scope: !6087, file: !4240, line: 488, baseType: !6093, size: 32768, offset: 49664)
!6093 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4332, size: 32768, elements: !297)
!6094 = !DILocation(line: 3801, column: 28, scope: !6081)
!6095 = !DILocation(line: 3803, column: 14, scope: !6081)
!6096 = !DILocation(line: 3803, column: 30, scope: !6081)
!6097 = !DILocation(line: 3803, column: 39, scope: !6081)
!6098 = !DILocation(line: 3803, column: 29, scope: !6081)
!6099 = !DILocation(line: 3803, column: 23, scope: !6081)
!6100 = !DILocation(line: 3803, column: 53, scope: !6081)
!6101 = !DILocation(line: 3803, column: 20, scope: !6081)
!6102 = !DILocation(line: 3803, column: 12, scope: !6081)
!6103 = !DILocation(line: 3805, column: 18, scope: !6081)
!6104 = !DILocation(line: 3805, column: 3, scope: !6081)
!6105 = !DILocation(line: 3805, column: 9, scope: !6081)
!6106 = !DILocation(line: 3805, column: 16, scope: !6081)
!6107 = !DILocation(line: 3806, column: 3, scope: !6081)
!6108 = !DILocation(line: 3806, column: 9, scope: !6081)
!6109 = !DILocation(line: 3806, column: 19, scope: !6081)
!6110 = !DILocation(line: 3807, column: 23, scope: !6081)
!6111 = !DILocation(line: 3807, column: 33, scope: !6081)
!6112 = !DILocation(line: 3807, column: 3, scope: !6081)
!6113 = !DILocation(line: 3807, column: 9, scope: !6081)
!6114 = !DILocation(line: 3807, column: 20, scope: !6081)
!6115 = !DILocation(line: 3822, column: 20, scope: !5823)
!6116 = !DILocation(line: 3822, column: 2, scope: !5823)
!6117 = !DILocation(line: 3822, column: 8, scope: !5823)
!6118 = !DILocation(line: 3822, column: 18, scope: !5823)
!6119 = !DILocation(line: 3823, column: 25, scope: !5823)
!6120 = !DILocation(line: 3823, column: 2, scope: !5823)
!6121 = !DILocation(line: 3823, column: 8, scope: !5823)
!6122 = !DILocation(line: 3823, column: 17, scope: !5823)
!6123 = !DILocation(line: 3823, column: 23, scope: !5823)
!6124 = !DILocation(line: 3824, column: 14, scope: !5823)
!6125 = !DILocation(line: 3824, column: 2, scope: !5823)
!6126 = !DILocation(line: 3824, column: 8, scope: !5823)
!6127 = !DILocation(line: 3824, column: 12, scope: !5823)
!6128 = !DILocation(line: 3825, column: 2, scope: !5823)
!6129 = !DILocation(line: 3825, column: 8, scope: !5823)
!6130 = !DILocation(line: 3825, column: 18, scope: !5823)
!6131 = !DILocation(line: 3826, column: 21, scope: !5823)
!6132 = !DILocation(line: 3826, column: 2, scope: !5823)
!6133 = !DILocation(line: 3826, column: 8, scope: !5823)
!6134 = !DILocation(line: 3826, column: 19, scope: !5823)
!6135 = !DILocation(line: 3827, column: 17, scope: !5823)
!6136 = !DILocation(line: 3827, column: 2, scope: !5823)
!6137 = !DILocation(line: 3827, column: 8, scope: !5823)
!6138 = !DILocation(line: 3827, column: 15, scope: !5823)
!6139 = !DILocation(line: 3828, column: 24, scope: !5823)
!6140 = !DILocation(line: 3828, column: 11, scope: !5823)
!6141 = !DILocation(line: 3828, column: 9, scope: !5823)
!6142 = !DILocation(line: 3829, column: 6, scope: !6143)
!6143 = distinct !DILexicalBlock(scope: !5823, file: !3, line: 3829, column: 6)
!6144 = !DILocation(line: 3829, column: 6, scope: !5823)
!6145 = !DILocation(line: 3830, column: 3, scope: !6143)
!6146 = !DILocation(line: 3832, column: 18, scope: !5823)
!6147 = !DILocation(line: 3832, column: 24, scope: !5823)
!6148 = !DILocation(line: 3832, column: 2, scope: !5823)
!6149 = !DILocation(line: 3834, column: 6, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !5823, file: !3, line: 3834, column: 6)
!6151 = !DILocation(line: 3834, column: 16, scope: !6150)
!6152 = !DILocation(line: 3834, column: 45, scope: !6150)
!6153 = !DILocation(line: 3835, column: 4, scope: !6150)
!6154 = !DILocation(line: 3835, column: 14, scope: !6150)
!6155 = !DILocation(line: 3834, column: 6, scope: !5823)
!6156 = !DILocation(line: 3837, column: 19, scope: !6157)
!6157 = distinct !DILexicalBlock(scope: !6150, file: !3, line: 3835, column: 44)
!6158 = !DILocation(line: 3837, column: 25, scope: !6157)
!6159 = !DILocation(line: 3837, column: 13, scope: !6157)
!6160 = !DILocation(line: 3837, column: 38, scope: !6157)
!6161 = !DILocation(line: 3837, column: 11, scope: !6157)
!6162 = !DILocation(line: 3838, column: 11, scope: !6157)
!6163 = !DILocation(line: 3838, column: 3, scope: !6157)
!6164 = !DILocation(line: 3840, column: 4, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6157, file: !3, line: 3838, column: 20)
!6166 = !DILocation(line: 3840, column: 4, scope: !6167)
!6167 = distinct !DILexicalBlock(scope: !6165, file: !3, line: 3840, column: 4)
!6168 = !{i32 -2141362249}
!6169 = !DILocation(line: 3841, column: 4, scope: !6165)
!6170 = !DILocalVariable(name: "ctl_addr", scope: !6171, file: !3, line: 3847, type: !4238)
!6171 = distinct !DILexicalBlock(scope: !6165, file: !3, line: 3846, column: 3)
!6172 = !DILocation(line: 3847, column: 33, scope: !6171)
!6173 = !DILocation(line: 3847, column: 44, scope: !6171)
!6174 = !DILocation(line: 3848, column: 13, scope: !6171)
!6175 = !DILocation(line: 3848, column: 19, scope: !6171)
!6176 = !DILocation(line: 3848, column: 24, scope: !6171)
!6177 = !DILocation(line: 3848, column: 4, scope: !6171)
!6178 = !DILocation(line: 3849, column: 4, scope: !6171)
!6179 = !DILocation(line: 3849, column: 4, scope: !6180)
!6180 = distinct !DILexicalBlock(scope: !6171, file: !3, line: 3849, column: 4)
!6181 = !{i32 -2141362077}
!6182 = !DILocation(line: 3851, column: 4, scope: !6171)
!6183 = !DILocation(line: 3854, column: 2, scope: !6157)
!6184 = !DILocation(line: 3856, column: 2, scope: !5823)
!6185 = !DILocation(line: 3858, column: 9, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !5823, file: !3, line: 3858, column: 2)
!6187 = !DILocation(line: 3858, column: 18, scope: !6186)
!6188 = !DILocation(line: 3858, column: 16, scope: !6186)
!6189 = !DILocation(line: 3858, column: 7, scope: !6186)
!6190 = !DILocation(line: 3858, column: 35, scope: !6191)
!6191 = distinct !DILexicalBlock(scope: !6186, file: !3, line: 3858, column: 2)
!6192 = !DILocation(line: 3858, column: 39, scope: !6191)
!6193 = !DILocation(line: 3858, column: 57, scope: !6191)
!6194 = !DILocation(line: 3858, column: 55, scope: !6191)
!6195 = !DILocation(line: 3858, column: 37, scope: !6191)
!6196 = !DILocation(line: 3858, column: 2, scope: !6186)
!6197 = !DILocation(line: 3859, column: 29, scope: !6191)
!6198 = !DILocation(line: 3859, column: 35, scope: !6191)
!6199 = !DILocation(line: 3859, column: 41, scope: !6191)
!6200 = !DILocation(line: 3859, column: 44, scope: !6191)
!6201 = !DILocation(line: 3860, column: 5, scope: !6191)
!6202 = !DILocation(line: 3860, column: 23, scope: !6191)
!6203 = !DILocation(line: 3860, column: 27, scope: !6191)
!6204 = !DILocation(line: 3860, column: 33, scope: !6191)
!6205 = !DILocation(line: 3859, column: 3, scope: !6191)
!6206 = !DILocation(line: 3858, column: 65, scope: !6191)
!6207 = !DILocation(line: 3858, column: 70, scope: !6191)
!6208 = !DILocation(line: 3858, column: 2, scope: !6191)
!6209 = distinct !{!6209, !6196, !6210}
!6210 = !DILocation(line: 3860, column: 36, scope: !6186)
!6211 = !DILocation(line: 3861, column: 21, scope: !5823)
!6212 = !DILocation(line: 3861, column: 18, scope: !5823)
!6213 = !DILocation(line: 3863, column: 2, scope: !5823)
!6214 = !DILabel(scope: !5823, name: "err_null", file: !3, line: 3864)
!6215 = !DILocation(line: 3864, column: 1, scope: !5823)
!6216 = !DILocation(line: 3865, column: 2, scope: !5823)
!6217 = !DILocation(line: 3865, column: 8, scope: !5823)
!6218 = !DILocation(line: 3865, column: 18, scope: !5823)
!6219 = !DILocation(line: 3866, column: 11, scope: !5823)
!6220 = !DILocation(line: 3866, column: 16, scope: !5823)
!6221 = !DILocation(line: 3866, column: 2, scope: !5823)
!6222 = !DILabel(scope: !5823, name: "err_unmap", file: !3, line: 3867)
!6223 = !DILocation(line: 3867, column: 1, scope: !5823)
!6224 = !DILocation(line: 3868, column: 10, scope: !5823)
!6225 = !DILocation(line: 3868, column: 2, scope: !5823)
!6226 = !DILocation(line: 3869, column: 6, scope: !6227)
!6227 = distinct !DILexicalBlock(scope: !5823, file: !3, line: 3869, column: 6)
!6228 = !DILocation(line: 3869, column: 6, scope: !5823)
!6229 = !DILocation(line: 3870, column: 11, scope: !6227)
!6230 = !DILocation(line: 3870, column: 3, scope: !6227)
!6231 = !DILabel(scope: !5823, name: "err_reg", file: !3, line: 3871)
!6232 = !DILocation(line: 3871, column: 1, scope: !5823)
!6233 = !DILocation(line: 3872, column: 22, scope: !5823)
!6234 = !DILocation(line: 3872, column: 2, scope: !5823)
!6235 = !DILabel(scope: !5823, name: "err_dis", file: !3, line: 3873)
!6236 = !DILocation(line: 3873, column: 1, scope: !5823)
!6237 = !DILocation(line: 3874, column: 21, scope: !5823)
!6238 = !DILocation(line: 3874, column: 2, scope: !5823)
!6239 = !DILabel(scope: !5823, name: "err", file: !3, line: 3875)
!6240 = !DILocation(line: 3875, column: 1, scope: !5823)
!6241 = !DILocation(line: 3876, column: 9, scope: !5823)
!6242 = !DILocation(line: 3876, column: 2, scope: !5823)
!6243 = !DILocation(line: 3877, column: 1, scope: !5823)
!6244 = distinct !DISubprogram(name: "cy_pci_remove", scope: !3, file: !3, line: 3879, type: !4737, scopeLine: 3880, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!6245 = !DILocalVariable(name: "pdev", arg: 1, scope: !6244, file: !3, line: 3879, type: !4523)
!6246 = !DILocation(line: 3879, column: 43, scope: !6244)
!6247 = !DILocalVariable(name: "cinfo", scope: !6244, file: !3, line: 3881, type: !4229)
!6248 = !DILocation(line: 3881, column: 24, scope: !6244)
!6249 = !DILocation(line: 3881, column: 48, scope: !6244)
!6250 = !DILocation(line: 3881, column: 32, scope: !6244)
!6251 = !DILocalVariable(name: "i", scope: !6244, file: !3, line: 3882, type: !7)
!6252 = !DILocation(line: 3882, column: 15, scope: !6244)
!6253 = !DILocalVariable(name: "channel", scope: !6244, file: !3, line: 3882, type: !7)
!6254 = !DILocation(line: 3882, column: 18, scope: !6244)
!6255 = !DILocation(line: 3885, column: 15, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 3885, column: 6)
!6257 = !DILocation(line: 3885, column: 7, scope: !6256)
!6258 = !DILocation(line: 3885, column: 22, scope: !6256)
!6259 = !DILocation(line: 3885, column: 32, scope: !6256)
!6260 = !DILocation(line: 3885, column: 39, scope: !6256)
!6261 = !DILocation(line: 3885, column: 49, scope: !6256)
!6262 = !DILocation(line: 3885, column: 26, scope: !6256)
!6263 = !DILocation(line: 3885, column: 62, scope: !6256)
!6264 = !DILocation(line: 3885, column: 70, scope: !6256)
!6265 = !DILocation(line: 3885, column: 6, scope: !6244)
!6266 = !DILocation(line: 3887, column: 3, scope: !6256)
!6267 = !DILocation(line: 3887, column: 3, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !6256, file: !3, line: 3887, column: 3)
!6269 = !{i32 -2141361681}
!6270 = !DILocation(line: 3890, column: 16, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6256, file: !3, line: 3890, column: 7)
!6272 = !DILocation(line: 3890, column: 8, scope: !6271)
!6273 = !DILocation(line: 3890, column: 7, scope: !6256)
!6274 = !DILocation(line: 3892, column: 3, scope: !6271)
!6275 = !DILocation(line: 3892, column: 3, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6271, file: !3, line: 3892, column: 3)
!6277 = !{i32 -2141361489}
!6278 = !DILocation(line: 3896, column: 10, scope: !6244)
!6279 = !DILocation(line: 3896, column: 17, scope: !6244)
!6280 = !DILocation(line: 3896, column: 2, scope: !6244)
!6281 = !DILocation(line: 3897, column: 6, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 3897, column: 6)
!6283 = !DILocation(line: 3897, column: 13, scope: !6282)
!6284 = !DILocation(line: 3897, column: 22, scope: !6282)
!6285 = !DILocation(line: 3897, column: 6, scope: !6244)
!6286 = !DILocation(line: 3898, column: 11, scope: !6282)
!6287 = !DILocation(line: 3898, column: 18, scope: !6282)
!6288 = !DILocation(line: 3898, column: 27, scope: !6282)
!6289 = !DILocation(line: 3898, column: 3, scope: !6282)
!6290 = !DILocation(line: 3899, column: 6, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 3899, column: 6)
!6292 = !DILocation(line: 3899, column: 13, scope: !6291)
!6293 = !DILocation(line: 3901, column: 3, scope: !6291)
!6294 = !DILocation(line: 3901, column: 15, scope: !6291)
!6295 = !DILocation(line: 3901, column: 7, scope: !6291)
!6296 = !DILocation(line: 3899, column: 6, scope: !6244)
!6297 = !DILocation(line: 3904, column: 12, scope: !6291)
!6298 = !DILocation(line: 3904, column: 19, scope: !6291)
!6299 = !DILocation(line: 3904, column: 24, scope: !6291)
!6300 = !DILocation(line: 3904, column: 3, scope: !6291)
!6301 = !DILocation(line: 3905, column: 22, scope: !6244)
!6302 = !DILocation(line: 3905, column: 2, scope: !6244)
!6303 = !DILocation(line: 3907, column: 2, scope: !6244)
!6304 = !DILocation(line: 3907, column: 9, scope: !6244)
!6305 = !DILocation(line: 3907, column: 19, scope: !6244)
!6306 = !DILocation(line: 3908, column: 15, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 3908, column: 2)
!6308 = !DILocation(line: 3908, column: 24, scope: !6307)
!6309 = !DILocation(line: 3908, column: 31, scope: !6307)
!6310 = !DILocation(line: 3908, column: 22, scope: !6307)
!6311 = !DILocation(line: 3908, column: 7, scope: !6307)
!6312 = !DILocation(line: 3908, column: 43, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6307, file: !3, line: 3908, column: 2)
!6314 = !DILocation(line: 3908, column: 47, scope: !6313)
!6315 = !DILocation(line: 3908, column: 54, scope: !6313)
!6316 = !DILocation(line: 3909, column: 4, scope: !6313)
!6317 = !DILocation(line: 3909, column: 11, scope: !6313)
!6318 = !DILocation(line: 3908, column: 65, scope: !6313)
!6319 = !DILocation(line: 3908, column: 45, scope: !6313)
!6320 = !DILocation(line: 3908, column: 2, scope: !6307)
!6321 = !DILocation(line: 3910, column: 25, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6313, file: !3, line: 3909, column: 35)
!6323 = !DILocation(line: 3910, column: 43, scope: !6322)
!6324 = !DILocation(line: 3910, column: 3, scope: !6322)
!6325 = !DILocation(line: 3911, column: 21, scope: !6322)
!6326 = !DILocation(line: 3911, column: 28, scope: !6322)
!6327 = !DILocation(line: 3911, column: 34, scope: !6322)
!6328 = !DILocation(line: 3911, column: 43, scope: !6322)
!6329 = !DILocation(line: 3911, column: 3, scope: !6322)
!6330 = !DILocation(line: 3912, column: 2, scope: !6322)
!6331 = !DILocation(line: 3909, column: 20, scope: !6313)
!6332 = !DILocation(line: 3909, column: 31, scope: !6313)
!6333 = !DILocation(line: 3908, column: 2, scope: !6313)
!6334 = distinct !{!6334, !6320, !6335}
!6335 = !DILocation(line: 3912, column: 2, scope: !6307)
!6336 = !DILocation(line: 3913, column: 2, scope: !6244)
!6337 = !DILocation(line: 3913, column: 9, scope: !6244)
!6338 = !DILocation(line: 3913, column: 16, scope: !6244)
!6339 = !DILocation(line: 3914, column: 8, scope: !6244)
!6340 = !DILocation(line: 3914, column: 15, scope: !6244)
!6341 = !DILocation(line: 3914, column: 2, scope: !6244)
!6342 = !DILocation(line: 3915, column: 1, scope: !6244)
!6343 = distinct !DISubprogram(name: "cyy_init_card", scope: !3, file: !3, line: 3144, type: !6344, scopeLine: 3146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!6344 = !DISubroutineType(types: !6345)
!6345 = !{!131, !118, !139}
!6346 = !DILocalVariable(name: "true_base_addr", arg: 1, scope: !6343, file: !3, line: 3144, type: !118)
!6347 = !DILocation(line: 3144, column: 51, scope: !6343)
!6348 = !DILocalVariable(name: "index", arg: 2, scope: !6343, file: !3, line: 3145, type: !139)
!6349 = !DILocation(line: 3145, column: 7, scope: !6343)
!6350 = !DILocalVariable(name: "chip_number", scope: !6343, file: !3, line: 3147, type: !7)
!6351 = !DILocation(line: 3147, column: 15, scope: !6343)
!6352 = !DILocalVariable(name: "base_addr", scope: !6343, file: !3, line: 3148, type: !118)
!6353 = !DILocation(line: 3148, column: 16, scope: !6343)
!6354 = !DILocation(line: 3150, column: 2, scope: !6343)
!6355 = !DILocation(line: 3150, column: 2, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6343, file: !3, line: 3150, column: 2)
!6357 = !{i32 -2141376111}
!6358 = !DILocation(line: 3152, column: 2, scope: !6343)
!6359 = !DILocation(line: 3152, column: 2, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6343, file: !3, line: 3152, column: 2)
!6361 = !{i32 -2141375979}
!6362 = !DILocation(line: 3154, column: 2, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6364, file: !3, line: 3154, column: 2)
!6364 = distinct !DILexicalBlock(scope: !6365, file: !3, line: 3154, column: 2)
!6365 = distinct !DILexicalBlock(scope: !6366, file: !3, line: 3154, column: 2)
!6366 = distinct !DILexicalBlock(scope: !6343, file: !3, line: 3154, column: 2)
!6367 = !DILocation(line: 3156, column: 19, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6343, file: !3, line: 3156, column: 2)
!6369 = !DILocation(line: 3156, column: 7, scope: !6368)
!6370 = !DILocation(line: 3156, column: 24, scope: !6371)
!6371 = distinct !DILexicalBlock(scope: !6368, file: !3, line: 3156, column: 2)
!6372 = !DILocation(line: 3156, column: 36, scope: !6371)
!6373 = !DILocation(line: 3156, column: 2, scope: !6368)
!6374 = !DILocation(line: 3159, column: 7, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6371, file: !3, line: 3157, column: 23)
!6376 = !DILocation(line: 3159, column: 40, scope: !6375)
!6377 = !DILocation(line: 3159, column: 25, scope: !6375)
!6378 = !DILocation(line: 3159, column: 56, scope: !6375)
!6379 = !DILocation(line: 3159, column: 53, scope: !6375)
!6380 = !DILocation(line: 3159, column: 22, scope: !6375)
!6381 = !DILocation(line: 3158, column: 13, scope: !6375)
!6382 = !DILocation(line: 3160, column: 3, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6384, file: !3, line: 3160, column: 3)
!6384 = distinct !DILexicalBlock(scope: !6385, file: !3, line: 3160, column: 3)
!6385 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 3160, column: 3)
!6386 = distinct !DILexicalBlock(scope: !6375, file: !3, line: 3160, column: 3)
!6387 = !DILocation(line: 3161, column: 13, scope: !6388)
!6388 = distinct !DILexicalBlock(scope: !6375, file: !3, line: 3161, column: 7)
!6389 = !DILocation(line: 3161, column: 35, scope: !6388)
!6390 = !DILocation(line: 3161, column: 32, scope: !6388)
!6391 = !DILocation(line: 3161, column: 23, scope: !6388)
!6392 = !DILocation(line: 3161, column: 7, scope: !6388)
!6393 = !DILocation(line: 3161, column: 43, scope: !6388)
!6394 = !DILocation(line: 3161, column: 7, scope: !6375)
!6395 = !DILocation(line: 3166, column: 11, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 3161, column: 52)
!6397 = !DILocation(line: 3166, column: 4, scope: !6396)
!6398 = !DILocation(line: 3169, column: 3, scope: !6375)
!6399 = !DILocation(line: 3169, column: 3, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !6375, file: !3, line: 3169, column: 3)
!6401 = !{i32 -2141374958}
!6402 = !DILocation(line: 3170, column: 3, scope: !6403)
!6403 = distinct !DILexicalBlock(scope: !6404, file: !3, line: 3170, column: 3)
!6404 = distinct !DILexicalBlock(scope: !6405, file: !3, line: 3170, column: 3)
!6405 = distinct !DILexicalBlock(scope: !6406, file: !3, line: 3170, column: 3)
!6406 = distinct !DILexicalBlock(scope: !6375, file: !3, line: 3170, column: 3)
!6407 = !DILocation(line: 3178, column: 7, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6375, file: !3, line: 3178, column: 7)
!6409 = !DILocation(line: 3178, column: 19, scope: !6408)
!6410 = !DILocation(line: 3178, column: 24, scope: !6408)
!6411 = !DILocation(line: 3178, column: 33, scope: !6408)
!6412 = !DILocation(line: 3179, column: 6, scope: !6408)
!6413 = !DILocation(line: 3179, column: 27, scope: !6408)
!6414 = !DILocation(line: 3179, column: 24, scope: !6408)
!6415 = !DILocation(line: 3178, column: 48, scope: !6408)
!6416 = !DILocation(line: 3180, column: 17, scope: !6408)
!6417 = !DILocation(line: 3180, column: 14, scope: !6408)
!6418 = !DILocation(line: 3179, column: 34, scope: !6408)
!6419 = !DILocation(line: 3178, column: 27, scope: !6408)
!6420 = !DILocation(line: 3180, column: 25, scope: !6408)
!6421 = !DILocation(line: 3178, column: 7, scope: !6375)
!6422 = !DILocation(line: 3181, column: 11, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6408, file: !3, line: 3180, column: 31)
!6424 = !DILocation(line: 3181, column: 4, scope: !6423)
!6425 = !DILocation(line: 3184, column: 3, scope: !6375)
!6426 = !DILocation(line: 3184, column: 3, scope: !6427)
!6427 = distinct !DILexicalBlock(scope: !6375, file: !3, line: 3184, column: 3)
!6428 = !{i32 -2141374569}
!6429 = !DILocation(line: 3185, column: 3, scope: !6430)
!6430 = distinct !DILexicalBlock(scope: !6431, file: !3, line: 3185, column: 3)
!6431 = distinct !DILexicalBlock(scope: !6432, file: !3, line: 3185, column: 3)
!6432 = distinct !DILexicalBlock(scope: !6433, file: !3, line: 3185, column: 3)
!6433 = distinct !DILexicalBlock(scope: !6375, file: !3, line: 3185, column: 3)
!6434 = !DILocation(line: 3187, column: 13, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !6375, file: !3, line: 3187, column: 7)
!6436 = !DILocation(line: 3187, column: 37, scope: !6435)
!6437 = !DILocation(line: 3187, column: 34, scope: !6435)
!6438 = !DILocation(line: 3187, column: 23, scope: !6435)
!6439 = !DILocation(line: 3187, column: 7, scope: !6435)
!6440 = !DILocation(line: 3187, column: 45, scope: !6435)
!6441 = !DILocation(line: 3187, column: 7, scope: !6375)
!6442 = !DILocation(line: 3193, column: 11, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !6435, file: !3, line: 3187, column: 54)
!6444 = !DILocation(line: 3193, column: 4, scope: !6443)
!6445 = !DILocation(line: 3195, column: 22, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6375, file: !3, line: 3195, column: 7)
!6447 = !DILocation(line: 3195, column: 46, scope: !6446)
!6448 = !DILocation(line: 3195, column: 43, scope: !6446)
!6449 = !DILocation(line: 3195, column: 32, scope: !6446)
!6450 = !DILocation(line: 3195, column: 16, scope: !6446)
!6451 = !DILocation(line: 3195, column: 15, scope: !6446)
!6452 = !DILocation(line: 3195, column: 13, scope: !6446)
!6453 = !DILocation(line: 3195, column: 56, scope: !6446)
!6454 = !DILocation(line: 3195, column: 7, scope: !6375)
!6455 = !DILocation(line: 3203, column: 11, scope: !6456)
!6456 = distinct !DILexicalBlock(scope: !6446, file: !3, line: 3196, column: 11)
!6457 = !DILocation(line: 3203, column: 4, scope: !6456)
!6458 = !DILocation(line: 3205, column: 3, scope: !6375)
!6459 = !DILocation(line: 3205, column: 3, scope: !6460)
!6460 = distinct !DILexicalBlock(scope: !6375, file: !3, line: 3205, column: 3)
!6461 = !{i32 -2141373758}
!6462 = !DILocation(line: 3206, column: 13, scope: !6463)
!6463 = distinct !DILexicalBlock(scope: !6375, file: !3, line: 3206, column: 7)
!6464 = !DILocation(line: 3206, column: 37, scope: !6463)
!6465 = !DILocation(line: 3206, column: 34, scope: !6463)
!6466 = !DILocation(line: 3206, column: 23, scope: !6463)
!6467 = !DILocation(line: 3206, column: 7, scope: !6463)
!6468 = !DILocation(line: 3206, column: 45, scope: !6463)
!6469 = !DILocation(line: 3206, column: 7, scope: !6375)
!6470 = !DILocation(line: 3210, column: 4, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6463, file: !3, line: 3206, column: 62)
!6472 = !DILocation(line: 3210, column: 4, scope: !6473)
!6473 = distinct !DILexicalBlock(scope: !6471, file: !3, line: 3210, column: 4)
!6474 = !{i32 -2141373595}
!6475 = !DILocation(line: 3211, column: 3, scope: !6471)
!6476 = !DILocation(line: 3213, column: 4, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6463, file: !3, line: 3211, column: 10)
!6478 = !DILocation(line: 3213, column: 4, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6477, file: !3, line: 3213, column: 4)
!6480 = !{i32 -2141373452}
!6481 = !DILocation(line: 3221, column: 2, scope: !6375)
!6482 = !DILocation(line: 3157, column: 19, scope: !6371)
!6483 = !DILocation(line: 3156, column: 2, scope: !6371)
!6484 = distinct !{!6484, !6373, !6485}
!6485 = !DILocation(line: 3221, column: 2, scope: !6368)
!6486 = !DILocation(line: 3222, column: 9, scope: !6343)
!6487 = !DILocation(line: 3222, column: 2, scope: !6343)
!6488 = !DILocation(line: 3223, column: 1, scope: !6343)
!6489 = distinct !DISubprogram(name: "writew", scope: !4920, file: !4920, line: 66, type: !6490, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!6490 = !DISubroutineType(types: !6491)
!6491 = !{null, !131, !4923}
!6492 = !DILocalVariable(name: "val", arg: 1, scope: !6489, file: !4920, line: 66, type: !131)
!6493 = !DILocation(line: 66, column: 1, scope: !6489)
!6494 = !DILocalVariable(name: "addr", arg: 2, scope: !6489, file: !4920, line: 66, type: !4923)
!6495 = !{i32 -2141901903}
!6496 = distinct !DISubprogram(name: "readw", scope: !4920, file: !4920, line: 58, type: !6497, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!6497 = !DISubroutineType(types: !6498)
!6498 = !{!131, !5563}
!6499 = !DILocalVariable(name: "addr", arg: 1, scope: !6496, file: !4920, line: 58, type: !5563)
!6500 = !DILocation(line: 58, column: 1, scope: !6496)
!6501 = !DILocalVariable(name: "ret", scope: !6496, file: !4920, line: 58, type: !131)
!6502 = !{i32 -2141904327}
!6503 = distinct !DISubprogram(name: "plx_init", scope: !3, file: !3, line: 3377, type: !6504, scopeLine: 3379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!6504 = !DISubroutineType(types: !6505)
!6505 = !{null, !4523, !139, !4238}
!6506 = !DILocalVariable(name: "pdev", arg: 1, scope: !6503, file: !3, line: 3377, type: !4523)
!6507 = !DILocation(line: 3377, column: 38, scope: !6503)
!6508 = !DILocalVariable(name: "irq", arg: 2, scope: !6503, file: !3, line: 3377, type: !139)
!6509 = !DILocation(line: 3377, column: 48, scope: !6503)
!6510 = !DILocalVariable(name: "addr", arg: 3, scope: !6503, file: !3, line: 3378, type: !4238)
!6511 = !DILocation(line: 3378, column: 32, scope: !6503)
!6512 = !DILocation(line: 3381, column: 2, scope: !6503)
!6513 = !DILocation(line: 3381, column: 2, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6503, file: !3, line: 3381, column: 2)
!6515 = !{i32 -2141372497}
!6516 = !DILocation(line: 3382, column: 2, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6518, file: !3, line: 3382, column: 2)
!6518 = distinct !DILexicalBlock(scope: !6519, file: !3, line: 3382, column: 2)
!6519 = distinct !DILexicalBlock(scope: !6520, file: !3, line: 3382, column: 2)
!6520 = distinct !DILexicalBlock(scope: !6503, file: !3, line: 3382, column: 2)
!6521 = !DILocation(line: 3383, column: 2, scope: !6503)
!6522 = !DILocation(line: 3383, column: 2, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6503, file: !3, line: 3383, column: 2)
!6524 = !{i32 -2141372113}
!6525 = !DILocation(line: 3386, column: 2, scope: !6503)
!6526 = !DILocation(line: 3386, column: 2, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !6503, file: !3, line: 3386, column: 2)
!6528 = !{i32 -2141371965}
!6529 = !DILocation(line: 3387, column: 2, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6531, file: !3, line: 3387, column: 2)
!6531 = distinct !DILexicalBlock(scope: !6532, file: !3, line: 3387, column: 2)
!6532 = distinct !DILexicalBlock(scope: !6533, file: !3, line: 3387, column: 2)
!6533 = distinct !DILexicalBlock(scope: !6503, file: !3, line: 3387, column: 2)
!6534 = !DILocation(line: 3388, column: 2, scope: !6503)
!6535 = !DILocation(line: 3388, column: 2, scope: !6536)
!6536 = distinct !DILexicalBlock(scope: !6503, file: !3, line: 3388, column: 2)
!6537 = !{i32 -2141371581}
!6538 = !DILocation(line: 3394, column: 24, scope: !6503)
!6539 = !DILocation(line: 3394, column: 50, scope: !6503)
!6540 = !DILocation(line: 3394, column: 2, scope: !6503)
!6541 = !DILocation(line: 3395, column: 1, scope: !6503)
!6542 = distinct !DISubprogram(name: "cyz_load_fw", scope: !3, file: !3, line: 3474, type: !6543, scopeLine: 3476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!6543 = !DISubroutineType(types: !6544)
!6544 = !{!139, !4523, !118, !4238, !139}
!6545 = !DILocalVariable(name: "pdev", arg: 1, scope: !6542, file: !3, line: 3474, type: !4523)
!6546 = !DILocation(line: 3474, column: 40, scope: !6542)
!6547 = !DILocalVariable(name: "base_addr", arg: 2, scope: !6542, file: !3, line: 3474, type: !118)
!6548 = !DILocation(line: 3474, column: 60, scope: !6542)
!6549 = !DILocalVariable(name: "ctl_addr", arg: 3, scope: !6542, file: !3, line: 3475, type: !4238)
!6550 = !DILocation(line: 3475, column: 32, scope: !6542)
!6551 = !DILocalVariable(name: "irq", arg: 4, scope: !6542, file: !3, line: 3475, type: !139)
!6552 = !DILocation(line: 3475, column: 46, scope: !6542)
!6553 = !DILocalVariable(name: "fw", scope: !6542, file: !3, line: 3477, type: !6554)
!6554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6555, size: 64)
!6555 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6556)
!6556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "firmware", file: !6557, line: 12, size: 192, elements: !6558)
!6557 = !DIFile(filename: "./include/linux/firmware.h", directory: "/home/lizy2001/genbc/linux")
!6558 = !{!6559, !6560, !6563}
!6559 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6556, file: !6557, line: 13, baseType: !338, size: 64)
!6560 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6556, file: !6557, line: 14, baseType: !6561, size: 64, offset: 64)
!6561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6562, size: 64)
!6562 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1375)
!6563 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !6556, file: !6557, line: 17, baseType: !118, size: 64, offset: 128)
!6564 = !DILocation(line: 3477, column: 25, scope: !6542)
!6565 = !DILocalVariable(name: "fid", scope: !6542, file: !3, line: 3478, type: !5104)
!6566 = !DILocation(line: 3478, column: 26, scope: !6542)
!6567 = !DILocation(line: 3478, column: 32, scope: !6542)
!6568 = !DILocation(line: 3478, column: 42, scope: !6542)
!6569 = !DILocalVariable(name: "cust", scope: !6542, file: !3, line: 3479, type: !6570)
!6570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6571, size: 64)
!6571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CUSTOM_REG", file: !4240, line: 161, size: 576, elements: !6572)
!6572 = !{!6573, !6574, !6575, !6576, !6577, !6578, !6579, !6580, !6581, !6582, !6583, !6584, !6585, !6586, !6587, !6588, !6589, !6590}
!6573 = !DIDerivedType(tag: DW_TAG_member, name: "fpga_id", scope: !6571, file: !4240, line: 162, baseType: !120, size: 32)
!6574 = !DIDerivedType(tag: DW_TAG_member, name: "fpga_version", scope: !6571, file: !4240, line: 163, baseType: !120, size: 32, offset: 32)
!6575 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_start", scope: !6571, file: !4240, line: 164, baseType: !120, size: 32, offset: 64)
!6576 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_stop", scope: !6571, file: !4240, line: 165, baseType: !120, size: 32, offset: 96)
!6577 = !DIDerivedType(tag: DW_TAG_member, name: "misc_reg", scope: !6571, file: !4240, line: 166, baseType: !120, size: 32, offset: 128)
!6578 = !DIDerivedType(tag: DW_TAG_member, name: "idt_mode", scope: !6571, file: !4240, line: 167, baseType: !120, size: 32, offset: 160)
!6579 = !DIDerivedType(tag: DW_TAG_member, name: "uart_irq_status", scope: !6571, file: !4240, line: 168, baseType: !120, size: 32, offset: 192)
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "clear_timer0_irq", scope: !6571, file: !4240, line: 169, baseType: !120, size: 32, offset: 224)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "clear_timer1_irq", scope: !6571, file: !4240, line: 170, baseType: !120, size: 32, offset: 256)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "clear_timer2_irq", scope: !6571, file: !4240, line: 171, baseType: !120, size: 32, offset: 288)
!6583 = !DIDerivedType(tag: DW_TAG_member, name: "test_register", scope: !6571, file: !4240, line: 172, baseType: !120, size: 32, offset: 320)
!6584 = !DIDerivedType(tag: DW_TAG_member, name: "test_count", scope: !6571, file: !4240, line: 173, baseType: !120, size: 32, offset: 352)
!6585 = !DIDerivedType(tag: DW_TAG_member, name: "timer_select", scope: !6571, file: !4240, line: 174, baseType: !120, size: 32, offset: 384)
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "pr_uart_irq_status", scope: !6571, file: !4240, line: 175, baseType: !120, size: 32, offset: 416)
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "ram_wait_state", scope: !6571, file: !4240, line: 176, baseType: !120, size: 32, offset: 448)
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "uart_wait_state", scope: !6571, file: !4240, line: 177, baseType: !120, size: 32, offset: 480)
!6589 = !DIDerivedType(tag: DW_TAG_member, name: "timer_wait_state", scope: !6571, file: !4240, line: 178, baseType: !120, size: 32, offset: 512)
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "ack_wait_state", scope: !6571, file: !4240, line: 179, baseType: !120, size: 32, offset: 544)
!6591 = !DILocation(line: 3479, column: 29, scope: !6542)
!6592 = !DILocation(line: 3479, column: 36, scope: !6542)
!6593 = !DILocalVariable(name: "pt_zfwctrl", scope: !6542, file: !3, line: 3480, type: !6086)
!6594 = !DILocation(line: 3480, column: 27, scope: !6542)
!6595 = !DILocalVariable(name: "tmp", scope: !6542, file: !3, line: 3481, type: !118)
!6596 = !DILocation(line: 3481, column: 16, scope: !6542)
!6597 = !DILocalVariable(name: "mailbox", scope: !6542, file: !3, line: 3482, type: !426)
!6598 = !DILocation(line: 3482, column: 6, scope: !6542)
!6599 = !DILocalVariable(name: "status", scope: !6542, file: !3, line: 3482, type: !426)
!6600 = !DILocation(line: 3482, column: 15, scope: !6542)
!6601 = !DILocalVariable(name: "nchan", scope: !6542, file: !3, line: 3482, type: !426)
!6602 = !DILocation(line: 3482, column: 23, scope: !6542)
!6603 = !DILocalVariable(name: "i", scope: !6542, file: !3, line: 3483, type: !7)
!6604 = !DILocation(line: 3483, column: 15, scope: !6542)
!6605 = !DILocalVariable(name: "retval", scope: !6542, file: !3, line: 3484, type: !139)
!6606 = !DILocation(line: 3484, column: 6, scope: !6542)
!6607 = !DILocation(line: 3486, column: 49, scope: !6542)
!6608 = !DILocation(line: 3486, column: 55, scope: !6542)
!6609 = !DILocation(line: 3486, column: 11, scope: !6542)
!6610 = !DILocation(line: 3486, column: 9, scope: !6542)
!6611 = !DILocation(line: 3487, column: 6, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 3487, column: 6)
!6613 = !DILocation(line: 3487, column: 6, scope: !6542)
!6614 = !DILocation(line: 3488, column: 3, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6612, file: !3, line: 3487, column: 14)
!6616 = !DILocation(line: 3489, column: 3, scope: !6615)
!6617 = !DILocation(line: 3494, column: 24, scope: !6618)
!6618 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 3494, column: 6)
!6619 = !DILocation(line: 3494, column: 6, scope: !6618)
!6620 = !DILocation(line: 3494, column: 34, scope: !6618)
!6621 = !DILocation(line: 3494, column: 44, scope: !6618)
!6622 = !DILocation(line: 3494, column: 49, scope: !6618)
!6623 = !DILocation(line: 3494, column: 43, scope: !6618)
!6624 = !DILocation(line: 3494, column: 37, scope: !6618)
!6625 = !DILocation(line: 3494, column: 60, scope: !6618)
!6626 = !DILocation(line: 3494, column: 6, scope: !6542)
!6627 = !DILocalVariable(name: "cntval", scope: !6628, file: !3, line: 3495, type: !426)
!6628 = distinct !DILexicalBlock(scope: !6618, file: !3, line: 3494, column: 73)
!6629 = !DILocation(line: 3495, column: 7, scope: !6628)
!6630 = !DILocation(line: 3495, column: 22, scope: !6628)
!6631 = !DILocation(line: 3495, column: 32, scope: !6628)
!6632 = !DILocation(line: 3495, column: 16, scope: !6628)
!6633 = !DILocation(line: 3497, column: 3, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !6635, file: !3, line: 3497, column: 3)
!6635 = distinct !DILexicalBlock(scope: !6636, file: !3, line: 3497, column: 3)
!6636 = distinct !DILexicalBlock(scope: !6637, file: !3, line: 3497, column: 3)
!6637 = distinct !DILexicalBlock(scope: !6628, file: !3, line: 3497, column: 3)
!6638 = !DILocation(line: 3498, column: 7, scope: !6639)
!6639 = distinct !DILexicalBlock(scope: !6628, file: !3, line: 3498, column: 7)
!6640 = !DILocation(line: 3498, column: 23, scope: !6639)
!6641 = !DILocation(line: 3498, column: 33, scope: !6639)
!6642 = !DILocation(line: 3498, column: 17, scope: !6639)
!6643 = !DILocation(line: 3498, column: 14, scope: !6639)
!6644 = !DILocation(line: 3498, column: 7, scope: !6628)
!6645 = !DILocation(line: 3502, column: 11, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6639, file: !3, line: 3498, column: 43)
!6647 = !DILocation(line: 3503, column: 4, scope: !6646)
!6648 = !DILocation(line: 3505, column: 2, scope: !6628)
!6649 = !DILocation(line: 3508, column: 2, scope: !6542)
!6650 = !DILocation(line: 3508, column: 2, scope: !6651)
!6651 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 3508, column: 2)
!6652 = !{i32 -2141370400}
!6653 = !DILocation(line: 3511, column: 19, scope: !6542)
!6654 = !DILocation(line: 3511, column: 29, scope: !6542)
!6655 = !DILocation(line: 3511, column: 18, scope: !6542)
!6656 = !DILocation(line: 3511, column: 12, scope: !6542)
!6657 = !DILocation(line: 3511, column: 10, scope: !6542)
!6658 = !DILocation(line: 3513, column: 6, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 3513, column: 6)
!6660 = !DILocation(line: 3513, column: 14, scope: !6659)
!6661 = !DILocation(line: 3513, column: 19, scope: !6659)
!6662 = !DILocation(line: 3513, column: 40, scope: !6659)
!6663 = !DILocation(line: 3513, column: 22, scope: !6659)
!6664 = !DILocation(line: 3513, column: 6, scope: !6542)
!6665 = !DILocation(line: 3515, column: 3, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6659, file: !3, line: 3513, column: 51)
!6667 = !DILocation(line: 3515, column: 3, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6666, file: !3, line: 3515, column: 3)
!6669 = !{i32 -2141370258}
!6670 = !DILocation(line: 3516, column: 3, scope: !6666)
!6671 = !DILocation(line: 3516, column: 3, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6666, file: !3, line: 3516, column: 3)
!6673 = !{i32 -2141370153}
!6674 = !DILocation(line: 3517, column: 3, scope: !6666)
!6675 = !DILocation(line: 3517, column: 3, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6666, file: !3, line: 3517, column: 3)
!6677 = !{i32 -2141370017}
!6678 = !DILocation(line: 3518, column: 3, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6680, file: !3, line: 3518, column: 3)
!6680 = distinct !DILexicalBlock(scope: !6681, file: !3, line: 3518, column: 3)
!6681 = distinct !DILexicalBlock(scope: !6682, file: !3, line: 3518, column: 3)
!6682 = distinct !DILexicalBlock(scope: !6666, file: !3, line: 3518, column: 3)
!6683 = !DILocation(line: 3519, column: 2, scope: !6666)
!6684 = !DILocation(line: 3521, column: 11, scope: !6542)
!6685 = !DILocation(line: 3521, column: 17, scope: !6542)
!6686 = !DILocation(line: 3521, column: 22, scope: !6542)
!6687 = !DILocation(line: 3521, column: 2, scope: !6542)
!6688 = !DILocation(line: 3523, column: 6, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 3523, column: 6)
!6690 = !DILocation(line: 3523, column: 14, scope: !6689)
!6691 = !DILocation(line: 3523, column: 6, scope: !6542)
!6692 = !DILocation(line: 3525, column: 26, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6689, file: !3, line: 3523, column: 20)
!6694 = !DILocation(line: 3525, column: 42, scope: !6693)
!6695 = !DILocation(line: 3526, column: 5, scope: !6693)
!6696 = !DILocation(line: 3525, column: 12, scope: !6693)
!6697 = !DILocation(line: 3525, column: 10, scope: !6693)
!6698 = !DILocation(line: 3527, column: 7, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !6693, file: !3, line: 3527, column: 7)
!6700 = !DILocation(line: 3527, column: 7, scope: !6693)
!6701 = !DILocation(line: 3528, column: 4, scope: !6699)
!6702 = !DILocation(line: 3529, column: 26, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6693, file: !3, line: 3529, column: 7)
!6704 = !DILocation(line: 3529, column: 8, scope: !6703)
!6705 = !DILocation(line: 3529, column: 7, scope: !6693)
!6706 = !DILocation(line: 3530, column: 4, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6703, file: !3, line: 3529, column: 37)
!6708 = !DILocation(line: 3532, column: 4, scope: !6707)
!6709 = !DILocation(line: 3534, column: 2, scope: !6693)
!6710 = !DILocation(line: 3537, column: 2, scope: !6542)
!6711 = !DILocation(line: 3537, column: 2, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 3537, column: 2)
!6713 = !{i32 -2141369470}
!6714 = !DILocation(line: 3538, column: 2, scope: !6542)
!6715 = !DILocation(line: 3538, column: 2, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 3538, column: 2)
!6717 = !{i32 -2141369365}
!6718 = !DILocation(line: 3539, column: 2, scope: !6542)
!6719 = !DILocation(line: 3539, column: 2, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 3539, column: 2)
!6721 = !{i32 -2141369229}
!6722 = !DILocation(line: 3540, column: 2, scope: !6723)
!6723 = distinct !DILexicalBlock(scope: !6724, file: !3, line: 3540, column: 2)
!6724 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 3540, column: 2)
!6725 = distinct !DILexicalBlock(scope: !6726, file: !3, line: 3540, column: 2)
!6726 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 3540, column: 2)
!6727 = !DILocation(line: 3543, column: 13, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 3543, column: 2)
!6729 = !DILocation(line: 3543, column: 11, scope: !6728)
!6730 = !DILocation(line: 3543, column: 7, scope: !6728)
!6731 = !DILocation(line: 3543, column: 24, scope: !6732)
!6732 = distinct !DILexicalBlock(scope: !6728, file: !3, line: 3543, column: 2)
!6733 = !DILocation(line: 3543, column: 30, scope: !6732)
!6734 = !DILocation(line: 3543, column: 40, scope: !6732)
!6735 = !DILocation(line: 3543, column: 28, scope: !6732)
!6736 = !DILocation(line: 3543, column: 2, scope: !6728)
!6737 = !DILocation(line: 3544, column: 3, scope: !6732)
!6738 = !DILocation(line: 3544, column: 3, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6732, file: !3, line: 3544, column: 3)
!6740 = !{i32 -2141368895}
!6741 = !DILocation(line: 3543, column: 55, scope: !6732)
!6742 = !DILocation(line: 3543, column: 2, scope: !6732)
!6743 = distinct !{!6743, !6736, !6744}
!6744 = !DILocation(line: 3544, column: 3, scope: !6728)
!6745 = !DILocation(line: 3545, column: 6, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 3545, column: 6)
!6747 = !DILocation(line: 3545, column: 14, scope: !6746)
!6748 = !DILocation(line: 3545, column: 6, scope: !6542)
!6749 = !DILocation(line: 3547, column: 3, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6746, file: !3, line: 3545, column: 20)
!6751 = !DILocation(line: 3547, column: 3, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6750, file: !3, line: 3547, column: 3)
!6753 = !{i32 -2141368741}
!6754 = !DILocation(line: 3548, column: 14, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6750, file: !3, line: 3548, column: 3)
!6756 = !DILocation(line: 3548, column: 12, scope: !6755)
!6757 = !DILocation(line: 3548, column: 8, scope: !6755)
!6758 = !DILocation(line: 3548, column: 25, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6755, file: !3, line: 3548, column: 3)
!6760 = !DILocation(line: 3548, column: 31, scope: !6759)
!6761 = !DILocation(line: 3548, column: 41, scope: !6759)
!6762 = !DILocation(line: 3548, column: 29, scope: !6759)
!6763 = !DILocation(line: 3548, column: 3, scope: !6755)
!6764 = !DILocation(line: 3549, column: 4, scope: !6759)
!6765 = !DILocation(line: 3549, column: 4, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6759, file: !3, line: 3549, column: 4)
!6767 = !{i32 -2141368638}
!6768 = !DILocation(line: 3548, column: 56, scope: !6759)
!6769 = !DILocation(line: 3548, column: 3, scope: !6759)
!6770 = distinct !{!6770, !6763, !6771}
!6771 = !DILocation(line: 3549, column: 4, scope: !6755)
!6772 = !DILocation(line: 3551, column: 3, scope: !6750)
!6773 = !DILocation(line: 3551, column: 3, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !6750, file: !3, line: 3551, column: 3)
!6775 = !{i32 -2141368502}
!6776 = !DILocation(line: 3552, column: 2, scope: !6750)
!6777 = !DILocation(line: 3554, column: 25, scope: !6542)
!6778 = !DILocation(line: 3554, column: 41, scope: !6542)
!6779 = !DILocation(line: 3554, column: 50, scope: !6542)
!6780 = !DILocation(line: 3554, column: 11, scope: !6542)
!6781 = !DILocation(line: 3554, column: 9, scope: !6542)
!6782 = !DILocation(line: 3555, column: 19, scope: !6542)
!6783 = !DILocation(line: 3555, column: 2, scope: !6542)
!6784 = !DILocation(line: 3556, column: 6, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 3556, column: 6)
!6786 = !DILocation(line: 3556, column: 6, scope: !6542)
!6787 = !DILocation(line: 3557, column: 3, scope: !6785)
!6788 = !DILocation(line: 3560, column: 2, scope: !6542)
!6789 = !DILocation(line: 3560, column: 2, scope: !6790)
!6790 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 3560, column: 2)
!6791 = !{i32 -2141368354}
!6792 = !DILocation(line: 3561, column: 2, scope: !6542)
!6793 = !DILocation(line: 3561, column: 2, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 3561, column: 2)
!6795 = !{i32 -2141368248}
!6796 = !DILocation(line: 3562, column: 2, scope: !6542)
!6797 = !DILocation(line: 3562, column: 2, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 3562, column: 2)
!6799 = !{i32 -2141368112}
!6800 = !DILocation(line: 3563, column: 4, scope: !6542)
!6801 = !DILocation(line: 3564, column: 2, scope: !6542)
!6802 = !DILocation(line: 3564, column: 26, scope: !6542)
!6803 = !DILocation(line: 3564, column: 31, scope: !6542)
!6804 = !DILocation(line: 3564, column: 25, scope: !6542)
!6805 = !DILocation(line: 3564, column: 19, scope: !6542)
!6806 = !DILocation(line: 3564, column: 17, scope: !6542)
!6807 = !DILocation(line: 3564, column: 9, scope: !6542)
!6808 = !DILocation(line: 3564, column: 43, scope: !6542)
!6809 = !DILocation(line: 3564, column: 55, scope: !6542)
!6810 = !DILocation(line: 3564, column: 59, scope: !6542)
!6811 = !DILocation(line: 3564, column: 62, scope: !6542)
!6812 = !DILocation(line: 0, scope: !6542)
!6813 = !DILocation(line: 3565, column: 3, scope: !6542)
!6814 = distinct !{!6814, !6801, !6815}
!6815 = !DILocation(line: 3565, column: 13, scope: !6542)
!6816 = !DILocation(line: 3566, column: 6, scope: !6817)
!6817 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 3566, column: 6)
!6818 = !DILocation(line: 3566, column: 13, scope: !6817)
!6819 = !DILocation(line: 3566, column: 6, scope: !6542)
!6820 = !DILocation(line: 3567, column: 7, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6822, file: !3, line: 3567, column: 7)
!6822 = distinct !DILexicalBlock(scope: !6817, file: !3, line: 3566, column: 26)
!6823 = !DILocation(line: 3567, column: 14, scope: !6821)
!6824 = !DILocation(line: 3567, column: 7, scope: !6822)
!6825 = !DILocation(line: 3568, column: 4, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6821, file: !3, line: 3567, column: 28)
!6827 = !DILocation(line: 3571, column: 11, scope: !6826)
!6828 = !DILocation(line: 3572, column: 4, scope: !6826)
!6829 = !DILocation(line: 3574, column: 3, scope: !6822)
!6830 = !DILocation(line: 3576, column: 3, scope: !6822)
!6831 = !DILocation(line: 3576, column: 27, scope: !6822)
!6832 = !DILocation(line: 3576, column: 32, scope: !6822)
!6833 = !DILocation(line: 3576, column: 26, scope: !6822)
!6834 = !DILocation(line: 3576, column: 20, scope: !6822)
!6835 = !DILocation(line: 3576, column: 18, scope: !6822)
!6836 = !DILocation(line: 3576, column: 10, scope: !6822)
!6837 = !DILocation(line: 3576, column: 44, scope: !6822)
!6838 = !DILocation(line: 3576, column: 56, scope: !6822)
!6839 = !DILocation(line: 3577, column: 6, scope: !6822)
!6840 = !DILocation(line: 3577, column: 9, scope: !6822)
!6841 = !DILocation(line: 0, scope: !6822)
!6842 = !DILocation(line: 3578, column: 4, scope: !6822)
!6843 = distinct !{!6843, !6830, !6844}
!6844 = !DILocation(line: 3578, column: 14, scope: !6822)
!6845 = !DILocation(line: 3579, column: 7, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6822, file: !3, line: 3579, column: 7)
!6847 = !DILocation(line: 3579, column: 14, scope: !6846)
!6848 = !DILocation(line: 3579, column: 7, scope: !6822)
!6849 = !DILocation(line: 3580, column: 4, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6846, file: !3, line: 3579, column: 27)
!6851 = !DILocation(line: 3583, column: 4, scope: !6850)
!6852 = !DILocation(line: 3588, column: 26, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6850, file: !3, line: 3588, column: 8)
!6854 = !DILocation(line: 3588, column: 8, scope: !6853)
!6855 = !DILocation(line: 3588, column: 8, scope: !6850)
!6856 = !DILocation(line: 3589, column: 14, scope: !6853)
!6857 = !DILocation(line: 3589, column: 20, scope: !6853)
!6858 = !DILocation(line: 3589, column: 25, scope: !6853)
!6859 = !DILocation(line: 3589, column: 5, scope: !6853)
!6860 = !DILocation(line: 3591, column: 11, scope: !6850)
!6861 = !DILocation(line: 3592, column: 4, scope: !6850)
!6862 = !DILocation(line: 3596, column: 2, scope: !6822)
!6863 = !DILocation(line: 3597, column: 15, scope: !6542)
!6864 = !DILocation(line: 3597, column: 34, scope: !6542)
!6865 = !DILocation(line: 3597, column: 39, scope: !6542)
!6866 = !DILocation(line: 3597, column: 33, scope: !6542)
!6867 = !DILocation(line: 3597, column: 27, scope: !6542)
!6868 = !DILocation(line: 3597, column: 25, scope: !6542)
!6869 = !DILocation(line: 3597, column: 13, scope: !6542)
!6870 = !DILocation(line: 3603, column: 17, scope: !6542)
!6871 = !DILocation(line: 3603, column: 29, scope: !6542)
!6872 = !DILocation(line: 3603, column: 40, scope: !6542)
!6873 = !DILocation(line: 3603, column: 16, scope: !6542)
!6874 = !DILocation(line: 3603, column: 10, scope: !6542)
!6875 = !DILocation(line: 3603, column: 8, scope: !6542)
!6876 = !DILocation(line: 3604, column: 2, scope: !6542)
!6877 = !DILocation(line: 3607, column: 6, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 3607, column: 6)
!6879 = !DILocation(line: 3607, column: 12, scope: !6878)
!6880 = !DILocation(line: 3607, column: 6, scope: !6542)
!6881 = !DILocation(line: 3608, column: 3, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !6878, file: !3, line: 3607, column: 18)
!6883 = !DILocation(line: 3612, column: 25, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !6882, file: !3, line: 3612, column: 7)
!6885 = !DILocation(line: 3612, column: 7, scope: !6884)
!6886 = !DILocation(line: 3612, column: 7, scope: !6882)
!6887 = !DILocation(line: 3613, column: 13, scope: !6884)
!6888 = !DILocation(line: 3613, column: 19, scope: !6884)
!6889 = !DILocation(line: 3613, column: 24, scope: !6884)
!6890 = !DILocation(line: 3613, column: 4, scope: !6884)
!6891 = !DILocation(line: 3615, column: 3, scope: !6882)
!6892 = !DILocation(line: 3617, column: 10, scope: !6882)
!6893 = !DILocation(line: 3618, column: 3, scope: !6882)
!6894 = !DILocation(line: 3621, column: 2, scope: !6542)
!6895 = !DILocation(line: 3621, column: 2, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 3621, column: 2)
!6897 = !{i32 -2141365594}
!6898 = !DILocation(line: 3622, column: 2, scope: !6542)
!6899 = !DILocation(line: 3622, column: 2, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 3622, column: 2)
!6901 = !{i32 -2141365450}
!6902 = !DILocation(line: 3628, column: 2, scope: !6542)
!6903 = !DILocation(line: 3628, column: 2, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 3628, column: 2)
!6905 = !{i32 -2141365282}
!6906 = !DILocation(line: 3630, column: 2, scope: !6542)
!6907 = !DILocation(line: 3630, column: 2, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 3630, column: 2)
!6909 = !{i32 -2141365111}
!6910 = !DILocation(line: 3633, column: 9, scope: !6542)
!6911 = !DILocation(line: 3633, column: 2, scope: !6542)
!6912 = !DILabel(scope: !6542, name: "err_rel", file: !3, line: 3634)
!6913 = !DILocation(line: 3634, column: 1, scope: !6542)
!6914 = !DILocation(line: 3635, column: 19, scope: !6542)
!6915 = !DILocation(line: 3635, column: 2, scope: !6542)
!6916 = !DILabel(scope: !6542, name: "err", file: !3, line: 3636)
!6917 = !DILocation(line: 3636, column: 1, scope: !6542)
!6918 = !DILocation(line: 3637, column: 9, scope: !6542)
!6919 = !DILocation(line: 3637, column: 2, scope: !6542)
!6920 = !DILocation(line: 3638, column: 1, scope: !6542)
!6921 = distinct !DISubprogram(name: "request_irq", scope: !3905, file: !3905, line: 157, type: !6922, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!6922 = !DISubroutineType(types: !6923)
!6923 = !{!139, !7, !6924, !126, !256, !118}
!6924 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !3905, line: 92, baseType: !6925)
!6925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6926, size: 64)
!6926 = !DISubroutineType(types: !6927)
!6927 = !{!6928, !139, !118}
!6928 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !103, line: 17, baseType: !102)
!6929 = !DILocalVariable(name: "irq", arg: 1, scope: !6921, file: !3905, line: 157, type: !7)
!6930 = !DILocation(line: 157, column: 26, scope: !6921)
!6931 = !DILocalVariable(name: "handler", arg: 2, scope: !6921, file: !3905, line: 157, type: !6924)
!6932 = !DILocation(line: 157, column: 45, scope: !6921)
!6933 = !DILocalVariable(name: "flags", arg: 3, scope: !6921, file: !3905, line: 157, type: !126)
!6934 = !DILocation(line: 157, column: 68, scope: !6921)
!6935 = !DILocalVariable(name: "name", arg: 4, scope: !6921, file: !3905, line: 158, type: !256)
!6936 = !DILocation(line: 158, column: 18, scope: !6921)
!6937 = !DILocalVariable(name: "dev", arg: 5, scope: !6921, file: !3905, line: 158, type: !118)
!6938 = !DILocation(line: 158, column: 30, scope: !6921)
!6939 = !DILocation(line: 160, column: 30, scope: !6921)
!6940 = !DILocation(line: 160, column: 35, scope: !6921)
!6941 = !DILocation(line: 160, column: 50, scope: !6921)
!6942 = !DILocation(line: 160, column: 57, scope: !6921)
!6943 = !DILocation(line: 160, column: 63, scope: !6921)
!6944 = !DILocation(line: 160, column: 9, scope: !6921)
!6945 = !DILocation(line: 160, column: 2, scope: !6921)
!6946 = distinct !DISubprogram(name: "cyy_interrupt", scope: !3, file: !3, line: 756, type: !6926, scopeLine: 757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!6947 = !DILocalVariable(name: "lock", arg: 1, scope: !6948, file: !6949, line: 392, type: !1098)
!6948 = distinct !DISubprogram(name: "spin_unlock", scope: !6949, file: !6949, line: 392, type: !6950, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!6949 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!6950 = !DISubroutineType(types: !6951)
!6951 = !{null, !1098}
!6952 = !DILocation(line: 392, column: 53, scope: !6948, inlinedAt: !6953)
!6953 = distinct !DILocation(line: 816, column: 2, scope: !6946)
!6954 = !DILocalVariable(name: "lock", arg: 1, scope: !6955, file: !6949, line: 352, type: !1098)
!6955 = distinct !DISubprogram(name: "spin_lock", scope: !6949, file: !6949, line: 352, type: !6950, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!6956 = !DILocation(line: 352, column: 51, scope: !6955, inlinedAt: !6957)
!6957 = distinct !DILocation(line: 813, column: 2, scope: !6946)
!6958 = !DILocation(line: 392, column: 53, scope: !6948, inlinedAt: !6959)
!6959 = distinct !DILocation(line: 807, column: 5, scope: !6960)
!6960 = distinct !DILexicalBlock(scope: !6961, file: !3, line: 791, column: 36)
!6961 = distinct !DILexicalBlock(scope: !6962, file: !3, line: 786, column: 51)
!6962 = distinct !DILexicalBlock(scope: !6963, file: !3, line: 786, column: 3)
!6963 = distinct !DILexicalBlock(scope: !6964, file: !3, line: 786, column: 3)
!6964 = distinct !DILexicalBlock(scope: !6946, file: !3, line: 784, column: 5)
!6965 = !DILocation(line: 352, column: 51, scope: !6955, inlinedAt: !6966)
!6966 = distinct !DILocation(line: 800, column: 5, scope: !6960)
!6967 = !DILocalVariable(name: "irq", arg: 1, scope: !6946, file: !3, line: 756, type: !139)
!6968 = !DILocation(line: 756, column: 38, scope: !6946)
!6969 = !DILocalVariable(name: "dev_id", arg: 2, scope: !6946, file: !3, line: 756, type: !118)
!6970 = !DILocation(line: 756, column: 49, scope: !6946)
!6971 = !DILocalVariable(name: "status", scope: !6946, file: !3, line: 758, type: !139)
!6972 = !DILocation(line: 758, column: 6, scope: !6946)
!6973 = !DILocalVariable(name: "cinfo", scope: !6946, file: !3, line: 759, type: !4229)
!6974 = !DILocation(line: 759, column: 24, scope: !6946)
!6975 = !DILocation(line: 759, column: 32, scope: !6946)
!6976 = !DILocalVariable(name: "base_addr", scope: !6946, file: !3, line: 760, type: !118)
!6977 = !DILocation(line: 760, column: 16, scope: !6946)
!6978 = !DILocalVariable(name: "card_base_addr", scope: !6946, file: !3, line: 760, type: !118)
!6979 = !DILocation(line: 760, column: 28, scope: !6946)
!6980 = !DILocalVariable(name: "chip", scope: !6946, file: !3, line: 761, type: !7)
!6981 = !DILocation(line: 761, column: 15, scope: !6946)
!6982 = !DILocalVariable(name: "too_many", scope: !6946, file: !3, line: 761, type: !7)
!6983 = !DILocation(line: 761, column: 21, scope: !6946)
!6984 = !DILocalVariable(name: "had_work", scope: !6946, file: !3, line: 761, type: !7)
!6985 = !DILocation(line: 761, column: 31, scope: !6946)
!6986 = !DILocalVariable(name: "index", scope: !6946, file: !3, line: 762, type: !139)
!6987 = !DILocation(line: 762, column: 6, scope: !6946)
!6988 = !DILocation(line: 764, column: 6, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6946, file: !3, line: 764, column: 6)
!6990 = !DILocation(line: 764, column: 6, scope: !6946)
!6991 = !DILocation(line: 769, column: 3, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6989, file: !3, line: 764, column: 31)
!6993 = !DILocation(line: 772, column: 19, scope: !6946)
!6994 = !DILocation(line: 772, column: 26, scope: !6946)
!6995 = !DILocation(line: 772, column: 17, scope: !6946)
!6996 = !DILocation(line: 773, column: 10, scope: !6946)
!6997 = !DILocation(line: 773, column: 17, scope: !6946)
!6998 = !DILocation(line: 773, column: 8, scope: !6946)
!6999 = !DILocation(line: 776, column: 6, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !6946, file: !3, line: 776, column: 6)
!7001 = !DILocation(line: 776, column: 6, scope: !6946)
!7002 = !DILocation(line: 777, column: 3, scope: !7000)
!7003 = !DILocation(line: 784, column: 2, scope: !6946)
!7004 = !DILocation(line: 785, column: 12, scope: !6964)
!7005 = !DILocation(line: 786, column: 13, scope: !6963)
!7006 = !DILocation(line: 786, column: 8, scope: !6963)
!7007 = !DILocation(line: 786, column: 18, scope: !6962)
!7008 = !DILocation(line: 786, column: 25, scope: !6962)
!7009 = !DILocation(line: 786, column: 32, scope: !6962)
!7010 = !DILocation(line: 786, column: 23, scope: !6962)
!7011 = !DILocation(line: 786, column: 3, scope: !6963)
!7012 = !DILocation(line: 787, column: 16, scope: !6961)
!7013 = !DILocation(line: 787, column: 23, scope: !6961)
!7014 = !DILocation(line: 788, column: 22, scope: !6961)
!7015 = !DILocation(line: 788, column: 7, scope: !6961)
!7016 = !DILocation(line: 788, column: 31, scope: !6961)
!7017 = !DILocation(line: 788, column: 28, scope: !6961)
!7018 = !DILocation(line: 787, column: 33, scope: !6961)
!7019 = !DILocation(line: 787, column: 14, scope: !6961)
!7020 = !DILocation(line: 789, column: 13, scope: !6961)
!7021 = !DILocation(line: 790, column: 4, scope: !6961)
!7022 = !DILocation(line: 790, column: 27, scope: !6961)
!7023 = !DILocation(line: 791, column: 18, scope: !6961)
!7024 = !DILocation(line: 791, column: 15, scope: !6961)
!7025 = !DILocation(line: 790, column: 37, scope: !6961)
!7026 = !DILocation(line: 790, column: 21, scope: !6961)
!7027 = !DILocation(line: 790, column: 19, scope: !6961)
!7028 = !DILocation(line: 791, column: 27, scope: !6961)
!7029 = !DILocation(line: 792, column: 13, scope: !6960)
!7030 = !DILocation(line: 798, column: 24, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !6960, file: !3, line: 798, column: 9)
!7032 = !DILocation(line: 798, column: 14, scope: !7031)
!7033 = !DILocation(line: 798, column: 9, scope: !6960)
!7034 = !DILocation(line: 799, column: 6, scope: !7031)
!7035 = !DILocation(line: 800, column: 16, scope: !6960)
!7036 = !DILocation(line: 800, column: 23, scope: !6960)
!7037 = !DILocation(line: 354, column: 2, scope: !7038, inlinedAt: !6966)
!7038 = distinct !DILexicalBlock(scope: !6955, file: !6949, line: 354, column: 2)
!7039 = !{i32 -2145371029}
!7040 = !DILocation(line: 354, column: 2, scope: !7041, inlinedAt: !6966)
!7041 = distinct !DILexicalBlock(scope: !7038, file: !6949, line: 354, column: 2)
!7042 = !DILocation(line: 801, column: 9, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !6960, file: !3, line: 801, column: 9)
!7044 = !DILocation(line: 801, column: 16, scope: !7043)
!7045 = !DILocation(line: 801, column: 9, scope: !6960)
!7046 = !DILocation(line: 802, column: 18, scope: !7043)
!7047 = !DILocation(line: 802, column: 25, scope: !7043)
!7048 = !DILocation(line: 802, column: 31, scope: !7043)
!7049 = !DILocation(line: 802, column: 6, scope: !7043)
!7050 = !DILocation(line: 803, column: 9, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !6960, file: !3, line: 803, column: 9)
!7052 = !DILocation(line: 803, column: 16, scope: !7051)
!7053 = !DILocation(line: 803, column: 9, scope: !6960)
!7054 = !DILocation(line: 804, column: 18, scope: !7051)
!7055 = !DILocation(line: 804, column: 25, scope: !7051)
!7056 = !DILocation(line: 804, column: 31, scope: !7051)
!7057 = !DILocation(line: 804, column: 6, scope: !7051)
!7058 = !DILocation(line: 805, column: 9, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !6960, file: !3, line: 805, column: 9)
!7060 = !DILocation(line: 805, column: 16, scope: !7059)
!7061 = !DILocation(line: 805, column: 9, scope: !6960)
!7062 = !DILocation(line: 806, column: 21, scope: !7059)
!7063 = !DILocation(line: 806, column: 28, scope: !7059)
!7064 = !DILocation(line: 806, column: 34, scope: !7059)
!7065 = !DILocation(line: 806, column: 6, scope: !7059)
!7066 = !DILocation(line: 807, column: 18, scope: !6960)
!7067 = !DILocation(line: 807, column: 25, scope: !6960)
!7068 = !DILocation(line: 394, column: 2, scope: !7069, inlinedAt: !6959)
!7069 = distinct !DILexicalBlock(scope: !6948, file: !6949, line: 394, column: 2)
!7070 = !{i32 -2145368668}
!7071 = !DILocation(line: 394, column: 2, scope: !7072, inlinedAt: !6959)
!7072 = distinct !DILexicalBlock(scope: !7069, file: !6949, line: 394, column: 2)
!7073 = distinct !{!7073, !7021, !7074}
!7074 = !DILocation(line: 808, column: 4, scope: !6961)
!7075 = !DILocation(line: 809, column: 3, scope: !6961)
!7076 = !DILocation(line: 786, column: 47, scope: !6962)
!7077 = !DILocation(line: 786, column: 3, scope: !6962)
!7078 = distinct !{!7078, !7011, !7079}
!7079 = !DILocation(line: 809, column: 3, scope: !6963)
!7080 = !DILocation(line: 810, column: 2, scope: !6964)
!7081 = !DILocation(line: 810, column: 11, scope: !6946)
!7082 = distinct !{!7082, !7003, !7083}
!7083 = !DILocation(line: 810, column: 19, scope: !6946)
!7084 = !DILocation(line: 813, column: 13, scope: !6946)
!7085 = !DILocation(line: 813, column: 20, scope: !6946)
!7086 = !DILocation(line: 354, column: 2, scope: !7038, inlinedAt: !6957)
!7087 = !DILocation(line: 354, column: 2, scope: !7041, inlinedAt: !6957)
!7088 = !DILocation(line: 814, column: 2, scope: !6946)
!7089 = !DILocation(line: 814, column: 2, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !6946, file: !3, line: 814, column: 2)
!7091 = !{i32 -2141445125}
!7092 = !DILocation(line: 816, column: 15, scope: !6946)
!7093 = !DILocation(line: 816, column: 22, scope: !6946)
!7094 = !DILocation(line: 394, column: 2, scope: !7069, inlinedAt: !6953)
!7095 = !DILocation(line: 394, column: 2, scope: !7072, inlinedAt: !6953)
!7096 = !DILocation(line: 817, column: 2, scope: !6946)
!7097 = !DILocation(line: 818, column: 1, scope: !6946)
!7098 = distinct !DISubprogram(name: "cy_init_card", scope: !3, file: !3, line: 3049, type: !7099, scopeLine: 3050, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!7099 = !DISubroutineType(types: !7100)
!7100 = !{!139, !4229}
!7101 = !DILocalVariable(name: "lock", arg: 1, scope: !7102, file: !6949, line: 327, type: !1098)
!7102 = distinct !DISubprogram(name: "spinlock_check", scope: !6949, file: !6949, line: 327, type: !7103, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!7103 = !DISubroutineType(types: !7104)
!7104 = !{!7105, !1098}
!7105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 64)
!7106 = !DILocation(line: 327, column: 67, scope: !7102, inlinedAt: !7107)
!7107 = distinct !DILocation(line: 3054, column: 2, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7098, file: !3, line: 3054, column: 2)
!7109 = !DILocalVariable(name: "cinfo", arg: 1, scope: !7098, file: !3, line: 3049, type: !4229)
!7110 = !DILocation(line: 3049, column: 47, scope: !7098)
!7111 = !DILocalVariable(name: "info", scope: !7098, file: !3, line: 3051, type: !134)
!7112 = !DILocation(line: 3051, column: 24, scope: !7098)
!7113 = !DILocalVariable(name: "channel", scope: !7098, file: !3, line: 3052, type: !7)
!7114 = !DILocation(line: 3052, column: 15, scope: !7098)
!7115 = !DILocalVariable(name: "port", scope: !7098, file: !3, line: 3052, type: !7)
!7116 = !DILocation(line: 3052, column: 24, scope: !7098)
!7117 = !DILocation(line: 3054, column: 2, scope: !7098)
!7118 = !DILocation(line: 3054, column: 2, scope: !7108)
!7119 = !DILocation(line: 329, column: 10, scope: !7102, inlinedAt: !7107)
!7120 = !DILocation(line: 329, column: 16, scope: !7102, inlinedAt: !7107)
!7121 = !DILocation(line: 3055, column: 2, scope: !7098)
!7122 = !DILocation(line: 3055, column: 9, scope: !7098)
!7123 = !DILocation(line: 3055, column: 22, scope: !7098)
!7124 = !DILocation(line: 3057, column: 25, scope: !7098)
!7125 = !DILocation(line: 3057, column: 32, scope: !7098)
!7126 = !DILocation(line: 3057, column: 17, scope: !7098)
!7127 = !DILocation(line: 3057, column: 2, scope: !7098)
!7128 = !DILocation(line: 3057, column: 9, scope: !7098)
!7129 = !DILocation(line: 3057, column: 15, scope: !7098)
!7130 = !DILocation(line: 3059, column: 6, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7098, file: !3, line: 3059, column: 6)
!7132 = !DILocation(line: 3059, column: 13, scope: !7131)
!7133 = !DILocation(line: 3059, column: 19, scope: !7131)
!7134 = !DILocation(line: 3059, column: 6, scope: !7098)
!7135 = !DILocation(line: 3060, column: 3, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !7131, file: !3, line: 3059, column: 28)
!7137 = !DILocation(line: 3061, column: 3, scope: !7136)
!7138 = !DILocation(line: 3064, column: 15, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7098, file: !3, line: 3064, column: 2)
!7140 = !DILocation(line: 3064, column: 27, scope: !7139)
!7141 = !DILocation(line: 3064, column: 34, scope: !7139)
!7142 = !DILocation(line: 3064, column: 25, scope: !7139)
!7143 = !DILocation(line: 3064, column: 7, scope: !7139)
!7144 = !DILocation(line: 3064, column: 46, scope: !7145)
!7145 = distinct !DILexicalBlock(scope: !7139, file: !3, line: 3064, column: 2)
!7146 = !DILocation(line: 3064, column: 56, scope: !7145)
!7147 = !DILocation(line: 3064, column: 63, scope: !7145)
!7148 = !DILocation(line: 3064, column: 54, scope: !7145)
!7149 = !DILocation(line: 3064, column: 2, scope: !7139)
!7150 = !DILocation(line: 3066, column: 11, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !7145, file: !3, line: 3065, column: 23)
!7152 = !DILocation(line: 3066, column: 18, scope: !7151)
!7153 = !DILocation(line: 3066, column: 24, scope: !7151)
!7154 = !DILocation(line: 3066, column: 8, scope: !7151)
!7155 = !DILocation(line: 3067, column: 18, scope: !7151)
!7156 = !DILocation(line: 3067, column: 24, scope: !7151)
!7157 = !DILocation(line: 3067, column: 3, scope: !7151)
!7158 = !DILocation(line: 3068, column: 3, scope: !7151)
!7159 = !DILocation(line: 3068, column: 9, scope: !7151)
!7160 = !DILocation(line: 3068, column: 15, scope: !7151)
!7161 = !DILocation(line: 3069, column: 16, scope: !7151)
!7162 = !DILocation(line: 3069, column: 3, scope: !7151)
!7163 = !DILocation(line: 3069, column: 9, scope: !7151)
!7164 = !DILocation(line: 3069, column: 14, scope: !7151)
!7165 = !DILocation(line: 3070, column: 16, scope: !7151)
!7166 = !DILocation(line: 3070, column: 3, scope: !7151)
!7167 = !DILocation(line: 3070, column: 9, scope: !7151)
!7168 = !DILocation(line: 3070, column: 14, scope: !7151)
!7169 = !DILocation(line: 3072, column: 3, scope: !7151)
!7170 = !DILocation(line: 3072, column: 9, scope: !7151)
!7171 = !DILocation(line: 3072, column: 14, scope: !7151)
!7172 = !DILocation(line: 3072, column: 27, scope: !7151)
!7173 = !DILocation(line: 3073, column: 3, scope: !7151)
!7174 = !DILocation(line: 3073, column: 9, scope: !7151)
!7175 = !DILocation(line: 3073, column: 14, scope: !7151)
!7176 = !DILocation(line: 3073, column: 26, scope: !7151)
!7177 = !DILocation(line: 3074, column: 3, scope: !7151)
!7178 = !DILocation(line: 3076, column: 15, scope: !7179)
!7179 = distinct !DILexicalBlock(scope: !7151, file: !3, line: 3076, column: 7)
!7180 = !DILocation(line: 3076, column: 7, scope: !7179)
!7181 = !DILocation(line: 3076, column: 7, scope: !7151)
!7182 = !DILocalVariable(name: "firm_id", scope: !7183, file: !3, line: 3077, type: !5104)
!7183 = distinct !DILexicalBlock(scope: !7179, file: !3, line: 3076, column: 23)
!7184 = !DILocation(line: 3077, column: 20, scope: !7183)
!7185 = !DILocation(line: 3077, column: 30, scope: !7183)
!7186 = !DILocation(line: 3077, column: 37, scope: !7183)
!7187 = !DILocation(line: 3077, column: 47, scope: !7183)
!7188 = !DILocalVariable(name: "zfw_ctrl", scope: !7183, file: !3, line: 3078, type: !6086)
!7189 = !DILocation(line: 3078, column: 21, scope: !7183)
!7190 = !DILocation(line: 3080, column: 4, scope: !7183)
!7191 = !DILocation(line: 3080, column: 10, scope: !7183)
!7192 = !DILocation(line: 3080, column: 15, scope: !7183)
!7193 = !DILocation(line: 3080, column: 19, scope: !7183)
!7194 = !DILocation(line: 3081, column: 4, scope: !7183)
!7195 = !DILocation(line: 3081, column: 10, scope: !7183)
!7196 = !DILocation(line: 3081, column: 15, scope: !7183)
!7197 = !DILocation(line: 3083, column: 15, scope: !7183)
!7198 = !DILocation(line: 3083, column: 22, scope: !7183)
!7199 = !DILocation(line: 3084, column: 13, scope: !7183)
!7200 = !DILocation(line: 3084, column: 22, scope: !7183)
!7201 = !DILocation(line: 3084, column: 12, scope: !7183)
!7202 = !DILocation(line: 3084, column: 6, scope: !7183)
!7203 = !DILocation(line: 3084, column: 36, scope: !7183)
!7204 = !DILocation(line: 3083, column: 32, scope: !7183)
!7205 = !DILocation(line: 3083, column: 13, scope: !7183)
!7206 = !DILocation(line: 3085, column: 27, scope: !7183)
!7207 = !DILocation(line: 3085, column: 37, scope: !7183)
!7208 = !DILocation(line: 3085, column: 45, scope: !7183)
!7209 = !DILocation(line: 3085, column: 4, scope: !7183)
!7210 = !DILocation(line: 3085, column: 10, scope: !7183)
!7211 = !DILocation(line: 3085, column: 12, scope: !7183)
!7212 = !DILocation(line: 3085, column: 16, scope: !7183)
!7213 = !DILocation(line: 3085, column: 24, scope: !7183)
!7214 = !DILocation(line: 3086, column: 28, scope: !7183)
!7215 = !DILocation(line: 3086, column: 38, scope: !7183)
!7216 = !DILocation(line: 3086, column: 47, scope: !7183)
!7217 = !DILocation(line: 3086, column: 4, scope: !7183)
!7218 = !DILocation(line: 3086, column: 10, scope: !7183)
!7219 = !DILocation(line: 3086, column: 12, scope: !7183)
!7220 = !DILocation(line: 3086, column: 16, scope: !7183)
!7221 = !DILocation(line: 3086, column: 25, scope: !7183)
!7222 = !DILocation(line: 3088, column: 8, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !7183, file: !3, line: 3088, column: 8)
!7224 = !DILocation(line: 3088, column: 15, scope: !7223)
!7225 = !DILocation(line: 3088, column: 22, scope: !7223)
!7226 = !DILocation(line: 3088, column: 8, scope: !7183)
!7227 = !DILocation(line: 3089, column: 5, scope: !7223)
!7228 = !DILocation(line: 3089, column: 11, scope: !7223)
!7229 = !DILocation(line: 3089, column: 26, scope: !7223)
!7230 = !DILocation(line: 3091, column: 5, scope: !7223)
!7231 = !DILocation(line: 3091, column: 11, scope: !7223)
!7232 = !DILocation(line: 3091, column: 26, scope: !7223)
!7233 = !DILocation(line: 3095, column: 3, scope: !7183)
!7234 = !DILocalVariable(name: "chip_number", scope: !7235, file: !3, line: 3096, type: !131)
!7235 = distinct !DILexicalBlock(scope: !7179, file: !3, line: 3095, column: 10)
!7236 = !DILocation(line: 3096, column: 19, scope: !7235)
!7237 = !DILocalVariable(name: "index", scope: !7235, file: !3, line: 3097, type: !139)
!7238 = !DILocation(line: 3097, column: 8, scope: !7235)
!7239 = !DILocation(line: 3097, column: 16, scope: !7235)
!7240 = !DILocation(line: 3097, column: 23, scope: !7235)
!7241 = !DILocation(line: 3099, column: 4, scope: !7235)
!7242 = !DILocation(line: 3099, column: 10, scope: !7235)
!7243 = !DILocation(line: 3099, column: 15, scope: !7235)
!7244 = !DILocation(line: 3099, column: 19, scope: !7235)
!7245 = !DILocation(line: 3100, column: 4, scope: !7235)
!7246 = !DILocation(line: 3100, column: 10, scope: !7235)
!7247 = !DILocation(line: 3100, column: 15, scope: !7235)
!7248 = !DILocation(line: 3101, column: 4, scope: !7235)
!7249 = !DILocation(line: 3101, column: 10, scope: !7235)
!7250 = !DILocation(line: 3101, column: 25, scope: !7235)
!7251 = !DILocation(line: 3102, column: 4, scope: !7235)
!7252 = !DILocation(line: 3102, column: 10, scope: !7235)
!7253 = !DILocation(line: 3102, column: 15, scope: !7235)
!7254 = !DILocation(line: 3103, column: 4, scope: !7235)
!7255 = !DILocation(line: 3103, column: 10, scope: !7235)
!7256 = !DILocation(line: 3103, column: 15, scope: !7235)
!7257 = !DILocation(line: 3104, column: 4, scope: !7235)
!7258 = !DILocation(line: 3104, column: 10, scope: !7235)
!7259 = !DILocation(line: 3104, column: 15, scope: !7235)
!7260 = !DILocation(line: 3106, column: 18, scope: !7235)
!7261 = !DILocation(line: 3106, column: 26, scope: !7235)
!7262 = !DILocation(line: 3106, column: 16, scope: !7235)
!7263 = !DILocation(line: 3107, column: 28, scope: !7235)
!7264 = !DILocation(line: 3107, column: 35, scope: !7235)
!7265 = !DILocation(line: 3108, column: 21, scope: !7235)
!7266 = !DILocation(line: 3108, column: 6, scope: !7235)
!7267 = !DILocation(line: 3108, column: 37, scope: !7235)
!7268 = !DILocation(line: 3108, column: 34, scope: !7235)
!7269 = !DILocation(line: 3107, column: 45, scope: !7235)
!7270 = !DILocation(line: 3107, column: 4, scope: !7235)
!7271 = !DILocation(line: 3107, column: 10, scope: !7235)
!7272 = !DILocation(line: 3107, column: 12, scope: !7235)
!7273 = !DILocation(line: 3107, column: 16, scope: !7235)
!7274 = !DILocation(line: 3107, column: 26, scope: !7235)
!7275 = !DILocation(line: 3109, column: 31, scope: !7235)
!7276 = !DILocation(line: 3109, column: 21, scope: !7235)
!7277 = !DILocation(line: 3109, column: 4, scope: !7235)
!7278 = !DILocation(line: 3109, column: 10, scope: !7235)
!7279 = !DILocation(line: 3109, column: 19, scope: !7235)
!7280 = !DILocation(line: 3111, column: 8, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 3111, column: 8)
!7282 = !DILocation(line: 3111, column: 14, scope: !7281)
!7283 = !DILocation(line: 3111, column: 23, scope: !7281)
!7284 = !DILocation(line: 3111, column: 8, scope: !7235)
!7285 = !DILocation(line: 3113, column: 18, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7281, file: !3, line: 3111, column: 40)
!7287 = !DILocation(line: 3113, column: 5, scope: !7286)
!7288 = !DILocation(line: 3113, column: 11, scope: !7286)
!7289 = !DILocation(line: 3113, column: 16, scope: !7286)
!7290 = !DILocation(line: 3114, column: 17, scope: !7286)
!7291 = !DILocation(line: 3114, column: 5, scope: !7286)
!7292 = !DILocation(line: 3114, column: 11, scope: !7286)
!7293 = !DILocation(line: 3114, column: 15, scope: !7286)
!7294 = !DILocation(line: 3115, column: 18, scope: !7286)
!7295 = !DILocation(line: 3115, column: 5, scope: !7286)
!7296 = !DILocation(line: 3115, column: 11, scope: !7286)
!7297 = !DILocation(line: 3115, column: 16, scope: !7286)
!7298 = !DILocation(line: 3116, column: 17, scope: !7286)
!7299 = !DILocation(line: 3116, column: 5, scope: !7286)
!7300 = !DILocation(line: 3116, column: 11, scope: !7286)
!7301 = !DILocation(line: 3116, column: 15, scope: !7286)
!7302 = !DILocation(line: 3117, column: 5, scope: !7286)
!7303 = !DILocation(line: 3117, column: 11, scope: !7286)
!7304 = !DILocation(line: 3117, column: 22, scope: !7286)
!7305 = !DILocation(line: 3118, column: 4, scope: !7286)
!7306 = !DILocation(line: 3119, column: 18, scope: !7307)
!7307 = distinct !DILexicalBlock(scope: !7281, file: !3, line: 3118, column: 11)
!7308 = !DILocation(line: 3119, column: 5, scope: !7307)
!7309 = !DILocation(line: 3119, column: 11, scope: !7307)
!7310 = !DILocation(line: 3119, column: 16, scope: !7307)
!7311 = !DILocation(line: 3120, column: 17, scope: !7307)
!7312 = !DILocation(line: 3120, column: 5, scope: !7307)
!7313 = !DILocation(line: 3120, column: 11, scope: !7307)
!7314 = !DILocation(line: 3120, column: 15, scope: !7307)
!7315 = !DILocation(line: 3121, column: 18, scope: !7307)
!7316 = !DILocation(line: 3121, column: 5, scope: !7307)
!7317 = !DILocation(line: 3121, column: 11, scope: !7307)
!7318 = !DILocation(line: 3121, column: 16, scope: !7307)
!7319 = !DILocation(line: 3122, column: 17, scope: !7307)
!7320 = !DILocation(line: 3122, column: 5, scope: !7307)
!7321 = !DILocation(line: 3122, column: 11, scope: !7307)
!7322 = !DILocation(line: 3122, column: 15, scope: !7307)
!7323 = !DILocation(line: 3123, column: 5, scope: !7307)
!7324 = !DILocation(line: 3123, column: 11, scope: !7307)
!7325 = !DILocation(line: 3123, column: 22, scope: !7307)
!7326 = !DILocation(line: 3125, column: 4, scope: !7235)
!7327 = !DILocation(line: 3125, column: 10, scope: !7235)
!7328 = !DILocation(line: 3125, column: 27, scope: !7235)
!7329 = !DILocation(line: 3129, column: 2, scope: !7151)
!7330 = !DILocation(line: 3065, column: 11, scope: !7145)
!7331 = !DILocation(line: 3065, column: 19, scope: !7145)
!7332 = !DILocation(line: 3064, column: 2, scope: !7145)
!7333 = distinct !{!7333, !7149, !7334}
!7334 = !DILocation(line: 3129, column: 2, scope: !7139)
!7335 = !DILocation(line: 3132, column: 14, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7098, file: !3, line: 3132, column: 6)
!7337 = !DILocation(line: 3132, column: 6, scope: !7336)
!7338 = !DILocation(line: 3132, column: 21, scope: !7336)
!7339 = !DILocation(line: 3132, column: 25, scope: !7336)
!7340 = !DILocation(line: 3132, column: 6, scope: !7098)
!7341 = !DILocation(line: 3133, column: 29, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7336, file: !3, line: 3132, column: 56)
!7343 = !DILocation(line: 3133, column: 37, scope: !7342)
!7344 = !DILocation(line: 3133, column: 3, scope: !7342)
!7345 = !DILocation(line: 3137, column: 2, scope: !7342)
!7346 = !DILocation(line: 3139, column: 2, scope: !7098)
!7347 = !DILocation(line: 3140, column: 1, scope: !7098)
!7348 = distinct !DISubprogram(name: "pci_set_drvdata", scope: !4503, file: !4503, line: 1870, type: !7349, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!7349 = !DISubroutineType(types: !7350)
!7350 = !{null, !4523, !118}
!7351 = !DILocalVariable(name: "pdev", arg: 1, scope: !7348, file: !4503, line: 1870, type: !4523)
!7352 = !DILocation(line: 1870, column: 52, scope: !7348)
!7353 = !DILocalVariable(name: "data", arg: 2, scope: !7348, file: !4503, line: 1870, type: !118)
!7354 = !DILocation(line: 1870, column: 64, scope: !7348)
!7355 = !DILocation(line: 1872, column: 19, scope: !7348)
!7356 = !DILocation(line: 1872, column: 25, scope: !7348)
!7357 = !DILocation(line: 1872, column: 30, scope: !7348)
!7358 = !DILocation(line: 1872, column: 2, scope: !7348)
!7359 = !DILocation(line: 1873, column: 1, scope: !7348)
!7360 = distinct !DISubprogram(name: "__cyz_load_fw", scope: !3, file: !3, line: 3397, type: !7361, scopeLine: 3400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!7361 = !DISubroutineType(types: !7362)
!7362 = !{!139, !6554, !256, !7363, !118, !118}
!7363 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !426)
!7364 = !DILocalVariable(name: "fw", arg: 1, scope: !7360, file: !3, line: 3397, type: !6554)
!7365 = !DILocation(line: 3397, column: 49, scope: !7360)
!7366 = !DILocalVariable(name: "name", arg: 2, scope: !7360, file: !3, line: 3398, type: !256)
!7367 = !DILocation(line: 3398, column: 15, scope: !7360)
!7368 = !DILocalVariable(name: "mailbox", arg: 3, scope: !7360, file: !3, line: 3398, type: !7363)
!7369 = !DILocation(line: 3398, column: 31, scope: !7360)
!7370 = !DILocalVariable(name: "base", arg: 4, scope: !7360, file: !3, line: 3398, type: !118)
!7371 = !DILocation(line: 3398, column: 54, scope: !7360)
!7372 = !DILocalVariable(name: "fpga", arg: 5, scope: !7360, file: !3, line: 3399, type: !118)
!7373 = !DILocation(line: 3399, column: 17, scope: !7360)
!7374 = !DILocalVariable(name: "ptr", scope: !7360, file: !3, line: 3401, type: !2192)
!7375 = !DILocation(line: 3401, column: 14, scope: !7360)
!7376 = !DILocation(line: 3401, column: 20, scope: !7360)
!7377 = !DILocation(line: 3401, column: 24, scope: !7360)
!7378 = !DILocalVariable(name: "h", scope: !7360, file: !3, line: 3402, type: !7379)
!7379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7380, size: 64)
!7380 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7381)
!7381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zfile_header", file: !3, line: 107, size: 1440, elements: !7382)
!7382 = !{!7383, !7384, !7385, !7386, !7387, !7388, !7389, !7390}
!7383 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7381, file: !3, line: 108, baseType: !4149, size: 512)
!7384 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !7381, file: !3, line: 109, baseType: !2762, size: 256, offset: 512)
!7385 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !7381, file: !3, line: 110, baseType: !2762, size: 256, offset: 768)
!7386 = !DIDerivedType(tag: DW_TAG_member, name: "n_config", scope: !7381, file: !3, line: 111, baseType: !426, size: 32, offset: 1024)
!7387 = !DIDerivedType(tag: DW_TAG_member, name: "config_offset", scope: !7381, file: !3, line: 112, baseType: !426, size: 32, offset: 1056)
!7388 = !DIDerivedType(tag: DW_TAG_member, name: "n_blocks", scope: !7381, file: !3, line: 113, baseType: !426, size: 32, offset: 1088)
!7389 = !DIDerivedType(tag: DW_TAG_member, name: "block_offset", scope: !7381, file: !3, line: 114, baseType: !426, size: 32, offset: 1120)
!7390 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7381, file: !3, line: 115, baseType: !7391, size: 288, offset: 1152)
!7391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 288, elements: !3519)
!7392 = !DILocation(line: 3402, column: 29, scope: !7360)
!7393 = !DILocation(line: 3402, column: 33, scope: !7360)
!7394 = !DILocalVariable(name: "c", scope: !7360, file: !3, line: 3403, type: !7395)
!7395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7396, size: 64)
!7396 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7397)
!7397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zfile_config", file: !3, line: 118, size: 1120, elements: !7398)
!7398 = !{!7399, !7400, !7401, !7402, !7403}
!7399 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7397, file: !3, line: 119, baseType: !4149, size: 512)
!7400 = !DIDerivedType(tag: DW_TAG_member, name: "mailbox", scope: !7397, file: !3, line: 120, baseType: !426, size: 32, offset: 512)
!7401 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !7397, file: !3, line: 121, baseType: !426, size: 32, offset: 544)
!7402 = !DIDerivedType(tag: DW_TAG_member, name: "n_blocks", scope: !7397, file: !3, line: 122, baseType: !426, size: 32, offset: 576)
!7403 = !DIDerivedType(tag: DW_TAG_member, name: "block_list", scope: !7397, file: !3, line: 123, baseType: !4710, size: 512, offset: 608)
!7404 = !DILocation(line: 3403, column: 29, scope: !7360)
!7405 = !DILocalVariable(name: "cs", scope: !7360, file: !3, line: 3403, type: !7395)
!7406 = !DILocation(line: 3403, column: 33, scope: !7360)
!7407 = !DILocalVariable(name: "b", scope: !7360, file: !3, line: 3404, type: !7408)
!7408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7409, size: 64)
!7409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7410)
!7410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zfile_block", file: !3, line: 126, size: 128, elements: !7411)
!7411 = !{!7412, !7413, !7414, !7415}
!7412 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7410, file: !3, line: 127, baseType: !426, size: 32)
!7413 = !DIDerivedType(tag: DW_TAG_member, name: "file_offset", scope: !7410, file: !3, line: 128, baseType: !426, size: 32, offset: 32)
!7414 = !DIDerivedType(tag: DW_TAG_member, name: "ram_offset", scope: !7410, file: !3, line: 129, baseType: !426, size: 32, offset: 64)
!7415 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7410, file: !3, line: 130, baseType: !426, size: 32, offset: 96)
!7416 = !DILocation(line: 3404, column: 28, scope: !7360)
!7417 = !DILocalVariable(name: "bs", scope: !7360, file: !3, line: 3404, type: !7408)
!7418 = !DILocation(line: 3404, column: 32, scope: !7360)
!7419 = !DILocalVariable(name: "a", scope: !7360, file: !3, line: 3405, type: !7)
!7420 = !DILocation(line: 3405, column: 15, scope: !7360)
!7421 = !DILocalVariable(name: "tmp", scope: !7360, file: !3, line: 3405, type: !7)
!7422 = !DILocation(line: 3405, column: 18, scope: !7360)
!7423 = !DILocalVariable(name: "len", scope: !7360, file: !3, line: 3405, type: !7)
!7424 = !DILocation(line: 3405, column: 23, scope: !7360)
!7425 = !DILocation(line: 3405, column: 29, scope: !7360)
!7426 = !DILocation(line: 3405, column: 33, scope: !7360)
!7427 = !DILocation(line: 3407, column: 6, scope: !7428)
!7428 = distinct !DILexicalBlock(scope: !7360, file: !3, line: 3407, column: 6)
!7429 = !DILocation(line: 3407, column: 10, scope: !7428)
!7430 = !DILocation(line: 3407, column: 6, scope: !7360)
!7431 = !DILocation(line: 3408, column: 40, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7428, file: !3, line: 3407, column: 24)
!7433 = !DILocation(line: 3408, column: 3, scope: !7432)
!7434 = !DILocation(line: 3409, column: 3, scope: !7432)
!7435 = !DILocation(line: 3412, column: 7, scope: !7360)
!7436 = !DILocation(line: 3412, column: 13, scope: !7360)
!7437 = !DILocation(line: 3412, column: 16, scope: !7360)
!7438 = !DILocation(line: 3412, column: 11, scope: !7360)
!7439 = !DILocation(line: 3412, column: 5, scope: !7360)
!7440 = !DILocation(line: 3413, column: 7, scope: !7360)
!7441 = !DILocation(line: 3413, column: 13, scope: !7360)
!7442 = !DILocation(line: 3413, column: 16, scope: !7360)
!7443 = !DILocation(line: 3413, column: 11, scope: !7360)
!7444 = !DILocation(line: 3413, column: 5, scope: !7360)
!7445 = !DILocation(line: 3415, column: 15, scope: !7446)
!7446 = distinct !DILexicalBlock(scope: !7360, file: !3, line: 3415, column: 6)
!7447 = !DILocation(line: 3415, column: 20, scope: !7446)
!7448 = !DILocation(line: 3415, column: 23, scope: !7446)
!7449 = !DILocation(line: 3415, column: 18, scope: !7446)
!7450 = !DILocation(line: 3415, column: 6, scope: !7446)
!7451 = !DILocation(line: 3415, column: 35, scope: !7446)
!7452 = !DILocation(line: 3415, column: 41, scope: !7446)
!7453 = !DILocation(line: 3415, column: 39, scope: !7446)
!7454 = !DILocation(line: 3415, column: 33, scope: !7446)
!7455 = !DILocation(line: 3415, column: 45, scope: !7446)
!7456 = !DILocation(line: 3416, column: 13, scope: !7446)
!7457 = !DILocation(line: 3416, column: 18, scope: !7446)
!7458 = !DILocation(line: 3416, column: 21, scope: !7446)
!7459 = !DILocation(line: 3416, column: 16, scope: !7446)
!7460 = !DILocation(line: 3416, column: 4, scope: !7446)
!7461 = !DILocation(line: 3416, column: 33, scope: !7446)
!7462 = !DILocation(line: 3416, column: 39, scope: !7446)
!7463 = !DILocation(line: 3416, column: 37, scope: !7446)
!7464 = !DILocation(line: 3416, column: 31, scope: !7446)
!7465 = !DILocation(line: 3415, column: 6, scope: !7360)
!7466 = !DILocation(line: 3417, column: 3, scope: !7467)
!7467 = distinct !DILexicalBlock(scope: !7446, file: !3, line: 3416, column: 44)
!7468 = !DILocation(line: 3418, column: 3, scope: !7467)
!7469 = !DILocation(line: 3421, column: 18, scope: !7470)
!7470 = distinct !DILexicalBlock(scope: !7360, file: !3, line: 3421, column: 6)
!7471 = !DILocation(line: 3421, column: 21, scope: !7470)
!7472 = !DILocation(line: 3421, column: 6, scope: !7470)
!7473 = !DILocation(line: 3421, column: 44, scope: !7470)
!7474 = !DILocation(line: 3422, column: 16, scope: !7470)
!7475 = !DILocation(line: 3422, column: 19, scope: !7470)
!7476 = !DILocation(line: 3422, column: 4, scope: !7470)
!7477 = !DILocation(line: 3421, column: 6, scope: !7360)
!7478 = !DILocation(line: 3423, column: 3, scope: !7479)
!7479 = distinct !DILexicalBlock(scope: !7470, file: !3, line: 3422, column: 43)
!7480 = !DILocation(line: 3424, column: 3, scope: !7479)
!7481 = !DILocation(line: 3427, column: 14, scope: !7482)
!7482 = distinct !DILexicalBlock(scope: !7360, file: !3, line: 3427, column: 6)
!7483 = !DILocation(line: 3427, column: 20, scope: !7482)
!7484 = !DILocation(line: 3427, column: 23, scope: !7482)
!7485 = !DILocation(line: 3427, column: 6, scope: !7482)
!7486 = !DILocation(line: 3427, column: 6, scope: !7360)
!7487 = !DILocation(line: 3428, column: 52, scope: !7488)
!7488 = distinct !DILexicalBlock(scope: !7482, file: !3, line: 3427, column: 47)
!7489 = !DILocation(line: 3428, column: 55, scope: !7488)
!7490 = !DILocation(line: 3428, column: 61, scope: !7488)
!7491 = !DILocation(line: 3428, column: 3, scope: !7488)
!7492 = !DILocation(line: 3429, column: 3, scope: !7488)
!7493 = !DILocation(line: 3432, column: 6, scope: !7360)
!7494 = !DILocation(line: 3433, column: 11, scope: !7495)
!7495 = distinct !DILexicalBlock(scope: !7360, file: !3, line: 3433, column: 2)
!7496 = !DILocation(line: 3433, column: 9, scope: !7495)
!7497 = !DILocation(line: 3433, column: 7, scope: !7495)
!7498 = !DILocation(line: 3433, column: 15, scope: !7499)
!7499 = distinct !DILexicalBlock(scope: !7495, file: !3, line: 3433, column: 2)
!7500 = !DILocation(line: 3433, column: 19, scope: !7499)
!7501 = !DILocation(line: 3433, column: 24, scope: !7499)
!7502 = !DILocation(line: 3433, column: 27, scope: !7499)
!7503 = !DILocation(line: 3433, column: 22, scope: !7499)
!7504 = !DILocation(line: 3433, column: 17, scope: !7499)
!7505 = !DILocation(line: 3433, column: 2, scope: !7495)
!7506 = !DILocation(line: 3434, column: 10, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7508, file: !3, line: 3434, column: 3)
!7508 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 3433, column: 42)
!7509 = !DILocation(line: 3434, column: 8, scope: !7507)
!7510 = !DILocation(line: 3434, column: 15, scope: !7511)
!7511 = distinct !DILexicalBlock(scope: !7507, file: !3, line: 3434, column: 3)
!7512 = !DILocation(line: 3434, column: 19, scope: !7511)
!7513 = !DILocation(line: 3434, column: 22, scope: !7511)
!7514 = !DILocation(line: 3434, column: 17, scope: !7511)
!7515 = !DILocation(line: 3434, column: 3, scope: !7507)
!7516 = !DILocation(line: 3435, column: 8, scope: !7517)
!7517 = distinct !DILexicalBlock(scope: !7511, file: !3, line: 3435, column: 8)
!7518 = !DILocation(line: 3435, column: 11, scope: !7517)
!7519 = !DILocation(line: 3435, column: 22, scope: !7517)
!7520 = !DILocation(line: 3435, column: 27, scope: !7517)
!7521 = !DILocation(line: 3435, column: 30, scope: !7517)
!7522 = !DILocation(line: 3435, column: 25, scope: !7517)
!7523 = !DILocation(line: 3435, column: 8, scope: !7511)
!7524 = !DILocation(line: 3436, column: 5, scope: !7525)
!7525 = distinct !DILexicalBlock(scope: !7517, file: !3, line: 3435, column: 40)
!7526 = !DILocation(line: 3437, column: 5, scope: !7525)
!7527 = !DILocation(line: 3434, column: 33, scope: !7511)
!7528 = !DILocation(line: 3434, column: 3, scope: !7511)
!7529 = distinct !{!7529, !7515, !7530}
!7530 = !DILocation(line: 3438, column: 4, scope: !7507)
!7531 = !DILocation(line: 3439, column: 7, scope: !7532)
!7532 = distinct !DILexicalBlock(scope: !7508, file: !3, line: 3439, column: 7)
!7533 = !DILocation(line: 3439, column: 10, scope: !7532)
!7534 = !DILocation(line: 3439, column: 21, scope: !7532)
!7535 = !DILocation(line: 3439, column: 18, scope: !7532)
!7536 = !DILocation(line: 3439, column: 29, scope: !7532)
!7537 = !DILocation(line: 3439, column: 32, scope: !7532)
!7538 = !DILocation(line: 3439, column: 35, scope: !7532)
!7539 = !DILocation(line: 3439, column: 44, scope: !7532)
!7540 = !DILocation(line: 3439, column: 7, scope: !7508)
!7541 = !DILocation(line: 3440, column: 7, scope: !7532)
!7542 = !DILocation(line: 3440, column: 4, scope: !7532)
!7543 = !DILocation(line: 3441, column: 2, scope: !7508)
!7544 = !DILocation(line: 3433, column: 38, scope: !7499)
!7545 = !DILocation(line: 3433, column: 2, scope: !7499)
!7546 = distinct !{!7546, !7505, !7547}
!7547 = !DILocation(line: 3441, column: 2, scope: !7495)
!7548 = !DILocation(line: 3442, column: 7, scope: !7549)
!7549 = distinct !DILexicalBlock(scope: !7360, file: !3, line: 3442, column: 6)
!7550 = !DILocation(line: 3442, column: 6, scope: !7360)
!7551 = !DILocation(line: 3443, column: 3, scope: !7552)
!7552 = distinct !DILexicalBlock(scope: !7549, file: !3, line: 3442, column: 12)
!7553 = !DILocation(line: 3444, column: 3, scope: !7552)
!7554 = !DILocation(line: 3447, column: 11, scope: !7555)
!7555 = distinct !DILexicalBlock(scope: !7360, file: !3, line: 3447, column: 2)
!7556 = !DILocation(line: 3447, column: 9, scope: !7555)
!7557 = !DILocation(line: 3447, column: 7, scope: !7555)
!7558 = !DILocation(line: 3447, column: 15, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7555, file: !3, line: 3447, column: 2)
!7560 = !DILocation(line: 3447, column: 19, scope: !7559)
!7561 = !DILocation(line: 3447, column: 24, scope: !7559)
!7562 = !DILocation(line: 3447, column: 27, scope: !7559)
!7563 = !DILocation(line: 3447, column: 22, scope: !7559)
!7564 = !DILocation(line: 3447, column: 17, scope: !7559)
!7565 = !DILocation(line: 3447, column: 2, scope: !7555)
!7566 = !DILocation(line: 3448, column: 7, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7559, file: !3, line: 3448, column: 7)
!7568 = !DILocation(line: 3448, column: 10, scope: !7567)
!7569 = !DILocation(line: 3448, column: 24, scope: !7567)
!7570 = !DILocation(line: 3448, column: 27, scope: !7567)
!7571 = !DILocation(line: 3448, column: 22, scope: !7567)
!7572 = !DILocation(line: 3448, column: 34, scope: !7567)
!7573 = !DILocation(line: 3448, column: 32, scope: !7567)
!7574 = !DILocation(line: 3448, column: 7, scope: !7559)
!7575 = !DILocation(line: 3449, column: 4, scope: !7576)
!7576 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 3448, column: 39)
!7577 = !DILocation(line: 3450, column: 4, scope: !7576)
!7578 = !DILocation(line: 3447, column: 38, scope: !7559)
!7579 = !DILocation(line: 3447, column: 2, scope: !7559)
!7580 = distinct !{!7580, !7565, !7581}
!7581 = !DILocation(line: 3451, column: 3, scope: !7555)
!7582 = !DILocation(line: 3454, column: 11, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7360, file: !3, line: 3454, column: 2)
!7584 = !DILocation(line: 3454, column: 9, scope: !7583)
!7585 = !DILocation(line: 3454, column: 7, scope: !7583)
!7586 = !DILocation(line: 3454, column: 15, scope: !7587)
!7587 = distinct !DILexicalBlock(scope: !7583, file: !3, line: 3454, column: 2)
!7588 = !DILocation(line: 3454, column: 19, scope: !7587)
!7589 = !DILocation(line: 3454, column: 24, scope: !7587)
!7590 = !DILocation(line: 3454, column: 27, scope: !7587)
!7591 = !DILocation(line: 3454, column: 22, scope: !7587)
!7592 = !DILocation(line: 3454, column: 17, scope: !7587)
!7593 = !DILocation(line: 3454, column: 2, scope: !7583)
!7594 = !DILocation(line: 3455, column: 7, scope: !7595)
!7595 = distinct !DILexicalBlock(scope: !7587, file: !3, line: 3455, column: 7)
!7596 = !DILocation(line: 3455, column: 10, scope: !7595)
!7597 = !DILocation(line: 3455, column: 21, scope: !7595)
!7598 = !DILocation(line: 3455, column: 18, scope: !7595)
!7599 = !DILocation(line: 3455, column: 29, scope: !7595)
!7600 = !DILocation(line: 3455, column: 32, scope: !7595)
!7601 = !DILocation(line: 3455, column: 35, scope: !7595)
!7602 = !DILocation(line: 3455, column: 44, scope: !7595)
!7603 = !DILocation(line: 3455, column: 7, scope: !7587)
!7604 = !DILocation(line: 3456, column: 4, scope: !7595)
!7605 = !DILocation(line: 3455, column: 47, scope: !7595)
!7606 = !DILocation(line: 3454, column: 38, scope: !7587)
!7607 = !DILocation(line: 3454, column: 2, scope: !7587)
!7608 = distinct !{!7608, !7593, !7609}
!7609 = !DILocation(line: 3456, column: 4, scope: !7583)
!7610 = !DILocation(line: 3458, column: 9, scope: !7611)
!7611 = distinct !DILexicalBlock(scope: !7360, file: !3, line: 3458, column: 2)
!7612 = !DILocation(line: 3458, column: 7, scope: !7611)
!7613 = !DILocation(line: 3458, column: 14, scope: !7614)
!7614 = distinct !DILexicalBlock(scope: !7611, file: !3, line: 3458, column: 2)
!7615 = !DILocation(line: 3458, column: 18, scope: !7614)
!7616 = !DILocation(line: 3458, column: 21, scope: !7614)
!7617 = !DILocation(line: 3458, column: 16, scope: !7614)
!7618 = !DILocation(line: 3458, column: 2, scope: !7611)
!7619 = !DILocation(line: 3459, column: 8, scope: !7620)
!7620 = distinct !DILexicalBlock(scope: !7614, file: !3, line: 3458, column: 36)
!7621 = !DILocation(line: 3459, column: 11, scope: !7620)
!7622 = !DILocation(line: 3459, column: 14, scope: !7620)
!7623 = !DILocation(line: 3459, column: 25, scope: !7620)
!7624 = !DILocation(line: 3459, column: 5, scope: !7620)
!7625 = !DILocation(line: 3460, column: 7, scope: !7626)
!7626 = distinct !DILexicalBlock(scope: !7620, file: !3, line: 3460, column: 7)
!7627 = !DILocation(line: 3460, column: 10, scope: !7626)
!7628 = !DILocation(line: 3460, column: 15, scope: !7626)
!7629 = !DILocation(line: 3460, column: 7, scope: !7620)
!7630 = !DILocation(line: 3461, column: 8, scope: !7631)
!7631 = distinct !DILexicalBlock(scope: !7632, file: !3, line: 3461, column: 8)
!7632 = distinct !DILexicalBlock(scope: !7626, file: !3, line: 3460, column: 31)
!7633 = !DILocation(line: 3461, column: 13, scope: !7631)
!7634 = !DILocation(line: 3461, column: 8, scope: !7632)
!7635 = !DILocation(line: 3462, column: 19, scope: !7631)
!7636 = !DILocation(line: 3462, column: 25, scope: !7631)
!7637 = !DILocation(line: 3462, column: 31, scope: !7631)
!7638 = !DILocation(line: 3462, column: 34, scope: !7631)
!7639 = !DILocation(line: 3462, column: 29, scope: !7631)
!7640 = !DILocation(line: 3463, column: 7, scope: !7631)
!7641 = !DILocation(line: 3463, column: 10, scope: !7631)
!7642 = !DILocation(line: 3462, column: 5, scope: !7631)
!7643 = !DILocation(line: 3464, column: 3, scope: !7632)
!7644 = !DILocation(line: 3465, column: 8, scope: !7645)
!7645 = distinct !DILexicalBlock(scope: !7646, file: !3, line: 3465, column: 8)
!7646 = distinct !DILexicalBlock(scope: !7626, file: !3, line: 3464, column: 10)
!7647 = !DILocation(line: 3465, column: 13, scope: !7645)
!7648 = !DILocation(line: 3465, column: 8, scope: !7646)
!7649 = !DILocation(line: 3466, column: 17, scope: !7645)
!7650 = !DILocation(line: 3466, column: 24, scope: !7645)
!7651 = !DILocation(line: 3466, column: 27, scope: !7645)
!7652 = !DILocation(line: 3466, column: 22, scope: !7645)
!7653 = !DILocation(line: 3467, column: 13, scope: !7645)
!7654 = !DILocation(line: 3467, column: 19, scope: !7645)
!7655 = !DILocation(line: 3467, column: 22, scope: !7645)
!7656 = !DILocation(line: 3467, column: 17, scope: !7645)
!7657 = !DILocation(line: 3467, column: 35, scope: !7645)
!7658 = !DILocation(line: 3467, column: 38, scope: !7645)
!7659 = !DILocation(line: 3466, column: 5, scope: !7645)
!7660 = !DILocation(line: 3469, column: 2, scope: !7620)
!7661 = !DILocation(line: 3458, column: 32, scope: !7614)
!7662 = !DILocation(line: 3458, column: 2, scope: !7614)
!7663 = distinct !{!7663, !7618, !7664}
!7664 = !DILocation(line: 3469, column: 2, scope: !7611)
!7665 = !DILocation(line: 3471, column: 2, scope: !7360)
!7666 = !DILocation(line: 3472, column: 1, scope: !7360)
!7667 = distinct !DISubprogram(name: "cyc_isfwstr", scope: !3, file: !3, line: 3353, type: !7668, scopeLine: 3354, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!7668 = !DISubroutineType(types: !7669)
!7669 = !{!139, !256, !7}
!7670 = !DILocalVariable(name: "str", arg: 1, scope: !7667, file: !3, line: 3353, type: !256)
!7671 = !DILocation(line: 3353, column: 43, scope: !7667)
!7672 = !DILocalVariable(name: "size", arg: 2, scope: !7667, file: !3, line: 3353, type: !7)
!7673 = !DILocation(line: 3353, column: 61, scope: !7667)
!7674 = !DILocalVariable(name: "a", scope: !7667, file: !3, line: 3355, type: !7)
!7675 = !DILocation(line: 3355, column: 15, scope: !7667)
!7676 = !DILocation(line: 3357, column: 9, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7667, file: !3, line: 3357, column: 2)
!7678 = !DILocation(line: 3357, column: 7, scope: !7677)
!7679 = !DILocation(line: 3357, column: 14, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7677, file: !3, line: 3357, column: 2)
!7681 = !DILocation(line: 3357, column: 18, scope: !7680)
!7682 = !DILocation(line: 3357, column: 16, scope: !7680)
!7683 = !DILocation(line: 3357, column: 23, scope: !7680)
!7684 = !DILocation(line: 3357, column: 27, scope: !7680)
!7685 = !DILocation(line: 3357, column: 26, scope: !7680)
!7686 = !DILocation(line: 0, scope: !7680)
!7687 = !DILocation(line: 3357, column: 2, scope: !7677)
!7688 = !DILocation(line: 3358, column: 8, scope: !7689)
!7689 = distinct !DILexicalBlock(scope: !7680, file: !3, line: 3358, column: 7)
!7690 = !DILocation(line: 3358, column: 7, scope: !7689)
!7691 = !DILocation(line: 3358, column: 12, scope: !7689)
!7692 = !DILocation(line: 3358, column: 7, scope: !7680)
!7693 = !DILocation(line: 3359, column: 4, scope: !7689)
!7694 = !DILocation(line: 3358, column: 14, scope: !7689)
!7695 = !DILocation(line: 3357, column: 33, scope: !7680)
!7696 = !DILocation(line: 3357, column: 40, scope: !7680)
!7697 = !DILocation(line: 3357, column: 2, scope: !7680)
!7698 = distinct !{!7698, !7687, !7699}
!7699 = !DILocation(line: 3359, column: 12, scope: !7677)
!7700 = !DILocation(line: 3361, column: 2, scope: !7667)
!7701 = !DILocation(line: 3361, column: 9, scope: !7702)
!7702 = distinct !DILexicalBlock(scope: !7703, file: !3, line: 3361, column: 2)
!7703 = distinct !DILexicalBlock(scope: !7667, file: !3, line: 3361, column: 2)
!7704 = !DILocation(line: 3361, column: 13, scope: !7702)
!7705 = !DILocation(line: 3361, column: 11, scope: !7702)
!7706 = !DILocation(line: 3361, column: 2, scope: !7703)
!7707 = !DILocation(line: 3362, column: 8, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7702, file: !3, line: 3362, column: 7)
!7709 = !DILocation(line: 3362, column: 7, scope: !7708)
!7710 = !DILocation(line: 3362, column: 7, scope: !7702)
!7711 = !DILocation(line: 3363, column: 4, scope: !7708)
!7712 = !DILocation(line: 3361, column: 20, scope: !7702)
!7713 = !DILocation(line: 3361, column: 27, scope: !7702)
!7714 = !DILocation(line: 3361, column: 2, scope: !7702)
!7715 = distinct !{!7715, !7706, !7716}
!7716 = !DILocation(line: 3363, column: 12, scope: !7703)
!7717 = !DILocation(line: 3365, column: 2, scope: !7667)
!7718 = !DILocation(line: 3366, column: 1, scope: !7667)
!7719 = distinct !DISubprogram(name: "cyz_fpga_copy", scope: !3, file: !3, line: 3368, type: !7720, scopeLine: 3370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!7720 = !DISubroutineType(types: !7721)
!7721 = !{null, !118, !6561, !7}
!7722 = !DILocalVariable(name: "fpga", arg: 1, scope: !7719, file: !3, line: 3368, type: !118)
!7723 = !DILocation(line: 3368, column: 48, scope: !7719)
!7724 = !DILocalVariable(name: "data", arg: 2, scope: !7719, file: !3, line: 3368, type: !6561)
!7725 = !DILocation(line: 3368, column: 64, scope: !7719)
!7726 = !DILocalVariable(name: "size", arg: 3, scope: !7719, file: !3, line: 3369, type: !7)
!7727 = !DILocation(line: 3369, column: 16, scope: !7719)
!7728 = !DILocation(line: 3371, column: 2, scope: !7719)
!7729 = !DILocation(line: 3371, column: 9, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7731, file: !3, line: 3371, column: 2)
!7731 = distinct !DILexicalBlock(scope: !7719, file: !3, line: 3371, column: 2)
!7732 = !DILocation(line: 3371, column: 14, scope: !7730)
!7733 = !DILocation(line: 3371, column: 2, scope: !7731)
!7734 = !DILocation(line: 3372, column: 3, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !7730, file: !3, line: 3371, column: 27)
!7736 = !DILocation(line: 3372, column: 3, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7735, file: !3, line: 3372, column: 3)
!7738 = !{i32 -2141372872}
!7739 = !DILocation(line: 3373, column: 3, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7741, file: !3, line: 3373, column: 3)
!7741 = distinct !DILexicalBlock(scope: !7742, file: !3, line: 3373, column: 3)
!7742 = distinct !DILexicalBlock(scope: !7743, file: !3, line: 3373, column: 3)
!7743 = distinct !DILexicalBlock(scope: !7735, file: !3, line: 3373, column: 3)
!7744 = !DILocation(line: 3374, column: 2, scope: !7735)
!7745 = !DILocation(line: 3371, column: 23, scope: !7730)
!7746 = !DILocation(line: 3371, column: 2, scope: !7730)
!7747 = distinct !{!7747, !7733, !7748}
!7748 = !DILocation(line: 3374, column: 2, scope: !7731)
!7749 = !DILocation(line: 3375, column: 1, scope: !7719)
!7750 = distinct !DISubprogram(name: "cyy_chip_rx", scope: !3, file: !3, line: 438, type: !7751, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!7751 = !DISubroutineType(types: !7752)
!7752 = !{null, !4229, !139, !118}
!7753 = !DILocalVariable(name: "cinfo", arg: 1, scope: !7750, file: !3, line: 438, type: !4229)
!7754 = !DILocation(line: 438, column: 47, scope: !7750)
!7755 = !DILocalVariable(name: "chip", arg: 2, scope: !7750, file: !3, line: 438, type: !139)
!7756 = !DILocation(line: 438, column: 58, scope: !7750)
!7757 = !DILocalVariable(name: "base_addr", arg: 3, scope: !7750, file: !3, line: 439, type: !118)
!7758 = !DILocation(line: 439, column: 17, scope: !7750)
!7759 = !DILocalVariable(name: "info", scope: !7750, file: !3, line: 441, type: !134)
!7760 = !DILocation(line: 441, column: 24, scope: !7750)
!7761 = !DILocalVariable(name: "port", scope: !7750, file: !3, line: 442, type: !3911)
!7762 = !DILocation(line: 442, column: 19, scope: !7750)
!7763 = !DILocalVariable(name: "len", scope: !7750, file: !3, line: 443, type: !139)
!7764 = !DILocation(line: 443, column: 6, scope: !7750)
!7765 = !DILocalVariable(name: "index", scope: !7750, file: !3, line: 443, type: !139)
!7766 = !DILocation(line: 443, column: 11, scope: !7750)
!7767 = !DILocation(line: 443, column: 19, scope: !7750)
!7768 = !DILocation(line: 443, column: 26, scope: !7750)
!7769 = !DILocalVariable(name: "ivr", scope: !7750, file: !3, line: 444, type: !1375)
!7770 = !DILocation(line: 444, column: 5, scope: !7750)
!7771 = !DILocalVariable(name: "save_xir", scope: !7750, file: !3, line: 444, type: !1375)
!7772 = !DILocation(line: 444, column: 10, scope: !7750)
!7773 = !DILocalVariable(name: "channel", scope: !7750, file: !3, line: 444, type: !1375)
!7774 = !DILocation(line: 444, column: 20, scope: !7750)
!7775 = !DILocalVariable(name: "save_car", scope: !7750, file: !3, line: 444, type: !1375)
!7776 = !DILocation(line: 444, column: 29, scope: !7750)
!7777 = !DILocalVariable(name: "data", scope: !7750, file: !3, line: 444, type: !1375)
!7778 = !DILocation(line: 444, column: 39, scope: !7750)
!7779 = !DILocalVariable(name: "char_count", scope: !7750, file: !3, line: 444, type: !1375)
!7780 = !DILocation(line: 444, column: 45, scope: !7750)
!7781 = !DILocation(line: 450, column: 19, scope: !7750)
!7782 = !DILocation(line: 450, column: 41, scope: !7750)
!7783 = !DILocation(line: 450, column: 38, scope: !7750)
!7784 = !DILocation(line: 450, column: 29, scope: !7750)
!7785 = !DILocation(line: 450, column: 13, scope: !7750)
!7786 = !DILocation(line: 450, column: 11, scope: !7750)
!7787 = !DILocation(line: 451, column: 12, scope: !7750)
!7788 = !DILocation(line: 451, column: 21, scope: !7750)
!7789 = !DILocation(line: 451, column: 10, scope: !7750)
!7790 = !DILocation(line: 452, column: 10, scope: !7750)
!7791 = !DILocation(line: 452, column: 17, scope: !7750)
!7792 = !DILocation(line: 452, column: 23, scope: !7750)
!7793 = !DILocation(line: 452, column: 33, scope: !7750)
!7794 = !DILocation(line: 452, column: 38, scope: !7750)
!7795 = !DILocation(line: 452, column: 31, scope: !7750)
!7796 = !DILocation(line: 452, column: 7, scope: !7750)
!7797 = !DILocation(line: 453, column: 10, scope: !7750)
!7798 = !DILocation(line: 453, column: 16, scope: !7750)
!7799 = !DILocation(line: 453, column: 7, scope: !7750)
!7800 = !DILocation(line: 454, column: 23, scope: !7750)
!7801 = !DILocation(line: 454, column: 13, scope: !7750)
!7802 = !DILocation(line: 454, column: 11, scope: !7750)
!7803 = !DILocation(line: 455, column: 13, scope: !7750)
!7804 = !DILocation(line: 455, column: 26, scope: !7750)
!7805 = !DILocation(line: 455, column: 2, scope: !7750)
!7806 = !DILocation(line: 456, column: 18, scope: !7750)
!7807 = !DILocation(line: 456, column: 8, scope: !7750)
!7808 = !DILocation(line: 456, column: 32, scope: !7750)
!7809 = !DILocation(line: 456, column: 6, scope: !7750)
!7810 = !DILocation(line: 459, column: 6, scope: !7811)
!7811 = distinct !DILexicalBlock(scope: !7750, file: !3, line: 459, column: 6)
!7812 = !DILocation(line: 459, column: 10, scope: !7811)
!7813 = !DILocation(line: 459, column: 6, scope: !7750)
!7814 = !DILocation(line: 460, column: 20, scope: !7815)
!7815 = distinct !DILexicalBlock(scope: !7811, file: !3, line: 459, column: 24)
!7816 = !DILocation(line: 460, column: 10, scope: !7815)
!7817 = !DILocation(line: 460, column: 8, scope: !7815)
!7818 = !DILocation(line: 463, column: 7, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !7815, file: !3, line: 463, column: 7)
!7820 = !DILocation(line: 463, column: 12, scope: !7819)
!7821 = !DILocation(line: 463, column: 7, scope: !7815)
!7822 = !DILocation(line: 464, column: 4, scope: !7819)
!7823 = !DILocation(line: 464, column: 10, scope: !7819)
!7824 = !DILocation(line: 464, column: 17, scope: !7819)
!7825 = !DILocation(line: 464, column: 20, scope: !7819)
!7826 = !DILocation(line: 465, column: 12, scope: !7827)
!7827 = distinct !DILexicalBlock(scope: !7819, file: !3, line: 465, column: 12)
!7828 = !DILocation(line: 465, column: 17, scope: !7827)
!7829 = !DILocation(line: 465, column: 12, scope: !7819)
!7830 = !DILocation(line: 466, column: 4, scope: !7827)
!7831 = !DILocation(line: 466, column: 10, scope: !7827)
!7832 = !DILocation(line: 466, column: 17, scope: !7827)
!7833 = !DILocation(line: 466, column: 22, scope: !7827)
!7834 = !DILocation(line: 467, column: 12, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7827, file: !3, line: 467, column: 12)
!7836 = !DILocation(line: 467, column: 17, scope: !7835)
!7837 = !DILocation(line: 467, column: 12, scope: !7827)
!7838 = !DILocation(line: 468, column: 4, scope: !7835)
!7839 = !DILocation(line: 468, column: 10, scope: !7835)
!7840 = !DILocation(line: 468, column: 17, scope: !7835)
!7841 = !DILocation(line: 468, column: 23, scope: !7835)
!7842 = !DILocation(line: 469, column: 12, scope: !7843)
!7843 = distinct !DILexicalBlock(scope: !7835, file: !3, line: 469, column: 12)
!7844 = !DILocation(line: 469, column: 17, scope: !7843)
!7845 = !DILocation(line: 469, column: 12, scope: !7835)
!7846 = !DILocation(line: 470, column: 4, scope: !7843)
!7847 = !DILocation(line: 470, column: 10, scope: !7843)
!7848 = !DILocation(line: 470, column: 17, scope: !7843)
!7849 = !DILocation(line: 470, column: 24, scope: !7843)
!7850 = !DILocation(line: 472, column: 7, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7815, file: !3, line: 472, column: 7)
!7852 = !DILocation(line: 472, column: 14, scope: !7851)
!7853 = !DILocation(line: 472, column: 20, scope: !7851)
!7854 = !DILocation(line: 472, column: 12, scope: !7851)
!7855 = !DILocation(line: 472, column: 7, scope: !7815)
!7856 = !DILocation(line: 473, column: 4, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !7851, file: !3, line: 472, column: 40)
!7858 = !DILocation(line: 473, column: 10, scope: !7857)
!7859 = !DILocation(line: 473, column: 17, scope: !7857)
!7860 = !DILocation(line: 473, column: 19, scope: !7857)
!7861 = !DILocation(line: 474, column: 4, scope: !7857)
!7862 = !DILocation(line: 476, column: 31, scope: !7863)
!7863 = distinct !DILexicalBlock(scope: !7815, file: !3, line: 476, column: 7)
!7864 = !DILocation(line: 476, column: 7, scope: !7863)
!7865 = !DILocation(line: 476, column: 7, scope: !7815)
!7866 = !DILocation(line: 477, column: 8, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !7868, file: !3, line: 477, column: 8)
!7868 = distinct !DILexicalBlock(scope: !7863, file: !3, line: 476, column: 41)
!7869 = !DILocation(line: 477, column: 15, scope: !7867)
!7870 = !DILocation(line: 477, column: 21, scope: !7867)
!7871 = !DILocation(line: 477, column: 13, scope: !7867)
!7872 = !DILocation(line: 477, column: 8, scope: !7868)
!7873 = !DILocation(line: 478, column: 9, scope: !7874)
!7874 = distinct !DILexicalBlock(scope: !7875, file: !3, line: 478, column: 9)
!7875 = distinct !DILexicalBlock(scope: !7867, file: !3, line: 477, column: 39)
!7876 = !DILocation(line: 478, column: 14, scope: !7874)
!7877 = !DILocation(line: 478, column: 9, scope: !7875)
!7878 = !DILocation(line: 479, column: 27, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 478, column: 25)
!7880 = !DILocation(line: 480, column: 17, scope: !7879)
!7881 = !DILocation(line: 480, column: 7, scope: !7879)
!7882 = !DILocation(line: 479, column: 6, scope: !7879)
!7883 = !DILocation(line: 482, column: 6, scope: !7879)
!7884 = !DILocation(line: 482, column: 12, scope: !7879)
!7885 = !DILocation(line: 482, column: 19, scope: !7879)
!7886 = !DILocation(line: 482, column: 21, scope: !7879)
!7887 = !DILocation(line: 483, column: 10, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7879, file: !3, line: 483, column: 10)
!7889 = !DILocation(line: 483, column: 16, scope: !7888)
!7890 = !DILocation(line: 483, column: 22, scope: !7888)
!7891 = !DILocation(line: 483, column: 10, scope: !7879)
!7892 = !DILocalVariable(name: "tty", scope: !7893, file: !3, line: 484, type: !233)
!7893 = distinct !DILexicalBlock(scope: !7888, file: !3, line: 483, column: 35)
!7894 = !DILocation(line: 484, column: 26, scope: !7893)
!7895 = !DILocation(line: 485, column: 25, scope: !7893)
!7896 = !DILocation(line: 485, column: 8, scope: !7893)
!7897 = !DILocation(line: 486, column: 11, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7893, file: !3, line: 486, column: 11)
!7899 = !DILocation(line: 486, column: 11, scope: !7893)
!7900 = !DILocation(line: 487, column: 15, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7898, file: !3, line: 486, column: 16)
!7902 = !DILocation(line: 487, column: 8, scope: !7901)
!7903 = !DILocation(line: 488, column: 21, scope: !7901)
!7904 = !DILocation(line: 488, column: 8, scope: !7901)
!7905 = !DILocation(line: 489, column: 7, scope: !7901)
!7906 = !DILocation(line: 490, column: 6, scope: !7893)
!7907 = !DILocation(line: 491, column: 5, scope: !7879)
!7908 = !DILocation(line: 491, column: 16, scope: !7909)
!7909 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 491, column: 16)
!7910 = !DILocation(line: 491, column: 21, scope: !7909)
!7911 = !DILocation(line: 491, column: 16, scope: !7874)
!7912 = !DILocation(line: 492, column: 27, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7909, file: !3, line: 491, column: 32)
!7914 = !DILocation(line: 493, column: 17, scope: !7913)
!7915 = !DILocation(line: 493, column: 7, scope: !7913)
!7916 = !DILocation(line: 492, column: 6, scope: !7913)
!7917 = !DILocation(line: 495, column: 6, scope: !7913)
!7918 = !DILocation(line: 495, column: 12, scope: !7913)
!7919 = !DILocation(line: 495, column: 19, scope: !7913)
!7920 = !DILocation(line: 495, column: 21, scope: !7913)
!7921 = !DILocation(line: 496, column: 6, scope: !7913)
!7922 = !DILocation(line: 496, column: 12, scope: !7913)
!7923 = !DILocation(line: 496, column: 23, scope: !7913)
!7924 = !DILocation(line: 496, column: 33, scope: !7913)
!7925 = !DILocation(line: 497, column: 5, scope: !7913)
!7926 = !DILocation(line: 497, column: 16, scope: !7927)
!7927 = distinct !DILexicalBlock(scope: !7909, file: !3, line: 497, column: 16)
!7928 = !DILocation(line: 497, column: 21, scope: !7927)
!7929 = !DILocation(line: 497, column: 16, scope: !7909)
!7930 = !DILocation(line: 499, column: 27, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7927, file: !3, line: 497, column: 33)
!7932 = !DILocation(line: 500, column: 17, scope: !7931)
!7933 = !DILocation(line: 500, column: 7, scope: !7931)
!7934 = !DILocation(line: 499, column: 6, scope: !7931)
!7935 = !DILocation(line: 502, column: 6, scope: !7931)
!7936 = !DILocation(line: 502, column: 12, scope: !7931)
!7937 = !DILocation(line: 502, column: 19, scope: !7931)
!7938 = !DILocation(line: 502, column: 21, scope: !7931)
!7939 = !DILocation(line: 503, column: 6, scope: !7931)
!7940 = !DILocation(line: 503, column: 12, scope: !7931)
!7941 = !DILocation(line: 503, column: 23, scope: !7931)
!7942 = !DILocation(line: 503, column: 34, scope: !7931)
!7943 = !DILocation(line: 504, column: 5, scope: !7931)
!7944 = !DILocation(line: 504, column: 16, scope: !7945)
!7945 = distinct !DILexicalBlock(scope: !7927, file: !3, line: 504, column: 16)
!7946 = !DILocation(line: 504, column: 21, scope: !7945)
!7947 = !DILocation(line: 504, column: 16, scope: !7927)
!7948 = !DILocation(line: 505, column: 27, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7945, file: !3, line: 504, column: 34)
!7950 = !DILocation(line: 505, column: 6, scope: !7949)
!7951 = !DILocation(line: 507, column: 6, scope: !7949)
!7952 = !DILocation(line: 507, column: 12, scope: !7949)
!7953 = !DILocation(line: 507, column: 19, scope: !7949)
!7954 = !DILocation(line: 507, column: 21, scope: !7949)
!7955 = !DILocation(line: 512, column: 27, scope: !7949)
!7956 = !DILocation(line: 513, column: 17, scope: !7949)
!7957 = !DILocation(line: 513, column: 7, scope: !7949)
!7958 = !DILocation(line: 512, column: 6, scope: !7949)
!7959 = !DILocation(line: 515, column: 6, scope: !7949)
!7960 = !DILocation(line: 515, column: 12, scope: !7949)
!7961 = !DILocation(line: 515, column: 19, scope: !7949)
!7962 = !DILocation(line: 515, column: 21, scope: !7949)
!7963 = !DILocation(line: 516, column: 6, scope: !7949)
!7964 = !DILocation(line: 516, column: 12, scope: !7949)
!7965 = !DILocation(line: 516, column: 23, scope: !7949)
!7966 = !DILocation(line: 516, column: 31, scope: !7949)
!7967 = !DILocation(line: 521, column: 5, scope: !7949)
!7968 = !DILocation(line: 522, column: 27, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7945, file: !3, line: 521, column: 12)
!7970 = !DILocation(line: 522, column: 6, scope: !7969)
!7971 = !DILocation(line: 524, column: 6, scope: !7969)
!7972 = !DILocation(line: 524, column: 12, scope: !7969)
!7973 = !DILocation(line: 524, column: 19, scope: !7969)
!7974 = !DILocation(line: 524, column: 21, scope: !7969)
!7975 = !DILocation(line: 526, column: 4, scope: !7875)
!7976 = !DILocation(line: 527, column: 26, scope: !7977)
!7977 = distinct !DILexicalBlock(scope: !7867, file: !3, line: 526, column: 11)
!7978 = !DILocation(line: 527, column: 5, scope: !7977)
!7979 = !DILocation(line: 528, column: 5, scope: !7977)
!7980 = !DILocation(line: 528, column: 11, scope: !7977)
!7981 = !DILocation(line: 528, column: 18, scope: !7977)
!7982 = !DILocation(line: 528, column: 20, scope: !7977)
!7983 = !DILocation(line: 530, column: 3, scope: !7868)
!7984 = !DILocation(line: 533, column: 4, scope: !7985)
!7985 = distinct !DILexicalBlock(scope: !7863, file: !3, line: 530, column: 10)
!7986 = !DILocation(line: 533, column: 10, scope: !7985)
!7987 = !DILocation(line: 533, column: 17, scope: !7985)
!7988 = !DILocation(line: 533, column: 28, scope: !7985)
!7989 = !DILocation(line: 534, column: 4, scope: !7985)
!7990 = !DILocation(line: 534, column: 10, scope: !7985)
!7991 = !DILocation(line: 534, column: 21, scope: !7985)
!7992 = !DILocation(line: 534, column: 29, scope: !7985)
!7993 = !DILocation(line: 536, column: 2, scope: !7815)
!7994 = !DILocation(line: 538, column: 26, scope: !7995)
!7995 = distinct !DILexicalBlock(scope: !7811, file: !3, line: 536, column: 9)
!7996 = !DILocation(line: 538, column: 16, scope: !7995)
!7997 = !DILocation(line: 538, column: 14, scope: !7995)
!7998 = !DILocation(line: 547, column: 33, scope: !7995)
!7999 = !DILocation(line: 547, column: 39, scope: !7995)
!8000 = !DILocation(line: 547, column: 9, scope: !7995)
!8001 = !DILocation(line: 547, column: 7, scope: !7995)
!8002 = !DILocation(line: 548, column: 3, scope: !7995)
!8003 = !DILocation(line: 548, column: 13, scope: !7995)
!8004 = !DILocation(line: 549, column: 21, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !7995, file: !3, line: 548, column: 17)
!8006 = !DILocation(line: 549, column: 11, scope: !8005)
!8007 = !DILocation(line: 549, column: 9, scope: !8005)
!8008 = !DILocation(line: 550, column: 25, scope: !8005)
!8009 = !DILocation(line: 550, column: 31, scope: !8005)
!8010 = !DILocation(line: 550, column: 4, scope: !8005)
!8011 = !DILocation(line: 551, column: 4, scope: !8005)
!8012 = !DILocation(line: 551, column: 10, scope: !8005)
!8013 = !DILocation(line: 551, column: 21, scope: !8005)
!8014 = !DILocation(line: 551, column: 31, scope: !8005)
!8015 = !DILocation(line: 552, column: 4, scope: !8005)
!8016 = !DILocation(line: 552, column: 10, scope: !8005)
!8017 = !DILocation(line: 552, column: 17, scope: !8005)
!8018 = !DILocation(line: 552, column: 19, scope: !8005)
!8019 = distinct !{!8019, !8002, !8020}
!8020 = !DILocation(line: 556, column: 3, scope: !7995)
!8021 = !DILocation(line: 557, column: 32, scope: !7995)
!8022 = !DILocation(line: 557, column: 3, scope: !7995)
!8023 = !DILocation(line: 557, column: 9, scope: !7995)
!8024 = !DILocation(line: 557, column: 20, scope: !7995)
!8025 = !DILocation(line: 557, column: 30, scope: !7995)
!8026 = !DILocation(line: 559, column: 20, scope: !7750)
!8027 = !DILocation(line: 559, column: 2, scope: !7750)
!8028 = !DILocation(line: 562, column: 13, scope: !7750)
!8029 = !DILocation(line: 562, column: 26, scope: !7750)
!8030 = !DILocation(line: 562, column: 35, scope: !7750)
!8031 = !DILocation(line: 562, column: 2, scope: !7750)
!8032 = !DILocation(line: 563, column: 13, scope: !7750)
!8033 = !DILocation(line: 563, column: 26, scope: !7750)
!8034 = !DILocation(line: 563, column: 2, scope: !7750)
!8035 = !DILocation(line: 564, column: 1, scope: !7750)
!8036 = distinct !DISubprogram(name: "cyy_chip_tx", scope: !3, file: !3, line: 566, type: !8037, scopeLine: 568, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!8037 = !DISubroutineType(types: !8038)
!8038 = !{null, !4229, !7, !118}
!8039 = !DILocalVariable(name: "cinfo", arg: 1, scope: !8036, file: !3, line: 566, type: !4229)
!8040 = !DILocation(line: 566, column: 47, scope: !8036)
!8041 = !DILocalVariable(name: "chip", arg: 2, scope: !8036, file: !3, line: 566, type: !7)
!8042 = !DILocation(line: 566, column: 67, scope: !8036)
!8043 = !DILocalVariable(name: "base_addr", arg: 3, scope: !8036, file: !3, line: 567, type: !118)
!8044 = !DILocation(line: 567, column: 17, scope: !8036)
!8045 = !DILocalVariable(name: "info", scope: !8036, file: !3, line: 569, type: !134)
!8046 = !DILocation(line: 569, column: 24, scope: !8036)
!8047 = !DILocalVariable(name: "tty", scope: !8036, file: !3, line: 570, type: !233)
!8048 = !DILocation(line: 570, column: 21, scope: !8036)
!8049 = !DILocalVariable(name: "char_count", scope: !8036, file: !3, line: 571, type: !139)
!8050 = !DILocation(line: 571, column: 6, scope: !8036)
!8051 = !DILocalVariable(name: "index", scope: !8036, file: !3, line: 571, type: !139)
!8052 = !DILocation(line: 571, column: 18, scope: !8036)
!8053 = !DILocation(line: 571, column: 26, scope: !8036)
!8054 = !DILocation(line: 571, column: 33, scope: !8036)
!8055 = !DILocalVariable(name: "save_xir", scope: !8036, file: !3, line: 572, type: !1375)
!8056 = !DILocation(line: 572, column: 5, scope: !8036)
!8057 = !DILocalVariable(name: "channel", scope: !8036, file: !3, line: 572, type: !1375)
!8058 = !DILocation(line: 572, column: 15, scope: !8036)
!8059 = !DILocalVariable(name: "save_car", scope: !8036, file: !3, line: 572, type: !1375)
!8060 = !DILocation(line: 572, column: 24, scope: !8036)
!8061 = !DILocalVariable(name: "outch", scope: !8036, file: !3, line: 572, type: !1375)
!8062 = !DILocation(line: 572, column: 34, scope: !8036)
!8063 = !DILocation(line: 582, column: 19, scope: !8036)
!8064 = !DILocation(line: 582, column: 41, scope: !8036)
!8065 = !DILocation(line: 582, column: 38, scope: !8036)
!8066 = !DILocation(line: 582, column: 29, scope: !8036)
!8067 = !DILocation(line: 582, column: 13, scope: !8036)
!8068 = !DILocation(line: 582, column: 11, scope: !8036)
!8069 = !DILocation(line: 583, column: 12, scope: !8036)
!8070 = !DILocation(line: 583, column: 21, scope: !8036)
!8071 = !DILocation(line: 583, column: 10, scope: !8036)
!8072 = !DILocation(line: 584, column: 19, scope: !8036)
!8073 = !DILocation(line: 584, column: 41, scope: !8036)
!8074 = !DILocation(line: 584, column: 38, scope: !8036)
!8075 = !DILocation(line: 584, column: 29, scope: !8036)
!8076 = !DILocation(line: 584, column: 13, scope: !8036)
!8077 = !DILocation(line: 584, column: 11, scope: !8036)
!8078 = !DILocation(line: 585, column: 2, scope: !8036)
!8079 = !DILocation(line: 585, column: 2, scope: !8080)
!8080 = distinct !DILexicalBlock(scope: !8036, file: !3, line: 585, column: 2)
!8081 = !{i32 -2141446191}
!8082 = !DILocation(line: 587, column: 10, scope: !8036)
!8083 = !DILocation(line: 587, column: 17, scope: !8036)
!8084 = !DILocation(line: 587, column: 23, scope: !8036)
!8085 = !DILocation(line: 587, column: 33, scope: !8036)
!8086 = !DILocation(line: 587, column: 38, scope: !8036)
!8087 = !DILocation(line: 587, column: 31, scope: !8036)
!8088 = !DILocation(line: 587, column: 7, scope: !8036)
!8089 = !DILocation(line: 588, column: 26, scope: !8036)
!8090 = !DILocation(line: 588, column: 32, scope: !8036)
!8091 = !DILocation(line: 588, column: 8, scope: !8036)
!8092 = !DILocation(line: 588, column: 6, scope: !8036)
!8093 = !DILocation(line: 589, column: 6, scope: !8094)
!8094 = distinct !DILexicalBlock(scope: !8036, file: !3, line: 589, column: 6)
!8095 = !DILocation(line: 589, column: 10, scope: !8094)
!8096 = !DILocation(line: 589, column: 6, scope: !8036)
!8097 = !DILocation(line: 590, column: 14, scope: !8098)
!8098 = distinct !DILexicalBlock(scope: !8094, file: !3, line: 589, column: 19)
!8099 = !DILocation(line: 590, column: 38, scope: !8098)
!8100 = !DILocation(line: 590, column: 28, scope: !8098)
!8101 = !DILocation(line: 590, column: 52, scope: !8098)
!8102 = !DILocation(line: 590, column: 3, scope: !8098)
!8103 = !DILocation(line: 591, column: 3, scope: !8098)
!8104 = !DILocation(line: 595, column: 15, scope: !8036)
!8105 = !DILocation(line: 595, column: 21, scope: !8036)
!8106 = !DILocation(line: 595, column: 13, scope: !8036)
!8107 = !DILocation(line: 597, column: 6, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8036, file: !3, line: 597, column: 6)
!8109 = !DILocation(line: 597, column: 12, scope: !8108)
!8110 = !DILocation(line: 597, column: 6, scope: !8036)
!8111 = !DILocation(line: 598, column: 11, scope: !8112)
!8112 = distinct !DILexicalBlock(scope: !8108, file: !3, line: 597, column: 20)
!8113 = !DILocation(line: 598, column: 17, scope: !8112)
!8114 = !DILocation(line: 598, column: 9, scope: !8112)
!8115 = !DILocation(line: 599, column: 14, scope: !8112)
!8116 = !DILocation(line: 599, column: 27, scope: !8112)
!8117 = !DILocation(line: 599, column: 3, scope: !8112)
!8118 = !DILocation(line: 600, column: 13, scope: !8112)
!8119 = !DILocation(line: 601, column: 3, scope: !8112)
!8120 = !DILocation(line: 601, column: 9, scope: !8112)
!8121 = !DILocation(line: 601, column: 16, scope: !8112)
!8122 = !DILocation(line: 601, column: 18, scope: !8112)
!8123 = !DILocation(line: 602, column: 3, scope: !8112)
!8124 = !DILocation(line: 602, column: 9, scope: !8112)
!8125 = !DILocation(line: 602, column: 16, scope: !8112)
!8126 = !DILocation(line: 603, column: 2, scope: !8112)
!8127 = !DILocation(line: 605, column: 6, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8036, file: !3, line: 605, column: 6)
!8129 = !DILocation(line: 605, column: 12, scope: !8128)
!8130 = !DILocation(line: 605, column: 20, scope: !8128)
!8131 = !DILocation(line: 605, column: 23, scope: !8128)
!8132 = !DILocation(line: 605, column: 29, scope: !8128)
!8133 = !DILocation(line: 605, column: 6, scope: !8036)
!8134 = !DILocation(line: 606, column: 7, scope: !8135)
!8135 = distinct !DILexicalBlock(scope: !8136, file: !3, line: 606, column: 7)
!8136 = distinct !DILexicalBlock(scope: !8128, file: !3, line: 605, column: 39)
!8137 = !DILocation(line: 606, column: 13, scope: !8135)
!8138 = !DILocation(line: 606, column: 7, scope: !8136)
!8139 = !DILocation(line: 607, column: 15, scope: !8140)
!8140 = distinct !DILexicalBlock(scope: !8135, file: !3, line: 606, column: 22)
!8141 = !DILocation(line: 607, column: 4, scope: !8140)
!8142 = !DILocation(line: 608, column: 15, scope: !8140)
!8143 = !DILocation(line: 608, column: 4, scope: !8140)
!8144 = !DILocation(line: 609, column: 4, scope: !8140)
!8145 = !DILocation(line: 609, column: 10, scope: !8140)
!8146 = !DILocation(line: 609, column: 18, scope: !8140)
!8147 = !DILocation(line: 610, column: 15, scope: !8140)
!8148 = !DILocation(line: 611, column: 3, scope: !8140)
!8149 = !DILocation(line: 612, column: 7, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !8136, file: !3, line: 612, column: 7)
!8151 = !DILocation(line: 612, column: 13, scope: !8150)
!8152 = !DILocation(line: 612, column: 7, scope: !8136)
!8153 = !DILocation(line: 613, column: 15, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !8150, file: !3, line: 612, column: 23)
!8155 = !DILocation(line: 613, column: 4, scope: !8154)
!8156 = !DILocation(line: 614, column: 15, scope: !8154)
!8157 = !DILocation(line: 614, column: 4, scope: !8154)
!8158 = !DILocation(line: 615, column: 4, scope: !8154)
!8159 = !DILocation(line: 615, column: 10, scope: !8154)
!8160 = !DILocation(line: 615, column: 19, scope: !8154)
!8161 = !DILocation(line: 616, column: 15, scope: !8154)
!8162 = !DILocation(line: 617, column: 3, scope: !8154)
!8163 = !DILocation(line: 618, column: 2, scope: !8136)
!8164 = !DILocation(line: 620, column: 2, scope: !8036)
!8165 = !DILocation(line: 620, column: 19, scope: !8036)
!8166 = !DILocation(line: 620, column: 22, scope: !8036)
!8167 = !DILocation(line: 621, column: 8, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8169, file: !3, line: 621, column: 7)
!8169 = distinct !DILexicalBlock(scope: !8036, file: !3, line: 620, column: 27)
!8170 = !DILocation(line: 621, column: 14, scope: !8168)
!8171 = !DILocation(line: 621, column: 7, scope: !8169)
!8172 = !DILocation(line: 622, column: 18, scope: !8173)
!8173 = distinct !DILexicalBlock(scope: !8174, file: !3, line: 622, column: 8)
!8174 = distinct !DILexicalBlock(scope: !8168, file: !3, line: 621, column: 24)
!8175 = !DILocation(line: 622, column: 8, scope: !8173)
!8176 = !DILocation(line: 622, column: 32, scope: !8173)
!8177 = !DILocation(line: 622, column: 8, scope: !8174)
!8178 = !DILocation(line: 623, column: 16, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 622, column: 44)
!8180 = !DILocation(line: 624, column: 16, scope: !8179)
!8181 = !DILocation(line: 624, column: 6, scope: !8179)
!8182 = !DILocation(line: 624, column: 30, scope: !8179)
!8183 = !DILocation(line: 623, column: 5, scope: !8179)
!8184 = !DILocation(line: 625, column: 4, scope: !8179)
!8185 = !DILocation(line: 626, column: 16, scope: !8186)
!8186 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 625, column: 11)
!8187 = !DILocation(line: 627, column: 17, scope: !8186)
!8188 = !DILocation(line: 627, column: 7, scope: !8186)
!8189 = !DILocation(line: 627, column: 31, scope: !8186)
!8190 = !DILocation(line: 626, column: 39, scope: !8186)
!8191 = !DILocation(line: 626, column: 30, scope: !8186)
!8192 = !DILocation(line: 626, column: 5, scope: !8186)
!8193 = !DILocation(line: 629, column: 4, scope: !8174)
!8194 = !DILocation(line: 631, column: 7, scope: !8195)
!8195 = distinct !DILexicalBlock(scope: !8169, file: !3, line: 631, column: 7)
!8196 = !DILocation(line: 631, column: 13, scope: !8195)
!8197 = !DILocation(line: 631, column: 18, scope: !8195)
!8198 = !DILocation(line: 631, column: 27, scope: !8195)
!8199 = !DILocation(line: 631, column: 7, scope: !8169)
!8200 = !DILocation(line: 632, column: 15, scope: !8201)
!8201 = distinct !DILexicalBlock(scope: !8195, file: !3, line: 631, column: 36)
!8202 = !DILocation(line: 633, column: 15, scope: !8201)
!8203 = !DILocation(line: 633, column: 5, scope: !8201)
!8204 = !DILocation(line: 633, column: 29, scope: !8201)
!8205 = !DILocation(line: 632, column: 4, scope: !8201)
!8206 = !DILocation(line: 634, column: 4, scope: !8201)
!8207 = !DILocation(line: 636, column: 7, scope: !8208)
!8208 = distinct !DILexicalBlock(scope: !8169, file: !3, line: 636, column: 7)
!8209 = !DILocation(line: 636, column: 12, scope: !8208)
!8210 = !DILocation(line: 636, column: 20, scope: !8208)
!8211 = !DILocation(line: 636, column: 23, scope: !8208)
!8212 = !DILocation(line: 636, column: 28, scope: !8208)
!8213 = !DILocation(line: 636, column: 7, scope: !8169)
!8214 = !DILocation(line: 637, column: 15, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8208, file: !3, line: 636, column: 40)
!8216 = !DILocation(line: 638, column: 15, scope: !8215)
!8217 = !DILocation(line: 638, column: 5, scope: !8215)
!8218 = !DILocation(line: 638, column: 29, scope: !8215)
!8219 = !DILocation(line: 637, column: 4, scope: !8215)
!8220 = !DILocation(line: 639, column: 4, scope: !8215)
!8221 = !DILocation(line: 650, column: 11, scope: !8169)
!8222 = !DILocation(line: 650, column: 17, scope: !8169)
!8223 = !DILocation(line: 650, column: 22, scope: !8169)
!8224 = !DILocation(line: 650, column: 31, scope: !8169)
!8225 = !DILocation(line: 650, column: 37, scope: !8169)
!8226 = !DILocation(line: 650, column: 9, scope: !8169)
!8227 = !DILocation(line: 651, column: 7, scope: !8228)
!8228 = distinct !DILexicalBlock(scope: !8169, file: !3, line: 651, column: 7)
!8229 = !DILocation(line: 651, column: 7, scope: !8169)
!8230 = !DILocation(line: 652, column: 4, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !8228, file: !3, line: 651, column: 14)
!8232 = !DILocation(line: 652, column: 10, scope: !8231)
!8233 = !DILocation(line: 652, column: 18, scope: !8231)
!8234 = !DILocation(line: 653, column: 23, scope: !8231)
!8235 = !DILocation(line: 653, column: 29, scope: !8231)
!8236 = !DILocation(line: 653, column: 39, scope: !8231)
!8237 = !DILocation(line: 653, column: 22, scope: !8231)
!8238 = !DILocation(line: 653, column: 44, scope: !8231)
!8239 = !DILocation(line: 653, column: 4, scope: !8231)
!8240 = !DILocation(line: 653, column: 10, scope: !8231)
!8241 = !DILocation(line: 653, column: 20, scope: !8231)
!8242 = !DILocation(line: 655, column: 15, scope: !8231)
!8243 = !DILocation(line: 655, column: 28, scope: !8231)
!8244 = !DILocation(line: 655, column: 4, scope: !8231)
!8245 = !DILocation(line: 656, column: 4, scope: !8231)
!8246 = !DILocation(line: 656, column: 10, scope: !8231)
!8247 = !DILocation(line: 656, column: 17, scope: !8231)
!8248 = !DILocation(line: 656, column: 19, scope: !8231)
!8249 = !DILocation(line: 657, column: 3, scope: !8231)
!8250 = !DILocation(line: 658, column: 8, scope: !8251)
!8251 = distinct !DILexicalBlock(scope: !8252, file: !3, line: 658, column: 8)
!8252 = distinct !DILexicalBlock(scope: !8228, file: !3, line: 657, column: 10)
!8253 = !DILocation(line: 658, column: 19, scope: !8251)
!8254 = !DILocation(line: 658, column: 8, scope: !8252)
!8255 = !DILocation(line: 659, column: 5, scope: !8256)
!8256 = distinct !DILexicalBlock(scope: !8251, file: !3, line: 658, column: 24)
!8257 = !DILocation(line: 659, column: 11, scope: !8256)
!8258 = !DILocation(line: 659, column: 19, scope: !8256)
!8259 = !DILocation(line: 660, column: 24, scope: !8256)
!8260 = !DILocation(line: 660, column: 30, scope: !8256)
!8261 = !DILocation(line: 660, column: 40, scope: !8256)
!8262 = !DILocation(line: 660, column: 23, scope: !8256)
!8263 = !DILocation(line: 660, column: 45, scope: !8256)
!8264 = !DILocation(line: 660, column: 5, scope: !8256)
!8265 = !DILocation(line: 660, column: 11, scope: !8256)
!8266 = !DILocation(line: 660, column: 21, scope: !8256)
!8267 = !DILocation(line: 662, column: 16, scope: !8256)
!8268 = !DILocation(line: 662, column: 29, scope: !8256)
!8269 = !DILocation(line: 662, column: 5, scope: !8256)
!8270 = !DILocation(line: 663, column: 16, scope: !8256)
!8271 = !DILocation(line: 663, column: 5, scope: !8256)
!8272 = !DILocation(line: 664, column: 5, scope: !8256)
!8273 = !DILocation(line: 664, column: 11, scope: !8256)
!8274 = !DILocation(line: 664, column: 18, scope: !8256)
!8275 = !DILocation(line: 664, column: 20, scope: !8256)
!8276 = !DILocation(line: 665, column: 15, scope: !8256)
!8277 = !DILocation(line: 666, column: 4, scope: !8256)
!8278 = distinct !{!8278, !8164, !8279}
!8279 = !DILocation(line: 668, column: 2, scope: !8036)
!8280 = !DILabel(scope: !8036, name: "done", file: !3, line: 670)
!8281 = !DILocation(line: 670, column: 1, scope: !8036)
!8282 = !DILocation(line: 671, column: 13, scope: !8036)
!8283 = !DILocation(line: 671, column: 2, scope: !8036)
!8284 = !DILocation(line: 672, column: 15, scope: !8036)
!8285 = !DILocation(line: 672, column: 2, scope: !8036)
!8286 = !DILabel(scope: !8036, name: "end", file: !3, line: 673)
!8287 = !DILocation(line: 673, column: 1, scope: !8036)
!8288 = !DILocation(line: 675, column: 13, scope: !8036)
!8289 = !DILocation(line: 675, column: 26, scope: !8036)
!8290 = !DILocation(line: 675, column: 35, scope: !8036)
!8291 = !DILocation(line: 675, column: 2, scope: !8036)
!8292 = !DILocation(line: 676, column: 13, scope: !8036)
!8293 = !DILocation(line: 676, column: 26, scope: !8036)
!8294 = !DILocation(line: 676, column: 2, scope: !8036)
!8295 = !DILocation(line: 677, column: 1, scope: !8036)
!8296 = distinct !DISubprogram(name: "cyy_chip_modem", scope: !3, file: !3, line: 679, type: !7751, scopeLine: 681, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!8297 = !DILocalVariable(name: "cinfo", arg: 1, scope: !8296, file: !3, line: 679, type: !4229)
!8298 = !DILocation(line: 679, column: 50, scope: !8296)
!8299 = !DILocalVariable(name: "chip", arg: 2, scope: !8296, file: !3, line: 679, type: !139)
!8300 = !DILocation(line: 679, column: 61, scope: !8296)
!8301 = !DILocalVariable(name: "base_addr", arg: 3, scope: !8296, file: !3, line: 680, type: !118)
!8302 = !DILocation(line: 680, column: 17, scope: !8296)
!8303 = !DILocalVariable(name: "info", scope: !8296, file: !3, line: 682, type: !134)
!8304 = !DILocation(line: 682, column: 24, scope: !8296)
!8305 = !DILocalVariable(name: "tty", scope: !8296, file: !3, line: 683, type: !233)
!8306 = !DILocation(line: 683, column: 21, scope: !8296)
!8307 = !DILocalVariable(name: "index", scope: !8296, file: !3, line: 684, type: !139)
!8308 = !DILocation(line: 684, column: 6, scope: !8296)
!8309 = !DILocation(line: 684, column: 14, scope: !8296)
!8310 = !DILocation(line: 684, column: 21, scope: !8296)
!8311 = !DILocalVariable(name: "save_xir", scope: !8296, file: !3, line: 685, type: !1375)
!8312 = !DILocation(line: 685, column: 5, scope: !8296)
!8313 = !DILocalVariable(name: "channel", scope: !8296, file: !3, line: 685, type: !1375)
!8314 = !DILocation(line: 685, column: 15, scope: !8296)
!8315 = !DILocalVariable(name: "save_car", scope: !8296, file: !3, line: 685, type: !1375)
!8316 = !DILocation(line: 685, column: 24, scope: !8296)
!8317 = !DILocalVariable(name: "mdm_change", scope: !8296, file: !3, line: 685, type: !1375)
!8318 = !DILocation(line: 685, column: 34, scope: !8296)
!8319 = !DILocalVariable(name: "mdm_status", scope: !8296, file: !3, line: 685, type: !1375)
!8320 = !DILocation(line: 685, column: 46, scope: !8296)
!8321 = !DILocation(line: 688, column: 19, scope: !8296)
!8322 = !DILocation(line: 688, column: 41, scope: !8296)
!8323 = !DILocation(line: 688, column: 38, scope: !8296)
!8324 = !DILocation(line: 688, column: 29, scope: !8296)
!8325 = !DILocation(line: 688, column: 13, scope: !8296)
!8326 = !DILocation(line: 688, column: 11, scope: !8296)
!8327 = !DILocation(line: 689, column: 12, scope: !8296)
!8328 = !DILocation(line: 689, column: 21, scope: !8296)
!8329 = !DILocation(line: 689, column: 10, scope: !8296)
!8330 = !DILocation(line: 690, column: 10, scope: !8296)
!8331 = !DILocation(line: 690, column: 17, scope: !8296)
!8332 = !DILocation(line: 690, column: 23, scope: !8296)
!8333 = !DILocation(line: 690, column: 33, scope: !8296)
!8334 = !DILocation(line: 690, column: 38, scope: !8296)
!8335 = !DILocation(line: 690, column: 31, scope: !8296)
!8336 = !DILocation(line: 690, column: 7, scope: !8296)
!8337 = !DILocation(line: 691, column: 23, scope: !8296)
!8338 = !DILocation(line: 691, column: 13, scope: !8296)
!8339 = !DILocation(line: 691, column: 11, scope: !8296)
!8340 = !DILocation(line: 692, column: 13, scope: !8296)
!8341 = !DILocation(line: 692, column: 26, scope: !8296)
!8342 = !DILocation(line: 692, column: 2, scope: !8296)
!8343 = !DILocation(line: 694, column: 25, scope: !8296)
!8344 = !DILocation(line: 694, column: 15, scope: !8296)
!8345 = !DILocation(line: 694, column: 13, scope: !8296)
!8346 = !DILocation(line: 695, column: 25, scope: !8296)
!8347 = !DILocation(line: 695, column: 15, scope: !8296)
!8348 = !DILocation(line: 695, column: 13, scope: !8296)
!8349 = !DILocation(line: 697, column: 26, scope: !8296)
!8350 = !DILocation(line: 697, column: 32, scope: !8296)
!8351 = !DILocation(line: 697, column: 8, scope: !8296)
!8352 = !DILocation(line: 697, column: 6, scope: !8296)
!8353 = !DILocation(line: 698, column: 7, scope: !8354)
!8354 = distinct !DILexicalBlock(scope: !8296, file: !3, line: 698, column: 6)
!8355 = !DILocation(line: 698, column: 6, scope: !8296)
!8356 = !DILocation(line: 699, column: 3, scope: !8354)
!8357 = !DILocation(line: 701, column: 6, scope: !8358)
!8358 = distinct !DILexicalBlock(scope: !8296, file: !3, line: 701, column: 6)
!8359 = !DILocation(line: 701, column: 17, scope: !8358)
!8360 = !DILocation(line: 701, column: 6, scope: !8296)
!8361 = !DILocation(line: 703, column: 7, scope: !8362)
!8362 = distinct !DILexicalBlock(scope: !8363, file: !3, line: 703, column: 7)
!8363 = distinct !DILexicalBlock(scope: !8358, file: !3, line: 701, column: 32)
!8364 = !DILocation(line: 703, column: 18, scope: !8362)
!8365 = !DILocation(line: 703, column: 7, scope: !8363)
!8366 = !DILocation(line: 704, column: 4, scope: !8362)
!8367 = !DILocation(line: 704, column: 10, scope: !8362)
!8368 = !DILocation(line: 704, column: 17, scope: !8362)
!8369 = !DILocation(line: 704, column: 20, scope: !8362)
!8370 = !DILocation(line: 705, column: 7, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8363, file: !3, line: 705, column: 7)
!8372 = !DILocation(line: 705, column: 18, scope: !8371)
!8373 = !DILocation(line: 705, column: 7, scope: !8363)
!8374 = !DILocation(line: 706, column: 4, scope: !8371)
!8375 = !DILocation(line: 706, column: 10, scope: !8371)
!8376 = !DILocation(line: 706, column: 17, scope: !8371)
!8377 = !DILocation(line: 706, column: 20, scope: !8371)
!8378 = !DILocation(line: 707, column: 7, scope: !8379)
!8379 = distinct !DILexicalBlock(scope: !8363, file: !3, line: 707, column: 7)
!8380 = !DILocation(line: 707, column: 18, scope: !8379)
!8381 = !DILocation(line: 707, column: 7, scope: !8363)
!8382 = !DILocation(line: 708, column: 4, scope: !8379)
!8383 = !DILocation(line: 708, column: 10, scope: !8379)
!8384 = !DILocation(line: 708, column: 17, scope: !8379)
!8385 = !DILocation(line: 708, column: 20, scope: !8379)
!8386 = !DILocation(line: 709, column: 7, scope: !8387)
!8387 = distinct !DILexicalBlock(scope: !8363, file: !3, line: 709, column: 7)
!8388 = !DILocation(line: 709, column: 18, scope: !8387)
!8389 = !DILocation(line: 709, column: 7, scope: !8363)
!8390 = !DILocation(line: 710, column: 4, scope: !8387)
!8391 = !DILocation(line: 710, column: 10, scope: !8387)
!8392 = !DILocation(line: 710, column: 17, scope: !8387)
!8393 = !DILocation(line: 710, column: 20, scope: !8387)
!8394 = !DILocation(line: 712, column: 3, scope: !8363)
!8395 = !DILocation(line: 713, column: 2, scope: !8363)
!8396 = !DILocation(line: 715, column: 7, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !8296, file: !3, line: 715, column: 6)
!8398 = !DILocation(line: 715, column: 18, scope: !8397)
!8399 = !DILocation(line: 715, column: 27, scope: !8397)
!8400 = !DILocation(line: 715, column: 54, scope: !8397)
!8401 = !DILocation(line: 715, column: 60, scope: !8397)
!8402 = !DILocation(line: 715, column: 30, scope: !8397)
!8403 = !DILocation(line: 715, column: 6, scope: !8296)
!8404 = !DILocation(line: 716, column: 7, scope: !8405)
!8405 = distinct !DILexicalBlock(scope: !8406, file: !3, line: 716, column: 7)
!8406 = distinct !DILexicalBlock(scope: !8397, file: !3, line: 715, column: 67)
!8407 = !DILocation(line: 716, column: 18, scope: !8405)
!8408 = !DILocation(line: 716, column: 7, scope: !8406)
!8409 = !DILocation(line: 717, column: 4, scope: !8405)
!8410 = !DILocation(line: 719, column: 15, scope: !8405)
!8411 = !DILocation(line: 719, column: 4, scope: !8405)
!8412 = !DILocation(line: 720, column: 2, scope: !8406)
!8413 = !DILocation(line: 721, column: 7, scope: !8414)
!8414 = distinct !DILexicalBlock(scope: !8296, file: !3, line: 721, column: 6)
!8415 = !DILocation(line: 721, column: 18, scope: !8414)
!8416 = !DILocation(line: 721, column: 27, scope: !8414)
!8417 = !DILocation(line: 721, column: 52, scope: !8414)
!8418 = !DILocation(line: 721, column: 58, scope: !8414)
!8419 = !DILocation(line: 721, column: 30, scope: !8414)
!8420 = !DILocation(line: 721, column: 6, scope: !8296)
!8421 = !DILocation(line: 722, column: 7, scope: !8422)
!8422 = distinct !DILexicalBlock(scope: !8423, file: !3, line: 722, column: 7)
!8423 = distinct !DILexicalBlock(scope: !8414, file: !3, line: 721, column: 65)
!8424 = !DILocation(line: 722, column: 12, scope: !8422)
!8425 = !DILocation(line: 722, column: 7, scope: !8423)
!8426 = !DILocation(line: 723, column: 8, scope: !8427)
!8427 = distinct !DILexicalBlock(scope: !8428, file: !3, line: 723, column: 8)
!8428 = distinct !DILexicalBlock(scope: !8422, file: !3, line: 722, column: 24)
!8429 = !DILocation(line: 723, column: 19, scope: !8427)
!8430 = !DILocation(line: 723, column: 8, scope: !8428)
!8431 = !DILocation(line: 726, column: 5, scope: !8432)
!8432 = distinct !DILexicalBlock(scope: !8427, file: !3, line: 723, column: 28)
!8433 = !DILocation(line: 726, column: 10, scope: !8432)
!8434 = !DILocation(line: 726, column: 21, scope: !8432)
!8435 = !DILocation(line: 727, column: 16, scope: !8432)
!8436 = !DILocation(line: 728, column: 16, scope: !8432)
!8437 = !DILocation(line: 728, column: 6, scope: !8432)
!8438 = !DILocation(line: 728, column: 30, scope: !8432)
!8439 = !DILocation(line: 727, column: 5, scope: !8432)
!8440 = !DILocation(line: 729, column: 16, scope: !8432)
!8441 = !DILocation(line: 729, column: 5, scope: !8432)
!8442 = !DILocation(line: 730, column: 4, scope: !8432)
!8443 = !DILocation(line: 731, column: 3, scope: !8428)
!8444 = !DILocation(line: 732, column: 10, scope: !8445)
!8445 = distinct !DILexicalBlock(scope: !8446, file: !3, line: 732, column: 8)
!8446 = distinct !DILexicalBlock(scope: !8422, file: !3, line: 731, column: 10)
!8447 = !DILocation(line: 732, column: 21, scope: !8445)
!8448 = !DILocation(line: 732, column: 8, scope: !8446)
!8449 = !DILocation(line: 735, column: 5, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !8445, file: !3, line: 732, column: 31)
!8451 = !DILocation(line: 735, column: 10, scope: !8450)
!8452 = !DILocation(line: 735, column: 21, scope: !8450)
!8453 = !DILocation(line: 736, column: 16, scope: !8450)
!8454 = !DILocation(line: 737, column: 16, scope: !8450)
!8455 = !DILocation(line: 737, column: 6, scope: !8450)
!8456 = !DILocation(line: 737, column: 30, scope: !8450)
!8457 = !DILocation(line: 736, column: 5, scope: !8450)
!8458 = !DILocation(line: 738, column: 4, scope: !8450)
!8459 = !DILocation(line: 740, column: 2, scope: !8423)
!8460 = !DILocation(line: 745, column: 15, scope: !8296)
!8461 = !DILocation(line: 745, column: 2, scope: !8296)
!8462 = !DILabel(scope: !8296, name: "end", file: !3, line: 746)
!8463 = !DILocation(line: 746, column: 1, scope: !8296)
!8464 = !DILocation(line: 748, column: 13, scope: !8296)
!8465 = !DILocation(line: 748, column: 26, scope: !8296)
!8466 = !DILocation(line: 748, column: 35, scope: !8296)
!8467 = !DILocation(line: 748, column: 2, scope: !8296)
!8468 = !DILocation(line: 749, column: 13, scope: !8296)
!8469 = !DILocation(line: 749, column: 26, scope: !8296)
!8470 = !DILocation(line: 749, column: 2, scope: !8296)
!8471 = !DILocation(line: 750, column: 1, scope: !8296)
!8472 = distinct !DISubprogram(name: "cyy_readb", scope: !3, file: !3, line: 300, type: !8473, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!8473 = !DISubroutineType(types: !8474)
!8474 = !{!1375, !134, !426}
!8475 = !DILocalVariable(name: "port", arg: 1, scope: !8472, file: !3, line: 300, type: !134)
!8476 = !DILocation(line: 300, column: 43, scope: !8472)
!8477 = !DILocalVariable(name: "reg", arg: 2, scope: !8472, file: !3, line: 300, type: !426)
!8478 = !DILocation(line: 300, column: 53, scope: !8472)
!8479 = !DILocalVariable(name: "card", scope: !8472, file: !3, line: 302, type: !4229)
!8480 = !DILocation(line: 302, column: 24, scope: !8472)
!8481 = !DILocation(line: 302, column: 31, scope: !8472)
!8482 = !DILocation(line: 302, column: 37, scope: !8472)
!8483 = !DILocation(line: 304, column: 15, scope: !8472)
!8484 = !DILocation(line: 304, column: 21, scope: !8472)
!8485 = !DILocation(line: 304, column: 23, scope: !8472)
!8486 = !DILocation(line: 304, column: 27, scope: !8472)
!8487 = !DILocation(line: 304, column: 40, scope: !8472)
!8488 = !DILocation(line: 304, column: 47, scope: !8472)
!8489 = !DILocation(line: 304, column: 53, scope: !8472)
!8490 = !DILocation(line: 304, column: 44, scope: !8472)
!8491 = !DILocation(line: 304, column: 37, scope: !8472)
!8492 = !DILocation(line: 304, column: 9, scope: !8472)
!8493 = !DILocation(line: 304, column: 2, scope: !8472)
!8494 = distinct !DISubprogram(name: "cyy_writeb", scope: !3, file: !3, line: 293, type: !8495, scopeLine: 294, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!8495 = !DISubroutineType(types: !8496)
!8496 = !{null, !134, !426, !1375}
!8497 = !DILocalVariable(name: "port", arg: 1, scope: !8494, file: !3, line: 293, type: !134)
!8498 = !DILocation(line: 293, column: 46, scope: !8494)
!8499 = !DILocalVariable(name: "reg", arg: 2, scope: !8494, file: !3, line: 293, type: !426)
!8500 = !DILocation(line: 293, column: 56, scope: !8494)
!8501 = !DILocalVariable(name: "val", arg: 3, scope: !8494, file: !3, line: 293, type: !1375)
!8502 = !DILocation(line: 293, column: 64, scope: !8494)
!8503 = !DILocalVariable(name: "card", scope: !8494, file: !3, line: 295, type: !4229)
!8504 = !DILocation(line: 295, column: 24, scope: !8494)
!8505 = !DILocation(line: 295, column: 31, scope: !8494)
!8506 = !DILocation(line: 295, column: 37, scope: !8494)
!8507 = !DILocation(line: 297, column: 2, scope: !8494)
!8508 = !DILocation(line: 297, column: 2, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8494, file: !3, line: 297, column: 2)
!8510 = !{i32 -2141447695}
!8511 = !DILocation(line: 298, column: 1, scope: !8494)
!8512 = distinct !DISubprogram(name: "tty_port_cts_enabled", scope: !142, file: !142, line: 612, type: !5697, scopeLine: 613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!8513 = !DILocalVariable(name: "port", arg: 1, scope: !8512, file: !142, line: 612, type: !3911)
!8514 = !DILocation(line: 612, column: 58, scope: !8512)
!8515 = !DILocation(line: 614, column: 38, scope: !8512)
!8516 = !DILocation(line: 614, column: 44, scope: !8512)
!8517 = !DILocation(line: 614, column: 9, scope: !8512)
!8518 = !DILocation(line: 614, column: 2, scope: !8512)
!8519 = distinct !DISubprogram(name: "kcalloc", scope: !109, file: !109, line: 601, type: !8520, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!8520 = !DISubroutineType(types: !8521)
!8521 = !{!118, !338, !338, !132}
!8522 = !DILocalVariable(name: "n", arg: 1, scope: !8519, file: !109, line: 601, type: !338)
!8523 = !DILocation(line: 601, column: 36, scope: !8519)
!8524 = !DILocalVariable(name: "size", arg: 2, scope: !8519, file: !109, line: 601, type: !338)
!8525 = !DILocation(line: 601, column: 46, scope: !8519)
!8526 = !DILocalVariable(name: "flags", arg: 3, scope: !8519, file: !109, line: 601, type: !132)
!8527 = !DILocation(line: 601, column: 58, scope: !8519)
!8528 = !DILocation(line: 603, column: 23, scope: !8519)
!8529 = !DILocation(line: 603, column: 26, scope: !8519)
!8530 = !DILocation(line: 603, column: 32, scope: !8519)
!8531 = !DILocation(line: 603, column: 38, scope: !8519)
!8532 = !DILocation(line: 603, column: 9, scope: !8519)
!8533 = !DILocation(line: 603, column: 2, scope: !8519)
!8534 = !DILocalVariable(name: "x", arg: 1, scope: !4787, file: !1559, line: 85, type: !1557)
!8535 = !DILocation(line: 85, column: 57, scope: !4787)
!8536 = !DILocation(line: 87, column: 2, scope: !4787)
!8537 = !DILocation(line: 87, column: 5, scope: !4787)
!8538 = !DILocation(line: 87, column: 10, scope: !4787)
!8539 = !DILocation(line: 88, column: 2, scope: !4787)
!8540 = !DILocation(line: 88, column: 2, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !4787, file: !1559, line: 88, column: 2)
!8542 = !DILocation(line: 89, column: 1, scope: !4787)
!8543 = distinct !DISubprogram(name: "timer_pending", scope: !3611, file: !3611, line: 166, type: !8544, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!8544 = !DISubroutineType(types: !8545)
!8545 = !{!139, !8546}
!8546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8547, size: 64)
!8547 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3610)
!8548 = !DILocalVariable(name: "timer", arg: 1, scope: !8543, file: !3611, line: 166, type: !8546)
!8549 = !DILocation(line: 166, column: 59, scope: !8543)
!8550 = !DILocation(line: 168, column: 35, scope: !8543)
!8551 = !DILocation(line: 168, column: 42, scope: !8543)
!8552 = !DILocation(line: 168, column: 10, scope: !8543)
!8553 = !DILocation(line: 168, column: 9, scope: !8543)
!8554 = !DILocation(line: 168, column: 2, scope: !8543)
!8555 = distinct !DISubprogram(name: "kmalloc_array", scope: !109, file: !109, line: 584, type: !8520, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!8556 = !DILocalVariable(name: "s", arg: 1, scope: !8557, file: !109, line: 445, type: !968)
!8557 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !109, file: !109, line: 445, type: !8558, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!8558 = !DISubroutineType(types: !8559)
!8559 = !{!118, !968, !132, !338}
!8560 = !DILocation(line: 445, column: 72, scope: !8557, inlinedAt: !8561)
!8561 = distinct !DILocation(line: 552, column: 10, scope: !8562, inlinedAt: !8567)
!8562 = distinct !DILexicalBlock(scope: !8563, file: !109, line: 540, column: 34)
!8563 = distinct !DILexicalBlock(scope: !8564, file: !109, line: 540, column: 6)
!8564 = distinct !DISubprogram(name: "kmalloc", scope: !109, file: !109, line: 538, type: !8565, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!8565 = !DISubroutineType(types: !8566)
!8566 = !{!118, !338, !132}
!8567 = distinct !DILocation(line: 591, column: 10, scope: !8568)
!8568 = distinct !DILexicalBlock(scope: !8555, file: !109, line: 590, column: 6)
!8569 = !DILocalVariable(name: "flags", arg: 2, scope: !8557, file: !109, line: 446, type: !132)
!8570 = !DILocation(line: 446, column: 9, scope: !8557, inlinedAt: !8561)
!8571 = !DILocalVariable(name: "size", arg: 3, scope: !8557, file: !109, line: 446, type: !338)
!8572 = !DILocation(line: 446, column: 23, scope: !8557, inlinedAt: !8561)
!8573 = !DILocalVariable(name: "ret", scope: !8557, file: !109, line: 448, type: !118)
!8574 = !DILocation(line: 448, column: 8, scope: !8557, inlinedAt: !8561)
!8575 = !DILocalVariable(name: "flags", arg: 1, scope: !8576, file: !109, line: 318, type: !132)
!8576 = distinct !DISubprogram(name: "kmalloc_type", scope: !109, file: !109, line: 318, type: !8577, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!8577 = !DISubroutineType(types: !8578)
!8578 = !{!108, !132}
!8579 = !DILocation(line: 318, column: 67, scope: !8576, inlinedAt: !8580)
!8580 = distinct !DILocation(line: 553, column: 20, scope: !8562, inlinedAt: !8567)
!8581 = !DILocalVariable(name: "size", arg: 1, scope: !8582, file: !109, line: 346, type: !338)
!8582 = distinct !DISubprogram(name: "kmalloc_index", scope: !109, file: !109, line: 346, type: !8583, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!8583 = !DISubroutineType(types: !8584)
!8584 = !{!7, !338}
!8585 = !DILocation(line: 346, column: 58, scope: !8582, inlinedAt: !8586)
!8586 = distinct !DILocation(line: 547, column: 11, scope: !8562, inlinedAt: !8567)
!8587 = !DILocalVariable(name: "size", arg: 1, scope: !8588, file: !109, line: 472, type: !338)
!8588 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !109, file: !109, line: 472, type: !8589, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!8589 = !DISubroutineType(types: !8590)
!8590 = !{!118, !338, !132, !7}
!8591 = !DILocation(line: 472, column: 28, scope: !8588, inlinedAt: !8592)
!8592 = distinct !DILocation(line: 481, column: 9, scope: !8593, inlinedAt: !8594)
!8593 = distinct !DISubprogram(name: "kmalloc_large", scope: !109, file: !109, line: 478, type: !8565, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!8594 = distinct !DILocation(line: 545, column: 11, scope: !8595, inlinedAt: !8567)
!8595 = distinct !DILexicalBlock(scope: !8562, file: !109, line: 544, column: 7)
!8596 = !DILocalVariable(name: "flags", arg: 2, scope: !8588, file: !109, line: 472, type: !132)
!8597 = !DILocation(line: 472, column: 40, scope: !8588, inlinedAt: !8592)
!8598 = !DILocalVariable(name: "order", arg: 3, scope: !8588, file: !109, line: 472, type: !7)
!8599 = !DILocation(line: 472, column: 60, scope: !8588, inlinedAt: !8592)
!8600 = !DILocalVariable(name: "size", arg: 1, scope: !8593, file: !109, line: 478, type: !338)
!8601 = !DILocation(line: 478, column: 51, scope: !8593, inlinedAt: !8594)
!8602 = !DILocalVariable(name: "flags", arg: 2, scope: !8593, file: !109, line: 478, type: !132)
!8603 = !DILocation(line: 478, column: 63, scope: !8593, inlinedAt: !8594)
!8604 = !DILocalVariable(name: "order", scope: !8593, file: !109, line: 480, type: !7)
!8605 = !DILocation(line: 480, column: 15, scope: !8593, inlinedAt: !8594)
!8606 = !DILocalVariable(name: "size", arg: 1, scope: !8564, file: !109, line: 538, type: !338)
!8607 = !DILocation(line: 538, column: 45, scope: !8564, inlinedAt: !8567)
!8608 = !DILocalVariable(name: "flags", arg: 2, scope: !8564, file: !109, line: 538, type: !132)
!8609 = !DILocation(line: 538, column: 57, scope: !8564, inlinedAt: !8567)
!8610 = !DILocalVariable(name: "index", scope: !8562, file: !109, line: 542, type: !7)
!8611 = !DILocation(line: 542, column: 16, scope: !8562, inlinedAt: !8567)
!8612 = !DILocalVariable(name: "n", arg: 1, scope: !8555, file: !109, line: 584, type: !338)
!8613 = !DILocation(line: 584, column: 42, scope: !8555)
!8614 = !DILocalVariable(name: "size", arg: 2, scope: !8555, file: !109, line: 584, type: !338)
!8615 = !DILocation(line: 584, column: 52, scope: !8555)
!8616 = !DILocalVariable(name: "flags", arg: 3, scope: !8555, file: !109, line: 584, type: !132)
!8617 = !DILocation(line: 584, column: 64, scope: !8555)
!8618 = !DILocalVariable(name: "bytes", scope: !8555, file: !109, line: 586, type: !338)
!8619 = !DILocation(line: 586, column: 9, scope: !8555)
!8620 = !DILocalVariable(name: "__a", scope: !8621, file: !109, line: 588, type: !338)
!8621 = distinct !DILexicalBlock(scope: !8622, file: !109, line: 588, column: 6)
!8622 = distinct !DILexicalBlock(scope: !8555, file: !109, line: 588, column: 6)
!8623 = !DILocation(line: 588, column: 6, scope: !8621)
!8624 = !DILocalVariable(name: "__b", scope: !8621, file: !109, line: 588, type: !338)
!8625 = !DILocalVariable(name: "__d", scope: !8621, file: !109, line: 588, type: !8626)
!8626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 64)
!8627 = !DILocation(line: 588, column: 6, scope: !8622)
!8628 = !DILocation(line: 588, column: 6, scope: !8555)
!8629 = !DILocation(line: 589, column: 3, scope: !8622)
!8630 = !DILocation(line: 590, column: 27, scope: !8568)
!8631 = !DILocation(line: 590, column: 6, scope: !8568)
!8632 = !DILocation(line: 590, column: 30, scope: !8568)
!8633 = !DILocation(line: 590, column: 54, scope: !8568)
!8634 = !DILocation(line: 590, column: 33, scope: !8568)
!8635 = !DILocation(line: 590, column: 6, scope: !8555)
!8636 = !DILocation(line: 591, column: 18, scope: !8568)
!8637 = !DILocation(line: 591, column: 25, scope: !8568)
!8638 = !DILocation(line: 540, column: 27, scope: !8563, inlinedAt: !8567)
!8639 = !DILocation(line: 540, column: 6, scope: !8563, inlinedAt: !8567)
!8640 = !DILocation(line: 540, column: 6, scope: !8564, inlinedAt: !8567)
!8641 = !DILocation(line: 544, column: 7, scope: !8595, inlinedAt: !8567)
!8642 = !DILocation(line: 544, column: 12, scope: !8595, inlinedAt: !8567)
!8643 = !DILocation(line: 544, column: 7, scope: !8562, inlinedAt: !8567)
!8644 = !DILocation(line: 545, column: 25, scope: !8595, inlinedAt: !8567)
!8645 = !DILocation(line: 545, column: 31, scope: !8595, inlinedAt: !8567)
!8646 = !DILocation(line: 480, column: 33, scope: !8593, inlinedAt: !8594)
!8647 = !DILocation(line: 480, column: 23, scope: !8593, inlinedAt: !8594)
!8648 = !DILocation(line: 481, column: 29, scope: !8593, inlinedAt: !8594)
!8649 = !DILocation(line: 481, column: 35, scope: !8593, inlinedAt: !8594)
!8650 = !DILocation(line: 481, column: 42, scope: !8593, inlinedAt: !8594)
!8651 = !DILocation(line: 474, column: 23, scope: !8588, inlinedAt: !8592)
!8652 = !DILocation(line: 474, column: 29, scope: !8588, inlinedAt: !8592)
!8653 = !DILocation(line: 474, column: 36, scope: !8588, inlinedAt: !8592)
!8654 = !DILocation(line: 474, column: 9, scope: !8588, inlinedAt: !8592)
!8655 = !DILocation(line: 545, column: 4, scope: !8595, inlinedAt: !8567)
!8656 = !DILocation(line: 547, column: 25, scope: !8562, inlinedAt: !8567)
!8657 = !DILocation(line: 348, column: 7, scope: !8658, inlinedAt: !8586)
!8658 = distinct !DILexicalBlock(scope: !8582, file: !109, line: 348, column: 6)
!8659 = !DILocation(line: 348, column: 6, scope: !8582, inlinedAt: !8586)
!8660 = !DILocation(line: 349, column: 3, scope: !8658, inlinedAt: !8586)
!8661 = !DILocation(line: 351, column: 6, scope: !8662, inlinedAt: !8586)
!8662 = distinct !DILexicalBlock(scope: !8582, file: !109, line: 351, column: 6)
!8663 = !DILocation(line: 351, column: 11, scope: !8662, inlinedAt: !8586)
!8664 = !DILocation(line: 351, column: 6, scope: !8582, inlinedAt: !8586)
!8665 = !DILocation(line: 352, column: 3, scope: !8662, inlinedAt: !8586)
!8666 = !DILocation(line: 354, column: 32, scope: !8667, inlinedAt: !8586)
!8667 = distinct !DILexicalBlock(scope: !8582, file: !109, line: 354, column: 6)
!8668 = !DILocation(line: 354, column: 37, scope: !8667, inlinedAt: !8586)
!8669 = !DILocation(line: 354, column: 42, scope: !8667, inlinedAt: !8586)
!8670 = !DILocation(line: 354, column: 45, scope: !8667, inlinedAt: !8586)
!8671 = !DILocation(line: 354, column: 50, scope: !8667, inlinedAt: !8586)
!8672 = !DILocation(line: 354, column: 6, scope: !8582, inlinedAt: !8586)
!8673 = !DILocation(line: 355, column: 3, scope: !8667, inlinedAt: !8586)
!8674 = !DILocation(line: 356, column: 32, scope: !8675, inlinedAt: !8586)
!8675 = distinct !DILexicalBlock(scope: !8582, file: !109, line: 356, column: 6)
!8676 = !DILocation(line: 356, column: 37, scope: !8675, inlinedAt: !8586)
!8677 = !DILocation(line: 356, column: 43, scope: !8675, inlinedAt: !8586)
!8678 = !DILocation(line: 356, column: 46, scope: !8675, inlinedAt: !8586)
!8679 = !DILocation(line: 356, column: 51, scope: !8675, inlinedAt: !8586)
!8680 = !DILocation(line: 356, column: 6, scope: !8582, inlinedAt: !8586)
!8681 = !DILocation(line: 357, column: 3, scope: !8675, inlinedAt: !8586)
!8682 = !DILocation(line: 358, column: 6, scope: !8683, inlinedAt: !8586)
!8683 = distinct !DILexicalBlock(scope: !8582, file: !109, line: 358, column: 6)
!8684 = !DILocation(line: 358, column: 11, scope: !8683, inlinedAt: !8586)
!8685 = !DILocation(line: 358, column: 6, scope: !8582, inlinedAt: !8586)
!8686 = !DILocation(line: 358, column: 26, scope: !8683, inlinedAt: !8586)
!8687 = !DILocation(line: 359, column: 6, scope: !8688, inlinedAt: !8586)
!8688 = distinct !DILexicalBlock(scope: !8582, file: !109, line: 359, column: 6)
!8689 = !DILocation(line: 359, column: 11, scope: !8688, inlinedAt: !8586)
!8690 = !DILocation(line: 359, column: 6, scope: !8582, inlinedAt: !8586)
!8691 = !DILocation(line: 359, column: 26, scope: !8688, inlinedAt: !8586)
!8692 = !DILocation(line: 360, column: 6, scope: !8693, inlinedAt: !8586)
!8693 = distinct !DILexicalBlock(scope: !8582, file: !109, line: 360, column: 6)
!8694 = !DILocation(line: 360, column: 11, scope: !8693, inlinedAt: !8586)
!8695 = !DILocation(line: 360, column: 6, scope: !8582, inlinedAt: !8586)
!8696 = !DILocation(line: 360, column: 26, scope: !8693, inlinedAt: !8586)
!8697 = !DILocation(line: 361, column: 6, scope: !8698, inlinedAt: !8586)
!8698 = distinct !DILexicalBlock(scope: !8582, file: !109, line: 361, column: 6)
!8699 = !DILocation(line: 361, column: 11, scope: !8698, inlinedAt: !8586)
!8700 = !DILocation(line: 361, column: 6, scope: !8582, inlinedAt: !8586)
!8701 = !DILocation(line: 361, column: 26, scope: !8698, inlinedAt: !8586)
!8702 = !DILocation(line: 362, column: 6, scope: !8703, inlinedAt: !8586)
!8703 = distinct !DILexicalBlock(scope: !8582, file: !109, line: 362, column: 6)
!8704 = !DILocation(line: 362, column: 11, scope: !8703, inlinedAt: !8586)
!8705 = !DILocation(line: 362, column: 6, scope: !8582, inlinedAt: !8586)
!8706 = !DILocation(line: 362, column: 26, scope: !8703, inlinedAt: !8586)
!8707 = !DILocation(line: 363, column: 6, scope: !8708, inlinedAt: !8586)
!8708 = distinct !DILexicalBlock(scope: !8582, file: !109, line: 363, column: 6)
!8709 = !DILocation(line: 363, column: 11, scope: !8708, inlinedAt: !8586)
!8710 = !DILocation(line: 363, column: 6, scope: !8582, inlinedAt: !8586)
!8711 = !DILocation(line: 363, column: 26, scope: !8708, inlinedAt: !8586)
!8712 = !DILocation(line: 364, column: 6, scope: !8713, inlinedAt: !8586)
!8713 = distinct !DILexicalBlock(scope: !8582, file: !109, line: 364, column: 6)
!8714 = !DILocation(line: 364, column: 11, scope: !8713, inlinedAt: !8586)
!8715 = !DILocation(line: 364, column: 6, scope: !8582, inlinedAt: !8586)
!8716 = !DILocation(line: 364, column: 26, scope: !8713, inlinedAt: !8586)
!8717 = !DILocation(line: 365, column: 6, scope: !8718, inlinedAt: !8586)
!8718 = distinct !DILexicalBlock(scope: !8582, file: !109, line: 365, column: 6)
!8719 = !DILocation(line: 365, column: 11, scope: !8718, inlinedAt: !8586)
!8720 = !DILocation(line: 365, column: 6, scope: !8582, inlinedAt: !8586)
!8721 = !DILocation(line: 365, column: 26, scope: !8718, inlinedAt: !8586)
!8722 = !DILocation(line: 366, column: 6, scope: !8723, inlinedAt: !8586)
!8723 = distinct !DILexicalBlock(scope: !8582, file: !109, line: 366, column: 6)
!8724 = !DILocation(line: 366, column: 11, scope: !8723, inlinedAt: !8586)
!8725 = !DILocation(line: 366, column: 6, scope: !8582, inlinedAt: !8586)
!8726 = !DILocation(line: 366, column: 26, scope: !8723, inlinedAt: !8586)
!8727 = !DILocation(line: 367, column: 6, scope: !8728, inlinedAt: !8586)
!8728 = distinct !DILexicalBlock(scope: !8582, file: !109, line: 367, column: 6)
!8729 = !DILocation(line: 367, column: 11, scope: !8728, inlinedAt: !8586)
!8730 = !DILocation(line: 367, column: 6, scope: !8582, inlinedAt: !8586)
!8731 = !DILocation(line: 367, column: 26, scope: !8728, inlinedAt: !8586)
!8732 = !DILocation(line: 368, column: 6, scope: !8733, inlinedAt: !8586)
!8733 = distinct !DILexicalBlock(scope: !8582, file: !109, line: 368, column: 6)
!8734 = !DILocation(line: 368, column: 11, scope: !8733, inlinedAt: !8586)
!8735 = !DILocation(line: 368, column: 6, scope: !8582, inlinedAt: !8586)
!8736 = !DILocation(line: 368, column: 26, scope: !8733, inlinedAt: !8586)
!8737 = !DILocation(line: 369, column: 6, scope: !8738, inlinedAt: !8586)
!8738 = distinct !DILexicalBlock(scope: !8582, file: !109, line: 369, column: 6)
!8739 = !DILocation(line: 369, column: 11, scope: !8738, inlinedAt: !8586)
!8740 = !DILocation(line: 369, column: 6, scope: !8582, inlinedAt: !8586)
!8741 = !DILocation(line: 369, column: 26, scope: !8738, inlinedAt: !8586)
!8742 = !DILocation(line: 370, column: 6, scope: !8743, inlinedAt: !8586)
!8743 = distinct !DILexicalBlock(scope: !8582, file: !109, line: 370, column: 6)
!8744 = !DILocation(line: 370, column: 11, scope: !8743, inlinedAt: !8586)
!8745 = !DILocation(line: 370, column: 6, scope: !8582, inlinedAt: !8586)
!8746 = !DILocation(line: 370, column: 26, scope: !8743, inlinedAt: !8586)
!8747 = !DILocation(line: 371, column: 6, scope: !8748, inlinedAt: !8586)
!8748 = distinct !DILexicalBlock(scope: !8582, file: !109, line: 371, column: 6)
!8749 = !DILocation(line: 371, column: 11, scope: !8748, inlinedAt: !8586)
!8750 = !DILocation(line: 371, column: 6, scope: !8582, inlinedAt: !8586)
!8751 = !DILocation(line: 371, column: 26, scope: !8748, inlinedAt: !8586)
!8752 = !DILocation(line: 372, column: 6, scope: !8753, inlinedAt: !8586)
!8753 = distinct !DILexicalBlock(scope: !8582, file: !109, line: 372, column: 6)
!8754 = !DILocation(line: 372, column: 11, scope: !8753, inlinedAt: !8586)
!8755 = !DILocation(line: 372, column: 6, scope: !8582, inlinedAt: !8586)
!8756 = !DILocation(line: 372, column: 26, scope: !8753, inlinedAt: !8586)
!8757 = !DILocation(line: 373, column: 6, scope: !8758, inlinedAt: !8586)
!8758 = distinct !DILexicalBlock(scope: !8582, file: !109, line: 373, column: 6)
!8759 = !DILocation(line: 373, column: 11, scope: !8758, inlinedAt: !8586)
!8760 = !DILocation(line: 373, column: 6, scope: !8582, inlinedAt: !8586)
!8761 = !DILocation(line: 373, column: 26, scope: !8758, inlinedAt: !8586)
!8762 = !DILocation(line: 374, column: 6, scope: !8763, inlinedAt: !8586)
!8763 = distinct !DILexicalBlock(scope: !8582, file: !109, line: 374, column: 6)
!8764 = !DILocation(line: 374, column: 11, scope: !8763, inlinedAt: !8586)
!8765 = !DILocation(line: 374, column: 6, scope: !8582, inlinedAt: !8586)
!8766 = !DILocation(line: 374, column: 26, scope: !8763, inlinedAt: !8586)
!8767 = !DILocation(line: 375, column: 6, scope: !8768, inlinedAt: !8586)
!8768 = distinct !DILexicalBlock(scope: !8582, file: !109, line: 375, column: 6)
!8769 = !DILocation(line: 375, column: 11, scope: !8768, inlinedAt: !8586)
!8770 = !DILocation(line: 375, column: 6, scope: !8582, inlinedAt: !8586)
!8771 = !DILocation(line: 375, column: 27, scope: !8768, inlinedAt: !8586)
!8772 = !DILocation(line: 376, column: 6, scope: !8773, inlinedAt: !8586)
!8773 = distinct !DILexicalBlock(scope: !8582, file: !109, line: 376, column: 6)
!8774 = !DILocation(line: 376, column: 11, scope: !8773, inlinedAt: !8586)
!8775 = !DILocation(line: 376, column: 6, scope: !8582, inlinedAt: !8586)
!8776 = !DILocation(line: 376, column: 32, scope: !8773, inlinedAt: !8586)
!8777 = !DILocation(line: 377, column: 6, scope: !8778, inlinedAt: !8586)
!8778 = distinct !DILexicalBlock(scope: !8582, file: !109, line: 377, column: 6)
!8779 = !DILocation(line: 377, column: 11, scope: !8778, inlinedAt: !8586)
!8780 = !DILocation(line: 377, column: 6, scope: !8582, inlinedAt: !8586)
!8781 = !DILocation(line: 377, column: 32, scope: !8778, inlinedAt: !8586)
!8782 = !DILocation(line: 378, column: 6, scope: !8783, inlinedAt: !8586)
!8783 = distinct !DILexicalBlock(scope: !8582, file: !109, line: 378, column: 6)
!8784 = !DILocation(line: 378, column: 11, scope: !8783, inlinedAt: !8586)
!8785 = !DILocation(line: 378, column: 6, scope: !8582, inlinedAt: !8586)
!8786 = !DILocation(line: 378, column: 32, scope: !8783, inlinedAt: !8586)
!8787 = !DILocation(line: 379, column: 6, scope: !8788, inlinedAt: !8586)
!8788 = distinct !DILexicalBlock(scope: !8582, file: !109, line: 379, column: 6)
!8789 = !DILocation(line: 379, column: 11, scope: !8788, inlinedAt: !8586)
!8790 = !DILocation(line: 379, column: 6, scope: !8582, inlinedAt: !8586)
!8791 = !DILocation(line: 379, column: 33, scope: !8788, inlinedAt: !8586)
!8792 = !DILocation(line: 380, column: 6, scope: !8793, inlinedAt: !8586)
!8793 = distinct !DILexicalBlock(scope: !8582, file: !109, line: 380, column: 6)
!8794 = !DILocation(line: 380, column: 11, scope: !8793, inlinedAt: !8586)
!8795 = !DILocation(line: 380, column: 6, scope: !8582, inlinedAt: !8586)
!8796 = !DILocation(line: 380, column: 33, scope: !8793, inlinedAt: !8586)
!8797 = !DILocation(line: 381, column: 6, scope: !8798, inlinedAt: !8586)
!8798 = distinct !DILexicalBlock(scope: !8582, file: !109, line: 381, column: 6)
!8799 = !DILocation(line: 381, column: 11, scope: !8798, inlinedAt: !8586)
!8800 = !DILocation(line: 381, column: 6, scope: !8582, inlinedAt: !8586)
!8801 = !DILocation(line: 381, column: 33, scope: !8798, inlinedAt: !8586)
!8802 = !DILocation(line: 382, column: 2, scope: !8803, inlinedAt: !8586)
!8803 = distinct !DILexicalBlock(scope: !8804, file: !109, line: 382, column: 2)
!8804 = distinct !DILexicalBlock(scope: !8582, file: !109, line: 382, column: 2)
!8805 = !{i32 -2141930473, i32 -2141930444, i32 -2141930398, i32 -2141930340, i32 -2141930286, i32 -2141930232, i32 -2141930177, i32 -2141930146}
!8806 = !DILocation(line: 382, column: 2, scope: !8807, inlinedAt: !8586)
!8807 = distinct !DILexicalBlock(scope: !8808, file: !109, line: 382, column: 2)
!8808 = distinct !DILexicalBlock(scope: !8804, file: !109, line: 382, column: 2)
!8809 = !{i32 -2141929703, i32 -2141929696, i32 -2141929642, i32 -2141929611, i32 -2141929581}
!8810 = !DILocation(line: 382, column: 2, scope: !8808, inlinedAt: !8586)
!8811 = !DILocation(line: 386, column: 1, scope: !8582, inlinedAt: !8586)
!8812 = !DILocation(line: 547, column: 9, scope: !8562, inlinedAt: !8567)
!8813 = !DILocation(line: 549, column: 8, scope: !8814, inlinedAt: !8567)
!8814 = distinct !DILexicalBlock(scope: !8562, file: !109, line: 549, column: 7)
!8815 = !DILocation(line: 549, column: 7, scope: !8562, inlinedAt: !8567)
!8816 = !DILocation(line: 550, column: 4, scope: !8814, inlinedAt: !8567)
!8817 = !DILocation(line: 553, column: 33, scope: !8562, inlinedAt: !8567)
!8818 = !DILocation(line: 325, column: 6, scope: !8819, inlinedAt: !8580)
!8819 = distinct !DILexicalBlock(scope: !8576, file: !109, line: 325, column: 6)
!8820 = !DILocation(line: 325, column: 6, scope: !8576, inlinedAt: !8580)
!8821 = !DILocation(line: 326, column: 3, scope: !8819, inlinedAt: !8580)
!8822 = !DILocation(line: 332, column: 9, scope: !8576, inlinedAt: !8580)
!8823 = !DILocation(line: 332, column: 15, scope: !8576, inlinedAt: !8580)
!8824 = !DILocation(line: 332, column: 2, scope: !8576, inlinedAt: !8580)
!8825 = !DILocation(line: 336, column: 1, scope: !8576, inlinedAt: !8580)
!8826 = !DILocation(line: 553, column: 5, scope: !8562, inlinedAt: !8567)
!8827 = !DILocation(line: 553, column: 41, scope: !8562, inlinedAt: !8567)
!8828 = !DILocation(line: 554, column: 5, scope: !8562, inlinedAt: !8567)
!8829 = !DILocation(line: 554, column: 12, scope: !8562, inlinedAt: !8567)
!8830 = !DILocation(line: 448, column: 31, scope: !8557, inlinedAt: !8561)
!8831 = !DILocation(line: 448, column: 34, scope: !8557, inlinedAt: !8561)
!8832 = !DILocation(line: 448, column: 14, scope: !8557, inlinedAt: !8561)
!8833 = !DILocation(line: 450, column: 22, scope: !8557, inlinedAt: !8561)
!8834 = !DILocation(line: 450, column: 25, scope: !8557, inlinedAt: !8561)
!8835 = !DILocation(line: 450, column: 30, scope: !8557, inlinedAt: !8561)
!8836 = !DILocation(line: 450, column: 36, scope: !8557, inlinedAt: !8561)
!8837 = !DILocation(line: 450, column: 8, scope: !8557, inlinedAt: !8561)
!8838 = !DILocation(line: 450, column: 6, scope: !8557, inlinedAt: !8561)
!8839 = !DILocation(line: 451, column: 9, scope: !8557, inlinedAt: !8561)
!8840 = !DILocation(line: 552, column: 3, scope: !8562, inlinedAt: !8567)
!8841 = !DILocation(line: 557, column: 19, scope: !8564, inlinedAt: !8567)
!8842 = !DILocation(line: 557, column: 25, scope: !8564, inlinedAt: !8567)
!8843 = !DILocation(line: 557, column: 9, scope: !8564, inlinedAt: !8567)
!8844 = !DILocation(line: 557, column: 2, scope: !8564, inlinedAt: !8567)
!8845 = !DILocation(line: 558, column: 1, scope: !8564, inlinedAt: !8567)
!8846 = !DILocation(line: 591, column: 3, scope: !8568)
!8847 = !DILocation(line: 592, column: 19, scope: !8555)
!8848 = !DILocation(line: 592, column: 26, scope: !8555)
!8849 = !DILocation(line: 592, column: 9, scope: !8555)
!8850 = !DILocation(line: 592, column: 2, scope: !8555)
!8851 = !DILocation(line: 593, column: 1, scope: !8555)
!8852 = distinct !DISubprogram(name: "__must_check_overflow", scope: !8853, file: !8853, line: 52, type: !8854, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!8853 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!8854 = !DISubroutineType(types: !8855)
!8855 = !{!497, !497}
!8856 = !DILocalVariable(name: "overflow", arg: 1, scope: !8852, file: !8853, line: 52, type: !497)
!8857 = !DILocation(line: 52, column: 60, scope: !8852)
!8858 = !DILocation(line: 54, column: 9, scope: !8852)
!8859 = !DILocation(line: 54, column: 2, scope: !8852)
!8860 = distinct !DISubprogram(name: "get_order", scope: !8861, file: !8861, line: 29, type: !8862, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!8861 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!8862 = !DISubroutineType(types: !8863)
!8863 = !{!139, !126}
!8864 = !DILocalVariable(name: "x", arg: 1, scope: !8865, file: !5748, line: 366, type: !430)
!8865 = distinct !DISubprogram(name: "fls64", scope: !5748, file: !5748, line: 366, type: !8866, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!8866 = !DISubroutineType(types: !8867)
!8867 = !{!139, !430}
!8868 = !DILocation(line: 366, column: 40, scope: !8865, inlinedAt: !8869)
!8869 = distinct !DILocation(line: 46, column: 9, scope: !8860)
!8870 = !DILocalVariable(name: "bitpos", scope: !8865, file: !5748, line: 368, type: !139)
!8871 = !DILocation(line: 368, column: 6, scope: !8865, inlinedAt: !8869)
!8872 = !DILocalVariable(name: "size", arg: 1, scope: !8860, file: !8861, line: 29, type: !126)
!8873 = !DILocation(line: 29, column: 63, scope: !8860)
!8874 = !DILocation(line: 31, column: 27, scope: !8875)
!8875 = distinct !DILexicalBlock(scope: !8860, file: !8861, line: 31, column: 6)
!8876 = !DILocation(line: 31, column: 6, scope: !8875)
!8877 = !DILocation(line: 31, column: 6, scope: !8860)
!8878 = !DILocation(line: 32, column: 8, scope: !8879)
!8879 = distinct !DILexicalBlock(scope: !8880, file: !8861, line: 32, column: 7)
!8880 = distinct !DILexicalBlock(scope: !8875, file: !8861, line: 31, column: 34)
!8881 = !DILocation(line: 32, column: 7, scope: !8880)
!8882 = !DILocation(line: 33, column: 4, scope: !8879)
!8883 = !DILocation(line: 35, column: 7, scope: !8884)
!8884 = distinct !DILexicalBlock(scope: !8880, file: !8861, line: 35, column: 7)
!8885 = !DILocation(line: 35, column: 12, scope: !8884)
!8886 = !DILocation(line: 35, column: 7, scope: !8880)
!8887 = !DILocation(line: 36, column: 4, scope: !8884)
!8888 = !DILocation(line: 38, column: 10, scope: !8880)
!8889 = !DILocation(line: 38, column: 28, scope: !8880)
!8890 = !DILocation(line: 38, column: 41, scope: !8880)
!8891 = !DILocation(line: 38, column: 3, scope: !8880)
!8892 = !DILocation(line: 41, column: 6, scope: !8860)
!8893 = !DILocation(line: 42, column: 7, scope: !8860)
!8894 = !DILocation(line: 46, column: 15, scope: !8860)
!8895 = !DILocation(line: 374, column: 2, scope: !8865, inlinedAt: !8869)
!8896 = !DILocation(line: 376, column: 14, scope: !8865, inlinedAt: !8869)
!8897 = !{i32 408048}
!8898 = !DILocation(line: 377, column: 9, scope: !8865, inlinedAt: !8869)
!8899 = !DILocation(line: 377, column: 16, scope: !8865, inlinedAt: !8869)
!8900 = !DILocation(line: 46, column: 2, scope: !8860)
!8901 = !DILocation(line: 48, column: 1, scope: !8860)
!8902 = distinct !DISubprogram(name: "__ilog2_u64", scope: !8903, file: !8903, line: 30, type: !8904, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!8903 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!8904 = !DISubroutineType(types: !8905)
!8905 = !{!139, !429}
!8906 = !DILocation(line: 366, column: 40, scope: !8865, inlinedAt: !8907)
!8907 = distinct !DILocation(line: 32, column: 9, scope: !8902)
!8908 = !DILocation(line: 368, column: 6, scope: !8865, inlinedAt: !8907)
!8909 = !DILocalVariable(name: "n", arg: 1, scope: !8902, file: !8903, line: 30, type: !429)
!8910 = !DILocation(line: 30, column: 21, scope: !8902)
!8911 = !DILocation(line: 32, column: 15, scope: !8902)
!8912 = !DILocation(line: 374, column: 2, scope: !8865, inlinedAt: !8907)
!8913 = !DILocation(line: 376, column: 14, scope: !8865, inlinedAt: !8907)
!8914 = !DILocation(line: 377, column: 9, scope: !8865, inlinedAt: !8907)
!8915 = !DILocation(line: 377, column: 16, scope: !8865, inlinedAt: !8907)
!8916 = !DILocation(line: 32, column: 18, scope: !8902)
!8917 = !DILocation(line: 32, column: 2, scope: !8902)
!8918 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !8919, file: !8919, line: 137, type: !8920, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!8919 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!8920 = !DISubroutineType(types: !8921)
!8921 = !{!118, !968, !2192, !338, !132}
!8922 = !DILocalVariable(name: "s", arg: 1, scope: !8918, file: !8919, line: 137, type: !968)
!8923 = !DILocation(line: 137, column: 54, scope: !8918)
!8924 = !DILocalVariable(name: "object", arg: 2, scope: !8918, file: !8919, line: 137, type: !2192)
!8925 = !DILocation(line: 137, column: 69, scope: !8918)
!8926 = !DILocalVariable(name: "size", arg: 3, scope: !8918, file: !8919, line: 138, type: !338)
!8927 = !DILocation(line: 138, column: 12, scope: !8918)
!8928 = !DILocalVariable(name: "flags", arg: 4, scope: !8918, file: !8919, line: 138, type: !132)
!8929 = !DILocation(line: 138, column: 24, scope: !8918)
!8930 = !DILocation(line: 140, column: 17, scope: !8918)
!8931 = !DILocation(line: 140, column: 2, scope: !8918)
!8932 = distinct !DISubprogram(name: "cyz_carrier_raised", scope: !3, file: !3, line: 2997, type: !4186, scopeLine: 2998, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!8933 = !DILocalVariable(name: "port", arg: 1, scope: !8932, file: !3, line: 2997, type: !3911)
!8934 = !DILocation(line: 2997, column: 48, scope: !8932)
!8935 = !DILocalVariable(name: "info", scope: !8932, file: !3, line: 2999, type: !134)
!8936 = !DILocation(line: 2999, column: 24, scope: !8932)
!8937 = !DILocalVariable(name: "__mptr", scope: !8938, file: !3, line: 2999, type: !118)
!8938 = distinct !DILexicalBlock(scope: !8932, file: !3, line: 2999, column: 31)
!8939 = !DILocation(line: 2999, column: 31, scope: !8938)
!8940 = !DILocation(line: 2999, column: 31, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8938, file: !3, line: 2999, column: 31)
!8942 = !DILocation(line: 3002, column: 16, scope: !8932)
!8943 = !DILocation(line: 3002, column: 22, scope: !8932)
!8944 = !DILocation(line: 3002, column: 24, scope: !8932)
!8945 = !DILocation(line: 3002, column: 28, scope: !8932)
!8946 = !DILocation(line: 3002, column: 37, scope: !8932)
!8947 = !DILocation(line: 3002, column: 15, scope: !8932)
!8948 = !DILocation(line: 3002, column: 9, scope: !8932)
!8949 = !DILocation(line: 3002, column: 48, scope: !8932)
!8950 = !DILocation(line: 3002, column: 2, scope: !8932)
!8951 = distinct !DISubprogram(name: "cyz_dtr_rts", scope: !3, file: !3, line: 3005, type: !4190, scopeLine: 3006, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!8952 = !DILocalVariable(name: "port", arg: 1, scope: !8951, file: !3, line: 3005, type: !3911)
!8953 = !DILocation(line: 3005, column: 42, scope: !8951)
!8954 = !DILocalVariable(name: "raise", arg: 2, scope: !8951, file: !3, line: 3005, type: !139)
!8955 = !DILocation(line: 3005, column: 52, scope: !8951)
!8956 = !DILocalVariable(name: "info", scope: !8951, file: !3, line: 3007, type: !134)
!8957 = !DILocation(line: 3007, column: 24, scope: !8951)
!8958 = !DILocalVariable(name: "__mptr", scope: !8959, file: !3, line: 3007, type: !118)
!8959 = distinct !DILexicalBlock(scope: !8951, file: !3, line: 3007, column: 31)
!8960 = !DILocation(line: 3007, column: 31, scope: !8959)
!8961 = !DILocation(line: 3007, column: 31, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8959, file: !3, line: 3007, column: 31)
!8963 = !DILocalVariable(name: "cinfo", scope: !8951, file: !3, line: 3009, type: !4229)
!8964 = !DILocation(line: 3009, column: 24, scope: !8951)
!8965 = !DILocation(line: 3009, column: 32, scope: !8951)
!8966 = !DILocation(line: 3009, column: 38, scope: !8951)
!8967 = !DILocalVariable(name: "ch_ctrl", scope: !8951, file: !3, line: 3010, type: !4306)
!8968 = !DILocation(line: 3010, column: 26, scope: !8951)
!8969 = !DILocation(line: 3010, column: 36, scope: !8951)
!8970 = !DILocation(line: 3010, column: 42, scope: !8951)
!8971 = !DILocation(line: 3010, column: 44, scope: !8951)
!8972 = !DILocation(line: 3010, column: 48, scope: !8951)
!8973 = !DILocalVariable(name: "ret", scope: !8951, file: !3, line: 3011, type: !139)
!8974 = !DILocation(line: 3011, column: 6, scope: !8951)
!8975 = !DILocalVariable(name: "channel", scope: !8951, file: !3, line: 3011, type: !139)
!8976 = !DILocation(line: 3011, column: 11, scope: !8951)
!8977 = !DILocation(line: 3011, column: 21, scope: !8951)
!8978 = !DILocation(line: 3011, column: 27, scope: !8951)
!8979 = !DILocation(line: 3011, column: 34, scope: !8951)
!8980 = !DILocation(line: 3011, column: 41, scope: !8951)
!8981 = !DILocation(line: 3011, column: 32, scope: !8951)
!8982 = !DILocalVariable(name: "rs", scope: !8951, file: !3, line: 3012, type: !426)
!8983 = !DILocation(line: 3012, column: 6, scope: !8951)
!8984 = !DILocation(line: 3014, column: 14, scope: !8951)
!8985 = !DILocation(line: 3014, column: 23, scope: !8951)
!8986 = !DILocation(line: 3014, column: 13, scope: !8951)
!8987 = !DILocation(line: 3014, column: 7, scope: !8951)
!8988 = !DILocation(line: 3014, column: 5, scope: !8951)
!8989 = !DILocation(line: 3015, column: 6, scope: !8990)
!8990 = distinct !DILexicalBlock(scope: !8951, file: !3, line: 3015, column: 6)
!8991 = !DILocation(line: 3015, column: 6, scope: !8951)
!8992 = !DILocation(line: 3016, column: 6, scope: !8990)
!8993 = !DILocation(line: 3016, column: 3, scope: !8990)
!8994 = !DILocation(line: 3018, column: 6, scope: !8990)
!8995 = !DILocation(line: 3019, column: 2, scope: !8951)
!8996 = !DILocation(line: 3019, column: 2, scope: !8997)
!8997 = distinct !DILexicalBlock(scope: !8951, file: !3, line: 3019, column: 2)
!8998 = !{i32 -2141377123}
!8999 = !DILocation(line: 3020, column: 22, scope: !8951)
!9000 = !DILocation(line: 3020, column: 29, scope: !8951)
!9001 = !DILocation(line: 3020, column: 8, scope: !8951)
!9002 = !DILocation(line: 3020, column: 6, scope: !8951)
!9003 = !DILocation(line: 3021, column: 6, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !8951, file: !3, line: 3021, column: 6)
!9005 = !DILocation(line: 3021, column: 10, scope: !9004)
!9006 = !DILocation(line: 3021, column: 6, scope: !8951)
!9007 = !DILocation(line: 3023, column: 15, scope: !9004)
!9008 = !DILocation(line: 3023, column: 21, scope: !9004)
!9009 = !DILocation(line: 3023, column: 27, scope: !9004)
!9010 = !DILocation(line: 3022, column: 3, scope: !9004)
!9011 = !DILocation(line: 3027, column: 1, scope: !8951)
!9012 = distinct !DISubprogram(name: "cy_do_close", scope: !3, file: !3, line: 1694, type: !4194, scopeLine: 1695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!9013 = !DILocalVariable(name: "lock", arg: 1, scope: !9014, file: !6949, line: 407, type: !1098)
!9014 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !6949, file: !6949, line: 407, type: !9015, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!9015 = !DISubroutineType(types: !9016)
!9016 = !{null, !1098, !126}
!9017 = !DILocation(line: 407, column: 64, scope: !9014, inlinedAt: !9018)
!9018 = distinct !DILocation(line: 1736, column: 2, scope: !9012)
!9019 = !DILocalVariable(name: "flags", arg: 2, scope: !9014, file: !6949, line: 407, type: !126)
!9020 = !DILocation(line: 407, column: 84, scope: !9014, inlinedAt: !9018)
!9021 = !DILocation(line: 327, column: 67, scope: !7102, inlinedAt: !9022)
!9022 = distinct !DILocation(line: 1732, column: 4, scope: !9023)
!9023 = distinct !DILexicalBlock(scope: !9024, file: !3, line: 1732, column: 4)
!9024 = distinct !DILexicalBlock(scope: !9025, file: !3, line: 1732, column: 4)
!9025 = distinct !DILexicalBlock(scope: !9026, file: !3, line: 1732, column: 4)
!9026 = distinct !DILexicalBlock(scope: !9027, file: !3, line: 1732, column: 4)
!9027 = distinct !DILexicalBlock(scope: !9028, file: !3, line: 1732, column: 4)
!9028 = distinct !DILexicalBlock(scope: !9029, file: !3, line: 1724, column: 52)
!9029 = distinct !DILexicalBlock(scope: !9030, file: !3, line: 1724, column: 7)
!9030 = distinct !DILexicalBlock(scope: !9031, file: !3, line: 1717, column: 9)
!9031 = distinct !DILexicalBlock(scope: !9012, file: !3, line: 1706, column: 6)
!9032 = !DILocation(line: 407, column: 64, scope: !9014, inlinedAt: !9033)
!9033 = distinct !DILocation(line: 1730, column: 4, scope: !9028)
!9034 = !DILocation(line: 407, column: 84, scope: !9014, inlinedAt: !9033)
!9035 = !DILocation(line: 327, column: 67, scope: !7102, inlinedAt: !9036)
!9036 = distinct !DILocation(line: 1715, column: 4, scope: !9037)
!9037 = distinct !DILexicalBlock(scope: !9038, file: !3, line: 1715, column: 4)
!9038 = distinct !DILexicalBlock(scope: !9039, file: !3, line: 1715, column: 4)
!9039 = distinct !DILexicalBlock(scope: !9040, file: !3, line: 1715, column: 4)
!9040 = distinct !DILexicalBlock(scope: !9041, file: !3, line: 1715, column: 4)
!9041 = distinct !DILexicalBlock(scope: !9042, file: !3, line: 1715, column: 4)
!9042 = distinct !DILexicalBlock(scope: !9043, file: !3, line: 1710, column: 42)
!9043 = distinct !DILexicalBlock(scope: !9044, file: !3, line: 1710, column: 7)
!9044 = distinct !DILexicalBlock(scope: !9031, file: !3, line: 1706, column: 22)
!9045 = !DILocation(line: 407, column: 64, scope: !9014, inlinedAt: !9046)
!9046 = distinct !DILocation(line: 1713, column: 4, scope: !9042)
!9047 = !DILocation(line: 407, column: 84, scope: !9014, inlinedAt: !9046)
!9048 = !DILocation(line: 327, column: 67, scope: !7102, inlinedAt: !9049)
!9049 = distinct !DILocation(line: 1704, column: 2, scope: !9050)
!9050 = distinct !DILexicalBlock(scope: !9051, file: !3, line: 1704, column: 2)
!9051 = distinct !DILexicalBlock(scope: !9052, file: !3, line: 1704, column: 2)
!9052 = distinct !DILexicalBlock(scope: !9053, file: !3, line: 1704, column: 2)
!9053 = distinct !DILexicalBlock(scope: !9054, file: !3, line: 1704, column: 2)
!9054 = distinct !DILexicalBlock(scope: !9012, file: !3, line: 1704, column: 2)
!9055 = !DILocalVariable(name: "port", arg: 1, scope: !9012, file: !3, line: 1694, type: !3911)
!9056 = !DILocation(line: 1694, column: 42, scope: !9012)
!9057 = !DILocalVariable(name: "info", scope: !9012, file: !3, line: 1696, type: !134)
!9058 = !DILocation(line: 1696, column: 24, scope: !9012)
!9059 = !DILocalVariable(name: "__mptr", scope: !9060, file: !3, line: 1696, type: !118)
!9060 = distinct !DILexicalBlock(scope: !9012, file: !3, line: 1696, column: 31)
!9061 = !DILocation(line: 1696, column: 31, scope: !9060)
!9062 = !DILocation(line: 1696, column: 31, scope: !9063)
!9063 = distinct !DILexicalBlock(scope: !9060, file: !3, line: 1696, column: 31)
!9064 = !DILocalVariable(name: "card", scope: !9012, file: !3, line: 1698, type: !4229)
!9065 = !DILocation(line: 1698, column: 24, scope: !9012)
!9066 = !DILocalVariable(name: "flags", scope: !9012, file: !3, line: 1699, type: !126)
!9067 = !DILocation(line: 1699, column: 16, scope: !9012)
!9068 = !DILocalVariable(name: "channel", scope: !9012, file: !3, line: 1700, type: !139)
!9069 = !DILocation(line: 1700, column: 6, scope: !9012)
!9070 = !DILocation(line: 1702, column: 9, scope: !9012)
!9071 = !DILocation(line: 1702, column: 15, scope: !9012)
!9072 = !DILocation(line: 1702, column: 7, scope: !9012)
!9073 = !DILocation(line: 1703, column: 12, scope: !9012)
!9074 = !DILocation(line: 1703, column: 18, scope: !9012)
!9075 = !DILocation(line: 1703, column: 25, scope: !9012)
!9076 = !DILocation(line: 1703, column: 31, scope: !9012)
!9077 = !DILocation(line: 1703, column: 23, scope: !9012)
!9078 = !DILocation(line: 1703, column: 10, scope: !9012)
!9079 = !DILocation(line: 1704, column: 2, scope: !9012)
!9080 = !DILocation(line: 1704, column: 2, scope: !9054)
!9081 = !DILocalVariable(name: "__dummy", scope: !9082, file: !3, line: 1704, type: !126)
!9082 = distinct !DILexicalBlock(scope: !9053, file: !3, line: 1704, column: 2)
!9083 = !DILocation(line: 1704, column: 2, scope: !9082)
!9084 = !DILocalVariable(name: "__dummy2", scope: !9082, file: !3, line: 1704, type: !126)
!9085 = !DILocation(line: 1704, column: 2, scope: !9053)
!9086 = !DILocation(line: 1704, column: 2, scope: !9052)
!9087 = !DILocation(line: 1704, column: 2, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !9052, file: !3, line: 1704, column: 2)
!9089 = !DILocalVariable(name: "__dummy", scope: !9090, file: !3, line: 1704, type: !126)
!9090 = distinct !DILexicalBlock(scope: !9091, file: !3, line: 1704, column: 2)
!9091 = distinct !DILexicalBlock(scope: !9088, file: !3, line: 1704, column: 2)
!9092 = !DILocation(line: 1704, column: 2, scope: !9090)
!9093 = !DILocalVariable(name: "__dummy2", scope: !9090, file: !3, line: 1704, type: !126)
!9094 = !DILocation(line: 1704, column: 2, scope: !9091)
!9095 = !DILocation(line: 1704, column: 2, scope: !9051)
!9096 = !{i32 -2141429517}
!9097 = !DILocation(line: 1704, column: 2, scope: !9050)
!9098 = !DILocation(line: 329, column: 10, scope: !7102, inlinedAt: !9049)
!9099 = !DILocation(line: 329, column: 16, scope: !7102, inlinedAt: !9049)
!9100 = !DILocation(line: 1706, column: 15, scope: !9031)
!9101 = !DILocation(line: 1706, column: 7, scope: !9031)
!9102 = !DILocation(line: 1706, column: 6, scope: !9012)
!9103 = !DILocation(line: 1708, column: 14, scope: !9044)
!9104 = !DILocation(line: 1708, column: 27, scope: !9044)
!9105 = !DILocation(line: 1708, column: 35, scope: !9044)
!9106 = !DILocation(line: 1708, column: 3, scope: !9044)
!9107 = !DILocation(line: 1709, column: 14, scope: !9044)
!9108 = !DILocation(line: 1709, column: 38, scope: !9044)
!9109 = !DILocation(line: 1709, column: 28, scope: !9044)
!9110 = !DILocation(line: 1709, column: 52, scope: !9044)
!9111 = !DILocation(line: 1709, column: 3, scope: !9044)
!9112 = !DILocation(line: 1710, column: 29, scope: !9043)
!9113 = !DILocation(line: 1710, column: 35, scope: !9043)
!9114 = !DILocation(line: 1710, column: 7, scope: !9043)
!9115 = !DILocation(line: 1710, column: 7, scope: !9044)
!9116 = !DILocation(line: 1713, column: 28, scope: !9042)
!9117 = !DILocation(line: 1713, column: 34, scope: !9042)
!9118 = !DILocation(line: 1713, column: 45, scope: !9042)
!9119 = !DILocalVariable(name: "__dummy", scope: !9120, file: !6949, line: 409, type: !126)
!9120 = distinct !DILexicalBlock(scope: !9121, file: !6949, line: 409, column: 2)
!9121 = distinct !DILexicalBlock(scope: !9014, file: !6949, line: 409, column: 2)
!9122 = !DILocation(line: 409, column: 2, scope: !9120, inlinedAt: !9046)
!9123 = !DILocalVariable(name: "__dummy2", scope: !9120, file: !6949, line: 409, type: !126)
!9124 = !DILocalVariable(name: "__dummy", scope: !9125, file: !6949, line: 409, type: !126)
!9125 = distinct !DILexicalBlock(scope: !9126, file: !6949, line: 409, column: 2)
!9126 = distinct !DILexicalBlock(scope: !9127, file: !6949, line: 409, column: 2)
!9127 = distinct !DILexicalBlock(scope: !9128, file: !6949, line: 409, column: 2)
!9128 = distinct !DILexicalBlock(scope: !9121, file: !6949, line: 409, column: 2)
!9129 = !DILocation(line: 409, column: 2, scope: !9125, inlinedAt: !9046)
!9130 = !DILocalVariable(name: "__dummy2", scope: !9125, file: !6949, line: 409, type: !126)
!9131 = !DILocation(line: 409, column: 2, scope: !9126, inlinedAt: !9046)
!9132 = !DILocation(line: 409, column: 2, scope: !9133, inlinedAt: !9046)
!9133 = distinct !DILexicalBlock(scope: !9128, file: !6949, line: 409, column: 2)
!9134 = !{i32 -2145366342}
!9135 = !DILocation(line: 409, column: 2, scope: !9136, inlinedAt: !9046)
!9136 = distinct !DILexicalBlock(scope: !9133, file: !6949, line: 409, column: 2)
!9137 = !DILocation(line: 1714, column: 23, scope: !9042)
!9138 = !DILocation(line: 1714, column: 29, scope: !9042)
!9139 = !DILocation(line: 1714, column: 34, scope: !9042)
!9140 = !DILocation(line: 1714, column: 40, scope: !9042)
!9141 = !DILocation(line: 1714, column: 4, scope: !9042)
!9142 = !DILocation(line: 1715, column: 4, scope: !9042)
!9143 = !DILocation(line: 1715, column: 4, scope: !9041)
!9144 = !DILocalVariable(name: "__dummy", scope: !9145, file: !3, line: 1715, type: !126)
!9145 = distinct !DILexicalBlock(scope: !9040, file: !3, line: 1715, column: 4)
!9146 = !DILocation(line: 1715, column: 4, scope: !9145)
!9147 = !DILocalVariable(name: "__dummy2", scope: !9145, file: !3, line: 1715, type: !126)
!9148 = !DILocation(line: 1715, column: 4, scope: !9040)
!9149 = !DILocation(line: 1715, column: 4, scope: !9039)
!9150 = !DILocation(line: 1715, column: 4, scope: !9151)
!9151 = distinct !DILexicalBlock(scope: !9039, file: !3, line: 1715, column: 4)
!9152 = !DILocalVariable(name: "__dummy", scope: !9153, file: !3, line: 1715, type: !126)
!9153 = distinct !DILexicalBlock(scope: !9154, file: !3, line: 1715, column: 4)
!9154 = distinct !DILexicalBlock(scope: !9151, file: !3, line: 1715, column: 4)
!9155 = !DILocation(line: 1715, column: 4, scope: !9153)
!9156 = !DILocalVariable(name: "__dummy2", scope: !9153, file: !3, line: 1715, type: !126)
!9157 = !DILocation(line: 1715, column: 4, scope: !9154)
!9158 = !DILocation(line: 1715, column: 4, scope: !9038)
!9159 = !{i32 -2141428429}
!9160 = !DILocation(line: 1715, column: 4, scope: !9037)
!9161 = !DILocation(line: 329, column: 10, scope: !7102, inlinedAt: !9036)
!9162 = !DILocation(line: 329, column: 16, scope: !7102, inlinedAt: !9036)
!9163 = !DILocation(line: 1716, column: 3, scope: !9042)
!9164 = !DILocation(line: 1717, column: 2, scope: !9044)
!9165 = !DILocalVariable(name: "ch_ctrl", scope: !9030, file: !3, line: 1721, type: !4306)
!9166 = !DILocation(line: 1721, column: 27, scope: !9030)
!9167 = !DILocation(line: 1721, column: 37, scope: !9030)
!9168 = !DILocation(line: 1721, column: 43, scope: !9030)
!9169 = !DILocation(line: 1721, column: 45, scope: !9030)
!9170 = !DILocation(line: 1721, column: 49, scope: !9030)
!9171 = !DILocalVariable(name: "retval", scope: !9030, file: !3, line: 1722, type: !139)
!9172 = !DILocation(line: 1722, column: 7, scope: !9030)
!9173 = !DILocation(line: 1724, column: 14, scope: !9029)
!9174 = !DILocation(line: 1724, column: 23, scope: !9029)
!9175 = !DILocation(line: 1724, column: 13, scope: !9029)
!9176 = !DILocation(line: 1724, column: 7, scope: !9029)
!9177 = !DILocation(line: 1724, column: 36, scope: !9029)
!9178 = !DILocation(line: 1724, column: 7, scope: !9030)
!9179 = !DILocation(line: 1725, column: 27, scope: !9028)
!9180 = !DILocation(line: 1725, column: 33, scope: !9028)
!9181 = !DILocation(line: 1725, column: 13, scope: !9028)
!9182 = !DILocation(line: 1725, column: 11, scope: !9028)
!9183 = !DILocation(line: 1726, column: 8, scope: !9184)
!9184 = distinct !DILexicalBlock(scope: !9028, file: !3, line: 1726, column: 8)
!9185 = !DILocation(line: 1726, column: 15, scope: !9184)
!9186 = !DILocation(line: 1726, column: 8, scope: !9028)
!9187 = !DILocation(line: 1728, column: 25, scope: !9188)
!9188 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 1726, column: 21)
!9189 = !DILocation(line: 1728, column: 31, scope: !9188)
!9190 = !DILocation(line: 1728, column: 37, scope: !9188)
!9191 = !DILocation(line: 1727, column: 5, scope: !9188)
!9192 = !DILocation(line: 1729, column: 4, scope: !9188)
!9193 = !DILocation(line: 1730, column: 28, scope: !9028)
!9194 = !DILocation(line: 1730, column: 34, scope: !9028)
!9195 = !DILocation(line: 1730, column: 45, scope: !9028)
!9196 = !DILocation(line: 409, column: 2, scope: !9120, inlinedAt: !9033)
!9197 = !DILocation(line: 409, column: 2, scope: !9125, inlinedAt: !9033)
!9198 = !DILocation(line: 409, column: 2, scope: !9126, inlinedAt: !9033)
!9199 = !DILocation(line: 409, column: 2, scope: !9133, inlinedAt: !9033)
!9200 = !DILocation(line: 409, column: 2, scope: !9136, inlinedAt: !9033)
!9201 = !DILocation(line: 1731, column: 39, scope: !9028)
!9202 = !DILocation(line: 1731, column: 45, scope: !9028)
!9203 = !DILocation(line: 1731, column: 4, scope: !9028)
!9204 = !DILocation(line: 1732, column: 4, scope: !9028)
!9205 = !DILocation(line: 1732, column: 4, scope: !9027)
!9206 = !DILocalVariable(name: "__dummy", scope: !9207, file: !3, line: 1732, type: !126)
!9207 = distinct !DILexicalBlock(scope: !9026, file: !3, line: 1732, column: 4)
!9208 = !DILocation(line: 1732, column: 4, scope: !9207)
!9209 = !DILocalVariable(name: "__dummy2", scope: !9207, file: !3, line: 1732, type: !126)
!9210 = !DILocation(line: 1732, column: 4, scope: !9026)
!9211 = !DILocation(line: 1732, column: 4, scope: !9025)
!9212 = !DILocation(line: 1732, column: 4, scope: !9213)
!9213 = distinct !DILexicalBlock(scope: !9025, file: !3, line: 1732, column: 4)
!9214 = !DILocalVariable(name: "__dummy", scope: !9215, file: !3, line: 1732, type: !126)
!9215 = distinct !DILexicalBlock(scope: !9216, file: !3, line: 1732, column: 4)
!9216 = distinct !DILexicalBlock(scope: !9213, file: !3, line: 1732, column: 4)
!9217 = !DILocation(line: 1732, column: 4, scope: !9215)
!9218 = !DILocalVariable(name: "__dummy2", scope: !9215, file: !3, line: 1732, type: !126)
!9219 = !DILocation(line: 1732, column: 4, scope: !9216)
!9220 = !DILocation(line: 1732, column: 4, scope: !9024)
!9221 = !{i32 -2141427333}
!9222 = !DILocation(line: 1732, column: 4, scope: !9023)
!9223 = !DILocation(line: 329, column: 10, scope: !7102, inlinedAt: !9022)
!9224 = !DILocation(line: 329, column: 16, scope: !7102, inlinedAt: !9022)
!9225 = !DILocation(line: 1733, column: 3, scope: !9028)
!9226 = !DILocation(line: 1736, column: 26, scope: !9012)
!9227 = !DILocation(line: 1736, column: 32, scope: !9012)
!9228 = !DILocation(line: 1736, column: 43, scope: !9012)
!9229 = !DILocation(line: 409, column: 2, scope: !9120, inlinedAt: !9018)
!9230 = !DILocation(line: 409, column: 2, scope: !9125, inlinedAt: !9018)
!9231 = !DILocation(line: 409, column: 2, scope: !9126, inlinedAt: !9018)
!9232 = !DILocation(line: 409, column: 2, scope: !9133, inlinedAt: !9018)
!9233 = !DILocation(line: 409, column: 2, scope: !9136, inlinedAt: !9018)
!9234 = !DILocation(line: 1737, column: 14, scope: !9012)
!9235 = !DILocation(line: 1737, column: 20, scope: !9012)
!9236 = !DILocation(line: 1737, column: 26, scope: !9012)
!9237 = !DILocation(line: 1737, column: 2, scope: !9012)
!9238 = !DILocation(line: 1738, column: 1, scope: !9012)
!9239 = distinct !DISubprogram(name: "cyz_issue_cmd", scope: !3, file: !3, line: 894, type: !9240, scopeLine: 896, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!9240 = !DISubroutineType(types: !9241)
!9241 = !{!139, !4229, !120, !1376, !120}
!9242 = !DILocalVariable(name: "cinfo", arg: 1, scope: !9239, file: !3, line: 894, type: !4229)
!9243 = !DILocation(line: 894, column: 37, scope: !9239)
!9244 = !DILocalVariable(name: "channel", arg: 2, scope: !9239, file: !3, line: 895, type: !120)
!9245 = !DILocation(line: 895, column: 9, scope: !9239)
!9246 = !DILocalVariable(name: "cmd", arg: 3, scope: !9239, file: !3, line: 895, type: !1376)
!9247 = !DILocation(line: 895, column: 23, scope: !9239)
!9248 = !DILocalVariable(name: "param", arg: 4, scope: !9239, file: !3, line: 895, type: !120)
!9249 = !DILocation(line: 895, column: 34, scope: !9239)
!9250 = !DILocalVariable(name: "board_ctrl", scope: !9239, file: !3, line: 897, type: !4271)
!9251 = !DILocation(line: 897, column: 29, scope: !9239)
!9252 = !DILocation(line: 897, column: 42, scope: !9239)
!9253 = !DILocation(line: 897, column: 49, scope: !9239)
!9254 = !DILocalVariable(name: "pci_doorbell", scope: !9239, file: !3, line: 898, type: !5583)
!9255 = !DILocation(line: 898, column: 17, scope: !9239)
!9256 = !DILocalVariable(name: "index", scope: !9239, file: !3, line: 899, type: !7)
!9257 = !DILocation(line: 899, column: 15, scope: !9239)
!9258 = !DILocation(line: 901, column: 21, scope: !9259)
!9259 = distinct !DILexicalBlock(scope: !9239, file: !3, line: 901, column: 6)
!9260 = !DILocation(line: 901, column: 7, scope: !9259)
!9261 = !DILocation(line: 901, column: 6, scope: !9239)
!9262 = !DILocation(line: 902, column: 3, scope: !9259)
!9263 = !DILocation(line: 904, column: 8, scope: !9239)
!9264 = !DILocation(line: 905, column: 18, scope: !9239)
!9265 = !DILocation(line: 905, column: 25, scope: !9239)
!9266 = !DILocation(line: 905, column: 34, scope: !9239)
!9267 = !DILocation(line: 905, column: 41, scope: !9239)
!9268 = !DILocation(line: 905, column: 15, scope: !9239)
!9269 = !DILocation(line: 906, column: 2, scope: !9239)
!9270 = !DILocation(line: 906, column: 16, scope: !9239)
!9271 = !DILocation(line: 906, column: 10, scope: !9239)
!9272 = !DILocation(line: 906, column: 30, scope: !9239)
!9273 = !DILocation(line: 906, column: 38, scope: !9239)
!9274 = !DILocation(line: 907, column: 12, scope: !9275)
!9275 = distinct !DILexicalBlock(scope: !9276, file: !3, line: 907, column: 7)
!9276 = distinct !DILexicalBlock(scope: !9239, file: !3, line: 906, column: 44)
!9277 = !DILocation(line: 907, column: 15, scope: !9275)
!9278 = !DILocation(line: 907, column: 7, scope: !9276)
!9279 = !DILocation(line: 908, column: 23, scope: !9275)
!9280 = !DILocation(line: 908, column: 17, scope: !9275)
!9281 = !DILocation(line: 908, column: 37, scope: !9275)
!9282 = !DILocation(line: 908, column: 4, scope: !9275)
!9283 = !DILocation(line: 909, column: 3, scope: !9284)
!9284 = distinct !DILexicalBlock(scope: !9285, file: !3, line: 909, column: 3)
!9285 = distinct !DILexicalBlock(scope: !9286, file: !3, line: 909, column: 3)
!9286 = distinct !DILexicalBlock(scope: !9287, file: !3, line: 909, column: 3)
!9287 = distinct !DILexicalBlock(scope: !9276, file: !3, line: 909, column: 3)
!9288 = distinct !{!9288, !9269, !9289}
!9289 = !DILocation(line: 910, column: 2, scope: !9239)
!9290 = !DILocation(line: 911, column: 2, scope: !9239)
!9291 = !DILocation(line: 911, column: 2, scope: !9292)
!9292 = distinct !DILexicalBlock(scope: !9239, file: !3, line: 911, column: 2)
!9293 = !{i32 -2141444484}
!9294 = !DILocation(line: 912, column: 2, scope: !9239)
!9295 = !DILocation(line: 912, column: 2, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9239, file: !3, line: 912, column: 2)
!9297 = !{i32 -2141444367}
!9298 = !DILocation(line: 913, column: 2, scope: !9239)
!9299 = !DILocation(line: 913, column: 2, scope: !9300)
!9300 = distinct !DILexicalBlock(scope: !9239, file: !3, line: 913, column: 2)
!9301 = !{i32 -2141444257}
!9302 = !DILocation(line: 915, column: 2, scope: !9239)
!9303 = !DILocation(line: 916, column: 1, scope: !9239)
!9304 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !9305, file: !9305, line: 666, type: !9306, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!9305 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!9306 = !DISubroutineType(types: !9307)
!9307 = !{!126}
!9308 = !DILocalVariable(name: "f", scope: !9304, file: !9305, line: 668, type: !126)
!9309 = !DILocation(line: 668, column: 16, scope: !9304)
!9310 = !DILocation(line: 670, column: 6, scope: !9304)
!9311 = !DILocation(line: 670, column: 4, scope: !9304)
!9312 = !DILocation(line: 671, column: 2, scope: !9304)
!9313 = !DILocation(line: 672, column: 9, scope: !9304)
!9314 = !DILocation(line: 672, column: 2, scope: !9304)
!9315 = distinct !DISubprogram(name: "tty_port_initialized", scope: !142, file: !142, line: 664, type: !5697, scopeLine: 665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!9316 = !DILocalVariable(name: "port", arg: 1, scope: !9315, file: !142, line: 664, type: !3911)
!9317 = !DILocation(line: 664, column: 58, scope: !9315)
!9318 = !DILocation(line: 666, column: 41, scope: !9315)
!9319 = !DILocation(line: 666, column: 47, scope: !9315)
!9320 = !DILocation(line: 666, column: 9, scope: !9315)
!9321 = !DILocation(line: 666, column: 2, scope: !9315)
!9322 = distinct !DISubprogram(name: "cy_wait_until_sent", scope: !3, file: !3, line: 1603, type: !3985, scopeLine: 1604, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!9323 = !DILocalVariable(name: "tty", arg: 1, scope: !9322, file: !3, line: 1603, type: !233)
!9324 = !DILocation(line: 1603, column: 51, scope: !9322)
!9325 = !DILocalVariable(name: "timeout", arg: 2, scope: !9322, file: !3, line: 1603, type: !139)
!9326 = !DILocation(line: 1603, column: 60, scope: !9322)
!9327 = !DILocalVariable(name: "card", scope: !9322, file: !3, line: 1605, type: !4229)
!9328 = !DILocation(line: 1605, column: 24, scope: !9322)
!9329 = !DILocalVariable(name: "info", scope: !9322, file: !3, line: 1606, type: !134)
!9330 = !DILocation(line: 1606, column: 24, scope: !9322)
!9331 = !DILocation(line: 1606, column: 31, scope: !9322)
!9332 = !DILocation(line: 1606, column: 36, scope: !9322)
!9333 = !DILocalVariable(name: "orig_jiffies", scope: !9322, file: !3, line: 1607, type: !126)
!9334 = !DILocation(line: 1607, column: 16, scope: !9322)
!9335 = !DILocalVariable(name: "char_time", scope: !9322, file: !3, line: 1608, type: !139)
!9336 = !DILocation(line: 1608, column: 6, scope: !9322)
!9337 = !DILocation(line: 1610, column: 28, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9322, file: !3, line: 1610, column: 6)
!9339 = !DILocation(line: 1610, column: 34, scope: !9338)
!9340 = !DILocation(line: 1610, column: 39, scope: !9338)
!9341 = !DILocation(line: 1610, column: 6, scope: !9338)
!9342 = !DILocation(line: 1610, column: 6, scope: !9322)
!9343 = !DILocation(line: 1611, column: 3, scope: !9338)
!9344 = !DILocation(line: 1613, column: 6, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !9322, file: !3, line: 1613, column: 6)
!9346 = !DILocation(line: 1613, column: 12, scope: !9345)
!9347 = !DILocation(line: 1613, column: 27, scope: !9345)
!9348 = !DILocation(line: 1613, column: 6, scope: !9322)
!9349 = !DILocation(line: 1614, column: 3, scope: !9345)
!9350 = !DILocation(line: 1616, column: 17, scope: !9322)
!9351 = !DILocation(line: 1616, column: 15, scope: !9322)
!9352 = !DILocation(line: 1625, column: 15, scope: !9322)
!9353 = !DILocation(line: 1625, column: 21, scope: !9322)
!9354 = !DILocation(line: 1625, column: 29, scope: !9322)
!9355 = !DILocation(line: 1625, column: 42, scope: !9322)
!9356 = !DILocation(line: 1625, column: 48, scope: !9322)
!9357 = !DILocation(line: 1625, column: 40, scope: !9322)
!9358 = !DILocation(line: 1625, column: 12, scope: !9322)
!9359 = !DILocation(line: 1626, column: 14, scope: !9322)
!9360 = !DILocation(line: 1626, column: 24, scope: !9322)
!9361 = !DILocation(line: 1626, column: 12, scope: !9322)
!9362 = !DILocation(line: 1627, column: 6, scope: !9363)
!9363 = distinct !DILexicalBlock(scope: !9322, file: !3, line: 1627, column: 6)
!9364 = !DILocation(line: 1627, column: 16, scope: !9363)
!9365 = !DILocation(line: 1627, column: 6, scope: !9322)
!9366 = !DILocation(line: 1628, column: 13, scope: !9363)
!9367 = !DILocation(line: 1628, column: 3, scope: !9363)
!9368 = !DILocation(line: 1629, column: 6, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9322, file: !3, line: 1629, column: 6)
!9370 = !DILocation(line: 1629, column: 14, scope: !9369)
!9371 = !DILocation(line: 1629, column: 6, scope: !9322)
!9372 = !DILocation(line: 1630, column: 11, scope: !9369)
!9373 = !DILocation(line: 1630, column: 3, scope: !9369)
!9374 = !DILocation(line: 1631, column: 6, scope: !9375)
!9375 = distinct !DILexicalBlock(scope: !9322, file: !3, line: 1631, column: 6)
!9376 = !DILocation(line: 1631, column: 6, scope: !9322)
!9377 = !DILocalVariable(name: "__UNIQUE_ID___x240", scope: !9378, file: !3, line: 1632, type: !139)
!9378 = distinct !DILexicalBlock(scope: !9375, file: !3, line: 1632, column: 15)
!9379 = !DILocation(line: 1632, column: 15, scope: !9378)
!9380 = !DILocalVariable(name: "__UNIQUE_ID___y241", scope: !9378, file: !3, line: 1632, type: !139)
!9381 = !DILocation(line: 1632, column: 13, scope: !9375)
!9382 = !DILocation(line: 1632, column: 3, scope: !9375)
!9383 = !DILocation(line: 1642, column: 7, scope: !9384)
!9384 = distinct !DILexicalBlock(scope: !9322, file: !3, line: 1642, column: 6)
!9385 = !DILocation(line: 1642, column: 15, scope: !9384)
!9386 = !DILocation(line: 1642, column: 18, scope: !9384)
!9387 = !DILocation(line: 1642, column: 32, scope: !9384)
!9388 = !DILocation(line: 1642, column: 38, scope: !9384)
!9389 = !DILocation(line: 1642, column: 30, scope: !9384)
!9390 = !DILocation(line: 1642, column: 26, scope: !9384)
!9391 = !DILocation(line: 1642, column: 6, scope: !9322)
!9392 = !DILocation(line: 1643, column: 17, scope: !9384)
!9393 = !DILocation(line: 1643, column: 23, scope: !9384)
!9394 = !DILocation(line: 1643, column: 15, scope: !9384)
!9395 = !DILocation(line: 1643, column: 11, scope: !9384)
!9396 = !DILocation(line: 1643, column: 3, scope: !9384)
!9397 = !DILocation(line: 1645, column: 9, scope: !9322)
!9398 = !DILocation(line: 1645, column: 15, scope: !9322)
!9399 = !DILocation(line: 1645, column: 7, scope: !9322)
!9400 = !DILocation(line: 1646, column: 15, scope: !9401)
!9401 = distinct !DILexicalBlock(scope: !9322, file: !3, line: 1646, column: 6)
!9402 = !DILocation(line: 1646, column: 7, scope: !9401)
!9403 = !DILocation(line: 1646, column: 6, scope: !9322)
!9404 = !DILocation(line: 1647, column: 3, scope: !9405)
!9405 = distinct !DILexicalBlock(scope: !9401, file: !3, line: 1646, column: 22)
!9406 = !DILocation(line: 1647, column: 20, scope: !9405)
!9407 = !DILocation(line: 1647, column: 10, scope: !9405)
!9408 = !DILocation(line: 1647, column: 34, scope: !9405)
!9409 = !DILocation(line: 1648, column: 46, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9411, file: !3, line: 1648, column: 8)
!9411 = distinct !DILexicalBlock(scope: !9405, file: !3, line: 1647, column: 45)
!9412 = !DILocation(line: 1648, column: 29, scope: !9410)
!9413 = !DILocation(line: 1648, column: 8, scope: !9410)
!9414 = !DILocation(line: 1648, column: 8, scope: !9411)
!9415 = !DILocation(line: 1649, column: 5, scope: !9410)
!9416 = !DILocation(line: 1650, column: 8, scope: !9417)
!9417 = distinct !DILexicalBlock(scope: !9411, file: !3, line: 1650, column: 8)
!9418 = !DILocation(line: 1650, column: 16, scope: !9417)
!9419 = !DILocation(line: 1650, column: 19, scope: !9417)
!9420 = !DILocation(line: 1650, column: 8, scope: !9411)
!9421 = !DILocation(line: 1652, column: 5, scope: !9417)
!9422 = distinct !{!9422, !9404, !9423}
!9423 = !DILocation(line: 1653, column: 3, scope: !9405)
!9424 = !DILocation(line: 1654, column: 2, scope: !9405)
!9425 = !DILocation(line: 1656, column: 40, scope: !9322)
!9426 = !DILocation(line: 1656, column: 50, scope: !9322)
!9427 = !DILocation(line: 1656, column: 23, scope: !9322)
!9428 = !DILocation(line: 1656, column: 2, scope: !9322)
!9429 = !DILocation(line: 1657, column: 1, scope: !9322)
!9430 = distinct !DISubprogram(name: "cy_shutdown", scope: !3, file: !3, line: 1418, type: !9431, scopeLine: 1419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!9431 = !DISubroutineType(types: !9432)
!9432 = !{null, !134, !233}
!9433 = !DILocation(line: 327, column: 67, scope: !7102, inlinedAt: !9434)
!9434 = distinct !DILocation(line: 1459, column: 3, scope: !9435)
!9435 = distinct !DILexicalBlock(scope: !9436, file: !3, line: 1459, column: 3)
!9436 = distinct !DILexicalBlock(scope: !9437, file: !3, line: 1459, column: 3)
!9437 = distinct !DILexicalBlock(scope: !9438, file: !3, line: 1459, column: 3)
!9438 = distinct !DILexicalBlock(scope: !9439, file: !3, line: 1459, column: 3)
!9439 = distinct !DILexicalBlock(scope: !9440, file: !3, line: 1459, column: 3)
!9440 = distinct !DILexicalBlock(scope: !9441, file: !3, line: 1449, column: 9)
!9441 = distinct !DILexicalBlock(scope: !9430, file: !3, line: 1427, column: 6)
!9442 = !DILocation(line: 407, column: 64, scope: !9014, inlinedAt: !9443)
!9443 = distinct !DILocation(line: 1448, column: 3, scope: !9444)
!9444 = distinct !DILexicalBlock(scope: !9441, file: !3, line: 1427, column: 22)
!9445 = !DILocation(line: 407, column: 84, scope: !9014, inlinedAt: !9443)
!9446 = !DILocation(line: 407, column: 64, scope: !9014, inlinedAt: !9447)
!9447 = distinct !DILocation(line: 1474, column: 3, scope: !9440)
!9448 = !DILocation(line: 407, column: 84, scope: !9014, inlinedAt: !9447)
!9449 = !DILocation(line: 327, column: 67, scope: !7102, inlinedAt: !9450)
!9450 = distinct !DILocation(line: 1428, column: 3, scope: !9451)
!9451 = distinct !DILexicalBlock(scope: !9452, file: !3, line: 1428, column: 3)
!9452 = distinct !DILexicalBlock(scope: !9453, file: !3, line: 1428, column: 3)
!9453 = distinct !DILexicalBlock(scope: !9454, file: !3, line: 1428, column: 3)
!9454 = distinct !DILexicalBlock(scope: !9455, file: !3, line: 1428, column: 3)
!9455 = distinct !DILexicalBlock(scope: !9444, file: !3, line: 1428, column: 3)
!9456 = !DILocalVariable(name: "info", arg: 1, scope: !9430, file: !3, line: 1418, type: !134)
!9457 = !DILocation(line: 1418, column: 47, scope: !9430)
!9458 = !DILocalVariable(name: "tty", arg: 2, scope: !9430, file: !3, line: 1418, type: !233)
!9459 = !DILocation(line: 1418, column: 72, scope: !9430)
!9460 = !DILocalVariable(name: "card", scope: !9430, file: !3, line: 1420, type: !4229)
!9461 = !DILocation(line: 1420, column: 24, scope: !9430)
!9462 = !DILocalVariable(name: "flags", scope: !9430, file: !3, line: 1421, type: !126)
!9463 = !DILocation(line: 1421, column: 16, scope: !9430)
!9464 = !DILocation(line: 1423, column: 29, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !9430, file: !3, line: 1423, column: 6)
!9466 = !DILocation(line: 1423, column: 35, scope: !9465)
!9467 = !DILocation(line: 1423, column: 7, scope: !9465)
!9468 = !DILocation(line: 1423, column: 6, scope: !9430)
!9469 = !DILocation(line: 1424, column: 3, scope: !9465)
!9470 = !DILocation(line: 1426, column: 9, scope: !9430)
!9471 = !DILocation(line: 1426, column: 15, scope: !9430)
!9472 = !DILocation(line: 1426, column: 7, scope: !9430)
!9473 = !DILocation(line: 1427, column: 15, scope: !9441)
!9474 = !DILocation(line: 1427, column: 7, scope: !9441)
!9475 = !DILocation(line: 1427, column: 6, scope: !9430)
!9476 = !DILocation(line: 1428, column: 3, scope: !9444)
!9477 = !DILocation(line: 1428, column: 3, scope: !9455)
!9478 = !DILocalVariable(name: "__dummy", scope: !9479, file: !3, line: 1428, type: !126)
!9479 = distinct !DILexicalBlock(scope: !9454, file: !3, line: 1428, column: 3)
!9480 = !DILocation(line: 1428, column: 3, scope: !9479)
!9481 = !DILocalVariable(name: "__dummy2", scope: !9479, file: !3, line: 1428, type: !126)
!9482 = !DILocation(line: 1428, column: 3, scope: !9454)
!9483 = !DILocation(line: 1428, column: 3, scope: !9453)
!9484 = !DILocation(line: 1428, column: 3, scope: !9485)
!9485 = distinct !DILexicalBlock(scope: !9453, file: !3, line: 1428, column: 3)
!9486 = !DILocalVariable(name: "__dummy", scope: !9487, file: !3, line: 1428, type: !126)
!9487 = distinct !DILexicalBlock(scope: !9488, file: !3, line: 1428, column: 3)
!9488 = distinct !DILexicalBlock(scope: !9485, file: !3, line: 1428, column: 3)
!9489 = !DILocation(line: 1428, column: 3, scope: !9487)
!9490 = !DILocalVariable(name: "__dummy2", scope: !9487, file: !3, line: 1428, type: !126)
!9491 = !DILocation(line: 1428, column: 3, scope: !9488)
!9492 = !DILocation(line: 1428, column: 3, scope: !9452)
!9493 = !{i32 -2141437533}
!9494 = !DILocation(line: 1428, column: 3, scope: !9451)
!9495 = !DILocation(line: 329, column: 10, scope: !7102, inlinedAt: !9450)
!9496 = !DILocation(line: 329, column: 16, scope: !7102, inlinedAt: !9450)
!9497 = !DILocation(line: 1431, column: 3, scope: !9444)
!9498 = !DILocation(line: 1433, column: 7, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9444, file: !3, line: 1433, column: 7)
!9500 = !DILocation(line: 1433, column: 13, scope: !9499)
!9501 = !DILocation(line: 1433, column: 18, scope: !9499)
!9502 = !DILocation(line: 1433, column: 7, scope: !9444)
!9503 = !DILocalVariable(name: "temp", scope: !9504, file: !3, line: 1434, type: !123)
!9504 = distinct !DILexicalBlock(scope: !9499, file: !3, line: 1433, column: 28)
!9505 = !DILocation(line: 1434, column: 19, scope: !9504)
!9506 = !DILocation(line: 1435, column: 11, scope: !9504)
!9507 = !DILocation(line: 1435, column: 17, scope: !9504)
!9508 = !DILocation(line: 1435, column: 22, scope: !9504)
!9509 = !DILocation(line: 1435, column: 9, scope: !9504)
!9510 = !DILocation(line: 1436, column: 4, scope: !9504)
!9511 = !DILocation(line: 1436, column: 10, scope: !9504)
!9512 = !DILocation(line: 1436, column: 15, scope: !9504)
!9513 = !DILocation(line: 1436, column: 24, scope: !9504)
!9514 = !DILocation(line: 1437, column: 4, scope: !9504)
!9515 = !DILocation(line: 1438, column: 3, scope: !9504)
!9516 = !DILocation(line: 1439, column: 7, scope: !9517)
!9517 = distinct !DILexicalBlock(scope: !9444, file: !3, line: 1439, column: 7)
!9518 = !DILocation(line: 1439, column: 7, scope: !9444)
!9519 = !DILocation(line: 1440, column: 23, scope: !9517)
!9520 = !DILocation(line: 1440, column: 4, scope: !9517)
!9521 = !DILocation(line: 1442, column: 17, scope: !9444)
!9522 = !DILocation(line: 1442, column: 3, scope: !9444)
!9523 = !DILocation(line: 1446, column: 26, scope: !9444)
!9524 = !DILocation(line: 1446, column: 31, scope: !9444)
!9525 = !DILocation(line: 1446, column: 3, scope: !9444)
!9526 = !DILocation(line: 1447, column: 29, scope: !9444)
!9527 = !DILocation(line: 1447, column: 35, scope: !9444)
!9528 = !DILocation(line: 1447, column: 3, scope: !9444)
!9529 = !DILocation(line: 1448, column: 27, scope: !9444)
!9530 = !DILocation(line: 1448, column: 33, scope: !9444)
!9531 = !DILocation(line: 1448, column: 44, scope: !9444)
!9532 = !DILocation(line: 409, column: 2, scope: !9120, inlinedAt: !9443)
!9533 = !DILocation(line: 409, column: 2, scope: !9125, inlinedAt: !9443)
!9534 = !DILocation(line: 409, column: 2, scope: !9126, inlinedAt: !9443)
!9535 = !DILocation(line: 409, column: 2, scope: !9133, inlinedAt: !9443)
!9536 = !DILocation(line: 409, column: 2, scope: !9136, inlinedAt: !9443)
!9537 = !DILocation(line: 1449, column: 2, scope: !9444)
!9538 = !DILocation(line: 1456, column: 22, scope: !9539)
!9539 = distinct !DILexicalBlock(scope: !9440, file: !3, line: 1456, column: 7)
!9540 = !DILocation(line: 1456, column: 8, scope: !9539)
!9541 = !DILocation(line: 1456, column: 7, scope: !9440)
!9542 = !DILocation(line: 1457, column: 4, scope: !9539)
!9543 = !DILocation(line: 1459, column: 3, scope: !9440)
!9544 = !DILocation(line: 1459, column: 3, scope: !9439)
!9545 = !DILocalVariable(name: "__dummy", scope: !9546, file: !3, line: 1459, type: !126)
!9546 = distinct !DILexicalBlock(scope: !9438, file: !3, line: 1459, column: 3)
!9547 = !DILocation(line: 1459, column: 3, scope: !9546)
!9548 = !DILocalVariable(name: "__dummy2", scope: !9546, file: !3, line: 1459, type: !126)
!9549 = !DILocation(line: 1459, column: 3, scope: !9438)
!9550 = !DILocation(line: 1459, column: 3, scope: !9437)
!9551 = !DILocation(line: 1459, column: 3, scope: !9552)
!9552 = distinct !DILexicalBlock(scope: !9437, file: !3, line: 1459, column: 3)
!9553 = !DILocalVariable(name: "__dummy", scope: !9554, file: !3, line: 1459, type: !126)
!9554 = distinct !DILexicalBlock(scope: !9555, file: !3, line: 1459, column: 3)
!9555 = distinct !DILexicalBlock(scope: !9552, file: !3, line: 1459, column: 3)
!9556 = !DILocation(line: 1459, column: 3, scope: !9554)
!9557 = !DILocalVariable(name: "__dummy2", scope: !9554, file: !3, line: 1459, type: !126)
!9558 = !DILocation(line: 1459, column: 3, scope: !9555)
!9559 = !DILocation(line: 1459, column: 3, scope: !9436)
!9560 = !{i32 -2141436228}
!9561 = !DILocation(line: 1459, column: 3, scope: !9435)
!9562 = !DILocation(line: 329, column: 10, scope: !7102, inlinedAt: !9434)
!9563 = !DILocation(line: 329, column: 16, scope: !7102, inlinedAt: !9434)
!9564 = !DILocation(line: 1461, column: 7, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9440, file: !3, line: 1461, column: 7)
!9566 = !DILocation(line: 1461, column: 13, scope: !9565)
!9567 = !DILocation(line: 1461, column: 18, scope: !9565)
!9568 = !DILocation(line: 1461, column: 7, scope: !9440)
!9569 = !DILocalVariable(name: "temp", scope: !9570, file: !3, line: 1462, type: !123)
!9570 = distinct !DILexicalBlock(scope: !9565, file: !3, line: 1461, column: 28)
!9571 = !DILocation(line: 1462, column: 19, scope: !9570)
!9572 = !DILocation(line: 1463, column: 11, scope: !9570)
!9573 = !DILocation(line: 1463, column: 17, scope: !9570)
!9574 = !DILocation(line: 1463, column: 22, scope: !9570)
!9575 = !DILocation(line: 1463, column: 9, scope: !9570)
!9576 = !DILocation(line: 1464, column: 4, scope: !9570)
!9577 = !DILocation(line: 1464, column: 10, scope: !9570)
!9578 = !DILocation(line: 1464, column: 15, scope: !9570)
!9579 = !DILocation(line: 1464, column: 24, scope: !9570)
!9580 = !DILocation(line: 1465, column: 4, scope: !9570)
!9581 = !DILocation(line: 1466, column: 3, scope: !9570)
!9582 = !DILocation(line: 1468, column: 7, scope: !9583)
!9583 = distinct !DILexicalBlock(scope: !9440, file: !3, line: 1468, column: 7)
!9584 = !DILocation(line: 1468, column: 7, scope: !9440)
!9585 = !DILocation(line: 1469, column: 28, scope: !9583)
!9586 = !DILocation(line: 1469, column: 34, scope: !9583)
!9587 = !DILocation(line: 1469, column: 4, scope: !9583)
!9588 = !DILocation(line: 1471, column: 26, scope: !9440)
!9589 = !DILocation(line: 1471, column: 31, scope: !9440)
!9590 = !DILocation(line: 1471, column: 3, scope: !9440)
!9591 = !DILocation(line: 1472, column: 29, scope: !9440)
!9592 = !DILocation(line: 1472, column: 35, scope: !9440)
!9593 = !DILocation(line: 1472, column: 3, scope: !9440)
!9594 = !DILocation(line: 1474, column: 27, scope: !9440)
!9595 = !DILocation(line: 1474, column: 33, scope: !9440)
!9596 = !DILocation(line: 1474, column: 44, scope: !9440)
!9597 = !DILocation(line: 409, column: 2, scope: !9120, inlinedAt: !9447)
!9598 = !DILocation(line: 409, column: 2, scope: !9125, inlinedAt: !9447)
!9599 = !DILocation(line: 409, column: 2, scope: !9126, inlinedAt: !9447)
!9600 = !DILocation(line: 409, column: 2, scope: !9133, inlinedAt: !9447)
!9601 = !DILocation(line: 409, column: 2, scope: !9136, inlinedAt: !9447)
!9602 = !DILocation(line: 1480, column: 1, scope: !9430)
!9603 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !9305, file: !9305, line: 646, type: !9306, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!9604 = !DILocalVariable(name: "__ret", scope: !9605, file: !9305, line: 648, type: !126)
!9605 = distinct !DILexicalBlock(scope: !9603, file: !9305, line: 648, column: 9)
!9606 = !DILocation(line: 648, column: 9, scope: !9605)
!9607 = !DILocalVariable(name: "__edi", scope: !9605, file: !9305, line: 648, type: !126)
!9608 = !DILocalVariable(name: "__esi", scope: !9605, file: !9305, line: 648, type: !126)
!9609 = !DILocalVariable(name: "__edx", scope: !9605, file: !9305, line: 648, type: !126)
!9610 = !DILocalVariable(name: "__ecx", scope: !9605, file: !9305, line: 648, type: !126)
!9611 = !DILocalVariable(name: "__eax", scope: !9605, file: !9305, line: 648, type: !126)
!9612 = !DILocation(line: 648, column: 9, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9614, file: !9305, line: 648, column: 9)
!9614 = distinct !DILexicalBlock(scope: !9605, file: !9305, line: 648, column: 9)
!9615 = !{i32 -2145679911, i32 -2145677596, i32 -2145677362, i32 -2145677311, i32 -2145677283, i32 -2145677258, i32 -2145677574, i32 -2145677561, i32 -2145677123, i32 -2145677004, i32 -2145677469, i32 -2145677442, i32 -2145677414, i32 -2145677384}
!9616 = !DILocalVariable(name: "__mask", scope: !9617, file: !9305, line: 648, type: !126)
!9617 = distinct !DILexicalBlock(scope: !9613, file: !9305, line: 648, column: 9)
!9618 = !DILocation(line: 648, column: 9, scope: !9617)
!9619 = !DILocation(line: 648, column: 9, scope: !9614)
!9620 = !DILocation(line: 648, column: 2, scope: !9603)
!9621 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !9305, file: !9305, line: 656, type: !1954, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!9622 = !DILocalVariable(name: "__edi", scope: !9623, file: !9305, line: 658, type: !126)
!9623 = distinct !DILexicalBlock(scope: !9621, file: !9305, line: 658, column: 2)
!9624 = !DILocation(line: 658, column: 2, scope: !9623)
!9625 = !DILocalVariable(name: "__esi", scope: !9623, file: !9305, line: 658, type: !126)
!9626 = !DILocalVariable(name: "__edx", scope: !9623, file: !9305, line: 658, type: !126)
!9627 = !DILocalVariable(name: "__ecx", scope: !9623, file: !9305, line: 658, type: !126)
!9628 = !DILocalVariable(name: "__eax", scope: !9623, file: !9305, line: 658, type: !126)
!9629 = !{i32 -2145672817, i32 -2145672085, i32 -2145671851, i32 -2145671800, i32 -2145671772, i32 -2145671747, i32 -2145672063, i32 -2145672050, i32 -2145671612, i32 -2145671493, i32 -2145671958, i32 -2145671931, i32 -2145671903, i32 -2145671873}
!9630 = !DILocation(line: 659, column: 1, scope: !9621)
!9631 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !9305, file: !9305, line: 651, type: !9632, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!9632 = !DISubroutineType(types: !9633)
!9633 = !{null, !126}
!9634 = !DILocalVariable(name: "f", arg: 1, scope: !9631, file: !9305, line: 651, type: !126)
!9635 = !DILocation(line: 651, column: 65, scope: !9631)
!9636 = !DILocalVariable(name: "__edi", scope: !9637, file: !9305, line: 653, type: !126)
!9637 = distinct !DILexicalBlock(scope: !9631, file: !9305, line: 653, column: 2)
!9638 = !DILocation(line: 653, column: 2, scope: !9637)
!9639 = !DILocalVariable(name: "__esi", scope: !9637, file: !9305, line: 653, type: !126)
!9640 = !DILocalVariable(name: "__edx", scope: !9637, file: !9305, line: 653, type: !126)
!9641 = !DILocalVariable(name: "__ecx", scope: !9637, file: !9305, line: 653, type: !126)
!9642 = !DILocalVariable(name: "__eax", scope: !9637, file: !9305, line: 653, type: !126)
!9643 = !{i32 -2145675444, i32 -2145674694, i32 -2145674460, i32 -2145674409, i32 -2145674381, i32 -2145674356, i32 -2145674672, i32 -2145674659, i32 -2145674221, i32 -2145674102, i32 -2145674567, i32 -2145674540, i32 -2145674512, i32 -2145674482}
!9644 = !DILocation(line: 654, column: 1, scope: !9631)
!9645 = distinct !DISubprogram(name: "serial_paranoia_check", scope: !3, file: !3, line: 330, type: !9646, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!9646 = !DISubroutineType(types: !9647)
!9647 = !{!139, !134, !256, !256}
!9648 = !DILocalVariable(name: "info", arg: 1, scope: !9645, file: !3, line: 330, type: !134)
!9649 = !DILocation(line: 330, column: 56, scope: !9645)
!9650 = !DILocalVariable(name: "name", arg: 2, scope: !9645, file: !3, line: 331, type: !256)
!9651 = !DILocation(line: 331, column: 15, scope: !9645)
!9652 = !DILocalVariable(name: "routine", arg: 3, scope: !9645, file: !3, line: 331, type: !256)
!9653 = !DILocation(line: 331, column: 33, scope: !9645)
!9654 = !DILocation(line: 334, column: 7, scope: !9655)
!9655 = distinct !DILexicalBlock(scope: !9645, file: !3, line: 334, column: 6)
!9656 = !DILocation(line: 334, column: 6, scope: !9645)
!9657 = !DILocation(line: 336, column: 16, scope: !9658)
!9658 = distinct !DILexicalBlock(scope: !9655, file: !3, line: 334, column: 13)
!9659 = !DILocation(line: 336, column: 22, scope: !9658)
!9660 = !DILocation(line: 335, column: 3, scope: !9658)
!9661 = !DILocation(line: 337, column: 3, scope: !9658)
!9662 = !DILocation(line: 340, column: 6, scope: !9663)
!9663 = distinct !DILexicalBlock(scope: !9645, file: !3, line: 340, column: 6)
!9664 = !DILocation(line: 340, column: 12, scope: !9663)
!9665 = !DILocation(line: 340, column: 18, scope: !9663)
!9666 = !DILocation(line: 340, column: 6, scope: !9645)
!9667 = !DILocation(line: 342, column: 28, scope: !9668)
!9668 = distinct !DILexicalBlock(scope: !9663, file: !3, line: 340, column: 37)
!9669 = !DILocation(line: 342, column: 34, scope: !9668)
!9670 = !DILocation(line: 341, column: 3, scope: !9668)
!9671 = !DILocation(line: 343, column: 3, scope: !9668)
!9672 = !DILocation(line: 346, column: 2, scope: !9645)
!9673 = !DILocation(line: 347, column: 1, scope: !9645)
!9674 = distinct !DISubprogram(name: "cyy_change_rts_dtr", scope: !3, file: !3, line: 820, type: !9675, scopeLine: 822, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!9675 = !DISubroutineType(types: !9676)
!9676 = !{null, !134, !7, !7}
!9677 = !DILocalVariable(name: "info", arg: 1, scope: !9674, file: !3, line: 820, type: !134)
!9678 = !DILocation(line: 820, column: 54, scope: !9674)
!9679 = !DILocalVariable(name: "set", arg: 2, scope: !9674, file: !3, line: 820, type: !7)
!9680 = !DILocation(line: 820, column: 73, scope: !9674)
!9681 = !DILocalVariable(name: "clear", arg: 3, scope: !9674, file: !3, line: 821, type: !7)
!9682 = !DILocation(line: 821, column: 16, scope: !9674)
!9683 = !DILocalVariable(name: "card", scope: !9674, file: !3, line: 823, type: !4229)
!9684 = !DILocation(line: 823, column: 24, scope: !9674)
!9685 = !DILocation(line: 823, column: 31, scope: !9674)
!9686 = !DILocation(line: 823, column: 37, scope: !9674)
!9687 = !DILocalVariable(name: "channel", scope: !9674, file: !3, line: 824, type: !139)
!9688 = !DILocation(line: 824, column: 6, scope: !9674)
!9689 = !DILocation(line: 824, column: 16, scope: !9674)
!9690 = !DILocation(line: 824, column: 22, scope: !9674)
!9691 = !DILocation(line: 824, column: 29, scope: !9674)
!9692 = !DILocation(line: 824, column: 35, scope: !9674)
!9693 = !DILocation(line: 824, column: 27, scope: !9674)
!9694 = !DILocalVariable(name: "rts", scope: !9674, file: !3, line: 825, type: !426)
!9695 = !DILocation(line: 825, column: 6, scope: !9674)
!9696 = !DILocalVariable(name: "dtr", scope: !9674, file: !3, line: 825, type: !426)
!9697 = !DILocation(line: 825, column: 11, scope: !9674)
!9698 = !DILocalVariable(name: "msvrr", scope: !9674, file: !3, line: 825, type: !426)
!9699 = !DILocation(line: 825, column: 16, scope: !9674)
!9700 = !DILocalVariable(name: "msvrd", scope: !9674, file: !3, line: 825, type: !426)
!9701 = !DILocation(line: 825, column: 23, scope: !9674)
!9702 = !DILocation(line: 827, column: 10, scope: !9674)
!9703 = !DILocation(line: 829, column: 6, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9674, file: !3, line: 829, column: 6)
!9705 = !DILocation(line: 829, column: 12, scope: !9704)
!9706 = !DILocation(line: 829, column: 6, scope: !9674)
!9707 = !DILocation(line: 830, column: 9, scope: !9708)
!9708 = distinct !DILexicalBlock(scope: !9704, file: !3, line: 829, column: 24)
!9709 = !DILocation(line: 831, column: 9, scope: !9708)
!9710 = !DILocation(line: 832, column: 7, scope: !9708)
!9711 = !DILocation(line: 833, column: 7, scope: !9708)
!9712 = !DILocation(line: 834, column: 2, scope: !9708)
!9713 = !DILocation(line: 835, column: 9, scope: !9714)
!9714 = distinct !DILexicalBlock(scope: !9704, file: !3, line: 834, column: 9)
!9715 = !DILocation(line: 836, column: 9, scope: !9714)
!9716 = !DILocation(line: 837, column: 7, scope: !9714)
!9717 = !DILocation(line: 838, column: 7, scope: !9714)
!9718 = !DILocation(line: 840, column: 6, scope: !9719)
!9719 = distinct !DILexicalBlock(scope: !9674, file: !3, line: 840, column: 6)
!9720 = !DILocation(line: 840, column: 10, scope: !9719)
!9721 = !DILocation(line: 840, column: 6, scope: !9674)
!9722 = !DILocation(line: 841, column: 14, scope: !9723)
!9723 = distinct !DILexicalBlock(scope: !9719, file: !3, line: 840, column: 23)
!9724 = !DILocation(line: 841, column: 27, scope: !9723)
!9725 = !DILocation(line: 841, column: 3, scope: !9723)
!9726 = !DILocation(line: 842, column: 14, scope: !9723)
!9727 = !DILocation(line: 842, column: 20, scope: !9723)
!9728 = !DILocation(line: 842, column: 27, scope: !9723)
!9729 = !DILocation(line: 842, column: 3, scope: !9723)
!9730 = !DILocation(line: 843, column: 2, scope: !9723)
!9731 = !DILocation(line: 844, column: 6, scope: !9732)
!9732 = distinct !DILexicalBlock(scope: !9674, file: !3, line: 844, column: 6)
!9733 = !DILocation(line: 844, column: 12, scope: !9732)
!9734 = !DILocation(line: 844, column: 6, scope: !9674)
!9735 = !DILocation(line: 845, column: 14, scope: !9736)
!9736 = distinct !DILexicalBlock(scope: !9732, file: !3, line: 844, column: 25)
!9737 = !DILocation(line: 845, column: 27, scope: !9736)
!9738 = !DILocation(line: 845, column: 3, scope: !9736)
!9739 = !DILocation(line: 846, column: 14, scope: !9736)
!9740 = !DILocation(line: 846, column: 20, scope: !9736)
!9741 = !DILocation(line: 846, column: 28, scope: !9736)
!9742 = !DILocation(line: 846, column: 27, scope: !9736)
!9743 = !DILocation(line: 846, column: 3, scope: !9736)
!9744 = !DILocation(line: 847, column: 2, scope: !9736)
!9745 = !DILocation(line: 848, column: 6, scope: !9746)
!9746 = distinct !DILexicalBlock(scope: !9674, file: !3, line: 848, column: 6)
!9747 = !DILocation(line: 848, column: 10, scope: !9746)
!9748 = !DILocation(line: 848, column: 6, scope: !9674)
!9749 = !DILocation(line: 849, column: 14, scope: !9750)
!9750 = distinct !DILexicalBlock(scope: !9746, file: !3, line: 848, column: 23)
!9751 = !DILocation(line: 849, column: 27, scope: !9750)
!9752 = !DILocation(line: 849, column: 3, scope: !9750)
!9753 = !DILocation(line: 850, column: 14, scope: !9750)
!9754 = !DILocation(line: 850, column: 20, scope: !9750)
!9755 = !DILocation(line: 850, column: 27, scope: !9750)
!9756 = !DILocation(line: 850, column: 3, scope: !9750)
!9757 = !DILocation(line: 857, column: 2, scope: !9750)
!9758 = !DILocation(line: 858, column: 6, scope: !9759)
!9759 = distinct !DILexicalBlock(scope: !9674, file: !3, line: 858, column: 6)
!9760 = !DILocation(line: 858, column: 12, scope: !9759)
!9761 = !DILocation(line: 858, column: 6, scope: !9674)
!9762 = !DILocation(line: 859, column: 14, scope: !9763)
!9763 = distinct !DILexicalBlock(scope: !9759, file: !3, line: 858, column: 25)
!9764 = !DILocation(line: 859, column: 27, scope: !9763)
!9765 = !DILocation(line: 859, column: 3, scope: !9763)
!9766 = !DILocation(line: 860, column: 14, scope: !9763)
!9767 = !DILocation(line: 860, column: 20, scope: !9763)
!9768 = !DILocation(line: 860, column: 28, scope: !9763)
!9769 = !DILocation(line: 860, column: 27, scope: !9763)
!9770 = !DILocation(line: 860, column: 3, scope: !9763)
!9771 = !DILocation(line: 867, column: 2, scope: !9763)
!9772 = !DILocation(line: 868, column: 1, scope: !9674)
!9773 = distinct !DISubprogram(name: "cyy_issue_cmd", scope: !3, file: !3, line: 381, type: !9774, scopeLine: 382, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!9774 = !DISubroutineType(types: !9775)
!9775 = !{!139, !134, !1375}
!9776 = !DILocalVariable(name: "port", arg: 1, scope: !9773, file: !3, line: 381, type: !134)
!9777 = !DILocation(line: 381, column: 55, scope: !9773)
!9778 = !DILocalVariable(name: "cmd", arg: 2, scope: !9773, file: !3, line: 381, type: !1375)
!9779 = !DILocation(line: 381, column: 64, scope: !9773)
!9780 = !DILocation(line: 383, column: 25, scope: !9773)
!9781 = !DILocation(line: 383, column: 31, scope: !9773)
!9782 = !DILocation(line: 383, column: 33, scope: !9773)
!9783 = !DILocation(line: 383, column: 37, scope: !9773)
!9784 = !DILocation(line: 383, column: 48, scope: !9773)
!9785 = !DILocation(line: 384, column: 4, scope: !9773)
!9786 = !DILocation(line: 384, column: 10, scope: !9773)
!9787 = !DILocation(line: 384, column: 16, scope: !9773)
!9788 = !DILocation(line: 383, column: 9, scope: !9773)
!9789 = !DILocation(line: 383, column: 2, scope: !9773)
!9790 = distinct !DISubprogram(name: "set_bit", scope: !9791, file: !9791, line: 26, type: !9792, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!9791 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!9792 = !DISubroutineType(types: !9793)
!9793 = !{null, !327, !9794}
!9794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5745, size: 64)
!9795 = !DILocalVariable(name: "nr", arg: 1, scope: !9796, file: !5748, line: 52, type: !327)
!9796 = distinct !DISubprogram(name: "arch_set_bit", scope: !5748, file: !5748, line: 52, type: !9792, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!9797 = !DILocation(line: 52, column: 19, scope: !9796, inlinedAt: !9798)
!9798 = distinct !DILocation(line: 29, column: 2, scope: !9790)
!9799 = !DILocalVariable(name: "addr", arg: 2, scope: !9796, file: !5748, line: 52, type: !9794)
!9800 = !DILocation(line: 52, column: 47, scope: !9796, inlinedAt: !9798)
!9801 = !DILocalVariable(name: "v", arg: 1, scope: !9802, file: !5763, line: 84, type: !5563)
!9802 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !5763, file: !5763, line: 84, type: !5764, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!9803 = !DILocation(line: 84, column: 74, scope: !9802, inlinedAt: !9804)
!9804 = distinct !DILocation(line: 28, column: 2, scope: !9790)
!9805 = !DILocalVariable(name: "size", arg: 2, scope: !9802, file: !5763, line: 84, type: !338)
!9806 = !DILocation(line: 84, column: 84, scope: !9802, inlinedAt: !9804)
!9807 = !DILocalVariable(name: "nr", arg: 1, scope: !9790, file: !9791, line: 26, type: !327)
!9808 = !DILocation(line: 26, column: 33, scope: !9790)
!9809 = !DILocalVariable(name: "addr", arg: 2, scope: !9790, file: !9791, line: 26, type: !9794)
!9810 = !DILocation(line: 26, column: 61, scope: !9790)
!9811 = !DILocation(line: 28, column: 26, scope: !9790)
!9812 = !DILocation(line: 28, column: 33, scope: !9790)
!9813 = !DILocation(line: 28, column: 31, scope: !9790)
!9814 = !DILocation(line: 86, column: 20, scope: !9802, inlinedAt: !9804)
!9815 = !DILocation(line: 86, column: 23, scope: !9802, inlinedAt: !9804)
!9816 = !DILocation(line: 86, column: 2, scope: !9802, inlinedAt: !9804)
!9817 = !DILocation(line: 87, column: 2, scope: !9802, inlinedAt: !9804)
!9818 = !DILocation(line: 29, column: 15, scope: !9790)
!9819 = !DILocation(line: 29, column: 19, scope: !9790)
!9820 = !DILocation(line: 54, column: 27, scope: !9821, inlinedAt: !9798)
!9821 = distinct !DILexicalBlock(scope: !9796, file: !5748, line: 54, column: 6)
!9822 = !DILocation(line: 54, column: 6, scope: !9821, inlinedAt: !9798)
!9823 = !DILocation(line: 54, column: 6, scope: !9796, inlinedAt: !9798)
!9824 = !DILocation(line: 56, column: 6, scope: !9825, inlinedAt: !9798)
!9825 = distinct !DILexicalBlock(scope: !9821, file: !5748, line: 54, column: 32)
!9826 = !DILocation(line: 57, column: 12, scope: !9825, inlinedAt: !9798)
!9827 = !DILocation(line: 55, column: 3, scope: !9825, inlinedAt: !9798)
!9828 = !{i32 -2147044173}
!9829 = !DILocation(line: 59, column: 2, scope: !9825, inlinedAt: !9798)
!9830 = !DILocation(line: 61, column: 8, scope: !9831, inlinedAt: !9798)
!9831 = distinct !DILexicalBlock(scope: !9821, file: !5748, line: 59, column: 9)
!9832 = !DILocation(line: 61, column: 32, scope: !9831, inlinedAt: !9798)
!9833 = !DILocation(line: 60, column: 3, scope: !9831, inlinedAt: !9798)
!9834 = !{i32 -2147044041}
!9835 = !DILocation(line: 30, column: 1, scope: !9790)
!9836 = distinct !DISubprogram(name: "tty_port_set_initialized", scope: !142, file: !142, line: 669, type: !9837, scopeLine: 670, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!9837 = !DISubroutineType(types: !9838)
!9838 = !{null, !3911, !497}
!9839 = !DILocalVariable(name: "port", arg: 1, scope: !9836, file: !142, line: 669, type: !3911)
!9840 = !DILocation(line: 669, column: 62, scope: !9836)
!9841 = !DILocalVariable(name: "val", arg: 2, scope: !9836, file: !142, line: 669, type: !497)
!9842 = !DILocation(line: 669, column: 73, scope: !9836)
!9843 = !DILocation(line: 671, column: 6, scope: !9844)
!9844 = distinct !DILexicalBlock(scope: !9836, file: !142, line: 671, column: 6)
!9845 = !DILocation(line: 671, column: 6, scope: !9836)
!9846 = !DILocation(line: 672, column: 34, scope: !9844)
!9847 = !DILocation(line: 672, column: 40, scope: !9844)
!9848 = !DILocation(line: 672, column: 3, scope: !9844)
!9849 = !DILocation(line: 674, column: 36, scope: !9844)
!9850 = !DILocation(line: 674, column: 42, scope: !9844)
!9851 = !DILocation(line: 674, column: 3, scope: !9844)
!9852 = !DILocation(line: 675, column: 1, scope: !9836)
!9853 = distinct !DISubprogram(name: "__cyy_issue_cmd", scope: !3, file: !3, line: 359, type: !9854, scopeLine: 360, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!9854 = !DISubroutineType(types: !9855)
!9855 = !{!139, !118, !1375, !139}
!9856 = !DILocalVariable(name: "base_addr", arg: 1, scope: !9853, file: !3, line: 359, type: !118)
!9857 = !DILocation(line: 359, column: 42, scope: !9853)
!9858 = !DILocalVariable(name: "cmd", arg: 2, scope: !9853, file: !3, line: 359, type: !1375)
!9859 = !DILocation(line: 359, column: 56, scope: !9853)
!9860 = !DILocalVariable(name: "index", arg: 3, scope: !9853, file: !3, line: 359, type: !139)
!9861 = !DILocation(line: 359, column: 65, scope: !9853)
!9862 = !DILocalVariable(name: "ccr", scope: !9853, file: !3, line: 361, type: !118)
!9863 = !DILocation(line: 361, column: 16, scope: !9853)
!9864 = !DILocation(line: 361, column: 22, scope: !9853)
!9865 = !DILocation(line: 361, column: 44, scope: !9853)
!9866 = !DILocation(line: 361, column: 41, scope: !9853)
!9867 = !DILocation(line: 361, column: 32, scope: !9853)
!9868 = !DILocalVariable(name: "i", scope: !9853, file: !3, line: 362, type: !7)
!9869 = !DILocation(line: 362, column: 15, scope: !9853)
!9870 = !DILocation(line: 365, column: 9, scope: !9871)
!9871 = distinct !DILexicalBlock(scope: !9853, file: !3, line: 365, column: 2)
!9872 = !DILocation(line: 365, column: 7, scope: !9871)
!9873 = !DILocation(line: 365, column: 14, scope: !9874)
!9874 = distinct !DILexicalBlock(scope: !9871, file: !3, line: 365, column: 2)
!9875 = !DILocation(line: 365, column: 16, scope: !9874)
!9876 = !DILocation(line: 365, column: 2, scope: !9871)
!9877 = !DILocation(line: 366, column: 13, scope: !9878)
!9878 = distinct !DILexicalBlock(scope: !9879, file: !3, line: 366, column: 7)
!9879 = distinct !DILexicalBlock(scope: !9874, file: !3, line: 365, column: 28)
!9880 = !DILocation(line: 366, column: 7, scope: !9878)
!9881 = !DILocation(line: 366, column: 18, scope: !9878)
!9882 = !DILocation(line: 366, column: 7, scope: !9879)
!9883 = !DILocation(line: 367, column: 4, scope: !9878)
!9884 = !DILocation(line: 368, column: 3, scope: !9885)
!9885 = distinct !DILexicalBlock(scope: !9886, file: !3, line: 368, column: 3)
!9886 = distinct !DILexicalBlock(scope: !9887, file: !3, line: 368, column: 3)
!9887 = distinct !DILexicalBlock(scope: !9888, file: !3, line: 368, column: 3)
!9888 = distinct !DILexicalBlock(scope: !9879, file: !3, line: 368, column: 3)
!9889 = !DILocation(line: 369, column: 2, scope: !9879)
!9890 = !DILocation(line: 365, column: 24, scope: !9874)
!9891 = !DILocation(line: 365, column: 2, scope: !9874)
!9892 = distinct !{!9892, !9876, !9893}
!9893 = !DILocation(line: 369, column: 2, scope: !9871)
!9894 = !DILocation(line: 372, column: 6, scope: !9895)
!9895 = distinct !DILexicalBlock(scope: !9853, file: !3, line: 372, column: 6)
!9896 = !DILocation(line: 372, column: 8, scope: !9895)
!9897 = !DILocation(line: 372, column: 6, scope: !9853)
!9898 = !DILocation(line: 373, column: 3, scope: !9895)
!9899 = !DILocation(line: 376, column: 2, scope: !9853)
!9900 = !DILocation(line: 376, column: 2, scope: !9901)
!9901 = distinct !DILexicalBlock(scope: !9853, file: !3, line: 376, column: 2)
!9902 = !{i32 -2141446768}
!9903 = !DILocation(line: 378, column: 2, scope: !9853)
!9904 = !DILocation(line: 379, column: 1, scope: !9853)
!9905 = distinct !DISubprogram(name: "kasan_check_write", scope: !5797, file: !5797, line: 38, type: !5798, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!9906 = !DILocalVariable(name: "p", arg: 1, scope: !9905, file: !5797, line: 38, type: !5563)
!9907 = !DILocation(line: 38, column: 59, scope: !9905)
!9908 = !DILocalVariable(name: "size", arg: 2, scope: !9905, file: !5797, line: 38, type: !7)
!9909 = !DILocation(line: 38, column: 75, scope: !9905)
!9910 = !DILocation(line: 40, column: 2, scope: !9905)
!9911 = distinct !DISubprogram(name: "clear_bit", scope: !9791, file: !9791, line: 39, type: !9792, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!9912 = !DILocalVariable(name: "nr", arg: 1, scope: !9913, file: !5748, line: 72, type: !327)
!9913 = distinct !DISubprogram(name: "arch_clear_bit", scope: !5748, file: !5748, line: 72, type: !9792, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!9914 = !DILocation(line: 72, column: 21, scope: !9913, inlinedAt: !9915)
!9915 = distinct !DILocation(line: 42, column: 2, scope: !9911)
!9916 = !DILocalVariable(name: "addr", arg: 2, scope: !9913, file: !5748, line: 72, type: !9794)
!9917 = !DILocation(line: 72, column: 49, scope: !9913, inlinedAt: !9915)
!9918 = !DILocation(line: 84, column: 74, scope: !9802, inlinedAt: !9919)
!9919 = distinct !DILocation(line: 41, column: 2, scope: !9911)
!9920 = !DILocation(line: 84, column: 84, scope: !9802, inlinedAt: !9919)
!9921 = !DILocalVariable(name: "nr", arg: 1, scope: !9911, file: !9791, line: 39, type: !327)
!9922 = !DILocation(line: 39, column: 35, scope: !9911)
!9923 = !DILocalVariable(name: "addr", arg: 2, scope: !9911, file: !9791, line: 39, type: !9794)
!9924 = !DILocation(line: 39, column: 63, scope: !9911)
!9925 = !DILocation(line: 41, column: 26, scope: !9911)
!9926 = !DILocation(line: 41, column: 33, scope: !9911)
!9927 = !DILocation(line: 41, column: 31, scope: !9911)
!9928 = !DILocation(line: 86, column: 20, scope: !9802, inlinedAt: !9919)
!9929 = !DILocation(line: 86, column: 23, scope: !9802, inlinedAt: !9919)
!9930 = !DILocation(line: 86, column: 2, scope: !9802, inlinedAt: !9919)
!9931 = !DILocation(line: 87, column: 2, scope: !9802, inlinedAt: !9919)
!9932 = !DILocation(line: 42, column: 17, scope: !9911)
!9933 = !DILocation(line: 42, column: 21, scope: !9911)
!9934 = !DILocation(line: 74, column: 27, scope: !9935, inlinedAt: !9915)
!9935 = distinct !DILexicalBlock(scope: !9913, file: !5748, line: 74, column: 6)
!9936 = !DILocation(line: 74, column: 6, scope: !9935, inlinedAt: !9915)
!9937 = !DILocation(line: 74, column: 6, scope: !9913, inlinedAt: !9915)
!9938 = !DILocation(line: 76, column: 6, scope: !9939, inlinedAt: !9915)
!9939 = distinct !DILexicalBlock(scope: !9935, file: !5748, line: 74, column: 32)
!9940 = !DILocation(line: 77, column: 13, scope: !9939, inlinedAt: !9915)
!9941 = !DILocation(line: 77, column: 12, scope: !9939, inlinedAt: !9915)
!9942 = !DILocation(line: 75, column: 3, scope: !9939, inlinedAt: !9915)
!9943 = !{i32 -2147043219}
!9944 = !DILocation(line: 78, column: 2, scope: !9939, inlinedAt: !9915)
!9945 = !DILocation(line: 80, column: 8, scope: !9946, inlinedAt: !9915)
!9946 = distinct !DILexicalBlock(scope: !9935, file: !5748, line: 78, column: 9)
!9947 = !DILocation(line: 80, column: 32, scope: !9946, inlinedAt: !9915)
!9948 = !DILocation(line: 79, column: 3, scope: !9946, inlinedAt: !9915)
!9949 = !{i32 -2147043087}
!9950 = !DILocation(line: 43, column: 1, scope: !9911)
!9951 = distinct !DISubprogram(name: "cyy_carrier_raised", scope: !3, file: !3, line: 2967, type: !4186, scopeLine: 2968, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!9952 = !DILocation(line: 407, column: 64, scope: !9014, inlinedAt: !9953)
!9953 = distinct !DILocation(line: 2979, column: 2, scope: !9951)
!9954 = !DILocation(line: 407, column: 84, scope: !9014, inlinedAt: !9953)
!9955 = !DILocation(line: 327, column: 67, scope: !7102, inlinedAt: !9956)
!9956 = distinct !DILocation(line: 2976, column: 2, scope: !9957)
!9957 = distinct !DILexicalBlock(scope: !9958, file: !3, line: 2976, column: 2)
!9958 = distinct !DILexicalBlock(scope: !9959, file: !3, line: 2976, column: 2)
!9959 = distinct !DILexicalBlock(scope: !9960, file: !3, line: 2976, column: 2)
!9960 = distinct !DILexicalBlock(scope: !9961, file: !3, line: 2976, column: 2)
!9961 = distinct !DILexicalBlock(scope: !9951, file: !3, line: 2976, column: 2)
!9962 = !DILocalVariable(name: "port", arg: 1, scope: !9951, file: !3, line: 2967, type: !3911)
!9963 = !DILocation(line: 2967, column: 48, scope: !9951)
!9964 = !DILocalVariable(name: "info", scope: !9951, file: !3, line: 2969, type: !134)
!9965 = !DILocation(line: 2969, column: 24, scope: !9951)
!9966 = !DILocalVariable(name: "__mptr", scope: !9967, file: !3, line: 2969, type: !118)
!9967 = distinct !DILexicalBlock(scope: !9951, file: !3, line: 2969, column: 31)
!9968 = !DILocation(line: 2969, column: 31, scope: !9967)
!9969 = !DILocation(line: 2969, column: 31, scope: !9970)
!9970 = distinct !DILexicalBlock(scope: !9967, file: !3, line: 2969, column: 31)
!9971 = !DILocalVariable(name: "cinfo", scope: !9951, file: !3, line: 2971, type: !4229)
!9972 = !DILocation(line: 2971, column: 24, scope: !9951)
!9973 = !DILocation(line: 2971, column: 32, scope: !9951)
!9974 = !DILocation(line: 2971, column: 38, scope: !9951)
!9975 = !DILocalVariable(name: "flags", scope: !9951, file: !3, line: 2972, type: !126)
!9976 = !DILocation(line: 2972, column: 16, scope: !9951)
!9977 = !DILocalVariable(name: "channel", scope: !9951, file: !3, line: 2973, type: !139)
!9978 = !DILocation(line: 2973, column: 6, scope: !9951)
!9979 = !DILocation(line: 2973, column: 16, scope: !9951)
!9980 = !DILocation(line: 2973, column: 22, scope: !9951)
!9981 = !DILocation(line: 2973, column: 29, scope: !9951)
!9982 = !DILocation(line: 2973, column: 36, scope: !9951)
!9983 = !DILocation(line: 2973, column: 27, scope: !9951)
!9984 = !DILocalVariable(name: "cd", scope: !9951, file: !3, line: 2974, type: !426)
!9985 = !DILocation(line: 2974, column: 6, scope: !9951)
!9986 = !DILocation(line: 2976, column: 2, scope: !9951)
!9987 = !DILocation(line: 2976, column: 2, scope: !9961)
!9988 = !DILocalVariable(name: "__dummy", scope: !9989, file: !3, line: 2976, type: !126)
!9989 = distinct !DILexicalBlock(scope: !9960, file: !3, line: 2976, column: 2)
!9990 = !DILocation(line: 2976, column: 2, scope: !9989)
!9991 = !DILocalVariable(name: "__dummy2", scope: !9989, file: !3, line: 2976, type: !126)
!9992 = !DILocation(line: 2976, column: 2, scope: !9960)
!9993 = !DILocation(line: 2976, column: 2, scope: !9959)
!9994 = !DILocation(line: 2976, column: 2, scope: !9995)
!9995 = distinct !DILexicalBlock(scope: !9959, file: !3, line: 2976, column: 2)
!9996 = !DILocalVariable(name: "__dummy", scope: !9997, file: !3, line: 2976, type: !126)
!9997 = distinct !DILexicalBlock(scope: !9998, file: !3, line: 2976, column: 2)
!9998 = distinct !DILexicalBlock(scope: !9995, file: !3, line: 2976, column: 2)
!9999 = !DILocation(line: 2976, column: 2, scope: !9997)
!10000 = !DILocalVariable(name: "__dummy2", scope: !9997, file: !3, line: 2976, type: !126)
!10001 = !DILocation(line: 2976, column: 2, scope: !9998)
!10002 = !DILocation(line: 2976, column: 2, scope: !9958)
!10003 = !{i32 -2141387024}
!10004 = !DILocation(line: 2976, column: 2, scope: !9957)
!10005 = !DILocation(line: 329, column: 10, scope: !7102, inlinedAt: !9956)
!10006 = !DILocation(line: 329, column: 16, scope: !7102, inlinedAt: !9956)
!10007 = !DILocation(line: 2977, column: 13, scope: !9951)
!10008 = !DILocation(line: 2977, column: 26, scope: !9951)
!10009 = !DILocation(line: 2977, column: 34, scope: !9951)
!10010 = !DILocation(line: 2977, column: 2, scope: !9951)
!10011 = !DILocation(line: 2978, column: 17, scope: !9951)
!10012 = !DILocation(line: 2978, column: 7, scope: !9951)
!10013 = !DILocation(line: 2978, column: 32, scope: !9951)
!10014 = !DILocation(line: 2978, column: 5, scope: !9951)
!10015 = !DILocation(line: 2979, column: 26, scope: !9951)
!10016 = !DILocation(line: 2979, column: 33, scope: !9951)
!10017 = !DILocation(line: 2979, column: 44, scope: !9951)
!10018 = !DILocation(line: 409, column: 2, scope: !9120, inlinedAt: !9953)
!10019 = !DILocation(line: 409, column: 2, scope: !9125, inlinedAt: !9953)
!10020 = !DILocation(line: 409, column: 2, scope: !9126, inlinedAt: !9953)
!10021 = !DILocation(line: 409, column: 2, scope: !9133, inlinedAt: !9953)
!10022 = !DILocation(line: 409, column: 2, scope: !9136, inlinedAt: !9953)
!10023 = !DILocation(line: 2981, column: 9, scope: !9951)
!10024 = !DILocation(line: 2981, column: 2, scope: !9951)
!10025 = distinct !DISubprogram(name: "cyy_dtr_rts", scope: !3, file: !3, line: 2984, type: !4190, scopeLine: 2985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!10026 = !DILocation(line: 407, column: 64, scope: !9014, inlinedAt: !10027)
!10027 = distinct !DILocation(line: 2994, column: 2, scope: !10025)
!10028 = !DILocation(line: 407, column: 84, scope: !9014, inlinedAt: !10027)
!10029 = !DILocation(line: 327, column: 67, scope: !7102, inlinedAt: !10030)
!10030 = distinct !DILocation(line: 2991, column: 2, scope: !10031)
!10031 = distinct !DILexicalBlock(scope: !10032, file: !3, line: 2991, column: 2)
!10032 = distinct !DILexicalBlock(scope: !10033, file: !3, line: 2991, column: 2)
!10033 = distinct !DILexicalBlock(scope: !10034, file: !3, line: 2991, column: 2)
!10034 = distinct !DILexicalBlock(scope: !10035, file: !3, line: 2991, column: 2)
!10035 = distinct !DILexicalBlock(scope: !10025, file: !3, line: 2991, column: 2)
!10036 = !DILocalVariable(name: "port", arg: 1, scope: !10025, file: !3, line: 2984, type: !3911)
!10037 = !DILocation(line: 2984, column: 42, scope: !10025)
!10038 = !DILocalVariable(name: "raise", arg: 2, scope: !10025, file: !3, line: 2984, type: !139)
!10039 = !DILocation(line: 2984, column: 52, scope: !10025)
!10040 = !DILocalVariable(name: "info", scope: !10025, file: !3, line: 2986, type: !134)
!10041 = !DILocation(line: 2986, column: 24, scope: !10025)
!10042 = !DILocalVariable(name: "__mptr", scope: !10043, file: !3, line: 2986, type: !118)
!10043 = distinct !DILexicalBlock(scope: !10025, file: !3, line: 2986, column: 31)
!10044 = !DILocation(line: 2986, column: 31, scope: !10043)
!10045 = !DILocation(line: 2986, column: 31, scope: !10046)
!10046 = distinct !DILexicalBlock(scope: !10043, file: !3, line: 2986, column: 31)
!10047 = !DILocalVariable(name: "cinfo", scope: !10025, file: !3, line: 2988, type: !4229)
!10048 = !DILocation(line: 2988, column: 24, scope: !10025)
!10049 = !DILocation(line: 2988, column: 32, scope: !10025)
!10050 = !DILocation(line: 2988, column: 38, scope: !10025)
!10051 = !DILocalVariable(name: "flags", scope: !10025, file: !3, line: 2989, type: !126)
!10052 = !DILocation(line: 2989, column: 16, scope: !10025)
!10053 = !DILocation(line: 2991, column: 2, scope: !10025)
!10054 = !DILocation(line: 2991, column: 2, scope: !10035)
!10055 = !DILocalVariable(name: "__dummy", scope: !10056, file: !3, line: 2991, type: !126)
!10056 = distinct !DILexicalBlock(scope: !10034, file: !3, line: 2991, column: 2)
!10057 = !DILocation(line: 2991, column: 2, scope: !10056)
!10058 = !DILocalVariable(name: "__dummy2", scope: !10056, file: !3, line: 2991, type: !126)
!10059 = !DILocation(line: 2991, column: 2, scope: !10034)
!10060 = !DILocation(line: 2991, column: 2, scope: !10033)
!10061 = !DILocation(line: 2991, column: 2, scope: !10062)
!10062 = distinct !DILexicalBlock(scope: !10033, file: !3, line: 2991, column: 2)
!10063 = !DILocalVariable(name: "__dummy", scope: !10064, file: !3, line: 2991, type: !126)
!10064 = distinct !DILexicalBlock(scope: !10065, file: !3, line: 2991, column: 2)
!10065 = distinct !DILexicalBlock(scope: !10062, file: !3, line: 2991, column: 2)
!10066 = !DILocation(line: 2991, column: 2, scope: !10064)
!10067 = !DILocalVariable(name: "__dummy2", scope: !10064, file: !3, line: 2991, type: !126)
!10068 = !DILocation(line: 2991, column: 2, scope: !10065)
!10069 = !DILocation(line: 2991, column: 2, scope: !10032)
!10070 = !{i32 -2141380401}
!10071 = !DILocation(line: 2991, column: 2, scope: !10031)
!10072 = !DILocation(line: 329, column: 10, scope: !7102, inlinedAt: !10030)
!10073 = !DILocation(line: 329, column: 16, scope: !7102, inlinedAt: !10030)
!10074 = !DILocation(line: 2992, column: 21, scope: !10025)
!10075 = !DILocation(line: 2992, column: 27, scope: !10025)
!10076 = !DILocation(line: 2993, column: 4, scope: !10025)
!10077 = !DILocation(line: 2992, column: 2, scope: !10025)
!10078 = !DILocation(line: 2994, column: 26, scope: !10025)
!10079 = !DILocation(line: 2994, column: 33, scope: !10025)
!10080 = !DILocation(line: 2994, column: 44, scope: !10025)
!10081 = !DILocation(line: 409, column: 2, scope: !9120, inlinedAt: !10027)
!10082 = !DILocation(line: 409, column: 2, scope: !9125, inlinedAt: !10027)
!10083 = !DILocation(line: 409, column: 2, scope: !9126, inlinedAt: !10027)
!10084 = !DILocation(line: 409, column: 2, scope: !9133, inlinedAt: !10027)
!10085 = !DILocation(line: 409, column: 2, scope: !9136, inlinedAt: !10027)
!10086 = !DILocation(line: 2995, column: 1, scope: !10025)
!10087 = distinct !DISubprogram(name: "hlist_unhashed_lockless", scope: !10088, file: !10088, line: 819, type: !10089, scopeLine: 820, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!10088 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!10089 = !DISubroutineType(types: !10090)
!10090 = !{!139, !10091}
!10091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10092, size: 64)
!10092 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !647)
!10093 = !DILocalVariable(name: "h", arg: 1, scope: !10087, file: !10088, line: 819, type: !10091)
!10094 = !DILocation(line: 819, column: 68, scope: !10087)
!10095 = !DILocation(line: 821, column: 10, scope: !10096)
!10096 = distinct !DILexicalBlock(scope: !10087, file: !10088, line: 821, column: 10)
!10097 = !DILocation(line: 821, column: 10, scope: !10098)
!10098 = distinct !DILexicalBlock(scope: !10096, file: !10088, line: 821, column: 10)
!10099 = !DILocation(line: 821, column: 9, scope: !10087)
!10100 = !DILocation(line: 821, column: 2, scope: !10087)
!10101 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !73, file: !73, line: 660, type: !10102, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!10102 = !DISubroutineType(types: !10103)
!10103 = !{null, !248, !118}
!10104 = !DILocalVariable(name: "dev", arg: 1, scope: !10101, file: !73, line: 660, type: !248)
!10105 = !DILocation(line: 660, column: 51, scope: !10101)
!10106 = !DILocalVariable(name: "data", arg: 2, scope: !10101, file: !73, line: 660, type: !118)
!10107 = !DILocation(line: 660, column: 62, scope: !10101)
!10108 = !DILocation(line: 662, column: 21, scope: !10101)
!10109 = !DILocation(line: 662, column: 2, scope: !10101)
!10110 = !DILocation(line: 662, column: 7, scope: !10101)
!10111 = !DILocation(line: 662, column: 19, scope: !10101)
!10112 = !DILocation(line: 663, column: 1, scope: !10101)
!10113 = distinct !DISubprogram(name: "pci_get_drvdata", scope: !4503, file: !4503, line: 1865, type: !10114, scopeLine: 1866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!10114 = !DISubroutineType(types: !10115)
!10115 = !{!118, !4523}
!10116 = !DILocalVariable(name: "pdev", arg: 1, scope: !10113, file: !4503, line: 1865, type: !4523)
!10117 = !DILocation(line: 1865, column: 53, scope: !10113)
!10118 = !DILocation(line: 1867, column: 26, scope: !10113)
!10119 = !DILocation(line: 1867, column: 32, scope: !10113)
!10120 = !DILocation(line: 1867, column: 9, scope: !10113)
!10121 = !DILocation(line: 1867, column: 2, scope: !10113)
!10122 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !73, file: !73, line: 655, type: !10123, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!10123 = !DISubroutineType(types: !10124)
!10124 = !{!118, !3756}
!10125 = !DILocalVariable(name: "dev", arg: 1, scope: !10122, file: !73, line: 655, type: !3756)
!10126 = !DILocation(line: 655, column: 58, scope: !10122)
!10127 = !DILocation(line: 657, column: 9, scope: !10122)
!10128 = !DILocation(line: 657, column: 14, scope: !10122)
!10129 = !DILocation(line: 657, column: 2, scope: !10122)
!10130 = distinct !DISubprogram(name: "alloc_tty_driver", scope: !3868, file: !3868, line: 355, type: !10131, scopeLine: 356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!10131 = !DISubroutineType(types: !10132)
!10132 = !{!3866, !7}
!10133 = !DILocalVariable(name: "lines", arg: 1, scope: !10130, file: !3868, line: 355, type: !7)
!10134 = !DILocation(line: 355, column: 64, scope: !10130)
!10135 = !DILocalVariable(name: "ret", scope: !10130, file: !3868, line: 357, type: !3866)
!10136 = !DILocation(line: 357, column: 21, scope: !10130)
!10137 = !DILocation(line: 357, column: 27, scope: !10130)
!10138 = !DILocation(line: 358, column: 13, scope: !10139)
!10139 = distinct !DILexicalBlock(scope: !10130, file: !3868, line: 358, column: 6)
!10140 = !DILocation(line: 358, column: 6, scope: !10139)
!10141 = !DILocation(line: 358, column: 6, scope: !10130)
!10142 = !DILocation(line: 359, column: 3, scope: !10139)
!10143 = !DILocation(line: 360, column: 9, scope: !10130)
!10144 = !DILocation(line: 360, column: 2, scope: !10130)
!10145 = !DILocation(line: 361, column: 1, scope: !10130)
!10146 = distinct !DISubprogram(name: "cy_detect_isa", scope: !3, file: !3, line: 3231, type: !4939, scopeLine: 3232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!10147 = !DILocation(line: 3348, column: 2, scope: !10146)
!10148 = distinct !DISubprogram(name: "IS_ERR", scope: !10149, file: !10149, line: 34, type: !10150, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!10149 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!10150 = !DISubroutineType(types: !10151)
!10151 = !{!497, !2192}
!10152 = !DILocalVariable(name: "ptr", arg: 1, scope: !10148, file: !10149, line: 34, type: !2192)
!10153 = !DILocation(line: 34, column: 60, scope: !10148)
!10154 = !DILocation(line: 36, column: 9, scope: !10148)
!10155 = !DILocation(line: 36, column: 2, scope: !10148)
!10156 = distinct !DISubprogram(name: "cy_open", scope: !3, file: !3, line: 1492, type: !3935, scopeLine: 1493, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!10157 = !DILocalVariable(name: "tty", arg: 1, scope: !10156, file: !3, line: 1492, type: !233)
!10158 = !DILocation(line: 1492, column: 39, scope: !10156)
!10159 = !DILocalVariable(name: "filp", arg: 2, scope: !10156, file: !3, line: 1492, type: !368)
!10160 = !DILocation(line: 1492, column: 57, scope: !10156)
!10161 = !DILocalVariable(name: "info", scope: !10156, file: !3, line: 1494, type: !134)
!10162 = !DILocation(line: 1494, column: 24, scope: !10156)
!10163 = !DILocalVariable(name: "i", scope: !10156, file: !3, line: 1495, type: !7)
!10164 = !DILocation(line: 1495, column: 15, scope: !10156)
!10165 = !DILocalVariable(name: "line", scope: !10156, file: !3, line: 1495, type: !7)
!10166 = !DILocation(line: 1495, column: 18, scope: !10156)
!10167 = !DILocation(line: 1495, column: 25, scope: !10156)
!10168 = !DILocation(line: 1495, column: 30, scope: !10156)
!10169 = !DILocalVariable(name: "retval", scope: !10156, file: !3, line: 1496, type: !139)
!10170 = !DILocation(line: 1496, column: 6, scope: !10156)
!10171 = !DILocation(line: 1498, column: 9, scope: !10172)
!10172 = distinct !DILexicalBlock(scope: !10156, file: !3, line: 1498, column: 2)
!10173 = !DILocation(line: 1498, column: 7, scope: !10172)
!10174 = !DILocation(line: 1498, column: 14, scope: !10175)
!10175 = distinct !DILexicalBlock(scope: !10172, file: !3, line: 1498, column: 2)
!10176 = !DILocation(line: 1498, column: 16, scope: !10175)
!10177 = !DILocation(line: 1498, column: 2, scope: !10172)
!10178 = !DILocation(line: 1499, column: 7, scope: !10179)
!10179 = distinct !DILexicalBlock(scope: !10175, file: !3, line: 1499, column: 7)
!10180 = !DILocation(line: 1499, column: 22, scope: !10179)
!10181 = !DILocation(line: 1499, column: 14, scope: !10179)
!10182 = !DILocation(line: 1499, column: 25, scope: !10179)
!10183 = !DILocation(line: 1499, column: 46, scope: !10179)
!10184 = !DILocation(line: 1499, column: 38, scope: !10179)
!10185 = !DILocation(line: 1499, column: 49, scope: !10179)
!10186 = !DILocation(line: 1499, column: 36, scope: !10179)
!10187 = !DILocation(line: 1499, column: 12, scope: !10179)
!10188 = !DILocation(line: 1499, column: 56, scope: !10179)
!10189 = !DILocation(line: 1500, column: 5, scope: !10179)
!10190 = !DILocation(line: 1500, column: 21, scope: !10179)
!10191 = !DILocation(line: 1500, column: 13, scope: !10179)
!10192 = !DILocation(line: 1500, column: 24, scope: !10179)
!10193 = !DILocation(line: 1500, column: 10, scope: !10179)
!10194 = !DILocation(line: 1499, column: 7, scope: !10175)
!10195 = !DILocation(line: 1501, column: 4, scope: !10179)
!10196 = !DILocation(line: 1498, column: 29, scope: !10175)
!10197 = !DILocation(line: 1498, column: 2, scope: !10175)
!10198 = distinct !{!10198, !10177, !10199}
!10199 = !DILocation(line: 1501, column: 4, scope: !10172)
!10200 = !DILocation(line: 1502, column: 6, scope: !10201)
!10201 = distinct !DILexicalBlock(scope: !10156, file: !3, line: 1502, column: 6)
!10202 = !DILocation(line: 1502, column: 8, scope: !10201)
!10203 = !DILocation(line: 1502, column: 6, scope: !10156)
!10204 = !DILocation(line: 1503, column: 3, scope: !10201)
!10205 = !DILocation(line: 1504, column: 18, scope: !10156)
!10206 = !DILocation(line: 1504, column: 10, scope: !10156)
!10207 = !DILocation(line: 1504, column: 21, scope: !10156)
!10208 = !DILocation(line: 1504, column: 27, scope: !10156)
!10209 = !DILocation(line: 1504, column: 42, scope: !10156)
!10210 = !DILocation(line: 1504, column: 34, scope: !10156)
!10211 = !DILocation(line: 1504, column: 45, scope: !10156)
!10212 = !DILocation(line: 1504, column: 32, scope: !10156)
!10213 = !DILocation(line: 1504, column: 7, scope: !10156)
!10214 = !DILocation(line: 1505, column: 6, scope: !10215)
!10215 = distinct !DILexicalBlock(scope: !10156, file: !3, line: 1505, column: 6)
!10216 = !DILocation(line: 1505, column: 12, scope: !10215)
!10217 = !DILocation(line: 1505, column: 17, scope: !10215)
!10218 = !DILocation(line: 1505, column: 6, scope: !10156)
!10219 = !DILocation(line: 1506, column: 3, scope: !10215)
!10220 = !DILocation(line: 1512, column: 14, scope: !10221)
!10221 = distinct !DILexicalBlock(scope: !10156, file: !3, line: 1512, column: 6)
!10222 = !DILocation(line: 1512, column: 20, scope: !10221)
!10223 = !DILocation(line: 1512, column: 6, scope: !10221)
!10224 = !DILocation(line: 1512, column: 6, scope: !10156)
!10225 = !DILocalVariable(name: "cinfo", scope: !10226, file: !3, line: 1513, type: !4229)
!10226 = distinct !DILexicalBlock(scope: !10221, file: !3, line: 1512, column: 27)
!10227 = !DILocation(line: 1513, column: 25, scope: !10226)
!10228 = !DILocation(line: 1513, column: 33, scope: !10226)
!10229 = !DILocation(line: 1513, column: 39, scope: !10226)
!10230 = !DILocalVariable(name: "firm_id", scope: !10226, file: !3, line: 1514, type: !5104)
!10231 = !DILocation(line: 1514, column: 27, scope: !10226)
!10232 = !DILocation(line: 1514, column: 37, scope: !10226)
!10233 = !DILocation(line: 1514, column: 44, scope: !10226)
!10234 = !DILocation(line: 1514, column: 54, scope: !10226)
!10235 = !DILocation(line: 1516, column: 22, scope: !10236)
!10236 = distinct !DILexicalBlock(scope: !10226, file: !3, line: 1516, column: 7)
!10237 = !DILocation(line: 1516, column: 8, scope: !10236)
!10238 = !DILocation(line: 1516, column: 7, scope: !10226)
!10239 = !DILocation(line: 1517, column: 8, scope: !10240)
!10240 = distinct !DILexicalBlock(scope: !10241, file: !3, line: 1517, column: 8)
!10241 = distinct !DILexicalBlock(scope: !10236, file: !3, line: 1516, column: 30)
!10242 = !DILocation(line: 1517, column: 15, scope: !10240)
!10243 = !DILocation(line: 1517, column: 22, scope: !10240)
!10244 = !DILocation(line: 1517, column: 31, scope: !10240)
!10245 = !DILocation(line: 1517, column: 50, scope: !10240)
!10246 = !DILocation(line: 1517, column: 34, scope: !10240)
!10247 = !DILocation(line: 1517, column: 57, scope: !10240)
!10248 = !DILocation(line: 1518, column: 13, scope: !10240)
!10249 = !DILocation(line: 1518, column: 22, scope: !10240)
!10250 = !DILocation(line: 1518, column: 12, scope: !10240)
!10251 = !DILocation(line: 1518, column: 6, scope: !10240)
!10252 = !DILocation(line: 1518, column: 33, scope: !10240)
!10253 = !DILocation(line: 1517, column: 8, scope: !10241)
!10254 = !DILocation(line: 1520, column: 5, scope: !10255)
!10255 = distinct !DILexicalBlock(scope: !10240, file: !3, line: 1519, column: 17)
!10256 = !DILocation(line: 1524, column: 4, scope: !10255)
!10257 = !DILocation(line: 1525, column: 5, scope: !10258)
!10258 = distinct !DILexicalBlock(scope: !10240, file: !3, line: 1524, column: 11)
!10259 = !DILocation(line: 1528, column: 4, scope: !10241)
!10260 = !DILocation(line: 1555, column: 7, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !10226, file: !3, line: 1555, column: 7)
!10262 = !DILocation(line: 1555, column: 13, scope: !10261)
!10263 = !DILocation(line: 1555, column: 21, scope: !10261)
!10264 = !DILocation(line: 1555, column: 28, scope: !10261)
!10265 = !DILocation(line: 1555, column: 41, scope: !10261)
!10266 = !DILocation(line: 1555, column: 48, scope: !10261)
!10267 = !DILocation(line: 1555, column: 39, scope: !10261)
!10268 = !DILocation(line: 1555, column: 55, scope: !10261)
!10269 = !DILocation(line: 1555, column: 18, scope: !10261)
!10270 = !DILocation(line: 1555, column: 7, scope: !10226)
!10271 = !DILocation(line: 1556, column: 4, scope: !10261)
!10272 = !DILocation(line: 1557, column: 2, scope: !10226)
!10273 = !DILocation(line: 1561, column: 21, scope: !10156)
!10274 = !DILocation(line: 1561, column: 2, scope: !10156)
!10275 = !DILocation(line: 1561, column: 7, scope: !10156)
!10276 = !DILocation(line: 1561, column: 19, scope: !10156)
!10277 = !DILocation(line: 1562, column: 28, scope: !10278)
!10278 = distinct !DILexicalBlock(scope: !10156, file: !3, line: 1562, column: 6)
!10279 = !DILocation(line: 1562, column: 34, scope: !10278)
!10280 = !DILocation(line: 1562, column: 39, scope: !10278)
!10281 = !DILocation(line: 1562, column: 6, scope: !10278)
!10282 = !DILocation(line: 1562, column: 6, scope: !10156)
!10283 = !DILocation(line: 1563, column: 3, scope: !10278)
!10284 = !DILocation(line: 1569, column: 2, scope: !10156)
!10285 = !DILocation(line: 1569, column: 8, scope: !10156)
!10286 = !DILocation(line: 1569, column: 13, scope: !10156)
!10287 = !DILocation(line: 1569, column: 18, scope: !10156)
!10288 = !DILocation(line: 1578, column: 22, scope: !10156)
!10289 = !DILocation(line: 1578, column: 28, scope: !10156)
!10290 = !DILocation(line: 1578, column: 11, scope: !10156)
!10291 = !DILocation(line: 1578, column: 9, scope: !10156)
!10292 = !DILocation(line: 1579, column: 6, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10156, file: !3, line: 1579, column: 6)
!10294 = !DILocation(line: 1579, column: 6, scope: !10156)
!10295 = !DILocation(line: 1580, column: 10, scope: !10293)
!10296 = !DILocation(line: 1580, column: 3, scope: !10293)
!10297 = !DILocation(line: 1582, column: 37, scope: !10156)
!10298 = !DILocation(line: 1582, column: 43, scope: !10156)
!10299 = !DILocation(line: 1582, column: 49, scope: !10156)
!10300 = !DILocation(line: 1582, column: 54, scope: !10156)
!10301 = !DILocation(line: 1582, column: 11, scope: !10156)
!10302 = !DILocation(line: 1582, column: 9, scope: !10156)
!10303 = !DILocation(line: 1583, column: 6, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !10156, file: !3, line: 1583, column: 6)
!10305 = !DILocation(line: 1583, column: 6, scope: !10156)
!10306 = !DILocation(line: 1588, column: 10, scope: !10307)
!10307 = distinct !DILexicalBlock(scope: !10304, file: !3, line: 1583, column: 14)
!10308 = !DILocation(line: 1588, column: 3, scope: !10307)
!10309 = !DILocation(line: 1591, column: 2, scope: !10156)
!10310 = !DILocation(line: 1591, column: 8, scope: !10156)
!10311 = !DILocation(line: 1591, column: 17, scope: !10156)
!10312 = !DILocation(line: 1592, column: 20, scope: !10156)
!10313 = !DILocation(line: 1592, column: 26, scope: !10156)
!10314 = !DILocation(line: 1592, column: 32, scope: !10156)
!10315 = !DILocation(line: 1592, column: 2, scope: !10156)
!10316 = !DILocation(line: 1597, column: 2, scope: !10156)
!10317 = !DILocation(line: 1598, column: 1, scope: !10156)
!10318 = distinct !DISubprogram(name: "cy_close", scope: !3, file: !3, line: 1743, type: !3939, scopeLine: 1744, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!10319 = !DILocalVariable(name: "tty", arg: 1, scope: !10318, file: !3, line: 1743, type: !233)
!10320 = !DILocation(line: 1743, column: 41, scope: !10318)
!10321 = !DILocalVariable(name: "filp", arg: 2, scope: !10318, file: !3, line: 1743, type: !368)
!10322 = !DILocation(line: 1743, column: 59, scope: !10318)
!10323 = !DILocalVariable(name: "info", scope: !10318, file: !3, line: 1745, type: !134)
!10324 = !DILocation(line: 1745, column: 24, scope: !10318)
!10325 = !DILocation(line: 1745, column: 31, scope: !10318)
!10326 = !DILocation(line: 1745, column: 36, scope: !10318)
!10327 = !DILocation(line: 1746, column: 7, scope: !10328)
!10328 = distinct !DILexicalBlock(scope: !10318, file: !3, line: 1746, column: 6)
!10329 = !DILocation(line: 1746, column: 12, scope: !10328)
!10330 = !DILocation(line: 1746, column: 37, scope: !10328)
!10331 = !DILocation(line: 1746, column: 43, scope: !10328)
!10332 = !DILocation(line: 1746, column: 48, scope: !10328)
!10333 = !DILocation(line: 1746, column: 15, scope: !10328)
!10334 = !DILocation(line: 1746, column: 6, scope: !10318)
!10335 = !DILocation(line: 1747, column: 3, scope: !10328)
!10336 = !DILocation(line: 1748, column: 18, scope: !10318)
!10337 = !DILocation(line: 1748, column: 24, scope: !10318)
!10338 = !DILocation(line: 1748, column: 30, scope: !10318)
!10339 = !DILocation(line: 1748, column: 35, scope: !10318)
!10340 = !DILocation(line: 1748, column: 2, scope: !10318)
!10341 = !DILocation(line: 1749, column: 1, scope: !10318)
!10342 = distinct !DISubprogram(name: "cy_write", scope: !3, file: !3, line: 1764, type: !3948, scopeLine: 1765, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!10343 = !DILocation(line: 407, column: 64, scope: !9014, inlinedAt: !10344)
!10344 = distinct !DILocation(line: 1796, column: 2, scope: !10342)
!10345 = !DILocation(line: 407, column: 84, scope: !9014, inlinedAt: !10344)
!10346 = !DILocation(line: 327, column: 67, scope: !7102, inlinedAt: !10347)
!10347 = distinct !DILocation(line: 1780, column: 2, scope: !10348)
!10348 = distinct !DILexicalBlock(scope: !10349, file: !3, line: 1780, column: 2)
!10349 = distinct !DILexicalBlock(scope: !10350, file: !3, line: 1780, column: 2)
!10350 = distinct !DILexicalBlock(scope: !10351, file: !3, line: 1780, column: 2)
!10351 = distinct !DILexicalBlock(scope: !10352, file: !3, line: 1780, column: 2)
!10352 = distinct !DILexicalBlock(scope: !10342, file: !3, line: 1780, column: 2)
!10353 = !DILocalVariable(name: "tty", arg: 1, scope: !10342, file: !3, line: 1764, type: !233)
!10354 = !DILocation(line: 1764, column: 40, scope: !10342)
!10355 = !DILocalVariable(name: "buf", arg: 2, scope: !10342, file: !3, line: 1764, type: !433)
!10356 = !DILocation(line: 1764, column: 66, scope: !10342)
!10357 = !DILocalVariable(name: "count", arg: 3, scope: !10342, file: !3, line: 1764, type: !139)
!10358 = !DILocation(line: 1764, column: 75, scope: !10342)
!10359 = !DILocalVariable(name: "info", scope: !10342, file: !3, line: 1766, type: !134)
!10360 = !DILocation(line: 1766, column: 24, scope: !10342)
!10361 = !DILocation(line: 1766, column: 31, scope: !10342)
!10362 = !DILocation(line: 1766, column: 36, scope: !10342)
!10363 = !DILocalVariable(name: "flags", scope: !10342, file: !3, line: 1767, type: !126)
!10364 = !DILocation(line: 1767, column: 16, scope: !10342)
!10365 = !DILocalVariable(name: "c", scope: !10342, file: !3, line: 1768, type: !139)
!10366 = !DILocation(line: 1768, column: 6, scope: !10342)
!10367 = !DILocalVariable(name: "ret", scope: !10342, file: !3, line: 1768, type: !139)
!10368 = !DILocation(line: 1768, column: 9, scope: !10342)
!10369 = !DILocation(line: 1774, column: 28, scope: !10370)
!10370 = distinct !DILexicalBlock(scope: !10342, file: !3, line: 1774, column: 6)
!10371 = !DILocation(line: 1774, column: 34, scope: !10370)
!10372 = !DILocation(line: 1774, column: 39, scope: !10370)
!10373 = !DILocation(line: 1774, column: 6, scope: !10370)
!10374 = !DILocation(line: 1774, column: 6, scope: !10342)
!10375 = !DILocation(line: 1775, column: 3, scope: !10370)
!10376 = !DILocation(line: 1777, column: 7, scope: !10377)
!10377 = distinct !DILexicalBlock(scope: !10342, file: !3, line: 1777, column: 6)
!10378 = !DILocation(line: 1777, column: 13, scope: !10377)
!10379 = !DILocation(line: 1777, column: 18, scope: !10377)
!10380 = !DILocation(line: 1777, column: 6, scope: !10342)
!10381 = !DILocation(line: 1778, column: 3, scope: !10377)
!10382 = !DILocation(line: 1780, column: 2, scope: !10342)
!10383 = !DILocation(line: 1780, column: 2, scope: !10352)
!10384 = !DILocalVariable(name: "__dummy", scope: !10385, file: !3, line: 1780, type: !126)
!10385 = distinct !DILexicalBlock(scope: !10351, file: !3, line: 1780, column: 2)
!10386 = !DILocation(line: 1780, column: 2, scope: !10385)
!10387 = !DILocalVariable(name: "__dummy2", scope: !10385, file: !3, line: 1780, type: !126)
!10388 = !DILocation(line: 1780, column: 2, scope: !10351)
!10389 = !DILocation(line: 1780, column: 2, scope: !10350)
!10390 = !DILocation(line: 1780, column: 2, scope: !10391)
!10391 = distinct !DILexicalBlock(scope: !10350, file: !3, line: 1780, column: 2)
!10392 = !DILocalVariable(name: "__dummy", scope: !10393, file: !3, line: 1780, type: !126)
!10393 = distinct !DILexicalBlock(scope: !10394, file: !3, line: 1780, column: 2)
!10394 = distinct !DILexicalBlock(scope: !10391, file: !3, line: 1780, column: 2)
!10395 = !DILocation(line: 1780, column: 2, scope: !10393)
!10396 = !DILocalVariable(name: "__dummy2", scope: !10393, file: !3, line: 1780, type: !126)
!10397 = !DILocation(line: 1780, column: 2, scope: !10394)
!10398 = !DILocation(line: 1780, column: 2, scope: !10349)
!10399 = !{i32 -2141426249}
!10400 = !DILocation(line: 1780, column: 2, scope: !10348)
!10401 = !DILocation(line: 329, column: 10, scope: !7102, inlinedAt: !10347)
!10402 = !DILocation(line: 329, column: 16, scope: !7102, inlinedAt: !10347)
!10403 = !DILocation(line: 1781, column: 2, scope: !10342)
!10404 = !DILocalVariable(name: "__UNIQUE_ID___x243", scope: !10405, file: !3, line: 1782, type: !139)
!10405 = distinct !DILexicalBlock(scope: !10406, file: !3, line: 1782, column: 7)
!10406 = distinct !DILexicalBlock(scope: !10342, file: !3, line: 1781, column: 12)
!10407 = !DILocation(line: 1782, column: 7, scope: !10405)
!10408 = !DILocalVariable(name: "__UNIQUE_ID___y244", scope: !10405, file: !3, line: 1782, type: !139)
!10409 = !DILocation(line: 1782, column: 5, scope: !10406)
!10410 = !DILocalVariable(name: "__UNIQUE_ID___x245", scope: !10411, file: !3, line: 1783, type: !139)
!10411 = distinct !DILexicalBlock(scope: !10406, file: !3, line: 1783, column: 7)
!10412 = !DILocation(line: 1783, column: 7, scope: !10411)
!10413 = !DILocalVariable(name: "__UNIQUE_ID___y246", scope: !10411, file: !3, line: 1783, type: !139)
!10414 = !DILocation(line: 1783, column: 5, scope: !10406)
!10415 = !DILocation(line: 1785, column: 7, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10406, file: !3, line: 1785, column: 7)
!10417 = !DILocation(line: 1785, column: 9, scope: !10416)
!10418 = !DILocation(line: 1785, column: 7, scope: !10406)
!10419 = !DILocation(line: 1786, column: 4, scope: !10416)
!10420 = !DILocation(line: 1788, column: 10, scope: !10406)
!10421 = !DILocation(line: 1788, column: 16, scope: !10406)
!10422 = !DILocation(line: 1788, column: 21, scope: !10406)
!10423 = !DILocation(line: 1788, column: 32, scope: !10406)
!10424 = !DILocation(line: 1788, column: 38, scope: !10406)
!10425 = !DILocation(line: 1788, column: 30, scope: !10406)
!10426 = !DILocation(line: 1788, column: 49, scope: !10406)
!10427 = !DILocation(line: 1788, column: 54, scope: !10406)
!10428 = !DILocation(line: 1788, column: 3, scope: !10406)
!10429 = !DILocation(line: 1789, column: 22, scope: !10406)
!10430 = !DILocation(line: 1789, column: 28, scope: !10406)
!10431 = !DILocation(line: 1789, column: 40, scope: !10406)
!10432 = !DILocation(line: 1789, column: 38, scope: !10406)
!10433 = !DILocation(line: 1789, column: 21, scope: !10406)
!10434 = !DILocation(line: 1789, column: 43, scope: !10406)
!10435 = !DILocation(line: 1789, column: 3, scope: !10406)
!10436 = !DILocation(line: 1789, column: 9, scope: !10406)
!10437 = !DILocation(line: 1789, column: 19, scope: !10406)
!10438 = !DILocation(line: 1791, column: 21, scope: !10406)
!10439 = !DILocation(line: 1791, column: 3, scope: !10406)
!10440 = !DILocation(line: 1791, column: 9, scope: !10406)
!10441 = !DILocation(line: 1791, column: 18, scope: !10406)
!10442 = !DILocation(line: 1792, column: 10, scope: !10406)
!10443 = !DILocation(line: 1792, column: 7, scope: !10406)
!10444 = !DILocation(line: 1793, column: 12, scope: !10406)
!10445 = !DILocation(line: 1793, column: 9, scope: !10406)
!10446 = !DILocation(line: 1794, column: 10, scope: !10406)
!10447 = !DILocation(line: 1794, column: 7, scope: !10406)
!10448 = distinct !{!10448, !10403, !10449}
!10449 = !DILocation(line: 1795, column: 2, scope: !10342)
!10450 = !DILocation(line: 1796, column: 26, scope: !10342)
!10451 = !DILocation(line: 1796, column: 32, scope: !10342)
!10452 = !DILocation(line: 1796, column: 38, scope: !10342)
!10453 = !DILocation(line: 1796, column: 49, scope: !10342)
!10454 = !DILocation(line: 409, column: 2, scope: !9120, inlinedAt: !10344)
!10455 = !DILocation(line: 409, column: 2, scope: !9125, inlinedAt: !10344)
!10456 = !DILocation(line: 409, column: 2, scope: !9126, inlinedAt: !10344)
!10457 = !DILocation(line: 409, column: 2, scope: !9133, inlinedAt: !10344)
!10458 = !DILocation(line: 409, column: 2, scope: !9136, inlinedAt: !10344)
!10459 = !DILocation(line: 1798, column: 33, scope: !10342)
!10460 = !DILocation(line: 1798, column: 2, scope: !10342)
!10461 = !DILocation(line: 1798, column: 8, scope: !10342)
!10462 = !DILocation(line: 1798, column: 19, scope: !10342)
!10463 = !DILocation(line: 1798, column: 30, scope: !10342)
!10464 = !DILocation(line: 1799, column: 31, scope: !10342)
!10465 = !DILocation(line: 1799, column: 2, scope: !10342)
!10466 = !DILocation(line: 1799, column: 8, scope: !10342)
!10467 = !DILocation(line: 1799, column: 19, scope: !10342)
!10468 = !DILocation(line: 1799, column: 29, scope: !10342)
!10469 = !DILocation(line: 1801, column: 6, scope: !10470)
!10470 = distinct !DILexicalBlock(scope: !10342, file: !3, line: 1801, column: 6)
!10471 = !DILocation(line: 1801, column: 12, scope: !10470)
!10472 = !DILocation(line: 1801, column: 21, scope: !10470)
!10473 = !DILocation(line: 1801, column: 25, scope: !10470)
!10474 = !DILocation(line: 1801, column: 30, scope: !10470)
!10475 = !DILocation(line: 1801, column: 38, scope: !10470)
!10476 = !DILocation(line: 1801, column: 42, scope: !10470)
!10477 = !DILocation(line: 1801, column: 47, scope: !10470)
!10478 = !DILocation(line: 1801, column: 6, scope: !10342)
!10479 = !DILocation(line: 1802, column: 14, scope: !10470)
!10480 = !DILocation(line: 1802, column: 3, scope: !10470)
!10481 = !DILocation(line: 1804, column: 9, scope: !10342)
!10482 = !DILocation(line: 1804, column: 2, scope: !10342)
!10483 = !DILocation(line: 1805, column: 1, scope: !10342)
!10484 = distinct !DISubprogram(name: "cy_put_char", scope: !3, file: !3, line: 1814, type: !3952, scopeLine: 1815, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!10485 = !DILocation(line: 407, column: 64, scope: !9014, inlinedAt: !10486)
!10486 = distinct !DILocation(line: 1831, column: 3, scope: !10487)
!10487 = distinct !DILexicalBlock(scope: !10488, file: !3, line: 1830, column: 53)
!10488 = distinct !DILexicalBlock(scope: !10484, file: !3, line: 1830, column: 6)
!10489 = !DILocation(line: 407, column: 84, scope: !9014, inlinedAt: !10486)
!10490 = !DILocation(line: 407, column: 64, scope: !9014, inlinedAt: !10491)
!10491 = distinct !DILocation(line: 1840, column: 2, scope: !10484)
!10492 = !DILocation(line: 407, column: 84, scope: !9014, inlinedAt: !10491)
!10493 = !DILocation(line: 327, column: 67, scope: !7102, inlinedAt: !10494)
!10494 = distinct !DILocation(line: 1829, column: 2, scope: !10495)
!10495 = distinct !DILexicalBlock(scope: !10496, file: !3, line: 1829, column: 2)
!10496 = distinct !DILexicalBlock(scope: !10497, file: !3, line: 1829, column: 2)
!10497 = distinct !DILexicalBlock(scope: !10498, file: !3, line: 1829, column: 2)
!10498 = distinct !DILexicalBlock(scope: !10499, file: !3, line: 1829, column: 2)
!10499 = distinct !DILexicalBlock(scope: !10484, file: !3, line: 1829, column: 2)
!10500 = !DILocalVariable(name: "tty", arg: 1, scope: !10484, file: !3, line: 1814, type: !233)
!10501 = !DILocation(line: 1814, column: 43, scope: !10484)
!10502 = !DILocalVariable(name: "ch", arg: 2, scope: !10484, file: !3, line: 1814, type: !124)
!10503 = !DILocation(line: 1814, column: 62, scope: !10484)
!10504 = !DILocalVariable(name: "info", scope: !10484, file: !3, line: 1816, type: !134)
!10505 = !DILocation(line: 1816, column: 24, scope: !10484)
!10506 = !DILocation(line: 1816, column: 31, scope: !10484)
!10507 = !DILocation(line: 1816, column: 36, scope: !10484)
!10508 = !DILocalVariable(name: "flags", scope: !10484, file: !3, line: 1817, type: !126)
!10509 = !DILocation(line: 1817, column: 16, scope: !10484)
!10510 = !DILocation(line: 1823, column: 28, scope: !10511)
!10511 = distinct !DILexicalBlock(scope: !10484, file: !3, line: 1823, column: 6)
!10512 = !DILocation(line: 1823, column: 34, scope: !10511)
!10513 = !DILocation(line: 1823, column: 39, scope: !10511)
!10514 = !DILocation(line: 1823, column: 6, scope: !10511)
!10515 = !DILocation(line: 1823, column: 6, scope: !10484)
!10516 = !DILocation(line: 1824, column: 3, scope: !10511)
!10517 = !DILocation(line: 1826, column: 7, scope: !10518)
!10518 = distinct !DILexicalBlock(scope: !10484, file: !3, line: 1826, column: 6)
!10519 = !DILocation(line: 1826, column: 13, scope: !10518)
!10520 = !DILocation(line: 1826, column: 18, scope: !10518)
!10521 = !DILocation(line: 1826, column: 6, scope: !10484)
!10522 = !DILocation(line: 1827, column: 3, scope: !10518)
!10523 = !DILocation(line: 1829, column: 2, scope: !10484)
!10524 = !DILocation(line: 1829, column: 2, scope: !10499)
!10525 = !DILocalVariable(name: "__dummy", scope: !10526, file: !3, line: 1829, type: !126)
!10526 = distinct !DILexicalBlock(scope: !10498, file: !3, line: 1829, column: 2)
!10527 = !DILocation(line: 1829, column: 2, scope: !10526)
!10528 = !DILocalVariable(name: "__dummy2", scope: !10526, file: !3, line: 1829, type: !126)
!10529 = !DILocation(line: 1829, column: 2, scope: !10498)
!10530 = !DILocation(line: 1829, column: 2, scope: !10497)
!10531 = !DILocation(line: 1829, column: 2, scope: !10532)
!10532 = distinct !DILexicalBlock(scope: !10497, file: !3, line: 1829, column: 2)
!10533 = !DILocalVariable(name: "__dummy", scope: !10534, file: !3, line: 1829, type: !126)
!10534 = distinct !DILexicalBlock(scope: !10535, file: !3, line: 1829, column: 2)
!10535 = distinct !DILexicalBlock(scope: !10532, file: !3, line: 1829, column: 2)
!10536 = !DILocation(line: 1829, column: 2, scope: !10534)
!10537 = !DILocalVariable(name: "__dummy2", scope: !10534, file: !3, line: 1829, type: !126)
!10538 = !DILocation(line: 1829, column: 2, scope: !10535)
!10539 = !DILocation(line: 1829, column: 2, scope: !10496)
!10540 = !{i32 -2141421356}
!10541 = !DILocation(line: 1829, column: 2, scope: !10495)
!10542 = !DILocation(line: 329, column: 10, scope: !7102, inlinedAt: !10494)
!10543 = !DILocation(line: 329, column: 16, scope: !7102, inlinedAt: !10494)
!10544 = !DILocation(line: 1830, column: 6, scope: !10488)
!10545 = !DILocation(line: 1830, column: 12, scope: !10488)
!10546 = !DILocation(line: 1830, column: 21, scope: !10488)
!10547 = !DILocation(line: 1830, column: 6, scope: !10484)
!10548 = !DILocation(line: 1831, column: 27, scope: !10487)
!10549 = !DILocation(line: 1831, column: 33, scope: !10487)
!10550 = !DILocation(line: 1831, column: 39, scope: !10487)
!10551 = !DILocation(line: 1831, column: 50, scope: !10487)
!10552 = !DILocation(line: 409, column: 2, scope: !9120, inlinedAt: !10486)
!10553 = !DILocation(line: 409, column: 2, scope: !9125, inlinedAt: !10486)
!10554 = !DILocation(line: 409, column: 2, scope: !9126, inlinedAt: !10486)
!10555 = !DILocation(line: 409, column: 2, scope: !9133, inlinedAt: !10486)
!10556 = !DILocation(line: 409, column: 2, scope: !9136, inlinedAt: !10486)
!10557 = !DILocation(line: 1832, column: 3, scope: !10487)
!10558 = !DILocation(line: 1835, column: 43, scope: !10484)
!10559 = !DILocation(line: 1835, column: 2, scope: !10484)
!10560 = !DILocation(line: 1835, column: 8, scope: !10484)
!10561 = !DILocation(line: 1835, column: 13, scope: !10484)
!10562 = !DILocation(line: 1835, column: 22, scope: !10484)
!10563 = !DILocation(line: 1835, column: 28, scope: !10484)
!10564 = !DILocation(line: 1835, column: 37, scope: !10484)
!10565 = !DILocation(line: 1835, column: 41, scope: !10484)
!10566 = !DILocation(line: 1836, column: 2, scope: !10484)
!10567 = !DILocation(line: 1836, column: 8, scope: !10484)
!10568 = !DILocation(line: 1836, column: 18, scope: !10484)
!10569 = !DILocation(line: 1837, column: 2, scope: !10484)
!10570 = !DILocation(line: 1837, column: 8, scope: !10484)
!10571 = !DILocation(line: 1837, column: 16, scope: !10484)
!10572 = !DILocation(line: 1838, column: 2, scope: !10484)
!10573 = !DILocation(line: 1838, column: 8, scope: !10484)
!10574 = !DILocation(line: 1838, column: 19, scope: !10484)
!10575 = !DILocation(line: 1838, column: 29, scope: !10484)
!10576 = !DILocation(line: 1839, column: 31, scope: !10484)
!10577 = !DILocation(line: 1839, column: 2, scope: !10484)
!10578 = !DILocation(line: 1839, column: 8, scope: !10484)
!10579 = !DILocation(line: 1839, column: 19, scope: !10484)
!10580 = !DILocation(line: 1839, column: 29, scope: !10484)
!10581 = !DILocation(line: 1840, column: 26, scope: !10484)
!10582 = !DILocation(line: 1840, column: 32, scope: !10484)
!10583 = !DILocation(line: 1840, column: 38, scope: !10484)
!10584 = !DILocation(line: 1840, column: 49, scope: !10484)
!10585 = !DILocation(line: 409, column: 2, scope: !9120, inlinedAt: !10491)
!10586 = !DILocation(line: 409, column: 2, scope: !9125, inlinedAt: !10491)
!10587 = !DILocation(line: 409, column: 2, scope: !9126, inlinedAt: !10491)
!10588 = !DILocation(line: 409, column: 2, scope: !9133, inlinedAt: !10491)
!10589 = !DILocation(line: 409, column: 2, scope: !9136, inlinedAt: !10491)
!10590 = !DILocation(line: 1841, column: 2, scope: !10484)
!10591 = !DILocation(line: 1842, column: 1, scope: !10484)
!10592 = distinct !DISubprogram(name: "cy_flush_chars", scope: !3, file: !3, line: 1848, type: !3943, scopeLine: 1849, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!10593 = !DILocalVariable(name: "tty", arg: 1, scope: !10592, file: !3, line: 1848, type: !233)
!10594 = !DILocation(line: 1848, column: 47, scope: !10592)
!10595 = !DILocalVariable(name: "info", scope: !10592, file: !3, line: 1850, type: !134)
!10596 = !DILocation(line: 1850, column: 24, scope: !10592)
!10597 = !DILocation(line: 1850, column: 31, scope: !10592)
!10598 = !DILocation(line: 1850, column: 36, scope: !10592)
!10599 = !DILocation(line: 1856, column: 28, scope: !10600)
!10600 = distinct !DILexicalBlock(scope: !10592, file: !3, line: 1856, column: 6)
!10601 = !DILocation(line: 1856, column: 34, scope: !10600)
!10602 = !DILocation(line: 1856, column: 39, scope: !10600)
!10603 = !DILocation(line: 1856, column: 6, scope: !10600)
!10604 = !DILocation(line: 1856, column: 6, scope: !10592)
!10605 = !DILocation(line: 1857, column: 3, scope: !10600)
!10606 = !DILocation(line: 1859, column: 6, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10592, file: !3, line: 1859, column: 6)
!10608 = !DILocation(line: 1859, column: 12, scope: !10607)
!10609 = !DILocation(line: 1859, column: 21, scope: !10607)
!10610 = !DILocation(line: 1859, column: 26, scope: !10607)
!10611 = !DILocation(line: 1859, column: 29, scope: !10607)
!10612 = !DILocation(line: 1859, column: 34, scope: !10607)
!10613 = !DILocation(line: 1859, column: 42, scope: !10607)
!10614 = !DILocation(line: 1859, column: 45, scope: !10607)
!10615 = !DILocation(line: 1859, column: 50, scope: !10607)
!10616 = !DILocation(line: 1859, column: 61, scope: !10607)
!10617 = !DILocation(line: 1860, column: 5, scope: !10607)
!10618 = !DILocation(line: 1860, column: 11, scope: !10607)
!10619 = !DILocation(line: 1860, column: 16, scope: !10607)
!10620 = !DILocation(line: 1859, column: 6, scope: !10592)
!10621 = !DILocation(line: 1861, column: 3, scope: !10607)
!10622 = !DILocation(line: 1863, column: 13, scope: !10592)
!10623 = !DILocation(line: 1863, column: 2, scope: !10592)
!10624 = !DILocation(line: 1864, column: 1, scope: !10592)
!10625 = distinct !DISubprogram(name: "cy_write_room", scope: !3, file: !3, line: 1872, type: !3957, scopeLine: 1873, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!10626 = !DILocalVariable(name: "tty", arg: 1, scope: !10625, file: !3, line: 1872, type: !233)
!10627 = !DILocation(line: 1872, column: 45, scope: !10625)
!10628 = !DILocalVariable(name: "info", scope: !10625, file: !3, line: 1874, type: !134)
!10629 = !DILocation(line: 1874, column: 24, scope: !10625)
!10630 = !DILocation(line: 1874, column: 31, scope: !10625)
!10631 = !DILocation(line: 1874, column: 36, scope: !10625)
!10632 = !DILocalVariable(name: "ret", scope: !10625, file: !3, line: 1875, type: !139)
!10633 = !DILocation(line: 1875, column: 6, scope: !10625)
!10634 = !DILocation(line: 1881, column: 28, scope: !10635)
!10635 = distinct !DILexicalBlock(scope: !10625, file: !3, line: 1881, column: 6)
!10636 = !DILocation(line: 1881, column: 34, scope: !10635)
!10637 = !DILocation(line: 1881, column: 39, scope: !10635)
!10638 = !DILocation(line: 1881, column: 6, scope: !10635)
!10639 = !DILocation(line: 1881, column: 6, scope: !10625)
!10640 = !DILocation(line: 1882, column: 3, scope: !10635)
!10641 = !DILocation(line: 1883, column: 27, scope: !10625)
!10642 = !DILocation(line: 1883, column: 33, scope: !10625)
!10643 = !DILocation(line: 1883, column: 25, scope: !10625)
!10644 = !DILocation(line: 1883, column: 42, scope: !10625)
!10645 = !DILocation(line: 1883, column: 8, scope: !10625)
!10646 = !DILocation(line: 1883, column: 6, scope: !10625)
!10647 = !DILocation(line: 1884, column: 6, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10625, file: !3, line: 1884, column: 6)
!10649 = !DILocation(line: 1884, column: 10, scope: !10648)
!10650 = !DILocation(line: 1884, column: 6, scope: !10625)
!10651 = !DILocation(line: 1885, column: 7, scope: !10648)
!10652 = !DILocation(line: 1885, column: 3, scope: !10648)
!10653 = !DILocation(line: 1886, column: 9, scope: !10625)
!10654 = !DILocation(line: 1886, column: 2, scope: !10625)
!10655 = !DILocation(line: 1887, column: 1, scope: !10625)
!10656 = distinct !DISubprogram(name: "cy_chars_in_buffer", scope: !3, file: !3, line: 1889, type: !3957, scopeLine: 1890, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!10657 = !DILocalVariable(name: "tty", arg: 1, scope: !10656, file: !3, line: 1889, type: !233)
!10658 = !DILocation(line: 1889, column: 50, scope: !10656)
!10659 = !DILocalVariable(name: "info", scope: !10656, file: !3, line: 1891, type: !134)
!10660 = !DILocation(line: 1891, column: 24, scope: !10656)
!10661 = !DILocation(line: 1891, column: 31, scope: !10656)
!10662 = !DILocation(line: 1891, column: 36, scope: !10656)
!10663 = !DILocation(line: 1893, column: 28, scope: !10664)
!10664 = distinct !DILexicalBlock(scope: !10656, file: !3, line: 1893, column: 6)
!10665 = !DILocation(line: 1893, column: 34, scope: !10664)
!10666 = !DILocation(line: 1893, column: 39, scope: !10664)
!10667 = !DILocation(line: 1893, column: 6, scope: !10664)
!10668 = !DILocation(line: 1893, column: 6, scope: !10656)
!10669 = !DILocation(line: 1894, column: 3, scope: !10664)
!10670 = !DILocation(line: 1903, column: 10, scope: !10656)
!10671 = !DILocation(line: 1903, column: 16, scope: !10656)
!10672 = !DILocation(line: 1903, column: 3, scope: !10656)
!10673 = !DILocation(line: 1924, column: 1, scope: !10656)
!10674 = distinct !DISubprogram(name: "cy_ioctl", scope: !3, file: !3, line: 2620, type: !3962, scopeLine: 2622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!10675 = !DILocation(line: 407, column: 64, scope: !9014, inlinedAt: !10676)
!10676 = distinct !DILocation(line: 2715, column: 3, scope: !10677)
!10677 = distinct !DILexicalBlock(scope: !10674, file: !3, line: 2637, column: 15)
!10678 = !DILocation(line: 407, column: 84, scope: !9014, inlinedAt: !10676)
!10679 = !DILocation(line: 327, column: 67, scope: !7102, inlinedAt: !10680)
!10680 = distinct !DILocation(line: 2712, column: 3, scope: !10681)
!10681 = distinct !DILexicalBlock(scope: !10682, file: !3, line: 2712, column: 3)
!10682 = distinct !DILexicalBlock(scope: !10683, file: !3, line: 2712, column: 3)
!10683 = distinct !DILexicalBlock(scope: !10684, file: !3, line: 2712, column: 3)
!10684 = distinct !DILexicalBlock(scope: !10685, file: !3, line: 2712, column: 3)
!10685 = distinct !DILexicalBlock(scope: !10677, file: !3, line: 2712, column: 3)
!10686 = !DILocalVariable(name: "addr", arg: 1, scope: !10687, file: !10688, line: 138, type: !2192)
!10687 = distinct !DISubprogram(name: "check_copy_size", scope: !10688, file: !10688, line: 138, type: !10689, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!10688 = !DIFile(filename: "./include/linux/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!10689 = !DISubroutineType(types: !10690)
!10690 = !{!497, !2192, !338, !497}
!10691 = !DILocation(line: 138, column: 29, scope: !10687, inlinedAt: !10692)
!10692 = distinct !DILocation(line: 199, column: 6, scope: !10693, inlinedAt: !10698)
!10693 = distinct !DILexicalBlock(scope: !10695, file: !10694, line: 199, column: 6)
!10694 = !DIFile(filename: "./include/linux/uaccess.h", directory: "/home/lizy2001/genbc/linux")
!10695 = distinct !DISubprogram(name: "copy_to_user", scope: !10694, file: !10694, line: 197, type: !10696, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!10696 = !DISubroutineType(types: !10697)
!10697 = !{!126, !118, !2192, !126}
!10698 = distinct !DILocation(line: 2639, column: 7, scope: !10699)
!10699 = distinct !DILexicalBlock(scope: !10677, file: !3, line: 2639, column: 7)
!10700 = !DILocalVariable(name: "bytes", arg: 2, scope: !10687, file: !10688, line: 138, type: !338)
!10701 = !DILocation(line: 138, column: 42, scope: !10687, inlinedAt: !10692)
!10702 = !DILocalVariable(name: "is_source", arg: 3, scope: !10687, file: !10688, line: 138, type: !497)
!10703 = !DILocation(line: 138, column: 54, scope: !10687, inlinedAt: !10692)
!10704 = !DILocalVariable(name: "sz", scope: !10687, file: !10688, line: 140, type: !139)
!10705 = !DILocation(line: 140, column: 6, scope: !10687, inlinedAt: !10692)
!10706 = !DILocalVariable(name: "__ret_warn_on", scope: !10707, file: !10688, line: 150, type: !139)
!10707 = distinct !DILexicalBlock(scope: !10708, file: !10688, line: 150, column: 6)
!10708 = distinct !DILexicalBlock(scope: !10687, file: !10688, line: 150, column: 6)
!10709 = !DILocation(line: 150, column: 6, scope: !10707, inlinedAt: !10692)
!10710 = !DILocalVariable(name: "to", arg: 1, scope: !10695, file: !10694, line: 197, type: !118)
!10711 = !DILocation(line: 197, column: 27, scope: !10695, inlinedAt: !10698)
!10712 = !DILocalVariable(name: "from", arg: 2, scope: !10695, file: !10694, line: 197, type: !2192)
!10713 = !DILocation(line: 197, column: 43, scope: !10695, inlinedAt: !10698)
!10714 = !DILocalVariable(name: "n", arg: 3, scope: !10695, file: !10694, line: 197, type: !126)
!10715 = !DILocation(line: 197, column: 63, scope: !10695, inlinedAt: !10698)
!10716 = !DILocalVariable(name: "tty", arg: 1, scope: !10674, file: !3, line: 2620, type: !233)
!10717 = !DILocation(line: 2620, column: 29, scope: !10674)
!10718 = !DILocalVariable(name: "cmd", arg: 2, scope: !10674, file: !3, line: 2621, type: !7)
!10719 = !DILocation(line: 2621, column: 16, scope: !10674)
!10720 = !DILocalVariable(name: "arg", arg: 3, scope: !10674, file: !3, line: 2621, type: !126)
!10721 = !DILocation(line: 2621, column: 35, scope: !10674)
!10722 = !DILocalVariable(name: "info", scope: !10674, file: !3, line: 2623, type: !134)
!10723 = !DILocation(line: 2623, column: 24, scope: !10674)
!10724 = !DILocation(line: 2623, column: 31, scope: !10674)
!10725 = !DILocation(line: 2623, column: 36, scope: !10674)
!10726 = !DILocalVariable(name: "cnow", scope: !10674, file: !3, line: 2624, type: !4397)
!10727 = !DILocation(line: 2624, column: 25, scope: !10674)
!10728 = !DILocalVariable(name: "ret_val", scope: !10674, file: !3, line: 2625, type: !139)
!10729 = !DILocation(line: 2625, column: 6, scope: !10674)
!10730 = !DILocalVariable(name: "flags", scope: !10674, file: !3, line: 2626, type: !126)
!10731 = !DILocation(line: 2626, column: 16, scope: !10674)
!10732 = !DILocalVariable(name: "argp", scope: !10674, file: !3, line: 2627, type: !118)
!10733 = !DILocation(line: 2627, column: 15, scope: !10674)
!10734 = !DILocation(line: 2627, column: 37, scope: !10674)
!10735 = !DILocation(line: 2627, column: 22, scope: !10674)
!10736 = !DILocation(line: 2629, column: 28, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10674, file: !3, line: 2629, column: 6)
!10738 = !DILocation(line: 2629, column: 34, scope: !10737)
!10739 = !DILocation(line: 2629, column: 39, scope: !10737)
!10740 = !DILocation(line: 2629, column: 6, scope: !10737)
!10741 = !DILocation(line: 2629, column: 6, scope: !10674)
!10742 = !DILocation(line: 2630, column: 3, scope: !10737)
!10743 = !DILocation(line: 2637, column: 10, scope: !10674)
!10744 = !DILocation(line: 2637, column: 2, scope: !10674)
!10745 = !DILocation(line: 2639, column: 20, scope: !10699)
!10746 = !DILocation(line: 2639, column: 27, scope: !10699)
!10747 = !DILocation(line: 2639, column: 33, scope: !10699)
!10748 = !DILocation(line: 2639, column: 26, scope: !10699)
!10749 = !DILocation(line: 199, column: 6, scope: !10693, inlinedAt: !10698)
!10750 = !DILocation(line: 141, column: 6, scope: !10751, inlinedAt: !10692)
!10751 = distinct !DILexicalBlock(scope: !10687, file: !10688, line: 141, column: 6)
!10752 = !DILocation(line: 0, scope: !10751, inlinedAt: !10692)
!10753 = !DILocation(line: 141, column: 6, scope: !10687, inlinedAt: !10692)
!10754 = !DILocation(line: 142, column: 29, scope: !10755, inlinedAt: !10692)
!10755 = distinct !DILexicalBlock(scope: !10756, file: !10688, line: 142, column: 7)
!10756 = distinct !DILexicalBlock(scope: !10751, file: !10688, line: 141, column: 39)
!10757 = !DILocation(line: 142, column: 8, scope: !10755, inlinedAt: !10692)
!10758 = !DILocation(line: 142, column: 7, scope: !10756, inlinedAt: !10692)
!10759 = !DILocation(line: 143, column: 18, scope: !10755, inlinedAt: !10692)
!10760 = !DILocation(line: 143, column: 22, scope: !10755, inlinedAt: !10692)
!10761 = !DILocation(line: 143, column: 4, scope: !10755, inlinedAt: !10692)
!10762 = !DILocation(line: 144, column: 12, scope: !10763, inlinedAt: !10692)
!10763 = distinct !DILexicalBlock(scope: !10755, file: !10688, line: 144, column: 12)
!10764 = !DILocation(line: 144, column: 12, scope: !10755, inlinedAt: !10692)
!10765 = !DILocation(line: 145, column: 4, scope: !10763, inlinedAt: !10692)
!10766 = !DILocation(line: 147, column: 4, scope: !10763, inlinedAt: !10692)
!10767 = !DILocation(line: 148, column: 3, scope: !10756, inlinedAt: !10692)
!10768 = !DILocation(line: 150, column: 6, scope: !10769, inlinedAt: !10692)
!10769 = distinct !DILexicalBlock(scope: !10707, file: !10688, line: 150, column: 6)
!10770 = !DILocation(line: 150, column: 6, scope: !10771, inlinedAt: !10692)
!10771 = distinct !DILexicalBlock(scope: !10772, file: !10688, line: 150, column: 6)
!10772 = distinct !DILexicalBlock(scope: !10769, file: !10688, line: 150, column: 6)
!10773 = !{i32 -2145448784, i32 -2145448755, i32 -2145448709, i32 -2145448651, i32 -2145448597, i32 -2145448543, i32 -2145448488, i32 -2145448457}
!10774 = !DILocation(line: 150, column: 6, scope: !10775, inlinedAt: !10692)
!10775 = distinct !DILexicalBlock(scope: !10772, file: !10688, line: 150, column: 6)
!10776 = !{i32 -2145448037, i32 -2145448030, i32 -2145447978, i32 -2145447947, i32 -2145447917}
!10777 = !DILocation(line: 150, column: 6, scope: !10772, inlinedAt: !10692)
!10778 = !DILocation(line: 150, column: 6, scope: !10708, inlinedAt: !10692)
!10779 = !DILocation(line: 150, column: 6, scope: !10687, inlinedAt: !10692)
!10780 = !DILocation(line: 151, column: 3, scope: !10708, inlinedAt: !10692)
!10781 = !DILocation(line: 152, column: 20, scope: !10687, inlinedAt: !10692)
!10782 = !DILocation(line: 152, column: 26, scope: !10687, inlinedAt: !10692)
!10783 = !DILocation(line: 152, column: 33, scope: !10687, inlinedAt: !10692)
!10784 = !DILocation(line: 152, column: 2, scope: !10687, inlinedAt: !10692)
!10785 = !DILocation(line: 153, column: 2, scope: !10687, inlinedAt: !10692)
!10786 = !DILocation(line: 154, column: 1, scope: !10687, inlinedAt: !10692)
!10787 = !DILocation(line: 199, column: 6, scope: !10695, inlinedAt: !10698)
!10788 = !DILocation(line: 200, column: 21, scope: !10693, inlinedAt: !10698)
!10789 = !DILocation(line: 200, column: 25, scope: !10693, inlinedAt: !10698)
!10790 = !DILocation(line: 200, column: 31, scope: !10693, inlinedAt: !10698)
!10791 = !DILocation(line: 200, column: 7, scope: !10693, inlinedAt: !10698)
!10792 = !DILocation(line: 200, column: 5, scope: !10693, inlinedAt: !10698)
!10793 = !DILocation(line: 200, column: 3, scope: !10693, inlinedAt: !10698)
!10794 = !DILocation(line: 201, column: 9, scope: !10695, inlinedAt: !10698)
!10795 = !DILocation(line: 2639, column: 7, scope: !10699)
!10796 = !DILocation(line: 2639, column: 7, scope: !10677)
!10797 = !DILocation(line: 2640, column: 12, scope: !10798)
!10798 = distinct !DILexicalBlock(scope: !10699, file: !3, line: 2639, column: 58)
!10799 = !DILocation(line: 2641, column: 4, scope: !10798)
!10800 = !DILocation(line: 2643, column: 11, scope: !10677)
!10801 = !DILocation(line: 2643, column: 17, scope: !10677)
!10802 = !DILocation(line: 2643, column: 3, scope: !10677)
!10803 = !DILocation(line: 2644, column: 3, scope: !10677)
!10804 = !DILocation(line: 2646, column: 27, scope: !10677)
!10805 = !DILocation(line: 2646, column: 33, scope: !10677)
!10806 = !DILocation(line: 2646, column: 13, scope: !10677)
!10807 = !DILocation(line: 2646, column: 11, scope: !10677)
!10808 = !DILocation(line: 2647, column: 3, scope: !10677)
!10809 = !DILocation(line: 2649, column: 27, scope: !10677)
!10810 = !DILocation(line: 2649, column: 33, scope: !10677)
!10811 = !DILocation(line: 2649, column: 13, scope: !10677)
!10812 = !DILocation(line: 2649, column: 11, scope: !10677)
!10813 = !DILocation(line: 2650, column: 3, scope: !10677)
!10814 = !DILocation(line: 2652, column: 13, scope: !10815)
!10815 = distinct !DILexicalBlock(scope: !10677, file: !3, line: 2652, column: 13)
!10816 = !DILocalVariable(name: "__ret_pu", scope: !10817, file: !3, line: 2652, type: !139)
!10817 = distinct !DILexicalBlock(scope: !10815, file: !3, line: 2652, column: 13)
!10818 = !DILocation(line: 2652, column: 13, scope: !10817)
!10819 = !DILocalVariable(name: "__ptr_pu", scope: !10817, file: !3, line: 2652, type: !118)
!10820 = !DILocalVariable(name: "__val_pu", scope: !10817, file: !3, line: 2652, type: !126)
!10821 = !{i32 -2141399604}
!10822 = !DILocation(line: 2652, column: 13, scope: !10677)
!10823 = !DILocation(line: 2652, column: 11, scope: !10677)
!10824 = !DILocation(line: 2654, column: 3, scope: !10677)
!10825 = !DILocation(line: 2656, column: 29, scope: !10677)
!10826 = !DILocation(line: 2656, column: 33, scope: !10677)
!10827 = !DILocation(line: 2656, column: 3, scope: !10677)
!10828 = !DILocation(line: 2656, column: 9, scope: !10677)
!10829 = !DILocation(line: 2656, column: 27, scope: !10677)
!10830 = !DILocation(line: 2657, column: 3, scope: !10677)
!10831 = !DILocation(line: 2659, column: 25, scope: !10677)
!10832 = !DILocation(line: 2659, column: 31, scope: !10677)
!10833 = !DILocation(line: 2659, column: 13, scope: !10677)
!10834 = !DILocation(line: 2659, column: 11, scope: !10677)
!10835 = !DILocation(line: 2660, column: 3, scope: !10677)
!10836 = !DILocation(line: 2662, column: 25, scope: !10677)
!10837 = !DILocation(line: 2662, column: 31, scope: !10677)
!10838 = !DILocation(line: 2662, column: 13, scope: !10677)
!10839 = !DILocation(line: 2662, column: 11, scope: !10677)
!10840 = !DILocation(line: 2663, column: 3, scope: !10677)
!10841 = !DILocation(line: 2665, column: 13, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !10677, file: !3, line: 2665, column: 13)
!10843 = !DILocalVariable(name: "__ret_pu", scope: !10844, file: !3, line: 2665, type: !139)
!10844 = distinct !DILexicalBlock(scope: !10842, file: !3, line: 2665, column: 13)
!10845 = !DILocation(line: 2665, column: 13, scope: !10844)
!10846 = !DILocalVariable(name: "__ptr_pu", scope: !10844, file: !3, line: 2665, type: !118)
!10847 = !DILocalVariable(name: "__val_pu", scope: !10844, file: !3, line: 2665, type: !126)
!10848 = !{i32 -2141398666}
!10849 = !DILocation(line: 2665, column: 13, scope: !10677)
!10850 = !DILocation(line: 2665, column: 11, scope: !10677)
!10851 = !DILocation(line: 2667, column: 3, scope: !10677)
!10852 = !DILocation(line: 2669, column: 27, scope: !10677)
!10853 = !DILocation(line: 2669, column: 31, scope: !10677)
!10854 = !DILocation(line: 2669, column: 3, scope: !10677)
!10855 = !DILocation(line: 2669, column: 9, scope: !10677)
!10856 = !DILocation(line: 2669, column: 25, scope: !10677)
!10857 = !DILocation(line: 2670, column: 3, scope: !10677)
!10858 = !DILocation(line: 2672, column: 22, scope: !10677)
!10859 = !DILocation(line: 2672, column: 17, scope: !10677)
!10860 = !DILocation(line: 2672, column: 3, scope: !10677)
!10861 = !DILocation(line: 2672, column: 9, scope: !10677)
!10862 = !DILocation(line: 2672, column: 15, scope: !10677)
!10863 = !DILocation(line: 2673, column: 3, scope: !10677)
!10864 = !DILocation(line: 2675, column: 13, scope: !10677)
!10865 = !DILocation(line: 2675, column: 19, scope: !10677)
!10866 = !DILocation(line: 2675, column: 11, scope: !10677)
!10867 = !DILocation(line: 2676, column: 3, scope: !10677)
!10868 = !DILocation(line: 2678, column: 27, scope: !10677)
!10869 = !DILocation(line: 2678, column: 22, scope: !10677)
!10870 = !DILocation(line: 2678, column: 3, scope: !10677)
!10871 = !DILocation(line: 2678, column: 9, scope: !10677)
!10872 = !DILocation(line: 2678, column: 20, scope: !10677)
!10873 = !DILocation(line: 2679, column: 3, scope: !10677)
!10874 = !DILocation(line: 2681, column: 13, scope: !10677)
!10875 = !DILocation(line: 2681, column: 19, scope: !10677)
!10876 = !DILocation(line: 2681, column: 11, scope: !10677)
!10877 = !DILocation(line: 2682, column: 3, scope: !10677)
!10878 = !DILocation(line: 2684, column: 13, scope: !10677)
!10879 = !DILocation(line: 2684, column: 19, scope: !10677)
!10880 = !DILocation(line: 2684, column: 11, scope: !10677)
!10881 = !DILocation(line: 2685, column: 3, scope: !10677)
!10882 = !DILocation(line: 2688, column: 7, scope: !10883)
!10883 = distinct !DILexicalBlock(scope: !10677, file: !3, line: 2688, column: 7)
!10884 = !DILocation(line: 2688, column: 11, scope: !10883)
!10885 = !DILocation(line: 2688, column: 7, scope: !10677)
!10886 = !DILocation(line: 2689, column: 4, scope: !10883)
!10887 = !DILocation(line: 2690, column: 24, scope: !10677)
!10888 = !DILocation(line: 2690, column: 28, scope: !10677)
!10889 = !DILocation(line: 2690, column: 34, scope: !10677)
!10890 = !DILocation(line: 2690, column: 21, scope: !10677)
!10891 = !DILocation(line: 2691, column: 3, scope: !10677)
!10892 = !DILocation(line: 2693, column: 14, scope: !10677)
!10893 = !DILocation(line: 2693, column: 32, scope: !10677)
!10894 = !DILocation(line: 2693, column: 40, scope: !10677)
!10895 = !DILocation(line: 2693, column: 13, scope: !10677)
!10896 = !DILocation(line: 2693, column: 11, scope: !10677)
!10897 = !DILocation(line: 2694, column: 3, scope: !10677)
!10898 = !DILocation(line: 2697, column: 45, scope: !10677)
!10899 = !DILocation(line: 2697, column: 29, scope: !10677)
!10900 = !DILocation(line: 2697, column: 49, scope: !10677)
!10901 = !DILocation(line: 2697, column: 54, scope: !10677)
!10902 = !DILocation(line: 2697, column: 3, scope: !10677)
!10903 = !DILocation(line: 2697, column: 9, scope: !10677)
!10904 = !DILocation(line: 2697, column: 14, scope: !10677)
!10905 = !DILocation(line: 2697, column: 27, scope: !10677)
!10906 = !DILocation(line: 2698, column: 3, scope: !10677)
!10907 = !DILocation(line: 2700, column: 13, scope: !10677)
!10908 = !DILocation(line: 2700, column: 19, scope: !10677)
!10909 = !DILocation(line: 2700, column: 24, scope: !10677)
!10910 = !DILocation(line: 2700, column: 37, scope: !10677)
!10911 = !DILocation(line: 2700, column: 11, scope: !10677)
!10912 = !DILocation(line: 2701, column: 3, scope: !10677)
!10913 = !DILocation(line: 2703, column: 26, scope: !10677)
!10914 = !DILocation(line: 2703, column: 32, scope: !10677)
!10915 = !DILocation(line: 2703, column: 13, scope: !10677)
!10916 = !DILocation(line: 2703, column: 11, scope: !10677)
!10917 = !DILocation(line: 2704, column: 3, scope: !10677)
!10918 = !DILocation(line: 2712, column: 3, scope: !10677)
!10919 = !DILocation(line: 2712, column: 3, scope: !10685)
!10920 = !DILocalVariable(name: "__dummy", scope: !10921, file: !3, line: 2712, type: !126)
!10921 = distinct !DILexicalBlock(scope: !10684, file: !3, line: 2712, column: 3)
!10922 = !DILocation(line: 2712, column: 3, scope: !10921)
!10923 = !DILocalVariable(name: "__dummy2", scope: !10921, file: !3, line: 2712, type: !126)
!10924 = !DILocation(line: 2712, column: 3, scope: !10684)
!10925 = !DILocation(line: 2712, column: 3, scope: !10683)
!10926 = !DILocation(line: 2712, column: 3, scope: !10927)
!10927 = distinct !DILexicalBlock(scope: !10683, file: !3, line: 2712, column: 3)
!10928 = !DILocalVariable(name: "__dummy", scope: !10929, file: !3, line: 2712, type: !126)
!10929 = distinct !DILexicalBlock(scope: !10930, file: !3, line: 2712, column: 3)
!10930 = distinct !DILexicalBlock(scope: !10927, file: !3, line: 2712, column: 3)
!10931 = !DILocation(line: 2712, column: 3, scope: !10929)
!10932 = !DILocalVariable(name: "__dummy2", scope: !10929, file: !3, line: 2712, type: !126)
!10933 = !DILocation(line: 2712, column: 3, scope: !10930)
!10934 = !DILocation(line: 2712, column: 3, scope: !10682)
!10935 = !{i32 -2141396955}
!10936 = !DILocation(line: 2712, column: 3, scope: !10681)
!10937 = !DILocation(line: 329, column: 10, scope: !7102, inlinedAt: !10680)
!10938 = !DILocation(line: 329, column: 16, scope: !7102, inlinedAt: !10680)
!10939 = !DILocation(line: 2714, column: 10, scope: !10677)
!10940 = !DILocation(line: 2714, column: 16, scope: !10677)
!10941 = !DILocation(line: 2715, column: 27, scope: !10677)
!10942 = !DILocation(line: 2715, column: 33, scope: !10677)
!10943 = !DILocation(line: 2715, column: 39, scope: !10677)
!10944 = !DILocation(line: 2715, column: 50, scope: !10677)
!10945 = !DILocation(line: 409, column: 2, scope: !9120, inlinedAt: !10676)
!10946 = !DILocation(line: 409, column: 2, scope: !9125, inlinedAt: !10676)
!10947 = !DILocation(line: 409, column: 2, scope: !9126, inlinedAt: !10676)
!10948 = !DILocation(line: 409, column: 2, scope: !9133, inlinedAt: !10676)
!10949 = !DILocation(line: 409, column: 2, scope: !9136, inlinedAt: !10676)
!10950 = !DILocalVariable(name: "__ret", scope: !10951, file: !3, line: 2716, type: !139)
!10951 = distinct !DILexicalBlock(scope: !10677, file: !3, line: 2716, column: 13)
!10952 = !DILocation(line: 2716, column: 13, scope: !10951)
!10953 = !DILocation(line: 2716, column: 13, scope: !10954)
!10954 = distinct !DILexicalBlock(scope: !10951, file: !3, line: 2716, column: 13)
!10955 = !DILocation(line: 2716, column: 13, scope: !10956)
!10956 = distinct !DILexicalBlock(scope: !10954, file: !3, line: 2716, column: 13)
!10957 = !DILocation(line: 2716, column: 13, scope: !10958)
!10958 = distinct !DILexicalBlock(scope: !10951, file: !3, line: 2716, column: 13)
!10959 = !DILocalVariable(name: "__wq_entry", scope: !10960, file: !3, line: 2716, type: !10961)
!10960 = distinct !DILexicalBlock(scope: !10958, file: !3, line: 2716, column: 13)
!10961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1505, line: 29, size: 320, elements: !10962)
!10962 = !{!10963, !10964, !10965, !10971}
!10963 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10961, file: !1505, line: 30, baseType: !7, size: 32)
!10964 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !10961, file: !1505, line: 31, baseType: !118, size: 64, offset: 64)
!10965 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !10961, file: !1505, line: 32, baseType: !10966, size: 64, offset: 128)
!10966 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1505, line: 16, baseType: !10967)
!10967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10968, size: 64)
!10968 = !DISubroutineType(types: !10969)
!10969 = !{!139, !10970, !7, !139, !118}
!10970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10961, size: 64)
!10971 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !10961, file: !1505, line: 33, baseType: !186, size: 128, offset: 192)
!10972 = !DILocation(line: 2716, column: 13, scope: !10960)
!10973 = !DILocalVariable(name: "__ret", scope: !10960, file: !3, line: 2716, type: !327)
!10974 = !DILocalVariable(name: "__int", scope: !10975, file: !3, line: 2716, type: !327)
!10975 = distinct !DILexicalBlock(scope: !10976, file: !3, line: 2716, column: 13)
!10976 = distinct !DILexicalBlock(scope: !10977, file: !3, line: 2716, column: 13)
!10977 = distinct !DILexicalBlock(scope: !10960, file: !3, line: 2716, column: 13)
!10978 = !DILocation(line: 2716, column: 13, scope: !10975)
!10979 = !DILocation(line: 2716, column: 13, scope: !10980)
!10980 = distinct !DILexicalBlock(scope: !10975, file: !3, line: 2716, column: 13)
!10981 = !DILocation(line: 2716, column: 13, scope: !10982)
!10982 = distinct !DILexicalBlock(scope: !10975, file: !3, line: 2716, column: 13)
!10983 = !DILocation(line: 2716, column: 13, scope: !10984)
!10984 = distinct !DILexicalBlock(scope: !10982, file: !3, line: 2716, column: 13)
!10985 = !DILocation(line: 2716, column: 13, scope: !10976)
!10986 = distinct !{!10986, !10987, !10987}
!10987 = !DILocation(line: 2716, column: 13, scope: !10977)
!10988 = !DILabel(scope: !10960, name: "__out", file: !3, line: 2716)
!10989 = !DILocation(line: 2716, column: 11, scope: !10677)
!10990 = !DILocation(line: 2718, column: 3, scope: !10677)
!10991 = !DILocation(line: 2727, column: 11, scope: !10677)
!10992 = !DILocation(line: 2728, column: 2, scope: !10677)
!10993 = !DILocation(line: 2733, column: 9, scope: !10674)
!10994 = !DILocation(line: 2733, column: 2, scope: !10674)
!10995 = !DILocation(line: 2734, column: 1, scope: !10674)
!10996 = distinct !DISubprogram(name: "cy_set_termios", scope: !3, file: !3, line: 2767, type: !3970, scopeLine: 2768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!10997 = !DILocalVariable(name: "tty", arg: 1, scope: !10996, file: !3, line: 2767, type: !233)
!10998 = !DILocation(line: 2767, column: 47, scope: !10996)
!10999 = !DILocalVariable(name: "old_termios", arg: 2, scope: !10996, file: !3, line: 2767, type: !3914)
!11000 = !DILocation(line: 2767, column: 69, scope: !10996)
!11001 = !DILocalVariable(name: "info", scope: !10996, file: !3, line: 2769, type: !134)
!11002 = !DILocation(line: 2769, column: 24, scope: !10996)
!11003 = !DILocation(line: 2769, column: 31, scope: !10996)
!11004 = !DILocation(line: 2769, column: 36, scope: !10996)
!11005 = !DILocation(line: 2775, column: 19, scope: !10996)
!11006 = !DILocation(line: 2775, column: 25, scope: !10996)
!11007 = !DILocation(line: 2775, column: 2, scope: !10996)
!11008 = !DILocation(line: 2777, column: 7, scope: !11009)
!11009 = distinct !DILexicalBlock(scope: !10996, file: !3, line: 2777, column: 6)
!11010 = !DILocation(line: 2777, column: 20, scope: !11009)
!11011 = !DILocation(line: 2777, column: 28, scope: !11009)
!11012 = !DILocation(line: 2777, column: 39, scope: !11009)
!11013 = !DILocation(line: 2777, column: 43, scope: !11009)
!11014 = !DILocation(line: 2777, column: 6, scope: !10996)
!11015 = !DILocation(line: 2778, column: 3, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !11009, file: !3, line: 2777, column: 59)
!11017 = !DILocation(line: 2778, column: 8, scope: !11016)
!11018 = !DILocation(line: 2778, column: 19, scope: !11016)
!11019 = !DILocation(line: 2779, column: 12, scope: !11016)
!11020 = !DILocation(line: 2779, column: 3, scope: !11016)
!11021 = !DILocation(line: 2780, column: 2, scope: !11016)
!11022 = !DILocation(line: 2791, column: 1, scope: !10996)
!11023 = distinct !DISubprogram(name: "cy_throttle", scope: !3, file: !3, line: 2825, type: !3943, scopeLine: 2826, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!11024 = !DILocation(line: 407, column: 64, scope: !9014, inlinedAt: !11025)
!11025 = distinct !DILocation(line: 2852, column: 4, scope: !11026)
!11026 = distinct !DILexicalBlock(scope: !11027, file: !3, line: 2849, column: 23)
!11027 = distinct !DILexicalBlock(scope: !11028, file: !3, line: 2849, column: 7)
!11028 = distinct !DILexicalBlock(scope: !11029, file: !3, line: 2848, column: 22)
!11029 = distinct !DILexicalBlock(scope: !11023, file: !3, line: 2848, column: 6)
!11030 = !DILocation(line: 407, column: 84, scope: !9014, inlinedAt: !11025)
!11031 = !DILocation(line: 327, column: 67, scope: !7102, inlinedAt: !11032)
!11032 = distinct !DILocation(line: 2850, column: 4, scope: !11033)
!11033 = distinct !DILexicalBlock(scope: !11034, file: !3, line: 2850, column: 4)
!11034 = distinct !DILexicalBlock(scope: !11035, file: !3, line: 2850, column: 4)
!11035 = distinct !DILexicalBlock(scope: !11036, file: !3, line: 2850, column: 4)
!11036 = distinct !DILexicalBlock(scope: !11037, file: !3, line: 2850, column: 4)
!11037 = distinct !DILexicalBlock(scope: !11026, file: !3, line: 2850, column: 4)
!11038 = !DILocalVariable(name: "tty", arg: 1, scope: !11023, file: !3, line: 2825, type: !233)
!11039 = !DILocation(line: 2825, column: 44, scope: !11023)
!11040 = !DILocalVariable(name: "info", scope: !11023, file: !3, line: 2827, type: !134)
!11041 = !DILocation(line: 2827, column: 24, scope: !11023)
!11042 = !DILocation(line: 2827, column: 31, scope: !11023)
!11043 = !DILocation(line: 2827, column: 36, scope: !11023)
!11044 = !DILocalVariable(name: "card", scope: !11023, file: !3, line: 2828, type: !4229)
!11045 = !DILocation(line: 2828, column: 24, scope: !11023)
!11046 = !DILocalVariable(name: "flags", scope: !11023, file: !3, line: 2829, type: !126)
!11047 = !DILocation(line: 2829, column: 16, scope: !11023)
!11048 = !DILocation(line: 2836, column: 28, scope: !11049)
!11049 = distinct !DILexicalBlock(scope: !11023, file: !3, line: 2836, column: 6)
!11050 = !DILocation(line: 2836, column: 34, scope: !11049)
!11051 = !DILocation(line: 2836, column: 39, scope: !11049)
!11052 = !DILocation(line: 2836, column: 6, scope: !11049)
!11053 = !DILocation(line: 2836, column: 6, scope: !11023)
!11054 = !DILocation(line: 2837, column: 3, scope: !11049)
!11055 = !DILocation(line: 2839, column: 9, scope: !11023)
!11056 = !DILocation(line: 2839, column: 15, scope: !11023)
!11057 = !DILocation(line: 2839, column: 7, scope: !11023)
!11058 = !DILocation(line: 2841, column: 6, scope: !11059)
!11059 = distinct !DILexicalBlock(scope: !11023, file: !3, line: 2841, column: 6)
!11060 = !DILocation(line: 2841, column: 6, scope: !11023)
!11061 = !DILocation(line: 2842, column: 16, scope: !11062)
!11062 = distinct !DILexicalBlock(scope: !11063, file: !3, line: 2842, column: 7)
!11063 = distinct !DILexicalBlock(scope: !11059, file: !3, line: 2841, column: 20)
!11064 = !DILocation(line: 2842, column: 8, scope: !11062)
!11065 = !DILocation(line: 2842, column: 7, scope: !11063)
!11066 = !DILocation(line: 2843, column: 18, scope: !11062)
!11067 = !DILocation(line: 2843, column: 23, scope: !11062)
!11068 = !DILocation(line: 2843, column: 4, scope: !11062)
!11069 = !DILocation(line: 2845, column: 4, scope: !11062)
!11070 = !DILocation(line: 2845, column: 10, scope: !11062)
!11071 = !DILocation(line: 2845, column: 19, scope: !11062)
!11072 = !DILocation(line: 2846, column: 2, scope: !11063)
!11073 = !DILocation(line: 2848, column: 6, scope: !11029)
!11074 = !DILocation(line: 2848, column: 6, scope: !11023)
!11075 = !DILocation(line: 2849, column: 16, scope: !11027)
!11076 = !DILocation(line: 2849, column: 8, scope: !11027)
!11077 = !DILocation(line: 2849, column: 7, scope: !11028)
!11078 = !DILocation(line: 2850, column: 4, scope: !11026)
!11079 = !DILocation(line: 2850, column: 4, scope: !11037)
!11080 = !DILocalVariable(name: "__dummy", scope: !11081, file: !3, line: 2850, type: !126)
!11081 = distinct !DILexicalBlock(scope: !11036, file: !3, line: 2850, column: 4)
!11082 = !DILocation(line: 2850, column: 4, scope: !11081)
!11083 = !DILocalVariable(name: "__dummy2", scope: !11081, file: !3, line: 2850, type: !126)
!11084 = !DILocation(line: 2850, column: 4, scope: !11036)
!11085 = !DILocation(line: 2850, column: 4, scope: !11035)
!11086 = !DILocation(line: 2850, column: 4, scope: !11087)
!11087 = distinct !DILexicalBlock(scope: !11035, file: !3, line: 2850, column: 4)
!11088 = !DILocalVariable(name: "__dummy", scope: !11089, file: !3, line: 2850, type: !126)
!11089 = distinct !DILexicalBlock(scope: !11090, file: !3, line: 2850, column: 4)
!11090 = distinct !DILexicalBlock(scope: !11087, file: !3, line: 2850, column: 4)
!11091 = !DILocation(line: 2850, column: 4, scope: !11089)
!11092 = !DILocalVariable(name: "__dummy2", scope: !11089, file: !3, line: 2850, type: !126)
!11093 = !DILocation(line: 2850, column: 4, scope: !11090)
!11094 = !DILocation(line: 2850, column: 4, scope: !11034)
!11095 = !{i32 -2141393025}
!11096 = !DILocation(line: 2850, column: 4, scope: !11033)
!11097 = !DILocation(line: 329, column: 10, scope: !7102, inlinedAt: !11032)
!11098 = !DILocation(line: 329, column: 16, scope: !7102, inlinedAt: !11032)
!11099 = !DILocation(line: 2851, column: 23, scope: !11026)
!11100 = !DILocation(line: 2851, column: 4, scope: !11026)
!11101 = !DILocation(line: 2852, column: 28, scope: !11026)
!11102 = !DILocation(line: 2852, column: 34, scope: !11026)
!11103 = !DILocation(line: 2852, column: 45, scope: !11026)
!11104 = !DILocation(line: 409, column: 2, scope: !9120, inlinedAt: !11025)
!11105 = !DILocation(line: 409, column: 2, scope: !9125, inlinedAt: !11025)
!11106 = !DILocation(line: 409, column: 2, scope: !9126, inlinedAt: !11025)
!11107 = !DILocation(line: 409, column: 2, scope: !9133, inlinedAt: !11025)
!11108 = !DILocation(line: 409, column: 2, scope: !9136, inlinedAt: !11025)
!11109 = !DILocation(line: 2853, column: 3, scope: !11026)
!11110 = !DILocation(line: 2854, column: 4, scope: !11111)
!11111 = distinct !DILexicalBlock(scope: !11027, file: !3, line: 2853, column: 10)
!11112 = !DILocation(line: 2854, column: 10, scope: !11111)
!11113 = !DILocation(line: 2854, column: 19, scope: !11111)
!11114 = !DILocation(line: 2856, column: 2, scope: !11028)
!11115 = !DILocation(line: 2857, column: 1, scope: !11023)
!11116 = distinct !DISubprogram(name: "cy_unthrottle", scope: !3, file: !3, line: 2864, type: !3943, scopeLine: 2865, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!11117 = !DILocation(line: 407, column: 64, scope: !9014, inlinedAt: !11118)
!11118 = distinct !DILocation(line: 2890, column: 4, scope: !11119)
!11119 = distinct !DILexicalBlock(scope: !11120, file: !3, line: 2887, column: 23)
!11120 = distinct !DILexicalBlock(scope: !11121, file: !3, line: 2887, column: 7)
!11121 = distinct !DILexicalBlock(scope: !11122, file: !3, line: 2885, column: 22)
!11122 = distinct !DILexicalBlock(scope: !11116, file: !3, line: 2885, column: 6)
!11123 = !DILocation(line: 407, column: 84, scope: !9014, inlinedAt: !11118)
!11124 = !DILocation(line: 327, column: 67, scope: !7102, inlinedAt: !11125)
!11125 = distinct !DILocation(line: 2888, column: 4, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11127, file: !3, line: 2888, column: 4)
!11127 = distinct !DILexicalBlock(scope: !11128, file: !3, line: 2888, column: 4)
!11128 = distinct !DILexicalBlock(scope: !11129, file: !3, line: 2888, column: 4)
!11129 = distinct !DILexicalBlock(scope: !11130, file: !3, line: 2888, column: 4)
!11130 = distinct !DILexicalBlock(scope: !11119, file: !3, line: 2888, column: 4)
!11131 = !DILocalVariable(name: "tty", arg: 1, scope: !11116, file: !3, line: 2864, type: !233)
!11132 = !DILocation(line: 2864, column: 46, scope: !11116)
!11133 = !DILocalVariable(name: "info", scope: !11116, file: !3, line: 2866, type: !134)
!11134 = !DILocation(line: 2866, column: 24, scope: !11116)
!11135 = !DILocation(line: 2866, column: 31, scope: !11116)
!11136 = !DILocation(line: 2866, column: 36, scope: !11116)
!11137 = !DILocalVariable(name: "card", scope: !11116, file: !3, line: 2867, type: !4229)
!11138 = !DILocation(line: 2867, column: 24, scope: !11116)
!11139 = !DILocalVariable(name: "flags", scope: !11116, file: !3, line: 2868, type: !126)
!11140 = !DILocation(line: 2868, column: 16, scope: !11116)
!11141 = !DILocation(line: 2875, column: 28, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11116, file: !3, line: 2875, column: 6)
!11143 = !DILocation(line: 2875, column: 34, scope: !11142)
!11144 = !DILocation(line: 2875, column: 39, scope: !11142)
!11145 = !DILocation(line: 2875, column: 6, scope: !11142)
!11146 = !DILocation(line: 2875, column: 6, scope: !11116)
!11147 = !DILocation(line: 2876, column: 3, scope: !11142)
!11148 = !DILocation(line: 2878, column: 6, scope: !11149)
!11149 = distinct !DILexicalBlock(scope: !11116, file: !3, line: 2878, column: 6)
!11150 = !DILocation(line: 2878, column: 6, scope: !11116)
!11151 = !DILocation(line: 2879, column: 7, scope: !11152)
!11152 = distinct !DILexicalBlock(scope: !11153, file: !3, line: 2879, column: 7)
!11153 = distinct !DILexicalBlock(scope: !11149, file: !3, line: 2878, column: 20)
!11154 = !DILocation(line: 2879, column: 13, scope: !11152)
!11155 = !DILocation(line: 2879, column: 7, scope: !11153)
!11156 = !DILocation(line: 2880, column: 4, scope: !11152)
!11157 = !DILocation(line: 2880, column: 10, scope: !11152)
!11158 = !DILocation(line: 2880, column: 17, scope: !11152)
!11159 = !DILocation(line: 2882, column: 18, scope: !11152)
!11160 = !DILocation(line: 2882, column: 23, scope: !11152)
!11161 = !DILocation(line: 2882, column: 4, scope: !11152)
!11162 = !DILocation(line: 2883, column: 2, scope: !11153)
!11163 = !DILocation(line: 2885, column: 6, scope: !11122)
!11164 = !DILocation(line: 2885, column: 6, scope: !11116)
!11165 = !DILocation(line: 2886, column: 10, scope: !11121)
!11166 = !DILocation(line: 2886, column: 16, scope: !11121)
!11167 = !DILocation(line: 2886, column: 8, scope: !11121)
!11168 = !DILocation(line: 2887, column: 16, scope: !11120)
!11169 = !DILocation(line: 2887, column: 8, scope: !11120)
!11170 = !DILocation(line: 2887, column: 7, scope: !11121)
!11171 = !DILocation(line: 2888, column: 4, scope: !11119)
!11172 = !DILocation(line: 2888, column: 4, scope: !11130)
!11173 = !DILocalVariable(name: "__dummy", scope: !11174, file: !3, line: 2888, type: !126)
!11174 = distinct !DILexicalBlock(scope: !11129, file: !3, line: 2888, column: 4)
!11175 = !DILocation(line: 2888, column: 4, scope: !11174)
!11176 = !DILocalVariable(name: "__dummy2", scope: !11174, file: !3, line: 2888, type: !126)
!11177 = !DILocation(line: 2888, column: 4, scope: !11129)
!11178 = !DILocation(line: 2888, column: 4, scope: !11128)
!11179 = !DILocation(line: 2888, column: 4, scope: !11180)
!11180 = distinct !DILexicalBlock(scope: !11128, file: !3, line: 2888, column: 4)
!11181 = !DILocalVariable(name: "__dummy", scope: !11182, file: !3, line: 2888, type: !126)
!11182 = distinct !DILexicalBlock(scope: !11183, file: !3, line: 2888, column: 4)
!11183 = distinct !DILexicalBlock(scope: !11180, file: !3, line: 2888, column: 4)
!11184 = !DILocation(line: 2888, column: 4, scope: !11182)
!11185 = !DILocalVariable(name: "__dummy2", scope: !11182, file: !3, line: 2888, type: !126)
!11186 = !DILocation(line: 2888, column: 4, scope: !11183)
!11187 = !DILocation(line: 2888, column: 4, scope: !11127)
!11188 = !{i32 -2141391755}
!11189 = !DILocation(line: 2888, column: 4, scope: !11126)
!11190 = !DILocation(line: 329, column: 10, scope: !7102, inlinedAt: !11125)
!11191 = !DILocation(line: 329, column: 16, scope: !7102, inlinedAt: !11125)
!11192 = !DILocation(line: 2889, column: 23, scope: !11119)
!11193 = !DILocation(line: 2889, column: 4, scope: !11119)
!11194 = !DILocation(line: 2890, column: 28, scope: !11119)
!11195 = !DILocation(line: 2890, column: 34, scope: !11119)
!11196 = !DILocation(line: 2890, column: 45, scope: !11119)
!11197 = !DILocation(line: 409, column: 2, scope: !9120, inlinedAt: !11118)
!11198 = !DILocation(line: 409, column: 2, scope: !9125, inlinedAt: !11118)
!11199 = !DILocation(line: 409, column: 2, scope: !9126, inlinedAt: !11118)
!11200 = !DILocation(line: 409, column: 2, scope: !9133, inlinedAt: !11118)
!11201 = !DILocation(line: 409, column: 2, scope: !9136, inlinedAt: !11118)
!11202 = !DILocation(line: 2891, column: 3, scope: !11119)
!11203 = !DILocation(line: 2892, column: 4, scope: !11204)
!11204 = distinct !DILexicalBlock(scope: !11120, file: !3, line: 2891, column: 10)
!11205 = !DILocation(line: 2892, column: 10, scope: !11204)
!11206 = !DILocation(line: 2892, column: 19, scope: !11204)
!11207 = !DILocation(line: 2894, column: 2, scope: !11121)
!11208 = !DILocation(line: 2895, column: 1, scope: !11116)
!11209 = distinct !DISubprogram(name: "cy_stop", scope: !3, file: !3, line: 2900, type: !3943, scopeLine: 2901, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!11210 = !DILocation(line: 407, column: 64, scope: !9014, inlinedAt: !11211)
!11211 = distinct !DILocation(line: 2920, column: 3, scope: !11212)
!11212 = distinct !DILexicalBlock(scope: !11213, file: !3, line: 2916, column: 23)
!11213 = distinct !DILexicalBlock(scope: !11209, file: !3, line: 2916, column: 6)
!11214 = !DILocation(line: 407, column: 84, scope: !9014, inlinedAt: !11211)
!11215 = !DILocation(line: 327, column: 67, scope: !7102, inlinedAt: !11216)
!11216 = distinct !DILocation(line: 2917, column: 3, scope: !11217)
!11217 = distinct !DILexicalBlock(scope: !11218, file: !3, line: 2917, column: 3)
!11218 = distinct !DILexicalBlock(scope: !11219, file: !3, line: 2917, column: 3)
!11219 = distinct !DILexicalBlock(scope: !11220, file: !3, line: 2917, column: 3)
!11220 = distinct !DILexicalBlock(scope: !11221, file: !3, line: 2917, column: 3)
!11221 = distinct !DILexicalBlock(scope: !11212, file: !3, line: 2917, column: 3)
!11222 = !DILocalVariable(name: "tty", arg: 1, scope: !11209, file: !3, line: 2900, type: !233)
!11223 = !DILocation(line: 2900, column: 40, scope: !11209)
!11224 = !DILocalVariable(name: "cinfo", scope: !11209, file: !3, line: 2902, type: !4229)
!11225 = !DILocation(line: 2902, column: 24, scope: !11209)
!11226 = !DILocalVariable(name: "info", scope: !11209, file: !3, line: 2903, type: !134)
!11227 = !DILocation(line: 2903, column: 24, scope: !11209)
!11228 = !DILocation(line: 2903, column: 31, scope: !11209)
!11229 = !DILocation(line: 2903, column: 36, scope: !11209)
!11230 = !DILocalVariable(name: "channel", scope: !11209, file: !3, line: 2904, type: !139)
!11231 = !DILocation(line: 2904, column: 6, scope: !11209)
!11232 = !DILocalVariable(name: "flags", scope: !11209, file: !3, line: 2905, type: !126)
!11233 = !DILocation(line: 2905, column: 16, scope: !11209)
!11234 = !DILocation(line: 2911, column: 28, scope: !11235)
!11235 = distinct !DILexicalBlock(scope: !11209, file: !3, line: 2911, column: 6)
!11236 = !DILocation(line: 2911, column: 34, scope: !11235)
!11237 = !DILocation(line: 2911, column: 39, scope: !11235)
!11238 = !DILocation(line: 2911, column: 6, scope: !11235)
!11239 = !DILocation(line: 2911, column: 6, scope: !11209)
!11240 = !DILocation(line: 2912, column: 3, scope: !11235)
!11241 = !DILocation(line: 2914, column: 10, scope: !11209)
!11242 = !DILocation(line: 2914, column: 16, scope: !11209)
!11243 = !DILocation(line: 2914, column: 8, scope: !11209)
!11244 = !DILocation(line: 2915, column: 12, scope: !11209)
!11245 = !DILocation(line: 2915, column: 18, scope: !11209)
!11246 = !DILocation(line: 2915, column: 25, scope: !11209)
!11247 = !DILocation(line: 2915, column: 32, scope: !11209)
!11248 = !DILocation(line: 2915, column: 23, scope: !11209)
!11249 = !DILocation(line: 2915, column: 10, scope: !11209)
!11250 = !DILocation(line: 2916, column: 15, scope: !11213)
!11251 = !DILocation(line: 2916, column: 7, scope: !11213)
!11252 = !DILocation(line: 2916, column: 6, scope: !11209)
!11253 = !DILocation(line: 2917, column: 3, scope: !11212)
!11254 = !DILocation(line: 2917, column: 3, scope: !11221)
!11255 = !DILocalVariable(name: "__dummy", scope: !11256, file: !3, line: 2917, type: !126)
!11256 = distinct !DILexicalBlock(scope: !11220, file: !3, line: 2917, column: 3)
!11257 = !DILocation(line: 2917, column: 3, scope: !11256)
!11258 = !DILocalVariable(name: "__dummy2", scope: !11256, file: !3, line: 2917, type: !126)
!11259 = !DILocation(line: 2917, column: 3, scope: !11220)
!11260 = !DILocation(line: 2917, column: 3, scope: !11219)
!11261 = !DILocation(line: 2917, column: 3, scope: !11262)
!11262 = distinct !DILexicalBlock(scope: !11219, file: !3, line: 2917, column: 3)
!11263 = !DILocalVariable(name: "__dummy", scope: !11264, file: !3, line: 2917, type: !126)
!11264 = distinct !DILexicalBlock(scope: !11265, file: !3, line: 2917, column: 3)
!11265 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 2917, column: 3)
!11266 = !DILocation(line: 2917, column: 3, scope: !11264)
!11267 = !DILocalVariable(name: "__dummy2", scope: !11264, file: !3, line: 2917, type: !126)
!11268 = !DILocation(line: 2917, column: 3, scope: !11265)
!11269 = !DILocation(line: 2917, column: 3, scope: !11218)
!11270 = !{i32 -2141390690}
!11271 = !DILocation(line: 2917, column: 3, scope: !11217)
!11272 = !DILocation(line: 329, column: 10, scope: !7102, inlinedAt: !11216)
!11273 = !DILocation(line: 329, column: 16, scope: !7102, inlinedAt: !11216)
!11274 = !DILocation(line: 2918, column: 14, scope: !11212)
!11275 = !DILocation(line: 2918, column: 27, scope: !11212)
!11276 = !DILocation(line: 2918, column: 35, scope: !11212)
!11277 = !DILocation(line: 2918, column: 3, scope: !11212)
!11278 = !DILocation(line: 2919, column: 14, scope: !11212)
!11279 = !DILocation(line: 2919, column: 38, scope: !11212)
!11280 = !DILocation(line: 2919, column: 28, scope: !11212)
!11281 = !DILocation(line: 2919, column: 52, scope: !11212)
!11282 = !DILocation(line: 2919, column: 3, scope: !11212)
!11283 = !DILocation(line: 2920, column: 27, scope: !11212)
!11284 = !DILocation(line: 2920, column: 34, scope: !11212)
!11285 = !DILocation(line: 2920, column: 45, scope: !11212)
!11286 = !DILocation(line: 409, column: 2, scope: !9120, inlinedAt: !11211)
!11287 = !DILocation(line: 409, column: 2, scope: !9125, inlinedAt: !11211)
!11288 = !DILocation(line: 409, column: 2, scope: !9126, inlinedAt: !11211)
!11289 = !DILocation(line: 409, column: 2, scope: !9133, inlinedAt: !11211)
!11290 = !DILocation(line: 409, column: 2, scope: !9136, inlinedAt: !11211)
!11291 = !DILocation(line: 2921, column: 2, scope: !11212)
!11292 = !DILocation(line: 2922, column: 1, scope: !11209)
!11293 = distinct !DISubprogram(name: "cy_start", scope: !3, file: !3, line: 2924, type: !3943, scopeLine: 2925, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!11294 = !DILocation(line: 407, column: 64, scope: !9014, inlinedAt: !11295)
!11295 = distinct !DILocation(line: 2944, column: 3, scope: !11296)
!11296 = distinct !DILexicalBlock(scope: !11297, file: !3, line: 2940, column: 23)
!11297 = distinct !DILexicalBlock(scope: !11293, file: !3, line: 2940, column: 6)
!11298 = !DILocation(line: 407, column: 84, scope: !9014, inlinedAt: !11295)
!11299 = !DILocation(line: 327, column: 67, scope: !7102, inlinedAt: !11300)
!11300 = distinct !DILocation(line: 2941, column: 3, scope: !11301)
!11301 = distinct !DILexicalBlock(scope: !11302, file: !3, line: 2941, column: 3)
!11302 = distinct !DILexicalBlock(scope: !11303, file: !3, line: 2941, column: 3)
!11303 = distinct !DILexicalBlock(scope: !11304, file: !3, line: 2941, column: 3)
!11304 = distinct !DILexicalBlock(scope: !11305, file: !3, line: 2941, column: 3)
!11305 = distinct !DILexicalBlock(scope: !11296, file: !3, line: 2941, column: 3)
!11306 = !DILocalVariable(name: "tty", arg: 1, scope: !11293, file: !3, line: 2924, type: !233)
!11307 = !DILocation(line: 2924, column: 41, scope: !11293)
!11308 = !DILocalVariable(name: "cinfo", scope: !11293, file: !3, line: 2926, type: !4229)
!11309 = !DILocation(line: 2926, column: 24, scope: !11293)
!11310 = !DILocalVariable(name: "info", scope: !11293, file: !3, line: 2927, type: !134)
!11311 = !DILocation(line: 2927, column: 24, scope: !11293)
!11312 = !DILocation(line: 2927, column: 31, scope: !11293)
!11313 = !DILocation(line: 2927, column: 36, scope: !11293)
!11314 = !DILocalVariable(name: "channel", scope: !11293, file: !3, line: 2928, type: !139)
!11315 = !DILocation(line: 2928, column: 6, scope: !11293)
!11316 = !DILocalVariable(name: "flags", scope: !11293, file: !3, line: 2929, type: !126)
!11317 = !DILocation(line: 2929, column: 16, scope: !11293)
!11318 = !DILocation(line: 2935, column: 28, scope: !11319)
!11319 = distinct !DILexicalBlock(scope: !11293, file: !3, line: 2935, column: 6)
!11320 = !DILocation(line: 2935, column: 34, scope: !11319)
!11321 = !DILocation(line: 2935, column: 39, scope: !11319)
!11322 = !DILocation(line: 2935, column: 6, scope: !11319)
!11323 = !DILocation(line: 2935, column: 6, scope: !11293)
!11324 = !DILocation(line: 2936, column: 3, scope: !11319)
!11325 = !DILocation(line: 2938, column: 10, scope: !11293)
!11326 = !DILocation(line: 2938, column: 16, scope: !11293)
!11327 = !DILocation(line: 2938, column: 8, scope: !11293)
!11328 = !DILocation(line: 2939, column: 12, scope: !11293)
!11329 = !DILocation(line: 2939, column: 18, scope: !11293)
!11330 = !DILocation(line: 2939, column: 25, scope: !11293)
!11331 = !DILocation(line: 2939, column: 32, scope: !11293)
!11332 = !DILocation(line: 2939, column: 23, scope: !11293)
!11333 = !DILocation(line: 2939, column: 10, scope: !11293)
!11334 = !DILocation(line: 2940, column: 15, scope: !11297)
!11335 = !DILocation(line: 2940, column: 7, scope: !11297)
!11336 = !DILocation(line: 2940, column: 6, scope: !11293)
!11337 = !DILocation(line: 2941, column: 3, scope: !11296)
!11338 = !DILocation(line: 2941, column: 3, scope: !11305)
!11339 = !DILocalVariable(name: "__dummy", scope: !11340, file: !3, line: 2941, type: !126)
!11340 = distinct !DILexicalBlock(scope: !11304, file: !3, line: 2941, column: 3)
!11341 = !DILocation(line: 2941, column: 3, scope: !11340)
!11342 = !DILocalVariable(name: "__dummy2", scope: !11340, file: !3, line: 2941, type: !126)
!11343 = !DILocation(line: 2941, column: 3, scope: !11304)
!11344 = !DILocation(line: 2941, column: 3, scope: !11303)
!11345 = !DILocation(line: 2941, column: 3, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11303, file: !3, line: 2941, column: 3)
!11347 = !DILocalVariable(name: "__dummy", scope: !11348, file: !3, line: 2941, type: !126)
!11348 = distinct !DILexicalBlock(scope: !11349, file: !3, line: 2941, column: 3)
!11349 = distinct !DILexicalBlock(scope: !11346, file: !3, line: 2941, column: 3)
!11350 = !DILocation(line: 2941, column: 3, scope: !11348)
!11351 = !DILocalVariable(name: "__dummy2", scope: !11348, file: !3, line: 2941, type: !126)
!11352 = !DILocation(line: 2941, column: 3, scope: !11349)
!11353 = !DILocation(line: 2941, column: 3, scope: !11302)
!11354 = !{i32 -2141389595}
!11355 = !DILocation(line: 2941, column: 3, scope: !11301)
!11356 = !DILocation(line: 329, column: 10, scope: !7102, inlinedAt: !11300)
!11357 = !DILocation(line: 329, column: 16, scope: !7102, inlinedAt: !11300)
!11358 = !DILocation(line: 2942, column: 14, scope: !11296)
!11359 = !DILocation(line: 2942, column: 27, scope: !11296)
!11360 = !DILocation(line: 2942, column: 35, scope: !11296)
!11361 = !DILocation(line: 2942, column: 3, scope: !11296)
!11362 = !DILocation(line: 2943, column: 14, scope: !11296)
!11363 = !DILocation(line: 2943, column: 38, scope: !11296)
!11364 = !DILocation(line: 2943, column: 28, scope: !11296)
!11365 = !DILocation(line: 2943, column: 52, scope: !11296)
!11366 = !DILocation(line: 2943, column: 3, scope: !11296)
!11367 = !DILocation(line: 2944, column: 27, scope: !11296)
!11368 = !DILocation(line: 2944, column: 34, scope: !11296)
!11369 = !DILocation(line: 2944, column: 45, scope: !11296)
!11370 = !DILocation(line: 409, column: 2, scope: !9120, inlinedAt: !11295)
!11371 = !DILocation(line: 409, column: 2, scope: !9125, inlinedAt: !11295)
!11372 = !DILocation(line: 409, column: 2, scope: !9126, inlinedAt: !11295)
!11373 = !DILocation(line: 409, column: 2, scope: !9133, inlinedAt: !11295)
!11374 = !DILocation(line: 409, column: 2, scope: !9136, inlinedAt: !11295)
!11375 = !DILocation(line: 2945, column: 2, scope: !11296)
!11376 = !DILocation(line: 2946, column: 1, scope: !11293)
!11377 = distinct !DISubprogram(name: "cy_hangup", scope: !3, file: !3, line: 2951, type: !3943, scopeLine: 2952, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!11378 = !DILocalVariable(name: "tty", arg: 1, scope: !11377, file: !3, line: 2951, type: !233)
!11379 = !DILocation(line: 2951, column: 42, scope: !11377)
!11380 = !DILocalVariable(name: "info", scope: !11377, file: !3, line: 2953, type: !134)
!11381 = !DILocation(line: 2953, column: 24, scope: !11377)
!11382 = !DILocation(line: 2953, column: 31, scope: !11377)
!11383 = !DILocation(line: 2953, column: 36, scope: !11377)
!11384 = !DILocation(line: 2959, column: 28, scope: !11385)
!11385 = distinct !DILexicalBlock(scope: !11377, file: !3, line: 2959, column: 6)
!11386 = !DILocation(line: 2959, column: 34, scope: !11385)
!11387 = !DILocation(line: 2959, column: 39, scope: !11385)
!11388 = !DILocation(line: 2959, column: 6, scope: !11385)
!11389 = !DILocation(line: 2959, column: 6, scope: !11377)
!11390 = !DILocation(line: 2960, column: 3, scope: !11385)
!11391 = !DILocation(line: 2962, column: 18, scope: !11377)
!11392 = !DILocation(line: 2962, column: 2, scope: !11377)
!11393 = !DILocation(line: 2963, column: 14, scope: !11377)
!11394 = !DILocation(line: 2963, column: 20, scope: !11377)
!11395 = !DILocation(line: 2963, column: 2, scope: !11377)
!11396 = !DILocation(line: 2964, column: 19, scope: !11377)
!11397 = !DILocation(line: 2964, column: 25, scope: !11377)
!11398 = !DILocation(line: 2964, column: 2, scope: !11377)
!11399 = !DILocation(line: 2965, column: 1, scope: !11377)
!11400 = distinct !DISubprogram(name: "cy_break", scope: !3, file: !3, line: 2479, type: !3979, scopeLine: 2480, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!11401 = !DILocation(line: 327, column: 67, scope: !7102, inlinedAt: !11402)
!11402 = distinct !DILocation(line: 2511, column: 6, scope: !11403)
!11403 = distinct !DILexicalBlock(scope: !11404, file: !3, line: 2511, column: 6)
!11404 = distinct !DILexicalBlock(scope: !11405, file: !3, line: 2511, column: 6)
!11405 = distinct !DILexicalBlock(scope: !11406, file: !3, line: 2511, column: 6)
!11406 = distinct !DILexicalBlock(scope: !11407, file: !3, line: 2511, column: 6)
!11407 = distinct !DILexicalBlock(scope: !11408, file: !3, line: 2511, column: 6)
!11408 = distinct !DILexicalBlock(scope: !11409, file: !3, line: 2508, column: 26)
!11409 = distinct !DILexicalBlock(scope: !11410, file: !3, line: 2508, column: 9)
!11410 = distinct !DILexicalBlock(scope: !11411, file: !3, line: 2506, column: 25)
!11411 = distinct !DILexicalBlock(scope: !11412, file: !3, line: 2506, column: 8)
!11412 = distinct !DILexicalBlock(scope: !11413, file: !3, line: 2505, column: 10)
!11413 = distinct !DILexicalBlock(scope: !11414, file: !3, line: 2496, column: 7)
!11414 = distinct !DILexicalBlock(scope: !11415, file: !3, line: 2492, column: 22)
!11415 = distinct !DILexicalBlock(scope: !11400, file: !3, line: 2492, column: 6)
!11416 = !DILocation(line: 407, column: 64, scope: !9014, inlinedAt: !11417)
!11417 = distinct !DILocation(line: 2509, column: 6, scope: !11408)
!11418 = !DILocation(line: 407, column: 84, scope: !9014, inlinedAt: !11417)
!11419 = !DILocation(line: 327, column: 67, scope: !7102, inlinedAt: !11420)
!11420 = distinct !DILocation(line: 2502, column: 6, scope: !11421)
!11421 = distinct !DILexicalBlock(scope: !11422, file: !3, line: 2502, column: 6)
!11422 = distinct !DILexicalBlock(scope: !11423, file: !3, line: 2502, column: 6)
!11423 = distinct !DILexicalBlock(scope: !11424, file: !3, line: 2502, column: 6)
!11424 = distinct !DILexicalBlock(scope: !11425, file: !3, line: 2502, column: 6)
!11425 = distinct !DILexicalBlock(scope: !11426, file: !3, line: 2502, column: 6)
!11426 = distinct !DILexicalBlock(scope: !11427, file: !3, line: 2499, column: 26)
!11427 = distinct !DILexicalBlock(scope: !11428, file: !3, line: 2499, column: 9)
!11428 = distinct !DILexicalBlock(scope: !11429, file: !3, line: 2497, column: 24)
!11429 = distinct !DILexicalBlock(scope: !11430, file: !3, line: 2497, column: 8)
!11430 = distinct !DILexicalBlock(scope: !11413, file: !3, line: 2496, column: 26)
!11431 = !DILocation(line: 407, column: 64, scope: !9014, inlinedAt: !11432)
!11432 = distinct !DILocation(line: 2500, column: 6, scope: !11426)
!11433 = !DILocation(line: 407, column: 84, scope: !9014, inlinedAt: !11432)
!11434 = !DILocation(line: 407, column: 64, scope: !9014, inlinedAt: !11435)
!11435 = distinct !DILocation(line: 2535, column: 2, scope: !11400)
!11436 = !DILocation(line: 407, column: 84, scope: !9014, inlinedAt: !11435)
!11437 = !DILocation(line: 327, column: 67, scope: !7102, inlinedAt: !11438)
!11438 = distinct !DILocation(line: 2491, column: 2, scope: !11439)
!11439 = distinct !DILexicalBlock(scope: !11440, file: !3, line: 2491, column: 2)
!11440 = distinct !DILexicalBlock(scope: !11441, file: !3, line: 2491, column: 2)
!11441 = distinct !DILexicalBlock(scope: !11442, file: !3, line: 2491, column: 2)
!11442 = distinct !DILexicalBlock(scope: !11443, file: !3, line: 2491, column: 2)
!11443 = distinct !DILexicalBlock(scope: !11400, file: !3, line: 2491, column: 2)
!11444 = !DILocalVariable(name: "tty", arg: 1, scope: !11400, file: !3, line: 2479, type: !233)
!11445 = !DILocation(line: 2479, column: 40, scope: !11400)
!11446 = !DILocalVariable(name: "break_state", arg: 2, scope: !11400, file: !3, line: 2479, type: !139)
!11447 = !DILocation(line: 2479, column: 49, scope: !11400)
!11448 = !DILocalVariable(name: "info", scope: !11400, file: !3, line: 2481, type: !134)
!11449 = !DILocation(line: 2481, column: 24, scope: !11400)
!11450 = !DILocation(line: 2481, column: 31, scope: !11400)
!11451 = !DILocation(line: 2481, column: 36, scope: !11400)
!11452 = !DILocalVariable(name: "card", scope: !11400, file: !3, line: 2482, type: !4229)
!11453 = !DILocation(line: 2482, column: 24, scope: !11400)
!11454 = !DILocalVariable(name: "flags", scope: !11400, file: !3, line: 2483, type: !126)
!11455 = !DILocation(line: 2483, column: 16, scope: !11400)
!11456 = !DILocalVariable(name: "retval", scope: !11400, file: !3, line: 2484, type: !139)
!11457 = !DILocation(line: 2484, column: 6, scope: !11400)
!11458 = !DILocation(line: 2486, column: 28, scope: !11459)
!11459 = distinct !DILexicalBlock(scope: !11400, file: !3, line: 2486, column: 6)
!11460 = !DILocation(line: 2486, column: 34, scope: !11459)
!11461 = !DILocation(line: 2486, column: 39, scope: !11459)
!11462 = !DILocation(line: 2486, column: 6, scope: !11459)
!11463 = !DILocation(line: 2486, column: 6, scope: !11400)
!11464 = !DILocation(line: 2487, column: 3, scope: !11459)
!11465 = !DILocation(line: 2489, column: 9, scope: !11400)
!11466 = !DILocation(line: 2489, column: 15, scope: !11400)
!11467 = !DILocation(line: 2489, column: 7, scope: !11400)
!11468 = !DILocation(line: 2491, column: 2, scope: !11400)
!11469 = !DILocation(line: 2491, column: 2, scope: !11443)
!11470 = !DILocalVariable(name: "__dummy", scope: !11471, file: !3, line: 2491, type: !126)
!11471 = distinct !DILexicalBlock(scope: !11442, file: !3, line: 2491, column: 2)
!11472 = !DILocation(line: 2491, column: 2, scope: !11471)
!11473 = !DILocalVariable(name: "__dummy2", scope: !11471, file: !3, line: 2491, type: !126)
!11474 = !DILocation(line: 2491, column: 2, scope: !11442)
!11475 = !DILocation(line: 2491, column: 2, scope: !11441)
!11476 = !DILocation(line: 2491, column: 2, scope: !11477)
!11477 = distinct !DILexicalBlock(scope: !11441, file: !3, line: 2491, column: 2)
!11478 = !DILocalVariable(name: "__dummy", scope: !11479, file: !3, line: 2491, type: !126)
!11479 = distinct !DILexicalBlock(scope: !11480, file: !3, line: 2491, column: 2)
!11480 = distinct !DILexicalBlock(scope: !11477, file: !3, line: 2491, column: 2)
!11481 = !DILocation(line: 2491, column: 2, scope: !11479)
!11482 = !DILocalVariable(name: "__dummy2", scope: !11479, file: !3, line: 2491, type: !126)
!11483 = !DILocation(line: 2491, column: 2, scope: !11480)
!11484 = !DILocation(line: 2491, column: 2, scope: !11440)
!11485 = !{i32 -2141407083}
!11486 = !DILocation(line: 2491, column: 2, scope: !11439)
!11487 = !DILocation(line: 329, column: 10, scope: !7102, inlinedAt: !11438)
!11488 = !DILocation(line: 329, column: 16, scope: !7102, inlinedAt: !11438)
!11489 = !DILocation(line: 2492, column: 15, scope: !11415)
!11490 = !DILocation(line: 2492, column: 7, scope: !11415)
!11491 = !DILocation(line: 2492, column: 6, scope: !11400)
!11492 = !DILocation(line: 2496, column: 7, scope: !11413)
!11493 = !DILocation(line: 2496, column: 19, scope: !11413)
!11494 = !DILocation(line: 2496, column: 7, scope: !11414)
!11495 = !DILocation(line: 2497, column: 9, scope: !11429)
!11496 = !DILocation(line: 2497, column: 15, scope: !11429)
!11497 = !DILocation(line: 2497, column: 8, scope: !11430)
!11498 = !DILocation(line: 2498, column: 5, scope: !11428)
!11499 = !DILocation(line: 2498, column: 11, scope: !11428)
!11500 = !DILocation(line: 2498, column: 19, scope: !11428)
!11501 = !DILocation(line: 2499, column: 10, scope: !11427)
!11502 = !DILocation(line: 2499, column: 16, scope: !11427)
!11503 = !DILocation(line: 2499, column: 9, scope: !11428)
!11504 = !DILocation(line: 2500, column: 30, scope: !11426)
!11505 = !DILocation(line: 2500, column: 36, scope: !11426)
!11506 = !DILocation(line: 2500, column: 47, scope: !11426)
!11507 = !DILocation(line: 409, column: 2, scope: !9120, inlinedAt: !11432)
!11508 = !DILocation(line: 409, column: 2, scope: !9125, inlinedAt: !11432)
!11509 = !DILocation(line: 409, column: 2, scope: !9126, inlinedAt: !11432)
!11510 = !DILocation(line: 409, column: 2, scope: !9133, inlinedAt: !11432)
!11511 = !DILocation(line: 409, column: 2, scope: !9136, inlinedAt: !11432)
!11512 = !DILocation(line: 2501, column: 17, scope: !11426)
!11513 = !DILocation(line: 2501, column: 6, scope: !11426)
!11514 = !DILocation(line: 2502, column: 6, scope: !11426)
!11515 = !DILocation(line: 2502, column: 6, scope: !11425)
!11516 = !DILocalVariable(name: "__dummy", scope: !11517, file: !3, line: 2502, type: !126)
!11517 = distinct !DILexicalBlock(scope: !11424, file: !3, line: 2502, column: 6)
!11518 = !DILocation(line: 2502, column: 6, scope: !11517)
!11519 = !DILocalVariable(name: "__dummy2", scope: !11517, file: !3, line: 2502, type: !126)
!11520 = !DILocation(line: 2502, column: 6, scope: !11424)
!11521 = !DILocation(line: 2502, column: 6, scope: !11423)
!11522 = !DILocation(line: 2502, column: 6, scope: !11523)
!11523 = distinct !DILexicalBlock(scope: !11423, file: !3, line: 2502, column: 6)
!11524 = !DILocalVariable(name: "__dummy", scope: !11525, file: !3, line: 2502, type: !126)
!11525 = distinct !DILexicalBlock(scope: !11526, file: !3, line: 2502, column: 6)
!11526 = distinct !DILexicalBlock(scope: !11523, file: !3, line: 2502, column: 6)
!11527 = !DILocation(line: 2502, column: 6, scope: !11525)
!11528 = !DILocalVariable(name: "__dummy2", scope: !11525, file: !3, line: 2502, type: !126)
!11529 = !DILocation(line: 2502, column: 6, scope: !11526)
!11530 = !DILocation(line: 2502, column: 6, scope: !11422)
!11531 = !{i32 -2141406029}
!11532 = !DILocation(line: 2502, column: 6, scope: !11421)
!11533 = !DILocation(line: 329, column: 10, scope: !7102, inlinedAt: !11420)
!11534 = !DILocation(line: 329, column: 16, scope: !7102, inlinedAt: !11420)
!11535 = !DILocation(line: 2503, column: 5, scope: !11426)
!11536 = !DILocation(line: 2504, column: 4, scope: !11428)
!11537 = !DILocation(line: 2505, column: 3, scope: !11430)
!11538 = !DILocation(line: 2506, column: 9, scope: !11411)
!11539 = !DILocation(line: 2506, column: 15, scope: !11411)
!11540 = !DILocation(line: 2506, column: 8, scope: !11412)
!11541 = !DILocation(line: 2507, column: 5, scope: !11410)
!11542 = !DILocation(line: 2507, column: 11, scope: !11410)
!11543 = !DILocation(line: 2507, column: 20, scope: !11410)
!11544 = !DILocation(line: 2508, column: 10, scope: !11409)
!11545 = !DILocation(line: 2508, column: 16, scope: !11409)
!11546 = !DILocation(line: 2508, column: 9, scope: !11410)
!11547 = !DILocation(line: 2509, column: 30, scope: !11408)
!11548 = !DILocation(line: 2509, column: 36, scope: !11408)
!11549 = !DILocation(line: 2509, column: 47, scope: !11408)
!11550 = !DILocation(line: 409, column: 2, scope: !9120, inlinedAt: !11417)
!11551 = !DILocation(line: 409, column: 2, scope: !9125, inlinedAt: !11417)
!11552 = !DILocation(line: 409, column: 2, scope: !9126, inlinedAt: !11417)
!11553 = !DILocation(line: 409, column: 2, scope: !9133, inlinedAt: !11417)
!11554 = !DILocation(line: 409, column: 2, scope: !9136, inlinedAt: !11417)
!11555 = !DILocation(line: 2510, column: 17, scope: !11408)
!11556 = !DILocation(line: 2510, column: 6, scope: !11408)
!11557 = !DILocation(line: 2511, column: 6, scope: !11408)
!11558 = !DILocation(line: 2511, column: 6, scope: !11407)
!11559 = !DILocalVariable(name: "__dummy", scope: !11560, file: !3, line: 2511, type: !126)
!11560 = distinct !DILexicalBlock(scope: !11406, file: !3, line: 2511, column: 6)
!11561 = !DILocation(line: 2511, column: 6, scope: !11560)
!11562 = !DILocalVariable(name: "__dummy2", scope: !11560, file: !3, line: 2511, type: !126)
!11563 = !DILocation(line: 2511, column: 6, scope: !11406)
!11564 = !DILocation(line: 2511, column: 6, scope: !11405)
!11565 = !DILocation(line: 2511, column: 6, scope: !11566)
!11566 = distinct !DILexicalBlock(scope: !11405, file: !3, line: 2511, column: 6)
!11567 = !DILocalVariable(name: "__dummy", scope: !11568, file: !3, line: 2511, type: !126)
!11568 = distinct !DILexicalBlock(scope: !11569, file: !3, line: 2511, column: 6)
!11569 = distinct !DILexicalBlock(scope: !11566, file: !3, line: 2511, column: 6)
!11570 = !DILocation(line: 2511, column: 6, scope: !11568)
!11571 = !DILocalVariable(name: "__dummy2", scope: !11568, file: !3, line: 2511, type: !126)
!11572 = !DILocation(line: 2511, column: 6, scope: !11569)
!11573 = !DILocation(line: 2511, column: 6, scope: !11404)
!11574 = !{i32 -2141404975}
!11575 = !DILocation(line: 2511, column: 6, scope: !11403)
!11576 = !DILocation(line: 329, column: 10, scope: !7102, inlinedAt: !11402)
!11577 = !DILocation(line: 329, column: 16, scope: !7102, inlinedAt: !11402)
!11578 = !DILocation(line: 2512, column: 5, scope: !11408)
!11579 = !DILocation(line: 2513, column: 4, scope: !11410)
!11580 = !DILocation(line: 2515, column: 2, scope: !11414)
!11581 = !DILocation(line: 2516, column: 7, scope: !11582)
!11582 = distinct !DILexicalBlock(scope: !11583, file: !3, line: 2516, column: 7)
!11583 = distinct !DILexicalBlock(scope: !11415, file: !3, line: 2515, column: 9)
!11584 = !DILocation(line: 2516, column: 19, scope: !11582)
!11585 = !DILocation(line: 2516, column: 7, scope: !11583)
!11586 = !DILocation(line: 2517, column: 27, scope: !11587)
!11587 = distinct !DILexicalBlock(scope: !11582, file: !3, line: 2516, column: 26)
!11588 = !DILocation(line: 2518, column: 5, scope: !11587)
!11589 = !DILocation(line: 2518, column: 11, scope: !11587)
!11590 = !DILocation(line: 2518, column: 18, scope: !11587)
!11591 = !DILocation(line: 2518, column: 24, scope: !11587)
!11592 = !DILocation(line: 2518, column: 16, scope: !11587)
!11593 = !DILocation(line: 2517, column: 13, scope: !11587)
!11594 = !DILocation(line: 2517, column: 11, scope: !11587)
!11595 = !DILocation(line: 2520, column: 8, scope: !11596)
!11596 = distinct !DILexicalBlock(scope: !11587, file: !3, line: 2520, column: 8)
!11597 = !DILocation(line: 2520, column: 15, scope: !11596)
!11598 = !DILocation(line: 2520, column: 8, scope: !11587)
!11599 = !DILocation(line: 2522, column: 25, scope: !11600)
!11600 = distinct !DILexicalBlock(scope: !11596, file: !3, line: 2520, column: 21)
!11601 = !DILocation(line: 2522, column: 31, scope: !11600)
!11602 = !DILocation(line: 2522, column: 37, scope: !11600)
!11603 = !DILocation(line: 2521, column: 5, scope: !11600)
!11604 = !DILocation(line: 2523, column: 4, scope: !11600)
!11605 = !DILocation(line: 2524, column: 3, scope: !11587)
!11606 = !DILocation(line: 2525, column: 27, scope: !11607)
!11607 = distinct !DILexicalBlock(scope: !11582, file: !3, line: 2524, column: 10)
!11608 = !DILocation(line: 2526, column: 5, scope: !11607)
!11609 = !DILocation(line: 2526, column: 11, scope: !11607)
!11610 = !DILocation(line: 2526, column: 18, scope: !11607)
!11611 = !DILocation(line: 2526, column: 24, scope: !11607)
!11612 = !DILocation(line: 2526, column: 16, scope: !11607)
!11613 = !DILocation(line: 2525, column: 13, scope: !11607)
!11614 = !DILocation(line: 2525, column: 11, scope: !11607)
!11615 = !DILocation(line: 2528, column: 8, scope: !11616)
!11616 = distinct !DILexicalBlock(scope: !11607, file: !3, line: 2528, column: 8)
!11617 = !DILocation(line: 2528, column: 15, scope: !11616)
!11618 = !DILocation(line: 2528, column: 8, scope: !11607)
!11619 = !DILocation(line: 2530, column: 28, scope: !11620)
!11620 = distinct !DILexicalBlock(scope: !11616, file: !3, line: 2528, column: 21)
!11621 = !DILocation(line: 2530, column: 34, scope: !11620)
!11622 = !DILocation(line: 2531, column: 6, scope: !11620)
!11623 = !DILocation(line: 2529, column: 5, scope: !11620)
!11624 = !DILocation(line: 2532, column: 4, scope: !11620)
!11625 = !DILocation(line: 2535, column: 26, scope: !11400)
!11626 = !DILocation(line: 2535, column: 32, scope: !11400)
!11627 = !DILocation(line: 2535, column: 43, scope: !11400)
!11628 = !DILocation(line: 409, column: 2, scope: !9120, inlinedAt: !11435)
!11629 = !DILocation(line: 409, column: 2, scope: !9125, inlinedAt: !11435)
!11630 = !DILocation(line: 409, column: 2, scope: !9126, inlinedAt: !11435)
!11631 = !DILocation(line: 409, column: 2, scope: !9133, inlinedAt: !11435)
!11632 = !DILocation(line: 409, column: 2, scope: !9136, inlinedAt: !11435)
!11633 = !DILocation(line: 2536, column: 9, scope: !11400)
!11634 = !DILocation(line: 2536, column: 2, scope: !11400)
!11635 = !DILocation(line: 2537, column: 1, scope: !11400)
!11636 = distinct !DISubprogram(name: "cy_flush_buffer", scope: !3, file: !3, line: 1659, type: !3943, scopeLine: 1660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!11637 = !DILocation(line: 327, column: 67, scope: !7102, inlinedAt: !11638)
!11638 = distinct !DILocation(line: 1682, column: 3, scope: !11639)
!11639 = distinct !DILexicalBlock(scope: !11640, file: !3, line: 1682, column: 3)
!11640 = distinct !DILexicalBlock(scope: !11641, file: !3, line: 1682, column: 3)
!11641 = distinct !DILexicalBlock(scope: !11642, file: !3, line: 1682, column: 3)
!11642 = distinct !DILexicalBlock(scope: !11643, file: !3, line: 1682, column: 3)
!11643 = distinct !DILexicalBlock(scope: !11644, file: !3, line: 1682, column: 3)
!11644 = distinct !DILexicalBlock(scope: !11645, file: !3, line: 1680, column: 21)
!11645 = distinct !DILexicalBlock(scope: !11636, file: !3, line: 1680, column: 6)
!11646 = !DILocation(line: 407, column: 64, scope: !9014, inlinedAt: !11647)
!11647 = distinct !DILocation(line: 1678, column: 2, scope: !11636)
!11648 = !DILocation(line: 407, column: 84, scope: !9014, inlinedAt: !11647)
!11649 = !DILocation(line: 407, column: 64, scope: !9014, inlinedAt: !11650)
!11650 = distinct !DILocation(line: 1688, column: 3, scope: !11644)
!11651 = !DILocation(line: 407, column: 84, scope: !9014, inlinedAt: !11650)
!11652 = !DILocation(line: 327, column: 67, scope: !7102, inlinedAt: !11653)
!11653 = distinct !DILocation(line: 1676, column: 2, scope: !11654)
!11654 = distinct !DILexicalBlock(scope: !11655, file: !3, line: 1676, column: 2)
!11655 = distinct !DILexicalBlock(scope: !11656, file: !3, line: 1676, column: 2)
!11656 = distinct !DILexicalBlock(scope: !11657, file: !3, line: 1676, column: 2)
!11657 = distinct !DILexicalBlock(scope: !11658, file: !3, line: 1676, column: 2)
!11658 = distinct !DILexicalBlock(scope: !11636, file: !3, line: 1676, column: 2)
!11659 = !DILocalVariable(name: "tty", arg: 1, scope: !11636, file: !3, line: 1659, type: !233)
!11660 = !DILocation(line: 1659, column: 48, scope: !11636)
!11661 = !DILocalVariable(name: "info", scope: !11636, file: !3, line: 1661, type: !134)
!11662 = !DILocation(line: 1661, column: 24, scope: !11636)
!11663 = !DILocation(line: 1661, column: 31, scope: !11636)
!11664 = !DILocation(line: 1661, column: 36, scope: !11636)
!11665 = !DILocalVariable(name: "card", scope: !11636, file: !3, line: 1662, type: !4229)
!11666 = !DILocation(line: 1662, column: 24, scope: !11636)
!11667 = !DILocalVariable(name: "channel", scope: !11636, file: !3, line: 1663, type: !139)
!11668 = !DILocation(line: 1663, column: 6, scope: !11636)
!11669 = !DILocalVariable(name: "retval", scope: !11636, file: !3, line: 1663, type: !139)
!11670 = !DILocation(line: 1663, column: 15, scope: !11636)
!11671 = !DILocalVariable(name: "flags", scope: !11636, file: !3, line: 1664, type: !126)
!11672 = !DILocation(line: 1664, column: 16, scope: !11636)
!11673 = !DILocation(line: 1670, column: 28, scope: !11674)
!11674 = distinct !DILexicalBlock(scope: !11636, file: !3, line: 1670, column: 6)
!11675 = !DILocation(line: 1670, column: 34, scope: !11674)
!11676 = !DILocation(line: 1670, column: 39, scope: !11674)
!11677 = !DILocation(line: 1670, column: 6, scope: !11674)
!11678 = !DILocation(line: 1670, column: 6, scope: !11636)
!11679 = !DILocation(line: 1671, column: 3, scope: !11674)
!11680 = !DILocation(line: 1673, column: 9, scope: !11636)
!11681 = !DILocation(line: 1673, column: 15, scope: !11636)
!11682 = !DILocation(line: 1673, column: 7, scope: !11636)
!11683 = !DILocation(line: 1674, column: 12, scope: !11636)
!11684 = !DILocation(line: 1674, column: 18, scope: !11636)
!11685 = !DILocation(line: 1674, column: 25, scope: !11636)
!11686 = !DILocation(line: 1674, column: 31, scope: !11636)
!11687 = !DILocation(line: 1674, column: 23, scope: !11636)
!11688 = !DILocation(line: 1674, column: 10, scope: !11636)
!11689 = !DILocation(line: 1676, column: 2, scope: !11636)
!11690 = !DILocation(line: 1676, column: 2, scope: !11658)
!11691 = !DILocalVariable(name: "__dummy", scope: !11692, file: !3, line: 1676, type: !126)
!11692 = distinct !DILexicalBlock(scope: !11657, file: !3, line: 1676, column: 2)
!11693 = !DILocation(line: 1676, column: 2, scope: !11692)
!11694 = !DILocalVariable(name: "__dummy2", scope: !11692, file: !3, line: 1676, type: !126)
!11695 = !DILocation(line: 1676, column: 2, scope: !11657)
!11696 = !DILocation(line: 1676, column: 2, scope: !11656)
!11697 = !DILocation(line: 1676, column: 2, scope: !11698)
!11698 = distinct !DILexicalBlock(scope: !11656, file: !3, line: 1676, column: 2)
!11699 = !DILocalVariable(name: "__dummy", scope: !11700, file: !3, line: 1676, type: !126)
!11700 = distinct !DILexicalBlock(scope: !11701, file: !3, line: 1676, column: 2)
!11701 = distinct !DILexicalBlock(scope: !11698, file: !3, line: 1676, column: 2)
!11702 = !DILocation(line: 1676, column: 2, scope: !11700)
!11703 = !DILocalVariable(name: "__dummy2", scope: !11700, file: !3, line: 1676, type: !126)
!11704 = !DILocation(line: 1676, column: 2, scope: !11701)
!11705 = !DILocation(line: 1676, column: 2, scope: !11655)
!11706 = !{i32 -2141433126}
!11707 = !DILocation(line: 1676, column: 2, scope: !11654)
!11708 = !DILocation(line: 329, column: 10, scope: !7102, inlinedAt: !11653)
!11709 = !DILocation(line: 329, column: 16, scope: !7102, inlinedAt: !11653)
!11710 = !DILocation(line: 1677, column: 37, scope: !11636)
!11711 = !DILocation(line: 1677, column: 43, scope: !11636)
!11712 = !DILocation(line: 1677, column: 53, scope: !11636)
!11713 = !DILocation(line: 1677, column: 19, scope: !11636)
!11714 = !DILocation(line: 1677, column: 25, scope: !11636)
!11715 = !DILocation(line: 1677, column: 35, scope: !11636)
!11716 = !DILocation(line: 1677, column: 2, scope: !11636)
!11717 = !DILocation(line: 1677, column: 8, scope: !11636)
!11718 = !DILocation(line: 1677, column: 17, scope: !11636)
!11719 = !DILocation(line: 1678, column: 26, scope: !11636)
!11720 = !DILocation(line: 1678, column: 32, scope: !11636)
!11721 = !DILocation(line: 1678, column: 43, scope: !11636)
!11722 = !DILocation(line: 409, column: 2, scope: !9120, inlinedAt: !11647)
!11723 = !DILocation(line: 409, column: 2, scope: !9125, inlinedAt: !11647)
!11724 = !DILocation(line: 409, column: 2, scope: !9126, inlinedAt: !11647)
!11725 = !DILocation(line: 409, column: 2, scope: !9133, inlinedAt: !11647)
!11726 = !DILocation(line: 409, column: 2, scope: !9136, inlinedAt: !11647)
!11727 = !DILocation(line: 1680, column: 14, scope: !11645)
!11728 = !DILocation(line: 1680, column: 6, scope: !11645)
!11729 = !DILocation(line: 1680, column: 6, scope: !11636)
!11730 = !DILocation(line: 1682, column: 3, scope: !11644)
!11731 = !DILocation(line: 1682, column: 3, scope: !11643)
!11732 = !DILocalVariable(name: "__dummy", scope: !11733, file: !3, line: 1682, type: !126)
!11733 = distinct !DILexicalBlock(scope: !11642, file: !3, line: 1682, column: 3)
!11734 = !DILocation(line: 1682, column: 3, scope: !11733)
!11735 = !DILocalVariable(name: "__dummy2", scope: !11733, file: !3, line: 1682, type: !126)
!11736 = !DILocation(line: 1682, column: 3, scope: !11642)
!11737 = !DILocation(line: 1682, column: 3, scope: !11641)
!11738 = !DILocation(line: 1682, column: 3, scope: !11739)
!11739 = distinct !DILexicalBlock(scope: !11641, file: !3, line: 1682, column: 3)
!11740 = !DILocalVariable(name: "__dummy", scope: !11741, file: !3, line: 1682, type: !126)
!11741 = distinct !DILexicalBlock(scope: !11742, file: !3, line: 1682, column: 3)
!11742 = distinct !DILexicalBlock(scope: !11739, file: !3, line: 1682, column: 3)
!11743 = !DILocation(line: 1682, column: 3, scope: !11741)
!11744 = !DILocalVariable(name: "__dummy2", scope: !11741, file: !3, line: 1682, type: !126)
!11745 = !DILocation(line: 1682, column: 3, scope: !11742)
!11746 = !DILocation(line: 1682, column: 3, scope: !11640)
!11747 = !{i32 -2141432072}
!11748 = !DILocation(line: 1682, column: 3, scope: !11639)
!11749 = !DILocation(line: 329, column: 10, scope: !7102, inlinedAt: !11638)
!11750 = !DILocation(line: 329, column: 16, scope: !7102, inlinedAt: !11638)
!11751 = !DILocation(line: 1683, column: 26, scope: !11644)
!11752 = !DILocation(line: 1683, column: 32, scope: !11644)
!11753 = !DILocation(line: 1683, column: 12, scope: !11644)
!11754 = !DILocation(line: 1683, column: 10, scope: !11644)
!11755 = !DILocation(line: 1684, column: 7, scope: !11756)
!11756 = distinct !DILexicalBlock(scope: !11644, file: !3, line: 1684, column: 7)
!11757 = !DILocation(line: 1684, column: 14, scope: !11756)
!11758 = !DILocation(line: 1684, column: 7, scope: !11644)
!11759 = !DILocation(line: 1686, column: 17, scope: !11760)
!11760 = distinct !DILexicalBlock(scope: !11756, file: !3, line: 1684, column: 20)
!11761 = !DILocation(line: 1686, column: 23, scope: !11760)
!11762 = !DILocation(line: 1686, column: 29, scope: !11760)
!11763 = !DILocation(line: 1685, column: 4, scope: !11760)
!11764 = !DILocation(line: 1687, column: 3, scope: !11760)
!11765 = !DILocation(line: 1688, column: 27, scope: !11644)
!11766 = !DILocation(line: 1688, column: 33, scope: !11644)
!11767 = !DILocation(line: 1688, column: 44, scope: !11644)
!11768 = !DILocation(line: 409, column: 2, scope: !9120, inlinedAt: !11650)
!11769 = !DILocation(line: 409, column: 2, scope: !9125, inlinedAt: !11650)
!11770 = !DILocation(line: 409, column: 2, scope: !9126, inlinedAt: !11650)
!11771 = !DILocation(line: 409, column: 2, scope: !9133, inlinedAt: !11650)
!11772 = !DILocation(line: 409, column: 2, scope: !9136, inlinedAt: !11650)
!11773 = !DILocation(line: 1689, column: 2, scope: !11644)
!11774 = !DILocation(line: 1690, column: 13, scope: !11636)
!11775 = !DILocation(line: 1690, column: 2, scope: !11636)
!11776 = !DILocation(line: 1691, column: 1, scope: !11636)
!11777 = distinct !DISubprogram(name: "cy_tiocmget", scope: !3, file: !3, line: 2369, type: !3957, scopeLine: 2370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!11778 = !DILocation(line: 407, column: 64, scope: !9014, inlinedAt: !11779)
!11779 = distinct !DILocation(line: 2389, column: 3, scope: !11780)
!11780 = distinct !DILexicalBlock(scope: !11781, file: !3, line: 2380, column: 22)
!11781 = distinct !DILexicalBlock(scope: !11777, file: !3, line: 2380, column: 6)
!11782 = !DILocation(line: 407, column: 84, scope: !9014, inlinedAt: !11779)
!11783 = !DILocation(line: 327, column: 67, scope: !7102, inlinedAt: !11784)
!11784 = distinct !DILocation(line: 2385, column: 3, scope: !11785)
!11785 = distinct !DILexicalBlock(scope: !11786, file: !3, line: 2385, column: 3)
!11786 = distinct !DILexicalBlock(scope: !11787, file: !3, line: 2385, column: 3)
!11787 = distinct !DILexicalBlock(scope: !11788, file: !3, line: 2385, column: 3)
!11788 = distinct !DILexicalBlock(scope: !11789, file: !3, line: 2385, column: 3)
!11789 = distinct !DILexicalBlock(scope: !11780, file: !3, line: 2385, column: 3)
!11790 = !DILocalVariable(name: "tty", arg: 1, scope: !11777, file: !3, line: 2369, type: !233)
!11791 = !DILocation(line: 2369, column: 43, scope: !11777)
!11792 = !DILocalVariable(name: "info", scope: !11777, file: !3, line: 2371, type: !134)
!11793 = !DILocation(line: 2371, column: 24, scope: !11777)
!11794 = !DILocation(line: 2371, column: 31, scope: !11777)
!11795 = !DILocation(line: 2371, column: 36, scope: !11777)
!11796 = !DILocalVariable(name: "card", scope: !11777, file: !3, line: 2372, type: !4229)
!11797 = !DILocation(line: 2372, column: 24, scope: !11777)
!11798 = !DILocalVariable(name: "result", scope: !11777, file: !3, line: 2373, type: !139)
!11799 = !DILocation(line: 2373, column: 6, scope: !11777)
!11800 = !DILocation(line: 2375, column: 28, scope: !11801)
!11801 = distinct !DILexicalBlock(scope: !11777, file: !3, line: 2375, column: 6)
!11802 = !DILocation(line: 2375, column: 34, scope: !11801)
!11803 = !DILocation(line: 2375, column: 39, scope: !11801)
!11804 = !DILocation(line: 2375, column: 6, scope: !11801)
!11805 = !DILocation(line: 2375, column: 6, scope: !11777)
!11806 = !DILocation(line: 2376, column: 3, scope: !11801)
!11807 = !DILocation(line: 2378, column: 9, scope: !11777)
!11808 = !DILocation(line: 2378, column: 15, scope: !11777)
!11809 = !DILocation(line: 2378, column: 7, scope: !11777)
!11810 = !DILocation(line: 2380, column: 15, scope: !11781)
!11811 = !DILocation(line: 2380, column: 7, scope: !11781)
!11812 = !DILocation(line: 2380, column: 6, scope: !11777)
!11813 = !DILocalVariable(name: "flags", scope: !11780, file: !3, line: 2381, type: !126)
!11814 = !DILocation(line: 2381, column: 17, scope: !11780)
!11815 = !DILocalVariable(name: "channel", scope: !11780, file: !3, line: 2382, type: !139)
!11816 = !DILocation(line: 2382, column: 7, scope: !11780)
!11817 = !DILocation(line: 2382, column: 17, scope: !11780)
!11818 = !DILocation(line: 2382, column: 23, scope: !11780)
!11819 = !DILocation(line: 2382, column: 30, scope: !11780)
!11820 = !DILocation(line: 2382, column: 36, scope: !11780)
!11821 = !DILocation(line: 2382, column: 28, scope: !11780)
!11822 = !DILocalVariable(name: "status", scope: !11780, file: !3, line: 2383, type: !1375)
!11823 = !DILocation(line: 2383, column: 6, scope: !11780)
!11824 = !DILocation(line: 2385, column: 3, scope: !11780)
!11825 = !DILocation(line: 2385, column: 3, scope: !11789)
!11826 = !DILocalVariable(name: "__dummy", scope: !11827, file: !3, line: 2385, type: !126)
!11827 = distinct !DILexicalBlock(scope: !11788, file: !3, line: 2385, column: 3)
!11828 = !DILocation(line: 2385, column: 3, scope: !11827)
!11829 = !DILocalVariable(name: "__dummy2", scope: !11827, file: !3, line: 2385, type: !126)
!11830 = !DILocation(line: 2385, column: 3, scope: !11788)
!11831 = !DILocation(line: 2385, column: 3, scope: !11787)
!11832 = !DILocation(line: 2385, column: 3, scope: !11833)
!11833 = distinct !DILexicalBlock(scope: !11787, file: !3, line: 2385, column: 3)
!11834 = !DILocalVariable(name: "__dummy", scope: !11835, file: !3, line: 2385, type: !126)
!11835 = distinct !DILexicalBlock(scope: !11836, file: !3, line: 2385, column: 3)
!11836 = distinct !DILexicalBlock(scope: !11833, file: !3, line: 2385, column: 3)
!11837 = !DILocation(line: 2385, column: 3, scope: !11835)
!11838 = !DILocalVariable(name: "__dummy2", scope: !11835, file: !3, line: 2385, type: !126)
!11839 = !DILocation(line: 2385, column: 3, scope: !11836)
!11840 = !DILocation(line: 2385, column: 3, scope: !11786)
!11841 = !{i32 -2141410706}
!11842 = !DILocation(line: 2385, column: 3, scope: !11785)
!11843 = !DILocation(line: 329, column: 10, scope: !7102, inlinedAt: !11784)
!11844 = !DILocation(line: 329, column: 16, scope: !7102, inlinedAt: !11784)
!11845 = !DILocation(line: 2386, column: 14, scope: !11780)
!11846 = !DILocation(line: 2386, column: 27, scope: !11780)
!11847 = !DILocation(line: 2386, column: 35, scope: !11780)
!11848 = !DILocation(line: 2386, column: 3, scope: !11780)
!11849 = !DILocation(line: 2387, column: 22, scope: !11780)
!11850 = !DILocation(line: 2387, column: 12, scope: !11780)
!11851 = !DILocation(line: 2387, column: 10, scope: !11780)
!11852 = !DILocation(line: 2388, column: 23, scope: !11780)
!11853 = !DILocation(line: 2388, column: 13, scope: !11780)
!11854 = !DILocation(line: 2388, column: 10, scope: !11780)
!11855 = !DILocation(line: 2389, column: 27, scope: !11780)
!11856 = !DILocation(line: 2389, column: 33, scope: !11780)
!11857 = !DILocation(line: 2389, column: 44, scope: !11780)
!11858 = !DILocation(line: 409, column: 2, scope: !9120, inlinedAt: !11779)
!11859 = !DILocation(line: 409, column: 2, scope: !9125, inlinedAt: !11779)
!11860 = !DILocation(line: 409, column: 2, scope: !9126, inlinedAt: !11779)
!11861 = !DILocation(line: 409, column: 2, scope: !9133, inlinedAt: !11779)
!11862 = !DILocation(line: 409, column: 2, scope: !9136, inlinedAt: !11779)
!11863 = !DILocation(line: 2391, column: 7, scope: !11864)
!11864 = distinct !DILexicalBlock(scope: !11780, file: !3, line: 2391, column: 7)
!11865 = !DILocation(line: 2391, column: 13, scope: !11864)
!11866 = !DILocation(line: 2391, column: 7, scope: !11780)
!11867 = !DILocation(line: 2392, column: 15, scope: !11868)
!11868 = distinct !DILexicalBlock(scope: !11864, file: !3, line: 2391, column: 25)
!11869 = !DILocation(line: 2392, column: 22, scope: !11868)
!11870 = !DILocation(line: 2392, column: 14, scope: !11868)
!11871 = !DILocation(line: 2393, column: 7, scope: !11868)
!11872 = !DILocation(line: 2393, column: 14, scope: !11868)
!11873 = !DILocation(line: 2393, column: 6, scope: !11868)
!11874 = !DILocation(line: 2392, column: 48, scope: !11868)
!11875 = !DILocation(line: 2392, column: 11, scope: !11868)
!11876 = !DILocation(line: 2394, column: 3, scope: !11868)
!11877 = !DILocation(line: 2395, column: 15, scope: !11878)
!11878 = distinct !DILexicalBlock(scope: !11864, file: !3, line: 2394, column: 10)
!11879 = !DILocation(line: 2395, column: 22, scope: !11878)
!11880 = !DILocation(line: 2395, column: 14, scope: !11878)
!11881 = !DILocation(line: 2396, column: 7, scope: !11878)
!11882 = !DILocation(line: 2396, column: 14, scope: !11878)
!11883 = !DILocation(line: 2396, column: 6, scope: !11878)
!11884 = !DILocation(line: 2395, column: 48, scope: !11878)
!11885 = !DILocation(line: 2395, column: 11, scope: !11878)
!11886 = !DILocation(line: 2398, column: 15, scope: !11780)
!11887 = !DILocation(line: 2398, column: 22, scope: !11780)
!11888 = !DILocation(line: 2398, column: 14, scope: !11780)
!11889 = !DILocation(line: 2399, column: 6, scope: !11780)
!11890 = !DILocation(line: 2399, column: 13, scope: !11780)
!11891 = !DILocation(line: 2399, column: 5, scope: !11780)
!11892 = !DILocation(line: 2398, column: 48, scope: !11780)
!11893 = !DILocation(line: 2400, column: 6, scope: !11780)
!11894 = !DILocation(line: 2400, column: 13, scope: !11780)
!11895 = !DILocation(line: 2400, column: 5, scope: !11780)
!11896 = !DILocation(line: 2399, column: 38, scope: !11780)
!11897 = !DILocation(line: 2401, column: 6, scope: !11780)
!11898 = !DILocation(line: 2401, column: 13, scope: !11780)
!11899 = !DILocation(line: 2401, column: 5, scope: !11780)
!11900 = !DILocation(line: 2400, column: 39, scope: !11780)
!11901 = !DILocation(line: 2398, column: 10, scope: !11780)
!11902 = !DILocation(line: 2402, column: 2, scope: !11780)
!11903 = !DILocalVariable(name: "lstatus", scope: !11904, file: !3, line: 2403, type: !426)
!11904 = distinct !DILexicalBlock(scope: !11781, file: !3, line: 2402, column: 9)
!11905 = !DILocation(line: 2403, column: 7, scope: !11904)
!11906 = !DILocation(line: 2405, column: 22, scope: !11907)
!11907 = distinct !DILexicalBlock(scope: !11904, file: !3, line: 2405, column: 7)
!11908 = !DILocation(line: 2405, column: 8, scope: !11907)
!11909 = !DILocation(line: 2405, column: 7, scope: !11904)
!11910 = !DILocation(line: 2406, column: 11, scope: !11911)
!11911 = distinct !DILexicalBlock(scope: !11907, file: !3, line: 2405, column: 29)
!11912 = !DILocation(line: 2407, column: 4, scope: !11911)
!11913 = !DILocation(line: 2410, column: 20, scope: !11904)
!11914 = !DILocation(line: 2410, column: 26, scope: !11904)
!11915 = !DILocation(line: 2410, column: 28, scope: !11904)
!11916 = !DILocation(line: 2410, column: 32, scope: !11904)
!11917 = !DILocation(line: 2410, column: 41, scope: !11904)
!11918 = !DILocation(line: 2410, column: 19, scope: !11904)
!11919 = !DILocation(line: 2410, column: 13, scope: !11904)
!11920 = !DILocation(line: 2410, column: 11, scope: !11904)
!11921 = !DILocation(line: 2411, column: 14, scope: !11904)
!11922 = !DILocation(line: 2411, column: 22, scope: !11904)
!11923 = !DILocation(line: 2411, column: 13, scope: !11904)
!11924 = !DILocation(line: 2412, column: 6, scope: !11904)
!11925 = !DILocation(line: 2412, column: 14, scope: !11904)
!11926 = !DILocation(line: 2412, column: 5, scope: !11904)
!11927 = !DILocation(line: 2411, column: 51, scope: !11904)
!11928 = !DILocation(line: 2413, column: 6, scope: !11904)
!11929 = !DILocation(line: 2413, column: 14, scope: !11904)
!11930 = !DILocation(line: 2413, column: 5, scope: !11904)
!11931 = !DILocation(line: 2412, column: 43, scope: !11904)
!11932 = !DILocation(line: 2414, column: 6, scope: !11904)
!11933 = !DILocation(line: 2414, column: 14, scope: !11904)
!11934 = !DILocation(line: 2414, column: 5, scope: !11904)
!11935 = !DILocation(line: 2413, column: 43, scope: !11904)
!11936 = !DILocation(line: 2415, column: 6, scope: !11904)
!11937 = !DILocation(line: 2415, column: 14, scope: !11904)
!11938 = !DILocation(line: 2415, column: 5, scope: !11904)
!11939 = !DILocation(line: 2414, column: 42, scope: !11904)
!11940 = !DILocation(line: 2416, column: 6, scope: !11904)
!11941 = !DILocation(line: 2416, column: 14, scope: !11904)
!11942 = !DILocation(line: 2416, column: 5, scope: !11904)
!11943 = !DILocation(line: 2415, column: 43, scope: !11904)
!11944 = !DILocation(line: 2411, column: 10, scope: !11904)
!11945 = !DILocation(line: 2380, column: 19, scope: !11781)
!11946 = !DILabel(scope: !11777, name: "end", file: !3, line: 2418)
!11947 = !DILocation(line: 2418, column: 1, scope: !11777)
!11948 = !DILocation(line: 2419, column: 9, scope: !11777)
!11949 = !DILocation(line: 2419, column: 2, scope: !11777)
!11950 = !DILocation(line: 2420, column: 1, scope: !11777)
!11951 = distinct !DISubprogram(name: "cy_tiocmset", scope: !3, file: !3, line: 2423, type: !3994, scopeLine: 2425, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!11952 = !DILocation(line: 327, column: 67, scope: !7102, inlinedAt: !11953)
!11953 = distinct !DILocation(line: 2446, column: 3, scope: !11954)
!11954 = distinct !DILexicalBlock(scope: !11955, file: !3, line: 2446, column: 3)
!11955 = distinct !DILexicalBlock(scope: !11956, file: !3, line: 2446, column: 3)
!11956 = distinct !DILexicalBlock(scope: !11957, file: !3, line: 2446, column: 3)
!11957 = distinct !DILexicalBlock(scope: !11958, file: !3, line: 2446, column: 3)
!11958 = distinct !DILexicalBlock(scope: !11959, file: !3, line: 2446, column: 3)
!11959 = distinct !DILexicalBlock(scope: !11960, file: !3, line: 2438, column: 9)
!11960 = distinct !DILexicalBlock(scope: !11951, file: !3, line: 2434, column: 6)
!11961 = !DILocation(line: 407, column: 64, scope: !9014, inlinedAt: !11962)
!11962 = distinct !DILocation(line: 2437, column: 3, scope: !11963)
!11963 = distinct !DILexicalBlock(scope: !11960, file: !3, line: 2434, column: 22)
!11964 = !DILocation(line: 407, column: 84, scope: !9014, inlinedAt: !11962)
!11965 = !DILocation(line: 407, column: 64, scope: !9014, inlinedAt: !11966)
!11966 = distinct !DILocation(line: 2467, column: 3, scope: !11959)
!11967 = !DILocation(line: 407, column: 84, scope: !9014, inlinedAt: !11966)
!11968 = !DILocation(line: 327, column: 67, scope: !7102, inlinedAt: !11969)
!11969 = distinct !DILocation(line: 2435, column: 3, scope: !11970)
!11970 = distinct !DILexicalBlock(scope: !11971, file: !3, line: 2435, column: 3)
!11971 = distinct !DILexicalBlock(scope: !11972, file: !3, line: 2435, column: 3)
!11972 = distinct !DILexicalBlock(scope: !11973, file: !3, line: 2435, column: 3)
!11973 = distinct !DILexicalBlock(scope: !11974, file: !3, line: 2435, column: 3)
!11974 = distinct !DILexicalBlock(scope: !11963, file: !3, line: 2435, column: 3)
!11975 = !DILocalVariable(name: "tty", arg: 1, scope: !11951, file: !3, line: 2423, type: !233)
!11976 = !DILocation(line: 2423, column: 32, scope: !11951)
!11977 = !DILocalVariable(name: "set", arg: 2, scope: !11951, file: !3, line: 2424, type: !7)
!11978 = !DILocation(line: 2424, column: 16, scope: !11951)
!11979 = !DILocalVariable(name: "clear", arg: 3, scope: !11951, file: !3, line: 2424, type: !7)
!11980 = !DILocation(line: 2424, column: 34, scope: !11951)
!11981 = !DILocalVariable(name: "info", scope: !11951, file: !3, line: 2426, type: !134)
!11982 = !DILocation(line: 2426, column: 24, scope: !11951)
!11983 = !DILocation(line: 2426, column: 31, scope: !11951)
!11984 = !DILocation(line: 2426, column: 36, scope: !11951)
!11985 = !DILocalVariable(name: "card", scope: !11951, file: !3, line: 2427, type: !4229)
!11986 = !DILocation(line: 2427, column: 24, scope: !11951)
!11987 = !DILocalVariable(name: "flags", scope: !11951, file: !3, line: 2428, type: !126)
!11988 = !DILocation(line: 2428, column: 16, scope: !11951)
!11989 = !DILocation(line: 2430, column: 28, scope: !11990)
!11990 = distinct !DILexicalBlock(scope: !11951, file: !3, line: 2430, column: 6)
!11991 = !DILocation(line: 2430, column: 34, scope: !11990)
!11992 = !DILocation(line: 2430, column: 39, scope: !11990)
!11993 = !DILocation(line: 2430, column: 6, scope: !11990)
!11994 = !DILocation(line: 2430, column: 6, scope: !11951)
!11995 = !DILocation(line: 2431, column: 3, scope: !11990)
!11996 = !DILocation(line: 2433, column: 9, scope: !11951)
!11997 = !DILocation(line: 2433, column: 15, scope: !11951)
!11998 = !DILocation(line: 2433, column: 7, scope: !11951)
!11999 = !DILocation(line: 2434, column: 15, scope: !11960)
!12000 = !DILocation(line: 2434, column: 7, scope: !11960)
!12001 = !DILocation(line: 2434, column: 6, scope: !11951)
!12002 = !DILocation(line: 2435, column: 3, scope: !11963)
!12003 = !DILocation(line: 2435, column: 3, scope: !11974)
!12004 = !DILocalVariable(name: "__dummy", scope: !12005, file: !3, line: 2435, type: !126)
!12005 = distinct !DILexicalBlock(scope: !11973, file: !3, line: 2435, column: 3)
!12006 = !DILocation(line: 2435, column: 3, scope: !12005)
!12007 = !DILocalVariable(name: "__dummy2", scope: !12005, file: !3, line: 2435, type: !126)
!12008 = !DILocation(line: 2435, column: 3, scope: !11973)
!12009 = !DILocation(line: 2435, column: 3, scope: !11972)
!12010 = !DILocation(line: 2435, column: 3, scope: !12011)
!12011 = distinct !DILexicalBlock(scope: !11972, file: !3, line: 2435, column: 3)
!12012 = !DILocalVariable(name: "__dummy", scope: !12013, file: !3, line: 2435, type: !126)
!12013 = distinct !DILexicalBlock(scope: !12014, file: !3, line: 2435, column: 3)
!12014 = distinct !DILexicalBlock(scope: !12011, file: !3, line: 2435, column: 3)
!12015 = !DILocation(line: 2435, column: 3, scope: !12013)
!12016 = !DILocalVariable(name: "__dummy2", scope: !12013, file: !3, line: 2435, type: !126)
!12017 = !DILocation(line: 2435, column: 3, scope: !12014)
!12018 = !DILocation(line: 2435, column: 3, scope: !11971)
!12019 = !{i32 -2141409407}
!12020 = !DILocation(line: 2435, column: 3, scope: !11970)
!12021 = !DILocation(line: 329, column: 10, scope: !7102, inlinedAt: !11969)
!12022 = !DILocation(line: 329, column: 16, scope: !7102, inlinedAt: !11969)
!12023 = !DILocation(line: 2436, column: 22, scope: !11963)
!12024 = !DILocation(line: 2436, column: 28, scope: !11963)
!12025 = !DILocation(line: 2436, column: 33, scope: !11963)
!12026 = !DILocation(line: 2436, column: 3, scope: !11963)
!12027 = !DILocation(line: 2437, column: 27, scope: !11963)
!12028 = !DILocation(line: 2437, column: 33, scope: !11963)
!12029 = !DILocation(line: 2437, column: 44, scope: !11963)
!12030 = !DILocation(line: 409, column: 2, scope: !9120, inlinedAt: !11962)
!12031 = !DILocation(line: 409, column: 2, scope: !9125, inlinedAt: !11962)
!12032 = !DILocation(line: 409, column: 2, scope: !9126, inlinedAt: !11962)
!12033 = !DILocation(line: 409, column: 2, scope: !9133, inlinedAt: !11962)
!12034 = !DILocation(line: 409, column: 2, scope: !9136, inlinedAt: !11962)
!12035 = !DILocation(line: 2438, column: 2, scope: !11963)
!12036 = !DILocalVariable(name: "ch_ctrl", scope: !11959, file: !3, line: 2439, type: !4306)
!12037 = !DILocation(line: 2439, column: 27, scope: !11959)
!12038 = !DILocation(line: 2439, column: 37, scope: !11959)
!12039 = !DILocation(line: 2439, column: 43, scope: !11959)
!12040 = !DILocation(line: 2439, column: 45, scope: !11959)
!12041 = !DILocation(line: 2439, column: 49, scope: !11959)
!12042 = !DILocalVariable(name: "retval", scope: !11959, file: !3, line: 2440, type: !139)
!12043 = !DILocation(line: 2440, column: 7, scope: !11959)
!12044 = !DILocalVariable(name: "channel", scope: !11959, file: !3, line: 2440, type: !139)
!12045 = !DILocation(line: 2440, column: 15, scope: !11959)
!12046 = !DILocation(line: 2440, column: 25, scope: !11959)
!12047 = !DILocation(line: 2440, column: 31, scope: !11959)
!12048 = !DILocation(line: 2440, column: 38, scope: !11959)
!12049 = !DILocation(line: 2440, column: 44, scope: !11959)
!12050 = !DILocation(line: 2440, column: 36, scope: !11959)
!12051 = !DILocalVariable(name: "rs", scope: !11959, file: !3, line: 2441, type: !426)
!12052 = !DILocation(line: 2441, column: 7, scope: !11959)
!12053 = !DILocation(line: 2443, column: 22, scope: !12054)
!12054 = distinct !DILexicalBlock(scope: !11959, file: !3, line: 2443, column: 7)
!12055 = !DILocation(line: 2443, column: 8, scope: !12054)
!12056 = !DILocation(line: 2443, column: 7, scope: !11959)
!12057 = !DILocation(line: 2444, column: 4, scope: !12054)
!12058 = !DILocation(line: 2446, column: 3, scope: !11959)
!12059 = !DILocation(line: 2446, column: 3, scope: !11958)
!12060 = !DILocalVariable(name: "__dummy", scope: !12061, file: !3, line: 2446, type: !126)
!12061 = distinct !DILexicalBlock(scope: !11957, file: !3, line: 2446, column: 3)
!12062 = !DILocation(line: 2446, column: 3, scope: !12061)
!12063 = !DILocalVariable(name: "__dummy2", scope: !12061, file: !3, line: 2446, type: !126)
!12064 = !DILocation(line: 2446, column: 3, scope: !11957)
!12065 = !DILocation(line: 2446, column: 3, scope: !11956)
!12066 = !DILocation(line: 2446, column: 3, scope: !12067)
!12067 = distinct !DILexicalBlock(scope: !11956, file: !3, line: 2446, column: 3)
!12068 = !DILocalVariable(name: "__dummy", scope: !12069, file: !3, line: 2446, type: !126)
!12069 = distinct !DILexicalBlock(scope: !12070, file: !3, line: 2446, column: 3)
!12070 = distinct !DILexicalBlock(scope: !12067, file: !3, line: 2446, column: 3)
!12071 = !DILocation(line: 2446, column: 3, scope: !12069)
!12072 = !DILocalVariable(name: "__dummy2", scope: !12069, file: !3, line: 2446, type: !126)
!12073 = !DILocation(line: 2446, column: 3, scope: !12070)
!12074 = !DILocation(line: 2446, column: 3, scope: !11955)
!12075 = !{i32 -2141408350}
!12076 = !DILocation(line: 2446, column: 3, scope: !11954)
!12077 = !DILocation(line: 329, column: 10, scope: !7102, inlinedAt: !11953)
!12078 = !DILocation(line: 329, column: 16, scope: !7102, inlinedAt: !11953)
!12079 = !DILocation(line: 2447, column: 15, scope: !11959)
!12080 = !DILocation(line: 2447, column: 24, scope: !11959)
!12081 = !DILocation(line: 2447, column: 14, scope: !11959)
!12082 = !DILocation(line: 2447, column: 8, scope: !11959)
!12083 = !DILocation(line: 2447, column: 6, scope: !11959)
!12084 = !DILocation(line: 2448, column: 7, scope: !12085)
!12085 = distinct !DILexicalBlock(scope: !11959, file: !3, line: 2448, column: 7)
!12086 = !DILocation(line: 2448, column: 11, scope: !12085)
!12087 = !DILocation(line: 2448, column: 7, scope: !11959)
!12088 = !DILocation(line: 2449, column: 7, scope: !12085)
!12089 = !DILocation(line: 2449, column: 4, scope: !12085)
!12090 = !DILocation(line: 2450, column: 7, scope: !12091)
!12091 = distinct !DILexicalBlock(scope: !11959, file: !3, line: 2450, column: 7)
!12092 = !DILocation(line: 2450, column: 13, scope: !12091)
!12093 = !DILocation(line: 2450, column: 7, scope: !11959)
!12094 = !DILocation(line: 2451, column: 7, scope: !12091)
!12095 = !DILocation(line: 2451, column: 4, scope: !12091)
!12096 = !DILocation(line: 2452, column: 7, scope: !12097)
!12097 = distinct !DILexicalBlock(scope: !11959, file: !3, line: 2452, column: 7)
!12098 = !DILocation(line: 2452, column: 11, scope: !12097)
!12099 = !DILocation(line: 2452, column: 7, scope: !11959)
!12100 = !DILocation(line: 2453, column: 7, scope: !12101)
!12101 = distinct !DILexicalBlock(scope: !12097, file: !3, line: 2452, column: 24)
!12102 = !DILocation(line: 2457, column: 3, scope: !12101)
!12103 = !DILocation(line: 2458, column: 7, scope: !12104)
!12104 = distinct !DILexicalBlock(scope: !11959, file: !3, line: 2458, column: 7)
!12105 = !DILocation(line: 2458, column: 13, scope: !12104)
!12106 = !DILocation(line: 2458, column: 7, scope: !11959)
!12107 = !DILocation(line: 2459, column: 7, scope: !12108)
!12108 = distinct !DILexicalBlock(scope: !12104, file: !3, line: 2458, column: 26)
!12109 = !DILocation(line: 2464, column: 3, scope: !12108)
!12110 = !DILocation(line: 2465, column: 3, scope: !11959)
!12111 = !DILocation(line: 2465, column: 3, scope: !12112)
!12112 = distinct !DILexicalBlock(scope: !11959, file: !3, line: 2465, column: 3)
!12113 = !{i32 -2141408043}
!12114 = !DILocation(line: 2466, column: 26, scope: !11959)
!12115 = !DILocation(line: 2466, column: 32, scope: !11959)
!12116 = !DILocation(line: 2466, column: 12, scope: !11959)
!12117 = !DILocation(line: 2466, column: 10, scope: !11959)
!12118 = !DILocation(line: 2467, column: 27, scope: !11959)
!12119 = !DILocation(line: 2467, column: 33, scope: !11959)
!12120 = !DILocation(line: 2467, column: 44, scope: !11959)
!12121 = !DILocation(line: 409, column: 2, scope: !9120, inlinedAt: !11966)
!12122 = !DILocation(line: 409, column: 2, scope: !9125, inlinedAt: !11966)
!12123 = !DILocation(line: 409, column: 2, scope: !9126, inlinedAt: !11966)
!12124 = !DILocation(line: 409, column: 2, scope: !9133, inlinedAt: !11966)
!12125 = !DILocation(line: 409, column: 2, scope: !9136, inlinedAt: !11966)
!12126 = !DILocation(line: 2468, column: 7, scope: !12127)
!12127 = distinct !DILexicalBlock(scope: !11959, file: !3, line: 2468, column: 7)
!12128 = !DILocation(line: 2468, column: 14, scope: !12127)
!12129 = !DILocation(line: 2468, column: 7, scope: !11959)
!12130 = !DILocation(line: 2470, column: 17, scope: !12131)
!12131 = distinct !DILexicalBlock(scope: !12127, file: !3, line: 2468, column: 20)
!12132 = !DILocation(line: 2470, column: 23, scope: !12131)
!12133 = !DILocation(line: 2470, column: 29, scope: !12131)
!12134 = !DILocation(line: 2469, column: 4, scope: !12131)
!12135 = !DILocation(line: 2471, column: 3, scope: !12131)
!12136 = !DILocation(line: 2473, column: 2, scope: !11951)
!12137 = !DILocation(line: 2474, column: 1, scope: !11951)
!12138 = distinct !DISubprogram(name: "cy_get_icount", scope: !3, file: !3, line: 2736, type: !4025, scopeLine: 2738, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!12139 = !DILocation(line: 407, column: 64, scope: !9014, inlinedAt: !12140)
!12140 = distinct !DILocation(line: 2745, column: 2, scope: !12138)
!12141 = !DILocation(line: 407, column: 84, scope: !9014, inlinedAt: !12140)
!12142 = !DILocation(line: 327, column: 67, scope: !7102, inlinedAt: !12143)
!12143 = distinct !DILocation(line: 2743, column: 2, scope: !12144)
!12144 = distinct !DILexicalBlock(scope: !12145, file: !3, line: 2743, column: 2)
!12145 = distinct !DILexicalBlock(scope: !12146, file: !3, line: 2743, column: 2)
!12146 = distinct !DILexicalBlock(scope: !12147, file: !3, line: 2743, column: 2)
!12147 = distinct !DILexicalBlock(scope: !12148, file: !3, line: 2743, column: 2)
!12148 = distinct !DILexicalBlock(scope: !12138, file: !3, line: 2743, column: 2)
!12149 = !DILocalVariable(name: "tty", arg: 1, scope: !12138, file: !3, line: 2736, type: !233)
!12150 = !DILocation(line: 2736, column: 45, scope: !12138)
!12151 = !DILocalVariable(name: "sic", arg: 2, scope: !12138, file: !3, line: 2737, type: !4027)
!12152 = !DILocation(line: 2737, column: 36, scope: !12138)
!12153 = !DILocalVariable(name: "info", scope: !12138, file: !3, line: 2739, type: !134)
!12154 = !DILocation(line: 2739, column: 24, scope: !12138)
!12155 = !DILocation(line: 2739, column: 31, scope: !12138)
!12156 = !DILocation(line: 2739, column: 36, scope: !12138)
!12157 = !DILocalVariable(name: "cnow", scope: !12138, file: !3, line: 2740, type: !4397)
!12158 = !DILocation(line: 2740, column: 25, scope: !12138)
!12159 = !DILocalVariable(name: "flags", scope: !12138, file: !3, line: 2741, type: !126)
!12160 = !DILocation(line: 2741, column: 16, scope: !12138)
!12161 = !DILocation(line: 2743, column: 2, scope: !12138)
!12162 = !DILocation(line: 2743, column: 2, scope: !12148)
!12163 = !DILocalVariable(name: "__dummy", scope: !12164, file: !3, line: 2743, type: !126)
!12164 = distinct !DILexicalBlock(scope: !12147, file: !3, line: 2743, column: 2)
!12165 = !DILocation(line: 2743, column: 2, scope: !12164)
!12166 = !DILocalVariable(name: "__dummy2", scope: !12164, file: !3, line: 2743, type: !126)
!12167 = !DILocation(line: 2743, column: 2, scope: !12147)
!12168 = !DILocation(line: 2743, column: 2, scope: !12146)
!12169 = !DILocation(line: 2743, column: 2, scope: !12170)
!12170 = distinct !DILexicalBlock(scope: !12146, file: !3, line: 2743, column: 2)
!12171 = !DILocalVariable(name: "__dummy", scope: !12172, file: !3, line: 2743, type: !126)
!12172 = distinct !DILexicalBlock(scope: !12173, file: !3, line: 2743, column: 2)
!12173 = distinct !DILexicalBlock(scope: !12170, file: !3, line: 2743, column: 2)
!12174 = !DILocation(line: 2743, column: 2, scope: !12172)
!12175 = !DILocalVariable(name: "__dummy2", scope: !12172, file: !3, line: 2743, type: !126)
!12176 = !DILocation(line: 2743, column: 2, scope: !12173)
!12177 = !DILocation(line: 2743, column: 2, scope: !12145)
!12178 = !{i32 -2141394487}
!12179 = !DILocation(line: 2743, column: 2, scope: !12144)
!12180 = !DILocation(line: 329, column: 10, scope: !7102, inlinedAt: !12143)
!12181 = !DILocation(line: 329, column: 16, scope: !7102, inlinedAt: !12143)
!12182 = !DILocation(line: 2744, column: 9, scope: !12138)
!12183 = !DILocation(line: 2744, column: 15, scope: !12138)
!12184 = !DILocation(line: 2745, column: 26, scope: !12138)
!12185 = !DILocation(line: 2745, column: 32, scope: !12138)
!12186 = !DILocation(line: 2745, column: 38, scope: !12138)
!12187 = !DILocation(line: 2745, column: 49, scope: !12138)
!12188 = !DILocation(line: 409, column: 2, scope: !9120, inlinedAt: !12140)
!12189 = !DILocation(line: 409, column: 2, scope: !9125, inlinedAt: !12140)
!12190 = !DILocation(line: 409, column: 2, scope: !9126, inlinedAt: !12140)
!12191 = !DILocation(line: 409, column: 2, scope: !9133, inlinedAt: !12140)
!12192 = !DILocation(line: 409, column: 2, scope: !9136, inlinedAt: !12140)
!12193 = !DILocation(line: 2747, column: 18, scope: !12138)
!12194 = !DILocation(line: 2747, column: 2, scope: !12138)
!12195 = !DILocation(line: 2747, column: 7, scope: !12138)
!12196 = !DILocation(line: 2747, column: 11, scope: !12138)
!12197 = !DILocation(line: 2748, column: 18, scope: !12138)
!12198 = !DILocation(line: 2748, column: 2, scope: !12138)
!12199 = !DILocation(line: 2748, column: 7, scope: !12138)
!12200 = !DILocation(line: 2748, column: 11, scope: !12138)
!12201 = !DILocation(line: 2749, column: 18, scope: !12138)
!12202 = !DILocation(line: 2749, column: 2, scope: !12138)
!12203 = !DILocation(line: 2749, column: 7, scope: !12138)
!12204 = !DILocation(line: 2749, column: 11, scope: !12138)
!12205 = !DILocation(line: 2750, column: 18, scope: !12138)
!12206 = !DILocation(line: 2750, column: 2, scope: !12138)
!12207 = !DILocation(line: 2750, column: 7, scope: !12138)
!12208 = !DILocation(line: 2750, column: 11, scope: !12138)
!12209 = !DILocation(line: 2751, column: 17, scope: !12138)
!12210 = !DILocation(line: 2751, column: 2, scope: !12138)
!12211 = !DILocation(line: 2751, column: 7, scope: !12138)
!12212 = !DILocation(line: 2751, column: 10, scope: !12138)
!12213 = !DILocation(line: 2752, column: 17, scope: !12138)
!12214 = !DILocation(line: 2752, column: 2, scope: !12138)
!12215 = !DILocation(line: 2752, column: 7, scope: !12138)
!12216 = !DILocation(line: 2752, column: 10, scope: !12138)
!12217 = !DILocation(line: 2753, column: 20, scope: !12138)
!12218 = !DILocation(line: 2753, column: 2, scope: !12138)
!12219 = !DILocation(line: 2753, column: 7, scope: !12138)
!12220 = !DILocation(line: 2753, column: 13, scope: !12138)
!12221 = !DILocation(line: 2754, column: 22, scope: !12138)
!12222 = !DILocation(line: 2754, column: 2, scope: !12138)
!12223 = !DILocation(line: 2754, column: 7, scope: !12138)
!12224 = !DILocation(line: 2754, column: 15, scope: !12138)
!12225 = !DILocation(line: 2755, column: 21, scope: !12138)
!12226 = !DILocation(line: 2755, column: 2, scope: !12138)
!12227 = !DILocation(line: 2755, column: 7, scope: !12138)
!12228 = !DILocation(line: 2755, column: 14, scope: !12138)
!12229 = !DILocation(line: 2756, column: 18, scope: !12138)
!12230 = !DILocation(line: 2756, column: 2, scope: !12138)
!12231 = !DILocation(line: 2756, column: 7, scope: !12138)
!12232 = !DILocation(line: 2756, column: 11, scope: !12138)
!12233 = !DILocation(line: 2757, column: 26, scope: !12138)
!12234 = !DILocation(line: 2757, column: 2, scope: !12138)
!12235 = !DILocation(line: 2757, column: 7, scope: !12138)
!12236 = !DILocation(line: 2757, column: 19, scope: !12138)
!12237 = !DILocation(line: 2758, column: 2, scope: !12138)
!12238 = distinct !DISubprogram(name: "cy_get_serial_info", scope: !3, file: !3, line: 2260, type: !4046, scopeLine: 2262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!12239 = !DILocalVariable(name: "tty", arg: 1, scope: !12238, file: !3, line: 2260, type: !233)
!12240 = !DILocation(line: 2260, column: 50, scope: !12238)
!12241 = !DILocalVariable(name: "ss", arg: 2, scope: !12238, file: !3, line: 2261, type: !4048)
!12242 = !DILocation(line: 2261, column: 27, scope: !12238)
!12243 = !DILocalVariable(name: "info", scope: !12238, file: !3, line: 2263, type: !134)
!12244 = !DILocation(line: 2263, column: 24, scope: !12238)
!12245 = !DILocation(line: 2263, column: 31, scope: !12238)
!12246 = !DILocation(line: 2263, column: 36, scope: !12238)
!12247 = !DILocalVariable(name: "cinfo", scope: !12238, file: !3, line: 2264, type: !4229)
!12248 = !DILocation(line: 2264, column: 24, scope: !12238)
!12249 = !DILocation(line: 2264, column: 32, scope: !12238)
!12250 = !DILocation(line: 2264, column: 38, scope: !12238)
!12251 = !DILocation(line: 2266, column: 28, scope: !12252)
!12252 = distinct !DILexicalBlock(scope: !12238, file: !3, line: 2266, column: 6)
!12253 = !DILocation(line: 2266, column: 34, scope: !12252)
!12254 = !DILocation(line: 2266, column: 39, scope: !12252)
!12255 = !DILocation(line: 2266, column: 6, scope: !12252)
!12256 = !DILocation(line: 2266, column: 6, scope: !12238)
!12257 = !DILocation(line: 2267, column: 3, scope: !12252)
!12258 = !DILocation(line: 2268, column: 13, scope: !12238)
!12259 = !DILocation(line: 2268, column: 19, scope: !12238)
!12260 = !DILocation(line: 2268, column: 2, scope: !12238)
!12261 = !DILocation(line: 2268, column: 6, scope: !12238)
!12262 = !DILocation(line: 2268, column: 11, scope: !12238)
!12263 = !DILocation(line: 2269, column: 13, scope: !12238)
!12264 = !DILocation(line: 2269, column: 19, scope: !12238)
!12265 = !DILocation(line: 2269, column: 2, scope: !12238)
!12266 = !DILocation(line: 2269, column: 6, scope: !12238)
!12267 = !DILocation(line: 2269, column: 11, scope: !12238)
!12268 = !DILocation(line: 2270, column: 14, scope: !12238)
!12269 = !DILocation(line: 2270, column: 20, scope: !12238)
!12270 = !DILocation(line: 2270, column: 25, scope: !12238)
!12271 = !DILocation(line: 2270, column: 36, scope: !12238)
!12272 = !DILocation(line: 2270, column: 46, scope: !12238)
!12273 = !DILocation(line: 2270, column: 52, scope: !12238)
!12274 = !DILocation(line: 2270, column: 44, scope: !12238)
!12275 = !DILocation(line: 2271, column: 4, scope: !12238)
!12276 = !DILocation(line: 2271, column: 11, scope: !12238)
!12277 = !DILocation(line: 2270, column: 57, scope: !12238)
!12278 = !DILocation(line: 2270, column: 13, scope: !12238)
!12279 = !DILocation(line: 2270, column: 2, scope: !12238)
!12280 = !DILocation(line: 2270, column: 6, scope: !12238)
!12281 = !DILocation(line: 2270, column: 11, scope: !12238)
!12282 = !DILocation(line: 2272, column: 12, scope: !12238)
!12283 = !DILocation(line: 2272, column: 19, scope: !12238)
!12284 = !DILocation(line: 2272, column: 2, scope: !12238)
!12285 = !DILocation(line: 2272, column: 6, scope: !12238)
!12286 = !DILocation(line: 2272, column: 10, scope: !12238)
!12287 = !DILocation(line: 2273, column: 14, scope: !12238)
!12288 = !DILocation(line: 2273, column: 20, scope: !12238)
!12289 = !DILocation(line: 2273, column: 25, scope: !12238)
!12290 = !DILocation(line: 2273, column: 2, scope: !12238)
!12291 = !DILocation(line: 2273, column: 6, scope: !12238)
!12292 = !DILocation(line: 2273, column: 12, scope: !12238)
!12293 = !DILocation(line: 2274, column: 20, scope: !12238)
!12294 = !DILocation(line: 2274, column: 26, scope: !12238)
!12295 = !DILocation(line: 2274, column: 31, scope: !12238)
!12296 = !DILocation(line: 2274, column: 2, scope: !12238)
!12297 = !DILocation(line: 2274, column: 6, scope: !12238)
!12298 = !DILocation(line: 2274, column: 18, scope: !12238)
!12299 = !DILocation(line: 2275, column: 21, scope: !12238)
!12300 = !DILocation(line: 2275, column: 27, scope: !12238)
!12301 = !DILocation(line: 2275, column: 32, scope: !12238)
!12302 = !DILocation(line: 2275, column: 2, scope: !12238)
!12303 = !DILocation(line: 2275, column: 6, scope: !12238)
!12304 = !DILocation(line: 2275, column: 19, scope: !12238)
!12305 = !DILocation(line: 2276, column: 18, scope: !12238)
!12306 = !DILocation(line: 2276, column: 24, scope: !12238)
!12307 = !DILocation(line: 2276, column: 2, scope: !12238)
!12308 = !DILocation(line: 2276, column: 6, scope: !12238)
!12309 = !DILocation(line: 2276, column: 16, scope: !12238)
!12310 = !DILocation(line: 2277, column: 23, scope: !12238)
!12311 = !DILocation(line: 2277, column: 29, scope: !12238)
!12312 = !DILocation(line: 2277, column: 2, scope: !12238)
!12313 = !DILocation(line: 2277, column: 6, scope: !12238)
!12314 = !DILocation(line: 2277, column: 21, scope: !12238)
!12315 = !DILocation(line: 2278, column: 2, scope: !12238)
!12316 = !DILocation(line: 2279, column: 1, scope: !12238)
!12317 = !DILocalVariable(name: "tty", arg: 1, scope: !4817, file: !3, line: 2281, type: !233)
!12318 = !DILocation(line: 2281, column: 50, scope: !4817)
!12319 = !DILocalVariable(name: "ss", arg: 2, scope: !4817, file: !3, line: 2282, type: !4048)
!12320 = !DILocation(line: 2282, column: 27, scope: !4817)
!12321 = !DILocalVariable(name: "info", scope: !4817, file: !3, line: 2284, type: !134)
!12322 = !DILocation(line: 2284, column: 24, scope: !4817)
!12323 = !DILocation(line: 2284, column: 31, scope: !4817)
!12324 = !DILocation(line: 2284, column: 36, scope: !4817)
!12325 = !DILocalVariable(name: "old_flags", scope: !4817, file: !3, line: 2285, type: !139)
!12326 = !DILocation(line: 2285, column: 6, scope: !4817)
!12327 = !DILocalVariable(name: "ret", scope: !4817, file: !3, line: 2286, type: !139)
!12328 = !DILocation(line: 2286, column: 6, scope: !4817)
!12329 = !DILocation(line: 2288, column: 28, scope: !12330)
!12330 = distinct !DILexicalBlock(scope: !4817, file: !3, line: 2288, column: 6)
!12331 = !DILocation(line: 2288, column: 34, scope: !12330)
!12332 = !DILocation(line: 2288, column: 39, scope: !12330)
!12333 = !DILocation(line: 2288, column: 6, scope: !12330)
!12334 = !DILocation(line: 2288, column: 6, scope: !4817)
!12335 = !DILocation(line: 2289, column: 3, scope: !12330)
!12336 = !DILocation(line: 2291, column: 14, scope: !4817)
!12337 = !DILocation(line: 2291, column: 20, scope: !4817)
!12338 = !DILocation(line: 2291, column: 25, scope: !4817)
!12339 = !DILocation(line: 2291, column: 2, scope: !4817)
!12340 = !DILocation(line: 2293, column: 14, scope: !4817)
!12341 = !DILocation(line: 2293, column: 20, scope: !4817)
!12342 = !DILocation(line: 2293, column: 25, scope: !4817)
!12343 = !DILocation(line: 2293, column: 12, scope: !4817)
!12344 = !DILocation(line: 2295, column: 7, scope: !12345)
!12345 = distinct !DILexicalBlock(scope: !4817, file: !3, line: 2295, column: 6)
!12346 = !DILocation(line: 2295, column: 6, scope: !4817)
!12347 = !DILocation(line: 2296, column: 7, scope: !12348)
!12348 = distinct !DILexicalBlock(scope: !12349, file: !3, line: 2296, column: 7)
!12349 = distinct !DILexicalBlock(scope: !12345, file: !3, line: 2295, column: 31)
!12350 = !DILocation(line: 2296, column: 11, scope: !12348)
!12351 = !DILocation(line: 2296, column: 26, scope: !12348)
!12352 = !DILocation(line: 2296, column: 32, scope: !12348)
!12353 = !DILocation(line: 2296, column: 37, scope: !12348)
!12354 = !DILocation(line: 2296, column: 23, scope: !12348)
!12355 = !DILocation(line: 2296, column: 49, scope: !12348)
!12356 = !DILocation(line: 2297, column: 5, scope: !12348)
!12357 = !DILocation(line: 2297, column: 9, scope: !12348)
!12358 = !DILocation(line: 2297, column: 22, scope: !12348)
!12359 = !DILocation(line: 2297, column: 28, scope: !12348)
!12360 = !DILocation(line: 2297, column: 19, scope: !12348)
!12361 = !DILocation(line: 2297, column: 33, scope: !12348)
!12362 = !DILocation(line: 2298, column: 6, scope: !12348)
!12363 = !DILocation(line: 2298, column: 10, scope: !12348)
!12364 = !DILocation(line: 2298, column: 16, scope: !12348)
!12365 = !DILocation(line: 2298, column: 30, scope: !12348)
!12366 = !DILocation(line: 2298, column: 5, scope: !12348)
!12367 = !DILocation(line: 2300, column: 6, scope: !12348)
!12368 = !DILocation(line: 2300, column: 12, scope: !12348)
!12369 = !DILocation(line: 2300, column: 17, scope: !12348)
!12370 = !DILocation(line: 2300, column: 23, scope: !12348)
!12371 = !DILocation(line: 2300, column: 37, scope: !12348)
!12372 = !DILocation(line: 2299, column: 23, scope: !12348)
!12373 = !DILocation(line: 2296, column: 7, scope: !12349)
!12374 = !DILocation(line: 2302, column: 18, scope: !12375)
!12375 = distinct !DILexicalBlock(scope: !12348, file: !3, line: 2301, column: 3)
!12376 = !DILocation(line: 2302, column: 24, scope: !12375)
!12377 = !DILocation(line: 2302, column: 29, scope: !12375)
!12378 = !DILocation(line: 2302, column: 4, scope: !12375)
!12379 = !DILocation(line: 2303, column: 4, scope: !12375)
!12380 = !DILocation(line: 2305, column: 23, scope: !12349)
!12381 = !DILocation(line: 2305, column: 29, scope: !12349)
!12382 = !DILocation(line: 2305, column: 34, scope: !12349)
!12383 = !DILocation(line: 2305, column: 40, scope: !12349)
!12384 = !DILocation(line: 2306, column: 6, scope: !12349)
!12385 = !DILocation(line: 2306, column: 10, scope: !12349)
!12386 = !DILocation(line: 2306, column: 16, scope: !12349)
!12387 = !DILocation(line: 2306, column: 5, scope: !12349)
!12388 = !DILocation(line: 2305, column: 59, scope: !12349)
!12389 = !DILocation(line: 2305, column: 3, scope: !12349)
!12390 = !DILocation(line: 2305, column: 9, scope: !12349)
!12391 = !DILocation(line: 2305, column: 14, scope: !12349)
!12392 = !DILocation(line: 2305, column: 20, scope: !12349)
!12393 = !DILocation(line: 2307, column: 16, scope: !12349)
!12394 = !DILocation(line: 2307, column: 20, scope: !12349)
!12395 = !DILocation(line: 2307, column: 3, scope: !12349)
!12396 = !DILocation(line: 2307, column: 9, scope: !12349)
!12397 = !DILocation(line: 2307, column: 14, scope: !12349)
!12398 = !DILocation(line: 2308, column: 26, scope: !12349)
!12399 = !DILocation(line: 2308, column: 30, scope: !12349)
!12400 = !DILocation(line: 2308, column: 3, scope: !12349)
!12401 = !DILocation(line: 2308, column: 9, scope: !12349)
!12402 = !DILocation(line: 2308, column: 24, scope: !12349)
!12403 = !DILocation(line: 2309, column: 3, scope: !12349)
!12404 = !DILocation(line: 2317, column: 15, scope: !4817)
!12405 = !DILocation(line: 2317, column: 19, scope: !4817)
!12406 = !DILocation(line: 2317, column: 2, scope: !4817)
!12407 = !DILocation(line: 2317, column: 8, scope: !4817)
!12408 = !DILocation(line: 2317, column: 13, scope: !4817)
!12409 = !DILocation(line: 2318, column: 25, scope: !4817)
!12410 = !DILocation(line: 2318, column: 29, scope: !4817)
!12411 = !DILocation(line: 2318, column: 2, scope: !4817)
!12412 = !DILocation(line: 2318, column: 8, scope: !4817)
!12413 = !DILocation(line: 2318, column: 23, scope: !4817)
!12414 = !DILocation(line: 2319, column: 22, scope: !4817)
!12415 = !DILocation(line: 2319, column: 28, scope: !4817)
!12416 = !DILocation(line: 2319, column: 33, scope: !4817)
!12417 = !DILocation(line: 2319, column: 39, scope: !4817)
!12418 = !DILocation(line: 2320, column: 5, scope: !4817)
!12419 = !DILocation(line: 2320, column: 9, scope: !4817)
!12420 = !DILocation(line: 2320, column: 15, scope: !4817)
!12421 = !DILocation(line: 2320, column: 4, scope: !4817)
!12422 = !DILocation(line: 2319, column: 55, scope: !4817)
!12423 = !DILocation(line: 2319, column: 2, scope: !4817)
!12424 = !DILocation(line: 2319, column: 8, scope: !4817)
!12425 = !DILocation(line: 2319, column: 13, scope: !4817)
!12426 = !DILocation(line: 2319, column: 19, scope: !4817)
!12427 = !DILocation(line: 2321, column: 27, scope: !4817)
!12428 = !DILocation(line: 2321, column: 31, scope: !4817)
!12429 = !DILocation(line: 2321, column: 43, scope: !4817)
!12430 = !DILocation(line: 2321, column: 48, scope: !4817)
!12431 = !DILocation(line: 2321, column: 2, scope: !4817)
!12432 = !DILocation(line: 2321, column: 8, scope: !4817)
!12433 = !DILocation(line: 2321, column: 13, scope: !4817)
!12434 = !DILocation(line: 2321, column: 25, scope: !4817)
!12435 = !DILocation(line: 2322, column: 28, scope: !4817)
!12436 = !DILocation(line: 2322, column: 32, scope: !4817)
!12437 = !DILocation(line: 2322, column: 45, scope: !4817)
!12438 = !DILocation(line: 2322, column: 50, scope: !4817)
!12439 = !DILocation(line: 2322, column: 2, scope: !4817)
!12440 = !DILocation(line: 2322, column: 8, scope: !4817)
!12441 = !DILocation(line: 2322, column: 13, scope: !4817)
!12442 = !DILocation(line: 2322, column: 26, scope: !4817)
!12443 = !DILabel(scope: !4817, name: "check_and_exit", file: !3, line: 2324)
!12444 = !DILocation(line: 2324, column: 1, scope: !4817)
!12445 = !DILocation(line: 2325, column: 28, scope: !12446)
!12446 = distinct !DILexicalBlock(scope: !4817, file: !3, line: 2325, column: 6)
!12447 = !DILocation(line: 2325, column: 34, scope: !12446)
!12448 = !DILocation(line: 2325, column: 6, scope: !12446)
!12449 = !DILocation(line: 2325, column: 6, scope: !4817)
!12450 = !DILocation(line: 2326, column: 8, scope: !12451)
!12451 = distinct !DILexicalBlock(scope: !12452, file: !3, line: 2326, column: 7)
!12452 = distinct !DILexicalBlock(scope: !12446, file: !3, line: 2325, column: 41)
!12453 = !DILocation(line: 2326, column: 12, scope: !12451)
!12454 = !DILocation(line: 2326, column: 20, scope: !12451)
!12455 = !DILocation(line: 2326, column: 18, scope: !12451)
!12456 = !DILocation(line: 2326, column: 31, scope: !12451)
!12457 = !DILocation(line: 2326, column: 7, scope: !12452)
!12458 = !DILocation(line: 2328, column: 8, scope: !12459)
!12459 = distinct !DILexicalBlock(scope: !12460, file: !3, line: 2328, column: 8)
!12460 = distinct !DILexicalBlock(scope: !12451, file: !3, line: 2326, column: 49)
!12461 = !DILocation(line: 2328, column: 12, scope: !12459)
!12462 = !DILocation(line: 2328, column: 18, scope: !12459)
!12463 = !DILocation(line: 2328, column: 8, scope: !12460)
!12464 = !DILocation(line: 2329, column: 5, scope: !12459)
!12465 = !DILocation(line: 2329, column: 5, scope: !12466)
!12466 = distinct !DILexicalBlock(scope: !12467, file: !3, line: 2329, column: 5)
!12467 = distinct !DILexicalBlock(scope: !12459, file: !3, line: 2329, column: 5)
!12468 = !DILocation(line: 2329, column: 5, scope: !12467)
!12469 = !DILocation(line: 2330, column: 3, scope: !12460)
!12470 = !DILocation(line: 2331, column: 20, scope: !12452)
!12471 = !DILocation(line: 2331, column: 26, scope: !12452)
!12472 = !DILocation(line: 2331, column: 3, scope: !12452)
!12473 = !DILocation(line: 2332, column: 7, scope: !12452)
!12474 = !DILocation(line: 2333, column: 2, scope: !12452)
!12475 = !DILocation(line: 2334, column: 20, scope: !12476)
!12476 = distinct !DILexicalBlock(scope: !12446, file: !3, line: 2333, column: 9)
!12477 = !DILocation(line: 2334, column: 26, scope: !12476)
!12478 = !DILocation(line: 2334, column: 9, scope: !12476)
!12479 = !DILocation(line: 2334, column: 7, scope: !12476)
!12480 = !DILocation(line: 2336, column: 16, scope: !4817)
!12481 = !DILocation(line: 2336, column: 22, scope: !4817)
!12482 = !DILocation(line: 2336, column: 27, scope: !4817)
!12483 = !DILocation(line: 2336, column: 2, scope: !4817)
!12484 = !DILocation(line: 2337, column: 9, scope: !4817)
!12485 = !DILocation(line: 2337, column: 2, scope: !4817)
!12486 = !DILocation(line: 2338, column: 1, scope: !4817)
!12487 = distinct !DISubprogram(name: "cyclades_proc_show", scope: !3, file: !3, line: 3925, type: !751, scopeLine: 3926, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!12488 = !DILocalVariable(name: "m", arg: 1, scope: !12487, file: !3, line: 3925, type: !719)
!12489 = !DILocation(line: 3925, column: 48, scope: !12487)
!12490 = !DILocalVariable(name: "v", arg: 2, scope: !12487, file: !3, line: 3925, type: !118)
!12491 = !DILocation(line: 3925, column: 57, scope: !12487)
!12492 = !DILocalVariable(name: "info", scope: !12487, file: !3, line: 3927, type: !134)
!12493 = !DILocation(line: 3927, column: 24, scope: !12487)
!12494 = !DILocalVariable(name: "i", scope: !12487, file: !3, line: 3928, type: !7)
!12495 = !DILocation(line: 3928, column: 15, scope: !12487)
!12496 = !DILocalVariable(name: "j", scope: !12487, file: !3, line: 3928, type: !7)
!12497 = !DILocation(line: 3928, column: 18, scope: !12487)
!12498 = !DILocalVariable(name: "cur_jifs", scope: !12487, file: !3, line: 3929, type: !120)
!12499 = !DILocation(line: 3929, column: 8, scope: !12487)
!12500 = !DILocation(line: 3929, column: 19, scope: !12487)
!12501 = !DILocation(line: 3931, column: 11, scope: !12487)
!12502 = !DILocation(line: 3931, column: 2, scope: !12487)
!12503 = !DILocation(line: 3935, column: 9, scope: !12504)
!12504 = distinct !DILexicalBlock(scope: !12487, file: !3, line: 3935, column: 2)
!12505 = !DILocation(line: 3935, column: 7, scope: !12504)
!12506 = !DILocation(line: 3935, column: 14, scope: !12507)
!12507 = distinct !DILexicalBlock(scope: !12504, file: !3, line: 3935, column: 2)
!12508 = !DILocation(line: 3935, column: 16, scope: !12507)
!12509 = !DILocation(line: 3935, column: 2, scope: !12504)
!12510 = !DILocation(line: 3936, column: 10, scope: !12511)
!12511 = distinct !DILexicalBlock(scope: !12507, file: !3, line: 3936, column: 3)
!12512 = !DILocation(line: 3936, column: 8, scope: !12511)
!12513 = !DILocation(line: 3936, column: 15, scope: !12514)
!12514 = distinct !DILexicalBlock(scope: !12511, file: !3, line: 3936, column: 3)
!12515 = !DILocation(line: 3936, column: 27, scope: !12514)
!12516 = !DILocation(line: 3936, column: 19, scope: !12514)
!12517 = !DILocation(line: 3936, column: 30, scope: !12514)
!12518 = !DILocation(line: 3936, column: 17, scope: !12514)
!12519 = !DILocation(line: 3936, column: 3, scope: !12511)
!12520 = !DILocation(line: 3937, column: 20, scope: !12521)
!12521 = distinct !DILexicalBlock(scope: !12514, file: !3, line: 3936, column: 43)
!12522 = !DILocation(line: 3937, column: 12, scope: !12521)
!12523 = !DILocation(line: 3937, column: 23, scope: !12521)
!12524 = !DILocation(line: 3937, column: 29, scope: !12521)
!12525 = !DILocation(line: 3937, column: 9, scope: !12521)
!12526 = !DILocation(line: 3939, column: 8, scope: !12527)
!12527 = distinct !DILexicalBlock(scope: !12521, file: !3, line: 3939, column: 8)
!12528 = !DILocation(line: 3939, column: 14, scope: !12527)
!12529 = !DILocation(line: 3939, column: 19, scope: !12527)
!12530 = !DILocation(line: 3939, column: 8, scope: !12521)
!12531 = !DILocalVariable(name: "tty", scope: !12532, file: !3, line: 3941, type: !233)
!12532 = distinct !DILexicalBlock(scope: !12527, file: !3, line: 3939, column: 26)
!12533 = !DILocation(line: 3941, column: 24, scope: !12532)
!12534 = !DILocalVariable(name: "ld", scope: !12532, file: !3, line: 3942, type: !4089)
!12535 = !DILocation(line: 3942, column: 23, scope: !12532)
!12536 = !DILocalVariable(name: "num", scope: !12532, file: !3, line: 3943, type: !139)
!12537 = !DILocation(line: 3943, column: 9, scope: !12532)
!12538 = !DILocation(line: 3944, column: 29, scope: !12532)
!12539 = !DILocation(line: 3944, column: 35, scope: !12532)
!12540 = !DILocation(line: 3944, column: 11, scope: !12532)
!12541 = !DILocation(line: 3944, column: 9, scope: !12532)
!12542 = !DILocation(line: 3945, column: 9, scope: !12543)
!12543 = distinct !DILexicalBlock(scope: !12532, file: !3, line: 3945, column: 9)
!12544 = !DILocation(line: 3945, column: 9, scope: !12532)
!12545 = !DILocation(line: 3946, column: 25, scope: !12546)
!12546 = distinct !DILexicalBlock(scope: !12543, file: !3, line: 3945, column: 14)
!12547 = !DILocation(line: 3946, column: 11, scope: !12546)
!12548 = !DILocation(line: 3946, column: 9, scope: !12546)
!12549 = !DILocation(line: 3947, column: 10, scope: !12550)
!12550 = distinct !DILexicalBlock(scope: !12546, file: !3, line: 3947, column: 10)
!12551 = !DILocation(line: 3947, column: 10, scope: !12546)
!12552 = !DILocation(line: 3948, column: 13, scope: !12553)
!12553 = distinct !DILexicalBlock(scope: !12550, file: !3, line: 3947, column: 14)
!12554 = !DILocation(line: 3948, column: 17, scope: !12553)
!12555 = !DILocation(line: 3948, column: 22, scope: !12553)
!12556 = !DILocation(line: 3948, column: 11, scope: !12553)
!12557 = !DILocation(line: 3949, column: 23, scope: !12553)
!12558 = !DILocation(line: 3949, column: 7, scope: !12553)
!12559 = !DILocation(line: 3950, column: 6, scope: !12553)
!12560 = !DILocation(line: 3951, column: 19, scope: !12546)
!12561 = !DILocation(line: 3951, column: 6, scope: !12546)
!12562 = !DILocation(line: 3952, column: 5, scope: !12546)
!12563 = !DILocation(line: 3953, column: 16, scope: !12532)
!12564 = !DILocation(line: 3954, column: 31, scope: !12532)
!12565 = !DILocation(line: 3954, column: 37, scope: !12532)
!12566 = !DILocation(line: 3955, column: 7, scope: !12532)
!12567 = !DILocation(line: 3955, column: 18, scope: !12532)
!12568 = !DILocation(line: 3955, column: 24, scope: !12532)
!12569 = !DILocation(line: 3955, column: 35, scope: !12532)
!12570 = !DILocation(line: 3955, column: 16, scope: !12532)
!12571 = !DILocation(line: 3955, column: 43, scope: !12532)
!12572 = !DILocation(line: 3956, column: 10, scope: !12532)
!12573 = !DILocation(line: 3956, column: 16, scope: !12532)
!12574 = !DILocation(line: 3956, column: 27, scope: !12532)
!12575 = !DILocation(line: 3957, column: 7, scope: !12532)
!12576 = !DILocation(line: 3957, column: 18, scope: !12532)
!12577 = !DILocation(line: 3957, column: 24, scope: !12532)
!12578 = !DILocation(line: 3957, column: 35, scope: !12532)
!12579 = !DILocation(line: 3957, column: 16, scope: !12532)
!12580 = !DILocation(line: 3957, column: 45, scope: !12532)
!12581 = !DILocation(line: 3958, column: 10, scope: !12532)
!12582 = !DILocation(line: 3958, column: 16, scope: !12532)
!12583 = !DILocation(line: 3958, column: 27, scope: !12532)
!12584 = !DILocation(line: 3959, column: 7, scope: !12532)
!12585 = !DILocation(line: 3959, column: 18, scope: !12532)
!12586 = !DILocation(line: 3959, column: 24, scope: !12532)
!12587 = !DILocation(line: 3959, column: 35, scope: !12532)
!12588 = !DILocation(line: 3959, column: 16, scope: !12532)
!12589 = !DILocation(line: 3959, column: 45, scope: !12532)
!12590 = !DILocation(line: 3960, column: 10, scope: !12532)
!12591 = !DILocation(line: 3960, column: 16, scope: !12532)
!12592 = !DILocation(line: 3960, column: 27, scope: !12532)
!12593 = !DILocation(line: 3961, column: 6, scope: !12532)
!12594 = !DILocation(line: 3953, column: 5, scope: !12532)
!12595 = !DILocation(line: 3962, column: 4, scope: !12532)
!12596 = !DILocation(line: 3963, column: 16, scope: !12527)
!12597 = !DILocation(line: 3965, column: 6, scope: !12527)
!12598 = !DILocation(line: 3965, column: 12, scope: !12527)
!12599 = !DILocation(line: 3963, column: 5, scope: !12527)
!12600 = !DILocation(line: 3966, column: 3, scope: !12521)
!12601 = !DILocation(line: 3936, column: 39, scope: !12514)
!12602 = !DILocation(line: 3936, column: 3, scope: !12514)
!12603 = distinct !{!12603, !12519, !12604}
!12604 = !DILocation(line: 3966, column: 3, scope: !12511)
!12605 = !DILocation(line: 3935, column: 29, scope: !12507)
!12606 = !DILocation(line: 3935, column: 2, scope: !12507)
!12607 = distinct !{!12607, !12509, !12608}
!12608 = !DILocation(line: 3966, column: 3, scope: !12504)
!12609 = !DILocation(line: 3967, column: 2, scope: !12487)
!12610 = distinct !DISubprogram(name: "cy_startup", scope: !3, file: !3, line: 1261, type: !12611, scopeLine: 1262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!12611 = !DISubroutineType(types: !12612)
!12612 = !{!139, !134, !233}
!12613 = !DILocation(line: 407, column: 64, scope: !9014, inlinedAt: !12614)
!12614 = distinct !DILocation(line: 1373, column: 2, scope: !12610)
!12615 = !DILocation(line: 407, column: 84, scope: !9014, inlinedAt: !12614)
!12616 = !DILocation(line: 327, column: 67, scope: !7102, inlinedAt: !12617)
!12617 = distinct !DILocation(line: 1321, column: 3, scope: !12618)
!12618 = distinct !DILexicalBlock(scope: !12619, file: !3, line: 1321, column: 3)
!12619 = distinct !DILexicalBlock(scope: !12620, file: !3, line: 1321, column: 3)
!12620 = distinct !DILexicalBlock(scope: !12621, file: !3, line: 1321, column: 3)
!12621 = distinct !DILexicalBlock(scope: !12622, file: !3, line: 1321, column: 3)
!12622 = distinct !DILexicalBlock(scope: !12623, file: !3, line: 1321, column: 3)
!12623 = distinct !DILexicalBlock(scope: !12624, file: !3, line: 1311, column: 9)
!12624 = distinct !DILexicalBlock(scope: !12610, file: !3, line: 1295, column: 6)
!12625 = !DILocation(line: 327, column: 67, scope: !7102, inlinedAt: !12626)
!12626 = distinct !DILocation(line: 1298, column: 3, scope: !12627)
!12627 = distinct !DILexicalBlock(scope: !12628, file: !3, line: 1298, column: 3)
!12628 = distinct !DILexicalBlock(scope: !12629, file: !3, line: 1298, column: 3)
!12629 = distinct !DILexicalBlock(scope: !12630, file: !3, line: 1298, column: 3)
!12630 = distinct !DILexicalBlock(scope: !12631, file: !3, line: 1298, column: 3)
!12631 = distinct !DILexicalBlock(scope: !12632, file: !3, line: 1298, column: 3)
!12632 = distinct !DILexicalBlock(scope: !12624, file: !3, line: 1295, column: 22)
!12633 = !DILocation(line: 407, column: 64, scope: !9014, inlinedAt: !12634)
!12634 = distinct !DILocation(line: 1291, column: 2, scope: !12610)
!12635 = !DILocation(line: 407, column: 84, scope: !9014, inlinedAt: !12634)
!12636 = !DILocation(line: 407, column: 64, scope: !9014, inlinedAt: !12637)
!12637 = distinct !DILocation(line: 1381, column: 2, scope: !12610)
!12638 = !DILocation(line: 407, column: 84, scope: !9014, inlinedAt: !12637)
!12639 = !DILocation(line: 327, column: 67, scope: !7102, inlinedAt: !12640)
!12640 = distinct !DILocation(line: 1276, column: 2, scope: !12641)
!12641 = distinct !DILexicalBlock(scope: !12642, file: !3, line: 1276, column: 2)
!12642 = distinct !DILexicalBlock(scope: !12643, file: !3, line: 1276, column: 2)
!12643 = distinct !DILexicalBlock(scope: !12644, file: !3, line: 1276, column: 2)
!12644 = distinct !DILexicalBlock(scope: !12645, file: !3, line: 1276, column: 2)
!12645 = distinct !DILexicalBlock(scope: !12610, file: !3, line: 1276, column: 2)
!12646 = !DILocalVariable(name: "info", arg: 1, scope: !12610, file: !3, line: 1261, type: !134)
!12647 = !DILocation(line: 1261, column: 45, scope: !12610)
!12648 = !DILocalVariable(name: "tty", arg: 2, scope: !12610, file: !3, line: 1261, type: !233)
!12649 = !DILocation(line: 1261, column: 70, scope: !12610)
!12650 = !DILocalVariable(name: "card", scope: !12610, file: !3, line: 1263, type: !4229)
!12651 = !DILocation(line: 1263, column: 24, scope: !12610)
!12652 = !DILocalVariable(name: "flags", scope: !12610, file: !3, line: 1264, type: !126)
!12653 = !DILocation(line: 1264, column: 16, scope: !12610)
!12654 = !DILocalVariable(name: "retval", scope: !12610, file: !3, line: 1265, type: !139)
!12655 = !DILocation(line: 1265, column: 6, scope: !12610)
!12656 = !DILocalVariable(name: "channel", scope: !12610, file: !3, line: 1266, type: !139)
!12657 = !DILocation(line: 1266, column: 6, scope: !12610)
!12658 = !DILocalVariable(name: "page", scope: !12610, file: !3, line: 1267, type: !126)
!12659 = !DILocation(line: 1267, column: 16, scope: !12610)
!12660 = !DILocation(line: 1269, column: 9, scope: !12610)
!12661 = !DILocation(line: 1269, column: 15, scope: !12610)
!12662 = !DILocation(line: 1269, column: 7, scope: !12610)
!12663 = !DILocation(line: 1270, column: 12, scope: !12610)
!12664 = !DILocation(line: 1270, column: 18, scope: !12610)
!12665 = !DILocation(line: 1270, column: 25, scope: !12610)
!12666 = !DILocation(line: 1270, column: 31, scope: !12610)
!12667 = !DILocation(line: 1270, column: 23, scope: !12610)
!12668 = !DILocation(line: 1270, column: 10, scope: !12610)
!12669 = !DILocation(line: 1272, column: 9, scope: !12610)
!12670 = !DILocation(line: 1272, column: 7, scope: !12610)
!12671 = !DILocation(line: 1273, column: 7, scope: !12672)
!12672 = distinct !DILexicalBlock(scope: !12610, file: !3, line: 1273, column: 6)
!12673 = !DILocation(line: 1273, column: 6, scope: !12610)
!12674 = !DILocation(line: 1274, column: 3, scope: !12672)
!12675 = !DILocation(line: 1276, column: 2, scope: !12610)
!12676 = !DILocation(line: 1276, column: 2, scope: !12645)
!12677 = !DILocalVariable(name: "__dummy", scope: !12678, file: !3, line: 1276, type: !126)
!12678 = distinct !DILexicalBlock(scope: !12644, file: !3, line: 1276, column: 2)
!12679 = !DILocation(line: 1276, column: 2, scope: !12678)
!12680 = !DILocalVariable(name: "__dummy2", scope: !12678, file: !3, line: 1276, type: !126)
!12681 = !DILocation(line: 1276, column: 2, scope: !12644)
!12682 = !DILocation(line: 1276, column: 2, scope: !12643)
!12683 = !DILocation(line: 1276, column: 2, scope: !12684)
!12684 = distinct !DILexicalBlock(scope: !12643, file: !3, line: 1276, column: 2)
!12685 = !DILocalVariable(name: "__dummy", scope: !12686, file: !3, line: 1276, type: !126)
!12686 = distinct !DILexicalBlock(scope: !12687, file: !3, line: 1276, column: 2)
!12687 = distinct !DILexicalBlock(scope: !12684, file: !3, line: 1276, column: 2)
!12688 = !DILocation(line: 1276, column: 2, scope: !12686)
!12689 = !DILocalVariable(name: "__dummy2", scope: !12686, file: !3, line: 1276, type: !126)
!12690 = !DILocation(line: 1276, column: 2, scope: !12687)
!12691 = !DILocation(line: 1276, column: 2, scope: !12642)
!12692 = !{i32 -2141442252}
!12693 = !DILocation(line: 1276, column: 2, scope: !12641)
!12694 = !DILocation(line: 329, column: 10, scope: !7102, inlinedAt: !12640)
!12695 = !DILocation(line: 329, column: 16, scope: !7102, inlinedAt: !12640)
!12696 = !DILocation(line: 1278, column: 28, scope: !12697)
!12697 = distinct !DILexicalBlock(scope: !12610, file: !3, line: 1278, column: 6)
!12698 = !DILocation(line: 1278, column: 34, scope: !12697)
!12699 = !DILocation(line: 1278, column: 6, scope: !12697)
!12700 = !DILocation(line: 1278, column: 6, scope: !12610)
!12701 = !DILocation(line: 1279, column: 3, scope: !12697)
!12702 = !DILocation(line: 1281, column: 7, scope: !12703)
!12703 = distinct !DILexicalBlock(scope: !12610, file: !3, line: 1281, column: 6)
!12704 = !DILocation(line: 1281, column: 13, scope: !12703)
!12705 = !DILocation(line: 1281, column: 6, scope: !12610)
!12706 = !DILocation(line: 1282, column: 26, scope: !12707)
!12707 = distinct !DILexicalBlock(scope: !12703, file: !3, line: 1281, column: 19)
!12708 = !DILocation(line: 1282, column: 31, scope: !12707)
!12709 = !DILocation(line: 1282, column: 3, scope: !12707)
!12710 = !DILocation(line: 1283, column: 3, scope: !12707)
!12711 = !DILocation(line: 1286, column: 6, scope: !12712)
!12712 = distinct !DILexicalBlock(scope: !12610, file: !3, line: 1286, column: 6)
!12713 = !DILocation(line: 1286, column: 12, scope: !12712)
!12714 = !DILocation(line: 1286, column: 17, scope: !12712)
!12715 = !DILocation(line: 1286, column: 6, scope: !12610)
!12716 = !DILocation(line: 1287, column: 3, scope: !12712)
!12717 = !DILocation(line: 1289, column: 42, scope: !12712)
!12718 = !DILocation(line: 1289, column: 25, scope: !12712)
!12719 = !DILocation(line: 1289, column: 3, scope: !12712)
!12720 = !DILocation(line: 1289, column: 9, scope: !12712)
!12721 = !DILocation(line: 1289, column: 14, scope: !12712)
!12722 = !DILocation(line: 1289, column: 23, scope: !12712)
!12723 = !DILocation(line: 1291, column: 26, scope: !12610)
!12724 = !DILocation(line: 1291, column: 32, scope: !12610)
!12725 = !DILocation(line: 1291, column: 43, scope: !12610)
!12726 = !DILocation(line: 409, column: 2, scope: !9120, inlinedAt: !12634)
!12727 = !DILocation(line: 409, column: 2, scope: !9125, inlinedAt: !12634)
!12728 = !DILocation(line: 409, column: 2, scope: !9126, inlinedAt: !12634)
!12729 = !DILocation(line: 409, column: 2, scope: !9133, inlinedAt: !12634)
!12730 = !DILocation(line: 409, column: 2, scope: !9136, inlinedAt: !12634)
!12731 = !DILocation(line: 1293, column: 19, scope: !12610)
!12732 = !DILocation(line: 1293, column: 25, scope: !12610)
!12733 = !DILocation(line: 1293, column: 2, scope: !12610)
!12734 = !DILocation(line: 1295, column: 15, scope: !12624)
!12735 = !DILocation(line: 1295, column: 7, scope: !12624)
!12736 = !DILocation(line: 1295, column: 6, scope: !12610)
!12737 = !DILocation(line: 1296, column: 11, scope: !12632)
!12738 = !DILocation(line: 1298, column: 3, scope: !12632)
!12739 = !DILocation(line: 1298, column: 3, scope: !12631)
!12740 = !DILocalVariable(name: "__dummy", scope: !12741, file: !3, line: 1298, type: !126)
!12741 = distinct !DILexicalBlock(scope: !12630, file: !3, line: 1298, column: 3)
!12742 = !DILocation(line: 1298, column: 3, scope: !12741)
!12743 = !DILocalVariable(name: "__dummy2", scope: !12741, file: !3, line: 1298, type: !126)
!12744 = !DILocation(line: 1298, column: 3, scope: !12630)
!12745 = !DILocation(line: 1298, column: 3, scope: !12629)
!12746 = !DILocation(line: 1298, column: 3, scope: !12747)
!12747 = distinct !DILexicalBlock(scope: !12629, file: !3, line: 1298, column: 3)
!12748 = !DILocalVariable(name: "__dummy", scope: !12749, file: !3, line: 1298, type: !126)
!12749 = distinct !DILexicalBlock(scope: !12750, file: !3, line: 1298, column: 3)
!12750 = distinct !DILexicalBlock(scope: !12747, file: !3, line: 1298, column: 3)
!12751 = !DILocation(line: 1298, column: 3, scope: !12749)
!12752 = !DILocalVariable(name: "__dummy2", scope: !12749, file: !3, line: 1298, type: !126)
!12753 = !DILocation(line: 1298, column: 3, scope: !12750)
!12754 = !DILocation(line: 1298, column: 3, scope: !12628)
!12755 = !{i32 -2141441169}
!12756 = !DILocation(line: 1298, column: 3, scope: !12627)
!12757 = !DILocation(line: 329, column: 10, scope: !7102, inlinedAt: !12626)
!12758 = !DILocation(line: 329, column: 16, scope: !7102, inlinedAt: !12626)
!12759 = !DILocation(line: 1300, column: 14, scope: !12632)
!12760 = !DILocation(line: 1300, column: 27, scope: !12632)
!12761 = !DILocation(line: 1300, column: 3, scope: !12632)
!12762 = !DILocation(line: 1302, column: 14, scope: !12632)
!12763 = !DILocation(line: 1303, column: 5, scope: !12632)
!12764 = !DILocation(line: 1303, column: 11, scope: !12632)
!12765 = !DILocation(line: 1303, column: 29, scope: !12632)
!12766 = !DILocation(line: 1303, column: 35, scope: !12632)
!12767 = !DILocation(line: 1303, column: 4, scope: !12632)
!12768 = !DILocation(line: 1302, column: 3, scope: !12632)
!12769 = !DILocation(line: 1306, column: 17, scope: !12632)
!12770 = !DILocation(line: 1306, column: 3, scope: !12632)
!12771 = !DILocation(line: 1308, column: 22, scope: !12632)
!12772 = !DILocation(line: 1308, column: 3, scope: !12632)
!12773 = !DILocation(line: 1310, column: 14, scope: !12632)
!12774 = !DILocation(line: 1310, column: 38, scope: !12632)
!12775 = !DILocation(line: 1310, column: 28, scope: !12632)
!12776 = !DILocation(line: 1310, column: 52, scope: !12632)
!12777 = !DILocation(line: 1310, column: 3, scope: !12632)
!12778 = !DILocation(line: 1311, column: 2, scope: !12632)
!12779 = !DILocalVariable(name: "ch_ctrl", scope: !12623, file: !3, line: 1312, type: !4306)
!12780 = !DILocation(line: 1312, column: 27, scope: !12623)
!12781 = !DILocation(line: 1312, column: 37, scope: !12623)
!12782 = !DILocation(line: 1312, column: 43, scope: !12623)
!12783 = !DILocation(line: 1312, column: 45, scope: !12623)
!12784 = !DILocation(line: 1312, column: 49, scope: !12623)
!12785 = !DILocation(line: 1314, column: 22, scope: !12786)
!12786 = distinct !DILexicalBlock(scope: !12623, file: !3, line: 1314, column: 7)
!12787 = !DILocation(line: 1314, column: 8, scope: !12786)
!12788 = !DILocation(line: 1314, column: 7, scope: !12623)
!12789 = !DILocation(line: 1315, column: 4, scope: !12786)
!12790 = !DILocation(line: 1321, column: 3, scope: !12623)
!12791 = !DILocation(line: 1321, column: 3, scope: !12622)
!12792 = !DILocalVariable(name: "__dummy", scope: !12793, file: !3, line: 1321, type: !126)
!12793 = distinct !DILexicalBlock(scope: !12621, file: !3, line: 1321, column: 3)
!12794 = !DILocation(line: 1321, column: 3, scope: !12793)
!12795 = !DILocalVariable(name: "__dummy2", scope: !12793, file: !3, line: 1321, type: !126)
!12796 = !DILocation(line: 1321, column: 3, scope: !12621)
!12797 = !DILocation(line: 1321, column: 3, scope: !12620)
!12798 = !DILocation(line: 1321, column: 3, scope: !12799)
!12799 = distinct !DILexicalBlock(scope: !12620, file: !3, line: 1321, column: 3)
!12800 = !DILocalVariable(name: "__dummy", scope: !12801, file: !3, line: 1321, type: !126)
!12801 = distinct !DILexicalBlock(scope: !12802, file: !3, line: 1321, column: 3)
!12802 = distinct !DILexicalBlock(scope: !12799, file: !3, line: 1321, column: 3)
!12803 = !DILocation(line: 1321, column: 3, scope: !12801)
!12804 = !DILocalVariable(name: "__dummy2", scope: !12801, file: !3, line: 1321, type: !126)
!12805 = !DILocation(line: 1321, column: 3, scope: !12802)
!12806 = !DILocation(line: 1321, column: 3, scope: !12619)
!12807 = !{i32 -2141440036}
!12808 = !DILocation(line: 1321, column: 3, scope: !12618)
!12809 = !DILocation(line: 329, column: 10, scope: !7102, inlinedAt: !12617)
!12810 = !DILocation(line: 329, column: 16, scope: !7102, inlinedAt: !12617)
!12811 = !DILocation(line: 1323, column: 3, scope: !12623)
!12812 = !DILocation(line: 1323, column: 3, scope: !12813)
!12813 = distinct !DILexicalBlock(scope: !12623, file: !3, line: 1323, column: 3)
!12814 = !{i32 -2141439787}
!12815 = !DILocation(line: 1330, column: 3, scope: !12623)
!12816 = !DILocation(line: 1330, column: 3, scope: !12817)
!12817 = distinct !DILexicalBlock(scope: !12623, file: !3, line: 1330, column: 3)
!12818 = !{i32 -2141439632}
!12819 = !DILocation(line: 1343, column: 26, scope: !12623)
!12820 = !DILocation(line: 1343, column: 32, scope: !12623)
!12821 = !DILocation(line: 1343, column: 12, scope: !12623)
!12822 = !DILocation(line: 1343, column: 10, scope: !12623)
!12823 = !DILocation(line: 1344, column: 7, scope: !12824)
!12824 = distinct !DILexicalBlock(scope: !12623, file: !3, line: 1344, column: 7)
!12825 = !DILocation(line: 1344, column: 14, scope: !12824)
!12826 = !DILocation(line: 1344, column: 7, scope: !12623)
!12827 = !DILocation(line: 1346, column: 13, scope: !12828)
!12828 = distinct !DILexicalBlock(scope: !12824, file: !3, line: 1344, column: 20)
!12829 = !DILocation(line: 1346, column: 19, scope: !12828)
!12830 = !DILocation(line: 1346, column: 25, scope: !12828)
!12831 = !DILocation(line: 1345, column: 4, scope: !12828)
!12832 = !DILocation(line: 1347, column: 3, scope: !12828)
!12833 = !DILocation(line: 1350, column: 26, scope: !12623)
!12834 = !DILocation(line: 1350, column: 32, scope: !12623)
!12835 = !DILocation(line: 1350, column: 12, scope: !12623)
!12836 = !DILocation(line: 1350, column: 10, scope: !12623)
!12837 = !DILocation(line: 1351, column: 7, scope: !12838)
!12838 = distinct !DILexicalBlock(scope: !12623, file: !3, line: 1351, column: 7)
!12839 = !DILocation(line: 1351, column: 14, scope: !12838)
!12840 = !DILocation(line: 1351, column: 7, scope: !12623)
!12841 = !DILocation(line: 1353, column: 13, scope: !12842)
!12842 = distinct !DILexicalBlock(scope: !12838, file: !3, line: 1351, column: 20)
!12843 = !DILocation(line: 1353, column: 19, scope: !12842)
!12844 = !DILocation(line: 1353, column: 25, scope: !12842)
!12845 = !DILocation(line: 1352, column: 4, scope: !12842)
!12846 = !DILocation(line: 1354, column: 3, scope: !12842)
!12847 = !DILocation(line: 1358, column: 27, scope: !12623)
!12848 = !DILocation(line: 1358, column: 33, scope: !12623)
!12849 = !DILocation(line: 1358, column: 3, scope: !12623)
!12850 = !DILocation(line: 1363, column: 28, scope: !12610)
!12851 = !DILocation(line: 1363, column: 34, scope: !12610)
!12852 = !DILocation(line: 1363, column: 2, scope: !12610)
!12853 = !DILocation(line: 1365, column: 27, scope: !12610)
!12854 = !DILocation(line: 1365, column: 32, scope: !12610)
!12855 = !DILocation(line: 1365, column: 2, scope: !12610)
!12856 = !DILocation(line: 1366, column: 37, scope: !12610)
!12857 = !DILocation(line: 1366, column: 43, scope: !12610)
!12858 = !DILocation(line: 1366, column: 53, scope: !12610)
!12859 = !DILocation(line: 1366, column: 19, scope: !12610)
!12860 = !DILocation(line: 1366, column: 25, scope: !12610)
!12861 = !DILocation(line: 1366, column: 35, scope: !12610)
!12862 = !DILocation(line: 1366, column: 2, scope: !12610)
!12863 = !DILocation(line: 1366, column: 8, scope: !12610)
!12864 = !DILocation(line: 1366, column: 17, scope: !12610)
!12865 = !DILocation(line: 1367, column: 18, scope: !12610)
!12866 = !DILocation(line: 1367, column: 24, scope: !12610)
!12867 = !DILocation(line: 1367, column: 33, scope: !12610)
!12868 = !DILocation(line: 1367, column: 2, scope: !12610)
!12869 = !DILocation(line: 1367, column: 8, scope: !12610)
!12870 = !DILocation(line: 1367, column: 16, scope: !12610)
!12871 = !DILocation(line: 1368, column: 18, scope: !12610)
!12872 = !DILocation(line: 1368, column: 24, scope: !12610)
!12873 = !DILocation(line: 1368, column: 2, scope: !12610)
!12874 = !DILocation(line: 1371, column: 31, scope: !12610)
!12875 = !DILocation(line: 1371, column: 2, scope: !12610)
!12876 = !DILocation(line: 1371, column: 8, scope: !12610)
!12877 = !DILocation(line: 1371, column: 19, scope: !12610)
!12878 = !DILocation(line: 1371, column: 29, scope: !12610)
!12879 = !DILocation(line: 1370, column: 2, scope: !12610)
!12880 = !DILocation(line: 1370, column: 8, scope: !12610)
!12881 = !DILocation(line: 1370, column: 19, scope: !12610)
!12882 = !DILocation(line: 1370, column: 29, scope: !12610)
!12883 = !DILocation(line: 1369, column: 2, scope: !12610)
!12884 = !DILocation(line: 1369, column: 8, scope: !12610)
!12885 = !DILocation(line: 1369, column: 19, scope: !12610)
!12886 = !DILocation(line: 1369, column: 26, scope: !12610)
!12887 = !DILocation(line: 1373, column: 26, scope: !12610)
!12888 = !DILocation(line: 1373, column: 32, scope: !12610)
!12889 = !DILocation(line: 1373, column: 43, scope: !12610)
!12890 = !DILocation(line: 409, column: 2, scope: !9120, inlinedAt: !12614)
!12891 = !DILocation(line: 409, column: 2, scope: !9125, inlinedAt: !12614)
!12892 = !DILocation(line: 409, column: 2, scope: !9126, inlinedAt: !12614)
!12893 = !DILocation(line: 409, column: 2, scope: !9133, inlinedAt: !12614)
!12894 = !DILocation(line: 409, column: 2, scope: !9136, inlinedAt: !12614)
!12895 = !DILocation(line: 1378, column: 2, scope: !12610)
!12896 = !DILabel(scope: !12610, name: "errout", file: !3, line: 1380)
!12897 = !DILocation(line: 1380, column: 1, scope: !12610)
!12898 = !DILocation(line: 1381, column: 26, scope: !12610)
!12899 = !DILocation(line: 1381, column: 32, scope: !12610)
!12900 = !DILocation(line: 1381, column: 43, scope: !12610)
!12901 = !DILocation(line: 409, column: 2, scope: !9120, inlinedAt: !12637)
!12902 = !DILocation(line: 409, column: 2, scope: !9125, inlinedAt: !12637)
!12903 = !DILocation(line: 409, column: 2, scope: !9126, inlinedAt: !12637)
!12904 = !DILocation(line: 409, column: 2, scope: !9133, inlinedAt: !12637)
!12905 = !DILocation(line: 409, column: 2, scope: !9136, inlinedAt: !12637)
!12906 = !DILocation(line: 1382, column: 2, scope: !12610)
!12907 = !DILocation(line: 1383, column: 9, scope: !12610)
!12908 = !DILocation(line: 1383, column: 2, scope: !12610)
!12909 = !DILocation(line: 1384, column: 1, scope: !12610)
!12910 = distinct !DISubprogram(name: "cy_set_line_char", scope: !3, file: !3, line: 1961, type: !9431, scopeLine: 1962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!12911 = !DILocation(line: 407, column: 64, scope: !9014, inlinedAt: !12912)
!12912 = distinct !DILocation(line: 2137, column: 3, scope: !12913)
!12913 = distinct !DILexicalBlock(scope: !12914, file: !3, line: 1979, column: 22)
!12914 = distinct !DILexicalBlock(scope: !12910, file: !3, line: 1979, column: 6)
!12915 = !DILocation(line: 407, column: 84, scope: !9014, inlinedAt: !12912)
!12916 = !DILocation(line: 327, column: 67, scope: !7102, inlinedAt: !12917)
!12917 = distinct !DILocation(line: 2089, column: 3, scope: !12918)
!12918 = distinct !DILexicalBlock(scope: !12919, file: !3, line: 2089, column: 3)
!12919 = distinct !DILexicalBlock(scope: !12920, file: !3, line: 2089, column: 3)
!12920 = distinct !DILexicalBlock(scope: !12921, file: !3, line: 2089, column: 3)
!12921 = distinct !DILexicalBlock(scope: !12922, file: !3, line: 2089, column: 3)
!12922 = distinct !DILexicalBlock(scope: !12913, file: !3, line: 2089, column: 3)
!12923 = !DILocalVariable(name: "info", arg: 1, scope: !12910, file: !3, line: 1961, type: !134)
!12924 = !DILocation(line: 1961, column: 52, scope: !12910)
!12925 = !DILocalVariable(name: "tty", arg: 2, scope: !12910, file: !3, line: 1961, type: !233)
!12926 = !DILocation(line: 1961, column: 77, scope: !12910)
!12927 = !DILocalVariable(name: "card", scope: !12910, file: !3, line: 1963, type: !4229)
!12928 = !DILocation(line: 1963, column: 24, scope: !12910)
!12929 = !DILocalVariable(name: "flags", scope: !12910, file: !3, line: 1964, type: !126)
!12930 = !DILocation(line: 1964, column: 16, scope: !12910)
!12931 = !DILocalVariable(name: "channel", scope: !12910, file: !3, line: 1965, type: !139)
!12932 = !DILocation(line: 1965, column: 6, scope: !12910)
!12933 = !DILocalVariable(name: "cflag", scope: !12910, file: !3, line: 1966, type: !7)
!12934 = !DILocation(line: 1966, column: 11, scope: !12910)
!12935 = !DILocalVariable(name: "iflag", scope: !12910, file: !3, line: 1966, type: !7)
!12936 = !DILocation(line: 1966, column: 18, scope: !12910)
!12937 = !DILocalVariable(name: "baud", scope: !12910, file: !3, line: 1967, type: !139)
!12938 = !DILocation(line: 1967, column: 6, scope: !12910)
!12939 = !DILocalVariable(name: "baud_rate", scope: !12910, file: !3, line: 1967, type: !139)
!12940 = !DILocation(line: 1967, column: 12, scope: !12910)
!12941 = !DILocalVariable(name: "i", scope: !12910, file: !3, line: 1968, type: !139)
!12942 = !DILocation(line: 1968, column: 6, scope: !12910)
!12943 = !DILocation(line: 1970, column: 6, scope: !12944)
!12944 = distinct !DILexicalBlock(scope: !12910, file: !3, line: 1970, column: 6)
!12945 = !DILocation(line: 1970, column: 12, scope: !12944)
!12946 = !DILocation(line: 1970, column: 17, scope: !12944)
!12947 = !DILocation(line: 1970, column: 6, scope: !12910)
!12948 = !DILocation(line: 1971, column: 3, scope: !12944)
!12949 = !DILocation(line: 1973, column: 10, scope: !12910)
!12950 = !DILocation(line: 1973, column: 15, scope: !12910)
!12951 = !DILocation(line: 1973, column: 23, scope: !12910)
!12952 = !DILocation(line: 1973, column: 8, scope: !12910)
!12953 = !DILocation(line: 1974, column: 10, scope: !12910)
!12954 = !DILocation(line: 1974, column: 15, scope: !12910)
!12955 = !DILocation(line: 1974, column: 23, scope: !12910)
!12956 = !DILocation(line: 1974, column: 8, scope: !12910)
!12957 = !DILocation(line: 1976, column: 9, scope: !12910)
!12958 = !DILocation(line: 1976, column: 15, scope: !12910)
!12959 = !DILocation(line: 1976, column: 7, scope: !12910)
!12960 = !DILocation(line: 1977, column: 12, scope: !12910)
!12961 = !DILocation(line: 1977, column: 18, scope: !12910)
!12962 = !DILocation(line: 1977, column: 25, scope: !12910)
!12963 = !DILocation(line: 1977, column: 31, scope: !12910)
!12964 = !DILocation(line: 1977, column: 23, scope: !12910)
!12965 = !DILocation(line: 1977, column: 10, scope: !12910)
!12966 = !DILocation(line: 1979, column: 15, scope: !12914)
!12967 = !DILocation(line: 1979, column: 7, scope: !12914)
!12968 = !DILocation(line: 1979, column: 6, scope: !12910)
!12969 = !DILocalVariable(name: "cflags", scope: !12913, file: !3, line: 1980, type: !426)
!12970 = !DILocation(line: 1980, column: 7, scope: !12913)
!12971 = !DILocation(line: 1983, column: 28, scope: !12913)
!12972 = !DILocation(line: 1983, column: 10, scope: !12913)
!12973 = !DILocation(line: 1983, column: 8, scope: !12913)
!12974 = !DILocation(line: 1984, column: 7, scope: !12975)
!12975 = distinct !DILexicalBlock(scope: !12913, file: !3, line: 1984, column: 7)
!12976 = !DILocation(line: 1984, column: 12, scope: !12975)
!12977 = !DILocation(line: 1984, column: 21, scope: !12975)
!12978 = !DILocation(line: 1984, column: 25, scope: !12975)
!12979 = !DILocation(line: 1984, column: 31, scope: !12975)
!12980 = !DILocation(line: 1984, column: 36, scope: !12975)
!12981 = !DILocation(line: 1984, column: 42, scope: !12975)
!12982 = !DILocation(line: 1984, column: 60, scope: !12975)
!12983 = !DILocation(line: 1984, column: 7, scope: !12913)
!12984 = !DILocation(line: 1986, column: 8, scope: !12985)
!12985 = distinct !DILexicalBlock(scope: !12986, file: !3, line: 1986, column: 8)
!12986 = distinct !DILexicalBlock(scope: !12975, file: !3, line: 1985, column: 21)
!12987 = !DILocation(line: 1986, column: 14, scope: !12985)
!12988 = !DILocation(line: 1986, column: 8, scope: !12986)
!12989 = !DILocation(line: 1987, column: 17, scope: !12985)
!12990 = !DILocation(line: 1987, column: 23, scope: !12985)
!12991 = !DILocation(line: 1987, column: 30, scope: !12985)
!12992 = !DILocation(line: 1987, column: 36, scope: !12985)
!12993 = !DILocation(line: 1987, column: 28, scope: !12985)
!12994 = !DILocation(line: 1987, column: 15, scope: !12985)
!12995 = !DILocation(line: 1987, column: 5, scope: !12985)
!12996 = !DILocation(line: 1989, column: 17, scope: !12985)
!12997 = !DILocation(line: 1989, column: 23, scope: !12985)
!12998 = !DILocation(line: 1989, column: 15, scope: !12985)
!12999 = !DILocation(line: 1990, column: 3, scope: !12986)
!13000 = !DILocation(line: 1990, column: 14, scope: !13001)
!13001 = distinct !DILexicalBlock(scope: !12975, file: !3, line: 1990, column: 14)
!13002 = !DILocation(line: 1990, column: 19, scope: !13001)
!13003 = !DILocation(line: 1990, column: 14, scope: !12975)
!13004 = !DILocation(line: 1991, column: 9, scope: !13005)
!13005 = distinct !DILexicalBlock(scope: !13001, file: !3, line: 1990, column: 39)
!13006 = !DILocation(line: 1992, column: 3, scope: !13005)
!13007 = !DILocation(line: 1994, column: 10, scope: !13008)
!13008 = distinct !DILexicalBlock(scope: !12913, file: !3, line: 1994, column: 3)
!13009 = !DILocation(line: 1994, column: 8, scope: !13008)
!13010 = !DILocation(line: 1994, column: 15, scope: !13011)
!13011 = distinct !DILexicalBlock(scope: !13008, file: !3, line: 1994, column: 3)
!13012 = !DILocation(line: 1994, column: 17, scope: !13011)
!13013 = !DILocation(line: 1994, column: 3, scope: !13008)
!13014 = !DILocation(line: 1995, column: 8, scope: !13015)
!13015 = distinct !DILexicalBlock(scope: !13016, file: !3, line: 1995, column: 8)
!13016 = distinct !DILexicalBlock(scope: !13011, file: !3, line: 1994, column: 28)
!13017 = !DILocation(line: 1995, column: 27, scope: !13015)
!13018 = !DILocation(line: 1995, column: 16, scope: !13015)
!13019 = !DILocation(line: 1995, column: 13, scope: !13015)
!13020 = !DILocation(line: 1995, column: 8, scope: !13016)
!13021 = !DILocation(line: 1996, column: 5, scope: !13015)
!13022 = !DILocation(line: 1997, column: 3, scope: !13016)
!13023 = !DILocation(line: 1994, column: 24, scope: !13011)
!13024 = !DILocation(line: 1994, column: 3, scope: !13011)
!13025 = distinct !{!13025, !13013, !13026}
!13026 = !DILocation(line: 1997, column: 3, scope: !13008)
!13027 = !DILocation(line: 1998, column: 7, scope: !13028)
!13028 = distinct !DILexicalBlock(scope: !12913, file: !3, line: 1998, column: 7)
!13029 = !DILocation(line: 1998, column: 9, scope: !13028)
!13030 = !DILocation(line: 1998, column: 7, scope: !12913)
!13031 = !DILocation(line: 1999, column: 6, scope: !13028)
!13032 = !DILocation(line: 1999, column: 4, scope: !13028)
!13033 = !DILocation(line: 2001, column: 7, scope: !13034)
!13034 = distinct !DILexicalBlock(scope: !12913, file: !3, line: 2001, column: 7)
!13035 = !DILocation(line: 2001, column: 12, scope: !13034)
!13036 = !DILocation(line: 2001, column: 21, scope: !13034)
!13037 = !DILocation(line: 2001, column: 25, scope: !13034)
!13038 = !DILocation(line: 2001, column: 31, scope: !13034)
!13039 = !DILocation(line: 2001, column: 36, scope: !13034)
!13040 = !DILocation(line: 2001, column: 42, scope: !13034)
!13041 = !DILocation(line: 2001, column: 60, scope: !13034)
!13042 = !DILocation(line: 2001, column: 7, scope: !12913)
!13043 = !DILocation(line: 2003, column: 18, scope: !13044)
!13044 = distinct !DILexicalBlock(scope: !13034, file: !3, line: 2002, column: 21)
!13045 = !DILocation(line: 2003, column: 24, scope: !13044)
!13046 = !DILocation(line: 2003, column: 4, scope: !13044)
!13047 = !DILocation(line: 2004, column: 3, scope: !13044)
!13048 = !DILocation(line: 2005, column: 8, scope: !13049)
!13049 = distinct !DILexicalBlock(scope: !13050, file: !3, line: 2005, column: 8)
!13050 = distinct !DILexicalBlock(scope: !13034, file: !3, line: 2004, column: 10)
!13051 = !DILocation(line: 2005, column: 14, scope: !13049)
!13052 = !DILocation(line: 2005, column: 23, scope: !13049)
!13053 = !DILocation(line: 2005, column: 8, scope: !13050)
!13054 = !DILocation(line: 2007, column: 30, scope: !13055)
!13055 = distinct !DILexicalBlock(scope: !13049, file: !3, line: 2005, column: 40)
!13056 = !DILocation(line: 2007, column: 18, scope: !13055)
!13057 = !DILocation(line: 2007, column: 5, scope: !13055)
!13058 = !DILocation(line: 2007, column: 11, scope: !13055)
!13059 = !DILocation(line: 2007, column: 16, scope: !13055)
!13060 = !DILocation(line: 2008, column: 28, scope: !13055)
!13061 = !DILocation(line: 2008, column: 17, scope: !13055)
!13062 = !DILocation(line: 2008, column: 5, scope: !13055)
!13063 = !DILocation(line: 2008, column: 11, scope: !13055)
!13064 = !DILocation(line: 2008, column: 15, scope: !13055)
!13065 = !DILocation(line: 2009, column: 30, scope: !13055)
!13066 = !DILocation(line: 2009, column: 18, scope: !13055)
!13067 = !DILocation(line: 2009, column: 5, scope: !13055)
!13068 = !DILocation(line: 2009, column: 11, scope: !13055)
!13069 = !DILocation(line: 2009, column: 16, scope: !13055)
!13070 = !DILocation(line: 2010, column: 28, scope: !13055)
!13071 = !DILocation(line: 2010, column: 17, scope: !13055)
!13072 = !DILocation(line: 2010, column: 5, scope: !13055)
!13073 = !DILocation(line: 2010, column: 11, scope: !13055)
!13074 = !DILocation(line: 2010, column: 15, scope: !13055)
!13075 = !DILocation(line: 2011, column: 4, scope: !13055)
!13076 = !DILocation(line: 2012, column: 30, scope: !13077)
!13077 = distinct !DILexicalBlock(scope: !13049, file: !3, line: 2011, column: 11)
!13078 = !DILocation(line: 2012, column: 18, scope: !13077)
!13079 = !DILocation(line: 2012, column: 5, scope: !13077)
!13080 = !DILocation(line: 2012, column: 11, scope: !13077)
!13081 = !DILocation(line: 2012, column: 16, scope: !13077)
!13082 = !DILocation(line: 2013, column: 28, scope: !13077)
!13083 = !DILocation(line: 2013, column: 17, scope: !13077)
!13084 = !DILocation(line: 2013, column: 5, scope: !13077)
!13085 = !DILocation(line: 2013, column: 11, scope: !13077)
!13086 = !DILocation(line: 2013, column: 15, scope: !13077)
!13087 = !DILocation(line: 2014, column: 30, scope: !13077)
!13088 = !DILocation(line: 2014, column: 18, scope: !13077)
!13089 = !DILocation(line: 2014, column: 5, scope: !13077)
!13090 = !DILocation(line: 2014, column: 11, scope: !13077)
!13091 = !DILocation(line: 2014, column: 16, scope: !13077)
!13092 = !DILocation(line: 2015, column: 28, scope: !13077)
!13093 = !DILocation(line: 2015, column: 17, scope: !13077)
!13094 = !DILocation(line: 2015, column: 5, scope: !13077)
!13095 = !DILocation(line: 2015, column: 11, scope: !13077)
!13096 = !DILocation(line: 2015, column: 15, scope: !13077)
!13097 = !DILocation(line: 2018, column: 18, scope: !13098)
!13098 = distinct !DILexicalBlock(scope: !12913, file: !3, line: 2018, column: 7)
!13099 = !DILocation(line: 2018, column: 7, scope: !13098)
!13100 = !DILocation(line: 2018, column: 21, scope: !13098)
!13101 = !DILocation(line: 2018, column: 7, scope: !12913)
!13102 = !DILocation(line: 2020, column: 21, scope: !13103)
!13103 = distinct !DILexicalBlock(scope: !13098, file: !3, line: 2018, column: 29)
!13104 = !DILocation(line: 2020, column: 27, scope: !13103)
!13105 = !DILocation(line: 2020, column: 42, scope: !13103)
!13106 = !DILocation(line: 2020, column: 47, scope: !13103)
!13107 = !DILocation(line: 2020, column: 52, scope: !13103)
!13108 = !DILocation(line: 2020, column: 59, scope: !13103)
!13109 = !DILocation(line: 2020, column: 4, scope: !13103)
!13110 = !DILocation(line: 2020, column: 10, scope: !13103)
!13111 = !DILocation(line: 2020, column: 18, scope: !13103)
!13112 = !DILocation(line: 2022, column: 3, scope: !13103)
!13113 = !DILocation(line: 2022, column: 14, scope: !13114)
!13114 = distinct !DILexicalBlock(scope: !13098, file: !3, line: 2022, column: 14)
!13115 = !DILocation(line: 2022, column: 19, scope: !13114)
!13116 = !DILocation(line: 2022, column: 28, scope: !13114)
!13117 = !DILocation(line: 2022, column: 32, scope: !13114)
!13118 = !DILocation(line: 2022, column: 38, scope: !13114)
!13119 = !DILocation(line: 2022, column: 43, scope: !13114)
!13120 = !DILocation(line: 2022, column: 49, scope: !13114)
!13121 = !DILocation(line: 2022, column: 67, scope: !13114)
!13122 = !DILocation(line: 2022, column: 14, scope: !13098)
!13123 = !DILocation(line: 2024, column: 21, scope: !13124)
!13124 = distinct !DILexicalBlock(scope: !13114, file: !3, line: 2023, column: 21)
!13125 = !DILocation(line: 2024, column: 27, scope: !13124)
!13126 = !DILocation(line: 2024, column: 42, scope: !13124)
!13127 = !DILocation(line: 2024, column: 47, scope: !13124)
!13128 = !DILocation(line: 2025, column: 6, scope: !13124)
!13129 = !DILocation(line: 2024, column: 52, scope: !13124)
!13130 = !DILocation(line: 2025, column: 17, scope: !13124)
!13131 = !DILocation(line: 2024, column: 4, scope: !13124)
!13132 = !DILocation(line: 2024, column: 10, scope: !13124)
!13133 = !DILocation(line: 2024, column: 18, scope: !13124)
!13134 = !DILocation(line: 2026, column: 3, scope: !13124)
!13135 = !DILocation(line: 2026, column: 25, scope: !13136)
!13136 = distinct !DILexicalBlock(scope: !13114, file: !3, line: 2026, column: 14)
!13137 = !DILocation(line: 2026, column: 14, scope: !13136)
!13138 = !DILocation(line: 2026, column: 14, scope: !13114)
!13139 = !DILocation(line: 2027, column: 21, scope: !13140)
!13140 = distinct !DILexicalBlock(scope: !13136, file: !3, line: 2026, column: 29)
!13141 = !DILocation(line: 2027, column: 27, scope: !13140)
!13142 = !DILocation(line: 2027, column: 42, scope: !13140)
!13143 = !DILocation(line: 2027, column: 47, scope: !13140)
!13144 = !DILocation(line: 2028, column: 17, scope: !13140)
!13145 = !DILocation(line: 2028, column: 6, scope: !13140)
!13146 = !DILocation(line: 2027, column: 52, scope: !13140)
!13147 = !DILocation(line: 2028, column: 21, scope: !13140)
!13148 = !DILocation(line: 2027, column: 4, scope: !13140)
!13149 = !DILocation(line: 2027, column: 10, scope: !13140)
!13150 = !DILocation(line: 2027, column: 18, scope: !13140)
!13151 = !DILocation(line: 2030, column: 3, scope: !13140)
!13152 = !DILocation(line: 2031, column: 4, scope: !13153)
!13153 = distinct !DILexicalBlock(scope: !13136, file: !3, line: 2030, column: 10)
!13154 = !DILocation(line: 2031, column: 10, scope: !13153)
!13155 = !DILocation(line: 2031, column: 18, scope: !13153)
!13156 = !DILocation(line: 2038, column: 3, scope: !12913)
!13157 = !DILocation(line: 2038, column: 9, scope: !12913)
!13158 = !DILocation(line: 2038, column: 14, scope: !12913)
!13159 = !DILocation(line: 2039, column: 3, scope: !12913)
!13160 = !DILocation(line: 2039, column: 9, scope: !12913)
!13161 = !DILocation(line: 2039, column: 14, scope: !12913)
!13162 = !DILocation(line: 2041, column: 17, scope: !12913)
!13163 = !DILocation(line: 2041, column: 23, scope: !12913)
!13164 = !DILocation(line: 2042, column: 5, scope: !12913)
!13165 = !DILocation(line: 2042, column: 11, scope: !12913)
!13166 = !DILocation(line: 2042, column: 41, scope: !12913)
!13167 = !DILocation(line: 2042, column: 31, scope: !12913)
!13168 = !DILocation(line: 2041, column: 3, scope: !12913)
!13169 = !DILocation(line: 2041, column: 9, scope: !12913)
!13170 = !DILocation(line: 2041, column: 14, scope: !12913)
!13171 = !DILocation(line: 2043, column: 3, scope: !12913)
!13172 = !DILocation(line: 2043, column: 9, scope: !12913)
!13173 = !DILocation(line: 2043, column: 14, scope: !12913)
!13174 = !DILocation(line: 2044, column: 11, scope: !12913)
!13175 = !DILocation(line: 2044, column: 17, scope: !12913)
!13176 = !DILocation(line: 2044, column: 3, scope: !12913)
!13177 = !DILocation(line: 2046, column: 4, scope: !13178)
!13178 = distinct !DILexicalBlock(scope: !12913, file: !3, line: 2044, column: 26)
!13179 = !DILocation(line: 2046, column: 10, scope: !13178)
!13180 = !DILocation(line: 2046, column: 15, scope: !13178)
!13181 = !DILocation(line: 2047, column: 4, scope: !13178)
!13182 = !DILocation(line: 2049, column: 4, scope: !13178)
!13183 = !DILocation(line: 2049, column: 10, scope: !13178)
!13184 = !DILocation(line: 2049, column: 15, scope: !13178)
!13185 = !DILocation(line: 2050, column: 4, scope: !13178)
!13186 = !DILocation(line: 2052, column: 4, scope: !13178)
!13187 = !DILocation(line: 2052, column: 10, scope: !13178)
!13188 = !DILocation(line: 2052, column: 15, scope: !13178)
!13189 = !DILocation(line: 2053, column: 4, scope: !13178)
!13190 = !DILocation(line: 2055, column: 4, scope: !13178)
!13191 = !DILocation(line: 2055, column: 10, scope: !13178)
!13192 = !DILocation(line: 2055, column: 15, scope: !13178)
!13193 = !DILocation(line: 2056, column: 4, scope: !13178)
!13194 = !DILocation(line: 2058, column: 7, scope: !13195)
!13195 = distinct !DILexicalBlock(scope: !12913, file: !3, line: 2058, column: 7)
!13196 = !DILocation(line: 2058, column: 13, scope: !13195)
!13197 = !DILocation(line: 2058, column: 7, scope: !12913)
!13198 = !DILocation(line: 2059, column: 4, scope: !13195)
!13199 = !DILocation(line: 2059, column: 10, scope: !13195)
!13200 = !DILocation(line: 2059, column: 15, scope: !13195)
!13201 = !DILocation(line: 2061, column: 7, scope: !13202)
!13202 = distinct !DILexicalBlock(scope: !12913, file: !3, line: 2061, column: 7)
!13203 = !DILocation(line: 2061, column: 13, scope: !13202)
!13204 = !DILocation(line: 2061, column: 7, scope: !12913)
!13205 = !DILocation(line: 2062, column: 8, scope: !13206)
!13206 = distinct !DILexicalBlock(scope: !13207, file: !3, line: 2062, column: 8)
!13207 = distinct !DILexicalBlock(scope: !13202, file: !3, line: 2061, column: 23)
!13208 = !DILocation(line: 2062, column: 14, scope: !13206)
!13209 = !DILocation(line: 2062, column: 8, scope: !13207)
!13210 = !DILocation(line: 2063, column: 5, scope: !13206)
!13211 = !DILocation(line: 2063, column: 11, scope: !13206)
!13212 = !DILocation(line: 2063, column: 16, scope: !13206)
!13213 = !DILocation(line: 2065, column: 5, scope: !13206)
!13214 = !DILocation(line: 2065, column: 11, scope: !13206)
!13215 = !DILocation(line: 2065, column: 16, scope: !13206)
!13216 = !DILocation(line: 2066, column: 3, scope: !13207)
!13217 = !DILocation(line: 2067, column: 4, scope: !13202)
!13218 = !DILocation(line: 2067, column: 10, scope: !13202)
!13219 = !DILocation(line: 2067, column: 15, scope: !13202)
!13220 = !DILocation(line: 2070, column: 26, scope: !12913)
!13221 = !DILocation(line: 2070, column: 32, scope: !12913)
!13222 = !DILocation(line: 2070, column: 38, scope: !12913)
!13223 = !DILocation(line: 2070, column: 44, scope: !12913)
!13224 = !DILocation(line: 2070, column: 3, scope: !12913)
!13225 = !DILocation(line: 2071, column: 7, scope: !13226)
!13226 = distinct !DILexicalBlock(scope: !12913, file: !3, line: 2071, column: 7)
!13227 = !DILocation(line: 2071, column: 13, scope: !13226)
!13228 = !DILocation(line: 2071, column: 7, scope: !12913)
!13229 = !DILocation(line: 2072, column: 4, scope: !13226)
!13230 = !DILocation(line: 2072, column: 10, scope: !13226)
!13231 = !DILocation(line: 2072, column: 15, scope: !13226)
!13232 = !DILocation(line: 2074, column: 4, scope: !13226)
!13233 = !DILocation(line: 2074, column: 10, scope: !13226)
!13234 = !DILocation(line: 2074, column: 15, scope: !13226)
!13235 = !DILocation(line: 2075, column: 31, scope: !12913)
!13236 = !DILocation(line: 2075, column: 37, scope: !12913)
!13237 = !DILocation(line: 2075, column: 44, scope: !12913)
!13238 = !DILocation(line: 2075, column: 43, scope: !12913)
!13239 = !DILocation(line: 2075, column: 50, scope: !12913)
!13240 = !DILocation(line: 2075, column: 3, scope: !12913)
!13241 = !DILocation(line: 2087, column: 11, scope: !12913)
!13242 = !DILocation(line: 2089, column: 3, scope: !12913)
!13243 = !DILocation(line: 2089, column: 3, scope: !12922)
!13244 = !DILocalVariable(name: "__dummy", scope: !13245, file: !3, line: 2089, type: !126)
!13245 = distinct !DILexicalBlock(scope: !12921, file: !3, line: 2089, column: 3)
!13246 = !DILocation(line: 2089, column: 3, scope: !13245)
!13247 = !DILocalVariable(name: "__dummy2", scope: !13245, file: !3, line: 2089, type: !126)
!13248 = !DILocation(line: 2089, column: 3, scope: !12921)
!13249 = !DILocation(line: 2089, column: 3, scope: !12920)
!13250 = !DILocation(line: 2089, column: 3, scope: !13251)
!13251 = distinct !DILexicalBlock(scope: !12920, file: !3, line: 2089, column: 3)
!13252 = !DILocalVariable(name: "__dummy", scope: !13253, file: !3, line: 2089, type: !126)
!13253 = distinct !DILexicalBlock(scope: !13254, file: !3, line: 2089, column: 3)
!13254 = distinct !DILexicalBlock(scope: !13251, file: !3, line: 2089, column: 3)
!13255 = !DILocation(line: 2089, column: 3, scope: !13253)
!13256 = !DILocalVariable(name: "__dummy2", scope: !13253, file: !3, line: 2089, type: !126)
!13257 = !DILocation(line: 2089, column: 3, scope: !13254)
!13258 = !DILocation(line: 2089, column: 3, scope: !12919)
!13259 = !{i32 -2141419251}
!13260 = !DILocation(line: 2089, column: 3, scope: !12918)
!13261 = !DILocation(line: 329, column: 10, scope: !7102, inlinedAt: !12917)
!13262 = !DILocation(line: 329, column: 16, scope: !7102, inlinedAt: !12917)
!13263 = !DILocation(line: 2090, column: 14, scope: !12913)
!13264 = !DILocation(line: 2090, column: 27, scope: !12913)
!13265 = !DILocation(line: 2090, column: 3, scope: !12913)
!13266 = !DILocation(line: 2094, column: 14, scope: !12913)
!13267 = !DILocation(line: 2094, column: 28, scope: !12913)
!13268 = !DILocation(line: 2094, column: 34, scope: !12913)
!13269 = !DILocation(line: 2094, column: 3, scope: !12913)
!13270 = !DILocation(line: 2095, column: 14, scope: !12913)
!13271 = !DILocation(line: 2095, column: 28, scope: !12913)
!13272 = !DILocation(line: 2095, column: 34, scope: !12913)
!13273 = !DILocation(line: 2095, column: 3, scope: !12913)
!13274 = !DILocation(line: 2096, column: 14, scope: !12913)
!13275 = !DILocation(line: 2096, column: 28, scope: !12913)
!13276 = !DILocation(line: 2096, column: 34, scope: !12913)
!13277 = !DILocation(line: 2096, column: 3, scope: !12913)
!13278 = !DILocation(line: 2097, column: 14, scope: !12913)
!13279 = !DILocation(line: 2097, column: 28, scope: !12913)
!13280 = !DILocation(line: 2097, column: 34, scope: !12913)
!13281 = !DILocation(line: 2097, column: 3, scope: !12913)
!13282 = !DILocation(line: 2101, column: 14, scope: !12913)
!13283 = !DILocation(line: 2101, column: 29, scope: !12913)
!13284 = !DILocation(line: 2101, column: 3, scope: !12913)
!13285 = !DILocation(line: 2102, column: 14, scope: !12913)
!13286 = !DILocation(line: 2102, column: 29, scope: !12913)
!13287 = !DILocation(line: 2102, column: 3, scope: !12913)
!13288 = !DILocation(line: 2103, column: 14, scope: !12913)
!13289 = !DILocation(line: 2103, column: 28, scope: !12913)
!13290 = !DILocation(line: 2103, column: 34, scope: !12913)
!13291 = !DILocation(line: 2103, column: 3, scope: !12913)
!13292 = !DILocation(line: 2104, column: 14, scope: !12913)
!13293 = !DILocation(line: 2104, column: 28, scope: !12913)
!13294 = !DILocation(line: 2104, column: 34, scope: !12913)
!13295 = !DILocation(line: 2104, column: 3, scope: !12913)
!13296 = !DILocation(line: 2105, column: 14, scope: !12913)
!13297 = !DILocation(line: 2105, column: 28, scope: !12913)
!13298 = !DILocation(line: 2105, column: 34, scope: !12913)
!13299 = !DILocation(line: 2105, column: 3, scope: !12913)
!13300 = !DILocation(line: 2106, column: 14, scope: !12913)
!13301 = !DILocation(line: 2106, column: 28, scope: !12913)
!13302 = !DILocation(line: 2106, column: 34, scope: !12913)
!13303 = !DILocation(line: 2106, column: 3, scope: !12913)
!13304 = !DILocation(line: 2107, column: 14, scope: !12913)
!13305 = !DILocation(line: 2107, column: 28, scope: !12913)
!13306 = !DILocation(line: 2107, column: 34, scope: !12913)
!13307 = !DILocation(line: 2107, column: 3, scope: !12913)
!13308 = !DILocation(line: 2109, column: 17, scope: !12913)
!13309 = !DILocation(line: 2109, column: 3, scope: !12913)
!13310 = !DILocation(line: 2113, column: 14, scope: !12913)
!13311 = !DILocation(line: 2113, column: 27, scope: !12913)
!13312 = !DILocation(line: 2113, column: 3, scope: !12913)
!13313 = !DILocation(line: 2114, column: 14, scope: !12913)
!13314 = !DILocation(line: 2115, column: 5, scope: !12913)
!13315 = !DILocation(line: 2115, column: 11, scope: !12913)
!13316 = !DILocation(line: 2115, column: 29, scope: !12913)
!13317 = !DILocation(line: 2115, column: 35, scope: !12913)
!13318 = !DILocation(line: 2115, column: 4, scope: !12913)
!13319 = !DILocation(line: 2114, column: 3, scope: !12913)
!13320 = !DILocation(line: 2118, column: 10, scope: !12913)
!13321 = !DILocation(line: 2119, column: 8, scope: !13322)
!13322 = distinct !DILexicalBlock(scope: !12913, file: !3, line: 2119, column: 7)
!13323 = !DILocation(line: 2119, column: 7, scope: !12913)
!13324 = !DILocation(line: 2120, column: 11, scope: !13322)
!13325 = !DILocation(line: 2120, column: 4, scope: !13322)
!13326 = !DILocation(line: 2122, column: 14, scope: !12913)
!13327 = !DILocation(line: 2122, column: 38, scope: !12913)
!13328 = !DILocation(line: 2122, column: 28, scope: !12913)
!13329 = !DILocation(line: 2122, column: 52, scope: !12913)
!13330 = !DILocation(line: 2122, column: 3, scope: !12913)
!13331 = !DILocation(line: 2124, column: 8, scope: !13332)
!13332 = distinct !DILexicalBlock(scope: !12913, file: !3, line: 2124, column: 7)
!13333 = !DILocation(line: 2124, column: 14, scope: !13332)
!13334 = !DILocation(line: 2124, column: 25, scope: !13332)
!13335 = !DILocation(line: 2124, column: 28, scope: !13332)
!13336 = !DILocation(line: 2124, column: 34, scope: !13332)
!13337 = !DILocation(line: 2124, column: 7, scope: !12913)
!13338 = !DILocation(line: 2125, column: 15, scope: !13332)
!13339 = !DILocation(line: 2125, column: 30, scope: !13332)
!13340 = !DILocation(line: 2125, column: 49, scope: !13332)
!13341 = !DILocation(line: 2125, column: 39, scope: !13332)
!13342 = !DILocation(line: 2125, column: 37, scope: !13332)
!13343 = !DILocation(line: 2125, column: 4, scope: !13332)
!13344 = !DILocation(line: 2127, column: 15, scope: !13332)
!13345 = !DILocation(line: 2127, column: 30, scope: !13332)
!13346 = !DILocation(line: 2127, column: 4, scope: !13332)
!13347 = !DILocation(line: 2129, column: 14, scope: !12913)
!13348 = !DILocation(line: 2129, column: 29, scope: !12913)
!13349 = !DILocation(line: 2129, column: 3, scope: !12913)
!13350 = !DILocation(line: 2131, column: 7, scope: !13351)
!13351 = distinct !DILexicalBlock(scope: !12913, file: !3, line: 2131, column: 7)
!13352 = !DILocation(line: 2131, column: 9, scope: !13351)
!13353 = !DILocation(line: 2131, column: 7, scope: !12913)
!13354 = !DILocation(line: 2132, column: 23, scope: !13351)
!13355 = !DILocation(line: 2132, column: 4, scope: !13351)
!13356 = !DILocation(line: 2134, column: 23, scope: !13351)
!13357 = !DILocation(line: 2134, column: 4, scope: !13351)
!13358 = !DILocation(line: 2136, column: 28, scope: !12913)
!13359 = !DILocation(line: 2136, column: 33, scope: !12913)
!13360 = !DILocation(line: 2136, column: 3, scope: !12913)
!13361 = !DILocation(line: 2137, column: 27, scope: !12913)
!13362 = !DILocation(line: 2137, column: 33, scope: !12913)
!13363 = !DILocation(line: 2137, column: 44, scope: !12913)
!13364 = !DILocation(line: 409, column: 2, scope: !9120, inlinedAt: !12912)
!13365 = !DILocation(line: 409, column: 2, scope: !9125, inlinedAt: !12912)
!13366 = !DILocation(line: 409, column: 2, scope: !9126, inlinedAt: !12912)
!13367 = !DILocation(line: 409, column: 2, scope: !9133, inlinedAt: !12912)
!13368 = !DILocation(line: 409, column: 2, scope: !9136, inlinedAt: !12912)
!13369 = !DILocation(line: 2139, column: 2, scope: !12913)
!13370 = !DILocalVariable(name: "ch_ctrl", scope: !13371, file: !3, line: 2140, type: !4306)
!13371 = distinct !DILexicalBlock(scope: !12914, file: !3, line: 2139, column: 9)
!13372 = !DILocation(line: 2140, column: 27, scope: !13371)
!13373 = !DILocation(line: 2140, column: 37, scope: !13371)
!13374 = !DILocation(line: 2140, column: 43, scope: !13371)
!13375 = !DILocation(line: 2140, column: 45, scope: !13371)
!13376 = !DILocation(line: 2140, column: 49, scope: !13371)
!13377 = !DILocalVariable(name: "sw_flow", scope: !13371, file: !3, line: 2141, type: !120)
!13378 = !DILocation(line: 2141, column: 9, scope: !13371)
!13379 = !DILocalVariable(name: "retval", scope: !13371, file: !3, line: 2142, type: !139)
!13380 = !DILocation(line: 2142, column: 7, scope: !13371)
!13381 = !DILocation(line: 2144, column: 22, scope: !13382)
!13382 = distinct !DILexicalBlock(scope: !13371, file: !3, line: 2144, column: 7)
!13383 = !DILocation(line: 2144, column: 8, scope: !13382)
!13384 = !DILocation(line: 2144, column: 7, scope: !13371)
!13385 = !DILocation(line: 2145, column: 4, scope: !13382)
!13386 = !DILocation(line: 2148, column: 28, scope: !13371)
!13387 = !DILocation(line: 2148, column: 10, scope: !13371)
!13388 = !DILocation(line: 2148, column: 8, scope: !13371)
!13389 = !DILocation(line: 2149, column: 7, scope: !13390)
!13390 = distinct !DILexicalBlock(scope: !13371, file: !3, line: 2149, column: 7)
!13391 = !DILocation(line: 2149, column: 12, scope: !13390)
!13392 = !DILocation(line: 2149, column: 21, scope: !13390)
!13393 = !DILocation(line: 2149, column: 25, scope: !13390)
!13394 = !DILocation(line: 2149, column: 31, scope: !13390)
!13395 = !DILocation(line: 2149, column: 36, scope: !13390)
!13396 = !DILocation(line: 2149, column: 42, scope: !13390)
!13397 = !DILocation(line: 2149, column: 60, scope: !13390)
!13398 = !DILocation(line: 2149, column: 7, scope: !13371)
!13399 = !DILocation(line: 2151, column: 8, scope: !13400)
!13400 = distinct !DILexicalBlock(scope: !13401, file: !3, line: 2151, column: 8)
!13401 = distinct !DILexicalBlock(scope: !13390, file: !3, line: 2150, column: 21)
!13402 = !DILocation(line: 2151, column: 14, scope: !13400)
!13403 = !DILocation(line: 2151, column: 8, scope: !13401)
!13404 = !DILocation(line: 2152, column: 17, scope: !13400)
!13405 = !DILocation(line: 2152, column: 23, scope: !13400)
!13406 = !DILocation(line: 2152, column: 30, scope: !13400)
!13407 = !DILocation(line: 2152, column: 36, scope: !13400)
!13408 = !DILocation(line: 2152, column: 28, scope: !13400)
!13409 = !DILocation(line: 2152, column: 15, scope: !13400)
!13410 = !DILocation(line: 2152, column: 5, scope: !13400)
!13411 = !DILocation(line: 2154, column: 17, scope: !13400)
!13412 = !DILocation(line: 2154, column: 23, scope: !13400)
!13413 = !DILocation(line: 2154, column: 15, scope: !13400)
!13414 = !DILocation(line: 2155, column: 3, scope: !13401)
!13415 = !DILocation(line: 2155, column: 14, scope: !13416)
!13416 = distinct !DILexicalBlock(scope: !13390, file: !3, line: 2155, column: 14)
!13417 = !DILocation(line: 2155, column: 19, scope: !13416)
!13418 = !DILocation(line: 2155, column: 14, scope: !13390)
!13419 = !DILocation(line: 2156, column: 9, scope: !13420)
!13420 = distinct !DILexicalBlock(scope: !13416, file: !3, line: 2155, column: 36)
!13421 = !DILocation(line: 2157, column: 3, scope: !13420)
!13422 = !DILocation(line: 2158, column: 3, scope: !13371)
!13423 = !DILocation(line: 2158, column: 3, scope: !13424)
!13424 = distinct !DILexicalBlock(scope: !13371, file: !3, line: 2158, column: 3)
!13425 = !{i32 -2141418393}
!13426 = !DILocation(line: 2160, column: 7, scope: !13427)
!13427 = distinct !DILexicalBlock(scope: !13371, file: !3, line: 2160, column: 7)
!13428 = !DILocation(line: 2160, column: 12, scope: !13427)
!13429 = !DILocation(line: 2160, column: 7, scope: !13371)
!13430 = !DILocation(line: 2162, column: 21, scope: !13431)
!13431 = distinct !DILexicalBlock(scope: !13427, file: !3, line: 2160, column: 20)
!13432 = !DILocation(line: 2162, column: 27, scope: !13431)
!13433 = !DILocation(line: 2162, column: 42, scope: !13431)
!13434 = !DILocation(line: 2162, column: 47, scope: !13431)
!13435 = !DILocation(line: 2162, column: 52, scope: !13431)
!13436 = !DILocation(line: 2162, column: 59, scope: !13431)
!13437 = !DILocation(line: 2162, column: 4, scope: !13431)
!13438 = !DILocation(line: 2162, column: 10, scope: !13431)
!13439 = !DILocation(line: 2162, column: 18, scope: !13431)
!13440 = !DILocation(line: 2164, column: 3, scope: !13431)
!13441 = !DILocation(line: 2164, column: 14, scope: !13442)
!13442 = distinct !DILexicalBlock(scope: !13427, file: !3, line: 2164, column: 14)
!13443 = !DILocation(line: 2164, column: 19, scope: !13442)
!13444 = !DILocation(line: 2164, column: 28, scope: !13442)
!13445 = !DILocation(line: 2164, column: 32, scope: !13442)
!13446 = !DILocation(line: 2164, column: 38, scope: !13442)
!13447 = !DILocation(line: 2164, column: 43, scope: !13442)
!13448 = !DILocation(line: 2164, column: 49, scope: !13442)
!13449 = !DILocation(line: 2164, column: 67, scope: !13442)
!13450 = !DILocation(line: 2164, column: 14, scope: !13427)
!13451 = !DILocation(line: 2166, column: 21, scope: !13452)
!13452 = distinct !DILexicalBlock(scope: !13442, file: !3, line: 2165, column: 21)
!13453 = !DILocation(line: 2166, column: 27, scope: !13452)
!13454 = !DILocation(line: 2166, column: 42, scope: !13452)
!13455 = !DILocation(line: 2166, column: 47, scope: !13452)
!13456 = !DILocation(line: 2167, column: 6, scope: !13452)
!13457 = !DILocation(line: 2166, column: 52, scope: !13452)
!13458 = !DILocation(line: 2167, column: 17, scope: !13452)
!13459 = !DILocation(line: 2166, column: 4, scope: !13452)
!13460 = !DILocation(line: 2166, column: 10, scope: !13452)
!13461 = !DILocation(line: 2166, column: 18, scope: !13452)
!13462 = !DILocation(line: 2168, column: 3, scope: !13452)
!13463 = !DILocation(line: 2168, column: 14, scope: !13464)
!13464 = distinct !DILexicalBlock(scope: !13442, file: !3, line: 2168, column: 14)
!13465 = !DILocation(line: 2168, column: 14, scope: !13442)
!13466 = !DILocation(line: 2169, column: 21, scope: !13467)
!13467 = distinct !DILexicalBlock(scope: !13464, file: !3, line: 2168, column: 20)
!13468 = !DILocation(line: 2169, column: 27, scope: !13467)
!13469 = !DILocation(line: 2169, column: 42, scope: !13467)
!13470 = !DILocation(line: 2169, column: 47, scope: !13467)
!13471 = !DILocation(line: 2170, column: 6, scope: !13467)
!13472 = !DILocation(line: 2169, column: 52, scope: !13467)
!13473 = !DILocation(line: 2170, column: 12, scope: !13467)
!13474 = !DILocation(line: 2169, column: 4, scope: !13467)
!13475 = !DILocation(line: 2169, column: 10, scope: !13467)
!13476 = !DILocation(line: 2169, column: 18, scope: !13467)
!13477 = !DILocation(line: 2172, column: 3, scope: !13467)
!13478 = !DILocation(line: 2173, column: 4, scope: !13479)
!13479 = distinct !DILexicalBlock(scope: !13464, file: !3, line: 2172, column: 10)
!13480 = !DILocation(line: 2173, column: 10, scope: !13479)
!13481 = !DILocation(line: 2173, column: 18, scope: !13479)
!13482 = !DILocation(line: 2177, column: 11, scope: !13371)
!13483 = !DILocation(line: 2177, column: 17, scope: !13371)
!13484 = !DILocation(line: 2177, column: 3, scope: !13371)
!13485 = !DILocation(line: 2179, column: 4, scope: !13486)
!13486 = distinct !DILexicalBlock(scope: !13371, file: !3, line: 2177, column: 26)
!13487 = !DILocation(line: 2179, column: 4, scope: !13488)
!13488 = distinct !DILexicalBlock(scope: !13486, file: !3, line: 2179, column: 4)
!13489 = !{i32 -2141418008}
!13490 = !DILocation(line: 2180, column: 4, scope: !13486)
!13491 = !DILocation(line: 2182, column: 4, scope: !13486)
!13492 = !DILocation(line: 2182, column: 4, scope: !13493)
!13493 = distinct !DILexicalBlock(scope: !13486, file: !3, line: 2182, column: 4)
!13494 = !{i32 -2141417869}
!13495 = !DILocation(line: 2183, column: 4, scope: !13486)
!13496 = !DILocation(line: 2185, column: 4, scope: !13486)
!13497 = !DILocation(line: 2185, column: 4, scope: !13498)
!13498 = distinct !DILexicalBlock(scope: !13486, file: !3, line: 2185, column: 4)
!13499 = !{i32 -2141417730}
!13500 = !DILocation(line: 2186, column: 4, scope: !13486)
!13501 = !DILocation(line: 2188, column: 4, scope: !13486)
!13502 = !DILocation(line: 2188, column: 4, scope: !13503)
!13503 = distinct !DILexicalBlock(scope: !13486, file: !3, line: 2188, column: 4)
!13504 = !{i32 -2141417591}
!13505 = !DILocation(line: 2189, column: 4, scope: !13486)
!13506 = !DILocation(line: 2191, column: 7, scope: !13507)
!13507 = distinct !DILexicalBlock(scope: !13371, file: !3, line: 2191, column: 7)
!13508 = !DILocation(line: 2191, column: 13, scope: !13507)
!13509 = !DILocation(line: 2191, column: 7, scope: !13371)
!13510 = !DILocation(line: 2192, column: 4, scope: !13511)
!13511 = distinct !DILexicalBlock(scope: !13507, file: !3, line: 2191, column: 23)
!13512 = !DILocation(line: 2192, column: 4, scope: !13513)
!13513 = distinct !DILexicalBlock(scope: !13511, file: !3, line: 2192, column: 4)
!13514 = !{i32 -2141417414}
!13515 = !DILocation(line: 2194, column: 3, scope: !13511)
!13516 = !DILocation(line: 2195, column: 4, scope: !13517)
!13517 = distinct !DILexicalBlock(scope: !13507, file: !3, line: 2194, column: 10)
!13518 = !DILocation(line: 2195, column: 4, scope: !13519)
!13519 = distinct !DILexicalBlock(scope: !13517, file: !3, line: 2195, column: 4)
!13520 = !{i32 -2141417245}
!13521 = !DILocation(line: 2198, column: 7, scope: !13522)
!13522 = distinct !DILexicalBlock(scope: !13371, file: !3, line: 2198, column: 7)
!13523 = !DILocation(line: 2198, column: 13, scope: !13522)
!13524 = !DILocation(line: 2198, column: 7, scope: !13371)
!13525 = !DILocation(line: 2199, column: 8, scope: !13526)
!13526 = distinct !DILexicalBlock(scope: !13527, file: !3, line: 2199, column: 8)
!13527 = distinct !DILexicalBlock(scope: !13522, file: !3, line: 2198, column: 23)
!13528 = !DILocation(line: 2199, column: 14, scope: !13526)
!13529 = !DILocation(line: 2199, column: 8, scope: !13527)
!13530 = !DILocation(line: 2200, column: 5, scope: !13526)
!13531 = !DILocation(line: 2200, column: 5, scope: !13532)
!13532 = distinct !DILexicalBlock(scope: !13526, file: !3, line: 2200, column: 5)
!13533 = !{i32 -2141417098}
!13534 = !DILocation(line: 2202, column: 5, scope: !13526)
!13535 = !DILocation(line: 2202, column: 5, scope: !13536)
!13536 = distinct !DILexicalBlock(scope: !13526, file: !3, line: 2202, column: 5)
!13537 = !{i32 -2141416967}
!13538 = !DILocation(line: 2203, column: 3, scope: !13527)
!13539 = !DILocation(line: 2204, column: 4, scope: !13522)
!13540 = !DILocation(line: 2204, column: 4, scope: !13541)
!13541 = distinct !DILexicalBlock(scope: !13522, file: !3, line: 2204, column: 4)
!13542 = !{i32 -2141416836}
!13543 = !DILocation(line: 2207, column: 7, scope: !13544)
!13544 = distinct !DILexicalBlock(scope: !13371, file: !3, line: 2207, column: 7)
!13545 = !DILocation(line: 2207, column: 13, scope: !13544)
!13546 = !DILocation(line: 2207, column: 7, scope: !13371)
!13547 = !DILocation(line: 2208, column: 4, scope: !13548)
!13548 = distinct !DILexicalBlock(scope: !13544, file: !3, line: 2207, column: 24)
!13549 = !DILocation(line: 2208, column: 4, scope: !13550)
!13550 = distinct !DILexicalBlock(scope: !13548, file: !3, line: 2208, column: 4)
!13551 = !{i32 -2141416638}
!13552 = !DILocation(line: 2210, column: 3, scope: !13548)
!13553 = !DILocation(line: 2211, column: 4, scope: !13554)
!13554 = distinct !DILexicalBlock(scope: !13544, file: !3, line: 2210, column: 10)
!13555 = !DILocation(line: 2211, column: 4, scope: !13556)
!13556 = distinct !DILexicalBlock(scope: !13554, file: !3, line: 2211, column: 4)
!13557 = !{i32 -2141416443}
!13558 = !DILocation(line: 2216, column: 26, scope: !13371)
!13559 = !DILocation(line: 2216, column: 32, scope: !13371)
!13560 = !DILocation(line: 2216, column: 3, scope: !13371)
!13561 = !DILocation(line: 2219, column: 11, scope: !13371)
!13562 = !DILocation(line: 2220, column: 7, scope: !13563)
!13563 = distinct !DILexicalBlock(scope: !13371, file: !3, line: 2220, column: 7)
!13564 = !DILocation(line: 2220, column: 13, scope: !13563)
!13565 = !DILocation(line: 2220, column: 7, scope: !13371)
!13566 = !DILocation(line: 2221, column: 12, scope: !13567)
!13567 = distinct !DILexicalBlock(scope: !13563, file: !3, line: 2220, column: 21)
!13568 = !DILocation(line: 2222, column: 8, scope: !13569)
!13569 = distinct !DILexicalBlock(scope: !13567, file: !3, line: 2222, column: 8)
!13570 = !DILocation(line: 2222, column: 14, scope: !13569)
!13571 = !DILocation(line: 2222, column: 8, scope: !13567)
!13572 = !DILocation(line: 2223, column: 13, scope: !13569)
!13573 = !DILocation(line: 2223, column: 5, scope: !13569)
!13574 = !DILocation(line: 2224, column: 3, scope: !13567)
!13575 = !DILocation(line: 2225, column: 3, scope: !13371)
!13576 = !DILocation(line: 2225, column: 3, scope: !13577)
!13577 = distinct !DILexicalBlock(scope: !13371, file: !3, line: 2225, column: 3)
!13578 = !{i32 -2141416292}
!13579 = !DILocation(line: 2227, column: 26, scope: !13371)
!13580 = !DILocation(line: 2227, column: 32, scope: !13371)
!13581 = !DILocation(line: 2227, column: 12, scope: !13371)
!13582 = !DILocation(line: 2227, column: 10, scope: !13371)
!13583 = !DILocation(line: 2228, column: 7, scope: !13584)
!13584 = distinct !DILexicalBlock(scope: !13371, file: !3, line: 2228, column: 7)
!13585 = !DILocation(line: 2228, column: 14, scope: !13584)
!13586 = !DILocation(line: 2228, column: 7, scope: !13371)
!13587 = !DILocation(line: 2230, column: 17, scope: !13588)
!13588 = distinct !DILexicalBlock(scope: !13584, file: !3, line: 2228, column: 20)
!13589 = !DILocation(line: 2230, column: 23, scope: !13588)
!13590 = !DILocation(line: 2230, column: 29, scope: !13588)
!13591 = !DILocation(line: 2229, column: 4, scope: !13588)
!13592 = !DILocation(line: 2231, column: 3, scope: !13588)
!13593 = !DILocation(line: 2234, column: 31, scope: !13371)
!13594 = !DILocation(line: 2234, column: 37, scope: !13371)
!13595 = !DILocation(line: 2234, column: 44, scope: !13371)
!13596 = !DILocation(line: 2234, column: 43, scope: !13371)
!13597 = !DILocation(line: 2234, column: 50, scope: !13371)
!13598 = !DILocation(line: 2234, column: 3, scope: !13371)
!13599 = !DILocation(line: 2236, column: 7, scope: !13600)
!13600 = distinct !DILexicalBlock(scope: !13371, file: !3, line: 2236, column: 7)
!13601 = !DILocation(line: 2236, column: 12, scope: !13600)
!13602 = !DILocation(line: 2236, column: 7, scope: !13371)
!13603 = !DILocation(line: 2237, column: 4, scope: !13604)
!13604 = distinct !DILexicalBlock(scope: !13600, file: !3, line: 2236, column: 18)
!13605 = !DILocation(line: 2237, column: 4, scope: !13606)
!13606 = distinct !DILexicalBlock(scope: !13604, file: !3, line: 2237, column: 4)
!13607 = !{i32 -2141416090}
!13608 = !DILocation(line: 2242, column: 3, scope: !13604)
!13609 = !DILocation(line: 2243, column: 4, scope: !13610)
!13610 = distinct !DILexicalBlock(scope: !13600, file: !3, line: 2242, column: 10)
!13611 = !DILocation(line: 2243, column: 4, scope: !13612)
!13612 = distinct !DILexicalBlock(scope: !13610, file: !3, line: 2243, column: 4)
!13613 = !{i32 -2141415923}
!13614 = !DILocation(line: 2250, column: 26, scope: !13371)
!13615 = !DILocation(line: 2250, column: 32, scope: !13371)
!13616 = !DILocation(line: 2250, column: 12, scope: !13371)
!13617 = !DILocation(line: 2250, column: 10, scope: !13371)
!13618 = !DILocation(line: 2251, column: 7, scope: !13619)
!13619 = distinct !DILexicalBlock(scope: !13371, file: !3, line: 2251, column: 7)
!13620 = !DILocation(line: 2251, column: 14, scope: !13619)
!13621 = !DILocation(line: 2251, column: 7, scope: !13371)
!13622 = !DILocation(line: 2253, column: 17, scope: !13623)
!13623 = distinct !DILexicalBlock(scope: !13619, file: !3, line: 2251, column: 20)
!13624 = !DILocation(line: 2253, column: 23, scope: !13623)
!13625 = !DILocation(line: 2253, column: 29, scope: !13623)
!13626 = !DILocation(line: 2252, column: 4, scope: !13623)
!13627 = !DILocation(line: 2254, column: 3, scope: !13623)
!13628 = !DILocation(line: 2256, column: 28, scope: !13371)
!13629 = !DILocation(line: 2256, column: 33, scope: !13371)
!13630 = !DILocation(line: 2256, column: 3, scope: !13371)
!13631 = !DILocation(line: 2258, column: 1, scope: !12910)
!13632 = distinct !DISubprogram(name: "tty_get_baud_rate", scope: !142, file: !142, line: 538, type: !13633, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!13633 = !DISubroutineType(types: !13634)
!13634 = !{!3899, !233}
!13635 = !DILocalVariable(name: "tty", arg: 1, scope: !13632, file: !142, line: 538, type: !233)
!13636 = !DILocation(line: 538, column: 60, scope: !13632)
!13637 = !DILocation(line: 540, column: 32, scope: !13632)
!13638 = !DILocation(line: 540, column: 37, scope: !13632)
!13639 = !DILocation(line: 540, column: 9, scope: !13632)
!13640 = !DILocation(line: 540, column: 2, scope: !13632)
!13641 = distinct !DISubprogram(name: "cyy_baud_calc", scope: !3, file: !3, line: 1932, type: !13642, scopeLine: 1933, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!13642 = !DISubroutineType(types: !13643)
!13643 = !{null, !134, !120}
!13644 = !DILocalVariable(name: "info", arg: 1, scope: !13641, file: !3, line: 1932, type: !134)
!13645 = !DILocation(line: 1932, column: 49, scope: !13641)
!13646 = !DILocalVariable(name: "baud", arg: 2, scope: !13641, file: !3, line: 1932, type: !120)
!13647 = !DILocation(line: 1932, column: 61, scope: !13641)
!13648 = !DILocalVariable(name: "co", scope: !13641, file: !3, line: 1934, type: !139)
!13649 = !DILocation(line: 1934, column: 6, scope: !13641)
!13650 = !DILocalVariable(name: "co_val", scope: !13641, file: !3, line: 1934, type: !139)
!13651 = !DILocation(line: 1934, column: 10, scope: !13641)
!13652 = !DILocalVariable(name: "bpr", scope: !13641, file: !3, line: 1934, type: !139)
!13653 = !DILocation(line: 1934, column: 18, scope: !13641)
!13654 = !DILocalVariable(name: "cy_clock", scope: !13641, file: !3, line: 1935, type: !120)
!13655 = !DILocation(line: 1935, column: 8, scope: !13641)
!13656 = !DILocation(line: 1935, column: 21, scope: !13641)
!13657 = !DILocation(line: 1935, column: 27, scope: !13641)
!13658 = !DILocation(line: 1935, column: 36, scope: !13641)
!13659 = !DILocation(line: 1935, column: 20, scope: !13641)
!13660 = !DILocation(line: 1938, column: 6, scope: !13661)
!13661 = distinct !DILexicalBlock(scope: !13641, file: !3, line: 1938, column: 6)
!13662 = !DILocation(line: 1938, column: 11, scope: !13661)
!13663 = !DILocation(line: 1938, column: 6, scope: !13641)
!13664 = !DILocation(line: 1939, column: 41, scope: !13665)
!13665 = distinct !DILexicalBlock(scope: !13661, file: !3, line: 1938, column: 17)
!13666 = !DILocation(line: 1939, column: 47, scope: !13665)
!13667 = !DILocation(line: 1939, column: 51, scope: !13665)
!13668 = !DILocation(line: 1939, column: 28, scope: !13665)
!13669 = !DILocation(line: 1939, column: 34, scope: !13665)
!13670 = !DILocation(line: 1939, column: 39, scope: !13665)
!13671 = !DILocation(line: 1939, column: 16, scope: !13665)
!13672 = !DILocation(line: 1939, column: 22, scope: !13665)
!13673 = !DILocation(line: 1939, column: 26, scope: !13665)
!13674 = !DILocation(line: 1939, column: 3, scope: !13665)
!13675 = !DILocation(line: 1939, column: 9, scope: !13665)
!13676 = !DILocation(line: 1939, column: 14, scope: !13665)
!13677 = !DILocation(line: 1940, column: 3, scope: !13665)
!13678 = !DILocation(line: 1944, column: 10, scope: !13679)
!13679 = distinct !DILexicalBlock(scope: !13641, file: !3, line: 1944, column: 2)
!13680 = !DILocation(line: 1944, column: 22, scope: !13679)
!13681 = !DILocation(line: 1944, column: 7, scope: !13679)
!13682 = !DILocation(line: 1944, column: 30, scope: !13683)
!13683 = distinct !DILexicalBlock(scope: !13679, file: !3, line: 1944, column: 2)
!13684 = !DILocation(line: 1944, column: 2, scope: !13679)
!13685 = !DILocation(line: 1945, column: 7, scope: !13686)
!13686 = distinct !DILexicalBlock(scope: !13687, file: !3, line: 1945, column: 7)
!13687 = distinct !DILexicalBlock(scope: !13683, file: !3, line: 1944, column: 54)
!13688 = !DILocation(line: 1945, column: 18, scope: !13686)
!13689 = !DILocation(line: 1945, column: 16, scope: !13686)
!13690 = !DILocation(line: 1945, column: 27, scope: !13686)
!13691 = !DILocation(line: 1945, column: 25, scope: !13686)
!13692 = !DILocation(line: 1945, column: 32, scope: !13686)
!13693 = !DILocation(line: 1945, column: 7, scope: !13687)
!13694 = !DILocation(line: 1946, column: 4, scope: !13686)
!13695 = !DILocation(line: 1947, column: 2, scope: !13687)
!13696 = !DILocation(line: 1944, column: 36, scope: !13683)
!13697 = !DILocation(line: 1944, column: 47, scope: !13683)
!13698 = !DILocation(line: 1944, column: 2, scope: !13683)
!13699 = distinct !{!13699, !13684, !13700}
!13700 = !DILocation(line: 1947, column: 2, scope: !13679)
!13701 = !DILocation(line: 1949, column: 9, scope: !13641)
!13702 = !DILocation(line: 1949, column: 20, scope: !13641)
!13703 = !DILocation(line: 1949, column: 18, scope: !13641)
!13704 = !DILocation(line: 1949, column: 27, scope: !13641)
!13705 = !DILocation(line: 1949, column: 33, scope: !13641)
!13706 = !DILocation(line: 1949, column: 31, scope: !13641)
!13707 = !DILocation(line: 1949, column: 38, scope: !13641)
!13708 = !DILocation(line: 1949, column: 43, scope: !13641)
!13709 = !DILocation(line: 1949, column: 6, scope: !13641)
!13710 = !DILocation(line: 1950, column: 6, scope: !13711)
!13711 = distinct !DILexicalBlock(scope: !13641, file: !3, line: 1950, column: 6)
!13712 = !DILocation(line: 1950, column: 10, scope: !13711)
!13713 = !DILocation(line: 1950, column: 6, scope: !13641)
!13714 = !DILocation(line: 1951, column: 7, scope: !13711)
!13715 = !DILocation(line: 1951, column: 3, scope: !13711)
!13716 = !DILocation(line: 1953, column: 28, scope: !13641)
!13717 = !DILocation(line: 1953, column: 15, scope: !13641)
!13718 = !DILocation(line: 1953, column: 21, scope: !13641)
!13719 = !DILocation(line: 1953, column: 26, scope: !13641)
!13720 = !DILocation(line: 1953, column: 2, scope: !13641)
!13721 = !DILocation(line: 1953, column: 8, scope: !13641)
!13722 = !DILocation(line: 1953, column: 13, scope: !13641)
!13723 = !DILocation(line: 1954, column: 26, scope: !13641)
!13724 = !DILocation(line: 1954, column: 14, scope: !13641)
!13725 = !DILocation(line: 1954, column: 20, scope: !13641)
!13726 = !DILocation(line: 1954, column: 24, scope: !13641)
!13727 = !DILocation(line: 1954, column: 2, scope: !13641)
!13728 = !DILocation(line: 1954, column: 8, scope: !13641)
!13729 = !DILocation(line: 1954, column: 12, scope: !13641)
!13730 = !DILocation(line: 1955, column: 1, scope: !13641)
!13731 = distinct !DISubprogram(name: "tty_port_set_cts_flow", scope: !142, file: !142, line: 617, type: !9837, scopeLine: 618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!13732 = !DILocalVariable(name: "port", arg: 1, scope: !13731, file: !142, line: 617, type: !3911)
!13733 = !DILocation(line: 617, column: 59, scope: !13731)
!13734 = !DILocalVariable(name: "val", arg: 2, scope: !13731, file: !142, line: 617, type: !497)
!13735 = !DILocation(line: 617, column: 70, scope: !13731)
!13736 = !DILocation(line: 619, column: 6, scope: !13737)
!13737 = distinct !DILexicalBlock(scope: !13731, file: !142, line: 619, column: 6)
!13738 = !DILocation(line: 619, column: 6, scope: !13731)
!13739 = !DILocation(line: 620, column: 31, scope: !13737)
!13740 = !DILocation(line: 620, column: 37, scope: !13737)
!13741 = !DILocation(line: 620, column: 3, scope: !13737)
!13742 = !DILocation(line: 622, column: 33, scope: !13737)
!13743 = !DILocation(line: 622, column: 39, scope: !13737)
!13744 = !DILocation(line: 622, column: 3, scope: !13737)
!13745 = !DILocation(line: 623, column: 1, scope: !13731)
!13746 = distinct !DISubprogram(name: "tty_port_set_check_carrier", scope: !142, file: !142, line: 643, type: !9837, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!13747 = !DILocalVariable(name: "port", arg: 1, scope: !13746, file: !142, line: 643, type: !3911)
!13748 = !DILocation(line: 643, column: 64, scope: !13746)
!13749 = !DILocalVariable(name: "val", arg: 2, scope: !13746, file: !142, line: 643, type: !497)
!13750 = !DILocation(line: 643, column: 75, scope: !13746)
!13751 = !DILocation(line: 645, column: 6, scope: !13752)
!13752 = distinct !DILexicalBlock(scope: !13746, file: !142, line: 645, column: 6)
!13753 = !DILocation(line: 645, column: 6, scope: !13746)
!13754 = !DILocation(line: 646, column: 31, scope: !13752)
!13755 = !DILocation(line: 646, column: 37, scope: !13752)
!13756 = !DILocation(line: 646, column: 3, scope: !13752)
!13757 = !DILocation(line: 648, column: 33, scope: !13752)
!13758 = !DILocation(line: 648, column: 39, scope: !13752)
!13759 = !DILocation(line: 648, column: 3, scope: !13752)
!13760 = !DILocation(line: 649, column: 1, scope: !13746)
!13761 = distinct !DISubprogram(name: "start_xmit", scope: !3, file: !3, line: 1386, type: !5267, scopeLine: 1387, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!13762 = !DILocation(line: 407, column: 64, scope: !9014, inlinedAt: !13763)
!13763 = distinct !DILocation(line: 1396, column: 3, scope: !13764)
!13764 = distinct !DILexicalBlock(scope: !13765, file: !3, line: 1392, column: 22)
!13765 = distinct !DILexicalBlock(scope: !13761, file: !3, line: 1392, column: 6)
!13766 = !DILocation(line: 407, column: 84, scope: !9014, inlinedAt: !13763)
!13767 = !DILocation(line: 327, column: 67, scope: !7102, inlinedAt: !13768)
!13768 = distinct !DILocation(line: 1393, column: 3, scope: !13769)
!13769 = distinct !DILexicalBlock(scope: !13770, file: !3, line: 1393, column: 3)
!13770 = distinct !DILexicalBlock(scope: !13771, file: !3, line: 1393, column: 3)
!13771 = distinct !DILexicalBlock(scope: !13772, file: !3, line: 1393, column: 3)
!13772 = distinct !DILexicalBlock(scope: !13773, file: !3, line: 1393, column: 3)
!13773 = distinct !DILexicalBlock(scope: !13764, file: !3, line: 1393, column: 3)
!13774 = !DILocalVariable(name: "info", arg: 1, scope: !13761, file: !3, line: 1386, type: !134)
!13775 = !DILocation(line: 1386, column: 46, scope: !13761)
!13776 = !DILocalVariable(name: "card", scope: !13761, file: !3, line: 1388, type: !4229)
!13777 = !DILocation(line: 1388, column: 24, scope: !13761)
!13778 = !DILocation(line: 1388, column: 31, scope: !13761)
!13779 = !DILocation(line: 1388, column: 37, scope: !13761)
!13780 = !DILocalVariable(name: "flags", scope: !13761, file: !3, line: 1389, type: !126)
!13781 = !DILocation(line: 1389, column: 16, scope: !13761)
!13782 = !DILocalVariable(name: "channel", scope: !13761, file: !3, line: 1390, type: !139)
!13783 = !DILocation(line: 1390, column: 6, scope: !13761)
!13784 = !DILocation(line: 1390, column: 16, scope: !13761)
!13785 = !DILocation(line: 1390, column: 22, scope: !13761)
!13786 = !DILocation(line: 1390, column: 29, scope: !13761)
!13787 = !DILocation(line: 1390, column: 35, scope: !13761)
!13788 = !DILocation(line: 1390, column: 27, scope: !13761)
!13789 = !DILocation(line: 1392, column: 15, scope: !13765)
!13790 = !DILocation(line: 1392, column: 7, scope: !13765)
!13791 = !DILocation(line: 1392, column: 6, scope: !13761)
!13792 = !DILocation(line: 1393, column: 3, scope: !13764)
!13793 = !DILocation(line: 1393, column: 3, scope: !13773)
!13794 = !DILocalVariable(name: "__dummy", scope: !13795, file: !3, line: 1393, type: !126)
!13795 = distinct !DILexicalBlock(scope: !13772, file: !3, line: 1393, column: 3)
!13796 = !DILocation(line: 1393, column: 3, scope: !13795)
!13797 = !DILocalVariable(name: "__dummy2", scope: !13795, file: !3, line: 1393, type: !126)
!13798 = !DILocation(line: 1393, column: 3, scope: !13772)
!13799 = !DILocation(line: 1393, column: 3, scope: !13771)
!13800 = !DILocation(line: 1393, column: 3, scope: !13801)
!13801 = distinct !DILexicalBlock(scope: !13771, file: !3, line: 1393, column: 3)
!13802 = !DILocalVariable(name: "__dummy", scope: !13803, file: !3, line: 1393, type: !126)
!13803 = distinct !DILexicalBlock(scope: !13804, file: !3, line: 1393, column: 3)
!13804 = distinct !DILexicalBlock(scope: !13801, file: !3, line: 1393, column: 3)
!13805 = !DILocation(line: 1393, column: 3, scope: !13803)
!13806 = !DILocalVariable(name: "__dummy2", scope: !13803, file: !3, line: 1393, type: !126)
!13807 = !DILocation(line: 1393, column: 3, scope: !13804)
!13808 = !DILocation(line: 1393, column: 3, scope: !13770)
!13809 = !{i32 -2141438621}
!13810 = !DILocation(line: 1393, column: 3, scope: !13769)
!13811 = !DILocation(line: 329, column: 10, scope: !7102, inlinedAt: !13768)
!13812 = !DILocation(line: 329, column: 16, scope: !7102, inlinedAt: !13768)
!13813 = !DILocation(line: 1394, column: 14, scope: !13764)
!13814 = !DILocation(line: 1394, column: 27, scope: !13764)
!13815 = !DILocation(line: 1394, column: 35, scope: !13764)
!13816 = !DILocation(line: 1394, column: 3, scope: !13764)
!13817 = !DILocation(line: 1395, column: 14, scope: !13764)
!13818 = !DILocation(line: 1395, column: 38, scope: !13764)
!13819 = !DILocation(line: 1395, column: 28, scope: !13764)
!13820 = !DILocation(line: 1395, column: 52, scope: !13764)
!13821 = !DILocation(line: 1395, column: 3, scope: !13764)
!13822 = !DILocation(line: 1396, column: 27, scope: !13764)
!13823 = !DILocation(line: 1396, column: 33, scope: !13764)
!13824 = !DILocation(line: 1396, column: 44, scope: !13764)
!13825 = !DILocation(line: 409, column: 2, scope: !9120, inlinedAt: !13763)
!13826 = !DILocation(line: 409, column: 2, scope: !9125, inlinedAt: !13763)
!13827 = !DILocation(line: 409, column: 2, scope: !9126, inlinedAt: !13763)
!13828 = !DILocation(line: 409, column: 2, scope: !9133, inlinedAt: !13763)
!13829 = !DILocation(line: 409, column: 2, scope: !9136, inlinedAt: !13763)
!13830 = !DILocation(line: 1397, column: 2, scope: !13764)
!13831 = !DILocation(line: 1412, column: 1, scope: !13761)
!13832 = distinct !DISubprogram(name: "get_threshold", scope: !3, file: !3, line: 2556, type: !13833, scopeLine: 2558, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!13833 = !DISubroutineType(types: !13834)
!13834 = !{!139, !134, !125}
!13835 = !DILocalVariable(name: "info", arg: 1, scope: !13832, file: !3, line: 2556, type: !134)
!13836 = !DILocation(line: 2556, column: 48, scope: !13832)
!13837 = !DILocalVariable(name: "value", arg: 2, scope: !13832, file: !3, line: 2557, type: !125)
!13838 = !DILocation(line: 2557, column: 29, scope: !13832)
!13839 = !DILocalVariable(name: "card", scope: !13832, file: !3, line: 2559, type: !4229)
!13840 = !DILocation(line: 2559, column: 24, scope: !13832)
!13841 = !DILocation(line: 2559, column: 31, scope: !13832)
!13842 = !DILocation(line: 2559, column: 37, scope: !13832)
!13843 = !DILocation(line: 2561, column: 15, scope: !13844)
!13844 = distinct !DILexicalBlock(scope: !13832, file: !3, line: 2561, column: 6)
!13845 = !DILocation(line: 2561, column: 7, scope: !13844)
!13846 = !DILocation(line: 2561, column: 6, scope: !13832)
!13847 = !DILocalVariable(name: "tmp", scope: !13848, file: !3, line: 2562, type: !1375)
!13848 = distinct !DILexicalBlock(scope: !13844, file: !3, line: 2561, column: 22)
!13849 = !DILocation(line: 2562, column: 6, scope: !13848)
!13850 = !DILocation(line: 2562, column: 22, scope: !13848)
!13851 = !DILocation(line: 2562, column: 12, scope: !13848)
!13852 = !DILocation(line: 2562, column: 36, scope: !13848)
!13853 = !DILocation(line: 2563, column: 10, scope: !13854)
!13854 = distinct !DILexicalBlock(scope: !13848, file: !3, line: 2563, column: 10)
!13855 = !DILocalVariable(name: "__ret_pu", scope: !13856, file: !3, line: 2563, type: !139)
!13856 = distinct !DILexicalBlock(scope: !13854, file: !3, line: 2563, column: 10)
!13857 = !DILocation(line: 2563, column: 10, scope: !13856)
!13858 = !DILocalVariable(name: "__ptr_pu", scope: !13856, file: !3, line: 2563, type: !118)
!13859 = !DILocalVariable(name: "__val_pu", scope: !13856, file: !3, line: 2563, type: !126)
!13860 = !{i32 -2141403389}
!13861 = !DILocation(line: 2563, column: 10, scope: !13848)
!13862 = !DILocation(line: 2563, column: 3, scope: !13848)
!13863 = !DILocation(line: 2565, column: 2, scope: !13832)
!13864 = !DILocation(line: 2566, column: 1, scope: !13832)
!13865 = distinct !DISubprogram(name: "set_threshold", scope: !3, file: !3, line: 2539, type: !13866, scopeLine: 2540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!13866 = !DISubroutineType(types: !13867)
!13867 = !{!139, !134, !126}
!13868 = !DILocation(line: 407, column: 64, scope: !9014, inlinedAt: !13869)
!13869 = distinct !DILocation(line: 2551, column: 3, scope: !13870)
!13870 = distinct !DILexicalBlock(scope: !13871, file: !3, line: 2544, column: 22)
!13871 = distinct !DILexicalBlock(scope: !13865, file: !3, line: 2544, column: 6)
!13872 = !DILocation(line: 407, column: 84, scope: !9014, inlinedAt: !13869)
!13873 = !DILocation(line: 327, column: 67, scope: !7102, inlinedAt: !13874)
!13874 = distinct !DILocation(line: 2548, column: 3, scope: !13875)
!13875 = distinct !DILexicalBlock(scope: !13876, file: !3, line: 2548, column: 3)
!13876 = distinct !DILexicalBlock(scope: !13877, file: !3, line: 2548, column: 3)
!13877 = distinct !DILexicalBlock(scope: !13878, file: !3, line: 2548, column: 3)
!13878 = distinct !DILexicalBlock(scope: !13879, file: !3, line: 2548, column: 3)
!13879 = distinct !DILexicalBlock(scope: !13870, file: !3, line: 2548, column: 3)
!13880 = !DILocalVariable(name: "info", arg: 1, scope: !13865, file: !3, line: 2539, type: !134)
!13881 = !DILocation(line: 2539, column: 48, scope: !13865)
!13882 = !DILocalVariable(name: "value", arg: 2, scope: !13865, file: !3, line: 2539, type: !126)
!13883 = !DILocation(line: 2539, column: 68, scope: !13865)
!13884 = !DILocalVariable(name: "card", scope: !13865, file: !3, line: 2541, type: !4229)
!13885 = !DILocation(line: 2541, column: 24, scope: !13865)
!13886 = !DILocation(line: 2541, column: 31, scope: !13865)
!13887 = !DILocation(line: 2541, column: 37, scope: !13865)
!13888 = !DILocalVariable(name: "flags", scope: !13865, file: !3, line: 2542, type: !126)
!13889 = !DILocation(line: 2542, column: 16, scope: !13865)
!13890 = !DILocation(line: 2544, column: 15, scope: !13871)
!13891 = !DILocation(line: 2544, column: 7, scope: !13871)
!13892 = !DILocation(line: 2544, column: 6, scope: !13865)
!13893 = !DILocation(line: 2545, column: 3, scope: !13870)
!13894 = !DILocation(line: 2545, column: 9, scope: !13870)
!13895 = !DILocation(line: 2545, column: 14, scope: !13870)
!13896 = !DILocation(line: 2546, column: 17, scope: !13870)
!13897 = !DILocation(line: 2546, column: 23, scope: !13870)
!13898 = !DILocation(line: 2546, column: 3, scope: !13870)
!13899 = !DILocation(line: 2546, column: 9, scope: !13870)
!13900 = !DILocation(line: 2546, column: 14, scope: !13870)
!13901 = !DILocation(line: 2548, column: 3, scope: !13870)
!13902 = !DILocation(line: 2548, column: 3, scope: !13879)
!13903 = !DILocalVariable(name: "__dummy", scope: !13904, file: !3, line: 2548, type: !126)
!13904 = distinct !DILexicalBlock(scope: !13878, file: !3, line: 2548, column: 3)
!13905 = !DILocation(line: 2548, column: 3, scope: !13904)
!13906 = !DILocalVariable(name: "__dummy2", scope: !13904, file: !3, line: 2548, type: !126)
!13907 = !DILocation(line: 2548, column: 3, scope: !13878)
!13908 = !DILocation(line: 2548, column: 3, scope: !13877)
!13909 = !DILocation(line: 2548, column: 3, scope: !13910)
!13910 = distinct !DILexicalBlock(scope: !13877, file: !3, line: 2548, column: 3)
!13911 = !DILocalVariable(name: "__dummy", scope: !13912, file: !3, line: 2548, type: !126)
!13912 = distinct !DILexicalBlock(scope: !13913, file: !3, line: 2548, column: 3)
!13913 = distinct !DILexicalBlock(scope: !13910, file: !3, line: 2548, column: 3)
!13914 = !DILocation(line: 2548, column: 3, scope: !13912)
!13915 = !DILocalVariable(name: "__dummy2", scope: !13912, file: !3, line: 2548, type: !126)
!13916 = !DILocation(line: 2548, column: 3, scope: !13913)
!13917 = !DILocation(line: 2548, column: 3, scope: !13876)
!13918 = !{i32 -2141403857}
!13919 = !DILocation(line: 2548, column: 3, scope: !13875)
!13920 = !DILocation(line: 329, column: 10, scope: !7102, inlinedAt: !13874)
!13921 = !DILocation(line: 329, column: 16, scope: !7102, inlinedAt: !13874)
!13922 = !DILocation(line: 2549, column: 14, scope: !13870)
!13923 = !DILocation(line: 2549, column: 28, scope: !13870)
!13924 = !DILocation(line: 2549, column: 34, scope: !13870)
!13925 = !DILocation(line: 2549, column: 3, scope: !13870)
!13926 = !DILocation(line: 2550, column: 17, scope: !13870)
!13927 = !DILocation(line: 2550, column: 3, scope: !13870)
!13928 = !DILocation(line: 2551, column: 27, scope: !13870)
!13929 = !DILocation(line: 2551, column: 33, scope: !13870)
!13930 = !DILocation(line: 2551, column: 44, scope: !13870)
!13931 = !DILocation(line: 409, column: 2, scope: !9120, inlinedAt: !13869)
!13932 = !DILocation(line: 409, column: 2, scope: !9125, inlinedAt: !13869)
!13933 = !DILocation(line: 409, column: 2, scope: !9126, inlinedAt: !13869)
!13934 = !DILocation(line: 409, column: 2, scope: !9133, inlinedAt: !13869)
!13935 = !DILocation(line: 409, column: 2, scope: !9136, inlinedAt: !13869)
!13936 = !DILocation(line: 2552, column: 2, scope: !13870)
!13937 = !DILocation(line: 2553, column: 2, scope: !13865)
!13938 = distinct !DISubprogram(name: "might_fault", scope: !13939, file: !13939, line: 315, type: !1954, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!13939 = !DIFile(filename: "./include/linux/kernel.h", directory: "/home/lizy2001/genbc/linux")
!13940 = !DILocation(line: 315, column: 40, scope: !13938)
!13941 = distinct !DISubprogram(name: "get_timeout", scope: !3, file: !3, line: 2581, type: !13833, scopeLine: 2583, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!13942 = !DILocalVariable(name: "info", arg: 1, scope: !13941, file: !3, line: 2581, type: !134)
!13943 = !DILocation(line: 2581, column: 46, scope: !13941)
!13944 = !DILocalVariable(name: "value", arg: 2, scope: !13941, file: !3, line: 2582, type: !125)
!13945 = !DILocation(line: 2582, column: 29, scope: !13941)
!13946 = !DILocalVariable(name: "card", scope: !13941, file: !3, line: 2584, type: !4229)
!13947 = !DILocation(line: 2584, column: 24, scope: !13941)
!13948 = !DILocation(line: 2584, column: 31, scope: !13941)
!13949 = !DILocation(line: 2584, column: 37, scope: !13941)
!13950 = !DILocation(line: 2586, column: 15, scope: !13951)
!13951 = distinct !DILexicalBlock(scope: !13941, file: !3, line: 2586, column: 6)
!13952 = !DILocation(line: 2586, column: 7, scope: !13951)
!13953 = !DILocation(line: 2586, column: 6, scope: !13941)
!13954 = !DILocalVariable(name: "tmp", scope: !13955, file: !3, line: 2587, type: !1375)
!13955 = distinct !DILexicalBlock(scope: !13951, file: !3, line: 2586, column: 22)
!13956 = !DILocation(line: 2587, column: 6, scope: !13955)
!13957 = !DILocation(line: 2587, column: 22, scope: !13955)
!13958 = !DILocation(line: 2587, column: 12, scope: !13955)
!13959 = !DILocation(line: 2588, column: 10, scope: !13960)
!13960 = distinct !DILexicalBlock(scope: !13955, file: !3, line: 2588, column: 10)
!13961 = !DILocalVariable(name: "__ret_pu", scope: !13962, file: !3, line: 2588, type: !139)
!13962 = distinct !DILexicalBlock(scope: !13960, file: !3, line: 2588, column: 10)
!13963 = !DILocation(line: 2588, column: 10, scope: !13962)
!13964 = !DILocalVariable(name: "__ptr_pu", scope: !13962, file: !3, line: 2588, type: !118)
!13965 = !DILocalVariable(name: "__val_pu", scope: !13962, file: !3, line: 2588, type: !126)
!13966 = !{i32 -2141401568}
!13967 = !DILocation(line: 2588, column: 10, scope: !13955)
!13968 = !DILocation(line: 2588, column: 3, scope: !13955)
!13969 = !DILocation(line: 2590, column: 2, scope: !13941)
!13970 = !DILocation(line: 2591, column: 1, scope: !13941)
!13971 = distinct !DISubprogram(name: "set_timeout", scope: !3, file: !3, line: 2568, type: !13866, scopeLine: 2569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!13972 = !DILocation(line: 407, column: 64, scope: !9014, inlinedAt: !13973)
!13973 = distinct !DILocation(line: 2576, column: 3, scope: !13974)
!13974 = distinct !DILexicalBlock(scope: !13975, file: !3, line: 2573, column: 22)
!13975 = distinct !DILexicalBlock(scope: !13971, file: !3, line: 2573, column: 6)
!13976 = !DILocation(line: 407, column: 84, scope: !9014, inlinedAt: !13973)
!13977 = !DILocation(line: 327, column: 67, scope: !7102, inlinedAt: !13978)
!13978 = distinct !DILocation(line: 2574, column: 3, scope: !13979)
!13979 = distinct !DILexicalBlock(scope: !13980, file: !3, line: 2574, column: 3)
!13980 = distinct !DILexicalBlock(scope: !13981, file: !3, line: 2574, column: 3)
!13981 = distinct !DILexicalBlock(scope: !13982, file: !3, line: 2574, column: 3)
!13982 = distinct !DILexicalBlock(scope: !13983, file: !3, line: 2574, column: 3)
!13983 = distinct !DILexicalBlock(scope: !13974, file: !3, line: 2574, column: 3)
!13984 = !DILocalVariable(name: "info", arg: 1, scope: !13971, file: !3, line: 2568, type: !134)
!13985 = !DILocation(line: 2568, column: 46, scope: !13971)
!13986 = !DILocalVariable(name: "value", arg: 2, scope: !13971, file: !3, line: 2568, type: !126)
!13987 = !DILocation(line: 2568, column: 66, scope: !13971)
!13988 = !DILocalVariable(name: "card", scope: !13971, file: !3, line: 2570, type: !4229)
!13989 = !DILocation(line: 2570, column: 24, scope: !13971)
!13990 = !DILocation(line: 2570, column: 31, scope: !13971)
!13991 = !DILocation(line: 2570, column: 37, scope: !13971)
!13992 = !DILocalVariable(name: "flags", scope: !13971, file: !3, line: 2571, type: !126)
!13993 = !DILocation(line: 2571, column: 16, scope: !13971)
!13994 = !DILocation(line: 2573, column: 15, scope: !13975)
!13995 = !DILocation(line: 2573, column: 7, scope: !13975)
!13996 = !DILocation(line: 2573, column: 6, scope: !13971)
!13997 = !DILocation(line: 2574, column: 3, scope: !13974)
!13998 = !DILocation(line: 2574, column: 3, scope: !13983)
!13999 = !DILocalVariable(name: "__dummy", scope: !14000, file: !3, line: 2574, type: !126)
!14000 = distinct !DILexicalBlock(scope: !13982, file: !3, line: 2574, column: 3)
!14001 = !DILocation(line: 2574, column: 3, scope: !14000)
!14002 = !DILocalVariable(name: "__dummy2", scope: !14000, file: !3, line: 2574, type: !126)
!14003 = !DILocation(line: 2574, column: 3, scope: !13982)
!14004 = !DILocation(line: 2574, column: 3, scope: !13981)
!14005 = !DILocation(line: 2574, column: 3, scope: !14006)
!14006 = distinct !DILexicalBlock(scope: !13981, file: !3, line: 2574, column: 3)
!14007 = !DILocalVariable(name: "__dummy", scope: !14008, file: !3, line: 2574, type: !126)
!14008 = distinct !DILexicalBlock(scope: !14009, file: !3, line: 2574, column: 3)
!14009 = distinct !DILexicalBlock(scope: !14006, file: !3, line: 2574, column: 3)
!14010 = !DILocation(line: 2574, column: 3, scope: !14008)
!14011 = !DILocalVariable(name: "__dummy2", scope: !14008, file: !3, line: 2574, type: !126)
!14012 = !DILocation(line: 2574, column: 3, scope: !14009)
!14013 = !DILocation(line: 2574, column: 3, scope: !13980)
!14014 = !{i32 -2141402015}
!14015 = !DILocation(line: 2574, column: 3, scope: !13979)
!14016 = !DILocation(line: 329, column: 10, scope: !7102, inlinedAt: !13978)
!14017 = !DILocation(line: 329, column: 16, scope: !7102, inlinedAt: !13978)
!14018 = !DILocation(line: 2575, column: 14, scope: !13974)
!14019 = !DILocation(line: 2575, column: 28, scope: !13974)
!14020 = !DILocation(line: 2575, column: 34, scope: !13974)
!14021 = !DILocation(line: 2575, column: 3, scope: !13974)
!14022 = !DILocation(line: 2576, column: 27, scope: !13974)
!14023 = !DILocation(line: 2576, column: 33, scope: !13974)
!14024 = !DILocation(line: 2576, column: 44, scope: !13974)
!14025 = !DILocation(line: 409, column: 2, scope: !9120, inlinedAt: !13973)
!14026 = !DILocation(line: 409, column: 2, scope: !9125, inlinedAt: !13973)
!14027 = !DILocation(line: 409, column: 2, scope: !9126, inlinedAt: !13973)
!14028 = !DILocation(line: 409, column: 2, scope: !9133, inlinedAt: !13973)
!14029 = !DILocation(line: 409, column: 2, scope: !9136, inlinedAt: !13973)
!14030 = !DILocation(line: 2577, column: 2, scope: !13974)
!14031 = !DILocation(line: 2578, column: 2, scope: !13971)
!14032 = distinct !DISubprogram(name: "get_lsr_info", scope: !3, file: !3, line: 2350, type: !14033, scopeLine: 2351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!14033 = !DISubroutineType(types: !14034)
!14034 = !{!139, !134, !2745}
!14035 = !DILocation(line: 407, column: 64, scope: !9014, inlinedAt: !14036)
!14036 = distinct !DILocation(line: 2360, column: 3, scope: !14037)
!14037 = distinct !DILexicalBlock(scope: !14038, file: !3, line: 2357, column: 22)
!14038 = distinct !DILexicalBlock(scope: !14032, file: !3, line: 2357, column: 6)
!14039 = !DILocation(line: 407, column: 84, scope: !9014, inlinedAt: !14036)
!14040 = !DILocation(line: 327, column: 67, scope: !7102, inlinedAt: !14041)
!14041 = distinct !DILocation(line: 2358, column: 3, scope: !14042)
!14042 = distinct !DILexicalBlock(scope: !14043, file: !3, line: 2358, column: 3)
!14043 = distinct !DILexicalBlock(scope: !14044, file: !3, line: 2358, column: 3)
!14044 = distinct !DILexicalBlock(scope: !14045, file: !3, line: 2358, column: 3)
!14045 = distinct !DILexicalBlock(scope: !14046, file: !3, line: 2358, column: 3)
!14046 = distinct !DILexicalBlock(scope: !14037, file: !3, line: 2358, column: 3)
!14047 = !DILocalVariable(name: "info", arg: 1, scope: !14032, file: !3, line: 2350, type: !134)
!14048 = !DILocation(line: 2350, column: 47, scope: !14032)
!14049 = !DILocalVariable(name: "value", arg: 2, scope: !14032, file: !3, line: 2350, type: !2745)
!14050 = !DILocation(line: 2350, column: 74, scope: !14032)
!14051 = !DILocalVariable(name: "card", scope: !14032, file: !3, line: 2352, type: !4229)
!14052 = !DILocation(line: 2352, column: 24, scope: !14032)
!14053 = !DILocation(line: 2352, column: 31, scope: !14032)
!14054 = !DILocation(line: 2352, column: 37, scope: !14032)
!14055 = !DILocalVariable(name: "result", scope: !14032, file: !3, line: 2353, type: !7)
!14056 = !DILocation(line: 2353, column: 15, scope: !14032)
!14057 = !DILocalVariable(name: "flags", scope: !14032, file: !3, line: 2354, type: !126)
!14058 = !DILocation(line: 2354, column: 16, scope: !14032)
!14059 = !DILocalVariable(name: "status", scope: !14032, file: !3, line: 2355, type: !1375)
!14060 = !DILocation(line: 2355, column: 5, scope: !14032)
!14061 = !DILocation(line: 2357, column: 15, scope: !14038)
!14062 = !DILocation(line: 2357, column: 7, scope: !14038)
!14063 = !DILocation(line: 2357, column: 6, scope: !14032)
!14064 = !DILocation(line: 2358, column: 3, scope: !14037)
!14065 = !DILocation(line: 2358, column: 3, scope: !14046)
!14066 = !DILocalVariable(name: "__dummy", scope: !14067, file: !3, line: 2358, type: !126)
!14067 = distinct !DILexicalBlock(scope: !14045, file: !3, line: 2358, column: 3)
!14068 = !DILocation(line: 2358, column: 3, scope: !14067)
!14069 = !DILocalVariable(name: "__dummy2", scope: !14067, file: !3, line: 2358, type: !126)
!14070 = !DILocation(line: 2358, column: 3, scope: !14045)
!14071 = !DILocation(line: 2358, column: 3, scope: !14044)
!14072 = !DILocation(line: 2358, column: 3, scope: !14073)
!14073 = distinct !DILexicalBlock(scope: !14044, file: !3, line: 2358, column: 3)
!14074 = !DILocalVariable(name: "__dummy", scope: !14075, file: !3, line: 2358, type: !126)
!14075 = distinct !DILexicalBlock(scope: !14076, file: !3, line: 2358, column: 3)
!14076 = distinct !DILexicalBlock(scope: !14073, file: !3, line: 2358, column: 3)
!14077 = !DILocation(line: 2358, column: 3, scope: !14075)
!14078 = !DILocalVariable(name: "__dummy2", scope: !14075, file: !3, line: 2358, type: !126)
!14079 = !DILocation(line: 2358, column: 3, scope: !14076)
!14080 = !DILocation(line: 2358, column: 3, scope: !14043)
!14081 = !{i32 -2141412549}
!14082 = !DILocation(line: 2358, column: 3, scope: !14042)
!14083 = !DILocation(line: 329, column: 10, scope: !7102, inlinedAt: !14041)
!14084 = !DILocation(line: 329, column: 16, scope: !7102, inlinedAt: !14041)
!14085 = !DILocation(line: 2359, column: 22, scope: !14037)
!14086 = !DILocation(line: 2359, column: 12, scope: !14037)
!14087 = !DILocation(line: 2359, column: 36, scope: !14037)
!14088 = !DILocation(line: 2359, column: 10, scope: !14037)
!14089 = !DILocation(line: 2360, column: 27, scope: !14037)
!14090 = !DILocation(line: 2360, column: 33, scope: !14037)
!14091 = !DILocation(line: 2360, column: 44, scope: !14037)
!14092 = !DILocation(line: 409, column: 2, scope: !9120, inlinedAt: !14036)
!14093 = !DILocation(line: 409, column: 2, scope: !9125, inlinedAt: !14036)
!14094 = !DILocation(line: 409, column: 2, scope: !9126, inlinedAt: !14036)
!14095 = !DILocation(line: 409, column: 2, scope: !9133, inlinedAt: !14036)
!14096 = !DILocation(line: 409, column: 2, scope: !9136, inlinedAt: !14036)
!14097 = !DILocation(line: 2361, column: 13, scope: !14037)
!14098 = !DILocation(line: 2361, column: 10, scope: !14037)
!14099 = !DILocation(line: 2362, column: 2, scope: !14037)
!14100 = !DILocation(line: 2364, column: 3, scope: !14101)
!14101 = distinct !DILexicalBlock(scope: !14038, file: !3, line: 2362, column: 9)
!14102 = !DILocation(line: 2366, column: 9, scope: !14103)
!14103 = distinct !DILexicalBlock(scope: !14032, file: !3, line: 2366, column: 9)
!14104 = !DILocalVariable(name: "__ret_pu", scope: !14105, file: !3, line: 2366, type: !139)
!14105 = distinct !DILexicalBlock(scope: !14103, file: !3, line: 2366, column: 9)
!14106 = !DILocation(line: 2366, column: 9, scope: !14105)
!14107 = !DILocalVariable(name: "__ptr_pu", scope: !14105, file: !3, line: 2366, type: !118)
!14108 = !DILocalVariable(name: "__val_pu", scope: !14105, file: !3, line: 2366, type: !7)
!14109 = !{i32 -2141412086}
!14110 = !DILocation(line: 2366, column: 9, scope: !14032)
!14111 = !DILocation(line: 2366, column: 2, scope: !14032)
!14112 = !DILocation(line: 2367, column: 1, scope: !14032)
!14113 = distinct !DISubprogram(name: "cy_cflags_changed", scope: !3, file: !3, line: 2593, type: !14114, scopeLine: 2595, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!14114 = !DISubroutineType(types: !14115)
!14115 = !{!139, !134, !126, !14116}
!14116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4397, size: 64)
!14117 = !DILocation(line: 407, column: 64, scope: !9014, inlinedAt: !14118)
!14118 = distinct !DILocation(line: 2602, column: 2, scope: !14113)
!14119 = !DILocation(line: 407, column: 84, scope: !9014, inlinedAt: !14118)
!14120 = !DILocation(line: 327, column: 67, scope: !7102, inlinedAt: !14121)
!14121 = distinct !DILocation(line: 2600, column: 2, scope: !14122)
!14122 = distinct !DILexicalBlock(scope: !14123, file: !3, line: 2600, column: 2)
!14123 = distinct !DILexicalBlock(scope: !14124, file: !3, line: 2600, column: 2)
!14124 = distinct !DILexicalBlock(scope: !14125, file: !3, line: 2600, column: 2)
!14125 = distinct !DILexicalBlock(scope: !14126, file: !3, line: 2600, column: 2)
!14126 = distinct !DILexicalBlock(scope: !14113, file: !3, line: 2600, column: 2)
!14127 = !DILocalVariable(name: "info", arg: 1, scope: !14113, file: !3, line: 2593, type: !134)
!14128 = !DILocation(line: 2593, column: 52, scope: !14113)
!14129 = !DILocalVariable(name: "arg", arg: 2, scope: !14113, file: !3, line: 2593, type: !126)
!14130 = !DILocation(line: 2593, column: 72, scope: !14113)
!14131 = !DILocalVariable(name: "cprev", arg: 3, scope: !14113, file: !3, line: 2594, type: !14116)
!14132 = !DILocation(line: 2594, column: 27, scope: !14113)
!14133 = !DILocalVariable(name: "cnow", scope: !14113, file: !3, line: 2596, type: !4397)
!14134 = !DILocation(line: 2596, column: 25, scope: !14113)
!14135 = !DILocalVariable(name: "flags", scope: !14113, file: !3, line: 2597, type: !126)
!14136 = !DILocation(line: 2597, column: 16, scope: !14113)
!14137 = !DILocalVariable(name: "ret", scope: !14113, file: !3, line: 2598, type: !139)
!14138 = !DILocation(line: 2598, column: 6, scope: !14113)
!14139 = !DILocation(line: 2600, column: 2, scope: !14113)
!14140 = !DILocation(line: 2600, column: 2, scope: !14126)
!14141 = !DILocalVariable(name: "__dummy", scope: !14142, file: !3, line: 2600, type: !126)
!14142 = distinct !DILexicalBlock(scope: !14125, file: !3, line: 2600, column: 2)
!14143 = !DILocation(line: 2600, column: 2, scope: !14142)
!14144 = !DILocalVariable(name: "__dummy2", scope: !14142, file: !3, line: 2600, type: !126)
!14145 = !DILocation(line: 2600, column: 2, scope: !14125)
!14146 = !DILocation(line: 2600, column: 2, scope: !14124)
!14147 = !DILocation(line: 2600, column: 2, scope: !14148)
!14148 = distinct !DILexicalBlock(scope: !14124, file: !3, line: 2600, column: 2)
!14149 = !DILocalVariable(name: "__dummy", scope: !14150, file: !3, line: 2600, type: !126)
!14150 = distinct !DILexicalBlock(scope: !14151, file: !3, line: 2600, column: 2)
!14151 = distinct !DILexicalBlock(scope: !14148, file: !3, line: 2600, column: 2)
!14152 = !DILocation(line: 2600, column: 2, scope: !14150)
!14153 = !DILocalVariable(name: "__dummy2", scope: !14150, file: !3, line: 2600, type: !126)
!14154 = !DILocation(line: 2600, column: 2, scope: !14151)
!14155 = !DILocation(line: 2600, column: 2, scope: !14123)
!14156 = !{i32 -2141400164}
!14157 = !DILocation(line: 2600, column: 2, scope: !14122)
!14158 = !DILocation(line: 329, column: 10, scope: !7102, inlinedAt: !14121)
!14159 = !DILocation(line: 329, column: 16, scope: !7102, inlinedAt: !14121)
!14160 = !DILocation(line: 2601, column: 9, scope: !14113)
!14161 = !DILocation(line: 2601, column: 15, scope: !14113)
!14162 = !DILocation(line: 2602, column: 26, scope: !14113)
!14163 = !DILocation(line: 2602, column: 32, scope: !14113)
!14164 = !DILocation(line: 2602, column: 38, scope: !14113)
!14165 = !DILocation(line: 2602, column: 49, scope: !14113)
!14166 = !DILocation(line: 409, column: 2, scope: !9120, inlinedAt: !14118)
!14167 = !DILocation(line: 409, column: 2, scope: !9125, inlinedAt: !14118)
!14168 = !DILocation(line: 409, column: 2, scope: !9126, inlinedAt: !14118)
!14169 = !DILocation(line: 409, column: 2, scope: !9133, inlinedAt: !14118)
!14170 = !DILocation(line: 409, column: 2, scope: !9136, inlinedAt: !14118)
!14171 = !DILocation(line: 2604, column: 10, scope: !14113)
!14172 = !DILocation(line: 2604, column: 14, scope: !14113)
!14173 = !DILocation(line: 2604, column: 27, scope: !14113)
!14174 = !DILocation(line: 2604, column: 36, scope: !14113)
!14175 = !DILocation(line: 2604, column: 43, scope: !14113)
!14176 = !DILocation(line: 2604, column: 50, scope: !14113)
!14177 = !DILocation(line: 2604, column: 40, scope: !14113)
!14178 = !DILocation(line: 2604, column: 56, scope: !14113)
!14179 = !DILocation(line: 2605, column: 5, scope: !14113)
!14180 = !DILocation(line: 2605, column: 9, scope: !14113)
!14181 = !DILocation(line: 2605, column: 22, scope: !14113)
!14182 = !DILocation(line: 2605, column: 31, scope: !14113)
!14183 = !DILocation(line: 2605, column: 38, scope: !14113)
!14184 = !DILocation(line: 2605, column: 45, scope: !14113)
!14185 = !DILocation(line: 2605, column: 35, scope: !14113)
!14186 = !DILocation(line: 2605, column: 51, scope: !14113)
!14187 = !DILocation(line: 2606, column: 5, scope: !14113)
!14188 = !DILocation(line: 2606, column: 9, scope: !14113)
!14189 = !DILocation(line: 2606, column: 22, scope: !14113)
!14190 = !DILocation(line: 2606, column: 31, scope: !14113)
!14191 = !DILocation(line: 2606, column: 38, scope: !14113)
!14192 = !DILocation(line: 2606, column: 45, scope: !14113)
!14193 = !DILocation(line: 2606, column: 35, scope: !14113)
!14194 = !DILocation(line: 2606, column: 51, scope: !14113)
!14195 = !DILocation(line: 2607, column: 5, scope: !14113)
!14196 = !DILocation(line: 2607, column: 9, scope: !14113)
!14197 = !DILocation(line: 2607, column: 22, scope: !14113)
!14198 = !DILocation(line: 2607, column: 31, scope: !14113)
!14199 = !DILocation(line: 2607, column: 38, scope: !14113)
!14200 = !DILocation(line: 2607, column: 45, scope: !14113)
!14201 = !DILocation(line: 2607, column: 35, scope: !14113)
!14202 = !DILocation(line: 0, scope: !14113)
!14203 = !DILocation(line: 2604, column: 6, scope: !14113)
!14204 = !DILocation(line: 2609, column: 3, scope: !14113)
!14205 = !DILocation(line: 2609, column: 11, scope: !14113)
!14206 = !DILocation(line: 2611, column: 9, scope: !14113)
!14207 = !DILocation(line: 2611, column: 2, scope: !14113)
!14208 = distinct !DISubprogram(name: "copy_overflow", scope: !10688, file: !10688, line: 132, type: !14209, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!14209 = !DISubroutineType(types: !14210)
!14210 = !{null, !139, !126}
!14211 = !DILocalVariable(name: "size", arg: 1, scope: !14208, file: !10688, line: 132, type: !139)
!14212 = !DILocation(line: 132, column: 38, scope: !14208)
!14213 = !DILocalVariable(name: "count", arg: 2, scope: !14208, file: !10688, line: 132, type: !126)
!14214 = !DILocation(line: 132, column: 58, scope: !14208)
!14215 = !DILocalVariable(name: "__ret_warn_on", scope: !14216, file: !10688, line: 134, type: !139)
!14216 = distinct !DILexicalBlock(scope: !14208, file: !10688, line: 134, column: 2)
!14217 = !DILocation(line: 134, column: 2, scope: !14216)
!14218 = !DILocation(line: 134, column: 2, scope: !14219)
!14219 = distinct !DILexicalBlock(scope: !14216, file: !10688, line: 134, column: 2)
!14220 = !DILocation(line: 134, column: 2, scope: !14221)
!14221 = distinct !DILexicalBlock(scope: !14219, file: !10688, line: 134, column: 2)
!14222 = !DILocation(line: 134, column: 2, scope: !14223)
!14223 = distinct !DILexicalBlock(scope: !14221, file: !10688, line: 134, column: 2)
!14224 = !DILocation(line: 134, column: 2, scope: !14225)
!14225 = distinct !DILexicalBlock(scope: !14221, file: !10688, line: 134, column: 2)
!14226 = !DILocation(line: 134, column: 2, scope: !14227)
!14227 = distinct !DILexicalBlock(scope: !14225, file: !10688, line: 134, column: 2)
!14228 = !DILocation(line: 134, column: 2, scope: !14229)
!14229 = distinct !DILexicalBlock(scope: !14225, file: !10688, line: 134, column: 2)
!14230 = !{i32 -2145450608, i32 -2145450579, i32 -2145450533, i32 -2145450475, i32 -2145450421, i32 -2145450367, i32 -2145450312, i32 -2145450281}
!14231 = !DILocation(line: 134, column: 2, scope: !14232)
!14232 = distinct !DILexicalBlock(scope: !14225, file: !10688, line: 134, column: 2)
!14233 = !{i32 -2145449861, i32 -2145449854, i32 -2145449802, i32 -2145449771, i32 -2145449741}
!14234 = !DILocation(line: 134, column: 2, scope: !14235)
!14235 = distinct !DILexicalBlock(scope: !14225, file: !10688, line: 134, column: 2)
!14236 = !DILocation(line: 134, column: 2, scope: !14237)
!14237 = distinct !DILexicalBlock(scope: !14221, file: !10688, line: 134, column: 2)
!14238 = !DILocation(line: 135, column: 1, scope: !14208)
!14239 = distinct !DISubprogram(name: "check_object_size", scope: !10688, file: !10688, line: 122, type: !14240, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!14240 = !DISubroutineType(types: !14241)
!14241 = !{null, !2192, !126, !497}
!14242 = !DILocalVariable(name: "ptr", arg: 1, scope: !14239, file: !10688, line: 122, type: !2192)
!14243 = !DILocation(line: 122, column: 50, scope: !14239)
!14244 = !DILocalVariable(name: "n", arg: 2, scope: !14239, file: !10688, line: 122, type: !126)
!14245 = !DILocation(line: 122, column: 69, scope: !14239)
!14246 = !DILocalVariable(name: "to_user", arg: 3, scope: !14239, file: !10688, line: 123, type: !497)
!14247 = !DILocation(line: 123, column: 15, scope: !14239)
!14248 = !DILocation(line: 124, column: 3, scope: !14239)
!14249 = distinct !DISubprogram(name: "cy_send_xchar", scope: !3, file: !3, line: 2796, type: !3989, scopeLine: 2797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !217)
!14250 = !DILocalVariable(name: "tty", arg: 1, scope: !14249, file: !3, line: 2796, type: !233)
!14251 = !DILocation(line: 2796, column: 46, scope: !14249)
!14252 = !DILocalVariable(name: "ch", arg: 2, scope: !14249, file: !3, line: 2796, type: !119)
!14253 = !DILocation(line: 2796, column: 56, scope: !14249)
!14254 = !DILocalVariable(name: "info", scope: !14249, file: !3, line: 2798, type: !134)
!14255 = !DILocation(line: 2798, column: 24, scope: !14249)
!14256 = !DILocation(line: 2798, column: 31, scope: !14249)
!14257 = !DILocation(line: 2798, column: 36, scope: !14249)
!14258 = !DILocalVariable(name: "card", scope: !14249, file: !3, line: 2799, type: !4229)
!14259 = !DILocation(line: 2799, column: 24, scope: !14249)
!14260 = !DILocalVariable(name: "channel", scope: !14249, file: !3, line: 2800, type: !139)
!14261 = !DILocation(line: 2800, column: 6, scope: !14249)
!14262 = !DILocation(line: 2802, column: 28, scope: !14263)
!14263 = distinct !DILexicalBlock(scope: !14249, file: !3, line: 2802, column: 6)
!14264 = !DILocation(line: 2802, column: 34, scope: !14263)
!14265 = !DILocation(line: 2802, column: 39, scope: !14263)
!14266 = !DILocation(line: 2802, column: 6, scope: !14263)
!14267 = !DILocation(line: 2802, column: 6, scope: !14249)
!14268 = !DILocation(line: 2803, column: 3, scope: !14263)
!14269 = !DILocation(line: 2805, column: 17, scope: !14249)
!14270 = !DILocation(line: 2805, column: 2, scope: !14249)
!14271 = !DILocation(line: 2805, column: 8, scope: !14249)
!14272 = !DILocation(line: 2805, column: 15, scope: !14249)
!14273 = !DILocation(line: 2807, column: 6, scope: !14274)
!14274 = distinct !DILexicalBlock(scope: !14249, file: !3, line: 2807, column: 6)
!14275 = !DILocation(line: 2807, column: 6, scope: !14249)
!14276 = !DILocation(line: 2808, column: 12, scope: !14274)
!14277 = !DILocation(line: 2808, column: 3, scope: !14274)
!14278 = !DILocation(line: 2810, column: 9, scope: !14249)
!14279 = !DILocation(line: 2810, column: 15, scope: !14249)
!14280 = !DILocation(line: 2810, column: 7, scope: !14249)
!14281 = !DILocation(line: 2811, column: 12, scope: !14249)
!14282 = !DILocation(line: 2811, column: 18, scope: !14249)
!14283 = !DILocation(line: 2811, column: 25, scope: !14249)
!14284 = !DILocation(line: 2811, column: 31, scope: !14249)
!14285 = !DILocation(line: 2811, column: 23, scope: !14249)
!14286 = !DILocation(line: 2811, column: 10, scope: !14249)
!14287 = !DILocation(line: 2813, column: 14, scope: !14288)
!14288 = distinct !DILexicalBlock(scope: !14249, file: !3, line: 2813, column: 6)
!14289 = !DILocation(line: 2813, column: 6, scope: !14288)
!14290 = !DILocation(line: 2813, column: 6, scope: !14249)
!14291 = !DILocation(line: 2814, column: 7, scope: !14292)
!14292 = distinct !DILexicalBlock(scope: !14293, file: !3, line: 2814, column: 7)
!14293 = distinct !DILexicalBlock(scope: !14288, file: !3, line: 2813, column: 21)
!14294 = !DILocation(line: 2814, column: 13, scope: !14292)
!14295 = !DILocation(line: 2814, column: 10, scope: !14292)
!14296 = !DILocation(line: 2814, column: 7, scope: !14293)
!14297 = !DILocation(line: 2815, column: 18, scope: !14292)
!14298 = !DILocation(line: 2815, column: 24, scope: !14292)
!14299 = !DILocation(line: 2815, column: 4, scope: !14292)
!14300 = !DILocation(line: 2816, column: 12, scope: !14301)
!14301 = distinct !DILexicalBlock(scope: !14292, file: !3, line: 2816, column: 12)
!14302 = !DILocation(line: 2816, column: 18, scope: !14301)
!14303 = !DILocation(line: 2816, column: 15, scope: !14301)
!14304 = !DILocation(line: 2816, column: 12, scope: !14292)
!14305 = !DILocation(line: 2817, column: 18, scope: !14301)
!14306 = !DILocation(line: 2817, column: 24, scope: !14301)
!14307 = !DILocation(line: 2817, column: 4, scope: !14301)
!14308 = !DILocation(line: 2818, column: 2, scope: !14293)
!14309 = !DILocation(line: 2819, column: 1, scope: !14249)
